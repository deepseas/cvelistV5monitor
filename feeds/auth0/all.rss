<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for auth0 -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/auth0/all.rss</link>
    <description>The latest CVEs for auth0 -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Tue, 16 Jul 2024 23:23:46 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-23540|2024-07-16T16:23:36.527Z -- auth0 -- node-jsonwebtoken
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-23540</link>
      <description>In versions `&lt;=8.5.1` of `jsonwebtoken` library, lack of algorithm definition in the `jwt.verify()` function can lead to signature validation bypass due to defaulting to the `none` algorithm for signature verification. Users are affected if you do not specify algorithms in the `jwt.verify()` function. This issue has been fixed, please update to version 9.0.0 which removes the default support for the none algorithm in the `jwt.verify()` method. There will be no impact, if you update to version 9.0.0 and you don’t need to allow for the `none` algorithm. If you need 'none' algorithm, you have to explicitly specify that in `jwt.verify()` options.
</description>
      <guid isPermaLink="false">CVE-2022-23540|2024-07-16T16:23:36.527Z</guid>
      <pubDate>Thu, 22 Dec 2022 18:02:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6813|2024-07-10T07:36:43.632Z -- auth0 -- login%20by%20auth0</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6813</link>
      <description>The Login by Auth0 plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the ‘wle’ parameter in all versions up to, and including, 4.6.0 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description>
      <guid isPermaLink="false">CVE-2023-6813|2024-07-10T07:36:43.632Z</guid>
      <pubDate>Wed, 10 Jul 2024 07:36:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6813|2024-07-10T13:07:51.619Z -- auth0 -- login%20by%20auth0</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6813</link>
      <description>The Login by Auth0 plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the ‘wle’ parameter in all versions up to, and including, 4.6.0 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description>
      <guid isPermaLink="false">CVE-2023-6813|2024-07-10T13:07:51.619Z</guid>
      <pubDate>Wed, 10 Jul 2024 07:36:43 +0000</pubDate>
    </item>
  </channel>
</rss>

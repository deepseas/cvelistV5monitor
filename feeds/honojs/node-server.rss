<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for honojs -- node-server</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/honojs/node-server.rss</link>
    <description>The latest CVEs for honojs -- node-server</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Tue, 04 Jun 2024 17:29:26 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-23340|2024-01-22T23:00:34.510Z -- honojs -- node-server
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-23340</link>
      <description>@hono/node-server is an adapter that allows users to run Hono applications on Node.js. Since v1.3.0, @hono/node-server has used its own Request object with `url` behavior that is unexpected. In the standard API, if the URL contains `..`, here called "double dots", the URL string returned by Request will be in the resolved path. However, the `url` in @hono/node-server's Request as does not resolve double dots, so `http://localhost/static/.. /foo.txt` is returned. This causes vulnerabilities when using `serveStatic`. Modern web browsers and a latest `curl` command resolve double dots on the client side, so this issue doesn't affect those using either of those tools. However, problems may occur if accessed by a client that does not resolve them. Version 1.4.1 includes the change to fix this issue. As a workaround, don't use `serveStatic`.

</description>
      <guid isPermaLink="false">CVE-2024-23340|2024-01-22T23:00:34.510Z</guid>
      <pubDate>Mon, 22 Jan 2024 23:00:34 +0000</pubDate>
    </item>
  </channel>
</rss>

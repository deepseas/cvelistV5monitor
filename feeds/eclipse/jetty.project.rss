<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for eclipse -- jetty.project</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/eclipse/jetty.project.rss</link>
    <description>The latest CVEs for eclipse -- jetty.project</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 17:22:50 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-26048|2024-08-02T11:39:06.487Z -- eclipse -- jetty.project
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-26048</link>
      <description>Jetty is a java based web server and servlet engine. In affected versions servlets with multipart support (e.g. annotated with `@MultipartConfig`) that call `HttpServletRequest.getParameter()` or `HttpServletRequest.getParts()` may cause `OutOfMemoryError` when the client sends a multipart request with a part that has a name but no filename and very large content. This happens even with the default settings of `fileSizeThreshold=0` which should stream the whole part content to disk. An attacker client may send a large multipart request and cause the server to throw `OutOfMemoryError`. However, the server may be able to recover after the `OutOfMemoryError` and continue its service -- although it may take some time. This issue has been patched in versions 9.4.51, 10.0.14, and 11.0.14. Users are advised to upgrade. Users unable to upgrade may set the multipart parameter `maxRequestSize` which must be set to a non-negative value, so the whole multipart content is limited (although still read into memory).</description>
      <guid isPermaLink="false">CVE-2023-26048|2024-08-02T11:39:06.487Z</guid>
      <pubDate>Tue, 18 Apr 2023 20:30:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-36479|2024-08-02T16:45:57.116Z -- eclipse -- jetty.project
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-36479</link>
      <description>Eclipse Jetty Canonical Repository is the canonical repository for the Jetty project. Users of the CgiServlet with a very specific command structure may have the wrong command executed. If a user sends a request to a org.eclipse.jetty.servlets.CGI Servlet for a binary with a space in its name, the servlet will escape the command by wrapping it in quotation marks. This wrapped command, plus an optional command prefix, will then be executed through a call to Runtime.exec. If the original binary name provided by the user contains a quotation mark followed by a space, the resulting command line will contain multiple tokens instead of one. This issue was patched in version 9.4.52, 10.0.16, 11.0.16 and 12.0.0-beta2.
</description>
      <guid isPermaLink="false">CVE-2023-36479|2024-08-02T16:45:57.116Z</guid>
      <pubDate>Fri, 15 Sep 2023 18:37:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-26049|2024-08-02T11:39:06.483Z -- eclipse -- jetty.project
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-26049</link>
      <description>Jetty is a java based web server and servlet engine. Nonstandard cookie parsing in Jetty may allow an attacker to smuggle cookies within other cookies, or otherwise perform unintended behavior by tampering with the cookie parsing mechanism. If Jetty sees a cookie VALUE that starts with `"` (double quote), it will continue to read the cookie string until it sees a closing quote -- even if a semicolon is encountered. So, a cookie header such as: `DISPLAY_LANGUAGE="b; JSESSIONID=1337; c=d"` will be parsed as one cookie, with the name DISPLAY_LANGUAGE and a value of b; JSESSIONID=1337; c=d instead of 3 separate cookies. This has security implications because if, say, JSESSIONID is an HttpOnly cookie, and the DISPLAY_LANGUAGE cookie value is rendered on the page, an attacker can smuggle the JSESSIONID cookie into the DISPLAY_LANGUAGE cookie and thereby exfiltrate it. This is significant when an intermediary is enacting some policy based on cookies, so a smuggled cookie can bypass that policy yet still be seen by the Jetty server or its logging system. This issue has been addressed in versions 9.4.51, 10.0.14, 11.0.14, and 12.0.0.beta0 and users are advised to upgrade. There are no known workarounds for this issue.</description>
      <guid isPermaLink="false">CVE-2023-26049|2024-08-02T11:39:06.483Z</guid>
      <pubDate>Tue, 18 Apr 2023 20:35:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-36478|2024-08-02T16:45:57.038Z -- eclipse -- jetty.project
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-36478</link>
      <description>Eclipse Jetty provides a web server and servlet container. In versions 11.0.0 through 11.0.15, 10.0.0 through 10.0.15, and 9.0.0 through 9.4.52, an integer overflow in `MetaDataBuilder.checkSize` allows for HTTP/2 HPACK header values to
exceed their size limit. `MetaDataBuilder.java` determines if a header name or value exceeds the size limit, and throws an exception if the limit is exceeded. However, when length is very large and huffman is true, the multiplication by 4 in line 295
will overflow, and length will become negative. `(_size+length)` will now be negative, and the check on line 296 will not be triggered. Furthermore, `MetaDataBuilder.checkSize` allows for user-entered HPACK header value sizes to be negative, potentially leading to a very large buffer allocation later on when the user-entered size is multiplied by 2. This means that if a user provides a negative length value (or, more precisely, a length value which, when multiplied by the 4/3 fudge factor, is negative), and this length value is a very large positive number when multiplied by 2, then the user can cause a very large buffer to be allocated on the server. Users of HTTP/2 can be impacted by a remote denial of service attack. The issue has been fixed in versions 11.0.16, 10.0.16, and 9.4.53. There are no known workarounds.</description>
      <guid isPermaLink="false">CVE-2023-36478|2024-08-02T16:45:57.038Z</guid>
      <pubDate>Tue, 10 Oct 2023 16:53:07 +0000</pubDate>
    </item>
  </channel>
</rss>

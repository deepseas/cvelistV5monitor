<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for benjjvi -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/benjjvi/all.rss</link>
    <description>The latest CVEs for benjjvi -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 19:20:19 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-34249|2024-08-02T16:01:54.319Z -- benjjvi -- pybb
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-34249</link>
      <description>benjjvi/PyBB is an open source bulletin board. Prior to commit dcaeccd37198ecd3e41ea766d1099354b60d69c2, benjjvi/PyBB is vulnerable to SQL Injection. This vulnerability has been fixed as of commit dcaeccd37198ecd3e41ea766d1099354b60d69c2. As a workaround, a user may be able to update the software manually to avoid this problem by sanitizing user queries to `BulletinDatabaseModule.py`.</description>
      <guid isPermaLink="false">CVE-2023-34249|2024-08-02T16:01:54.319Z</guid>
      <pubDate>Tue, 13 Jun 2023 16:40:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-34461|2024-08-02T16:10:07.058Z -- benjjvi -- pybb
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-34461</link>
      <description>PyBB is an open source bulletin board. A manual code review of the PyBB bulletin board server has revealed that a vulnerability could have been exploited in which users could submit any type of HTML tag, and have said tag run. For example, a malicious `&lt;a&gt;` that looks like ```&lt;a href=javascript:alert (1)&gt;xss&lt;/a&gt;``` could have been used to run code through JavaScript on the client side. The problem has been patched as of commit `5defd92`, and users are advised to upgrade. Attackers do need posting privilege in order to exploit this vulnerability. This vulnerability is present within the 0.1.0 release, and users are advised to upgrade to 0.1.1. Users unable to upgrade may be able to work around the attack by either; Removing the ability to create posts, removing the `|safe` tag from the Jinja2 template titled "post.html" in templates or by adding manual validation of links in the post creation section.</description>
      <guid isPermaLink="false">CVE-2023-34461|2024-08-02T16:10:07.058Z</guid>
      <pubDate>Mon, 19 Jun 2023 17:02:13 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for github.com/go-resty/resty/v2 -- github.com/go-resty/resty/v2</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/github.com%2Fgo-resty%2Fresty%2Fv2/github.com%2Fgo-resty%2Fresty%2Fv2.rss</link>
    <description>The latest CVEs for github.com/go-resty/resty/v2 -- github.com/go-resty/resty/v2</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 12 Jun 2024 11:24:32 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-45286|2024-01-04T18:41:48.460Z -- github.com%2Fgo-resty%2Fresty%2Fv2 -- github.com%2Fgo-resty%2Fresty%2Fv2
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-45286</link>
      <description>A race condition in go-resty can result in HTTP request body disclosure across requests. This condition can be triggered by calling sync.Pool.Put with the same *bytes.Buffer more than once, when request retries are enabled and a retry occurs. The call to sync.Pool.Get will then return a bytes.Buffer that hasn't had bytes.Buffer.Reset called on it. This dirty buffer will contain the HTTP request body from an unrelated request, and go-resty will append the current HTTP request body to it, sending two bodies in one request. The sync.Pool in question is defined at package level scope, so a completely unrelated server could receive the request body.</description>
      <guid isPermaLink="false">CVE-2023-45286|2024-01-04T18:41:48.460Z</guid>
      <pubDate>Tue, 28 Nov 2023 16:31:21 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for nickboss -- WordPress File Upload</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/nickboss/wordpress%20file%20upload.rss</link>
    <description>The latest CVEs for nickboss -- WordPress File Upload</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 08:24:19 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-2688|2024-08-02T06:33:05.621Z -- nickboss -- wordpress%20file%20upload
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-2688</link>
      <description>The WordPress File Upload and WordPress File Upload Pro plugins for WordPress are vulnerable to Path Traversal in versions up to, and including, 4.19.1 via the vulnerable parameter wfu_newpath. This allows administrator-level attackers to move files uploaded with the plugin (located in wp-content/uploads by default) outside of the web root.</description>
      <guid isPermaLink="false">CVE-2023-2688|2024-08-02T06:33:05.621Z</guid>
      <pubDate>Fri, 09 Jun 2023 05:33:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2767|2024-08-02T06:33:05.343Z -- nickboss -- wordpress%20file%20upload
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-2767</link>
      <description>The WordPress File Upload and WordPress File Upload Pro plugins for WordPress are vulnerable to Stored Cross-Site Scripting via admin settings in versions up to, and including, 4.19.1 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with administrator-level permissions and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This only affects multi-site installations and installations where unfiltered_html has been disabled.</description>
      <guid isPermaLink="false">CVE-2023-2767|2024-08-02T06:33:05.343Z</guid>
      <pubDate>Fri, 09 Jun 2023 05:33:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5852|2024-08-01T21:25:03.088Z -- nickboss -- wordpress%20file%20upload</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5852</link>
      <description>The WordPress File Upload plugin for WordPress is vulnerable to Directory Traversal in all versions up to, and including, 4.24.7 via the 'uploadpath' parameter of the wordpress_file_upload shortcode. This makes it possible for authenticated attackers, with Contributor-level access and above, to upload limited files to arbitrary locations on the web server.</description>
      <guid isPermaLink="false">CVE-2024-5852|2024-08-01T21:25:03.088Z</guid>
      <pubDate>Tue, 16 Jul 2024 08:32:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5852|2024-07-16T11:08:52.593Z -- nickboss -- wordpress%20file%20upload</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5852</link>
      <description>The WordPress File Upload plugin for WordPress is vulnerable to Directory Traversal in all versions up to, and including, 4.24.7 via the 'uploadpath' parameter of the wordpress_file_upload shortcode. This makes it possible for authenticated attackers, with Contributor-level access and above, to upload limited files to arbitrary locations on the web server.</description>
      <guid isPermaLink="false">CVE-2024-5852|2024-07-16T11:08:52.593Z</guid>
      <pubDate>Tue, 16 Jul 2024 08:32:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2847|2024-06-04T17:29:40.154Z -- nickboss -- wordpress%20file%20upload</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2847</link>
      <description>The WordPress File Upload plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's shortcode(s) in all versions up to, and including, 4.24.5 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2024-2847|2024-06-04T17:29:40.154Z</guid>
      <pubDate>Tue, 09 Apr 2024 18:59:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5852|2024-07-16T08:32:30.395Z -- nickboss -- wordpress%20file%20upload</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5852</link>
      <description>The WordPress File Upload plugin for WordPress is vulnerable to Directory Traversal in all versions up to, and including, 4.24.7 via the 'uploadpath' parameter of the wordpress_file_upload shortcode. This makes it possible for authenticated attackers, with Contributor-level access and above, to upload limited files to arbitrary locations on the web server.</description>
      <guid isPermaLink="false">CVE-2024-5852|2024-07-16T08:32:30.395Z</guid>
      <pubDate>Tue, 16 Jul 2024 08:32:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2847|2024-08-01T19:25:42.100Z -- nickboss -- wordpress%20file%20upload</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2847</link>
      <description>The WordPress File Upload plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's shortcode(s) in all versions up to, and including, 4.24.5 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2024-2847|2024-08-01T19:25:42.100Z</guid>
      <pubDate>Tue, 09 Apr 2024 18:59:09 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for open-telemetry -- opentelemetry-go-contrib</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/open-telemetry/opentelemetry-go-contrib.rss</link>
    <description>The latest CVEs for open-telemetry -- opentelemetry-go-contrib</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 20:23:12 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-25151|2024-08-02T11:18:35.672Z -- open-telemetry -- opentelemetry-go-contrib
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-25151</link>
      <description>opentelemetry-go-contrib is a collection of extensions for OpenTelemetry-Go. The v0.38.0 release of `go.opentelemetry.io/contrib/instrumentation/net/http/otelhttp` uses the `httpconv.ServerRequest` function to annotate metric measurements for the `http.server.request_content_length`, `http.server.response_content_length`, and `http.server.duration` instruments. The `ServerRequest` function sets the `http.target` attribute value to be the whole request URI (including the query string)[^1]. The metric instruments do not "forget" previous measurement attributes when `cumulative` temporality is used, this means the cardinality of the measurements allocated is directly correlated with the unique URIs handled. If the query string is constantly random, this will result in a constant increase in memory allocation that can be used in a denial-of-service attack. This issue has been addressed in version 0.39.0. Users are advised to upgrade. There are no known workarounds for this issue.</description>
      <guid isPermaLink="false">CVE-2023-25151|2024-08-02T11:18:35.672Z</guid>
      <pubDate>Wed, 08 Feb 2023 19:21:37 +0000</pubDate>
    </item>
  </channel>
</rss>

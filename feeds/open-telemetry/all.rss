<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for open-telemetry -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/open-telemetry/all.rss</link>
    <description>The latest CVEs for open-telemetry -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 05 Jun 2024 22:22:10 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-36129|2024-06-05T17:26:13.903Z -- open-telemetry -- opentelemetry-collector</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-36129</link>
      <description>The OpenTelemetry Collector offers a vendor-agnostic implementation on how to receive, process and export telemetry data. An unsafe decompression vulnerability allows unauthenticated attackers to crash the collector via excessive memory consumption. OTel Collector version 0.102.1 fixes this issue.  It is also fixed in the confighttp module version 0.102.0 and configgrpc module version 0.102.1.</description>
      <guid isPermaLink="false">CVE-2024-36129|2024-06-05T17:26:13.903Z</guid>
      <pubDate>Wed, 05 Jun 2024 17:26:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-32028|2024-04-12T22:58:30.526Z -- open-telemetry -- opentelemetry-dotnet</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-32028</link>
      <description>OpenTelemetry dotnet is a dotnet telemetry framework. In affected versions of `OpenTelemetry.Instrumentation.Http` and `OpenTelemetry.Instrumentation.AspNetCore` the `url.full` writes attribute/tag on spans (`Activity`) when tracing is enabled for outgoing http requests and `OpenTelemetry.Instrumentation.AspNetCore` writes the `url.query` attribute/tag on spans (`Activity`) when tracing is enabled for incoming http requests. These attributes are defined by the Semantic Conventions for HTTP Spans. Up until version `1.8.1` the values written by `OpenTelemetry.Instrumentation.Http` &amp; `OpenTelemetry.Instrumentation.AspNetCore` will pass-through the raw query string as was sent or received (respectively). This may lead to sensitive information (e.g. EUII - End User Identifiable Information, credentials, etc.) being leaked into telemetry backends (depending on the application(s) being instrumented) which could cause privacy and/or security incidents. Note: Older versions of `OpenTelemetry.Instrumentation.Http` &amp; `OpenTelemetry.Instrumentation.AspNetCore` may use different tag names but have the same vulnerability. The `1.8.1` versions of `OpenTelemetry.Instrumentation.Http` &amp; `OpenTelemetry.Instrumentation.AspNetCore` will now redact by default all values detected on transmitted or received query strings. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-32028|2024-04-12T22:58:30.526Z</guid>
      <pubDate>Fri, 12 Apr 2024 22:58:30 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Drupal -- Core</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/drupal/core.rss</link>
    <description>The latest CVEs for Drupal -- Core</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 08:23:52 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-25275|2024-08-03T04:36:06.551Z -- drupal -- core
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-25275</link>
      <description>In some situations, the Image module does not correctly check access to image files not stored in the standard public files directory when generating derivative images using the image styles system. Access to a non-public file is checked only if it is stored in the "private" file system. However, some contributed modules provide additional file systems, or schemes, which may lead to this vulnerability. This vulnerability is mitigated by the fact that it only applies when the site sets (Drupal 9) $config['image.settings']['allow_insecure_derivatives'] or (Drupal 7) $conf['image_allow_insecure_derivatives'] to TRUE. The recommended and default setting is FALSE, and Drupal core does not provide a way to change that in the admin UI. Some sites may require configuration changes following this security release. Review the release notes for your Drupal version if you have issues accessing files or image styles after updating.</description>
      <guid isPermaLink="false">CVE-2022-25275|2024-08-03T04:36:06.551Z</guid>
      <pubDate>Wed, 26 Apr 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-25278|2024-08-03T04:36:06.827Z -- drupal -- core
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-25278</link>
      <description>Under certain circumstances, the Drupal core form API evaluates form element access incorrectly. This may lead to a user being able to alter data they should not have access to. No forms provided by Drupal core are known to be vulnerable. However, forms added through contributed or custom modules or themes may be affected.</description>
      <guid isPermaLink="false">CVE-2022-25278|2024-08-03T04:36:06.827Z</guid>
      <pubDate>Wed, 26 Apr 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-25274|2024-08-03T04:36:06.578Z -- drupal -- core
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-25274</link>
      <description>Drupal 9.3 implemented a generic entity access API for entity revisions. However, this API was not completely integrated with existing permissions, resulting in some possible access bypass for users who have access to use revisions of content generally, but who do not have access to individual items of node and media content. This vulnerability only affects sites using Drupal's revision system.</description>
      <guid isPermaLink="false">CVE-2022-25274|2024-08-03T04:36:06.578Z</guid>
      <pubDate>Wed, 26 Apr 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-25271|2024-08-03T04:36:06.718Z -- drupal -- core
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-25271</link>
      <description>Drupal core's form API has a vulnerability where certain contributed or custom modules' forms may be vulnerable to improper input validation. This could allow an attacker to inject disallowed values or overwrite data. Affected forms are uncommon, but in certain cases an attacker could alter critical or sensitive data.</description>
      <guid isPermaLink="false">CVE-2022-25271|2024-08-03T04:36:06.718Z</guid>
      <pubDate>Wed, 16 Feb 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-25277|2024-08-03T04:36:06.870Z -- drupal -- core
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-25277</link>
      <description>Drupal core sanitizes filenames with dangerous extensions upon upload (reference: SA-CORE-2020-012) and strips leading and trailing dots from filenames to prevent uploading server configuration files (reference: SA-CORE-2019-010). However, the protections for these two vulnerabilities previously did not work correctly together. As a result, if the site were configured to allow the upload of files with an htaccess extension, these files' filenames would not be properly sanitized. This could allow bypassing the protections provided by Drupal core's default .htaccess files and possible remote code execution on Apache web servers. This issue is mitigated by the fact that it requires a field administrator to explicitly configure a file field to allow htaccess as an extension (a restricted permission), or a contributed module or custom code that overrides allowed file uploads.</description>
      <guid isPermaLink="false">CVE-2022-25277|2024-08-03T04:36:06.870Z</guid>
      <pubDate>Wed, 26 Apr 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-25270|2024-08-03T04:36:06.648Z -- drupal -- core
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-25270</link>
      <description>The Quick Edit module does not properly check entity access in some circumstances. This could result in users with the "access in-place editing" permission viewing some content they are are not authorized to access. Sites are only affected if the QuickEdit module (which comes with the Standard profile) is installed.</description>
      <guid isPermaLink="false">CVE-2022-25270|2024-08-03T04:36:06.648Z</guid>
      <pubDate>Wed, 16 Feb 2022 23:15:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-25276|2024-08-03T04:36:06.683Z -- drupal -- core
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-25276</link>
      <description>The Media oEmbed iframe route does not properly validate the iframe domain setting, which allows embeds to be displayed in the context of the primary domain. Under certain circumstances, this could lead to cross-site scripting, leaked cookies, or other vulnerabilities.</description>
      <guid isPermaLink="false">CVE-2022-25276|2024-08-03T04:36:06.683Z</guid>
      <pubDate>Wed, 26 Apr 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-25273|2024-08-03T04:36:06.671Z -- drupal -- core
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-25273</link>
      <description>Drupal core's form API has a vulnerability where certain contributed or custom modules' forms may be vulnerable to improper input validation. This could allow an attacker to inject disallowed values or overwrite data. Affected forms are uncommon, but in certain cases an attacker could alter critical or sensitive data.</description>
      <guid isPermaLink="false">CVE-2022-25273|2024-08-03T04:36:06.671Z</guid>
      <pubDate>Wed, 26 Apr 2023 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>

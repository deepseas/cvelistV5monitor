<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Drupal -- Drupal Core</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/drupal/drupal%20core.rss</link>
    <description>The latest CVEs for Drupal -- Drupal Core</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Mon, 16 Sep 2024 18:25:10 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2017-6924|2024-09-16T16:57:56.911Z -- drupal -- drupal%20core
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2017-6924</link>
      <description>In Drupal 8 prior to 8.3.7; When using the REST API, users without the correct permission can post comments via REST that are approved even if the user does not have permission to post approved comments. This issue only affects sites that have the RESTful Web Services (rest) module enabled, the comment entity REST resource enabled, and where an attacker can access a user account on the site with permissions to post comments, or where anonymous users can post comments.</description>
      <guid isPermaLink="false">CVE-2017-6924|2024-09-16T16:57:56.911Z</guid>
      <pubDate>Tue, 15 Jan 2019 20:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2017-6923|2024-09-16T17:42:46.607Z -- drupal -- drupal%20core
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2017-6923</link>
      <description>In Drupal 8.x prior to 8.3.7 When creating a view, you can optionally use Ajax to update the displayed data via filter parameters. The views subsystem/module did not restrict access to the Ajax endpoint to only views configured to use Ajax. This is mitigated if you have access restrictions on the view. It is best practice to always include some form of access restrictions on all views, even if you are using another module to display them.</description>
      <guid isPermaLink="false">CVE-2017-6923|2024-09-16T17:42:46.607Z</guid>
      <pubDate>Tue, 22 Jan 2019 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-45440|2024-09-12T15:27:33.952572 -- drupal -- drupal%20core</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-45440</link>
      <description>core/authorize.php in Drupal 11.x-dev allows Full Path Disclosure (even when error logging is None) if the value of hash_salt is file_get_contents of a file that does not exist.</description>
      <guid isPermaLink="false">CVE-2024-45440|2024-09-12T15:27:33.952572</guid>
      <pubDate>Thu, 29 Aug 2024 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for PTC -- KEPServerEX</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/ptc/kepserverex.rss</link>
    <description>The latest CVEs for PTC -- KEPServerEX</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 12 Jun 2024 11:24:28 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-5908|2023-11-30T22:03:58.098Z -- ptc -- kepserverex
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5908</link>
      <description>




KEPServerEX is vulnerable to a buffer overflow which may allow an attacker to crash the product being accessed or leak information.




</description>
      <guid isPermaLink="false">CVE-2023-5908|2023-11-30T22:03:58.098Z</guid>
      <pubDate>Thu, 30 Nov 2023 22:03:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5909|2023-11-30T22:05:59.595Z -- ptc -- kepserverex
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5909</link>
      <description>








KEPServerEX does not properly validate certificates from clients which may allow unauthenticated users to connect.







</description>
      <guid isPermaLink="false">CVE-2023-5909|2023-11-30T22:05:59.595Z</guid>
      <pubDate>Thu, 30 Nov 2023 22:05:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3825|2023-07-31T22:53:56.568Z -- ptc -- kepserverex
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3825</link>
      <description>
PTCâ€™s KEPServerEX Versions 6.0 to 6.14.263 are vulnerable to being made to read a recursively defined object that leads to uncontrolled resource consumption. KEPServerEX uses OPC UA, a protocol which defines various object types that can be nested to create complex arrays. It does not implement a check to see if such an object is recursively defined, so an attack could send a maliciously created message that the decoder would try to decode until the stack overflowed and the device crashed.

</description>
      <guid isPermaLink="false">CVE-2023-3825|2023-07-31T22:53:56.568Z</guid>
      <pubDate>Mon, 31 Jul 2023 22:53:56 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for ethyca -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/ethyca/all.rss</link>
    <description>The latest CVEs for ethyca -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Thu, 29 Aug 2024 21:22:30 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-48224|2024-08-29T15:02:52.052Z -- ethyca -- fides
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-48224</link>
      <description>Fides is an open-source privacy engineering platform for managing the fulfillment of data privacy requests in a runtime environment, and the enforcement of privacy regulations in code. The Fides Privacy Center allows data subject users to submit privacy and consent requests to data controller users of the Fides web application. Privacy requests allow data subjects to submit a request to access all person data held by the data controller, or delete/erase it.  Consent request allows data subject users to modify their privacy preferences for how the data controller uses their personal data e.g. data sales and sharing consent opt-in/opt-out. If `subject_identity_verification_required` in the `[execution]` section of `fides.toml` or the env var `FIDES__EXECUTION__SUBJECT_IDENTITY_VERIFICATION_REQUIRED` is set to `True` on the fides webserver backend, data subjects are sent a one-time code to their email address or phone number, depending on messaging configuration, and the one-time code must be entered in the Privacy Center UI by the data subject before the privacy or consent request is submitted. It was identified that the one-time code values for these requests were generated by the python `random` module, a cryptographically weak pseduo-random number generator (PNRG). If an attacker generates several hundred consecutive one-time codes, this vulnerability allows the attacker to predict all future one-time code values during the lifetime of the backend python process. There is no security impact on data access requests as the personal data download package is not shared in the Privacy Center itself. However, this vulnerability allows an attacker to (i) submit a verified data erasure request, resulting in deletion of data for the targeted user and (ii) submit a verified consent request, modifying a user's privacy preferences. The vulnerability has been patched in Fides version `2.24.0`. Users are advised to upgrade to this version or later to secure their systems against this threat. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-48224|2024-08-29T15:02:52.052Z</guid>
      <pubDate>Wed, 15 Nov 2023 20:53:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-38537|2024-08-02T04:12:24.976Z -- ethyca -- fides</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-38537</link>
      <description>Fides is an open-source privacy engineering platform. `fides.js`, a client-side script used to interact with the consent management features of Fides, used the `polyfill.io` domain in a very limited edge case, when it detected a legacy browser such as IE11 that did not support the fetch standard. Therefore it was possible for users of legacy, pre-2017 browsers who navigate to a page serving `fides.js` to download and execute malicious scripts from the `polyfill.io` domain when the domain was compromised and serving malware. No exploitation of `fides.js` via `polyfill.io` has been identified as of time of publication.

The vulnerability has been patched in Fides version `2.39.1`. Users are advised to upgrade to this version or later to secure their systems against this threat. On Thursday, June 27, 2024, Cloudflare and Namecheap intervened at a domain level to ensure `polyfill.io` and its subdomains could not resolve to the compromised service, rendering this vulnerability unexploitable. Prior to the domain level intervention, there were no server-side workarounds and the confidentiality, integrity, and availability impacts of this vulnerability were high. Clients could ensure they were not affected by using a modern browser that supported the fetch standard.</description>
      <guid isPermaLink="false">CVE-2024-38537|2024-08-02T04:12:24.976Z</guid>
      <pubDate>Tue, 02 Jul 2024 19:50:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34715|2024-08-02T02:59:22.619Z -- ethyca -- fides</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34715</link>
      <description>Fides is an open-source privacy engineering platform. The Fides webserver requires a connection to a hosted PostgreSQL database for persistent storage of application data. If the password used by the webserver for this database connection includes special characters such as `@` and `$`, webserver startup fails and the part of the password following the special character is exposed in webserver error logs. This is caused by improper escaping of the SQLAlchemy password string. As a result users are subject to a partial exposure of hosted database password in webserver logs. The vulnerability has been patched in Fides version `2.37.0`. Users are advised to upgrade to this version or later to secure their systems against this threat. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-34715|2024-08-02T02:59:22.619Z</guid>
      <pubDate>Wed, 29 May 2024 16:35:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31223|2024-07-22T18:20:30.888Z -- ethyca -- fides</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-31223</link>
      <description>Fides is an open-source privacy engineering platform, and `SERVER_SIDE_FIDES_API_URL` is a server-side configuration environment variable used by the Fides Privacy Center to communicate with the Fides webserver backend. The value of this variable is a URL which typically includes a private IP address, private domain name, and/or port. A vulnerability present starting in version 2.19.0 and prior to version 2.39.2rc0 allows an unauthenticated attacker to make a HTTP GET request from the Privacy Center that discloses the value of this server-side URL. This could result in disclosure of server-side configuration giving an attacker information on server-side ports, private IP addresses, and/or private domain names. The vulnerability has been patched in Fides version 2.39.2rc0. No known workarounds are available.</description>
      <guid isPermaLink="false">CVE-2024-31223|2024-07-22T18:20:30.888Z</guid>
      <pubDate>Wed, 03 Jul 2024 17:34:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31223|2024-07-03T17:34:48.508Z -- ethyca -- fides</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-31223</link>
      <description>Fides is an open-source privacy engineering platform, and `SERVER_SIDE_FIDES_API_URL` is a server-side configuration environment variable used by the Fides Privacy Center to communicate with the Fides webserver backend. The value of this variable is a URL which typically includes a private IP address, private domain name, and/or port. A vulnerability present starting in version 2.19.0 and prior to version 2.39.2rc0 allows an unauthenticated attacker to make a HTTP GET request from the Privacy Center that discloses the value of this server-side URL. This could result in disclosure of server-side configuration giving an attacker information on server-side ports, private IP addresses, and/or private domain names. The vulnerability has been patched in Fides version 2.39.2rc0. No known workarounds are available.</description>
      <guid isPermaLink="false">CVE-2024-31223|2024-07-03T17:34:48.508Z</guid>
      <pubDate>Wed, 03 Jul 2024 17:34:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-38537|2024-07-02T19:50:10.275Z -- ethyca -- fides</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-38537</link>
      <description>Fides is an open-source privacy engineering platform. `fides.js`, a client-side script used to interact with the consent management features of Fides, used the `polyfill.io` domain in a very limited edge case, when it detected a legacy browser such as IE11 that did not support the fetch standard. Therefore it was possible for users of legacy, pre-2017 browsers who navigate to a page serving `fides.js` to download and execute malicious scripts from the `polyfill.io` domain when the domain was compromised and serving malware. No exploitation of `fides.js` via `polyfill.io` has been identified as of time of publication.

The vulnerability has been patched in Fides version `2.39.1`. Users are advised to upgrade to this version or later to secure their systems against this threat. On Thursday, June 27, 2024, Cloudflare and Namecheap intervened at a domain level to ensure `polyfill.io` and its subdomains could not resolve to the compromised service, rendering this vulnerability unexploitable. Prior to the domain level intervention, there were no server-side workarounds and the confidentiality, integrity, and availability impacts of this vulnerability were high. Clients could ensure they were not affected by using a modern browser that supported the fetch standard.</description>
      <guid isPermaLink="false">CVE-2024-38537|2024-07-02T19:50:10.275Z</guid>
      <pubDate>Tue, 02 Jul 2024 19:50:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34715|2024-06-04T17:42:17.727Z -- ethyca -- fides</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-34715</link>
      <description>Fides is an open-source privacy engineering platform. The Fides webserver requires a connection to a hosted PostgreSQL database for persistent storage of application data. If the password used by the webserver for this database connection includes special characters such as `@` and `$`, webserver startup fails and the part of the password following the special character is exposed in webserver error logs. This is caused by improper escaping of the SQLAlchemy password string. As a result users are subject to a partial exposure of hosted database password in webserver logs. The vulnerability has been patched in Fides version `2.37.0`. Users are advised to upgrade to this version or later to secure their systems against this threat. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-34715|2024-06-04T17:42:17.727Z</guid>
      <pubDate>Wed, 29 May 2024 16:35:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-35189|2024-05-30T19:47:43.080Z -- ethyca -- fides</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35189</link>
      <description>Fides is an open-source privacy engineering platform. The Fides webserver has a number of endpoints that retrieve `ConnectionConfiguration` records and their associated `secrets` which _can_ contain sensitive data (e.g. passwords, private keys, etc.). These `secrets` are stored encrypted at rest (in the application database), and the associated endpoints are not meant to expose that sensitive data in plaintext to API clients, as it could be compromising. Fides's developers have available to them a Pydantic field-attribute (`sensitive`) that they can annotate as `True` to indicate that a given secret field should not be exposed via the API. The application has an internal function that uses `sensitive` annotations to mask the sensitive fields with a `"**********"` placeholder value. This vulnerability is due to a bug in that function, which prevented `sensitive` API model fields that were _nested_ below the root-level of a `secrets` object from being masked appropriately. Only the `BigQuery` connection configuration secrets meets these criteria: the secrets schema has a nested sensitive `keyfile_creds.private_key` property that is exposed in plaintext via the APIs. Connection types other than `BigQuery` with sensitive fields at the root-level that are not nested are properly masked with the placeholder and are not affected by this vulnerability. This vulnerability has been patched in Fides version 2.37.0. Users are advised to upgrade to this version or later to secure their systems against this threat. Users are also advised to rotate any Google Cloud secrets used for BigQuery integrations in their Fides deployments. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-35189|2024-05-30T19:47:43.080Z</guid>
      <pubDate>Thu, 30 May 2024 19:47:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-35189|2024-06-12T20:38:18.435Z -- ethyca -- fides</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35189</link>
      <description>Fides is an open-source privacy engineering platform. The Fides webserver has a number of endpoints that retrieve `ConnectionConfiguration` records and their associated `secrets` which _can_ contain sensitive data (e.g. passwords, private keys, etc.). These `secrets` are stored encrypted at rest (in the application database), and the associated endpoints are not meant to expose that sensitive data in plaintext to API clients, as it could be compromising. Fides's developers have available to them a Pydantic field-attribute (`sensitive`) that they can annotate as `True` to indicate that a given secret field should not be exposed via the API. The application has an internal function that uses `sensitive` annotations to mask the sensitive fields with a `"**********"` placeholder value. This vulnerability is due to a bug in that function, which prevented `sensitive` API model fields that were _nested_ below the root-level of a `secrets` object from being masked appropriately. Only the `BigQuery` connection configuration secrets meets these criteria: the secrets schema has a nested sensitive `keyfile_creds.private_key` property that is exposed in plaintext via the APIs. Connection types other than `BigQuery` with sensitive fields at the root-level that are not nested are properly masked with the placeholder and are not affected by this vulnerability. This vulnerability has been patched in Fides version 2.37.0. Users are advised to upgrade to this version or later to secure their systems against this threat. Users are also advised to rotate any Google Cloud secrets used for BigQuery integrations in their Fides deployments. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-35189|2024-06-12T20:38:18.435Z</guid>
      <pubDate>Thu, 30 May 2024 19:47:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-38537|2024-07-02T20:11:44.703Z -- ethyca -- fides</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-38537</link>
      <description>Fides is an open-source privacy engineering platform. `fides.js`, a client-side script used to interact with the consent management features of Fides, used the `polyfill.io` domain in a very limited edge case, when it detected a legacy browser such as IE11 that did not support the fetch standard. Therefore it was possible for users of legacy, pre-2017 browsers who navigate to a page serving `fides.js` to download and execute malicious scripts from the `polyfill.io` domain when the domain was compromised and serving malware. No exploitation of `fides.js` via `polyfill.io` has been identified as of time of publication.

The vulnerability has been patched in Fides version `2.39.1`. Users are advised to upgrade to this version or later to secure their systems against this threat. On Thursday, June 27, 2024, Cloudflare and Namecheap intervened at a domain level to ensure `polyfill.io` and its subdomains could not resolve to the compromised service, rendering this vulnerability unexploitable. Prior to the domain level intervention, there were no server-side workarounds and the confidentiality, integrity, and availability impacts of this vulnerability were high. Clients could ensure they were not affected by using a modern browser that supported the fetch standard.</description>
      <guid isPermaLink="false">CVE-2024-38537|2024-07-02T20:11:44.703Z</guid>
      <pubDate>Tue, 02 Jul 2024 19:50:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31223|2024-07-22T16:42:56.165Z -- ethyca -- fides</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-31223</link>
      <description>Fides is an open-source privacy engineering platform, and `SERVER_SIDE_FIDES_API_URL` is a server-side configuration environment variable used by the Fides Privacy Center to communicate with the Fides webserver backend. The value of this variable is a URL which typically includes a private IP address, private domain name, and/or port. A vulnerability present starting in version 2.19.0 and prior to version 2.39.2rc0 allows an unauthenticated attacker to make a HTTP GET request from the Privacy Center that discloses the value of this server-side URL. This could result in disclosure of server-side configuration giving an attacker information on server-side ports, private IP addresses, and/or private domain names. The vulnerability has been patched in Fides version 2.39.2rc0. No known workarounds are available.</description>
      <guid isPermaLink="false">CVE-2024-31223|2024-07-22T16:42:56.165Z</guid>
      <pubDate>Wed, 03 Jul 2024 17:34:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31223|2024-08-02T01:46:04.901Z -- ethyca -- fides</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-31223</link>
      <description>Fides is an open-source privacy engineering platform, and `SERVER_SIDE_FIDES_API_URL` is a server-side configuration environment variable used by the Fides Privacy Center to communicate with the Fides webserver backend. The value of this variable is a URL which typically includes a private IP address, private domain name, and/or port. A vulnerability present starting in version 2.19.0 and prior to version 2.39.2rc0 allows an unauthenticated attacker to make a HTTP GET request from the Privacy Center that discloses the value of this server-side URL. This could result in disclosure of server-side configuration giving an attacker information on server-side ports, private IP addresses, and/or private domain names. The vulnerability has been patched in Fides version 2.39.2rc0. No known workarounds are available.</description>
      <guid isPermaLink="false">CVE-2024-31223|2024-08-02T01:46:04.901Z</guid>
      <pubDate>Wed, 03 Jul 2024 17:34:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-35189|2024-08-02T03:07:46.734Z -- ethyca -- fides</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-35189</link>
      <description>Fides is an open-source privacy engineering platform. The Fides webserver has a number of endpoints that retrieve `ConnectionConfiguration` records and their associated `secrets` which _can_ contain sensitive data (e.g. passwords, private keys, etc.). These `secrets` are stored encrypted at rest (in the application database), and the associated endpoints are not meant to expose that sensitive data in plaintext to API clients, as it could be compromising. Fides's developers have available to them a Pydantic field-attribute (`sensitive`) that they can annotate as `True` to indicate that a given secret field should not be exposed via the API. The application has an internal function that uses `sensitive` annotations to mask the sensitive fields with a `"**********"` placeholder value. This vulnerability is due to a bug in that function, which prevented `sensitive` API model fields that were _nested_ below the root-level of a `secrets` object from being masked appropriately. Only the `BigQuery` connection configuration secrets meets these criteria: the secrets schema has a nested sensitive `keyfile_creds.private_key` property that is exposed in plaintext via the APIs. Connection types other than `BigQuery` with sensitive fields at the root-level that are not nested are properly masked with the placeholder and are not affected by this vulnerability. This vulnerability has been patched in Fides version 2.37.0. Users are advised to upgrade to this version or later to secure their systems against this threat. Users are also advised to rotate any Google Cloud secrets used for BigQuery integrations in their Fides deployments. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-35189|2024-08-02T03:07:46.734Z</guid>
      <pubDate>Thu, 30 May 2024 19:47:43 +0000</pubDate>
    </item>
  </channel>
</rss>

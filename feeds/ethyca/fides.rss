<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for ethyca -- fides</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/ethyca/fides.rss</link>
    <description>The latest CVEs for ethyca -- fides</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Thu, 26 Sep 2024 20:23:58 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-41319|2024-09-26T19:31:57.634Z -- ethyca -- fides
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-41319</link>
      <description>Fides is an open-source privacy engineering platform for managing the fulfillment of data privacy requests in a runtime environment, and the enforcement of privacy regulations in code. The Fides webserver API allows custom integrations to be uploaded as a ZIP file. This ZIP file must contain YAML files, but Fides can be configured to also accept the inclusion of custom Python code in it. The custom code is executed in a restricted, sandboxed environment, but the sandbox can be bypassed to execute any arbitrary code. The vulnerability allows the execution of arbitrary code on the target system within the context of the webserver python process owner on the webserver container, which by default is `root`, and leverage that access to attack underlying infrastructure and integrated systems. This vulnerability affects Fides versions `2.11.0` through `2.19.0`. Exploitation is limited to API clients with the `CONNECTOR_TEMPLATE_REGISTER` authorization scope. In the Fides Admin UI this scope is restricted to highly privileged users, specifically root users and users with the owner role.  Exploitation is only possible if the security configuration parameter `allow_custom_connector_functions` is enabled by the user deploying the Fides webserver container, either in `fides.toml` or by setting the env var `FIDES__SECURITY__ALLOW_CUSTOM_CONNECTOR_FUNCTIONS=True`. By default this configuration parameter is disabled. The vulnerability has been patched in Fides version `2.19.0`. Users are advised to upgrade to this version or later to secure their systems against this threat. Users unable to upgrade should ensure that `allow_custom_connector_functions` in `fides.toml` and the `FIDES__SECURITY__ALLOW_CUSTOM_CONNECTOR_FUNCTIONS` are both either unset or explicit set to `False`.</description>
      <guid isPermaLink="false">CVE-2023-41319|2024-09-26T19:31:57.634Z</guid>
      <pubDate>Wed, 06 Sep 2023 17:54:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-45052|2024-09-04T15:43:52.056Z -- ethyca -- fides</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-45052</link>
      <description>Fides is an open-source privacy engineering platform. Prior to version 2.44.0, a timing-based username enumeration vulnerability exists in Fides Webserver authentication. This vulnerability allows an unauthenticated attacker to determine the existence of valid usernames by analyzing the time it takes for the server to respond to login requests. The discrepancy in response times between valid and invalid usernames can be leveraged to enumerate users on the system. This vulnerability enables a timing-based username enumeration attack. An attacker can systematically guess and verify which usernames are valid by measuring the server's response time to authentication requests. This information can be used to conduct further attacks on authentication such as password brute-forcing and credential stuffing. The vulnerability has been patched in Fides version `2.44.0`. Users are advised to upgrade to this version or later to secure their systems against this threat. There are no workarounds.</description>
      <guid isPermaLink="false">CVE-2024-45052|2024-09-04T15:43:52.056Z</guid>
      <pubDate>Wed, 04 Sep 2024 15:43:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-38537|2024-08-02T04:12:24.976Z -- ethyca -- fides</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-38537</link>
      <description>Fides is an open-source privacy engineering platform. `fides.js`, a client-side script used to interact with the consent management features of Fides, used the `polyfill.io` domain in a very limited edge case, when it detected a legacy browser such as IE11 that did not support the fetch standard. Therefore it was possible for users of legacy, pre-2017 browsers who navigate to a page serving `fides.js` to download and execute malicious scripts from the `polyfill.io` domain when the domain was compromised and serving malware. No exploitation of `fides.js` via `polyfill.io` has been identified as of time of publication.

The vulnerability has been patched in Fides version `2.39.1`. Users are advised to upgrade to this version or later to secure their systems against this threat. On Thursday, June 27, 2024, Cloudflare and Namecheap intervened at a domain level to ensure `polyfill.io` and its subdomains could not resolve to the compromised service, rendering this vulnerability unexploitable. Prior to the domain level intervention, there were no server-side workarounds and the confidentiality, integrity, and availability impacts of this vulnerability were high. Clients could ensure they were not affected by using a modern browser that supported the fetch standard.</description>
      <guid isPermaLink="false">CVE-2024-38537|2024-08-02T04:12:24.976Z</guid>
      <pubDate>Tue, 02 Jul 2024 19:50:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34715|2024-08-02T02:59:22.619Z -- ethyca -- fides</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34715</link>
      <description>Fides is an open-source privacy engineering platform. The Fides webserver requires a connection to a hosted PostgreSQL database for persistent storage of application data. If the password used by the webserver for this database connection includes special characters such as `@` and `$`, webserver startup fails and the part of the password following the special character is exposed in webserver error logs. This is caused by improper escaping of the SQLAlchemy password string. As a result users are subject to a partial exposure of hosted database password in webserver logs. The vulnerability has been patched in Fides version `2.37.0`. Users are advised to upgrade to this version or later to secure their systems against this threat. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-34715|2024-08-02T02:59:22.619Z</guid>
      <pubDate>Wed, 29 May 2024 16:35:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31223|2024-07-22T18:20:30.888Z -- ethyca -- fides</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-31223</link>
      <description>Fides is an open-source privacy engineering platform, and `SERVER_SIDE_FIDES_API_URL` is a server-side configuration environment variable used by the Fides Privacy Center to communicate with the Fides webserver backend. The value of this variable is a URL which typically includes a private IP address, private domain name, and/or port. A vulnerability present starting in version 2.19.0 and prior to version 2.39.2rc0 allows an unauthenticated attacker to make a HTTP GET request from the Privacy Center that discloses the value of this server-side URL. This could result in disclosure of server-side configuration giving an attacker information on server-side ports, private IP addresses, and/or private domain names. The vulnerability has been patched in Fides version 2.39.2rc0. No known workarounds are available.</description>
      <guid isPermaLink="false">CVE-2024-31223|2024-07-22T18:20:30.888Z</guid>
      <pubDate>Wed, 03 Jul 2024 17:34:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31223|2024-07-03T17:34:48.508Z -- ethyca -- fides</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-31223</link>
      <description>Fides is an open-source privacy engineering platform, and `SERVER_SIDE_FIDES_API_URL` is a server-side configuration environment variable used by the Fides Privacy Center to communicate with the Fides webserver backend. The value of this variable is a URL which typically includes a private IP address, private domain name, and/or port. A vulnerability present starting in version 2.19.0 and prior to version 2.39.2rc0 allows an unauthenticated attacker to make a HTTP GET request from the Privacy Center that discloses the value of this server-side URL. This could result in disclosure of server-side configuration giving an attacker information on server-side ports, private IP addresses, and/or private domain names. The vulnerability has been patched in Fides version 2.39.2rc0. No known workarounds are available.</description>
      <guid isPermaLink="false">CVE-2024-31223|2024-07-03T17:34:48.508Z</guid>
      <pubDate>Wed, 03 Jul 2024 17:34:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-38537|2024-07-02T19:50:10.275Z -- ethyca -- fides</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-38537</link>
      <description>Fides is an open-source privacy engineering platform. `fides.js`, a client-side script used to interact with the consent management features of Fides, used the `polyfill.io` domain in a very limited edge case, when it detected a legacy browser such as IE11 that did not support the fetch standard. Therefore it was possible for users of legacy, pre-2017 browsers who navigate to a page serving `fides.js` to download and execute malicious scripts from the `polyfill.io` domain when the domain was compromised and serving malware. No exploitation of `fides.js` via `polyfill.io` has been identified as of time of publication.

The vulnerability has been patched in Fides version `2.39.1`. Users are advised to upgrade to this version or later to secure their systems against this threat. On Thursday, June 27, 2024, Cloudflare and Namecheap intervened at a domain level to ensure `polyfill.io` and its subdomains could not resolve to the compromised service, rendering this vulnerability unexploitable. Prior to the domain level intervention, there were no server-side workarounds and the confidentiality, integrity, and availability impacts of this vulnerability were high. Clients could ensure they were not affected by using a modern browser that supported the fetch standard.</description>
      <guid isPermaLink="false">CVE-2024-38537|2024-07-02T19:50:10.275Z</guid>
      <pubDate>Tue, 02 Jul 2024 19:50:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34715|2024-06-04T17:42:17.727Z -- ethyca -- fides</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-34715</link>
      <description>Fides is an open-source privacy engineering platform. The Fides webserver requires a connection to a hosted PostgreSQL database for persistent storage of application data. If the password used by the webserver for this database connection includes special characters such as `@` and `$`, webserver startup fails and the part of the password following the special character is exposed in webserver error logs. This is caused by improper escaping of the SQLAlchemy password string. As a result users are subject to a partial exposure of hosted database password in webserver logs. The vulnerability has been patched in Fides version `2.37.0`. Users are advised to upgrade to this version or later to secure their systems against this threat. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-34715|2024-06-04T17:42:17.727Z</guid>
      <pubDate>Wed, 29 May 2024 16:35:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-35189|2024-05-30T19:47:43.080Z -- ethyca -- fides</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35189</link>
      <description>Fides is an open-source privacy engineering platform. The Fides webserver has a number of endpoints that retrieve `ConnectionConfiguration` records and their associated `secrets` which _can_ contain sensitive data (e.g. passwords, private keys, etc.). These `secrets` are stored encrypted at rest (in the application database), and the associated endpoints are not meant to expose that sensitive data in plaintext to API clients, as it could be compromising. Fides's developers have available to them a Pydantic field-attribute (`sensitive`) that they can annotate as `True` to indicate that a given secret field should not be exposed via the API. The application has an internal function that uses `sensitive` annotations to mask the sensitive fields with a `"**********"` placeholder value. This vulnerability is due to a bug in that function, which prevented `sensitive` API model fields that were _nested_ below the root-level of a `secrets` object from being masked appropriately. Only the `BigQuery` connection configuration secrets meets these criteria: the secrets schema has a nested sensitive `keyfile_creds.private_key` property that is exposed in plaintext via the APIs. Connection types other than `BigQuery` with sensitive fields at the root-level that are not nested are properly masked with the placeholder and are not affected by this vulnerability. This vulnerability has been patched in Fides version 2.37.0. Users are advised to upgrade to this version or later to secure their systems against this threat. Users are also advised to rotate any Google Cloud secrets used for BigQuery integrations in their Fides deployments. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-35189|2024-05-30T19:47:43.080Z</guid>
      <pubDate>Thu, 30 May 2024 19:47:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-35189|2024-06-12T20:38:18.435Z -- ethyca -- fides</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35189</link>
      <description>Fides is an open-source privacy engineering platform. The Fides webserver has a number of endpoints that retrieve `ConnectionConfiguration` records and their associated `secrets` which _can_ contain sensitive data (e.g. passwords, private keys, etc.). These `secrets` are stored encrypted at rest (in the application database), and the associated endpoints are not meant to expose that sensitive data in plaintext to API clients, as it could be compromising. Fides's developers have available to them a Pydantic field-attribute (`sensitive`) that they can annotate as `True` to indicate that a given secret field should not be exposed via the API. The application has an internal function that uses `sensitive` annotations to mask the sensitive fields with a `"**********"` placeholder value. This vulnerability is due to a bug in that function, which prevented `sensitive` API model fields that were _nested_ below the root-level of a `secrets` object from being masked appropriately. Only the `BigQuery` connection configuration secrets meets these criteria: the secrets schema has a nested sensitive `keyfile_creds.private_key` property that is exposed in plaintext via the APIs. Connection types other than `BigQuery` with sensitive fields at the root-level that are not nested are properly masked with the placeholder and are not affected by this vulnerability. This vulnerability has been patched in Fides version 2.37.0. Users are advised to upgrade to this version or later to secure their systems against this threat. Users are also advised to rotate any Google Cloud secrets used for BigQuery integrations in their Fides deployments. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-35189|2024-06-12T20:38:18.435Z</guid>
      <pubDate>Thu, 30 May 2024 19:47:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-38537|2024-07-02T20:11:44.703Z -- ethyca -- fides</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-38537</link>
      <description>Fides is an open-source privacy engineering platform. `fides.js`, a client-side script used to interact with the consent management features of Fides, used the `polyfill.io` domain in a very limited edge case, when it detected a legacy browser such as IE11 that did not support the fetch standard. Therefore it was possible for users of legacy, pre-2017 browsers who navigate to a page serving `fides.js` to download and execute malicious scripts from the `polyfill.io` domain when the domain was compromised and serving malware. No exploitation of `fides.js` via `polyfill.io` has been identified as of time of publication.

The vulnerability has been patched in Fides version `2.39.1`. Users are advised to upgrade to this version or later to secure their systems against this threat. On Thursday, June 27, 2024, Cloudflare and Namecheap intervened at a domain level to ensure `polyfill.io` and its subdomains could not resolve to the compromised service, rendering this vulnerability unexploitable. Prior to the domain level intervention, there were no server-side workarounds and the confidentiality, integrity, and availability impacts of this vulnerability were high. Clients could ensure they were not affected by using a modern browser that supported the fetch standard.</description>
      <guid isPermaLink="false">CVE-2024-38537|2024-07-02T20:11:44.703Z</guid>
      <pubDate>Tue, 02 Jul 2024 19:50:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31223|2024-07-22T16:42:56.165Z -- ethyca -- fides</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-31223</link>
      <description>Fides is an open-source privacy engineering platform, and `SERVER_SIDE_FIDES_API_URL` is a server-side configuration environment variable used by the Fides Privacy Center to communicate with the Fides webserver backend. The value of this variable is a URL which typically includes a private IP address, private domain name, and/or port. A vulnerability present starting in version 2.19.0 and prior to version 2.39.2rc0 allows an unauthenticated attacker to make a HTTP GET request from the Privacy Center that discloses the value of this server-side URL. This could result in disclosure of server-side configuration giving an attacker information on server-side ports, private IP addresses, and/or private domain names. The vulnerability has been patched in Fides version 2.39.2rc0. No known workarounds are available.</description>
      <guid isPermaLink="false">CVE-2024-31223|2024-07-22T16:42:56.165Z</guid>
      <pubDate>Wed, 03 Jul 2024 17:34:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31223|2024-08-02T01:46:04.901Z -- ethyca -- fides</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-31223</link>
      <description>Fides is an open-source privacy engineering platform, and `SERVER_SIDE_FIDES_API_URL` is a server-side configuration environment variable used by the Fides Privacy Center to communicate with the Fides webserver backend. The value of this variable is a URL which typically includes a private IP address, private domain name, and/or port. A vulnerability present starting in version 2.19.0 and prior to version 2.39.2rc0 allows an unauthenticated attacker to make a HTTP GET request from the Privacy Center that discloses the value of this server-side URL. This could result in disclosure of server-side configuration giving an attacker information on server-side ports, private IP addresses, and/or private domain names. The vulnerability has been patched in Fides version 2.39.2rc0. No known workarounds are available.</description>
      <guid isPermaLink="false">CVE-2024-31223|2024-08-02T01:46:04.901Z</guid>
      <pubDate>Wed, 03 Jul 2024 17:34:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-35189|2024-08-02T03:07:46.734Z -- ethyca -- fides</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-35189</link>
      <description>Fides is an open-source privacy engineering platform. The Fides webserver has a number of endpoints that retrieve `ConnectionConfiguration` records and their associated `secrets` which _can_ contain sensitive data (e.g. passwords, private keys, etc.). These `secrets` are stored encrypted at rest (in the application database), and the associated endpoints are not meant to expose that sensitive data in plaintext to API clients, as it could be compromising. Fides's developers have available to them a Pydantic field-attribute (`sensitive`) that they can annotate as `True` to indicate that a given secret field should not be exposed via the API. The application has an internal function that uses `sensitive` annotations to mask the sensitive fields with a `"**********"` placeholder value. This vulnerability is due to a bug in that function, which prevented `sensitive` API model fields that were _nested_ below the root-level of a `secrets` object from being masked appropriately. Only the `BigQuery` connection configuration secrets meets these criteria: the secrets schema has a nested sensitive `keyfile_creds.private_key` property that is exposed in plaintext via the APIs. Connection types other than `BigQuery` with sensitive fields at the root-level that are not nested are properly masked with the placeholder and are not affected by this vulnerability. This vulnerability has been patched in Fides version 2.37.0. Users are advised to upgrade to this version or later to secure their systems against this threat. Users are also advised to rotate any Google Cloud secrets used for BigQuery integrations in their Fides deployments. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-35189|2024-08-02T03:07:46.734Z</guid>
      <pubDate>Thu, 30 May 2024 19:47:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-45052|2024-09-04T16:19:47.481Z -- ethyca -- fides</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-45052</link>
      <description>Fides is an open-source privacy engineering platform. Prior to version 2.44.0, a timing-based username enumeration vulnerability exists in Fides Webserver authentication. This vulnerability allows an unauthenticated attacker to determine the existence of valid usernames by analyzing the time it takes for the server to respond to login requests. The discrepancy in response times between valid and invalid usernames can be leveraged to enumerate users on the system. This vulnerability enables a timing-based username enumeration attack. An attacker can systematically guess and verify which usernames are valid by measuring the server's response time to authentication requests. This information can be used to conduct further attacks on authentication such as password brute-forcing and credential stuffing. The vulnerability has been patched in Fides version `2.44.0`. Users are advised to upgrade to this version or later to secure their systems against this threat. There are no workarounds.</description>
      <guid isPermaLink="false">CVE-2024-45052|2024-09-04T16:19:47.481Z</guid>
      <pubDate>Wed, 04 Sep 2024 15:43:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-45053|2024-09-04T16:04:03.741Z -- ethyca -- fides</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-45053</link>
      <description>Fides is an open-source privacy engineering platform. Starting in version 2.19.0 and prior to version 2.44.0, the Email Templating feature uses Jinja2 without proper input sanitization or rendering environment restrictions, allowing for Server-Side Template Injection that grants Remote Code Execution to privileged users. A privileged user refers to an Admin UI user with the default `Owner` or `Contributor` role, who can escalate their access and execute code on the underlying Fides Webserver container where the Jinja template rendering function is executed. The vulnerability has been patched in Fides version `2.44.0`. Users are advised to upgrade to this version or later to secure their systems against this threat. There are no workarounds.</description>
      <guid isPermaLink="false">CVE-2024-45053|2024-09-04T16:04:03.741Z</guid>
      <pubDate>Wed, 04 Sep 2024 16:04:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-45053|2024-09-04T18:02:37.351Z -- ethyca -- fides</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-45053</link>
      <description>Fides is an open-source privacy engineering platform. Starting in version 2.19.0 and prior to version 2.44.0, the Email Templating feature uses Jinja2 without proper input sanitization or rendering environment restrictions, allowing for Server-Side Template Injection that grants Remote Code Execution to privileged users. A privileged user refers to an Admin UI user with the default `Owner` or `Contributor` role, who can escalate their access and execute code on the underlying Fides Webserver container where the Jinja template rendering function is executed. The vulnerability has been patched in Fides version `2.44.0`. Users are advised to upgrade to this version or later to secure their systems against this threat. There are no workarounds.</description>
      <guid isPermaLink="false">CVE-2024-45053|2024-09-04T18:02:37.351Z</guid>
      <pubDate>Wed, 04 Sep 2024 16:04:03 +0000</pubDate>
    </item>
  </channel>
</rss>

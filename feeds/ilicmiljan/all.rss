<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>CVE Feed for IlicMiljan -- all</title><link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/ilicmiljan/all.rss</link><description>The latest CVEs for IlicMiljan -- all</description><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><lastBuildDate>Fri, 31 May 2024 16:28:21 +0000</lastBuildDate><ttl>60</ttl><item><title>CVE-2024-28864|2024-03-18T21:50:26.926Z -- IlicMiljan -- Secure-Props
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28864</link><description>SecureProps is a PHP library designed to simplify the encryption and decryption of property data in objects. A vulnerability in SecureProps version 1.2.0 and 1.2.1 involves a regex failing to detect tags during decryption of encrypted data. This occurs when the encrypted data has been encoded with `NullEncoder` and passed to `TagAwareCipher`, and contains special characters such as `\n`. As a result, the decryption process is skipped since the tags are not detected. This causes the encrypted data to be returned in plain format.  The vulnerability affects users who implement `TagAwareCipher` with any base cipher that has `NullEncoder` (not default). The patch for the issue has been released. Users are advised to update to version 1.2.2. As a workaround, one may use the default `Base64Encoder` with the base cipher decorated with `TagAwareCipher` to prevent special characters in the encrypted string from interfering with regex tag detection logic.  This workaround is safe but may involve double encoding since `TagAwareCipher` uses `NullEncoder` by default.</description><guid isPermaLink="false">CVE-2024-28864|2024-03-18T21:50:26.926Z</guid><pubDate>Mon, 18 Mar 2024 21:49:06 +0000</pubDate></item></channel></rss>
<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for fastify -- fastify-passport</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/fastify/fastify-passport.rss</link>
    <description>The latest CVEs for fastify -- fastify-passport</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 20:23:34 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-29020|2024-08-02T14:00:14.369Z -- fastify -- fastify-passport
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-29020</link>
      <description>@fastify/passport is a port of passport authentication library for the Fastify ecosystem. The CSRF (Cross-Site Request Forger) protection enforced by the `@fastify/csrf-protection` library, when combined with `@fastify/passport` in affected versions, can be bypassed by network and same-site attackers. `fastify/csrf-protection` implements the synchronizer token pattern (using plugins `@fastify/session` and `@fastify/secure-session`) by storing a random value used for CSRF token generation in the `_csrf` attribute of a user's session. The `@fastify/passport` library does not clear the session object upon authentication, preserving the `_csrf` attribute between pre-login and authenticated sessions. Consequently, CSRF tokens generated before authentication are still valid. Network and same-site attackers can thus obtain a CSRF token for their pre-session, fixate that pre-session in the victim's browser via cookie tossing, and then perform a CSRF attack after the victim authenticates. As a solution, newer versions of `@fastify/passport` include the configuration options: `clearSessionOnLogin (default: true)` and `clearSessionIgnoreFields (default: ['passport', 'session'])` to clear all the session attributes by default, preserving those explicitly defined in `clearSessionIgnoreFields`.</description>
      <guid isPermaLink="false">CVE-2023-29020|2024-08-02T14:00:14.369Z</guid>
      <pubDate>Fri, 21 Apr 2023 22:31:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-29019|2024-08-02T14:00:14.380Z -- fastify -- fastify-passport
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-29019</link>
      <description>@fastify/passport is a port of passport authentication library for the Fastify ecosystem. Applications using `@fastify/passport` in affected versions for user authentication, in combination with `@fastify/session` as the underlying session management mechanism, are vulnerable to session fixation attacks from network and same-site attackers. fastify applications rely on the `@fastify/passport` library for user authentication. The login and user validation are performed by the `authenticate` function. When executing this function, the `sessionId` is preserved between the pre-login and the authenticated session. Network and same-site attackers can hijack the victim's session by tossing a valid `sessionId` cookie in the victim's browser and waiting for the victim to log in on the website. As a solution, newer versions of `@fastify/passport` regenerate `sessionId` upon login, preventing the attacker-controlled pre-session cookie from being upgraded to an authenticated session. Users are advised to upgrade. There are no known workarounds for this vulnerability.
</description>
      <guid isPermaLink="false">CVE-2023-29019|2024-08-02T14:00:14.380Z</guid>
      <pubDate>Fri, 21 Apr 2023 22:28:55 +0000</pubDate>
    </item>
  </channel>
</rss>

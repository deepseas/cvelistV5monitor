<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for OpenOLAT -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/openolat/all.rss</link>
    <description>The latest CVEs for OpenOLAT -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 11:20:14 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2021-41152|2024-08-04T02:59:31.617Z -- openolat -- openolat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-41152</link>
      <description>OpenOlat is a web-based e-learning platform for teaching, learning, assessment and communication, an LMS, a learning management system. In affected versions by manipulating the HTTP request an attacker can modify the path of a requested file download in the folder component to point to anywhere on the target system. The attack could be used to read any file accessible in the web root folder or outside, depending on the configuration of the system and the properly configured permission of the application server user. The attack requires an OpenOlat user account or the enabled guest user feature together with the usage of the folder component in a course. The attack does not allow writing of arbitrary files, it allows only reading of files and also only ready of files that the attacker knows the exact path which is very unlikely at least for OpenOlat data files. The problem is fixed in version 15.5.8 and 16.0.1 It is advised to upgrade to version 16.0.x. There are no known workarounds to fix this problem, an upgrade is necessary.</description>
      <guid isPermaLink="false">CVE-2021-41152|2024-08-04T02:59:31.617Z</guid>
      <pubDate>Mon, 18 Oct 2021 20:55:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-39180|2024-08-04T01:58:18.226Z -- openolat -- openolat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-39180</link>
      <description>OpenOLAT is a web-based learning management system (LMS). A path traversal vulnerability exists in versions prior to 15.3.18, 15.5.3, and 16.0.0. Using a specially prepared ZIP file, it is possible to overwrite any file that is writable by the application server user (e.g. the tomcat user). Depending on the configuration this can be limited to files of the OpenOlat user data directory, however, if not properly set up, the attack could also be used to overwrite application server config files, java code or even operating system files. The attack could be used to corrupt or modify any OpenOlat file such as course structures, config files or temporary test data. Those attack would require in-depth knowledge of the installation and thus more theoretical. If the app server configuration allows the execution of jsp files and the path to the context is known, it is also possible to execute java code. If the app server runs with the same user that is used to deploy the OpenOlat code or has write permissions on the OpenOlat code files and the path to the context is know, code injection is possible. The attack requires an OpenOlat user account to upload a ZIP file and trigger the unzip method. It can not be exploited by unregistered users. The problem is fixed in versions 15.3.18, 15.5.3 and 16.0.0. There are no known workarounds aside from upgrading.</description>
      <guid isPermaLink="false">CVE-2021-39180|2024-08-04T01:58:18.226Z</guid>
      <pubDate>Tue, 31 Aug 2021 17:55:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-41242|2024-08-04T03:08:31.500Z -- openolat -- openolat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-41242</link>
      <description>OpenOlat is a web-basedlearning management system. A path traversal vulnerability exists in OpenOlat prior to versions 15.5.12 and 16.0.5. By providing a filename that contains a relative path as a parameter in some REST methods, it is possible to create directory structures and write files anywhere on the target system. The attack could be used to write files anywhere in the web root folder or outside, depending on the configuration of the system and the properly configured permission of the application server user. The attack requires an OpenOlat user account, an enabled REST API and the rights on a business object to call the vulnerable REST calls. The problem is fixed in version 15.5.12 and 16.0.5. There is a workaround available. The vulnerability requires the REST module to be enabled. Disabling the REST module or limiting the REST module via some firewall or web-server access rules to be accessed only be trusted systems will mitigate the risk.</description>
      <guid isPermaLink="false">CVE-2021-41242|2024-08-04T03:08:31.500Z</guid>
      <pubDate>Fri, 10 Dec 2021 22:25:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-39181|2024-08-04T01:58:18.230Z -- openolat -- openolat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-39181</link>
      <description>OpenOlat is a web-based learning management system (LMS). Prior to version 15.3.18, 15.5.3, and 16.0.0, using a prepared import XML file (e.g. a course) any class on the Java classpath can be instantiated, including spring AOP bean factories. This can be used to execute code arbitrary code by the attacker. The attack requires an OpenOlat user account with the authoring role. It can not be exploited by unregistered users. The problem is fixed in versions 15.3.18, 15.5.3, and 16.0.0. There are no known workarounds aside from upgrading.</description>
      <guid isPermaLink="false">CVE-2021-39181|2024-08-04T01:58:18.230Z</guid>
      <pubDate>Wed, 01 Sep 2021 19:45:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28198|2024-08-02T00:48:49.441Z -- openolat -- openolat</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-28198</link>
      <description>OpenOlat is an open source web-based e-learning platform for teaching, learning, assessment and communication. By manually manipulating http requests when using the draw.io integration it is possible to read arbitrary files as the configured system user and SSRF. The problem is fixed in version 18.1.6 and 18.2.2. It is advised to upgrade to the latest version of 18.1.x or 18.2.x. Users unable to upgrade may work around this issue by disabling the Draw.io module or the entire REST API which will secure the system.</description>
      <guid isPermaLink="false">CVE-2024-28198|2024-08-02T00:48:49.441Z</guid>
      <pubDate>Mon, 11 Mar 2024 19:38:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28198|2024-06-04T18:03:59.212Z -- openolat -- openolat</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28198</link>
      <description>OpenOlat is an open source web-based e-learning platform for teaching, learning, assessment and communication. By manually manipulating http requests when using the draw.io integration it is possible to read arbitrary files as the configured system user and SSRF. The problem is fixed in version 18.1.6 and 18.2.2. It is advised to upgrade to the latest version of 18.1.x or 18.2.x. Users unable to upgrade may work around this issue by disabling the Draw.io module or the entire REST API which will secure the system.</description>
      <guid isPermaLink="false">CVE-2024-28198|2024-06-04T18:03:59.212Z</guid>
      <pubDate>Mon, 11 Mar 2024 19:38:26 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for FuelLabs -- fuels-ts</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/fuellabs/fuels-ts.rss</link>
    <description>The latest CVEs for FuelLabs -- fuels-ts</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 05:23:14 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-41945|2024-08-02T04:54:31.279Z -- fuellabs -- fuels-ts
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-41945</link>
      <description>fuels-ts is a library for interacting with Fuel v2.  The typescript SDK has no awareness of to-be-spent transactions causing some transactions to fail or silently get pruned as they are funded with already used UTXOs. The problem occurs, because the `fund` function in `fuels-ts/packages/account/src/account.ts` gets the needed ressources statelessly with the function `getResourcesToSpend` without taking into consideration already used UTXOs. This issue will lead to unexpected SDK behaviour, such as a transaction not getting included in the `txpool` / in a block or a previous transaction silently getting removed from the `txpool` and replaced with a new one.</description>
      <guid isPermaLink="false">CVE-2024-41945|2024-08-02T04:54:31.279Z</guid>
      <pubDate>Tue, 30 Jul 2024 19:42:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-41945|2024-07-30T19:42:06.663Z -- fuellabs -- fuels-ts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-41945</link>
      <description>fuels-ts is a library for interacting with Fuel v2.  The typescript SDK has no awareness of to-be-spent transactions causing some transactions to fail or silently get pruned as they are funded with already used UTXOs. The problem occurs, because the `fund` function in `fuels-ts/packages/account/src/account.ts` gets the needed ressources statelessly with the function `getResourcesToSpend` without taking into consideration already used UTXOs. This issue will lead to unexpected SDK behaviour, such as a transaction not getting included in the `txpool` / in a block or a previous transaction silently getting removed from the `txpool` and replaced with a new one.</description>
      <guid isPermaLink="false">CVE-2024-41945|2024-07-30T19:42:06.663Z</guid>
      <pubDate>Tue, 30 Jul 2024 19:42:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-41945|2024-07-31T14:19:53.955Z -- fuellabs -- fuels-ts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-41945</link>
      <description>fuels-ts is a library for interacting with Fuel v2.  The typescript SDK has no awareness of to-be-spent transactions causing some transactions to fail or silently get pruned as they are funded with already used UTXOs. The problem occurs, because the `fund` function in `fuels-ts/packages/account/src/account.ts` gets the needed ressources statelessly with the function `getResourcesToSpend` without taking into consideration already used UTXOs. This issue will lead to unexpected SDK behaviour, such as a transaction not getting included in the `txpool` / in a block or a previous transaction silently getting removed from the `txpool` and replaced with a new one.</description>
      <guid isPermaLink="false">CVE-2024-41945|2024-07-31T14:19:53.955Z</guid>
      <pubDate>Tue, 30 Jul 2024 19:42:06 +0000</pubDate>
    </item>
  </channel>
</rss>

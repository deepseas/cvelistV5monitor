<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Canonical -- apport</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/canonical/apport.rss</link>
    <description>The latest CVEs for Canonical -- apport</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Mon, 05 Aug 2024 20:22:58 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2019-15790|2024-08-05T00:56:22.465Z -- canonical -- apport
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-15790</link>
      <description>Apport reads and writes information on a crashed process to /proc/pid with elevated privileges. Apport then determines which user the crashed process belongs to by reading /proc/pid through get_pid_info() in data/apport. An unprivileged user could exploit this to read information about a privileged running process by exploiting PID recycling. This information could then be used to obtain ASLR offsets for a process with an existing memory corruption vulnerability. The initial fix introduced regressions in the Python Apport library due to a missing argument in Report.add_proc_environ in apport/report.py. It also caused an autopkgtest failure when reading /proc/pid and with Python 2 compatibility by reading /proc maps. The initial and subsequent regression fixes are in 2.20.11-0ubuntu16, 2.20.11-0ubuntu8.6, 2.20.9-0ubuntu7.12, 2.20.1-0ubuntu2.22 and 2.14.1-0ubuntu3.29+esm3.</description>
      <guid isPermaLink="false">CVE-2019-15790|2024-08-05T00:56:22.465Z</guid>
      <pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Canonical -- apport</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/canonical/apport.rss</link>
    <description>The latest CVEs for Canonical -- apport</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 17:22:00 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2020-8833|2024-08-04T10:12:10.622Z -- canonical -- apport
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-8833</link>
      <description>Time-of-check Time-of-use Race Condition vulnerability on crash report ownership change in Apport allows for a possible privilege escalation opportunity. If fs.protected_symlinks is disabled, this can be exploited between the os.open and os.chown calls when the Apport cron script clears out crash files of size 0. A symlink with the same name as the deleted file can then be created upon which chown will be called, changing the file owner to root. Fixed in versions 2.20.1-0ubuntu2.23, 2.20.9-0ubuntu7.14, 2.20.11-0ubuntu8.8 and 2.20.11-0ubuntu22.</description>
      <guid isPermaLink="false">CVE-2020-8833|2024-08-04T10:12:10.622Z</guid>
      <pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-15702|2024-08-04T13:22:30.693Z -- canonical -- apport
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-15702</link>
      <description>TOCTOU Race Condition vulnerability in apport allows a local attacker to escalate privileges and execute arbitrary code. An attacker may exit the crashed process and exploit PID recycling to spawn a root process with the same PID as the crashed process, which can then be used to escalate privileges. Fixed in 2.20.1-0ubuntu2.24, 2.20.9 versions prior to 2.20.9-0ubuntu7.16 and 2.20.11 versions prior to 2.20.11-0ubuntu27.6. Was ZDI-CAN-11234.</description>
      <guid isPermaLink="false">CVE-2020-15702|2024-08-04T13:22:30.693Z</guid>
      <pubDate>Tue, 04 Aug 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-15701|2024-08-04T13:22:30.677Z -- canonical -- apport
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-15701</link>
      <description>An unhandled exception in check_ignored() in apport/report.py can be exploited by a local attacker to cause a denial of service. If the mtime attribute is a string value in apport-ignore.xml, it will trigger an unhandled exception, resulting in a crash. Fixed in 2.20.1-0ubuntu2.24, 2.20.9-0ubuntu7.16, 2.20.11-0ubuntu27.6.</description>
      <guid isPermaLink="false">CVE-2020-15701|2024-08-04T13:22:30.677Z</guid>
      <pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-8831|2024-08-04T10:12:10.889Z -- canonical -- apport
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-8831</link>
      <description>Apport creates a world writable lock file with root ownership in the world writable /var/lock/apport directory. If the apport/ directory does not exist (this is not uncommon as /var/lock is a tmpfs), it will create the directory, otherwise it will simply continue execution using the existing directory. This allows for a symlink attack if an attacker were to create a symlink at /var/lock/apport, changing apport's lock file location. This file could then be used to escalate privileges, for example. Fixed in versions 2.20.1-0ubuntu2.23, 2.20.9-0ubuntu7.14, 2.20.11-0ubuntu8.8 and 2.20.11-0ubuntu22.</description>
      <guid isPermaLink="false">CVE-2020-8831|2024-08-04T10:12:10.889Z</guid>
      <pubDate>Thu, 02 Apr 2020 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Canonical -- apport</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/canonical/apport.rss</link>
    <description>The latest CVEs for Canonical -- apport</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Mon, 16 Sep 2024 20:23:43 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2021-32556|2024-09-16T19:51:18.523Z -- canonical -- apport
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-32556</link>
      <description>It was discovered that the get_modified_conffiles() function in backends/packaging-apt-dpkg.py allowed injecting modified package names in a manner that would confuse the dpkg(1) call.</description>
      <guid isPermaLink="false">CVE-2021-32556|2024-09-16T19:51:18.523Z</guid>
      <pubDate>Sat, 12 Jun 2021 03:40:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25684|2024-09-16T19:15:56.426Z -- canonical -- apport
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25684</link>
      <description>It was discovered that apport in data/apport did not properly open a report file to prevent hanging reads on a FIFO.</description>
      <guid isPermaLink="false">CVE-2021-25684|2024-09-16T19:15:56.426Z</guid>
      <pubDate>Fri, 11 Jun 2021 02:20:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-32557|2024-09-16T17:53:05.508Z -- canonical -- apport
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-32557</link>
      <description>It was discovered that the process_report() function in data/whoopsie-upload-all allowed arbitrary file writes via symlinks.</description>
      <guid isPermaLink="false">CVE-2021-32557|2024-09-16T17:53:05.508Z</guid>
      <pubDate>Sat, 12 Jun 2021 03:40:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-32548|2024-09-16T18:29:09.540Z -- canonical -- apport
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-32548</link>
      <description>It was discovered that read_file() in apport/hookutils.py would follow symbolic links or open FIFOs. When this function is used by the openjdk-8 package apport hooks, it could expose private data to other local users.</description>
      <guid isPermaLink="false">CVE-2021-32548|2024-09-16T18:29:09.540Z</guid>
      <pubDate>Sat, 12 Jun 2021 03:40:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-11485|2024-09-16T16:57:41.110Z -- canonical -- apport
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-11485</link>
      <description>Sander Bos discovered Apport's lock file was in a world-writable directory which allowed all users to prevent crash handling.</description>
      <guid isPermaLink="false">CVE-2019-11485|2024-09-16T16:57:41.110Z</guid>
      <pubDate>Sat, 08 Feb 2020 04:50:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-8831|2024-09-16T19:00:55.009Z -- canonical -- apport
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-8831</link>
      <description>Apport creates a world writable lock file with root ownership in the world writable /var/lock/apport directory. If the apport/ directory does not exist (this is not uncommon as /var/lock is a tmpfs), it will create the directory, otherwise it will simply continue execution using the existing directory. This allows for a symlink attack if an attacker were to create a symlink at /var/lock/apport, changing apport's lock file location. This file could then be used to escalate privileges, for example. Fixed in versions 2.20.1-0ubuntu2.23, 2.20.9-0ubuntu7.14, 2.20.11-0ubuntu8.8 and 2.20.11-0ubuntu22.</description>
      <guid isPermaLink="false">CVE-2020-8831|2024-09-16T19:00:55.009Z</guid>
      <pubDate>Wed, 22 Apr 2020 21:15:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-15702|2024-09-16T17:28:12.244Z -- canonical -- apport
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-15702</link>
      <description>TOCTOU Race Condition vulnerability in apport allows a local attacker to escalate privileges and execute arbitrary code. An attacker may exit the crashed process and exploit PID recycling to spawn a root process with the same PID as the crashed process, which can then be used to escalate privileges. Fixed in 2.20.1-0ubuntu2.24, 2.20.9 versions prior to 2.20.9-0ubuntu7.16 and 2.20.11 versions prior to 2.20.11-0ubuntu27.6. Was ZDI-CAN-11234.</description>
      <guid isPermaLink="false">CVE-2020-15702|2024-09-16T17:28:12.244Z</guid>
      <pubDate>Thu, 06 Aug 2020 22:50:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-11483|2024-09-16T18:17:50.401Z -- canonical -- apport
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-11483</link>
      <description>Sander Bos discovered Apport mishandled crash dumps originating from containers. This could be used by a local attacker to generate a crash report for a privileged process that is readable by an unprivileged user.</description>
      <guid isPermaLink="false">CVE-2019-11483|2024-09-16T18:17:50.401Z</guid>
      <pubDate>Sat, 08 Feb 2020 04:50:22 +0000</pubDate>
    </item>
  </channel>
</rss>

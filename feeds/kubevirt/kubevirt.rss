<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for kubevirt -- kubevirt</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/kubevirt/kubevirt.rss</link>
    <description>The latest CVEs for kubevirt -- kubevirt</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 16:25:03 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-26484|2024-08-02T11:53:54.297Z -- kubevirt -- kubevirt
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-26484</link>
      <description>KubeVirt is a virtual machine management add-on for Kubernetes. In versions 0.59.0 and prior, if a malicious user has taken over a Kubernetes node where virt-handler (the KubeVirt node-daemon) is running, the virt-handler service account can be used to modify all node specs. This can be misused to lure-in system-level-privileged components which can, for instance, read all secrets on the cluster, or can exec into pods on other nodes. This way, a compromised node can be used to elevate privileges beyond the node until potentially having full privileged access to the whole cluster. The simplest way to exploit this, once a user could compromise a specific node, is to set with the virt-handler service account all other nodes to unschedulable and simply wait until system-critical components with high privileges appear on its node. No patches are available as of time of publication. As a workaround, gatekeeper users can add a webhook which will block the `virt-handler` service account to modify the spec of a node.</description>
      <guid isPermaLink="false">CVE-2023-26484|2024-08-02T11:53:54.297Z</guid>
      <pubDate>Wed, 15 Mar 2023 20:40:17 +0000</pubDate>
    </item>
  </channel>
</rss>

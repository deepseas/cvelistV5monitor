<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for xerial -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/xerial/all.rss</link>
    <description>The latest CVEs for xerial -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Tue, 04 Jun 2024 17:29:39 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-34453|2023-06-15T16:12:34.119Z -- xerial -- snappy-java
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-34453</link>
      <description>snappy-java is a fast compressor/decompressor for Java. Due to unchecked multiplications, an integer overflow may occur in versions prior to 1.1.10.1, causing a fatal error.

The function `shuffle(int[] input)` in the file `BitShuffle.java` receives an array of integers and applies a bit shuffle on it. It does so by multiplying the length by 4 and passing it to the natively compiled shuffle function. Since the length is not tested, the multiplication by four can cause an integer overflow and become a smaller value than the true size, or even zero or negative. In the case of a negative value, a `java.lang.NegativeArraySizeException` exception will raise, which can crash the program. In a case of a value that is zero or too small, the code that afterwards references the shuffled array will assume a bigger size of the array, which might cause exceptions such as `java.lang.ArrayIndexOutOfBoundsException`.

The same issue exists also when using the `shuffle` functions that receive a double, float, long and short, each using a different multiplier that may cause the same issue.

Version 1.1.10.1 contains a patch for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-34453|2023-06-15T16:12:34.119Z</guid>
      <pubDate>Thu, 15 Jun 2023 16:12:34 +0000</pubDate>
    </item>
  </channel>
</rss>

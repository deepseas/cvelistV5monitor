<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Brizy.io -- Brizy - Page Builder</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/brizy.io/brizy%20-%20page%20builder.rss</link>
    <description>The latest CVEs for Brizy.io -- Brizy - Page Builder</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Mon, 16 Sep 2024 21:42:56 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2021-38346|2024-09-16T18:08:23.450Z -- brizy.io -- brizy%20-%20page%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-38346</link>
      <description>The Brizy Page Builder plugin &lt;= 2.3.11 for WordPress allowed authenticated users to upload executable files to a location of their choice using the brizy_create_block_screenshot AJAX action. The file would be named using the id parameter, which could be prepended with "../" to perform directory traversal, and the file contents were populated via the ibsf parameter, which would be base64-decoded and written to the file. While the plugin added a .jpg extension to all uploaded filenames, a double extension attack was still possible, e.g. a file named shell.php would be saved as shell.php.jpg, and would be executable on a number of common configurations.</description>
      <guid isPermaLink="false">CVE-2021-38346|2024-09-16T18:08:23.450Z</guid>
      <pubDate>Thu, 14 Oct 2021 15:56:57 +0000</pubDate>
    </item>
  </channel>
</rss>

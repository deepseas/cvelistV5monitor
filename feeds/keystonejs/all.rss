<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for keystonejs -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/keystonejs/all.rss</link>
    <description>The latest CVEs for keystonejs -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 22:22:36 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-34247|2024-08-02T16:01:54.349Z -- keystonejs -- keystone
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-34247</link>
      <description>Keystone is a content management system for Node.JS. There is an open redirect in the `@keystone-6/auth` package versions 7.0.0 and prior, where the redirect leading `/` filter can be bypassed. Users may be redirected to domains other than the relative host, thereby it might be used by attackers to re-direct users to an unexpected location. To mitigate this issue, one may apply a patch from pull request 8626 or avoid using the `@keystone-6/auth` package.</description>
      <guid isPermaLink="false">CVE-2023-34247|2024-08-02T16:01:54.349Z</guid>
      <pubDate>Tue, 13 Jun 2023 16:31:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-40027|2024-08-02T18:24:54.703Z -- keystonejs -- keystone
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-40027</link>
      <description>Keystone is an open source headless CMS for Node.js â€” built with GraphQL and React. When `ui.isAccessAllowed` is set as `undefined`, the `adminMeta` GraphQL query is publicly accessible (no session required). This is different to the behaviour of the default AdminUI middleware, which by default will only be publicly accessible (no session required) if a `session` strategy is not defined. This vulnerability does not affect developers using the `@keystone-6/auth` package, or any users that have written their own `ui.isAccessAllowed` (that is to say, `isAccessAllowed` is not `undefined`). This vulnerability does affect users who believed that their `session` strategy will, by default, enforce that `adminMeta` is inaccessible by the public in accordance with that strategy; akin to the behaviour of the AdminUI middleware. This vulnerability has been patched in `@keystone-6/core` version `5.5.1`. Users are advised to upgrade. Users unable to upgrade may opt to write their own `isAccessAllowed` functionality to work-around this vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-40027|2024-08-02T18:24:54.703Z</guid>
      <pubDate>Tue, 15 Aug 2023 17:45:54 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for keystonejs -- keystone</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/keystonejs/keystone.rss</link>
    <description>The latest CVEs for keystonejs -- keystone</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 13:22:17 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-39322|2024-08-03T12:00:44.121Z -- keystonejs -- keystone
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-39322</link>
      <description>@keystone-6/core is a core package for Keystone 6, a content management system for Node.js. Starting with version 2.2.0 and prior to version 2.3.1, users who expected their `multiselect` fields to use the field-level access control - if configured - are vulnerable to their field-level access control not being used. List-level access control is not affected. Field-level access control for fields other than `multiselect` are not affected. Version 2.3.1 contains a fix for this issue. As a workaround, stop using the `multiselect` field.</description>
      <guid isPermaLink="false">CVE-2022-39322|2024-08-03T12:00:44.121Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-39382|2024-08-03T12:07:41.230Z -- keystonejs -- keystone
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-39382</link>
      <description>Keystone is a headless CMS for Node.js â€” built with GraphQL and React.`@keystone-6/core@3.0.0 || 3.0.1` users that use `NODE_ENV` to trigger security-sensitive functionality in their production builds are vulnerable to `NODE_ENV` being inlined to `"development"` for user code, irrespective of what your environment variables. If you do not use `NODE_ENV` in your user code to trigger security-sensitive functionality, you are not impacted by this vulnerability. Any dependencies that use `NODE_ENV` to trigger particular behaviors (optimizations, security or otherwise) should still respect your environment's configured `NODE_ENV` variable. The application's dependencies, as found in `node_modules` (including `@keystone-6/core`), are typically not compiled as part of this process, and thus should be unaffected. We have tested this assumption by verifying that `NODE_ENV=production yarn keystone start` still uses secure cookies when using `statelessSessions`. This vulnerability has been fixed in @keystone-6/core@3.0.2, regression tests have been added for this vulnerability in #8063.</description>
      <guid isPermaLink="false">CVE-2022-39382|2024-08-03T12:07:41.230Z</guid>
      <pubDate>Thu, 03 Nov 2022 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for jupyterhub -- jupyterhub</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/jupyterhub/jupyterhub.rss</link>
    <description>The latest CVEs for jupyterhub -- jupyterhub</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Thu, 08 Aug 2024 16:24:23 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-41942|2024-08-08T15:17:06.179Z -- jupyterhub -- jupyterhub
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-41942</link>
      <description>JupyterHub is software that allows one to create a multi-user server for Jupyter notebooks. Prior to versions 4.1.6 and 5.1.0, if a user is granted the `admin:users` scope, they may escalate their own privileges by making themselves a full admin user. The impact is relatively small in that `admin:users` is already an extremely privileged scope only granted to trusted users.
In effect, `admin:users` is equivalent to `admin=True`, which is not intended. Note that the change here only prevents escalation to the built-in JupyterHub admin role that has unrestricted permissions. It does not prevent users with e.g. `groups` permissions from granting themselves or other users permissions via group membership, which is intentional. Versions 4.1.6 and 5.1.0 fix this issue.</description>
      <guid isPermaLink="false">CVE-2024-41942|2024-08-08T15:17:06.179Z</guid>
      <pubDate>Thu, 08 Aug 2024 14:36:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28233|2024-08-02T00:48:49.603Z -- jupyterhub -- jupyterhub</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-28233</link>
      <description>JupyterHub is an open source multi-user server for Jupyter notebooks. By tricking a user into visiting a malicious subdomain, the attacker can achieve an XSS directly affecting the former's session. More precisely, in the context of JupyterHub, this XSS could achieve full access to JupyterHub API and user's single-user server. The affected configurations are single-origin JupyterHub deployments and JupyterHub deployments with user-controlled applications running on subdomains or peer subdomains of either the Hub or a single-user server. This vulnerability is fixed in 4.1.0.</description>
      <guid isPermaLink="false">CVE-2024-28233|2024-08-02T00:48:49.603Z</guid>
      <pubDate>Wed, 27 Mar 2024 18:16:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28233|2024-03-27T18:16:24.308Z -- jupyterhub -- jupyterhub</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28233</link>
      <description>JupyterHub is an open source multi-user server for Jupyter notebooks. By tricking a user into visiting a malicious subdomain, the attacker can achieve an XSS directly affecting the former's session. More precisely, in the context of JupyterHub, this XSS could achieve full access to JupyterHub API and user's single-user server. The affected configurations are single-origin JupyterHub deployments and JupyterHub deployments with user-controlled applications running on subdomains or peer subdomains of either the Hub or a single-user server. This vulnerability is fixed in 4.1.0.</description>
      <guid isPermaLink="false">CVE-2024-28233|2024-03-27T18:16:24.308Z</guid>
      <pubDate>Wed, 27 Mar 2024 18:16:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-41942|2024-08-08T14:36:44.498Z -- jupyterhub -- jupyterhub</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-41942</link>
      <description>JupyterHub is software that allows one to create a multi-user server for Jupyter notebooks. Prior to versions 4.1.6 and 5.1.0, if a user is granted the `admin:users` scope, they may escalate their own privileges by making themselves a full admin user. The impact is relatively small in that `admin:users` is already an extremely privileged scope only granted to trusted users.
In effect, `admin:users` is equivalent to `admin=True`, which is not intended. Note that the change here only prevents escalation to the built-in JupyterHub admin role that has unrestricted permissions. It does not prevent users with e.g. `groups` permissions from granting themselves or other users permissions via group membership, which is intentional. Versions 4.1.6 and 5.1.0 fix this issue.</description>
      <guid isPermaLink="false">CVE-2024-41942|2024-08-08T14:36:44.498Z</guid>
      <pubDate>Thu, 08 Aug 2024 14:36:44 +0000</pubDate>
    </item>
  </channel>
</rss>

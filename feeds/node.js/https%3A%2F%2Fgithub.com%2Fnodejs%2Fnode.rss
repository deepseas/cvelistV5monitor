<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Node.js -- https://github.com/nodejs/node</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/node.js/https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode.rss</link>
    <description>The latest CVEs for Node.js -- https://github.com/nodejs/node</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 23:22:17 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-30589|2024-08-02T14:28:51.669Z -- node.js -- https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-30589</link>
      <description>The llhttp parser in the http module in Node v20.2.0 does not strictly use the CRLF sequence to delimit HTTP requests. This can lead to HTTP Request Smuggling (HRS).&#13;
&#13;
The CR character (without LF) is sufficient to delimit HTTP header fields in the llhttp parser. According to RFC7230 section 3, only the CRLF sequence should delimit each header-field. This impacts all Node.js active versions: v16, v18, and, v20&#13;
</description>
      <guid isPermaLink="false">CVE-2023-30589|2024-08-02T14:28:51.669Z</guid>
      <pubDate>Fri, 30 Jun 2023 23:39:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-30586|2024-08-02T14:28:51.808Z -- node.js -- https%3A%2F%2Fgithub.com%2Fnodejs%2Fnode
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-30586</link>
      <description>A privilege escalation vulnerability exists in Node.js 20 that allowed loading arbitrary OpenSSL engines when the experimental permission model is enabled, which can bypass and/or disable the permission model. The attack complexity is high. However, the crypto.setEngine() API can be used to bypass the permission model when called with a compatible OpenSSL engine. The OpenSSL engine can, for example, disable the permission model in the host process by manipulating the process's stack memory to locate the permission model Permission::enabled_ in the host process's heap memory. Please note that at the time this CVE was issued, the permission model is an experimental feature of Node.js.</description>
      <guid isPermaLink="false">CVE-2023-30586|2024-08-02T14:28:51.808Z</guid>
      <pubDate>Fri, 30 Jun 2023 23:40:08 +0000</pubDate>
    </item>
  </channel>
</rss>

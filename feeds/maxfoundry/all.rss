<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for maxfoundry -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/maxfoundry/all.rss</link>
    <description>The latest CVEs for maxfoundry -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 05 Jul 2024 18:24:02 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-7029|2024-07-05T17:21:31.295Z -- maxfoundry -- wordpress%20button%20plugin%20maxbuttons
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7029</link>
      <description>The WordPress Button Plugin MaxButtons plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's shortcode(s) in all versions up to, and including 9.7.6 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. NOTE: This vulnerability was partially fixed in version 9.7.6.</description>
      <guid isPermaLink="false">CVE-2023-7029|2024-07-05T17:21:31.295Z</guid>
      <pubDate>Mon, 05 Feb 2024 21:22:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5970|2024-06-18T21:36:53.454Z -- maxfoundry -- maxgalleria</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5970</link>
      <description>The MaxGalleria plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's maxgallery_thumb shortcode in all versions up to, and including, 6.4.4 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2024-5970|2024-06-18T21:36:53.454Z</guid>
      <pubDate>Tue, 18 Jun 2024 21:36:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3581|2024-06-06T19:22:53.667Z -- maxfoundry -- maxgalleria</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3581</link>
      <description>The MaxGalleria plugin for WordPress is vulnerable to unauthorized image upload due to a missing capability check on the add_media_library_images_to_gallery function in all versions up to, and including, 6.4.2. This makes it possible for authenticated attackers, with subscriber access or above, to upload arbitrary images to a gallery.</description>
      <guid isPermaLink="false">CVE-2024-3581|2024-06-06T19:22:53.667Z</guid>
      <pubDate>Thu, 02 May 2024 16:51:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3615|2024-06-04T17:33:18.144Z -- maxfoundry -- media%20library%20folders</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3615</link>
      <description>The Media Library Folders plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the 's' parameter in all versions up to, and including, 8.2.0 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description>
      <guid isPermaLink="false">CVE-2024-3615|2024-06-04T17:33:18.144Z</guid>
      <pubDate>Fri, 19 Apr 2024 02:34:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6594|2024-01-09T02:34:50.547Z -- maxfoundry -- wordpress%20button%20plugin%20maxbuttons</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6594</link>
      <description>The WordPress Button Plugin MaxButtons plugin for WordPress is vulnerable to Stored Cross-Site Scripting via admin settings in all versions up to, and including, 9.7.4 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with administrator-level permissions and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This only affects multi-site installations and installations where unfiltered_html has been disabled. Administrators can give button creation privileges to users with lower levels (contributor+) which would allow those lower-privileged users to carry out attacks.</description>
      <guid isPermaLink="false">CVE-2023-6594|2024-01-09T02:34:50.547Z</guid>
      <pubDate>Tue, 09 Jan 2024 02:34:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7029|2024-02-05T21:22:00.359Z -- maxfoundry -- wordpress%20button%20plugin%20maxbuttons</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7029</link>
      <description>The WordPress Button Plugin MaxButtons plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's shortcode(s) in all versions up to, and including 9.7.6 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. NOTE: This vulnerability was partially fixed in version 9.7.6.</description>
      <guid isPermaLink="false">CVE-2023-7029|2024-02-05T21:22:00.359Z</guid>
      <pubDate>Mon, 05 Feb 2024 21:22:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5970|2024-07-02T16:53:27.790Z -- maxfoundry -- maxgalleria</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5970</link>
      <description>The MaxGalleria plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's maxgallery_thumb shortcode in all versions up to, and including, 6.4.4 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2024-5970|2024-07-02T16:53:27.790Z</guid>
      <pubDate>Tue, 18 Jun 2024 21:36:53 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for maxfoundry -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/maxfoundry/all.rss</link>
    <description>The latest CVEs for maxfoundry -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 30 Aug 2024 10:23:42 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-7858|2024-08-30T09:29:49.791Z -- maxfoundry -- media%20library%20folders
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-7858</link>
      <description>The Media Library Folders plugin for WordPress is vulnerable to unauthorized access due to missing capability checks on several AJAX functions in the media-library-plus.php file in all versions up to, and including, 8.2.3. This makes it possible for authenticated attackers, with subscriber-level access and above, to perform several actions related to managing media files and folder along with controlling settings.</description>
      <guid isPermaLink="false">CVE-2024-7858|2024-08-30T09:29:49.791Z</guid>
      <pubDate>Fri, 30 Aug 2024 09:29:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-7857|2024-08-29T02:31:30.608Z -- maxfoundry -- media%20library%20folders</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-7857</link>
      <description>The Media Library Folders plugin for WordPress is vulnerable to second order SQL Injection via the 'sort_type' parameter of the 'mlf_change_sort_type' AJAX action in all versions up to, and including, 8.2.2 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with subscriber-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description>
      <guid isPermaLink="false">CVE-2024-7857|2024-08-29T02:31:30.608Z</guid>
      <pubDate>Thu, 29 Aug 2024 02:31:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6499|2024-08-24T03:29:23.649Z -- maxfoundry -- wordpress%20button%20plugin%20maxbuttons</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6499</link>
      <description>The WordPress Button Plugin MaxButtons plugin for WordPress is vulnerable to information exposure in all versions up to, and including, 9.7.8. This makes it possible for unauthenticated attackers to obtain the full path to instances, which they may be able to use in combination with other vulnerabilities or to simplify reconnaissance work. On its own, this information is of very limited use.</description>
      <guid isPermaLink="false">CVE-2024-6499|2024-08-24T03:29:23.649Z</guid>
      <pubDate>Sat, 24 Aug 2024 03:29:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5970|2024-08-01T21:25:03.180Z -- maxfoundry -- maxgalleria</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5970</link>
      <description>The MaxGalleria plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's maxgallery_thumb shortcode in all versions up to, and including, 6.4.4 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2024-5970|2024-08-01T21:25:03.180Z</guid>
      <pubDate>Tue, 18 Jun 2024 21:36:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5970|2024-06-18T21:36:53.454Z -- maxfoundry -- maxgalleria</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5970</link>
      <description>The MaxGalleria plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's maxgallery_thumb shortcode in all versions up to, and including, 6.4.4 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2024-5970|2024-06-18T21:36:53.454Z</guid>
      <pubDate>Tue, 18 Jun 2024 21:36:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3581|2024-06-06T19:22:53.667Z -- maxfoundry -- maxgalleria</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3581</link>
      <description>The MaxGalleria plugin for WordPress is vulnerable to unauthorized image upload due to a missing capability check on the add_media_library_images_to_gallery function in all versions up to, and including, 6.4.2. This makes it possible for authenticated attackers, with subscriber access or above, to upload arbitrary images to a gallery.</description>
      <guid isPermaLink="false">CVE-2024-3581|2024-06-06T19:22:53.667Z</guid>
      <pubDate>Thu, 02 May 2024 16:51:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3615|2024-06-04T17:33:18.144Z -- maxfoundry -- media%20library%20folders</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3615</link>
      <description>The Media Library Folders plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the 's' parameter in all versions up to, and including, 8.2.0 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description>
      <guid isPermaLink="false">CVE-2024-3615|2024-06-04T17:33:18.144Z</guid>
      <pubDate>Fri, 19 Apr 2024 02:34:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5970|2024-07-02T16:53:27.790Z -- maxfoundry -- maxgalleria</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5970</link>
      <description>The MaxGalleria plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's maxgallery_thumb shortcode in all versions up to, and including, 6.4.4 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2024-5970|2024-07-02T16:53:27.790Z</guid>
      <pubDate>Tue, 18 Jun 2024 21:36:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3581|2024-08-01T20:12:07.903Z -- maxfoundry -- maxgalleria</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3581</link>
      <description>The MaxGalleria plugin for WordPress is vulnerable to unauthorized image upload due to a missing capability check on the add_media_library_images_to_gallery function in all versions up to, and including, 6.4.2. This makes it possible for authenticated attackers, with subscriber access or above, to upload arbitrary images to a gallery.</description>
      <guid isPermaLink="false">CVE-2024-3581|2024-08-01T20:12:07.903Z</guid>
      <pubDate>Thu, 02 May 2024 16:51:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3615|2024-08-01T20:19:59.860Z -- maxfoundry -- media%20library%20folders</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3615</link>
      <description>The Media Library Folders plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the 's' parameter in all versions up to, and including, 8.2.0 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description>
      <guid isPermaLink="false">CVE-2024-3615|2024-08-01T20:19:59.860Z</guid>
      <pubDate>Fri, 19 Apr 2024 02:34:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6499|2024-08-28T16:02:32.188Z -- maxfoundry -- wordpress%20button%20plugin%20maxbuttons</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6499</link>
      <description>The WordPress Button Plugin MaxButtons plugin for WordPress is vulnerable to information exposure in all versions up to, and including, 9.7.8. This makes it possible for unauthenticated attackers to obtain the full path to instances, which they may be able to use in combination with other vulnerabilities or to simplify reconnaissance work. On its own, this information is of very limited use.</description>
      <guid isPermaLink="false">CVE-2024-6499|2024-08-28T16:02:32.188Z</guid>
      <pubDate>Sat, 24 Aug 2024 03:29:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-7857|2024-08-29T13:43:12.796Z -- maxfoundry -- media%20library%20folders</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-7857</link>
      <description>The Media Library Folders plugin for WordPress is vulnerable to second order SQL Injection via the 'sort_type' parameter of the 'mlf_change_sort_type' AJAX action in all versions up to, and including, 8.2.2 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with subscriber-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description>
      <guid isPermaLink="false">CVE-2024-7857|2024-08-29T13:43:12.796Z</guid>
      <pubDate>Thu, 29 Aug 2024 02:31:30 +0000</pubDate>
    </item>
  </channel>
</rss>

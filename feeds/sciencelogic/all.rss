<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for ScienceLogic -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/sciencelogic/all.rss</link>
    <description>The latest CVEs for ScienceLogic -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 09 Oct 2024 23:24:18 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-48600|2024-10-09T20:48:30.146Z -- sciencelogic -- sl%201
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-48600</link>
      <description>A SQL injection vulnerability exists in the “notes view” feature of the ScienceLogic SL1 that takes unsanitized user‐controlled input and passes it directly to a SQL query. This allows for the injection of arbitrary SQL before being executed against the database.</description>
      <guid isPermaLink="false">CVE-2022-48600|2024-10-09T20:48:30.146Z</guid>
      <pubDate>Wed, 09 Aug 2023 18:28:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-48599|2024-10-09T20:50:26.916Z -- sciencelogic -- sl%201
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-48599</link>
      <description>A SQL injection vulnerability exists in the “reporter events type” feature of the ScienceLogic SL1 that takes unsanitized user‐controlled input and passes it directly to a SQL query. This allows for the injection of arbitrary SQL before being executed against the database.</description>
      <guid isPermaLink="false">CVE-2022-48599|2024-10-09T20:50:26.916Z</guid>
      <pubDate>Wed, 09 Aug 2023 18:26:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-48601|2024-10-09T20:45:22.897Z -- sciencelogic -- sl%201
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-48601</link>
      <description>A SQL injection vulnerability exists in the “network print report” feature of the ScienceLogic SL1 that takes unsanitized user‐controlled input and passes it directly to a SQL query. This allows for the injection of arbitrary SQL before being executed against the database.</description>
      <guid isPermaLink="false">CVE-2022-48601|2024-10-09T20:45:22.897Z</guid>
      <pubDate>Wed, 09 Aug 2023 18:32:30 +0000</pubDate>
    </item>
  </channel>
</rss>

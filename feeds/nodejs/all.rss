<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for nodejs -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/nodejs/all.rss</link>
    <description>The latest CVEs for nodejs -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 23:21:55 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-45143|2024-08-02T20:14:19.709Z -- nodejs -- undici
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-45143</link>
      <description>Undici is an HTTP/1.1 client written from scratch for Node.js. Prior to version 5.26.2, Undici already cleared Authorization headers on cross-origin redirects, but did not clear `Cookie` headers. By design, `cookie` headers are forbidden request headers, disallowing them to be set in RequestInit.headers in browser environments. Since undici handles headers more liberally than the spec, there was a disconnect from the assumptions the spec made, and undici's implementation of fetch. As such this may lead to accidental leakage of cookie to a third-party site or a malicious attacker who can control the redirection target (ie. an open redirector) to leak the cookie to the third party site. This was patched in version 5.26.2. There are no known workarounds.</description>
      <guid isPermaLink="false">CVE-2023-45143|2024-08-02T20:14:19.709Z</guid>
      <pubDate>Thu, 12 Oct 2023 16:35:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-23936|2024-08-02T10:49:07.624Z -- nodejs -- undici
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-23936</link>
      <description>Undici is an HTTP/1.1 client for Node.js. Starting with version 2.0.0 and prior to version 5.19.1, the undici library does not protect `host` HTTP header from CRLF injection vulnerabilities. This issue is patched in Undici v5.19.1. As a workaround, sanitize the `headers.host` string before passing to undici.</description>
      <guid isPermaLink="false">CVE-2023-23936|2024-08-02T10:49:07.624Z</guid>
      <pubDate>Thu, 16 Feb 2023 17:30:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-24807|2024-08-02T11:03:19.291Z -- nodejs -- undici
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-24807</link>
      <description>Undici is an HTTP/1.1 client for Node.js. Prior to version 5.19.1, the `Headers.set()` and `Headers.append()` methods are vulnerable to Regular Expression Denial of Service (ReDoS) attacks when untrusted values are passed into the functions. This is due to the inefficient regular expression used to normalize the values in the `headerValueNormalize()` utility function. This vulnerability was patched in v5.19.1. No known workarounds are available.</description>
      <guid isPermaLink="false">CVE-2023-24807|2024-08-02T11:03:19.291Z</guid>
      <pubDate>Thu, 16 Feb 2023 17:30:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-30260|2024-08-02T01:32:05.438Z -- nodejs -- undici</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-30260</link>
      <description>Undici is an HTTP/1.1 client, written from scratch for Node.js. Undici cleared Authorization and Proxy-Authorization headers for `fetch()`, but did not clear them for `undici.request()`. This vulnerability was patched in version(s) 5.28.4 and 6.11.1.</description>
      <guid isPermaLink="false">CVE-2024-30260|2024-08-02T01:32:05.438Z</guid>
      <pubDate>Thu, 04 Apr 2024 15:15:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-30261|2024-08-02T01:32:06.665Z -- nodejs -- undici</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-30261</link>
      <description>Undici is an HTTP/1.1 client, written from scratch for Node.js. An attacker can alter the `integrity` option passed to `fetch()`, allowing `fetch()` to accept requests as valid even if they have been tampered. This vulnerability was patched in version(s) 5.28.4 and 6.11.1.</description>
      <guid isPermaLink="false">CVE-2024-30261|2024-08-02T01:32:06.665Z</guid>
      <pubDate>Thu, 04 Apr 2024 15:09:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24750|2024-07-25T16:45:31.786Z -- nodejs -- undici</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-24750</link>
      <description>Undici is an HTTP/1.1 client, written from scratch for Node.js. In affected versions calling `fetch(url)` and not consuming the incoming body ((or consuming it very slowing) will lead to a memory leak. This issue has been addressed in version 6.6.1. Users are advised to upgrade. Users unable to upgrade should make sure to always consume the incoming body.</description>
      <guid isPermaLink="false">CVE-2024-24750|2024-07-25T16:45:31.786Z</guid>
      <pubDate>Fri, 16 Feb 2024 21:42:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-38372|2024-07-08T20:25:59.111Z -- nodejs -- undici</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-38372</link>
      <description>Undici is an HTTP/1.1 client, written from scratch for Node.js. Depending on network and process conditions of a `fetch()` request, `response.arrayBuffer()` might include portion of memory from the Node.js process. This has been patched in v6.19.2.</description>
      <guid isPermaLink="false">CVE-2024-38372|2024-07-08T20:25:59.111Z</guid>
      <pubDate>Mon, 08 Jul 2024 20:25:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-30260|2024-06-04T17:38:49.201Z -- nodejs -- undici</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-30260</link>
      <description>Undici is an HTTP/1.1 client, written from scratch for Node.js. Undici cleared Authorization and Proxy-Authorization headers for `fetch()`, but did not clear them for `undici.request()`. This vulnerability was patched in version(s) 5.28.4 and 6.11.1.</description>
      <guid isPermaLink="false">CVE-2024-30260|2024-06-04T17:38:49.201Z</guid>
      <pubDate>Thu, 04 Apr 2024 15:15:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-30261|2024-04-04T15:09:11.369Z -- nodejs -- undici</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-30261</link>
      <description>Undici is an HTTP/1.1 client, written from scratch for Node.js. An attacker can alter the `integrity` option passed to `fetch()`, allowing `fetch()` to accept requests as valid even if they have been tampered. This vulnerability was patched in version(s) 5.28.4 and 6.11.1.</description>
      <guid isPermaLink="false">CVE-2024-30261|2024-04-04T15:09:11.369Z</guid>
      <pubDate>Thu, 04 Apr 2024 15:09:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24750|2024-02-16T21:42:29.999Z -- nodejs -- undici</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-24750</link>
      <description>Undici is an HTTP/1.1 client, written from scratch for Node.js. In affected versions calling `fetch(url)` and not consuming the incoming body ((or consuming it very slowing) will lead to a memory leak. This issue has been addressed in version 6.6.1. Users are advised to upgrade. Users unable to upgrade should make sure to always consume the incoming body.</description>
      <guid isPermaLink="false">CVE-2024-24750|2024-02-16T21:42:29.999Z</guid>
      <pubDate>Fri, 16 Feb 2024 21:42:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24758|2024-06-04T17:43:23.837Z -- nodejs -- undici</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-24758</link>
      <description>Undici is an HTTP/1.1 client, written from scratch for Node.js. Undici already cleared Authorization headers on cross-origin redirects, but did not clear `Proxy-Authentication` headers. This issue has been patched in versions 5.28.3 and 6.6.1. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-24758|2024-06-04T17:43:23.837Z</guid>
      <pubDate>Fri, 16 Feb 2024 21:40:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-38372|2024-07-12T17:01:03.665Z -- nodejs -- undici</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-38372</link>
      <description>Undici is an HTTP/1.1 client, written from scratch for Node.js. Depending on network and process conditions of a `fetch()` request, `response.arrayBuffer()` might include portion of memory from the Node.js process. This has been patched in v6.19.2.</description>
      <guid isPermaLink="false">CVE-2024-38372|2024-07-12T17:01:03.665Z</guid>
      <pubDate>Mon, 08 Jul 2024 20:25:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-38372|2024-08-02T04:04:25.265Z -- nodejs -- undici</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-38372</link>
      <description>Undici is an HTTP/1.1 client, written from scratch for Node.js. Depending on network and process conditions of a `fetch()` request, `response.arrayBuffer()` might include portion of memory from the Node.js process. This has been patched in v6.19.2.</description>
      <guid isPermaLink="false">CVE-2024-38372|2024-08-02T04:04:25.265Z</guid>
      <pubDate>Mon, 08 Jul 2024 20:25:59 +0000</pubDate>
    </item>
  </channel>
</rss>

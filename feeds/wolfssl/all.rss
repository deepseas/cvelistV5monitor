<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for wolfSSL -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/wolfssl/all.rss</link>
    <description>The latest CVEs for wolfSSL -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Tue, 27 Aug 2024 21:21:35 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-5991|2024-08-27T20:06:24.558Z -- wolfssl -- wolfssl
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5991</link>
      <description>In function MatchDomainName(), input param str is treated as a NULL terminated string despite being user provided and unchecked. Specifically, the function X509_check_host() takes in a pointer and length to check against, with no requirements that it be NULL terminated. If a caller was attempting to do a name check on a non-NULL terminated buffer, the code would read beyond the bounds of the input array until it found a NULL terminator.This issue affects wolfSSL: through 5.7.0.</description>
      <guid isPermaLink="false">CVE-2024-5991|2024-08-27T20:06:24.558Z</guid>
      <pubDate>Tue, 27 Aug 2024 18:33:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6936|2024-08-27T14:23:58.075Z -- wolfssl -- wolfssl
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6936</link>
      <description>In wolfSSL prior to 5.6.6, if callback functions are enabled (via the WOLFSSL_CALLBACKS flag), then a malicious TLS client or network attacker can trigger a buffer over-read on the heap of 5 bytes (WOLFSSL_CALLBACKS is only intended for debugging).
</description>
      <guid isPermaLink="false">CVE-2023-6936|2024-08-27T14:23:58.075Z</guid>
      <pubDate>Tue, 20 Feb 2024 21:52:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5991|2024-08-27T18:33:27.550Z -- wolfssl -- wolfssl</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5991</link>
      <description>In function MatchDomainName(), input param str is treated as a NULL terminated string despite being user provided and unchecked. Specifically, the function X509_check_host() takes in a pointer and length to check against, with no requirements that it be NULL terminated. If a caller was attempting to do a name check on a non-NULL terminated buffer, the code would read beyond the bounds of the input array until it found a NULL terminator.This issue affects wolfSSL: through 5.7.0.</description>
      <guid isPermaLink="false">CVE-2024-5991|2024-08-27T18:33:27.550Z</guid>
      <pubDate>Tue, 27 Aug 2024 18:33:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1544|2024-08-27T18:44:52.770Z -- wolfssl -- wolfssl</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1544</link>
      <description>Generating the ECDSA nonce k samples a random number r and then 
truncates this randomness with a modular reduction mod n where n is the 
order of the elliptic curve. Meaning k = r mod n. The division used 
during the reduction estimates a factor q_e by dividing the upper two 
digits (a digit having e.g. a size of 8 byte) of r by the upper digit of 
n and then decrements q_e in a loop until it has the correct size. 
Observing the number of times q_e is decremented through a control-flow 
revealing side-channel reveals a bias in the most significant bits of 
k. Depending on the curve this is either a negligible bias or a 
significant bias large enough to reconstruct k with lattice reduction 
methods. For SECP160R1, e.g., we find a bias of 15 bits.</description>
      <guid isPermaLink="false">CVE-2024-1544|2024-08-27T18:44:52.770Z</guid>
      <pubDate>Tue, 27 Aug 2024 18:44:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5814|2024-08-27T18:38:08.974Z -- wolfssl -- wolfssl</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5814</link>
      <description>A malicious TLS1.2 server can force a TLS1.3 client with downgrade capability to use a ciphersuite that it did not agree to and achieve a successful connection. This is because, aside from the extensions, the client was skipping fully parsing the server hello.  https://doi.org/10.46586/tches.v2024.i1.457-500</description>
      <guid isPermaLink="false">CVE-2024-5814|2024-08-27T18:38:08.974Z</guid>
      <pubDate>Tue, 27 Aug 2024 18:38:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0901|2024-08-01T18:39:44.207Z -- wolfssl -- wolfssl</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0901</link>
      <description>Remotely executed SEGV and out of bounds read allows malicious packet sender to crash or cause an out of bounds read via sending a malformed packet with the correct length.</description>
      <guid isPermaLink="false">CVE-2024-0901|2024-08-01T18:39:44.207Z</guid>
      <pubDate>Mon, 25 Mar 2024 22:37:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0901|2024-03-25T22:37:56.581Z -- wolfssl -- wolfssl</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0901</link>
      <description>Remotely executed SEGV and out of bounds read allows malicious packet sender to crash or cause an out of bounds read via sending a malformed packet with the correct length.</description>
      <guid isPermaLink="false">CVE-2024-0901|2024-03-25T22:37:56.581Z</guid>
      <pubDate>Mon, 25 Mar 2024 22:37:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5814|2024-08-27T19:21:04.561Z -- wolfssl -- wolfssl</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5814</link>
      <description>A malicious TLS1.2 server can force a TLS1.3 client with downgrade capability to use a ciphersuite that it did not agree to and achieve a successful connection. This is because, aside from the extensions, the client was skipping fully parsing the server hello.  https://doi.org/10.46586/tches.v2024.i1.457-500</description>
      <guid isPermaLink="false">CVE-2024-5814|2024-08-27T19:21:04.561Z</guid>
      <pubDate>Tue, 27 Aug 2024 18:38:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1544|2024-08-27T19:14:35.190Z -- wolfssl -- wolfssl</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1544</link>
      <description>Generating the ECDSA nonce k samples a random number r and then 
truncates this randomness with a modular reduction mod n where n is the 
order of the elliptic curve. Meaning k = r mod n. The division used 
during the reduction estimates a factor q_e by dividing the upper two 
digits (a digit having e.g. a size of 8 byte) of r by the upper digit of 
n and then decrements q_e in a loop until it has the correct size. 
Observing the number of times q_e is decremented through a control-flow 
revealing side-channel reveals a bias in the most significant bits of 
k. Depending on the curve this is either a negligible bias or a 
significant bias large enough to reconstruct k with lattice reduction 
methods. For SECP160R1, e.g., we find a bias of 15 bits.</description>
      <guid isPermaLink="false">CVE-2024-1544|2024-08-27T19:14:35.190Z</guid>
      <pubDate>Tue, 27 Aug 2024 18:44:52 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Grafana -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/grafana/all.rss</link>
    <description>The latest CVEs for Grafana -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 23:23:15 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2021-43798|2024-08-04T04:03:08.797Z -- grafana -- grafana
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-43798</link>
      <description>Grafana is an open-source platform for monitoring and observability. Grafana versions 8.0.0-beta1 through 8.3.0 (except for patched versions) iss vulnerable to directory traversal, allowing access to local files. The vulnerable URL path is: `&lt;grafana_host_url&gt;/public/plugins//`, where is the plugin ID for any installed plugin. At no time has Grafana Cloud been vulnerable. Users are advised to upgrade to patched versions 8.0.7, 8.1.8, 8.2.7, or 8.3.1. The GitHub Security Advisory contains more information about vulnerable URL paths, mitigation, and the disclosure timeline.</description>
      <guid isPermaLink="false">CVE-2021-43798|2024-08-04T04:03:08.797Z</guid>
      <pubDate>Tue, 07 Dec 2021 18:25:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-41090|2024-08-04T02:59:31.578Z -- grafana -- agent
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-41090</link>
      <description>Grafana Agent is a telemetry collector for sending metrics, logs, and trace data to the opinionated Grafana observability stack. Prior to versions 0.20.1 and 0.21.2, inline secrets defined within a metrics instance config are exposed in plaintext over two endpoints: metrics instance configs defined in the base YAML file are exposed at `/-/config` and metrics instance configs defined for the scraping service are exposed at `/agent/api/v1/configs/:key`. Inline secrets will be exposed to anyone being able to reach these endpoints. If HTTPS with client authentication is not configured, these endpoints are accessible to unauthenticated users. Secrets found in these sections are used for delivering metrics to a Prometheus Remote Write system, authenticating against a system for discovering Prometheus targets, and authenticating against a system for collecting metrics. This does not apply for non-inlined secrets, such as `*_file` based secrets. This issue is patched in Grafana Agent versions 0.20.1 and 0.21.2. A few workarounds are available. Users who cannot upgrade should use non-inline secrets where possible. Users may also desire to restrict API access to Grafana Agent with some combination of restricting the network interfaces Grafana Agent listens on through `http_listen_address` in the `server` block, configuring Grafana Agent to use HTTPS with client authentication, and/or using firewall rules to restrict external access to Grafana Agent's API.</description>
      <guid isPermaLink="false">CVE-2021-41090|2024-08-04T02:59:31.578Z</guid>
      <pubDate>Wed, 08 Dec 2021 16:15:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-41174|2024-08-04T02:59:31.645Z -- grafana -- grafana
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-41174</link>
      <description>Grafana is an open-source platform for monitoring and observability. In affected versions if an attacker is able to convince a victim to visit a URL referencing a vulnerable page, arbitrary JavaScript content may be executed within the context of the victim's browser. The user visiting the malicious link must be unauthenticated and the link must be for a page that contains the login button in the menu bar. The url has to be crafted to exploit AngularJS rendering and contain the interpolation binding for AngularJS expressions. AngularJS uses double curly braces for interpolation binding: {{ }} ex: {{constructor.constructor(‘alert(1)’)()}}. When the user follows the link and the page renders, the login button will contain the original link with a query parameter to force a redirect to the login page. The URL is not validated and the AngularJS rendering engine will execute the JavaScript expression contained in the URL. Users are advised to upgrade as soon as possible. If for some reason you cannot upgrade, you can use a reverse proxy or similar to block access to block the literal string {{ in the path.</description>
      <guid isPermaLink="false">CVE-2021-41174|2024-08-04T02:59:31.645Z</guid>
      <pubDate>Wed, 03 Nov 2021 18:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-43813|2024-08-04T04:03:09.012Z -- grafana -- grafana
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-43813</link>
      <description>Grafana is an open-source platform for monitoring and observability. Grafana prior to versions 8.3.2 and 7.5.12 contains a directory traversal vulnerability for fully lowercase or fully uppercase .md files. The vulnerability is limited in scope, and only allows access to files with the extension .md to authenticated users only. Grafana Cloud instances have not been affected by the vulnerability. Users should upgrade to patched versions 8.3.2 or 7.5.12. For users who cannot upgrade, running a reverse proxy in front of Grafana that normalizes the PATH of the request will mitigate the vulnerability. The proxy will have to also be able to handle url encoded paths. Alternatively, for fully lowercase or fully uppercase .md files, users can block /api/plugins/.*/markdown/.* without losing any functionality beyond inlined plugin help text.</description>
      <guid isPermaLink="false">CVE-2021-43813|2024-08-04T04:03:09.012Z</guid>
      <pubDate>Fri, 10 Dec 2021 17:30:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-41244|2024-08-04T03:08:31.510Z -- grafana -- grafana
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-41244</link>
      <description>Grafana is an open-source platform for monitoring and observability. In affected versions when the fine-grained access control beta feature is enabled and there is more than one organization in the Grafana instance admins are able to access users from other organizations. Grafana 8.0 introduced a mechanism which allowed users with the Organization Admin role to list, add, remove, and update users’ roles in other organizations in which they are not an admin. With fine-grained access control enabled, organization admins can list, add, remove and update users' roles in another organization, where they do not have organization admin role. All installations between v8.0 and v8.2.3 that have fine-grained access control beta enabled and more than one organization should be upgraded as soon as possible. If you cannot upgrade, you should turn off the fine-grained access control using a feature flag.</description>
      <guid isPermaLink="false">CVE-2021-41244|2024-08-04T03:08:31.510Z</guid>
      <pubDate>Mon, 15 Nov 2021 20:05:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-39226|2024-08-04T01:58:18.334Z -- grafana -- grafana
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-39226</link>
      <description>Grafana is an open source data visualization platform. In affected versions unauthenticated and authenticated users are able to view the snapshot with the lowest database key by accessing the literal paths: /dashboard/snapshot/:key, or /api/snapshots/:key. If the snapshot "public_mode" configuration setting is set to true (vs default of false), unauthenticated users are able to delete the snapshot with the lowest database key by accessing the literal path: /api/snapshots-delete/:deleteKey. Regardless of the snapshot "public_mode" setting, authenticated users are able to delete the snapshot with the lowest database key by accessing the literal paths: /api/snapshots/:key, or /api/snapshots-delete/:deleteKey. The combination of deletion and viewing enables a complete walk through all snapshot data while resulting in complete snapshot data loss. This issue has been resolved in versions 8.1.6 and 7.5.11. If for some reason you cannot upgrade you can use a reverse proxy or similar to block access to the literal paths: /api/snapshots/:key, /api/snapshots-delete/:deleteKey, /dashboard/snapshot/:key, and /api/snapshots/:key. They have no normal function and can be disabled without side effects.</description>
      <guid isPermaLink="false">CVE-2021-39226|2024-08-04T01:58:18.334Z</guid>
      <pubDate>Tue, 05 Oct 2021 17:30:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-43815|2024-08-04T04:03:08.839Z -- grafana -- grafana
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-43815</link>
      <description>Grafana is an open-source platform for monitoring and observability. Grafana prior to versions 8.3.2 and 7.5.12 has a directory traversal for arbitrary .csv files. It only affects instances that have the developer testing tool called TestData DB data source enabled and configured. The vulnerability is limited in scope, and only allows access to files with the extension .csv to authenticated users only. Grafana Cloud instances have not been affected by the vulnerability. Versions 8.3.2 and 7.5.12 contain a patch for this issue. There is a workaround available for users who cannot upgrade. Running a reverse proxy in front of Grafana that normalizes the PATH of the request will mitigate the vulnerability. The proxy will have to also be able to handle url encoded paths.</description>
      <guid isPermaLink="false">CVE-2021-43815|2024-08-04T04:03:08.839Z</guid>
      <pubDate>Fri, 10 Dec 2021 20:40:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5122|2024-08-02T07:44:53.890Z -- grafana -- grafana-csv-datasource</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-5122</link>
      <description>Grafana is an open-source platform for monitoring and observability. The CSV datasource plugin is a Grafana Labs maintained plugin for Grafana that allows for retrieving and processing CSV data from a remote endpoint configured by an administrator. If this plugin was configured to send requests to a bare host with no path (e.g.  https://www.example.com/ https://www.example.com/` ), requests to an endpoint other than the one configured by the administrator could be triggered by a specially crafted request from any user, resulting in an SSRF vector. AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:N/A:N https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator</description>
      <guid isPermaLink="false">CVE-2023-5122|2024-08-02T07:44:53.890Z</guid>
      <pubDate>Wed, 14 Feb 2024 15:06:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5123|2024-08-02T07:44:53.814Z -- grafana -- grafana-json-datasource</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-5123</link>
      <description>The JSON datasource plugin ( https://grafana.com/grafana/plugins/marcusolsson-json-datasource/ ) is a Grafana Labs maintained plugin for Grafana that allows for retrieving and processing JSON data from a remote endpoint (including a specific sub-path) configured by an administrator. Due to inadequate sanitization of the dashboard-supplied path parameter, it was possible to include path traversal characters (../) in the path parameter and send requests to paths on the configured endpoint outside the configured sub-path. 





    
    
            






    
    
            This means that if the datasource was configured by an administrator to point at some sub-path of a domain (e.g.  https://example.com/api/some_safe_api/ ), it was possible for an editor to create a dashboard referencing the datasource which issues queries containing path traversal characters, which would in turn cause the datasource to instead query arbitrary subpaths on the configured domain (e.g.  https://example.com/api/admin_api/) .

In the rare case that this plugin is configured by an administrator to point back at the Grafana instance itself, this vulnerability becomes considerably more severe, as an administrator browsing a maliciously configured panel could be compelled to make requests to Grafana administrative API endpoints with their credentials, resulting in the potential for privilege escalation, hence the high score for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-5123|2024-08-02T07:44:53.814Z</guid>
      <pubDate>Wed, 14 Feb 2024 15:06:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5526|2024-08-01T21:18:05.358Z -- grafana -- oncall</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5526</link>
      <description>Grafana OnCall is an easy-to-use on-call management tool that will help reduce toil in on-call management through simpler workflows and interfaces that are tailored specifically for engineers.

Grafana OnCall, from version 1.1.37 before 1.5.2 are vulnerable to a Server Side Request Forgery (SSRF) vulnerability in the webhook functionallity. 

This issue was fixed in version 1.5.2</description>
      <guid isPermaLink="false">CVE-2024-5526|2024-08-01T21:18:05.358Z</guid>
      <pubDate>Wed, 05 Jun 2024 11:21:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5123|2024-06-18T09:26:49.158Z -- grafana -- grafana-json-datasource</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-5123</link>
      <description>The JSON datasource plugin ( https://grafana.com/grafana/plugins/marcusolsson-json-datasource/ ) is a Grafana Labs maintained plugin for Grafana that allows for retrieving and processing JSON data from a remote endpoint (including a specific sub-path) configured by an administrator. Due to inadequate sanitization of the dashboard-supplied path parameter, it was possible to include path traversal characters (../) in the path parameter and send requests to paths on the configured endpoint outside the configured sub-path. 





    
    
            






    
    
            This means that if the datasource was configured by an administrator to point at some sub-path of a domain (e.g.  https://example.com/api/some_safe_api/ ), it was possible for an editor to create a dashboard referencing the datasource which issues queries containing path traversal characters, which would in turn cause the datasource to instead query arbitrary subpaths on the configured domain (e.g.  https://example.com/api/admin_api/) .

In the rare case that this plugin is configured by an administrator to point back at the Grafana instance itself, this vulnerability becomes considerably more severe, as an administrator browsing a maliciously configured panel could be compelled to make requests to Grafana administrative API endpoints with their credentials, resulting in the potential for privilege escalation, hence the high score for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-5123|2024-06-18T09:26:49.158Z</guid>
      <pubDate>Wed, 14 Feb 2024 15:06:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1313|2024-06-10T20:46:07.773Z -- grafana -- grafana</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1313</link>
      <description>It is possible for a user in a different organization from the owner of a snapshot to bypass authorization and delete a snapshot by issuing a DELETE request to /api/snapshots/ using its view key. This functionality is intended to only be available to individuals with the permission to write/edit to the snapshot in question, but due to a bug in the authorization logic, deletion requests issued by an unprivileged user in a different organization than the snapshot owner are treated as authorized.

Grafana Labs would like to thank Ravid Mazon and Jay Chen of Palo 
Alto Research for discovering and disclosing this vulnerability.

This issue affects Grafana: from 9.5.0 before 9.5.18, from 10.0.0 before 10.0.13, from 10.1.0 before 10.1.9, from 10.2.0 before 10.2.6, from 10.3.0 before 10.3.5.</description>
      <guid isPermaLink="false">CVE-2024-1313|2024-06-10T20:46:07.773Z</guid>
      <pubDate>Tue, 26 Mar 2024 17:24:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1442|2024-03-07T17:45:43.993Z -- grafana -- grafana</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1442</link>
      <description>A user with the permissions to create a data source can use Grafana API to create a data source with UID set to *.
Doing this will grant the user access to read, query, edit and delete all data sources within the organization.</description>
      <guid isPermaLink="false">CVE-2024-1442|2024-03-07T17:45:43.993Z</guid>
      <pubDate>Thu, 07 Mar 2024 17:45:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5526|2024-06-05T13:49:42.734Z -- grafana -- oncall</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-5526</link>
      <description>Grafana OnCall is an easy-to-use on-call management tool that will help reduce toil in on-call management through simpler workflows and interfaces that are tailored specifically for engineers.

Grafana OnCall, from version 1.1.37 before 1.5.2 are vulnerable to a Server Side Request Forgery (SSRF) vulnerability in the webhook functionallity. 

This issue was fixed in version 1.5.2</description>
      <guid isPermaLink="false">CVE-2024-5526|2024-06-05T13:49:42.734Z</guid>
      <pubDate>Wed, 05 Jun 2024 11:21:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6152|2024-02-13T21:38:01.404Z -- grafana -- grafana</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6152</link>
      <description>A user changing their email after signing up and verifying it can change it without verification in profile settings.

The configuration option "verify_email_enabled" will only validate email only on sign up.</description>
      <guid isPermaLink="false">CVE-2023-6152|2024-02-13T21:38:01.404Z</guid>
      <pubDate>Tue, 13 Feb 2024 21:38:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5122|2024-06-04T17:28:44.777Z -- grafana -- grafana-csv-datasource</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5122</link>
      <description>Grafana is an open-source platform for monitoring and observability. The CSV datasource plugin is a Grafana Labs maintained plugin for Grafana that allows for retrieving and processing CSV data from a remote endpoint configured by an administrator. If this plugin was configured to send requests to a bare host with no path (e.g.  https://www.example.com/ https://www.example.com/` ), requests to an endpoint other than the one configured by the administrator could be triggered by a specially crafted request from any user, resulting in an SSRF vector. AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:N/A:N https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator</description>
      <guid isPermaLink="false">CVE-2023-5122|2024-06-04T17:28:44.777Z</guid>
      <pubDate>Wed, 14 Feb 2024 15:06:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5123|2024-02-14T16:45:44.616Z -- grafana -- grafana-json-datasource</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5123</link>
      <description>The JSON datasource plugin ( https://grafana.com/grafana/plugins/marcusolsson-json-datasource/ https://grafana.com/grafana/plugins/marcusolsson-json-datasource/ ) is a Grafana Labs maintained plugin for Grafana that allows for retrieving and processing JSON data from a remote endpoint (including a specific sub-path) configured by an administrator. Due to inadequate sanitization of the dashboard-supplied path parameter, it was possible to include path traversal characters (../) in the path parameter and send requests to paths on the configured endpoint outside the configured sub-path. 





    
    
            






    
    
            This means that if the datasource was configured by an administrator to point at some sub-path of a domain (e.g.  https://example.com/api/some_safe_api/ https://example.com/api/some_safe_api/ ), it was possible for an editor to create a dashboard referencing the datasource which issues queries containing path traversal characters, which would in turn cause the datasource to instead query arbitrary subpaths on the configured domain (e.g.  https://example.com/api/admin_api/) https://example.com/api/admin_api/) .

In the rare case that this plugin is configured by an administrator to point back at the Grafana instance itself, this vulnerability becomes considerably more severe, as an administrator browsing a maliciously configured panel could be compelled to make requests to Grafana administrative API endpoints with their credentials, resulting in the potential for privilege escalation, hence the high score for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-5123|2024-02-14T16:45:44.616Z</guid>
      <pubDate>Wed, 14 Feb 2024 15:06:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1442|2024-07-26T14:35:58.049Z -- grafana -- grafana</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1442</link>
      <description>A user with the permissions to create a data source can use Grafana API to create a data source with UID set to *.
Doing this will grant the user access to read, query, edit and delete all data sources within the organization.</description>
      <guid isPermaLink="false">CVE-2024-1442|2024-07-26T14:35:58.049Z</guid>
      <pubDate>Thu, 07 Mar 2024 17:45:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1442|2024-08-01T18:40:21.181Z -- grafana -- grafana</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1442</link>
      <description>A user with the permissions to create a data source can use Grafana API to create a data source with UID set to *.
Doing this will grant the user access to read, query, edit and delete all data sources within the organization.</description>
      <guid isPermaLink="false">CVE-2024-1442|2024-08-01T18:40:21.181Z</guid>
      <pubDate>Thu, 07 Mar 2024 17:45:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1313|2024-08-01T18:33:25.596Z -- grafana -- grafana</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1313</link>
      <description>It is possible for a user in a different organization from the owner of a snapshot to bypass authorization and delete a snapshot by issuing a DELETE request to /api/snapshots/ using its view key. This functionality is intended to only be available to individuals with the permission to write/edit to the snapshot in question, but due to a bug in the authorization logic, deletion requests issued by an unprivileged user in a different organization than the snapshot owner are treated as authorized.

Grafana Labs would like to thank Ravid Mazon and Jay Chen of Palo 
Alto Research for discovering and disclosing this vulnerability.

This issue affects Grafana: from 9.5.0 before 9.5.18, from 10.0.0 before 10.0.13, from 10.1.0 before 10.1.9, from 10.2.0 before 10.2.6, from 10.3.0 before 10.3.5.</description>
      <guid isPermaLink="false">CVE-2024-1313|2024-08-01T18:33:25.596Z</guid>
      <pubDate>Tue, 26 Mar 2024 17:24:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6152|2024-08-02T08:21:17.614Z -- grafana -- grafana</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6152</link>
      <description>A user changing their email after signing up and verifying it can change it without verification in profile settings.

The configuration option "verify_email_enabled" will only validate email only on sign up.</description>
      <guid isPermaLink="false">CVE-2023-6152|2024-08-02T08:21:17.614Z</guid>
      <pubDate>Tue, 13 Feb 2024 21:38:01 +0000</pubDate>
    </item>
  </channel>
</rss>

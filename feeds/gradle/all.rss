<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for gradle -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/gradle/all.rss</link>
    <description>The latest CVEs for gradle -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 14:23:13 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-26053|2024-08-02T11:39:06.583Z -- gradle -- gradle
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-26053</link>
      <description>Gradle is a build tool with a focus on build automation and support for multi-language development. This is a collision attack on long IDs (64bits) for PGP keys. Users of dependency verification in Gradle are vulnerable if they use long IDs for PGP keys in a `trusted-key` or `pgp` element in their dependency verification metadata file. The fix is to fail dependency verification if anything but a fingerprint is used in a trust element in dependency verification metadata. The problem is fixed in Gradle 8.0 and above. The problem is also patched in Gradle 6.9.4 and 7.6.1. As a workaround, use only full fingerprint IDs for `trusted-key` or `pgp` element in the metadata is a protection against this issue.</description>
      <guid isPermaLink="false">CVE-2023-26053|2024-08-02T11:39:06.583Z</guid>
      <pubDate>Thu, 02 Mar 2023 03:11:31 +0000</pubDate>
    </item>
  </channel>
</rss>

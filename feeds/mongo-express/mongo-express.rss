<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for mongo-express -- mongo-express</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/mongo-express/mongo-express.rss</link>
    <description>The latest CVEs for mongo-express -- mongo-express</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 22:22:37 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2021-21422|2024-08-03T18:09:16.084Z -- mongo-express -- mongo-express
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-21422</link>
      <description>mongo-express is a web-based MongoDB admin interface, written with Node.js and express. 1: As mentioned in this issue: https://github.com/mongo-express/mongo-express/issues/577, when the content of a cell grows larger than supported size, clicking on a row will show full document unescaped, however this needs admin interaction on cell. 2: Data cells identified as media will be rendered as media, without being sanitized. Example of different renders: image, audio, video, etc. As an example of type 1 attack, an unauthorized user who only can send a large amount of data in a field of a document may use a payload with embedded javascript. This could send an export of a collection to the attacker without even an admin knowing. Other types of attacks such as dropping a database\collection are possible.</description>
      <guid isPermaLink="false">CVE-2021-21422|2024-08-03T18:09:16.084Z</guid>
      <pubDate>Mon, 21 Jun 2021 18:45:12 +0000</pubDate>
    </item>
  </channel>
</rss>

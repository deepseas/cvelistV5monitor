<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for minio -- minio</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/minio/minio.rss</link>
    <description>The latest CVEs for minio -- minio</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 17:22:19 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-28434|2024-08-02T12:38:25.275Z -- minio -- minio
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-28434</link>
      <description>Minio is a Multi-Cloud Object Storage framework. Prior to RELEASE.2023-03-20T20-16-18Z, an attacker can use crafted requests to bypass metadata bucket name checking and put an object into any bucket while processing `PostPolicyBucket`. To carry out this attack, the attacker requires credentials with `arn:aws:s3:::*` permission, as well as enabled Console API access. This issue has been patched in RELEASE.2023-03-20T20-16-18Z. As a workaround, enable browser API access and turn off `MINIO_BROWSER=off`. 
</description>
      <guid isPermaLink="false">CVE-2023-28434|2024-08-02T12:38:25.275Z</guid>
      <pubDate>Wed, 22 Mar 2023 20:44:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-27589|2024-08-02T12:16:36.220Z -- minio -- minio
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-27589</link>
      <description>Minio is a Multi-Cloud Object Storage framework. Starting with RELEASE.2020-12-23T02-24-12Z and prior to RELEASE.2023-03-13T19-46-17Z, a user with `consoleAdmin` permissions can potentially create a user that matches the root credential `accessKey`. Once this user is created successfully, the root credential ceases to work appropriately. The issue is patched in RELEASE.2023-03-13T19-46-17Z. There are ways to work around this via adding higher privileges to the disabled root user via `mc admin policy set`.</description>
      <guid isPermaLink="false">CVE-2023-27589|2024-08-02T12:16:36.220Z</guid>
      <pubDate>Tue, 14 Mar 2023 18:22:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-28433|2024-08-02T12:38:25.491Z -- minio -- minio
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-28433</link>
      <description>Minio is a Multi-Cloud Object Storage framework. All users on Windows prior to version RELEASE.2023-03-20T20-16-18Z are impacted. MinIO fails to filter the `\` character, which allows for arbitrary object placement across buckets. As a result, a user with low privileges, such as an access key, service account, or STS credential, which only has permission to `PutObject` in a specific bucket, can create an admin user. This issue is patched in RELEASE.2023-03-20T20-16-18Z. There are no known workarounds.</description>
      <guid isPermaLink="false">CVE-2023-28433|2024-08-02T12:38:25.491Z</guid>
      <pubDate>Wed, 22 Mar 2023 20:33:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-28432|2024-08-02T12:38:25.355Z -- minio -- minio
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-28432</link>
      <description>Minio is a Multi-Cloud Object Storage framework. In a cluster deployment starting with RELEASE.2019-12-17T23-16-33Z and prior to RELEASE.2023-03-20T20-16-18Z, MinIO returns all environment variables, including `MINIO_SECRET_KEY`
and `MINIO_ROOT_PASSWORD`, resulting in information disclosure. All users of distributed deployment are impacted. All users are advised to upgrade to RELEASE.2023-03-20T20-16-18Z.</description>
      <guid isPermaLink="false">CVE-2023-28432|2024-08-02T12:38:25.355Z</guid>
      <pubDate>Wed, 22 Mar 2023 20:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-25812|2024-08-02T11:32:12.447Z -- minio -- minio
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-25812</link>
      <description>Minio is a Multi-Cloud Object Storage framework. Affected versions do not correctly honor a `Deny` policy on ByPassGoverance. Ideally, minio should return "Access Denied" to all users attempting to DELETE a versionId  with the special header `X-Amz-Bypass-Governance-Retention: true`.  However, this was not honored instead the request will be honored and an object under governance would be incorrectly deleted.  All users are advised to upgrade. There are no known workarounds for this issue.
</description>
      <guid isPermaLink="false">CVE-2023-25812|2024-08-02T11:32:12.447Z</guid>
      <pubDate>Tue, 21 Feb 2023 20:32:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-36107|2024-08-02T03:30:13.046Z -- minio -- minio</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-36107</link>
      <description>MinIO is a High Performance Object Storage released under GNU Affero General Public License v3.0. `If-Modified-Since` and `If-Unmodified-Since` headers when used with anonymous requests by sending a random object name requests can be used to determine if an object exists or not on the server on a specific bucket and also gain access to some amount of
information such as  `Last-Modified (of the latest version)`, `Etag (of the latest version)`, `x-amz-version-id (of the latest version)`, `Expires (metadata value of the latest version)`, `Cache-Control (metadata value of the latest version)`. This conditional check was being honored before validating if the anonymous access is indeed allowed on the metadata of an object. This issue has been addressed in commit `e0fe7cc3917`. Users must upgrade to RELEASE.2024-05-27T19-17-46Z for the fix. There are no known workarounds for this issue.</description>
      <guid isPermaLink="false">CVE-2024-36107|2024-08-02T03:30:13.046Z</guid>
      <pubDate>Tue, 28 May 2024 18:50:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-36107|2024-05-28T18:50:51.013Z -- minio -- minio</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-36107</link>
      <description>MinIO is a High Performance Object Storage released under GNU Affero General Public License v3.0. `If-Modified-Since` and `If-Unmodified-Since` headers when used with anonymous requests by sending a random object name requests can be used to determine if an object exists or not on the server on a specific bucket and also gain access to some amount of
information such as  `Last-Modified (of the latest version)`, `Etag (of the latest version)`, `x-amz-version-id (of the latest version)`, `Expires (metadata value of the latest version)`, `Cache-Control (metadata value of the latest version)`. This conditional check was being honored before validating if the anonymous access is indeed allowed on the metadata of an object. This issue has been addressed in commit `e0fe7cc3917`. Users must upgrade to RELEASE.2024-05-27T19-17-46Z for the fix. There are no known workarounds for this issue.</description>
      <guid isPermaLink="false">CVE-2024-36107|2024-05-28T18:50:51.013Z</guid>
      <pubDate>Tue, 28 May 2024 18:50:51 +0000</pubDate>
    </item>
  </channel>
</rss>

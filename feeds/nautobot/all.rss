<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for nautobot -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/nautobot/all.rss</link>
    <description>The latest CVEs for nautobot -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 13:23:41 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-25657|2024-08-02T11:25:19.362Z -- nautobot -- nautobot
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-25657</link>
      <description>Nautobot is a Network Source of Truth and Network Automation Platform. All users of Nautobot versions earlier than 1.5.7 are impacted by a remote code execution vulnerability. Nautobot did not properly sandbox Jinja2 template rendering. In Nautobot 1.5.7 has enabled sandboxed environments for the Jinja2 template engine used internally for template rendering for the following objects: `extras.ComputedField`, `extras.CustomLink`, `extras.ExportTemplate`, `extras.Secret`, `extras.Webhook`. While no active exploits of this vulnerability are known this change has been made as a preventative measure to protect against any potential remote code execution attacks utilizing maliciously crafted template code. This change forces the Jinja2 template engine to use a `SandboxedEnvironment` on all new installations of Nautobot. This addresses any potential unsafe code execution everywhere the helper function `nautobot.utilities.utils.render_jinja2` is called. Additionally, the documentation that had previously suggesting the direct use of `jinja2.Template` has been revised to suggest `render_jinja2`. Users are advised to upgrade to Nautobot 1.5.7 or newer. For users that are unable to upgrade to the latest release of Nautobot, you may add the following setting to your `nautobot_config.py` to apply the sandbox environment enforcement: `TEMPLATES[1]["OPTIONS"]["environment"] = "jinja2.sandbox.SandboxedEnvironment"` After applying this change, you must restart all Nautobot services, including any Celery worker processes. **Note:** *Nautobot specifies two template engines by default, the first being “django” for the Django built-in template engine, and the second being “jinja” for the Jinja2 template engine. This recommended setting will update the second item in the list of template engines, which is the Jinja2 engine.* For users that are unable to immediately update their configuration such as if a Nautobot service restart is too disruptive to operations, access to provide custom Jinja2 template values may be mitigated using permissions to restrict “change” (write) actions to the affected object types listed in the first section. **Note:** *This solution is intended to be stopgap until you can successfully update your `nautobot_config.py` or upgrade your Nautobot instance to apply the sandboxed environment enforcement.*</description>
      <guid isPermaLink="false">CVE-2023-25657|2024-08-02T11:25:19.362Z</guid>
      <pubDate>Tue, 21 Feb 2023 20:51:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-36112|2024-08-02T03:30:13.120Z -- nautobot -- nautobot</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-36112</link>
      <description>Nautobot is a Network Source of Truth and Network Automation Platform. A user with permissions to view Dynamic Group records (`extras.view_dynamicgroup` permission) can use the Dynamic Group detail UI view (`/extras/dynamic-groups//`) and/or the members REST API view (`/api/extras/dynamic-groups//members/`) to list the objects that are members of a given Dynamic Group. In versions of Nautobot between 1.3.0 (where the Dynamic Groups feature was added) and 1.6.22 inclusive, and 2.0.0 through 2.2.4 inclusive, Nautobot fails to restrict these listings based on the member object permissions - for example a Dynamic Group of Device objects will list all Devices that it contains, regardless of the user's `dcim.view_device` permissions or lack thereof. This issue has been fixed in Nautobot versions 1.6.23 and 2.2.5. Users are advised to upgrade. This vulnerability can be partially mitigated by removing `extras.view_dynamicgroup` permission from users however a full fix will require upgrading.</description>
      <guid isPermaLink="false">CVE-2024-36112|2024-08-02T03:30:13.120Z</guid>
      <pubDate>Tue, 28 May 2024 22:26:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29199|2024-08-02T01:10:54.048Z -- nautobot -- nautobot</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-29199</link>
      <description>Nautobot is a Network Source of Truth and Network Automation Platform. A number of Nautobot URL endpoints were found to be improperly accessible to unauthenticated (anonymous) users. These endpoints will not disclose any Nautobot data to an unauthenticated user unless the Nautobot configuration variable EXEMPT_VIEW_PERMISSIONS is changed from its default value (an empty list) to permit access to specific data by unauthenticated users. This vulnerability is fixed in 1.6.16 and 2.1.9.</description>
      <guid isPermaLink="false">CVE-2024-29199|2024-08-02T01:10:54.048Z</guid>
      <pubDate>Tue, 26 Mar 2024 03:08:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-32979|2024-07-24T18:15:30.948Z -- nautobot -- nautobot</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-32979</link>
      <description>Nautobot is a Network Source of Truth and Network Automation Platform built as a web application atop the Django Python framework with a PostgreSQL or MySQL database. It was discovered that due to improper handling and escaping of user-provided query parameters, a maliciously crafted Nautobot URL could potentially be used to execute a Reflected Cross-Site Scripting (Reflected XSS) attack against users. All filterable object-list views in Nautobot are vulnerable. This issue has been fixed in Nautobot versions 1.6.20 and 2.2.3. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-32979|2024-07-24T18:15:30.948Z</guid>
      <pubDate>Wed, 01 May 2024 10:49:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29199|2024-03-26T03:08:21.873Z -- nautobot -- nautobot</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-29199</link>
      <description>Nautobot is a Network Source of Truth and Network Automation Platform. A number of Nautobot URL endpoints were found to be improperly accessible to unauthenticated (anonymous) users. These endpoints will not disclose any Nautobot data to an unauthenticated user unless the Nautobot configuration variable EXEMPT_VIEW_PERMISSIONS is changed from its default value (an empty list) to permit access to specific data by unauthenticated users. This vulnerability is fixed in 1.6.16 and 2.1.9.</description>
      <guid isPermaLink="false">CVE-2024-29199|2024-03-26T03:08:21.873Z</guid>
      <pubDate>Tue, 26 Mar 2024 03:08:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-32979|2024-05-01T10:49:56.643Z -- nautobot -- nautobot</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-32979</link>
      <description>Nautobot is a Network Source of Truth and Network Automation Platform built as a web application atop the Django Python framework with a PostgreSQL or MySQL database. It was discovered that due to improper handling and escaping of user-provided query parameters, a maliciously crafted Nautobot URL could potentially be used to execute a Reflected Cross-Site Scripting (Reflected XSS) attack against users. All filterable object-list views in Nautobot are vulnerable. This issue has been fixed in Nautobot versions 1.6.20 and 2.2.3. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-32979|2024-05-01T10:49:56.643Z</guid>
      <pubDate>Wed, 01 May 2024 10:49:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-36112|2024-05-28T22:26:12.487Z -- nautobot -- nautobot</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-36112</link>
      <description>Nautobot is a Network Source of Truth and Network Automation Platform. A user with permissions to view Dynamic Group records (`extras.view_dynamicgroup` permission) can use the Dynamic Group detail UI view (`/extras/dynamic-groups//`) and/or the members REST API view (`/api/extras/dynamic-groups//members/`) to list the objects that are members of a given Dynamic Group. In versions of Nautobot between 1.3.0 (where the Dynamic Groups feature was added) and 1.6.22 inclusive, and 2.0.0 through 2.2.4 inclusive, Nautobot fails to restrict these listings based on the member object permissions - for example a Dynamic Group of Device objects will list all Devices that it contains, regardless of the user's `dcim.view_device` permissions or lack thereof. This issue has been fixed in Nautobot versions 1.6.23 and 2.2.5. Users are advised to upgrade. This vulnerability can be partially mitigated by removing `extras.view_dynamicgroup` permission from users however a full fix will require upgrading.</description>
      <guid isPermaLink="false">CVE-2024-36112|2024-05-28T22:26:12.487Z</guid>
      <pubDate>Tue, 28 May 2024 22:26:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34707|2024-06-04T17:41:11.308Z -- nautobot -- nautobot</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-34707</link>
      <description>Nautobot is a Network Source of Truth and Network Automation Platform. A Nautobot user with admin privileges can modify the `BANNER_TOP`, `BANNER_BOTTOM`, and `BANNER_LOGIN` configuration settings via the `/admin/constance/config/` endpoint. Normally these settings are used to provide custom banner text at the top and bottom of all Nautobot web pages (or specifically on the login page in the case of `BANNER_LOGIN`) but it was reported that an admin user can make use of these settings to inject arbitrary HTML, potentially exposing Nautobot users to security issues such as cross-site scripting (stored XSS). The vulnerability is fixed in Nautobot 1.6.22 and 2.2.4.</description>
      <guid isPermaLink="false">CVE-2024-34707|2024-06-04T17:41:11.308Z</guid>
      <pubDate>Mon, 13 May 2024 19:22:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-36112|2024-07-19T20:49:26.384Z -- nautobot -- nautobot</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-36112</link>
      <description>Nautobot is a Network Source of Truth and Network Automation Platform. A user with permissions to view Dynamic Group records (`extras.view_dynamicgroup` permission) can use the Dynamic Group detail UI view (`/extras/dynamic-groups//`) and/or the members REST API view (`/api/extras/dynamic-groups//members/`) to list the objects that are members of a given Dynamic Group. In versions of Nautobot between 1.3.0 (where the Dynamic Groups feature was added) and 1.6.22 inclusive, and 2.0.0 through 2.2.4 inclusive, Nautobot fails to restrict these listings based on the member object permissions - for example a Dynamic Group of Device objects will list all Devices that it contains, regardless of the user's `dcim.view_device` permissions or lack thereof. This issue has been fixed in Nautobot versions 1.6.23 and 2.2.5. Users are advised to upgrade. This vulnerability can be partially mitigated by removing `extras.view_dynamicgroup` permission from users however a full fix will require upgrading.</description>
      <guid isPermaLink="false">CVE-2024-36112|2024-07-19T20:49:26.384Z</guid>
      <pubDate>Tue, 28 May 2024 22:26:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34707|2024-08-02T02:59:22.584Z -- nautobot -- nautobot</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34707</link>
      <description>Nautobot is a Network Source of Truth and Network Automation Platform. A Nautobot user with admin privileges can modify the `BANNER_TOP`, `BANNER_BOTTOM`, and `BANNER_LOGIN` configuration settings via the `/admin/constance/config/` endpoint. Normally these settings are used to provide custom banner text at the top and bottom of all Nautobot web pages (or specifically on the login page in the case of `BANNER_LOGIN`) but it was reported that an admin user can make use of these settings to inject arbitrary HTML, potentially exposing Nautobot users to security issues such as cross-site scripting (stored XSS). The vulnerability is fixed in Nautobot 1.6.22 and 2.2.4.</description>
      <guid isPermaLink="false">CVE-2024-34707|2024-08-02T02:59:22.584Z</guid>
      <pubDate>Mon, 13 May 2024 19:22:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-32979|2024-08-02T02:27:53.473Z -- nautobot -- nautobot</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-32979</link>
      <description>Nautobot is a Network Source of Truth and Network Automation Platform built as a web application atop the Django Python framework with a PostgreSQL or MySQL database. It was discovered that due to improper handling and escaping of user-provided query parameters, a maliciously crafted Nautobot URL could potentially be used to execute a Reflected Cross-Site Scripting (Reflected XSS) attack against users. All filterable object-list views in Nautobot are vulnerable. This issue has been fixed in Nautobot versions 1.6.20 and 2.2.3. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-32979|2024-08-02T02:27:53.473Z</guid>
      <pubDate>Wed, 01 May 2024 10:49:56 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for matrix-org -- matrix-appservice-irc</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/matrix-org/matrix-appservice-irc.rss</link>
    <description>The latest CVEs for matrix-org -- matrix-appservice-irc</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 12 Jun 2024 11:24:23 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-38700|2023-08-04T18:05:43.187Z -- matrix-org -- matrix-appservice-irc
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-38700</link>
      <description>matrix-appservice-irc is a Node.js IRC bridge for Matrix. Prior to version 1.0.1, it was possible to craft an event such that it would leak part of a targeted message event from another bridged room. This required knowing an event ID to target. Version 1.0.1n fixes this issue. As a workaround, set the `matrixHandler.eventCacheSize` config value to `0`. This workaround may impact performance.</description>
      <guid isPermaLink="false">CVE-2023-38700|2023-08-04T18:05:43.187Z</guid>
      <pubDate>Fri, 04 Aug 2023 18:05:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-38690|2023-08-04T16:31:41.840Z -- matrix-org -- matrix-appservice-irc
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-38690</link>
      <description>matrix-appservice-irc is a Node.js IRC bridge for Matrix. Prior to version 1.0.1, it is possible to craft a command with newlines which would not be properly parsed. This would mean you could pass a string of commands as a channel name, which would then be run by the IRC bridge bot. Versions 1.0.1 and above are patched. There are no robust workarounds to the bug. One may disable dynamic channels in the config to disable the most common execution method but others may exist.</description>
      <guid isPermaLink="false">CVE-2023-38690|2023-08-04T16:31:41.840Z</guid>
      <pubDate>Fri, 04 Aug 2023 16:31:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-32000|2024-04-12T20:02:51.987Z -- matrix-org -- matrix-appservice-irc
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-32000</link>
      <description>matrix-appservice-irc is a Node.js IRC bridge for the Matrix messaging protocol. matrix-appservice-irc before version 2.0.0 can be exploited to leak the truncated body of a message if a malicious user sends a Matrix reply to an event ID they don't have access to. As a precondition to the attack, the malicious user needs to know the event ID of the message they want to leak, as well as to be joined to both the Matrix room and the IRC channel it is bridged to. The message reply containing the leaked message content is visible to IRC channel members when this happens. matrix-appservice-irc 2.0.0 checks whether the user has permission to view an event before constructing a reply. Administrators should upgrade to this version. It's possible to limit the amount of information leaked by setting a reply template that doesn't contain the original message. See these lines `601-604` in the configuration file linked.</description>
      <guid isPermaLink="false">CVE-2024-32000|2024-04-12T20:02:51.987Z</guid>
      <pubDate>Fri, 12 Apr 2024 20:02:51 +0000</pubDate>
    </item>
  </channel>
</rss>

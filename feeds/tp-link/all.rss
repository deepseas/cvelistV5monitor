<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for TP-Link -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/tp-link/all.rss</link>
    <description>The latest CVEs for TP-Link -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 05 Jun 2024 21:21:41 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-41184|2024-06-05T20:45:27.985Z -- tp-link -- tapo%20c210
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-41184</link>
      <description>TP-Link Tapo C210 ActiveCells Stack-based Buffer Overflow Remote Code Execution Vulnerability. This vulnerability allows network-adjacent attackers to execute arbitrary code on affected installations of TP-Link Tapo C210 IP cameras. Although authentication is required to exploit this vulnerability, the existing authentication mechanism can be bypassed.

The specific flaw exists within the handling of the ActiveCells parameter of the CreateRules and ModifyRules APIs. The issue results from the lack of proper validation of the length of user-supplied data prior to copying it to a fixed-length stack-based buffer. An attacker can leverage this vulnerability to execute code in the context of root. Was ZDI-CAN-20589.</description>
      <guid isPermaLink="false">CVE-2023-41184|2024-06-05T20:45:27.985Z</guid>
      <pubDate>Fri, 03 May 2024 02:11:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2188|2024-03-05T12:15:25.297Z -- tp-link -- archer%20ax50</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2188</link>
      <description>Cross-Site Scripting (XSS) vulnerability stored in TP-Link Archer AX50 affecting firmware version 1.0.11 build 2022052. This vulnerability could allow an unauthenticated attacker to create a port mapping rule via a SOAP request and store a malicious JavaScript payload within that rule, which could result in an execution of the JavaScript payload when the rule is loaded.</description>
      <guid isPermaLink="false">CVE-2024-2188|2024-03-05T12:15:25.297Z</guid>
      <pubDate>Tue, 05 Mar 2024 12:15:25 +0000</pubDate>
    </item>
  </channel>
</rss>

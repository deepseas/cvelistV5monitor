<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for contiki-ng -- contiki-ng</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/contiki-ng/contiki-ng.rss</link>
    <description>The latest CVEs for contiki-ng -- contiki-ng</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 25 Sep 2024 21:23:00 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-37281|2024-09-25T18:05:23.793Z -- contiki-ng -- contiki-ng
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-37281</link>
      <description>Contiki-NG is an operating system for internet-of-things devices. In versions 4.9 and prior, when processing the various IPv6 header fields during IPHC header decompression, Contiki-NG confirms the received packet buffer contains enough data as needed for that field. But no similar check is done before decompressing the IPv6 address. Therefore, up to 16 bytes can be read out of bounds on the line with the statement `memcpy(&amp;ipaddr-&gt;u8[16 - postcount], iphc_ptr, postcount);`. The value of `postcount` depends on the address compression used in the received packet and can be controlled by the attacker. As a result, an attacker can inject a packet that causes an out-of-bound read. As of time of publication, a patched version is not available. As a workaround, one can apply the changes in Contiki-NG pull request #2509 to patch the system.</description>
      <guid isPermaLink="false">CVE-2023-37281|2024-09-25T18:05:23.793Z</guid>
      <pubDate>Fri, 15 Sep 2023 19:17:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-37459|2024-09-25T18:04:01.248Z -- contiki-ng -- contiki-ng
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-37459</link>
      <description>Contiki-NG is an operating system for internet-of-things devices. In versions 4.9 and prior, when a packet is received, the Contiki-NG network stack attempts to start the periodic TCP timer if it is a TCP packet with the SYN flag set. But the implementation does not first verify that a full TCP header has been received. Specifically, the implementation attempts to access the flags field from the TCP buffer in the following conditional expression in the `check_for_tcp_syn` function. For this reason, an attacker can inject a truncated TCP packet, which will lead to an out-of-bound read from the packet buffer. As of time of publication, a patched version is not available. As a workaround, one can apply the changes in Contiki-NG pull request #2510 to patch the system.</description>
      <guid isPermaLink="false">CVE-2023-37459|2024-09-25T18:04:01.248Z</guid>
      <pubDate>Fri, 15 Sep 2023 19:19:30 +0000</pubDate>
    </item>
  </channel>
</rss>

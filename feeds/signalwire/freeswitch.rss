<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for signalwire -- freeswitch</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/signalwire/freeswitch.rss</link>
    <description>The latest CVEs for signalwire -- freeswitch</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 21:22:17 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-40018|2024-08-02T18:24:54.689Z -- signalwire -- freeswitch
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-40018</link>
      <description>FreeSWITCH is a Software Defined Telecom Stack enabling the digital transformation from proprietary telecom switches to a software implementation that runs on any commodity hardware. Prior to version 1.10.10, FreeSWITCH allows remote users to trigger out of bounds write by offering an ICE candidate with unknown component ID. When an SDP is offered with any ICE candidates with an unknown component ID, FreeSWITCH will make an out of bounds write to its  arrays. By abusing this vulnerability, an attacker is able to corrupt FreeSWITCH memory leading to an undefined behavior of the system or a crash of it. Version 1.10.10 contains a patch for this issue.</description>
      <guid isPermaLink="false">CVE-2023-40018|2024-08-02T18:24:54.689Z</guid>
      <pubDate>Fri, 15 Sep 2023 19:32:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-40019|2024-08-02T18:24:54.547Z -- signalwire -- freeswitch
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-40019</link>
      <description>FreeSWITCH is a Software Defined Telecom Stack enabling the digital transformation from proprietary telecom switches to a software implementation that runs on any commodity hardware. Prior to version 1.10.10, FreeSWITCH allows authorized users to cause a denial of service attack by sending re-INVITE with SDP containing duplicate codec names. When a call in FreeSWITCH completes codec negotiation, the `codec_string` channel variable is set with the result of the negotiation. On a subsequent re-negotiation, if an SDP is offered that contains codecs with the same names but with different formats, there may be too many codec matches detected by FreeSWITCH leading to overflows of its internal arrays. By abusing this vulnerability, an attacker is able to corrupt stack of FreeSWITCH leading to an undefined behavior of the system or simply crash it. Version 1.10.10 contains a patch for this issue.</description>
      <guid isPermaLink="false">CVE-2023-40019|2024-08-02T18:24:54.547Z</guid>
      <pubDate>Fri, 15 Sep 2023 19:34:32 +0000</pubDate>
    </item>
  </channel>
</rss>

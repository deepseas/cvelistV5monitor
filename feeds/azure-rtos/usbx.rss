<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for azure-rtos -- usbx</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/azure-rtos/usbx.rss</link>
    <description>The latest CVEs for azure-rtos -- usbx</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 09:23:42 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-29246|2024-08-03T06:17:54.435Z -- azure-rtos -- usbx
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-29246</link>
      <description>Azure RTOS USBX is a USB host, device, and on-the-go (OTG) embedded stack. Prior to version 6.1.11, he USBX DFU UPLOAD functionality may be utilized to introduce a buffer overflow resulting in overwrite of memory contents. In particular cases this may allow an attacker to bypass security features or execute arbitrary code. The implementation of `ux_device_class_dfu_control_request` function does not assure that a buffer overflow will not occur during handling of the DFU UPLOAD command. When an attacker issues the `UX_SLAVE_CLASS_DFU_COMMAND_UPLOAD` control transfer request with `wLenght` larger than the buffer size (`UX_SLAVE_REQUEST_CONTROL_MAX_LENGTH`, 256 bytes), depending on the actual implementation of `dfu -&gt; ux_slave_class_dfu_read`, a buffer overflow may occur. In example `ux_slave_class_dfu_read` may read 4096 bytes (or more up to 65k) to a 256 byte buffer ultimately resulting in an overflow. Furthermore in case an attacker has some control over the read flash memory, this may result in execution of arbitrary code and platform compromise. A fix for this issue has been included in USBX release 6.1.11. As a workaround, align request and buffer size to assure that buffer boundaries are respected.</description>
      <guid isPermaLink="false">CVE-2022-29246|2024-08-03T06:17:54.435Z</guid>
      <pubDate>Tue, 24 May 2022 15:00:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-29223|2024-08-03T06:17:54.276Z -- azure-rtos -- usbx
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-29223</link>
      <description>Azure RTOS USBX is a USB host, device, and on-the-go (OTG) embedded stack. In versions prior to 6.1.10, an attacker can cause a buffer overflow by providing the Azure RTOS USBX host stack a HUB descriptor with `bNbPorts` set to a value greater than `UX_MAX_TT` which defaults to 8. For a `bNbPorts` value of 255, the implementation of `ux_host_class_hub_descriptor_get` function will modify the contents of `hub` -&gt; `ux_host_class_hub_device` -&gt; `ux_device_hub_tt` array violating the end boundary by 255 - `UX_MAX_TT` items. The USB host stack needs to validate the number of ports reported by the hub, and if the value is larger than UX_MAX_TT, USB stack needs to reject the request. This fix has been included in USBX release 6.1.10.</description>
      <guid isPermaLink="false">CVE-2022-29223|2024-08-03T06:17:54.276Z</guid>
      <pubDate>Tue, 24 May 2022 14:25:10 +0000</pubDate>
    </item>
  </channel>
</rss>

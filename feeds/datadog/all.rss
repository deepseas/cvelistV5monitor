<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for DataDog -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/datadog/all.rss</link>
    <description>The latest CVEs for DataDog -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 19:19:42 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-23530|2024-08-03T03:43:46.472Z -- datadog -- guarddog
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-23530</link>
      <description>GuardDog is a CLI tool to identify malicious PyPI packages. Versions prior to v0.1.8 are vulnerable to arbitrary file write when scanning a specially-crafted remote PyPI package. Extracting files using shutil.unpack_archive() from a potentially malicious tarball without validating that the destination file path is within the intended destination directory can cause files outside the destination directory to be overwritten.  This issue is patched in version 0.1.8. Potential workarounds include using a safer module, like zipfile, and validating the location of the extracted files and discarding those with malicious paths.</description>
      <guid isPermaLink="false">CVE-2022-23530|2024-08-03T03:43:46.472Z</guid>
      <pubDate>Fri, 16 Dec 2022 22:56:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-23531|2024-08-03T03:43:46.507Z -- datadog -- guarddog
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-23531</link>
      <description>GuardDog is a CLI tool to identify malicious PyPI packages. Versions prior to 0.1.5 are vulnerable to Relative Path Traversal when scanning a specially-crafted local PyPI package. Running GuardDog against a specially-crafted package can allow an attacker to write an arbitrary file on the machine where GuardDog is executed due to a path traversal vulnerability when extracting the .tar.gz file of the package being scanned, which exists by design in the tarfile.TarFile.extractall function. This issue is patched in version 0.1.5.</description>
      <guid isPermaLink="false">CVE-2022-23531|2024-08-03T03:43:46.507Z</guid>
      <pubDate>Fri, 16 Dec 2022 23:41:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-21331|2024-08-03T18:09:15.420Z -- datadog -- datadog-api-client-java
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-21331</link>
      <description>The Java client for the Datadog API before version 1.0.0-beta.9 has a local information disclosure of sensitive information downloaded via the API using the API Client. The Datadog API is executed on a unix-like system with multiple users. The API is used to download a file containing sensitive information. This sensitive information is exposed locally to other users. This vulnerability exists in the API Client for version 1 and 2. The method `prepareDownloadFilecreates` creates a temporary file with the permissions bits of `-rw-r--r--` on unix-like systems. On unix-like systems, the system temporary directory is shared between users. As such, the contents of the file downloaded via the `downloadFileFromResponse` method will be visible to all other users on the local system. Analysis of the finding determined that the affected code was unused, meaning that the exploitation likelihood is low. The unused code has been removed, effectively mitigating this issue. This issue has been patched in version 1.0.0-beta.9. As a workaround one may specify `java.io.tmpdir` when starting the JVM with the flag `-Djava.io.tmpdir`, specifying a path to a directory with `drw-------` permissions owned by `dd-agent`.</description>
      <guid isPermaLink="false">CVE-2021-21331|2024-08-03T18:09:15.420Z</guid>
      <pubDate>Wed, 03 Mar 2021 23:00:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-38525|2024-08-02T04:12:25.118Z -- datadog -- dd-trace-cpp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-38525</link>
      <description>dd-trace-cpp is the Datadog distributed tracing for C++. When the library fails to extract trace context due to malformed unicode, it logs the list of audited headers and their values using the `nlohmann` JSON library. However, due to the way the JSON library is invoked, it throws an uncaught exception, which results in a crash. This vulnerability has been patched in version 0.2.2.</description>
      <guid isPermaLink="false">CVE-2024-38525|2024-08-02T04:12:25.118Z</guid>
      <pubDate>Fri, 28 Jun 2024 21:10:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-38525|2024-06-28T21:10:57.138Z -- datadog -- dd-trace-cpp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-38525</link>
      <description>dd-trace-cpp is the Datadog distributed tracing for C++. When the library fails to extract trace context due to malformed unicode, it logs the list of audited headers and their values using the `nlohmann` JSON library. However, due to the way the JSON library is invoked, it throws an uncaught exception, which results in a crash. This vulnerability has been patched in version 0.2.2.</description>
      <guid isPermaLink="false">CVE-2024-38525|2024-06-28T21:10:57.138Z</guid>
      <pubDate>Fri, 28 Jun 2024 21:10:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-38525|2024-07-02T15:54:07.148Z -- datadog -- dd-trace-cpp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-38525</link>
      <description>dd-trace-cpp is the Datadog distributed tracing for C++. When the library fails to extract trace context due to malformed unicode, it logs the list of audited headers and their values using the `nlohmann` JSON library. However, due to the way the JSON library is invoked, it throws an uncaught exception, which results in a crash. This vulnerability has been patched in version 0.2.2.</description>
      <guid isPermaLink="false">CVE-2024-38525|2024-07-02T15:54:07.148Z</guid>
      <pubDate>Fri, 28 Jun 2024 21:10:57 +0000</pubDate>
    </item>
  </channel>
</rss>

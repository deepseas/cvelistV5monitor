<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Apache Software Foundation -- Apache StreamPark (incubating)</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/apache%20software%20foundation/apache%20streampark%20%28incubating%29.rss</link>
    <description>The latest CVEs for Apache Software Foundation -- Apache StreamPark (incubating)</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 21:22:01 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-30867|2024-08-02T14:37:15.494Z -- apache%20software%20foundation -- apache%20streampark%20%28incubating%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-30867</link>
      <description>In the Streampark platform, when users log in to the system and use certain features, some pages provide a name-based fuzzy search, such as job names, role names, etc. The sql syntax :select * from table where jobName like '%jobName%'. However, the jobName field may receive illegal parameters, leading to SQL injection. This could potentially result in information leakage.

Mitigation:

Users are recommended to upgrade to version 2.1.2, which fixes the issue.

</description>
      <guid isPermaLink="false">CVE-2023-30867|2024-08-02T14:37:15.494Z</guid>
      <pubDate>Fri, 15 Dec 2023 12:14:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29737|2024-07-22T15:29:56.839Z -- apache%20software%20foundation -- apache%20streampark%20%28incubating%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-29737</link>
      <description>In streampark, the project module integrates Maven's compilation capabilities. The input parameter validation is not strict, allowing attackers to insert commands for remote command execution, The prerequisite for a successful attack is that the user needs to log in to the streampark system and have system-level permissions. Generally, only users of that system have the authorization to log in, and users would not manually input a dangerous operation command. Therefore, the risk level of this vulnerability is very low.

Mitigation:

all users should upgrade to 2.1.4

Background info:

Log in to Streampark using the default username (e.g. test1, test2, test3) and the default password (streampark). Navigate to the Project module, then add a new project. Enter the git repository address of the project and input `touch /tmp/success_2.1.2` as the "Build Argument". Note that there is no verification and interception of the special character "`". As a result, you will find that this injection command will be successfully executed after executing the build.

In the latest version, the special symbol ` is intercepted.</description>
      <guid isPermaLink="false">CVE-2024-29737|2024-07-22T15:29:56.839Z</guid>
      <pubDate>Wed, 17 Jul 2024 08:21:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-52291|2024-07-22T15:31:31.956Z -- apache%20software%20foundation -- apache%20streampark%20%28incubating%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-52291</link>
      <description>In streampark, the project module integrates Maven's compilation capabilities. The input parameter validation is not strict, allowing attackers to insert commands for remote command execution, The prerequisite for a successful attack is that the user needs to log in to the streampark system and have system-level permissions. Generally, only users of that system have the authorization to log in, and users would not manually input a dangerous operation command. Therefore, the risk level of this vulnerability is very low.

Background:

In the "Project" module, the maven build args  “&lt;” operator causes command injection. e.g : “&lt; (curl  http://xxx.com )” will be executed as a command injection,

Mitigation:

all users should upgrade to 2.1.4,  The "&lt;" operator will blocked。</description>
      <guid isPermaLink="false">CVE-2023-52291|2024-07-22T15:31:31.956Z</guid>
      <pubDate>Wed, 17 Jul 2024 08:16:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-52290|2024-07-16T13:18:13.487Z -- apache%20software%20foundation -- apache%20streampark%20%28incubating%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-52290</link>
      <description>In streampark-console the list pages(e.g: application pages), users can sort page by field. This sort field is sent from the front-end to the back-end, and the SQL query is generated using this field. However, because this sort field isn't validated, there is a risk of SQL injection vulnerability. The attacker must successfully log into the system to launch an attack, which may cause data leakage. Since no data will be written, so this is a low-impact vulnerability.

Mitigation:

all users should upgrade to 2.1.4,  Such parameters will be blocked.</description>
      <guid isPermaLink="false">CVE-2023-52290|2024-07-16T13:18:13.487Z</guid>
      <pubDate>Tue, 16 Jul 2024 07:37:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-52290|2024-07-16T07:37:38.660Z -- apache%20software%20foundation -- apache%20streampark%20%28incubating%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-52290</link>
      <description>In streampark-console the list pages(e.g: application pages), users can sort page by field. This sort field is sent from the front-end to the back-end, and the SQL query is generated using this field. However, because this sort field isn't validated, there is a risk of SQL injection vulnerability. The attacker must successfully log into the system to launch an attack, which may cause data leakage. Since no data will be written, so this is a low-impact vulnerability.

Mitigation:

all users should upgrade to 2.1.4,  Such parameters will be blocked.</description>
      <guid isPermaLink="false">CVE-2023-52290|2024-07-16T07:37:38.660Z</guid>
      <pubDate>Tue, 16 Jul 2024 07:37:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-52291|2024-07-17T08:16:12.520Z -- apache%20software%20foundation -- apache%20streampark%20%28incubating%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-52291</link>
      <description>In streampark, the project module integrates Maven's compilation capabilities. The input parameter validation is not strict, allowing attackers to insert commands for remote command execution, The prerequisite for a successful attack is that the user needs to log in to the streampark system and have system-level permissions. Generally, only users of that system have the authorization to log in, and users would not manually input a dangerous operation command. Therefore, the risk level of this vulnerability is very low.

Background:

In the "Project" module, the maven build args  “&lt;” operator causes command injection. e.g : “&lt; (curl  http://xxx.com )” will be executed as a command injection,

Mitigation:

all users should upgrade to 2.1.4,  The "&lt;" operator will blocked。</description>
      <guid isPermaLink="false">CVE-2023-52291|2024-07-17T08:16:12.520Z</guid>
      <pubDate>Wed, 17 Jul 2024 08:16:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29737|2024-07-17T08:21:12.035Z -- apache%20software%20foundation -- apache%20streampark%20%28incubating%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-29737</link>
      <description>In streampark, the project module integrates Maven's compilation capabilities. The input parameter validation is not strict, allowing attackers to insert commands for remote command execution, The prerequisite for a successful attack is that the user needs to log in to the streampark system and have system-level permissions. Generally, only users of that system have the authorization to log in, and users would not manually input a dangerous operation command. Therefore, the risk level of this vulnerability is very low.

Mitigation:

all users should upgrade to 2.1.4

Background info:

Log in to Streampark using the default username (e.g. test1, test2, test3) and the default password (streampark). Navigate to the Project module, then add a new project. Enter the git repository address of the project and input `touch /tmp/success_2.1.2` as the "Build Argument". Note that there is no verification and interception of the special character "`". As a result, you will find that this injection command will be successfully executed after executing the build.

In the latest version, the special symbol ` is intercepted.</description>
      <guid isPermaLink="false">CVE-2024-29737|2024-07-17T08:21:12.035Z</guid>
      <pubDate>Wed, 17 Jul 2024 08:21:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29737|2024-08-02T01:10:55.460Z -- apache%20software%20foundation -- apache%20streampark%20%28incubating%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-29737</link>
      <description>In streampark, the project module integrates Maven's compilation capabilities. The input parameter validation is not strict, allowing attackers to insert commands for remote command execution, The prerequisite for a successful attack is that the user needs to log in to the streampark system and have system-level permissions. Generally, only users of that system have the authorization to log in, and users would not manually input a dangerous operation command. Therefore, the risk level of this vulnerability is very low.

Mitigation:

all users should upgrade to 2.1.4

Background info:

Log in to Streampark using the default username (e.g. test1, test2, test3) and the default password (streampark). Navigate to the Project module, then add a new project. Enter the git repository address of the project and input `touch /tmp/success_2.1.2` as the "Build Argument". Note that there is no verification and interception of the special character "`". As a result, you will find that this injection command will be successfully executed after executing the build.

In the latest version, the special symbol ` is intercepted.</description>
      <guid isPermaLink="false">CVE-2024-29737|2024-08-02T01:10:55.460Z</guid>
      <pubDate>Wed, 17 Jul 2024 08:21:12 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Apache Software Foundation -- Apache Karaf</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/apache%20software%20foundation/apache%20karaf.rss</link>
    <description>The latest CVEs for Apache Software Foundation -- Apache Karaf</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Tue, 17 Sep 2024 08:24:51 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2018-11786|2024-09-17T02:12:17.084Z -- apache%20software%20foundation -- apache%20karaf
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-11786</link>
      <description>In Apache Karaf prior to 4.2.0 release, if the sshd service in Karaf is left on so an administrator can manage the running instance, any user with rights to the Karaf console can pivot and read/write any file on the file system to which the Karaf process user has access. This can be locked down a bit by using chroot to change the root directory to protect files outside of the Karaf install directory; it can be further locked down by defining a security manager policy that limits file system access to those directories beneath the Karaf home that are necessary for the system to run. However, this still allows anyone with ssh access to the Karaf process to read and write a large number of files as the Karaf process user.</description>
      <guid isPermaLink="false">CVE-2018-11786|2024-09-17T02:12:17.084Z</guid>
      <pubDate>Tue, 18 Sep 2018 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-11787|2024-09-17T02:16:58.807Z -- apache%20software%20foundation -- apache%20karaf
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-11787</link>
      <description>In Apache Karaf version prior to 3.0.9, 4.0.9, 4.1.1, when the webconsole feature is installed in Karaf, it is available at .../system/console and requires authentication to access it. One part of the console is a Gogo shell/console that gives access to the command line console of Karaf via a Web browser, and when navigated to it is available at .../system/console/gogo. Trying to go directly to that URL does require authentication. And optional bundle that some applications use is the Pax Web Extender Whiteboard, it is part of the pax-war feature and perhaps others. When it is installed, the Gogo console becomes available at another URL .../gogo/, and that URL is not secured giving access to the Karaf console to unauthenticated users. A mitigation for the issue is to manually stop/uninstall Gogo plugin bundle that is installed with the webconsole feature, although of course this removes the console from the .../system/console application, not only from the unauthenticated endpoint. One could also stop/uninstall the Pax Web Extender Whiteboard, but other components/applications may require it and so their functionality would be reduced/compromised.</description>
      <guid isPermaLink="false">CVE-2018-11787|2024-09-17T02:16:58.807Z</guid>
      <pubDate>Tue, 18 Sep 2018 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2016-8750|2024-09-17T00:36:15.735Z -- apache%20software%20foundation -- apache%20karaf
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-8750</link>
      <description>Apache Karaf prior to 4.0.8 used the LDAPLoginModule to authenticate users to a directory via LDAP. However, it did not encoding usernames properly and hence was vulnerable to LDAP injection attacks leading to a denial of service.</description>
      <guid isPermaLink="false">CVE-2016-8750|2024-09-17T00:36:15.735Z</guid>
      <pubDate>Mon, 19 Feb 2018 15:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>

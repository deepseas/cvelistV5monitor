<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Apache Software Foundation -- Apache Tomcat</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/apache%20software%20foundation/apache%20tomcat.rss</link>
    <description>The latest CVEs for Apache Software Foundation -- Apache Tomcat</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Mon, 05 Aug 2024 22:22:30 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2017-12616|2024-08-05T18:43:56.057Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2017-12616</link>
      <description>When using a VirtualDirContext with Apache Tomcat 7.0.0 to 7.0.80 it was possible to bypass security constraints and/or view the source code of JSPs for resources served by the VirtualDirContext using a specially crafted request.</description>
      <guid isPermaLink="false">CVE-2017-12616|2024-08-05T18:43:56.057Z</guid>
      <pubDate>Tue, 19 Sep 2017 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2017-5664|2024-08-05T15:11:48.039Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2017-5664</link>
      <description>The error page mechanism of the Java Servlet Specification requires that, when an error occurs and an error page is configured for the error that occurred, the original request and response are forwarded to the error page. This means that the request is presented to the error page with the original HTTP method. If the error page is a static file, expected behaviour is to serve content of the file as if processing a GET request, regardless of the actual HTTP method. The Default Servlet in Apache Tomcat 9.0.0.M1 to 9.0.0.M20, 8.5.0 to 8.5.14, 8.0.0.RC1 to 8.0.43 and 7.0.0 to 7.0.77 did not do this. Depending on the original request this could lead to unexpected and undesirable results for static error pages including, if the DefaultServlet is configured to permit writes, the replacement or removal of the custom error page. Notes for other user provided error pages: (1) Unless explicitly coded otherwise, JSPs ignore the HTTP method. JSPs used as error pages must must ensure that they handle any error dispatch as a GET request, regardless of the actual method. (2) By default, the response generated by a Servlet does depend on the HTTP method. Custom Servlets used as error pages must ensure that they handle any error dispatch as a GET request, regardless of the actual method.</description>
      <guid isPermaLink="false">CVE-2017-5664|2024-08-05T15:11:48.039Z</guid>
      <pubDate>Tue, 06 Jun 2017 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2017-5648|2024-08-05T15:11:48.389Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2017-5648</link>
      <description>While investigating bug 60718, it was noticed that some calls to application listeners in Apache Tomcat 9.0.0.M1 to 9.0.0.M17, 8.5.0 to 8.5.11, 8.0.0.RC1 to 8.0.41, and 7.0.0 to 7.0.75 did not use the appropriate facade object. When running an untrusted application under a SecurityManager, it was therefore possible for that untrusted application to retain a reference to the request or response object and thereby access and/or modify information associated with another web application.</description>
      <guid isPermaLink="false">CVE-2017-5648|2024-08-05T15:11:48.389Z</guid>
      <pubDate>Mon, 17 Apr 2017 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-8014|2024-08-05T06:46:11.468Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-8014</link>
      <description>The defaults settings for the CORS filter provided in Apache Tomcat 9.0.0.M1 to 9.0.8, 8.5.0 to 8.5.31, 8.0.0.RC1 to 8.0.52, 7.0.41 to 7.0.88 are insecure and enable 'supportsCredentials' for all origins. It is expected that users of the CORS filter will have configured it appropriately for their environment rather than using it in the default configuration. Therefore, it is expected that most users will not be impacted by this issue.</description>
      <guid isPermaLink="false">CVE-2018-8014|2024-08-05T06:46:11.468Z</guid>
      <pubDate>Wed, 16 May 2018 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2017-15706|2024-08-05T20:04:48.548Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2017-15706</link>
      <description>As part of the fix for bug 61201, the documentation for Apache Tomcat 9.0.0.M22 to 9.0.1, 8.5.16 to 8.5.23, 8.0.45 to 8.0.47 and 7.0.79 to 7.0.82 included an updated description of the search algorithm used by the CGI Servlet to identify which script to execute. The update was not correct. As a result, some scripts may have failed to execute as expected and other scripts may have been executed unexpectedly. Note that the behaviour of the CGI servlet has remained unchanged in this regard. It is only the documentation of the behaviour that was wrong and has been corrected.</description>
      <guid isPermaLink="false">CVE-2017-15706|2024-08-05T20:04:48.548Z</guid>
      <pubDate>Wed, 31 Jan 2018 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2017-7674|2024-08-05T16:12:27.949Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2017-7674</link>
      <description>The CORS Filter in Apache Tomcat 9.0.0.M1 to 9.0.0.M21, 8.5.0 to 8.5.15, 8.0.0.RC1 to 8.0.44 and 7.0.41 to 7.0.78 did not add an HTTP Vary header indicating that the response varies depending on Origin. This permitted client and server side cache poisoning in some circumstances.</description>
      <guid isPermaLink="false">CVE-2017-7674|2024-08-05T16:12:27.949Z</guid>
      <pubDate>Thu, 10 Aug 2017 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2017-5650|2024-08-05T15:11:48.408Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2017-5650</link>
      <description>In Apache Tomcat 9.0.0.M1 to 9.0.0.M18 and 8.5.0 to 8.5.12, the handling of an HTTP/2 GOAWAY frame for a connection did not close streams associated with that connection that were currently waiting for a WINDOW_UPDATE before allowing the application to write more data. These waiting streams each consumed a thread. A malicious client could therefore construct a series of HTTP/2 requests that would consume all available processing threads.</description>
      <guid isPermaLink="false">CVE-2017-5650|2024-08-05T15:11:48.408Z</guid>
      <pubDate>Mon, 17 Apr 2017 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2017-5651|2024-08-05T15:11:47.130Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2017-5651</link>
      <description>In Apache Tomcat 9.0.0.M1 to 9.0.0.M18 and 8.5.0 to 8.5.12, the refactoring of the HTTP connectors introduced a regression in the send file processing. If the send file processing completed quickly, it was possible for the Processor to be added to the processor cache twice. This could result in the same Processor being used for multiple requests which in turn could lead to unexpected errors and/or response mix-up.</description>
      <guid isPermaLink="false">CVE-2017-5651|2024-08-05T15:11:47.130Z</guid>
      <pubDate>Mon, 17 Apr 2017 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-1304|2024-08-05T03:59:37.867Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-1304</link>
      <description>The URL pattern of "" (the empty string) which exactly maps to the context root was not correctly handled in Apache Tomcat 9.0.0.M1 to 9.0.4, 8.5.0 to 8.5.27, 8.0.0.RC1 to 8.0.49 and 7.0.0 to 7.0.84 when used as part of a security constraint definition. This caused the constraint to be ignored. It was, therefore, possible for unauthorised users to gain access to web application resources that should have been protected. Only security constraints with a URL pattern of the empty string were affected.</description>
      <guid isPermaLink="false">CVE-2018-1304|2024-08-05T03:59:37.867Z</guid>
      <pubDate>Fri, 23 Feb 2018 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2017-7675|2024-08-05T16:12:27.912Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2017-7675</link>
      <description>The HTTP/2 implementation in Apache Tomcat 9.0.0.M1 to 9.0.0.M21 and 8.5.0 to 8.5.15 bypassed a number of security checks that prevented directory traversal attacks. It was therefore possible to bypass security constraints using a specially crafted URL.</description>
      <guid isPermaLink="false">CVE-2017-7675|2024-08-05T16:12:27.912Z</guid>
      <pubDate>Thu, 10 Aug 2017 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-8034|2024-08-05T06:46:12.214Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-8034</link>
      <description>The host name verification when using TLS with the WebSocket client was missing. It is now enabled by default. Versions Affected: Apache Tomcat 9.0.0.M1 to 9.0.9, 8.5.0 to 8.5.31, 8.0.0.RC1 to 8.0.52, and 7.0.35 to 7.0.88.</description>
      <guid isPermaLink="false">CVE-2018-8034|2024-08-05T06:46:12.214Z</guid>
      <pubDate>Sun, 22 Jul 2018 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-1305|2024-08-05T03:59:38.832Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-1305</link>
      <description>Security constraints defined by annotations of Servlets in Apache Tomcat 9.0.0.M1 to 9.0.4, 8.5.0 to 8.5.27, 8.0.0.RC1 to 8.0.49 and 7.0.0 to 7.0.84 were only applied once a Servlet had been loaded. Because security constraints defined in this way apply to the URL pattern and any URLs below that point, it was possible - depending on the order Servlets were loaded - for some security constraints not to be applied. This could have exposed resources to users who were not authorised to access them.</description>
      <guid isPermaLink="false">CVE-2018-1305|2024-08-05T03:59:38.832Z</guid>
      <pubDate>Fri, 23 Feb 2018 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2017-12615|2024-08-05T18:43:56.420Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2017-12615</link>
      <description>When running Apache Tomcat 7.0.0 to 7.0.79 on Windows with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.</description>
      <guid isPermaLink="false">CVE-2017-12615|2024-08-05T18:43:56.420Z</guid>
      <pubDate>Tue, 19 Sep 2017 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2017-5647|2024-08-05T15:11:48.364Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2017-5647</link>
      <description>A bug in the handling of the pipelined requests in Apache Tomcat 9.0.0.M1 to 9.0.0.M18, 8.5.0 to 8.5.12, 8.0.0.RC1 to 8.0.42, 7.0.0 to 7.0.76, and 6.0.0 to 6.0.52, when send file was used, results in the pipelined request being lost when send file processing of the previous request completed. This could result in responses appearing to be sent for the wrong request. For example, a user agent that sent requests A, B and C could see the correct response for request A, the response for request C for request B and no response for request C.</description>
      <guid isPermaLink="false">CVE-2017-5647|2024-08-05T15:11:48.364Z</guid>
      <pubDate>Mon, 17 Apr 2017 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-11784|2024-08-05T08:17:09.268Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-11784</link>
      <description>When the default servlet in Apache Tomcat versions 9.0.0.M1 to 9.0.11, 8.5.0 to 8.5.33 and 7.0.23 to 7.0.90 returned a redirect to a directory (e.g. redirecting to '/foo/' when the user requested '/foo') a specially crafted URL could be used to cause the redirect to be generated to any URI of the attackers choice.</description>
      <guid isPermaLink="false">CVE-2018-11784|2024-08-05T08:17:09.268Z</guid>
      <pubDate>Wed, 03 Oct 2018 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-17563|2024-08-05T01:40:15.805Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-17563</link>
      <description>When using FORM authentication with Apache Tomcat 9.0.0.M1 to 9.0.29, 8.5.0 to 8.5.49 and 7.0.0 to 7.0.98 there was a narrow window where an attacker could perform a session fixation attack. The window was considered too narrow for an exploit to be practical but, erring on the side of caution, this issue has been treated as a security vulnerability.</description>
      <guid isPermaLink="false">CVE-2019-17563|2024-08-05T01:40:15.805Z</guid>
      <pubDate>Mon, 23 Dec 2019 16:39:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-1336|2024-08-05T03:59:38.542Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-1336</link>
      <description>An improper handing of overflow in the UTF-8 decoder with supplementary characters can lead to an infinite loop in the decoder causing a Denial of Service. Versions Affected: Apache Tomcat 9.0.0.M9 to 9.0.7, 8.5.0 to 8.5.30, 8.0.0.RC1 to 8.0.51, and 7.0.28 to 7.0.86.</description>
      <guid isPermaLink="false">CVE-2018-1336|2024-08-05T03:59:38.542Z</guid>
      <pubDate>Sun, 22 Jul 2018 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2017-12617|2024-08-05T18:43:56.415Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2017-12617</link>
      <description>When running Apache Tomcat versions 9.0.0.M1 to 9.0.0, 8.5.0 to 8.5.22, 8.0.0.RC1 to 8.0.46 and 7.0.0 to 7.0.81 with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.</description>
      <guid isPermaLink="false">CVE-2017-12617|2024-08-05T18:43:56.415Z</guid>
      <pubDate>Tue, 03 Oct 2017 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-8037|2024-08-05T06:46:13.444Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-8037</link>
      <description>If an async request was completed by the application at the same time as the container triggered the async timeout, a race condition existed that could result in a user seeing a response intended for a different user. An additional issue was present in the NIO and NIO2 connectors that did not correctly track the closure of the connection when an async request was completed by the application and timed out by the container at the same time. This could also result in a user seeing a response intended for another user. Versions Affected: Apache Tomcat 9.0.0.M9 to 9.0.9 and 8.5.5 to 8.5.31.</description>
      <guid isPermaLink="false">CVE-2018-8037|2024-08-05T06:46:13.444Z</guid>
      <pubDate>Sun, 22 Jul 2018 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34750|2024-08-02T02:59:22.608Z -- apache%20software%20foundation -- apache%20tomcat</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34750</link>
      <description>Improper Handling of Exceptional Conditions, Uncontrolled Resource Consumption vulnerability in Apache Tomcat. When processing an HTTP/2 stream, Tomcat did not handle some cases of excessive HTTP headers correctly. This led to a miscounting of active HTTP/2 streams which in turn led to the use of an incorrect infinite timeout which allowed connections to remain open which should have been closed.

This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M20, from 10.1.0-M1 through 10.1.24, from 9.0.0-M1 through 9.0.89.

Users are recommended to upgrade to version 11.0.0-M21, 10.1.25 or 9.0.90, which fixes the issue.</description>
      <guid isPermaLink="false">CVE-2024-34750|2024-08-02T02:59:22.608Z</guid>
      <pubDate>Wed, 03 Jul 2024 19:32:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34750|2024-07-03T19:32:34.695Z -- apache%20software%20foundation -- apache%20tomcat</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34750</link>
      <description>Improper Handling of Exceptional Conditions, Uncontrolled Resource Consumption vulnerability in Apache Tomcat. When processing an HTTP/2 stream, Tomcat did not handle some cases of excessive HTTP headers correctly. This led to a miscounting of active HTTP/2 streams which in turn led to the use of an incorrect infinite timeout which allowed connections to remain open which should have been closed.

This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M20, from 10.1.0-M1 through 10.1.24, from 9.0.0-M1 through 9.0.89.

Users are recommended to upgrade to version 11.0.0-M21, 10.1.25 or 9.0.90, which fixes the issue.</description>
      <guid isPermaLink="false">CVE-2024-34750|2024-07-03T19:32:34.695Z</guid>
      <pubDate>Wed, 03 Jul 2024 19:32:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-23672|2024-06-04T17:46:12.648Z -- apache%20software%20foundation -- apache%20tomcat</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-23672</link>
      <description>Denial of Service via incomplete cleanup vulnerability in Apache Tomcat. It was possible for WebSocket clients to keep WebSocket connections open leading to increased resource consumption.This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M16, from 10.1.0-M1 through 10.1.18, from 9.0.0-M1 through 9.0.85, from 8.5.0 through 8.5.98.

Users are recommended to upgrade to version 11.0.0-M17, 10.1.19, 9.0.86 or 8.5.99 which fix the issue.</description>
      <guid isPermaLink="false">CVE-2024-23672|2024-06-04T17:46:12.648Z</guid>
      <pubDate>Wed, 13 Mar 2024 15:48:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24549|2024-06-04T17:43:38.348Z -- apache%20software%20foundation -- apache%20tomcat</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-24549</link>
      <description>Denial of Service due to improper input validation vulnerability for HTTP/2 requests in Apache Tomcat. When processing an HTTP/2 request, if the request exceeded any of the configured limits for headers, the associated HTTP/2 stream was not reset until after all of the headers had been processed.This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M16, from 10.1.0-M1 through 10.1.18, from 9.0.0-M1 through 9.0.85, from 8.5.0 through 8.5.98.

Users are recommended to upgrade to version 11.0.0-M17, 10.1.19, 9.0.86 or 8.5.99 which fix the issue.</description>
      <guid isPermaLink="false">CVE-2024-24549|2024-06-04T17:43:38.348Z</guid>
      <pubDate>Wed, 13 Mar 2024 15:46:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24549|2024-03-13T15:46:53.085Z -- apache%20software%20foundation -- apache%20tomcat</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-24549</link>
      <description>Denial of Service due to improper input validation vulnerability for HTTP/2 requests in Apache Tomcat. When processing an HTTP/2 request, if the request exceeded any of the configured limits for headers, the associated HTTP/2 stream was not reset until after all of the headers had been processed.This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M16, from 10.1.0-M1 through 10.1.18, from 9.0.0-M1 through 9.0.85, from 8.5.0 through 8.5.98.

Users are recommended to upgrade to version 11.0.0-M17, 10.1.19, 9.0.86 or 8.5.99 which fix the issue.</description>
      <guid isPermaLink="false">CVE-2024-24549|2024-03-13T15:46:53.085Z</guid>
      <pubDate>Wed, 13 Mar 2024 15:46:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-23672|2024-03-13T15:48:42.610Z -- apache%20software%20foundation -- apache%20tomcat</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-23672</link>
      <description>Denial of Service via incomplete cleanup vulnerability in Apache Tomcat. It was possible for WebSocket clients to keep WebSocket connections open leading to increased resource consumption.This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M16, from 10.1.0-M1 through 10.1.18, from 9.0.0-M1 through 9.0.85, from 8.5.0 through 8.5.98.

Users are recommended to upgrade to version 11.0.0-M17, 10.1.19, 9.0.86 or 8.5.99 which fix the issue.</description>
      <guid isPermaLink="false">CVE-2024-23672|2024-03-13T15:48:42.610Z</guid>
      <pubDate>Wed, 13 Mar 2024 15:48:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34750|2024-07-08T16:54:49.822Z -- apache%20software%20foundation -- apache%20tomcat</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34750</link>
      <description>Improper Handling of Exceptional Conditions, Uncontrolled Resource Consumption vulnerability in Apache Tomcat. When processing an HTTP/2 stream, Tomcat did not handle some cases of excessive HTTP headers correctly. This led to a miscounting of active HTTP/2 streams which in turn led to the use of an incorrect infinite timeout which allowed connections to remain open which should have been closed.

This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M20, from 10.1.0-M1 through 10.1.24, from 9.0.0-M1 through 9.0.89.

Users are recommended to upgrade to version 11.0.0-M21, 10.1.25 or 9.0.90, which fixes the issue.</description>
      <guid isPermaLink="false">CVE-2024-34750|2024-07-08T16:54:49.822Z</guid>
      <pubDate>Wed, 03 Jul 2024 19:32:34 +0000</pubDate>
    </item>
  </channel>
</rss>

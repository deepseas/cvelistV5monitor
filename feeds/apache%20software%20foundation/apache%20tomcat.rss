<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Apache Software Foundation -- Apache Tomcat</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/apache%20software%20foundation/apache%20tomcat.rss</link>
    <description>The latest CVEs for Apache Software Foundation -- Apache Tomcat</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Tue, 06 Aug 2024 07:21:38 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2016-8747|2024-08-06T02:35:00.191Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-8747</link>
      <description>An information disclosure issue was discovered in Apache Tomcat 8.5.7 to 8.5.9 and 9.0.0.M11 to 9.0.0.M15 in reverse-proxy configurations. Http11InputBuffer.java allows remote attackers to read data that was intended to be associated with a different request.</description>
      <guid isPermaLink="false">CVE-2016-8747|2024-08-06T02:35:00.191Z</guid>
      <pubDate>Tue, 14 Mar 2017 09:02:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2016-8745|2024-08-06T02:35:00.119Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-8745</link>
      <description>A bug in the error handling of the send file code for the NIO HTTP connector in Apache Tomcat 9.0.0.M1 to 9.0.0.M13, 8.5.0 to 8.5.8, 8.0.0.RC1 to 8.0.39, 7.0.0 to 7.0.73 and 6.0.16 to 6.0.48 resulted in the current Processor object being added to the Processor cache multiple times. This in turn meant that the same Processor could be used for concurrent requests. Sharing a Processor can result in information leakage between requests including, not not limited to, session ID and the response body. The bug was first noticed in 8.5.x onwards where it appears the refactoring of the Connector code for 8.5.x onwards made it more likely that the bug was observed. Initially it was thought that the 8.5.x refactoring introduced the bug but further investigation has shown that the bug is present in all currently supported Tomcat versions.</description>
      <guid isPermaLink="false">CVE-2016-8745|2024-08-06T02:35:00.119Z</guid>
      <pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2016-6794|2024-08-06T01:43:37.900Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-6794</link>
      <description>When a SecurityManager is configured, a web application's ability to read system properties should be controlled by the SecurityManager. In Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70, 6.0.0 to 6.0.45 the system property replacement feature for configuration files could be used by a malicious web application to bypass the SecurityManager and read system properties that should not be visible.</description>
      <guid isPermaLink="false">CVE-2016-6794|2024-08-06T01:43:37.900Z</guid>
      <pubDate>Thu, 27 Oct 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2016-6816|2024-08-06T01:43:38.464Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-6816</link>
      <description>The code in Apache Tomcat 9.0.0.M1 to 9.0.0.M11, 8.5.0 to 8.5.6, 8.0.0.RC1 to 8.0.38, 7.0.0 to 7.0.72, and 6.0.0 to 6.0.47 that parsed the HTTP request line permitted invalid characters. This could be exploited, in conjunction with a proxy that also permitted the invalid characters but with a different interpretation, to inject data into the HTTP response. By manipulating the HTTP response the attacker could poison a web-cache, perform an XSS attack and/or obtain sensitive information from requests other then their own.</description>
      <guid isPermaLink="false">CVE-2016-6816|2024-08-06T01:43:38.464Z</guid>
      <pubDate>Mon, 20 Mar 2017 18:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2016-6817|2024-08-06T01:43:37.979Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-6817</link>
      <description>The HTTP/2 header parser in Apache Tomcat 9.0.0.M1 to 9.0.0.M11 and 8.5.0 to 8.5.6 entered an infinite loop if a header was received that was larger than the available buffer. This made a denial of service attack possible.</description>
      <guid isPermaLink="false">CVE-2016-6817|2024-08-06T01:43:37.979Z</guid>
      <pubDate>Tue, 22 Nov 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2016-6797|2024-08-06T01:43:37.903Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-6797</link>
      <description>The ResourceLinkFactory implementation in Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 did not limit web application access to global JNDI resources to those resources explicitly linked to the web application. Therefore, it was possible for a web application to access any global JNDI resource whether an explicit ResourceLink had been configured or not.</description>
      <guid isPermaLink="false">CVE-2016-6797|2024-08-06T01:43:37.903Z</guid>
      <pubDate>Thu, 27 Oct 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2016-8735|2024-08-06T02:27:41.259Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-8735</link>
      <description>Remote code execution is possible with Apache Tomcat before 6.0.48, 7.x before 7.0.73, 8.x before 8.0.39, 8.5.x before 8.5.7, and 9.x before 9.0.0.M12 if JmxRemoteLifecycleListener is used and an attacker can reach JMX ports. The issue exists because this listener wasn't updated for consistency with the CVE-2016-3427 Oracle patch that affected credential types.</description>
      <guid isPermaLink="false">CVE-2016-8735|2024-08-06T02:27:41.259Z</guid>
      <pubDate>Thu, 06 Apr 2017 21:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2016-5018|2024-08-06T00:46:40.222Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-5018</link>
      <description>In Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 a malicious web application was able to bypass a configured SecurityManager via a Tomcat utility method that was accessible to web applications.</description>
      <guid isPermaLink="false">CVE-2016-5018|2024-08-06T00:46:40.222Z</guid>
      <pubDate>Thu, 27 Oct 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2016-6796|2024-08-06T01:43:37.869Z -- apache%20software%20foundation -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-6796</link>
      <description>A malicious web application running on Apache Tomcat 9.0.0.M1 to 9.0.0.M9, 8.5.0 to 8.5.4, 8.0.0.RC1 to 8.0.36, 7.0.0 to 7.0.70 and 6.0.0 to 6.0.45 was able to bypass a configured SecurityManager via manipulation of the configuration parameters for the JSP Servlet.</description>
      <guid isPermaLink="false">CVE-2016-6796|2024-08-06T01:43:37.869Z</guid>
      <pubDate>Thu, 27 Oct 2016 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34750|2024-08-02T02:59:22.608Z -- apache%20software%20foundation -- apache%20tomcat</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34750</link>
      <description>Improper Handling of Exceptional Conditions, Uncontrolled Resource Consumption vulnerability in Apache Tomcat. When processing an HTTP/2 stream, Tomcat did not handle some cases of excessive HTTP headers correctly. This led to a miscounting of active HTTP/2 streams which in turn led to the use of an incorrect infinite timeout which allowed connections to remain open which should have been closed.

This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M20, from 10.1.0-M1 through 10.1.24, from 9.0.0-M1 through 9.0.89.

Users are recommended to upgrade to version 11.0.0-M21, 10.1.25 or 9.0.90, which fixes the issue.</description>
      <guid isPermaLink="false">CVE-2024-34750|2024-08-02T02:59:22.608Z</guid>
      <pubDate>Wed, 03 Jul 2024 19:32:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34750|2024-07-03T19:32:34.695Z -- apache%20software%20foundation -- apache%20tomcat</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34750</link>
      <description>Improper Handling of Exceptional Conditions, Uncontrolled Resource Consumption vulnerability in Apache Tomcat. When processing an HTTP/2 stream, Tomcat did not handle some cases of excessive HTTP headers correctly. This led to a miscounting of active HTTP/2 streams which in turn led to the use of an incorrect infinite timeout which allowed connections to remain open which should have been closed.

This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M20, from 10.1.0-M1 through 10.1.24, from 9.0.0-M1 through 9.0.89.

Users are recommended to upgrade to version 11.0.0-M21, 10.1.25 or 9.0.90, which fixes the issue.</description>
      <guid isPermaLink="false">CVE-2024-34750|2024-07-03T19:32:34.695Z</guid>
      <pubDate>Wed, 03 Jul 2024 19:32:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-23672|2024-06-04T17:46:12.648Z -- apache%20software%20foundation -- apache%20tomcat</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-23672</link>
      <description>Denial of Service via incomplete cleanup vulnerability in Apache Tomcat. It was possible for WebSocket clients to keep WebSocket connections open leading to increased resource consumption.This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M16, from 10.1.0-M1 through 10.1.18, from 9.0.0-M1 through 9.0.85, from 8.5.0 through 8.5.98.

Users are recommended to upgrade to version 11.0.0-M17, 10.1.19, 9.0.86 or 8.5.99 which fix the issue.</description>
      <guid isPermaLink="false">CVE-2024-23672|2024-06-04T17:46:12.648Z</guid>
      <pubDate>Wed, 13 Mar 2024 15:48:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24549|2024-06-04T17:43:38.348Z -- apache%20software%20foundation -- apache%20tomcat</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-24549</link>
      <description>Denial of Service due to improper input validation vulnerability for HTTP/2 requests in Apache Tomcat. When processing an HTTP/2 request, if the request exceeded any of the configured limits for headers, the associated HTTP/2 stream was not reset until after all of the headers had been processed.This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M16, from 10.1.0-M1 through 10.1.18, from 9.0.0-M1 through 9.0.85, from 8.5.0 through 8.5.98.

Users are recommended to upgrade to version 11.0.0-M17, 10.1.19, 9.0.86 or 8.5.99 which fix the issue.</description>
      <guid isPermaLink="false">CVE-2024-24549|2024-06-04T17:43:38.348Z</guid>
      <pubDate>Wed, 13 Mar 2024 15:46:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24549|2024-03-13T15:46:53.085Z -- apache%20software%20foundation -- apache%20tomcat</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-24549</link>
      <description>Denial of Service due to improper input validation vulnerability for HTTP/2 requests in Apache Tomcat. When processing an HTTP/2 request, if the request exceeded any of the configured limits for headers, the associated HTTP/2 stream was not reset until after all of the headers had been processed.This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M16, from 10.1.0-M1 through 10.1.18, from 9.0.0-M1 through 9.0.85, from 8.5.0 through 8.5.98.

Users are recommended to upgrade to version 11.0.0-M17, 10.1.19, 9.0.86 or 8.5.99 which fix the issue.</description>
      <guid isPermaLink="false">CVE-2024-24549|2024-03-13T15:46:53.085Z</guid>
      <pubDate>Wed, 13 Mar 2024 15:46:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-23672|2024-03-13T15:48:42.610Z -- apache%20software%20foundation -- apache%20tomcat</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-23672</link>
      <description>Denial of Service via incomplete cleanup vulnerability in Apache Tomcat. It was possible for WebSocket clients to keep WebSocket connections open leading to increased resource consumption.This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M16, from 10.1.0-M1 through 10.1.18, from 9.0.0-M1 through 9.0.85, from 8.5.0 through 8.5.98.

Users are recommended to upgrade to version 11.0.0-M17, 10.1.19, 9.0.86 or 8.5.99 which fix the issue.</description>
      <guid isPermaLink="false">CVE-2024-23672|2024-03-13T15:48:42.610Z</guid>
      <pubDate>Wed, 13 Mar 2024 15:48:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34750|2024-07-08T16:54:49.822Z -- apache%20software%20foundation -- apache%20tomcat</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34750</link>
      <description>Improper Handling of Exceptional Conditions, Uncontrolled Resource Consumption vulnerability in Apache Tomcat. When processing an HTTP/2 stream, Tomcat did not handle some cases of excessive HTTP headers correctly. This led to a miscounting of active HTTP/2 streams which in turn led to the use of an incorrect infinite timeout which allowed connections to remain open which should have been closed.

This issue affects Apache Tomcat: from 11.0.0-M1 through 11.0.0-M20, from 10.1.0-M1 through 10.1.24, from 9.0.0-M1 through 9.0.89.

Users are recommended to upgrade to version 11.0.0-M21, 10.1.25 or 9.0.90, which fixes the issue.</description>
      <guid isPermaLink="false">CVE-2024-34750|2024-07-08T16:54:49.822Z</guid>
      <pubDate>Wed, 03 Jul 2024 19:32:34 +0000</pubDate>
    </item>
  </channel>
</rss>

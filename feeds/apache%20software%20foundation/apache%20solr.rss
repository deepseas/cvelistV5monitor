<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Apache Software Foundation -- Apache Solr</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/apache%20software%20foundation/apache%20solr.rss</link>
    <description>The latest CVEs for Apache Software Foundation -- Apache Solr</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 21:21:59 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2019-0192|2024-08-04T17:44:14.767Z -- apache%20software%20foundation -- apache%20solr
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0192</link>
      <description>In Apache Solr versions 5.0.0 to 5.5.5 and 6.0.0 to 6.6.5, the Config API allows to configure the JMX server via an HTTP POST request. By pointing it to a malicious RMI server, an attacker could take advantage of Solr's unsafe deserialization to trigger remote code execution on the Solr side.</description>
      <guid isPermaLink="false">CVE-2019-0192|2024-08-04T17:44:14.767Z</guid>
      <pubDate>Thu, 07 Mar 2019 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-44548|2024-08-04T04:25:16.937Z -- apache%20software%20foundation -- apache%20solr
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-44548</link>
      <description>An Improper Input Validation vulnerability in DataImportHandler of Apache Solr allows an attacker to provide a Windows UNC path resulting in an SMB network call being made from the Solr host to another host on the network. If the attacker has wider access to the network, this may lead to SMB attacks, which may result in: * The exfiltration of sensitive data such as OS user hashes (NTLM/LM hashes), * In case of misconfigured systems, SMB Relay Attacks which can lead to user impersonation on SMB Shares or, in a worse-case scenario, Remote Code Execution This issue affects all Apache Solr versions prior to 8.11.1. This issue only affects Windows.</description>
      <guid isPermaLink="false">CVE-2021-44548|2024-08-04T04:25:16.937Z</guid>
      <pubDate>Thu, 23 Dec 2021 08:55:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-50291|2024-02-09T17:29:32.882Z -- apache%20software%20foundation -- apache%20solr</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-50291</link>
      <description>Insufficiently Protected Credentials vulnerability in Apache Solr.

This issue affects Apache Solr: from 6.0.0 through 8.11.2, from 9.0.0 before 9.3.0.
One of the two endpoints that publishes the Solr process' Java system properties, /admin/info/properties, was only setup to hide system properties that had "password" contained in the name.
There are a number of sensitive system properties, such as "basicauth" and "aws.secretKey" do not contain "password", thus their values were published via the "/admin/info/properties" endpoint.
This endpoint populates the list of System Properties on the home screen of the Solr Admin page, making the exposed credentials visible in the UI.

This /admin/info/properties endpoint is protected under the "config-read" permission.
Therefore, Solr Clouds with Authorization enabled will only be vulnerable through logged-in users that have the "config-read" permission.
Users are recommended to upgrade to version 9.3.0 or 8.11.3, which fixes the issue.
A single option now controls hiding Java system property for all endpoints, "-Dsolr.hiddenSysProps".
By default all known sensitive properties are hidden (including "-Dbasicauth"), as well as any property with a name containing "secret" or "password".

Users who cannot upgrade can also use the following Java system property to fix the issue:
Â  '-Dsolr.redaction.system.pattern=.*(password|secret|basicauth).*'</description>
      <guid isPermaLink="false">CVE-2023-50291|2024-02-09T17:29:32.882Z</guid>
      <pubDate>Fri, 09 Feb 2024 17:29:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-50298|2024-02-09T17:29:07.889Z -- apache%20software%20foundation -- apache%20solr</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-50298</link>
      <description>Exposure of Sensitive Information to an Unauthorized Actor vulnerability in Apache Solr.This issue affects Apache Solr: from 6.0.0 through 8.11.2, from 9.0.0 before 9.4.1.

Solr Streaming Expressions allows users to extract data from other Solr Clouds, using a "zkHost" parameter.
When original SolrCloud is setup to use ZooKeeper credentials and ACLs, they will be sent to whatever "zkHost" the user provides.
An attacker could setup a server to mock ZooKeeper, that accepts ZooKeeper requests with credentials and ACLs and extracts the sensitive information,
then send a streaming expression using the mock server's address in "zkHost".
Streaming Expressions are exposed via the "/streaming" handler, with "read" permissions.

Users are recommended to upgrade to version 8.11.3 or 9.4.1, which fix the issue.
From these versions on, only zkHost values that have the same server address (regardless of chroot), will use the given ZooKeeper credentials and ACLs when connecting.</description>
      <guid isPermaLink="false">CVE-2023-50298|2024-02-09T17:29:07.889Z</guid>
      <pubDate>Fri, 09 Feb 2024 17:29:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-50386|2024-06-04T17:17:47.000Z -- apache%20software%20foundation -- apache%20solr</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-50386</link>
      <description>Improper Control of Dynamically-Managed Code Resources, Unrestricted Upload of File with Dangerous Type, Inclusion of Functionality from Untrusted Control Sphere vulnerability in Apache Solr.This issue affects Apache Solr: from 6.0.0 through 8.11.2, from 9.0.0 before 9.4.1.

In the affected versions, Solr ConfigSets accepted Java jar and class files to be uploaded through the ConfigSets API.
When backing up Solr Collections, these configSet files would be saved to disk when using the LocalFileSystemRepository (the default for backups).
If the backup was saved to a directory that Solr uses in its ClassPath/ClassLoaders, then the jar and class files would be available to use with any ConfigSet, trusted or untrusted.

When Solr is run in a secure way (Authorization enabled), as is strongly suggested, this vulnerability is limited to extending the Backup permissions with the ability to add libraries.
Users are recommended to upgrade to version 8.11.3 or 9.4.1, which fix the issue.
In these versions, the following protections have been added:

  *  Users are no longer able to upload files to a configSet that could be executed via a Java ClassLoader.
  *  The Backup API restricts saving backups to directories that are used in the ClassLoader.</description>
      <guid isPermaLink="false">CVE-2023-50386|2024-06-04T17:17:47.000Z</guid>
      <pubDate>Fri, 09 Feb 2024 17:28:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-50292|2024-02-09T17:29:21.249Z -- apache%20software%20foundation -- apache%20solr</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-50292</link>
      <description>Incorrect Permission Assignment for Critical Resource, Improper Control of Dynamically-Managed Code Resources vulnerability in Apache Solr.

This issue affects Apache Solr: from 8.10.0 through 8.11.2, from 9.0.0 before 9.3.0.

The Schema Designer was introduced to allow users to more easily configure and test new Schemas and configSets.
However, when the feature was created, the "trust" (authentication) of these configSets was not considered.
External library loading is only available to configSets that are "trusted" (created by authenticated users), thus non-authenticated users are unable to perform Remote Code Execution.
Since the Schema Designer loaded configSets without taking their "trust" into account, configSets that were created by unauthenticated users were allowed to load external libraries when used in the Schema Designer.

Users are recommended to upgrade to version 9.3.0, which fixes the issue.</description>
      <guid isPermaLink="false">CVE-2023-50292|2024-02-09T17:29:21.249Z</guid>
      <pubDate>Fri, 09 Feb 2024 17:29:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-50298|2024-08-02T22:16:46.392Z -- apache%20software%20foundation -- apache%20solr</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-50298</link>
      <description>Exposure of Sensitive Information to an Unauthorized Actor vulnerability in Apache Solr.This issue affects Apache Solr: from 6.0.0 through 8.11.2, from 9.0.0 before 9.4.1.

Solr Streaming Expressions allows users to extract data from other Solr Clouds, using a "zkHost" parameter.
When original SolrCloud is setup to use ZooKeeper credentials and ACLs, they will be sent to whatever "zkHost" the user provides.
An attacker could setup a server to mock ZooKeeper, that accepts ZooKeeper requests with credentials and ACLs and extracts the sensitive information,
then send a streaming expression using the mock server's address in "zkHost".
Streaming Expressions are exposed via the "/streaming" handler, with "read" permissions.

Users are recommended to upgrade to version 8.11.3 or 9.4.1, which fix the issue.
From these versions on, only zkHost values that have the same server address (regardless of chroot), will use the given ZooKeeper credentials and ACLs when connecting.</description>
      <guid isPermaLink="false">CVE-2023-50298|2024-08-02T22:16:46.392Z</guid>
      <pubDate>Fri, 09 Feb 2024 17:29:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-50386|2024-08-02T22:16:46.302Z -- apache%20software%20foundation -- apache%20solr</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-50386</link>
      <description>Improper Control of Dynamically-Managed Code Resources, Unrestricted Upload of File with Dangerous Type, Inclusion of Functionality from Untrusted Control Sphere vulnerability in Apache Solr.This issue affects Apache Solr: from 6.0.0 through 8.11.2, from 9.0.0 before 9.4.1.

In the affected versions, Solr ConfigSets accepted Java jar and class files to be uploaded through the ConfigSets API.
When backing up Solr Collections, these configSet files would be saved to disk when using the LocalFileSystemRepository (the default for backups).
If the backup was saved to a directory that Solr uses in its ClassPath/ClassLoaders, then the jar and class files would be available to use with any ConfigSet, trusted or untrusted.

When Solr is run in a secure way (Authorization enabled), as is strongly suggested, this vulnerability is limited to extending the Backup permissions with the ability to add libraries.
Users are recommended to upgrade to version 8.11.3 or 9.4.1, which fix the issue.
In these versions, the following protections have been added:

  *  Users are no longer able to upload files to a configSet that could be executed via a Java ClassLoader.
  *  The Backup API restricts saving backups to directories that are used in the ClassLoader.</description>
      <guid isPermaLink="false">CVE-2023-50386|2024-08-02T22:16:46.302Z</guid>
      <pubDate>Fri, 09 Feb 2024 17:28:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-50292|2024-08-02T22:16:46.258Z -- apache%20software%20foundation -- apache%20solr</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-50292</link>
      <description>Incorrect Permission Assignment for Critical Resource, Improper Control of Dynamically-Managed Code Resources vulnerability in Apache Solr.

This issue affects Apache Solr: from 8.10.0 through 8.11.2, from 9.0.0 before 9.3.0.

The Schema Designer was introduced to allow users to more easily configure and test new Schemas and configSets.
However, when the feature was created, the "trust" (authentication) of these configSets was not considered.
External library loading is only available to configSets that are "trusted" (created by authenticated users), thus non-authenticated users are unable to perform Remote Code Execution.
Since the Schema Designer loaded configSets without taking their "trust" into account, configSets that were created by unauthenticated users were allowed to load external libraries when used in the Schema Designer.

Users are recommended to upgrade to version 9.3.0, which fixes the issue.</description>
      <guid isPermaLink="false">CVE-2023-50292|2024-08-02T22:16:46.258Z</guid>
      <pubDate>Fri, 09 Feb 2024 17:29:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-50291|2024-08-02T22:16:46.115Z -- apache%20software%20foundation -- apache%20solr</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-50291</link>
      <description>Insufficiently Protected Credentials vulnerability in Apache Solr.

This issue affects Apache Solr: from 6.0.0 through 8.11.2, from 9.0.0 before 9.3.0.
One of the two endpoints that publishes the Solr process' Java system properties, /admin/info/properties, was only setup to hide system properties that had "password" contained in the name.
There are a number of sensitive system properties, such as "basicauth" and "aws.secretKey" do not contain "password", thus their values were published via the "/admin/info/properties" endpoint.
This endpoint populates the list of System Properties on the home screen of the Solr Admin page, making the exposed credentials visible in the UI.

This /admin/info/properties endpoint is protected under the "config-read" permission.
Therefore, Solr Clouds with Authorization enabled will only be vulnerable through logged-in users that have the "config-read" permission.
Users are recommended to upgrade to version 9.3.0 or 8.11.3, which fixes the issue.
A single option now controls hiding Java system property for all endpoints, "-Dsolr.hiddenSysProps".
By default all known sensitive properties are hidden (including "-Dbasicauth"), as well as any property with a name containing "secret" or "password".

Users who cannot upgrade can also use the following Java system property to fix the issue:
Â  '-Dsolr.redaction.system.pattern=.*(password|secret|basicauth).*'</description>
      <guid isPermaLink="false">CVE-2023-50291|2024-08-02T22:16:46.115Z</guid>
      <pubDate>Fri, 09 Feb 2024 17:29:32 +0000</pubDate>
    </item>
  </channel>
</rss>

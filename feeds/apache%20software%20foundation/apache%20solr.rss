<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Apache Software Foundation -- Apache Solr</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/apache%20software%20foundation/apache%20solr.rss</link>
    <description>The latest CVEs for Apache Software Foundation -- Apache Solr</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Mon, 16 Sep 2024 22:22:27 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2017-7660|2024-09-16T18:13:03.269Z -- apache%20software%20foundation -- apache%20solr
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2017-7660</link>
      <description>Apache Solr uses a PKI based mechanism to secure inter-node communication when security is enabled. It is possible to create a specially crafted node name that does not exist as part of the cluster and point it to a malicious node. This can trick the nodes in cluster to believe that the malicious node is a member of the cluster. So, if Solr users have enabled BasicAuth authentication mechanism using the BasicAuthPlugin or if the user has implemented a custom Authentication plugin, which does not implement either "HttpClientInterceptorPlugin" or "HttpClientBuilderPlugin", his/her servers are vulnerable to this attack. Users who only use SSL without basic authentication or those who use Kerberos are not affected.</description>
      <guid isPermaLink="false">CVE-2017-7660|2024-09-16T18:13:03.269Z</guid>
      <pubDate>Fri, 07 Jul 2017 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-0192|2024-09-16T16:53:42.278Z -- apache%20software%20foundation -- apache%20solr
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0192</link>
      <description>In Apache Solr versions 5.0.0 to 5.5.5 and 6.0.0 to 6.6.5, the Config API allows to configure the JMX server via an HTTP POST request. By pointing it to a malicious RMI server, an attacker could take advantage of Solr's unsafe deserialization to trigger remote code execution on the Solr side.</description>
      <guid isPermaLink="false">CVE-2019-0192|2024-09-16T16:53:42.278Z</guid>
      <pubDate>Thu, 07 Mar 2019 21:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2017-3164|2024-09-16T19:52:10.132Z -- apache%20software%20foundation -- apache%20solr
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2017-3164</link>
      <description>Server Side Request Forgery in Apache Solr, versions 1.3 until 7.6 (inclusive). Since the "shards" parameter does not have a corresponding whitelist mechanism, a remote attacker with access to the server could make Solr perform an HTTP GET request to any reachable URL.</description>
      <guid isPermaLink="false">CVE-2017-3164|2024-09-16T19:52:10.132Z</guid>
      <pubDate>Fri, 08 Mar 2019 21:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2017-3163|2024-09-16T18:39:30.795Z -- apache%20software%20foundation -- apache%20solr
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2017-3163</link>
      <description>When using the Index Replication feature, Apache Solr nodes can pull index files from a master/leader node using an HTTP API which accepts a file name. However, Solr before 5.5.4 and 6.x before 6.4.1 did not validate the file name, hence it was possible to craft a special request involving path traversal, leaving any file readable to the Solr server process exposed. Solr servers protected and restricted by firewall rules and/or authentication would not be at risk since only trusted clients and users would gain direct HTTP access.</description>
      <guid isPermaLink="false">CVE-2017-3163|2024-09-16T18:39:30.795Z</guid>
      <pubDate>Wed, 30 Aug 2017 14:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>

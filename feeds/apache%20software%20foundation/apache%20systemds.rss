<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Apache Software Foundation -- Apache SystemDS</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/apache%20software%20foundation/apache%20systemds.rss</link>
    <description>The latest CVEs for Apache Software Foundation -- Apache SystemDS</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 21:21:49 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-26477|2024-08-03T05:03:32.880Z -- apache%20software%20foundation -- apache%20systemds
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-26477</link>
      <description>The Security Team noticed that the termination condition of the for loop in the readExternal method is a controllable variable, which, if tampered with, may lead to CPU exhaustion. As a fix, we added an upper bound and termination condition in the read and write logic. We classify it as a "low-priority but useful improvement". SystemDS is a distributed system and needs to serialize/deserialize data but in many code paths (e.g., on Spark broadcast/shuffle or writing to sequence files) the byte stream is anyway protected by additional CRC fingerprints. In this particular case though, the number of decoders is upper-bounded by twice the number of columns, which means an attacker would need to modify two entries in the byte stream in a consistent manner. By adding these checks robustness was strictly improved with almost zero overhead. These code changes are available in versions higher than 2.2.1.</description>
      <guid isPermaLink="false">CVE-2022-26477|2024-08-03T05:03:32.880Z</guid>
      <pubDate>Mon, 27 Jun 2022 17:15:18 +0000</pubDate>
    </item>
  </channel>
</rss>

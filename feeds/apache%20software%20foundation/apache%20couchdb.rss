<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Apache Software Foundation -- Apache CouchDB</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/apache%20software%20foundation/apache%20couchdb.rss</link>
    <description>The latest CVEs for Apache Software Foundation -- Apache CouchDB</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 22:23:24 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-26268|2024-08-02T11:46:24.314Z -- apache%20software%20foundation -- apache%20couchdb
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-26268</link>
      <description>Design documents with matching document IDs, from databases on the same cluster, may share a mutable Javascript environment when using these design document functions:
  *  validate_doc_update

  *  list

  *  filter

  *  filter views (using view functions as filters)

  *  rewrite

  *  update



This doesn't affect map/reduce or search (Dreyfus) index functions.

Users are recommended to upgrade to a version that is no longer affected by this issue (Apache CouchDB 3.3.2 or 3.2.3).

Workaround: Avoid using design documents from untrusted sources which may attempt to cache or store data in the Javascript environment.

</description>
      <guid isPermaLink="false">CVE-2023-26268|2024-08-02T11:46:24.314Z</guid>
      <pubDate>Tue, 02 May 2023 20:06:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-45725|2024-08-02T20:29:31.714Z -- apache%20software%20foundation -- apache%20couchdb
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-45725</link>
      <description>Design document functions which receive a user http request object may expose authorization or session cookie headers of the user who accesses the document.

These design document functions are:
  *    list
  *    show
  *    rewrite
  *    update

An attacker can leak the session component using an HTML-like output, insert the session as an external resource (such as an image), or store the credential in a _local document with an "update" function.

For the attack to succeed the attacker has to be able to insert the design documents into the database, then manipulate a user to access a function from that design document.

Workaround: Avoid using design documents from untrusted sources which may attempt to access or manipulate request object's headers
</description>
      <guid isPermaLink="false">CVE-2023-45725|2024-08-02T20:29:31.714Z</guid>
      <pubDate>Wed, 13 Dec 2023 08:02:17 +0000</pubDate>
    </item>
  </channel>
</rss>

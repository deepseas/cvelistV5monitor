<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Apache Software Foundation -- Apache Druid</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/apache%20software%20foundation/apache%20druid.rss</link>
    <description>The latest CVEs for Apache Software Foundation -- Apache Druid</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 23:22:48 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2021-25646|2024-08-03T20:11:28.147Z -- apache%20software%20foundation -- apache%20druid
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25646</link>
      <description>Apache Druid includes the ability to execute user-provided JavaScript code embedded in various types of requests. This functionality is intended for use in high-trust environments, and is disabled by default. However, in Druid 0.20.0 and earlier, it is possible for an authenticated user to send a specially-crafted request that forces Druid to run user-provided JavaScript code for that request, regardless of server configuration. This can be leveraged to execute code on the target machine with the privileges of the Druid server process.</description>
      <guid isPermaLink="false">CVE-2021-25646|2024-08-03T20:11:28.147Z</guid>
      <pubDate>Fri, 29 Jan 2021 19:15:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-26920|2024-08-03T20:33:41.311Z -- apache%20software%20foundation -- apache%20druid
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-26920</link>
      <description>In the Druid ingestion system, the InputSource is used for reading data from a certain data source. However, the HTTP InputSource allows authenticated users to read data from other sources than intended, such as the local file system, with the privileges of the Druid server process. This is not an elevation of privilege when users access Druid directly, since Druid also provides the Local InputSource, which allows the same level of access. But it is problematic when users interact with Druid indirectly through an application that allows users to specify the HTTP InputSource, but not the Local InputSource. In this case, users could bypass the application-level restriction by passing a file URL to the HTTP InputSource.</description>
      <guid isPermaLink="false">CVE-2021-26920|2024-08-03T20:33:41.311Z</guid>
      <pubDate>Fri, 02 Jul 2021 07:20:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-26919|2024-08-03T20:33:41.372Z -- apache%20software%20foundation -- apache%20druid
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-26919</link>
      <description>Apache Druid allows users to read data from other database systems using JDBC. This functionality is to allow trusted users with the proper permissions to set up lookups or submit ingestion tasks. The MySQL JDBC driver supports certain properties, which, if left unmitigated, can allow an attacker to execute arbitrary code from a hacker-controlled malicious MySQL server within Druid server processes. This issue was addressed in Apache Druid 0.20.2</description>
      <guid isPermaLink="false">CVE-2021-26919|2024-08-03T20:33:41.372Z</guid>
      <pubDate>Tue, 30 Mar 2021 07:50:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-28889|2024-08-03T06:10:56.784Z -- apache%20software%20foundation -- apache%20druid
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-28889</link>
      <description>In Apache Druid 0.22.1 and earlier, the server did not set appropriate headers to prevent clickjacking. Druid 0.23.0 and later prevent clickjacking using the Content-Security-Policy header.</description>
      <guid isPermaLink="false">CVE-2022-28889|2024-08-03T06:10:56.784Z</guid>
      <pubDate>Thu, 07 Jul 2022 18:35:22 +0000</pubDate>
    </item>
  </channel>
</rss>

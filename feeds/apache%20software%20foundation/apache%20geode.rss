<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Apache Software Foundation -- Apache Geode</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/apache%20software%20foundation/apache%20geode.rss</link>
    <description>The latest CVEs for Apache Software Foundation -- Apache Geode</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 19:19:47 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-37022|2024-08-03T10:21:32.458Z -- apache%20software%20foundation -- apache%20geode
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-37022</link>
      <description>Apache Geode versions up to 1.12.2 and 1.13.2 are vulnerable to a deserialization of untrusted data flaw when using JMX over RMI on Java 11. Any user wishing to protect against deserialization attacks involving JMX or RMI should upgrade to Apache Geode 1.15. Use of 1.15 on Java 11 will automatically protect JMX over RMI against deserialization attacks. This should have no impact on performance since it only affects JMX/RMI which Gfsh uses to communicate with the JMX Manager which is hosted on a Locator.</description>
      <guid isPermaLink="false">CVE-2022-37022|2024-08-03T10:21:32.458Z</guid>
      <pubDate>Wed, 31 Aug 2022 07:00:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-34870|2024-08-03T09:22:10.732Z -- apache%20software%20foundation -- apache%20geode
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-34870</link>
      <description>Apache Geode versions up to 1.15.0 are vulnerable to a Cross-Site Scripting (XSS) via data injection when using Pulse web application to view Region entries.</description>
      <guid isPermaLink="false">CVE-2022-34870|2024-08-03T09:22:10.732Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-37021|2024-08-03T10:21:32.657Z -- apache%20software%20foundation -- apache%20geode
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-37021</link>
      <description>Apache Geode versions up to 1.12.5, 1.13.4 and 1.14.0 are vulnerable to a deserialization of untrusted data flaw when using JMX over RMI on Java 8. Any user still on Java 8 who wishes to protect against deserialization attacks involving JMX or RMI should upgrade to Apache Geode 1.15 and Java 11. If upgrading to Java 11 is not possible, then upgrade to Apache Geode 1.15 and specify "--J=-Dgeode.enableGlobalSerialFilter=true" when starting any Locators or Servers. Follow the documentation for details on specifying any user classes that may be serialized/deserialized with the "serializable-object-filter" configuration option. Using a global serial filter will impact performance.</description>
      <guid isPermaLink="false">CVE-2022-37021|2024-08-03T10:21:32.657Z</guid>
      <pubDate>Wed, 31 Aug 2022 07:00:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-37023|2024-08-03T10:21:32.603Z -- apache%20software%20foundation -- apache%20geode
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-37023</link>
      <description>Apache Geode versions prior to 1.15.0 are vulnerable to a deserialization of untrusted data flaw when using REST API on Java 8 or Java 11. Any user wishing to protect against deserialization attacks involving REST APIs should upgrade to Apache Geode 1.15 and follow the documentation for details on enabling "validate-serializable-objects=true" and specifying any user classes that may be serialized/deserialized with "serializable-object-filter". Enabling "validate-serializable-objects" may impact performance.</description>
      <guid isPermaLink="false">CVE-2022-37023|2024-08-03T10:21:32.603Z</guid>
      <pubDate>Wed, 31 Aug 2022 07:00:16 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Apache Software Foundation -- Apache ActiveMQ</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/apache%20software%20foundation/apache%20activemq.rss</link>
    <description>The latest CVEs for Apache Software Foundation -- Apache ActiveMQ</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 22:22:42 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-41678|2024-08-03T12:49:43.601Z -- apache%20software%20foundation -- apache%20activemq
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-41678</link>
      <description>Once an user is authenticated on Jolokia, he can potentially trigger arbitrary code execution. 

In details, in ActiveMQ configurations, jetty allows
org.jolokia.http.AgentServlet to handler request to /api/jolokia

org.jolokia.http.HttpRequestHandler#handlePostRequest is able to
create JmxRequest through JSONObject. And calls to
org.jolokia.http.HttpRequestHandler#executeRequest.

Into deeper calling stacks,
org.jolokia.handler.ExecHandler#doHandleRequest can be invoked
through refection. This could lead to RCE through via
various mbeans. One example is unrestricted deserialization in jdk.management.jfr.FlightRecorderMXBeanImpl which exists on Java version above 11.

1 Call newRecording.

2 Call setConfiguration. And a webshell data hides in it.

3 Call startRecording.

4 Call copyTo method. The webshell will be written to a .jsp file.

The mitigation is to restrict (by default) the actions authorized on Jolokia, or disable Jolokia.
A more restrictive Jolokia configuration has been defined in default ActiveMQ distribution. We encourage users to upgrade to ActiveMQ distributions version including updated Jolokia configuration: 5.16.6, 5.17.4, 5.18.0, 6.0.0.
</description>
      <guid isPermaLink="false">CVE-2022-41678|2024-08-03T12:49:43.601Z</guid>
      <pubDate>Tue, 28 Nov 2023 15:08:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-26117|2024-08-03T20:19:20.050Z -- apache%20software%20foundation -- apache%20activemq
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-26117</link>
      <description>The optional ActiveMQ LDAP login module can be configured to use anonymous access to the LDAP server. In this case, for Apache ActiveMQ Artemis prior to version 2.16.0 and Apache ActiveMQ prior to versions 5.16.1 and 5.15.14, the anonymous context is used to verify a valid users password in error, resulting in no check on the password.</description>
      <guid isPermaLink="false">CVE-2021-26117|2024-08-03T20:19:20.050Z</guid>
      <pubDate>Wed, 27 Jan 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-32114|2024-06-04T17:50:57.920Z -- apache%20software%20foundation -- apache%20activemq</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-32114</link>
      <description>In Apache ActiveMQ 6.x, the default configuration doesn't secure the API web context (where the Jolokia JMX REST API and the Message REST API are located).
It means that anyone can use these layers without any required authentication. Potentially, anyone can interact with the broker (using Jolokia JMX REST API) and/or produce/consume messages or purge/delete destinations (using the Message REST API).

To mitigate, users can update the default conf/jetty.xml configuration file to add authentication requirement:

  
  


Or we encourage users to upgrade to Apache ActiveMQ 6.1.2 where the default configuration has been updated with authentication by default.</description>
      <guid isPermaLink="false">CVE-2024-32114|2024-06-04T17:50:57.920Z</guid>
      <pubDate>Thu, 02 May 2024 08:29:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-32114|2024-08-02T02:06:44.047Z -- apache%20software%20foundation -- apache%20activemq</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-32114</link>
      <description>In Apache ActiveMQ 6.x, the default configuration doesn't secure the API web context (where the Jolokia JMX REST API and the Message REST API are located).
It means that anyone can use these layers without any required authentication. Potentially, anyone can interact with the broker (using Jolokia JMX REST API) and/or produce/consume messages or purge/delete destinations (using the Message REST API).

To mitigate, users can update the default conf/jetty.xml configuration file to add authentication requirement:

  
  


Or we encourage users to upgrade to Apache ActiveMQ 6.1.2 where the default configuration has been updated with authentication by default.</description>
      <guid isPermaLink="false">CVE-2024-32114|2024-08-02T02:06:44.047Z</guid>
      <pubDate>Thu, 02 May 2024 08:29:18 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Apache Software Foundation -- Apache Spark</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/apache%20software%20foundation/apache%20spark.rss</link>
    <description>The latest CVEs for Apache Software Foundation -- Apache Spark</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Mon, 05 Aug 2024 19:21:04 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2018-11770|2024-08-05T08:17:09.223Z -- apache%20software%20foundation -- apache%20spark
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-11770</link>
      <description>From version 1.3.0 onward, Apache Spark's standalone master exposes a REST API for job submission, in addition to the submission mechanism used by spark-submit. In standalone, the config property 'spark.authenticate.secret' establishes a shared secret for authenticating requests to submit jobs via spark-submit. However, the REST API does not use this or any other authentication mechanism, and this is not adequately documented. In this case, a user would be able to run a driver program without authenticating, but not launch executors, using the REST API. This REST API is also used by Mesos, when set up to run in cluster mode (i.e., when also running MesosClusterDispatcher), for job submission. Future versions of Spark will improve documentation on these points, and prohibit setting 'spark.authenticate.secret' when running the REST APIs, to make this clear. Future versions will also disable the REST API by default in the standalone master by changing the default value of 'spark.master.rest.enabled' to 'false'.</description>
      <guid isPermaLink="false">CVE-2018-11770|2024-08-05T08:17:09.223Z</guid>
      <pubDate>Mon, 13 Aug 2018 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-1334|2024-08-05T03:59:38.559Z -- apache%20software%20foundation -- apache%20spark
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-1334</link>
      <description>In Apache Spark 1.0.0 to 2.1.2, 2.2.0 to 2.2.1, and 2.3.0, when using PySpark or SparkR, it's possible for a different local user to connect to the Spark application and impersonate the user running the Spark application.</description>
      <guid isPermaLink="false">CVE-2018-1334|2024-08-05T03:59:38.559Z</guid>
      <pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-8024|2024-08-05T06:46:12.195Z -- apache%20software%20foundation -- apache%20spark
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-8024</link>
      <description>In Apache Spark 2.1.0 to 2.1.2, 2.2.0 to 2.2.1, and 2.3.0, it's possible for a malicious user to construct a URL pointing to a Spark cluster's UI's job and stage info pages, and if a user can be tricked into accessing the URL, can be used to cause script to execute and expose information from the user's view of the Spark UI. While some browsers like recent versions of Chrome and Safari are able to block this type of attack, current versions of Firefox (and possibly others) do not.</description>
      <guid isPermaLink="false">CVE-2018-8024|2024-08-05T06:46:12.195Z</guid>
      <pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-17190|2024-08-05T10:39:59.689Z -- apache%20software%20foundation -- apache%20spark
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-17190</link>
      <description>In all versions of Apache Spark, its standalone resource manager accepts code to execute on a 'master' host, that then runs that code on 'worker' hosts. The master itself does not, by design, execute user code. A specially-crafted request to the master can, however, cause the master to execute code too. Note that this does not affect standalone clusters with authentication enabled. While the master host typically has less outbound access to other resources than a worker, the execution of code on the master is nevertheless unexpected.</description>
      <guid isPermaLink="false">CVE-2018-17190|2024-08-05T10:39:59.689Z</guid>
      <pubDate>Mon, 19 Nov 2018 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-11760|2024-08-05T08:17:09.103Z -- apache%20software%20foundation -- apache%20spark
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-11760</link>
      <description>When using PySpark , it's possible for a different local user to connect to the Spark application and impersonate the user running the Spark application. This affects versions 1.x, 2.0.x, 2.1.x, 2.2.0 to 2.2.2, and 2.3.0 to 2.3.1.</description>
      <guid isPermaLink="false">CVE-2018-11760|2024-08-05T08:17:09.103Z</guid>
      <pubDate>Mon, 28 Jan 2019 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-11804|2024-08-05T08:17:09.224Z -- apache%20software%20foundation -- apache%20spark
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-11804</link>
      <description>Spark's Apache Maven-based build includes a convenience script, 'build/mvn', that downloads and runs a zinc server to speed up compilation. It has been included in release branches since 1.3.x, up to and including master. This server will accept connections from external hosts by default. A specially-crafted request to the zinc server could cause it to reveal information in files readable to the developer account running the build. Note that this issue does not affect end users of Spark, only developers building Spark from source code.</description>
      <guid isPermaLink="false">CVE-2018-11804|2024-08-05T08:17:09.224Z</guid>
      <pubDate>Wed, 24 Oct 2018 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>

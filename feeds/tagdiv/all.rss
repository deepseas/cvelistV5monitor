<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for tagDiv -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/tagdiv/all.rss</link>
    <description>The latest CVEs for tagDiv -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 11:20:28 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-3477|2024-08-03T01:14:01.441Z -- tagdiv -- tagdiv%20composer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3477</link>
      <description>The tagDiv Composer WordPress plugin before 3.5, required by the Newspaper WordPress theme before 12.1 and Newsmag WordPress theme before 5.2.2, does not properly implement the Facebook login feature, allowing unauthenticated attackers to login as any user by just knowing their email address</description>
      <guid isPermaLink="false">CVE-2022-3477|2024-08-03T01:14:01.441Z</guid>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3814|2024-07-29T18:31:17.434Z -- tagdiv -- tagdiv%20composer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3814</link>
      <description>The tagDiv Composer plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'single' module in all versions up to, and including, 4.8 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2024-3814|2024-07-29T18:31:17.434Z</guid>
      <pubDate>Sat, 15 Jun 2024 02:01:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3888|2024-06-04T17:32:08.997Z -- tagdiv -- tagdiv%20composer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3888</link>
      <description>The tagDiv Composer plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's button shortcode in all versions up to, and including, 4.8 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. NOTE: The vulnerable code in this plugin is specifically tied to the tagDiv Newspaper theme. If another theme is installed (e.g., NewsMag), this code may not be present.</description>
      <guid isPermaLink="false">CVE-2024-3888|2024-06-04T17:32:08.997Z</guid>
      <pubDate>Tue, 04 Jun 2024 04:30:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3813|2024-06-17T14:00:44.507Z -- tagdiv -- tagdiv%20composer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3813</link>
      <description>The tagDiv Composer plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 4.8 via the 'td_block_title' shortcode 'block_template_id' attribute. This makes it possible for authenticated attackers, with contributor-level and above permissions, to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where php file type can be uploaded and included.</description>
      <guid isPermaLink="false">CVE-2024-3813|2024-06-17T14:00:44.507Z</guid>
      <pubDate>Sat, 15 Jun 2024 02:01:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3813|2024-08-01T20:20:02.285Z -- tagdiv -- tagdiv%20composer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3813</link>
      <description>The tagDiv Composer plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 4.8 via the 'td_block_title' shortcode 'block_template_id' attribute. This makes it possible for authenticated attackers, with contributor-level and above permissions, to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where php file type can be uploaded and included.</description>
      <guid isPermaLink="false">CVE-2024-3813|2024-08-01T20:20:02.285Z</guid>
      <pubDate>Sat, 15 Jun 2024 02:01:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3888|2024-08-01T20:26:57.228Z -- tagdiv -- tagdiv%20composer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3888</link>
      <description>The tagDiv Composer plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's button shortcode in all versions up to, and including, 4.8 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. NOTE: The vulnerable code in this plugin is specifically tied to the tagDiv Newspaper theme. If another theme is installed (e.g., NewsMag), this code may not be present.</description>
      <guid isPermaLink="false">CVE-2024-3888|2024-08-01T20:26:57.228Z</guid>
      <pubDate>Tue, 04 Jun 2024 04:30:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3814|2024-08-01T20:20:01.851Z -- tagdiv -- tagdiv%20composer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3814</link>
      <description>The tagDiv Composer plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'single' module in all versions up to, and including, 4.8 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with author-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2024-3814|2024-08-01T20:20:01.851Z</guid>
      <pubDate>Sat, 15 Jun 2024 02:01:58 +0000</pubDate>
    </item>
  </channel>
</rss>

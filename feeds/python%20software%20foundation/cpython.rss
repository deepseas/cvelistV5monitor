<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Python Software Foundation -- CPython</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/python%20software%20foundation/cpython.rss</link>
    <description>The latest CVEs for Python Software Foundation -- CPython</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Mon, 17 Jun 2024 16:23:52 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-0397|2024-06-17T15:11:16.322Z -- python%20software%20foundation -- cpython
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0397</link>
      <description>A defect was discovered in the Python “ssl” module where there is a memory
race condition with the ssl.SSLContext methods “cert_store_stats()” and
“get_ca_certs()”. The race condition can be triggered if the methods are
called at the same time as certificates are loaded into the SSLContext,
such as during the TLS handshake with a certificate directory configured.
This issue is fixed in CPython 3.10.14, 3.11.9, 3.12.3, and 3.13.0a5.</description>
      <guid isPermaLink="false">CVE-2024-0397|2024-06-17T15:11:16.322Z</guid>
      <pubDate>Mon, 17 Jun 2024 15:09:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4032|2024-06-17T15:11:36.402Z -- python%20software%20foundation -- cpython
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4032</link>
      <description>The “ipaddress” module contained incorrect information about whether certain IPv4 and IPv6 addresses were designated as “globally reachable” or “private”. This affected the is_private and is_global properties of the ipaddress.IPv4Address, ipaddress.IPv4Network, ipaddress.IPv6Address, and ipaddress.IPv6Network classes, where values wouldn’t be returned in accordance with the latest information from the IANA Special-Purpose Address Registries.

CPython 3.12.4 and 3.13.0a6 contain updated information from these registries and thus have the intended behavior.</description>
      <guid isPermaLink="false">CVE-2024-4032|2024-06-17T15:11:36.402Z</guid>
      <pubDate>Mon, 17 Jun 2024 15:05:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6597|2024-04-03T15:06:30.430Z -- python%20software%20foundation -- cpython</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6597</link>
      <description>An issue was found in the CPython `tempfile.TemporaryDirectory` class affecting versions 3.12.1, 3.11.7, 3.10.13, 3.9.18, and 3.8.18 and prior.

The tempfile.TemporaryDirectory class would dereference symlinks during cleanup of permissions-related errors. This means users which can run privileged programs are potentially able to modify permissions of files referenced by symlinks in some circumstances.</description>
      <guid isPermaLink="false">CVE-2023-6597|2024-04-03T15:06:30.430Z</guid>
      <pubDate>Tue, 19 Mar 2024 15:44:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0450|2024-05-07T21:47:33.040Z -- python%20software%20foundation -- cpython</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0450</link>
      <description>An issue was found in the CPython `zipfile` module affecting versions 3.12.1, 3.11.7, 3.10.13, 3.9.18, and 3.8.18 and prior.

The zipfile module is vulnerable to “quoted-overlap” zip-bombs which exploit the zip format to create a zip-bomb with a high compression ratio. The fixed versions of CPython makes the zipfile module reject zip archives which overlap entries in the archive.</description>
      <guid isPermaLink="false">CVE-2024-0450|2024-05-07T21:47:33.040Z</guid>
      <pubDate>Tue, 19 Mar 2024 15:12:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4030|2024-06-04T17:55:02.857Z -- python%20software%20foundation -- cpython</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4030</link>
      <description>On Windows a directory returned by tempfile.mkdtemp() would not always have permissions set to restrict reading and writing to the temporary directory by other users, instead usually inheriting the correct permissions from the default location. Alternate configurations or users without a profile directory may not have the intended permissions.

If you’re not using Windows or haven’t changed the temporary directory location then you aren’t affected by this vulnerability. On other platforms the returned directory is consistently readable and writable only by the current user.

This issue was caused by Python not supporting Unix permissions on Windows. The fix adds support for Unix “700” for the mkdir function on Windows which is used by mkdtemp() to ensure the newly created directory has the proper permissions.</description>
      <guid isPermaLink="false">CVE-2024-4030|2024-06-04T17:55:02.857Z</guid>
      <pubDate>Tue, 07 May 2024 21:02:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0450|2024-06-13T19:24:15.993Z -- python%20software%20foundation -- cpython</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0450</link>
      <description>An issue was found in the CPython `zipfile` module affecting versions 3.12.1, 3.11.7, 3.10.13, 3.9.18, and 3.8.18 and prior.

The zipfile module is vulnerable to “quoted-overlap” zip-bombs which exploit the zip format to create a zip-bomb with a high compression ratio. The fixed versions of CPython makes the zipfile module reject zip archives which overlap entries in the archive.</description>
      <guid isPermaLink="false">CVE-2024-0450|2024-06-13T19:24:15.993Z</guid>
      <pubDate>Tue, 19 Mar 2024 15:12:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6597|2024-06-13T19:24:11.289Z -- python%20software%20foundation -- cpython</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6597</link>
      <description>An issue was found in the CPython `tempfile.TemporaryDirectory` class affecting versions 3.12.1, 3.11.7, 3.10.13, 3.9.18, and 3.8.18 and prior.

The tempfile.TemporaryDirectory class would dereference symlinks during cleanup of permissions-related errors. This means users which can run privileged programs are potentially able to modify permissions of files referenced by symlinks in some circumstances.</description>
      <guid isPermaLink="false">CVE-2023-6597|2024-06-13T19:24:11.289Z</guid>
      <pubDate>Tue, 19 Mar 2024 15:44:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4030|2024-06-13T19:24:24.254Z -- python%20software%20foundation -- cpython</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4030</link>
      <description>On Windows a directory returned by tempfile.mkdtemp() would not always have permissions set to restrict reading and writing to the temporary directory by other users, instead usually inheriting the correct permissions from the default location. Alternate configurations or users without a profile directory may not have the intended permissions.

If you’re not using Windows or haven’t changed the temporary directory location then you aren’t affected by this vulnerability. On other platforms the returned directory is consistently readable and writable only by the current user.

This issue was caused by Python not supporting Unix permissions on Windows. The fix adds support for Unix “700” for the mkdir function on Windows which is used by mkdtemp() to ensure the newly created directory has the proper permissions.</description>
      <guid isPermaLink="false">CVE-2024-4030|2024-06-13T19:24:24.254Z</guid>
      <pubDate>Tue, 07 May 2024 21:02:55 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for wazuh -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/wazuh/all.rss</link>
    <description>The latest CVEs for wazuh -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 23:22:04 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-50260|2024-08-02T22:16:46.332Z -- wazuh -- wazuh
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-50260</link>
      <description>Wazuh is a free and open source platform used for threat prevention, detection, and response. A wrong validation in the `host_deny` script allows to write any string in the `hosts.deny` file, which can end in an arbitrary command execution on the target system. This vulnerability is part of the active response feature, which can automatically triggers actions in response to alerts. By default, active responses are limited to a set of pre defined executables. This is enforced by only allowing executables stored under `/var/ossec/active-response/bin` to be run as an active response. However, the `/var/ossec/active-response/bin/host_deny` can be exploited. `host_deny` is used to add IP address to the `/etc/hosts.deny` file to block incoming connections on a service level by using TCP wrappers. Attacker can inject arbitrary command into the `/etc/hosts.deny` file and execute arbitrary command by using the spawn directive. The active response can be triggered by writing events either to the local `execd` queue on server or to the `ar` queue which forwards the events to agents. So, it can leads to LPE on server as root and RCE on agent as root. This vulnerability is fixed in 4.7.2.</description>
      <guid isPermaLink="false">CVE-2023-50260|2024-08-02T22:16:46.332Z</guid>
      <pubDate>Fri, 19 Apr 2024 14:28:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-42463|2024-08-02T19:23:38.915Z -- wazuh -- wazuh
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-42463</link>
      <description>Wazuh is a free and open source platform used for threat prevention, detection, and response. This bug introduced a stack overflow hazard that could allow a local privilege escalation. This vulnerability was patched in version 4.5.3.</description>
      <guid isPermaLink="false">CVE-2023-42463|2024-08-02T19:23:38.915Z</guid>
      <pubDate>Fri, 12 Jan 2024 20:55:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-42455|2024-08-02T19:23:38.920Z -- wazuh -- wazuh-kibana-app
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-42455</link>
      <description>Wazuh is a security detection, visibility, and compliance open source project. In versions 4.4.0 and 4.4.1, it is possible to get the Wazuh API administrator key used by the Dashboard using the browser development tools. This allows a logged user to the dashboard to become administrator of the API, even if their dashboard role is not. Version 4.4.2 contains a fix. There are no known workarounds.</description>
      <guid isPermaLink="false">CVE-2023-42455|2024-08-02T19:23:38.920Z</guid>
      <pubDate>Mon, 09 Oct 2023 16:30:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-32038|2024-08-02T02:06:42.823Z -- wazuh -- wazuh</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-32038</link>
      <description>Wazuh is a free and open source platform used for threat prevention, detection, and response. There is a buffer overflow hazard in wazuh-analysisd when handling Unicode characters from Windows Eventchannel messages. It impacts Wazuh Manager 3.8.0 and above. This vulnerability is fixed in Wazuh Manager 4.7.2.</description>
      <guid isPermaLink="false">CVE-2024-32038|2024-08-02T02:06:42.823Z</guid>
      <pubDate>Fri, 19 Apr 2024 14:31:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-32038|2024-06-04T17:52:06.098Z -- wazuh -- wazuh</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-32038</link>
      <description>Wazuh is a free and open source platform used for threat prevention, detection, and response. There is a buffer overflow hazard in wazuh-analysisd when handling Unicode characters from Windows Eventchannel messages. It impacts Wazuh Manager 3.8.0 and above. This vulnerability is fixed in Wazuh Manager 4.7.2.</description>
      <guid isPermaLink="false">CVE-2024-32038|2024-06-04T17:52:06.098Z</guid>
      <pubDate>Fri, 19 Apr 2024 14:31:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-50260|2024-06-04T17:17:44.360Z -- wazuh -- wazuh</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-50260</link>
      <description>Wazuh is a free and open source platform used for threat prevention, detection, and response. A wrong validation in the `host_deny` script allows to write any string in the `hosts.deny` file, which can end in an arbitrary command execution on the target system. This vulnerability is part of the active response feature, which can automatically triggers actions in response to alerts. By default, active responses are limited to a set of pre defined executables. This is enforced by only allowing executables stored under `/var/ossec/active-response/bin` to be run as an active response. However, the `/var/ossec/active-response/bin/host_deny` can be exploited. `host_deny` is used to add IP address to the `/etc/hosts.deny` file to block incoming connections on a service level by using TCP wrappers. Attacker can inject arbitrary command into the `/etc/hosts.deny` file and execute arbitrary command by using the spawn directive. The active response can be triggered by writing events either to the local `execd` queue on server or to the `ar` queue which forwards the events to agents. So, it can leads to LPE on server as root and RCE on agent as root. This vulnerability is fixed in 4.7.2.</description>
      <guid isPermaLink="false">CVE-2023-50260|2024-06-04T17:17:44.360Z</guid>
      <pubDate>Fri, 19 Apr 2024 14:28:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-49275|2024-06-04T17:27:54.825Z -- wazuh -- wazuh</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-49275</link>
      <description>Wazuh is a free and open source platform used for threat prevention, detection, and response. A NULL pointer dereference was detected during fuzzing of the analysis engine, allowing malicious clients to DoS the analysis engine. The bug occurs when `analysisd` receives a syscollector message with the `hotfix` `msg_type` but lacking a `timestamp`. It uses `cJSON_GetObjectItem()` to get the `timestamp` object item and dereferences it without checking for a `NULL` value. A malicious client can DoS the analysis engine. This vulnerability is fixed in 4.7.1.</description>
      <guid isPermaLink="false">CVE-2023-49275|2024-06-04T17:27:54.825Z</guid>
      <pubDate>Fri, 19 Apr 2024 14:24:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-49275|2024-08-02T21:53:45.339Z -- wazuh -- wazuh</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-49275</link>
      <description>Wazuh is a free and open source platform used for threat prevention, detection, and response. A NULL pointer dereference was detected during fuzzing of the analysis engine, allowing malicious clients to DoS the analysis engine. The bug occurs when `analysisd` receives a syscollector message with the `hotfix` `msg_type` but lacking a `timestamp`. It uses `cJSON_GetObjectItem()` to get the `timestamp` object item and dereferences it without checking for a `NULL` value. A malicious client can DoS the analysis engine. This vulnerability is fixed in 4.7.1.</description>
      <guid isPermaLink="false">CVE-2023-49275|2024-08-02T21:53:45.339Z</guid>
      <pubDate>Fri, 19 Apr 2024 14:24:25 +0000</pubDate>
    </item>
  </channel>
</rss>

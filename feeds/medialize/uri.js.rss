<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for medialize -- URI.js</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/medialize/uri.js.rss</link>
    <description>The latest CVEs for medialize -- URI.js</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 22:22:50 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2020-26291|2024-08-04T15:56:03.814Z -- medialize -- uri.js
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-26291</link>
      <description>URI.js is a javascript URL mutation library (npm package urijs). In URI.js before version 1.19.4, the hostname can be spoofed by using a backslash (`\`) character followed by an at (`@`) character. If the hostname is used in security decisions, the decision may be incorrect. Depending on library usage and attacker intent, impacts may include allow/block list bypasses, SSRF attacks, open redirects, or other undesired behavior. For example the URL `https://expected-example.com\@observed-example.com` will incorrectly return `observed-example.com` if using an affected version. Patched versions correctly return `expected-example.com`. Patched versions match the behavior of other parsers which implement the WHATWG URL specification, including web browsers and Node's built-in URL class. Version 1.19.4 is patched against all known payload variants. Version 1.19.3 has a partial patch but is still vulnerable to a payload variant.]</description>
      <guid isPermaLink="false">CVE-2020-26291|2024-08-04T15:56:03.814Z</guid>
      <pubDate>Wed, 30 Dec 2020 23:40:16 +0000</pubDate>
    </item>
  </channel>
</rss>

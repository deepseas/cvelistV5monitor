<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>CVE Feed for static-web-server -- all</title><link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/static-web-server/all.rss</link><description>The latest CVEs for static-web-server -- all</description><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><lastBuildDate>Fri, 24 May 2024 21:24:13 +0000</lastBuildDate><ttl>60</ttl><item><title>CVE-2024-32966|2024-05-01T05:39:28.758Z -- static-web-server -- static-web-server
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-32966</link><description>Static Web Server (SWS) is a tiny and fast production-ready web server suitable to serve static web files or assets. In affected versions if directory listings are enabled for a directory that an untrusted user has upload privileges for, a malicious file name like `&lt;img src=x onerror=alert(1)&gt;.txt` will allow JavaScript code execution in the context of the web serverâ€™s domain. SWS generally does not perform escaping of HTML entities on any values inserted in the directory listing. At the very least `file_name` and `current_path` could contain malicious data however. `file_uri` could also be malicious but the relevant scenarios seem to be all caught by hyper. For any web server that allow users to upload files or create directories under a name of their choosing this becomes a stored Cross-site Scripting vulnerability. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description><guid isPermaLink="false">CVE-2024-32966|2024-05-01T05:39:28.758Z</guid><pubDate>Wed, 01 May 2024 05:39:28 +0000</pubDate></item></channel></rss>
<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for mlflow -- mlflow/mlflow</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/mlflow/mlflow%2Fmlflow.rss</link>
    <description>The latest CVEs for mlflow -- mlflow/mlflow</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 07 Jun 2024 23:22:17 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-3099|2024-06-07T12:54:32.844Z -- mlflow -- mlflow%2Fmlflow</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3099</link>
      <description>A vulnerability in mlflow/mlflow version 2.11.1 allows attackers to create multiple models with the same name by exploiting URL encoding. This flaw can lead to Denial of Service (DoS) as an authenticated user might not be able to use the intended model, as it will open a different model each time. Additionally, an attacker can exploit this vulnerability to perform data model poisoning by creating a model with the same name, potentially causing an authenticated user to become a victim by using the poisoned model. The issue stems from inadequate validation of model names, allowing for the creation of models with URL-encoded names that are treated as distinct from their URL-decoded counterparts.</description>
      <guid isPermaLink="false">CVE-2024-3099|2024-06-07T12:54:32.844Z</guid>
      <pubDate>Thu, 06 Jun 2024 18:08:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2928|2024-06-06T19:39:55.440Z -- mlflow -- mlflow%2Fmlflow</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2928</link>
      <description>A Local File Inclusion (LFI) vulnerability was identified in mlflow/mlflow, specifically in version 2.9.2, which was fixed in version 2.11.3. This vulnerability arises from the application's failure to properly validate URI fragments for directory traversal sequences such as '../'. An attacker can exploit this flaw by manipulating the fragment part of the URI to read arbitrary files on the local file system, including sensitive files like '/etc/passwd'. The vulnerability is a bypass to a previous patch that only addressed similar manipulation within the URI's query string, highlighting the need for comprehensive validation of all parts of a URI to prevent LFI attacks.</description>
      <guid isPermaLink="false">CVE-2024-2928|2024-06-06T19:39:55.440Z</guid>
      <pubDate>Thu, 06 Jun 2024 18:29:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3573|2024-04-16T11:10:56.255Z -- mlflow -- mlflow%2Fmlflow</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3573</link>
      <description>mlflow/mlflow is vulnerable to Local File Inclusion (LFI) due to improper parsing of URIs, allowing attackers to bypass checks and read arbitrary files on the system. The issue arises from the 'is_local_uri' function's failure to properly handle URIs with empty or 'file' schemes, leading to the misclassification of URIs as non-local. Attackers can exploit this by crafting malicious model versions with specially crafted 'source' parameters, enabling the reading of sensitive files within at least two directory levels from the server's root.</description>
      <guid isPermaLink="false">CVE-2024-3573|2024-04-16T11:10:56.255Z</guid>
      <pubDate>Tue, 16 Apr 2024 00:00:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2928|2024-06-06T18:29:54.973Z -- mlflow -- mlflow%2Fmlflow</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2928</link>
      <description>A Local File Inclusion (LFI) vulnerability was identified in mlflow/mlflow, specifically in version 2.9.2, which was fixed in version 2.11.3. This vulnerability arises from the application's failure to properly validate URI fragments for directory traversal sequences such as '../'. An attacker can exploit this flaw by manipulating the fragment part of the URI to read arbitrary files on the local file system, including sensitive files like '/etc/passwd'. The vulnerability is a bypass to a previous patch that only addressed similar manipulation within the URI's query string, highlighting the need for comprehensive validation of all parts of a URI to prevent LFI attacks.</description>
      <guid isPermaLink="false">CVE-2024-2928|2024-06-06T18:29:54.973Z</guid>
      <pubDate>Thu, 06 Jun 2024 18:29:54 +0000</pubDate>
    </item>
  </channel>
</rss>

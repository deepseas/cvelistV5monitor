<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for vega -- vega</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/vega/vega.rss</link>
    <description>The latest CVEs for vega -- vega</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 19:20:15 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-26486|2024-08-02T11:53:54.219Z -- vega -- vega
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-26486</link>
      <description>Vega is a visualization grammar, a declarative format for creating, saving, and sharing interactive visualization designs. The Vega `scale` expression function has the ability to call arbitrary functions with a single controlled argument. The scale expression function passes a user supplied argument group to getScale, which is then used as if it were an internal context. The context.scales[name].value is accessed from group and called as a function back in scale. This can be exploited to escape the Vega expression sandbox in order to execute arbitrary JavaScript. This issue has been fixed in version 5.13.1.</description>
      <guid isPermaLink="false">CVE-2023-26486|2024-08-02T11:53:54.219Z</guid>
      <pubDate>Fri, 03 Mar 2023 23:48:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-26487|2024-08-02T11:53:52.908Z -- vega -- vega
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-26487</link>
      <description>Vega is a visualization grammar, a declarative format for creating, saving, and sharing interactive visualization designs.`lassoAppend' function accepts 3 arguments and internally invokes `push` function on the 1st argument specifying array consisting of 2nd and 3rd arguments as `push` call argument. The type of the 1st argument is supposed to be an array, but it's not enforced. This makes it possible to specify any object with a `push` function as the 1st argument, `push` function can be set to any function that can be access via `event.view` (no all such functions can be exploited due to invalid context or signature, but some can, e.g. `console.log`). The issue is that`lassoAppend` doesn't enforce proper types of its arguments. This issue opens various XSS vectors, but exact impact and severity depends on the environment (e.g. Core JS `setImmediate` polyfill basically allows `eval`-like functionality). This issue was patched in 5.23.0.
</description>
      <guid isPermaLink="false">CVE-2023-26487|2024-08-02T11:53:52.908Z</guid>
      <pubDate>Fri, 03 Mar 2023 23:47:28 +0000</pubDate>
    </item>
  </channel>
</rss>

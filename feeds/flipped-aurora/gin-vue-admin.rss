<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for flipped-aurora -- gin-vue-admin</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/flipped-aurora/gin-vue-admin.rss</link>
    <description>The latest CVEs for flipped-aurora -- gin-vue-admin</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 07:20:27 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-24844|2024-08-03T04:20:50.699Z -- flipped-aurora -- gin-vue-admin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-24844</link>
      <description>Gin-vue-admin is a backstage management system based on vue and gin, which separates the front and rear of the full stack. The problem occurs in the following code in server/service/system/sys_auto_code_pgsql.go, which means that PostgreSQL must be used as the database for this vulnerability to occur. Users must: Require JWT loginï¼‰ and be using PostgreSQL to be affected. This issue has been resolved in version 2.5.1. There are no known workarounds.</description>
      <guid isPermaLink="false">CVE-2022-24844|2024-08-03T04:20:50.699Z</guid>
      <pubDate>Wed, 13 Apr 2022 21:10:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-24843|2024-08-03T04:20:50.473Z -- flipped-aurora -- gin-vue-admin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-24843</link>
      <description>Gin-vue-admin is a backstage management system based on vue and gin, which separates the front and rear of the full stack. Gin-vue-admin 2.50 has arbitrary file read vulnerability due to a lack of parameter validation. This has been resolved in version 2.5.1. There are no known workarounds for this issue.</description>
      <guid isPermaLink="false">CVE-2022-24843|2024-08-03T04:20:50.473Z</guid>
      <pubDate>Wed, 13 Apr 2022 21:10:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-21660|2024-08-03T02:46:39.546Z -- flipped-aurora -- gin-vue-admin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-21660</link>
      <description>Gin-vue-admin is a backstage management system based on vue and gin. In versions prior to 2.4.7 low privilege users are able to modify higher privilege users. Authentication is missing on the `setUserInfo` function. Users are advised to update as soon as possible. There are no known workarounds.</description>
      <guid isPermaLink="false">CVE-2022-21660|2024-08-03T02:46:39.546Z</guid>
      <pubDate>Wed, 09 Feb 2022 19:55:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31457|2024-08-02T01:52:57.064Z -- flipped-aurora -- gin-vue-admin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-31457</link>
      <description>gin-vue-admin is a backstage management system based on vue and gin, which separates the front and rear of the full stack. gin-vue-admin pseudoversion 0.0.0-20240407133540-7bc7c3051067, corresponding to version 2.6.1, has a code injection vulnerability in the backend. In the Plugin System -&gt; Plugin Template feature, an attacker can perform directory traversal by manipulating the `plugName` parameter. They can create specific folders such as `api`, `config`, `global`, `model`, `router`, `service`, and `main.go` function within the specified traversal directory. Moreover, the Go files within these folders can have arbitrary code inserted based on a specific PoC parameter. The main reason for the existence of this vulnerability is the controllability of the PlugName field within the struct. Pseudoversion 0.0.0-20240409100909-b1b7427c6ea6, corresponding to commit b1b7427c6ea6c7a027fa188c6be557f3795e732b, contains a patch for the issue. As a workaround, one may manually use a filtering method available in the GitHub Security Advisory to rectify the directory traversal problem.</description>
      <guid isPermaLink="false">CVE-2024-31457|2024-08-02T01:52:57.064Z</guid>
      <pubDate>Tue, 09 Apr 2024 17:39:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-37896|2024-06-26T14:22:54.188Z -- flipped-aurora -- gin-vue-admin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-37896</link>
      <description>Gin-vue-admin is a backstage management system based on vue and gin. Gin-vue-admin &lt;= v2.6.5 has SQL injection vulnerability. The SQL injection vulnerabilities occur when a web application allows users to input data into SQL queries without sufficiently validating or sanitizing the input. Failing to properly enforce restrictions on user input could mean that even a basic form input field can be used to inject arbitrary and potentially dangerous SQL commands. This could lead to unauthorized access to the database, data leakage, data manipulation, or even complete compromise of the database server. This vulnerability has been addressed in commit `53d033821` which has been included in release version 2.6.6. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-37896|2024-06-26T14:22:54.188Z</guid>
      <pubDate>Mon, 17 Jun 2024 19:33:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31457|2024-04-09T17:39:52.347Z -- flipped-aurora -- gin-vue-admin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-31457</link>
      <description>gin-vue-admin is a backstage management system based on vue and gin, which separates the front and rear of the full stack. gin-vue-admin pseudoversion 0.0.0-20240407133540-7bc7c3051067, corresponding to version 2.6.1, has a code injection vulnerability in the backend. In the Plugin System -&gt; Plugin Template feature, an attacker can perform directory traversal by manipulating the `plugName` parameter. They can create specific folders such as `api`, `config`, `global`, `model`, `router`, `service`, and `main.go` function within the specified traversal directory. Moreover, the Go files within these folders can have arbitrary code inserted based on a specific PoC parameter. The main reason for the existence of this vulnerability is the controllability of the PlugName field within the struct. Pseudoversion 0.0.0-20240409100909-b1b7427c6ea6, corresponding to commit b1b7427c6ea6c7a027fa188c6be557f3795e732b, contains a patch for the issue. As a workaround, one may manually use a filtering method available in the GitHub Security Advisory to rectify the directory traversal problem.</description>
      <guid isPermaLink="false">CVE-2024-31457|2024-04-09T17:39:52.347Z</guid>
      <pubDate>Tue, 09 Apr 2024 17:39:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-37896|2024-06-17T19:33:57.018Z -- flipped-aurora -- gin-vue-admin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-37896</link>
      <description>Gin-vue-admin is a backstage management system based on vue and gin. Gin-vue-admin &lt;= v2.6.5 has SQL injection vulnerability. The SQL injection vulnerabilities occur when a web application allows users to input data into SQL queries without sufficiently validating or sanitizing the input. Failing to properly enforce restrictions on user input could mean that even a basic form input field can be used to inject arbitrary and potentially dangerous SQL commands. This could lead to unauthorized access to the database, data leakage, data manipulation, or even complete compromise of the database server. This vulnerability has been addressed in commit `53d033821` which has been included in release version 2.6.6. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-37896|2024-06-17T19:33:57.018Z</guid>
      <pubDate>Mon, 17 Jun 2024 19:33:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31457|2024-07-03T18:02:21.499Z -- flipped-aurora -- gin-vue-admin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-31457</link>
      <description>gin-vue-admin is a backstage management system based on vue and gin, which separates the front and rear of the full stack. gin-vue-admin pseudoversion 0.0.0-20240407133540-7bc7c3051067, corresponding to version 2.6.1, has a code injection vulnerability in the backend. In the Plugin System -&gt; Plugin Template feature, an attacker can perform directory traversal by manipulating the `plugName` parameter. They can create specific folders such as `api`, `config`, `global`, `model`, `router`, `service`, and `main.go` function within the specified traversal directory. Moreover, the Go files within these folders can have arbitrary code inserted based on a specific PoC parameter. The main reason for the existence of this vulnerability is the controllability of the PlugName field within the struct. Pseudoversion 0.0.0-20240409100909-b1b7427c6ea6, corresponding to commit b1b7427c6ea6c7a027fa188c6be557f3795e732b, contains a patch for the issue. As a workaround, one may manually use a filtering method available in the GitHub Security Advisory to rectify the directory traversal problem.</description>
      <guid isPermaLink="false">CVE-2024-31457|2024-07-03T18:02:21.499Z</guid>
      <pubDate>Tue, 09 Apr 2024 17:39:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-37896|2024-08-02T04:04:23.426Z -- flipped-aurora -- gin-vue-admin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-37896</link>
      <description>Gin-vue-admin is a backstage management system based on vue and gin. Gin-vue-admin &lt;= v2.6.5 has SQL injection vulnerability. The SQL injection vulnerabilities occur when a web application allows users to input data into SQL queries without sufficiently validating or sanitizing the input. Failing to properly enforce restrictions on user input could mean that even a basic form input field can be used to inject arbitrary and potentially dangerous SQL commands. This could lead to unauthorized access to the database, data leakage, data manipulation, or even complete compromise of the database server. This vulnerability has been addressed in commit `53d033821` which has been included in release version 2.6.6. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-37896|2024-08-02T04:04:23.426Z</guid>
      <pubDate>Mon, 17 Jun 2024 19:33:57 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>CVE Feed for flipped-aurora -- all</title><link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/flipped-aurora/all.rss</link><description>The latest CVEs for flipped-aurora -- all</description><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><lastBuildDate>Tue, 28 May 2024 21:54:24 +0000</lastBuildDate><ttl>60</ttl><item><title>CVE-2024-31457|2024-04-09T17:39:52.347Z -- flipped-aurora -- gin-vue-admin
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-31457</link><description>gin-vue-admin is a backstage management system based on vue and gin, which separates the front and rear of the full stack. gin-vue-admin pseudoversion 0.0.0-20240407133540-7bc7c3051067, corresponding to version 2.6.1, has a code injection vulnerability in the backend. In the Plugin System -&gt; Plugin Template feature, an attacker can perform directory traversal by manipulating the `plugName` parameter. They can create specific folders such as `api`, `config`, `global`, `model`, `router`, `service`, and `main.go` function within the specified traversal directory. Moreover, the Go files within these folders can have arbitrary code inserted based on a specific PoC parameter. The main reason for the existence of this vulnerability is the controllability of the PlugName field within the struct. Pseudoversion 0.0.0-20240409100909-b1b7427c6ea6, corresponding to commit b1b7427c6ea6c7a027fa188c6be557f3795e732b, contains a patch for the issue. As a workaround, one may manually use a filtering method available in the GitHub Security Advisory to rectify the directory traversal problem.</description><guid isPermaLink="false">CVE-2024-31457|2024-04-09T17:39:52.347Z</guid><pubDate>Tue, 09 Apr 2024 17:39:52 +0000</pubDate></item></channel></rss>
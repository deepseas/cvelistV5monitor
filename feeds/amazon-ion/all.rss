<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for amazon-ion -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/amazon-ion/all.rss</link>
    <description>The latest CVEs for amazon-ion -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Thu, 01 Aug 2024 23:22:40 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-21634|2024-08-01T22:27:35.757Z -- amazon-ion -- ion-java
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-21634</link>
      <description>Amazon Ion is a Java implementation of the Ion data notation. Prior to version 1.10.5, a potential denial-of-service issue exists in `ion-java` for applications that use `ion-java` to deserialize Ion text encoded data, or deserialize Ion text or binary encoded data into the `IonValue` model and then invoke certain `IonValue` methods on that in-memory representation. An actor could craft Ion data that, when loaded by the affected application and/or processed using the `IonValue` model, results in a `StackOverflowError` originating from the `ion-java` library. The patch is included in `ion-java` 1.10.5. As a workaround, do not load data which originated from an untrusted source or that could have been tampered with.</description>
      <guid isPermaLink="false">CVE-2024-21634|2024-08-01T22:27:35.757Z</guid>
      <pubDate>Wed, 03 Jan 2024 22:46:03 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Pivotal -- Spring Security</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/pivotal/spring%20security.rss</link>
    <description>The latest CVEs for Pivotal -- Spring Security</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Tue, 06 Aug 2024 15:23:35 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2014-0097|2024-08-06T09:05:38.302Z -- pivotal -- spring%20security
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2014-0097</link>
      <description>The ActiveDirectoryLdapAuthenticator in Spring Security 3.2.0 to 3.2.1 and 3.1.0 to 3.1.5 does not check the password length. If the directory allows anonymous binds then it may incorrectly authenticate a user who supplies an empty password.</description>
      <guid isPermaLink="false">CVE-2014-0097|2024-08-06T09:05:38.302Z</guid>
      <pubDate>Thu, 25 May 2017 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2016-5007|2024-08-06T00:46:40.202Z -- pivotal -- spring%20security
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-5007</link>
      <description>Both Spring Security 3.2.x, 4.0.x, 4.1.0 and the Spring Framework 3.2.x, 4.0.x, 4.1.x, 4.2.x rely on URL pattern mappings for authorization and for mapping requests to controllers respectively. Differences in the strictness of the pattern matching mechanisms, for example with regards to space trimming in path segments, can lead Spring Security to not recognize certain paths as not protected that are in fact mapped to Spring MVC controllers that should be protected. The problem is compounded by the fact that the Spring Framework provides richer features with regards to pattern matching as well as by the fact that pattern matching in each Spring Security and the Spring Framework can easily be customized creating additional differences.</description>
      <guid isPermaLink="false">CVE-2016-5007|2024-08-06T00:46:40.202Z</guid>
      <pubDate>Thu, 25 May 2017 17:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2014-3527|2024-08-06T10:50:16.372Z -- pivotal -- spring%20security
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2014-3527</link>
      <description>When using the CAS Proxy ticket authentication from Spring Security 3.1 to 3.2.4 a malicious CAS Service could trick another CAS Service into authenticating a proxy ticket that was not associated. This is due to the fact that the proxy ticket authentication uses the information from the HttpServletRequest which is populated based upon untrusted information within the HTTP request. This means if there are access control restrictions on which CAS services can authenticate to one another, those restrictions can be bypassed. If users are not using CAS Proxy tickets and not basing access control decisions based upon the CAS Service, then there is no impact to users.</description>
      <guid isPermaLink="false">CVE-2014-3527|2024-08-06T10:50:16.372Z</guid>
      <pubDate>Thu, 25 May 2017 17:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for judge0 -- judge0</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/judge0/judge0.rss</link>
    <description>The latest CVEs for judge0 -- judge0</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 24 Jul 2024 18:24:34 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-28185|2024-07-24T17:50:37.115Z -- judge0 -- judge0
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-28185</link>
      <description>Judge0 is an open-source online code execution system. The application does not account for symlinks placed inside the sandbox directory, which can be leveraged by an attacker to write to arbitrary files and gain code execution outside of the sandbox. When executing a submission, Judge0 writes a `run_script` to the sandbox directory. The security issue is that an attacker can create a symbolic link (symlink) at the path `run_script` before this code is executed, resulting in the `f.write` writing to an arbitrary file on the unsandboxed system. An attacker can leverage this vulnerability to overwrite scripts on the system and gain code execution outside of the sandbox.
</description>
      <guid isPermaLink="false">CVE-2024-28185|2024-07-24T17:50:37.115Z</guid>
      <pubDate>Thu, 18 Apr 2024 14:31:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29021|2024-06-04T17:57:28.371Z -- judge0 -- judge0</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-29021</link>
      <description>Judge0 is an open-source online code execution system. The default configuration of Judge0 leaves the service vulnerable to a sandbox escape via Server Side Request Forgery (SSRF). This allows an attacker with sufficient access to the Judge0 API to obtain unsandboxed code execution as root on the target machine. This vulnerability is fixed in 1.13.1.</description>
      <guid isPermaLink="false">CVE-2024-29021|2024-06-04T17:57:28.371Z</guid>
      <pubDate>Thu, 18 Apr 2024 14:43:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28189|2024-06-07T19:40:09.558Z -- judge0 -- judge0</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28189</link>
      <description>Judge0 is an open-source online code execution system. The application uses the UNIX chown command on an untrusted file within the sandbox. An attacker can abuse this by creating a symbolic link (symlink) to a file outside the sandbox, allowing the attacker to run chown on arbitrary files outside of the sandbox. This vulnerability is not impactful on it's own, but it can be used to bypass the patch for CVE-2024-28185 and obtain a complete sandbox escape. This vulnerability is fixed in 1.13.1.</description>
      <guid isPermaLink="false">CVE-2024-28189|2024-06-07T19:40:09.558Z</guid>
      <pubDate>Thu, 18 Apr 2024 14:40:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28185|2024-04-18T14:39:38.915Z -- judge0 -- judge0</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28185</link>
      <description>Judge0 is an open-source online code execution system. The application does not account for symlinks placed inside the sandbox directory, which can be leveraged by an attacker to write to arbitrary files and gain code execution outside of the sandbox. When executing a submission, Judge0 writes a `run_script` to the sandbox directory. The security issue is that an attacker can create a symbolic link (symlink) at the path `run_script` before this code is executed, resulting in the `f.write` writing to an arbitrary file on the unsandboxed system. An attacker can leverage this vulnerability to overwrite scripts on the system and gain code execution outside of the sandbox.</description>
      <guid isPermaLink="false">CVE-2024-28185|2024-04-18T14:39:38.915Z</guid>
      <pubDate>Thu, 18 Apr 2024 14:31:16 +0000</pubDate>
    </item>
  </channel>
</rss>

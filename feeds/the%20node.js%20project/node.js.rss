<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for The Node.js Project -- Node.js</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/the%20node.js%20project/node.js.rss</link>
    <description>The latest CVEs for The Node.js Project -- Node.js</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Mon, 16 Sep 2024 17:22:51 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2018-7158|2024-09-16T16:48:51.289Z -- the%20node.js%20project -- node.js
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-7158</link>
      <description>The `'path'` module in the Node.js 4.x release line contains a potential regular expression denial of service (ReDoS) vector. The code in question was replaced in Node.js 6.x and later so this vulnerability only impacts all versions of Node.js 4.x. The regular expression, `splitPathRe`, used within the `'path'` module for the various path parsing functions, including `path.dirname()`, `path.extname()` and `path.parse()` was structured in such a way as to allow an attacker to craft a string, that when passed through one of these functions, could take a significant amount of time to evaluate, potentially leading to a full denial of service.</description>
      <guid isPermaLink="false">CVE-2018-7158|2024-09-16T16:48:51.289Z</guid>
      <pubDate>Thu, 17 May 2018 14:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-12115|2024-09-16T16:48:58.679Z -- the%20node.js%20project -- node.js
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-12115</link>
      <description>In all versions of Node.js prior to 6.14.4, 8.11.4 and 10.9.0 when used with UCS-2 encoding (recognized by Node.js under the names `'ucs2'`, `'ucs-2'`, `'utf16le'` and `'utf-16le'`), `Buffer#write()` can be abused to write outside of the bounds of a single `Buffer`. Writes that start from the second-to-last position of a buffer cause a miscalculation of the maximum length of the input bytes to be written.</description>
      <guid isPermaLink="false">CVE-2018-12115|2024-09-16T16:48:58.679Z</guid>
      <pubDate>Tue, 21 Aug 2018 13:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>

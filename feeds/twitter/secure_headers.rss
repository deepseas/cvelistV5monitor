<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Twitter -- secure_headers</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/twitter/secure_headers.rss</link>
    <description>The latest CVEs for Twitter -- secure_headers</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 10:23:05 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2020-5216|2024-08-04T08:22:08.681Z -- twitter -- secure_headers
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-5216</link>
      <description>In Secure Headers (RubyGem secure_headers), a directive injection vulnerability is present in versions before 3.9.0, 5.2.0, and 6.3.0. If user-supplied input was passed into append/override_content_security_policy_directives, a newline could be injected leading to limited header injection. Upon seeing a newline in the header, rails will silently create a new Content-Security-Policy header with the remaining value of the original string. It will continue to create new headers for each newline. This has been fixed in 6.3.0, 5.2.0, and 3.9.0.</description>
      <guid isPermaLink="false">CVE-2020-5216|2024-08-04T08:22:08.681Z</guid>
      <pubDate>Thu, 23 Jan 2020 02:30:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-5217|2024-08-04T08:22:08.919Z -- twitter -- secure_headers
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-5217</link>
      <description>In Secure Headers (RubyGem secure_headers), a directive injection vulnerability is present in versions before 3.8.0, 5.1.0, and 6.2.0. If user-supplied input was passed into append/override_content_security_policy_directives, a semicolon could be injected leading to directive injection. This could be used to e.g. override a script-src directive. Duplicate directives are ignored and the first one wins. The directives in secure_headers are sorted alphabetically so they pretty much all come before script-src. A previously undefined directive would receive a value even if SecureHeaders::OPT_OUT was supplied. The fixed versions will silently convert the semicolons to spaces and emit a deprecation warning when this happens. This will result in innocuous browser console messages if being exploited/accidentally used. In future releases, we will raise application errors resulting in 500s. Depending on what major version you are using, the fixed versions are 6.2.0, 5.1.0, 3.8.0.</description>
      <guid isPermaLink="false">CVE-2020-5217|2024-08-04T08:22:08.919Z</guid>
      <pubDate>Thu, 23 Jan 2020 02:15:17 +0000</pubDate>
    </item>
  </channel>
</rss>

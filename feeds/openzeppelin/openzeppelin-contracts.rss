<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for OpenZeppelin -- openzeppelin-contracts</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/openzeppelin/openzeppelin-contracts.rss</link>
    <description>The latest CVEs for OpenZeppelin -- openzeppelin-contracts</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 08:24:16 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-31198|2024-08-03T07:11:39.767Z -- openzeppelin -- openzeppelin-contracts
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-31198</link>
      <description>OpenZeppelin Contracts is a library for secure smart contract development. This issue concerns instances of Governor that use the module `GovernorVotesQuorumFraction`, a mechanism that determines quorum requirements as a percentage of the voting token's total supply. In affected instances, when a proposal is passed to lower the quorum requirements, past proposals may become executable if they had been defeated only due to lack of quorum, and the number of votes it received meets the new quorum requirement. Analysis of instances on chain found only one proposal that met this condition, and we are actively monitoring for new occurrences of this particular issue. This issue has been patched in v4.7.2. Users are advised to upgrade. Users unable to upgrade should consider avoiding lowering quorum requirements if a past proposal was defeated for lack of quorum.</description>
      <guid isPermaLink="false">CVE-2022-31198|2024-08-03T07:11:39.767Z</guid>
      <pubDate>Mon, 01 Aug 2022 21:00:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-31170|2024-08-03T07:11:39.603Z -- openzeppelin -- openzeppelin-contracts
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-31170</link>
      <description>OpenZeppelin Contracts is a library for smart contract development. Versions 4.0.0 until 4.7.1 are vulnerable to ERC165Checker reverting instead of returning `false`. `ERC165Checker.supportsInterface` is designed to always successfully return a boolean, and under no circumstance revert. However, an incorrect assumption about Solidity 0.8's `abi.decode` allows some cases to revert, given a target contract that doesn't implement EIP-165 as expected, specifically if it returns a value other than 0 or 1. The contracts that may be affected are those that use `ERC165Checker` to check for support for an interface and then handle the lack of support in a way other than reverting. The issue was patched in version 4.7.1.</description>
      <guid isPermaLink="false">CVE-2022-31170|2024-08-03T07:11:39.603Z</guid>
      <pubDate>Thu, 21 Jul 2022 14:00:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-31172|2024-08-03T07:11:39.637Z -- openzeppelin -- openzeppelin-contracts
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-31172</link>
      <description>OpenZeppelin Contracts is a library for smart contract development. Versions 4.1.0 until 4.7.1 are vulnerable to the SignatureChecker reverting. `SignatureChecker.isValidSignatureNow` is not expected to revert. However, an incorrect assumption about Solidity 0.8's `abi.decode` allows some cases to revert, given a target contract that doesn't implement EIP-1271 as expected. The contracts that may be affected are those that use `SignatureChecker` to check the validity of a signature and handle invalid signatures in a way other than reverting. The issue was patched in version 4.7.1.</description>
      <guid isPermaLink="false">CVE-2022-31172|2024-08-03T07:11:39.637Z</guid>
      <pubDate>Thu, 21 Jul 2022 13:55:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27094|2024-08-02T19:35:12.184Z -- openzeppelin -- openzeppelin-contracts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27094</link>
      <description>OpenZeppelin Contracts is a library for secure smart contract development. The `Base64.encode` function encodes a `bytes` input by iterating over it in chunks of 3 bytes. When this input is not a multiple of 3, the last iteration may read parts of the memory that are beyond the input buffer. The vulnerability is fixed in 5.0.2 and 4.9.6.</description>
      <guid isPermaLink="false">CVE-2024-27094|2024-08-02T19:35:12.184Z</guid>
      <pubDate>Thu, 29 Feb 2024 18:18:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27094|2024-02-29T18:18:24.721Z -- openzeppelin -- openzeppelin-contracts</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27094</link>
      <description>OpenZeppelin Contracts is a library for secure smart contract development. The `Base64.encode` function encodes a `bytes` input by iterating over it in chunks of 3 bytes. When this input is not a multiple of 3, the last iteration may read parts of the memory that are beyond the input buffer. The vulnerability is fixed in 5.0.2 and 4.9.6.</description>
      <guid isPermaLink="false">CVE-2024-27094|2024-02-29T18:18:24.721Z</guid>
      <pubDate>Thu, 29 Feb 2024 18:18:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27094|2024-08-02T00:27:58.413Z -- openzeppelin -- openzeppelin-contracts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27094</link>
      <description>OpenZeppelin Contracts is a library for secure smart contract development. The `Base64.encode` function encodes a `bytes` input by iterating over it in chunks of 3 bytes. When this input is not a multiple of 3, the last iteration may read parts of the memory that are beyond the input buffer. The vulnerability is fixed in 5.0.2 and 4.9.6.</description>
      <guid isPermaLink="false">CVE-2024-27094|2024-08-02T00:27:58.413Z</guid>
      <pubDate>Thu, 29 Feb 2024 18:18:24 +0000</pubDate>
    </item>
  </channel>
</rss>

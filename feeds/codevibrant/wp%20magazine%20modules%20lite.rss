<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for codevibrant -- WP Magazine Modules Lite</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/codevibrant/wp%20magazine%20modules%20lite.rss</link>
    <description>The latest CVEs for codevibrant -- WP Magazine Modules Lite</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Tue, 02 Jul 2024 18:24:04 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-5574|2024-07-02T16:59:15.500Z -- codevibrant -- wp%20magazine%20modules%20lite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5574</link>
      <description>The WP Magazine Modules Lite plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 1.1.2 via the 'blockLayout' parameter. This makes it possible for authenticated attackers, with Contributor-level access and above, to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other “safe” file types can be uploaded and included.</description>
      <guid isPermaLink="false">CVE-2024-5574|2024-07-02T16:59:15.500Z</guid>
      <pubDate>Wed, 19 Jun 2024 05:37:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5574|2024-06-19T05:37:43.474Z -- codevibrant -- wp%20magazine%20modules%20lite</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5574</link>
      <description>The WP Magazine Modules Lite plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 1.1.2 via the 'blockLayout' parameter. This makes it possible for authenticated attackers, with Contributor-level access and above, to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other “safe” file types can be uploaded and included.</description>
      <guid isPermaLink="false">CVE-2024-5574|2024-06-19T05:37:43.474Z</guid>
      <pubDate>Wed, 19 Jun 2024 05:37:43 +0000</pubDate>
    </item>
  </channel>
</rss>

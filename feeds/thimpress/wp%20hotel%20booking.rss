<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for ThimPress -- WP Hotel Booking</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/thimpress/wp%20hotel%20booking.rss</link>
    <description>The latest CVEs for ThimPress -- WP Hotel Booking</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 10:23:01 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2021-36852|2024-08-04T01:01:59.836Z -- thimpress -- wp%20hotel%20booking
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-36852</link>
      <description>Cross-Site Request Forgery (CSRF) vulnerability in ThimPress WP Hotel Booking plugin &lt;= 1.10.5 at WordPress.</description>
      <guid isPermaLink="false">CVE-2021-36852|2024-08-04T01:01:59.836Z</guid>
      <pubDate>Tue, 02 Aug 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-30508|2024-08-02T01:38:59.751Z -- thimpress -- wp%20hotel%20booking</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-30508</link>
      <description>Missing Authorization vulnerability in ThimPress WP Hotel Booking.This issue affects WP Hotel Booking: from n/a through 2.0.9.2.</description>
      <guid isPermaLink="false">CVE-2024-30508|2024-08-02T01:38:59.751Z</guid>
      <pubDate>Fri, 29 Mar 2024 14:17:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3605|2024-07-01T18:41:24.856Z -- thimpress -- wp%20hotel%20booking</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3605</link>
      <description>The WP Hotel Booking plugin for WordPress is vulnerable to SQL Injection via the 'room_type' parameter of the /wphb/v1/rooms/search-rooms REST API endpoint in all versions up to, and including, 2.1.0 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description>
      <guid isPermaLink="false">CVE-2024-3605|2024-07-01T18:41:24.856Z</guid>
      <pubDate>Thu, 20 Jun 2024 02:08:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-30508|2024-06-04T17:38:39.929Z -- thimpress -- wp%20hotel%20booking</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-30508</link>
      <description>Missing Authorization vulnerability in ThimPress WP Hotel Booking.This issue affects WP Hotel Booking: from n/a through 2.0.9.2.</description>
      <guid isPermaLink="false">CVE-2024-30508|2024-06-04T17:38:39.929Z</guid>
      <pubDate>Fri, 29 Mar 2024 14:17:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3605|2024-06-20T02:08:22.137Z -- thimpress -- wp%20hotel%20booking</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3605</link>
      <description>The WP Hotel Booking plugin for WordPress is vulnerable to SQL Injection via the 'room_type' parameter of the /wphb/v1/rooms/search-rooms REST API endpoint in all versions up to, and including, 2.1.0 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description>
      <guid isPermaLink="false">CVE-2024-3605|2024-06-20T02:08:22.137Z</guid>
      <pubDate>Thu, 20 Jun 2024 02:08:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3605|2024-08-01T20:12:08.108Z -- thimpress -- wp%20hotel%20booking</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3605</link>
      <description>The WP Hotel Booking plugin for WordPress is vulnerable to SQL Injection via the 'room_type' parameter of the /wphb/v1/rooms/search-rooms REST API endpoint in all versions up to, and including, 2.1.0 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description>
      <guid isPermaLink="false">CVE-2024-3605|2024-08-01T20:12:08.108Z</guid>
      <pubDate>Thu, 20 Jun 2024 02:08:22 +0000</pubDate>
    </item>
  </channel>
</rss>

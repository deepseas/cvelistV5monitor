<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for The Atlantis Word Processor Team -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/the%20atlantis%20word%20processor%20team/all.rss</link>
    <description>The latest CVEs for The Atlantis Word Processor Team -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Tue, 17 Sep 2024 14:22:42 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2018-3999|2024-09-17T04:29:24.304Z -- the%20atlantis%20word%20processor%20team -- atlantis%20word%20processor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-3999</link>
      <description>An exploitable stack-based buffer overflow vulnerability exists in the JPEG parser of Atlantis Word Processor, version 3.2.5.0. A specially crafted image embedded within a document can cause a length to be miscalculated and underflow. This length is then treated as unsigned and then used in a copying operation. Due to the length underflow, the application will then write outside the bounds of a stack buffer, resulting in a buffer overflow. An attacker must convince a victim to open a document in order to trigger this vulnerability.</description>
      <guid isPermaLink="false">CVE-2018-3999|2024-09-17T04:29:24.304Z</guid>
      <pubDate>Mon, 01 Oct 2018 20:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-3982|2024-09-17T02:16:00.461Z -- the%20atlantis%20word%20processor%20team -- atlantis%20word%20processor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-3982</link>
      <description>An exploitable arbitrary write vulnerability exists in the Word document parser of the Atlantis Word Processor 3.0.2.3 and 3.0.2.5. A specially crafted document can prevent Atlas from adding elements to an array that is indexed by a loop. When reading from this array, the application will use an out-of-bounds index which can result in arbitrary data being read as a pointer. Later, when the application attempts to write to said pointer, an arbitrary write will occur. This can allow an attacker to further corrupt memory, which leads to code execution under the context of the application. An attacker must convince a victim to open a document in order to trigger this vulnerability.</description>
      <guid isPermaLink="false">CVE-2018-3982|2024-09-17T02:16:00.461Z</guid>
      <pubDate>Mon, 01 Oct 2018 20:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>

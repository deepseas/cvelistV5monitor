<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for navidrome -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/navidrome/all.rss</link>
    <description>The latest CVEs for navidrome -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 20 Sep 2024 20:23:51 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-47062|2024-09-20T19:17:55.852Z -- navidrome -- navidrome
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-47062</link>
      <description>Navidrome is an open source web-based music collection server and streamer. Navidrome automatically adds parameters in the URL to SQL queries. This can be exploited to access information by adding parameters like `password=...` in the URL (ORM Leak). Furthermore, the names of the parameters are not properly escaped, leading to SQL Injections. Finally, the username is used in a `LIKE` statement, allowing people to log in with `%` instead of their username. When adding parameters to the URL, they are automatically included in an SQL `LIKE` statement (depending on the parameter's name). This allows attackers to potentially retrieve arbitrary information. For example, attackers can use the following request to test whether some encrypted passwords start with `AAA`. This results in an SQL query like `password LIKE 'AAA%'`, allowing attackers to slowly brute-force passwords. When adding parameters to the URL, they are automatically added to an SQL query. The names of the parameters are not properly escaped. This behavior can be used to inject arbitrary SQL code (SQL Injection). These vulnerabilities can be used to leak information and dump the contents of the database and have been addressed in release version 0.53.0. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-47062|2024-09-20T19:17:55.852Z</guid>
      <pubDate>Fri, 20 Sep 2024 19:01:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-32963|2024-08-02T02:27:52.376Z -- navidrome -- navidrome</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-32963</link>
      <description>Navidrome is an open source web-based music collection server and streamer. In affected versions of Navidrome are subject to a parameter tampering vulnerability where an attacker has the ability to manipulate parameter values in the HTTP requests. The attacker is able to change the parameter values in the body and successfully impersonate another user. In this case, the attacker created a playlist, added song, posted arbitrary comment, set the playlist to be public, and put the admin as the owner of the playlist. The attacker must be able to intercept http traffic for this attack. Each known user is impacted. An attacker can obtain the ownerId from shared playlist information, meaning every user who has shared a playlist is also impacted, as they can be impersonated. This issue has been addressed in version 0.52.0 and users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-32963|2024-08-02T02:27:52.376Z</guid>
      <pubDate>Wed, 01 May 2024 06:39:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-32963|2024-06-04T17:49:41.638Z -- navidrome -- navidrome</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-32963</link>
      <description>Navidrome is an open source web-based music collection server and streamer. In affected versions of Navidrome are subject to a parameter tampering vulnerability where an attacker has the ability to manipulate parameter values in the HTTP requests. The attacker is able to change the parameter values in the body and successfully impersonate another user. In this case, the attacker created a playlist, added song, posted arbitrary comment, set the playlist to be public, and put the admin as the owner of the playlist. The attacker must be able to intercept http traffic for this attack. Each known user is impacted. An attacker can obtain the ownerId from shared playlist information, meaning every user who has shared a playlist is also impacted, as they can be impersonated. This issue has been addressed in version 0.52.0 and users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-32963|2024-06-04T17:49:41.638Z</guid>
      <pubDate>Wed, 01 May 2024 06:39:10 +0000</pubDate>
    </item>
  </channel>
</rss>

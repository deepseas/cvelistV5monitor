<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Microsoft -- Internet Explorer 11</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/microsoft/internet%20explorer%2011.rss</link>
    <description>The latest CVEs for Microsoft -- Internet Explorer 11</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 12:25:36 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2020-1380|2024-08-04T06:32:01.264Z -- microsoft -- internet%20explorer%2011
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1380</link>
      <description>A remote code execution vulnerability exists in the way that the scripting engine handles objects in memory in Internet Explorer. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. If the current user is logged on with administrative user rights, an attacker who successfully exploited the vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability through Internet Explorer and then convince a user to view the website. An attacker could also embed an ActiveX control marked &amp;quot;safe for initialization&amp;quot; in an application or Microsoft Office document that hosts the IE rendering engine. The attacker could also take advantage of compromised websites and websites that accept or host user-provided content or advertisements. These websites could contain specially crafted content that could exploit the vulnerability.
The security update addresses the vulnerability by modifying how the scripting engine handles objects in memory.
</description>
      <guid isPermaLink="false">CVE-2020-1380|2024-08-04T06:32:01.264Z</guid>
      <pubDate>Mon, 17 Aug 2020 19:13:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-0833|2024-08-04T06:18:02.900Z -- microsoft -- internet%20explorer%2011
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-0833</link>
      <description>A remote code execution vulnerability exists in the way that the scripting engine handles objects in memory in Internet Explorer, aka 'Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2020-0768, CVE-2020-0823, CVE-2020-0825, CVE-2020-0826, CVE-2020-0827, CVE-2020-0828, CVE-2020-0829, CVE-2020-0830, CVE-2020-0831, CVE-2020-0832, CVE-2020-0848.</description>
      <guid isPermaLink="false">CVE-2020-0833|2024-08-04T06:18:02.900Z</guid>
      <pubDate>Thu, 12 Mar 2020 15:48:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1506|2024-08-04T06:39:10.409Z -- microsoft -- internet%20explorer%2011
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1506</link>
      <description>&lt;p&gt;An elevation of privilege vulnerability exists in the way that the Wininit.dll handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions.&lt;/p&gt;
&lt;p&gt;There are multiple ways an attacker could exploit the vulnerability:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit this vulnerability and then convince a user to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email message or in an Instant Messenger message that takes users to the attacker's website, or by opening an attachment sent through email.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In a file sharing attack scenario, an attacker could provide a specially crafted document file that is designed to exploit this vulnerability, and then convince a user to open the document file.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The security update addresses the vulnerability by ensuring the Wininit.dll properly handles objects in memory.&lt;/p&gt;
</description>
      <guid isPermaLink="false">CVE-2020-1506|2024-08-04T06:39:10.409Z</guid>
      <pubDate>Fri, 11 Sep 2020 17:09:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1012|2024-08-04T06:24:59.552Z -- microsoft -- internet%20explorer%2011
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1012</link>
      <description>&lt;p&gt;An elevation of privilege vulnerability exists in the way that the Wininit.dll handles objects in memory. An attacker who successfully exploited the vulnerability could execute code with elevated permissions.&lt;/p&gt;
&lt;p&gt;There are multiple ways an attacker could exploit the vulnerability:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit this vulnerability and then convince a user to view the website. An attacker would have no way to force users to view the attacker-controlled content. Instead, an attacker would have to convince users to take action, typically by getting them to click a link in an email message or in an Instant Messenger message that takes users to the attacker's website, or by opening an attachment sent through email.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;In a file sharing attack scenario, an attacker could provide a specially crafted document file that is designed to exploit this vulnerability, and then convince a user to open the document file.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The security update addresses the vulnerability by ensuring the Wininit.dll properly handles objects in memory.&lt;/p&gt;
</description>
      <guid isPermaLink="false">CVE-2020-1012|2024-08-04T06:24:59.552Z</guid>
      <pubDate>Fri, 11 Sep 2020 17:08:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1567|2024-08-04T06:39:10.650Z -- microsoft -- internet%20explorer%2011
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1567</link>
      <description>A remote code execution vulnerability exists in the way that the MSHTML engine improperly validates input.
An attacker could execute arbitrary code in the context of the current user. If the current user is logged on with administrative user rights, an attacker who successfully exploited the vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
In a HTML editing attack scenario, an attacker could trick a user into editing a specially crafted file that is designed to exploit the vulnerability.
The security update addresses the vulnerability by modifying how MSHTML engine validates input.
</description>
      <guid isPermaLink="false">CVE-2020-1567|2024-08-04T06:39:10.650Z</guid>
      <pubDate>Mon, 17 Aug 2020 19:13:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-0824|2024-08-04T06:18:03.456Z -- microsoft -- internet%20explorer%2011
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-0824</link>
      <description>A remote code execution vulnerability exists when Internet Explorer improperly accesses objects in memory, aka 'Internet Explorer Memory Corruption Vulnerability'.</description>
      <guid isPermaLink="false">CVE-2020-0824|2024-08-04T06:18:03.456Z</guid>
      <pubDate>Thu, 12 Mar 2020 15:48:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1570|2024-08-04T06:39:10.581Z -- microsoft -- internet%20explorer%2011
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1570</link>
      <description>A remote code execution vulnerability exists in the way that the scripting engine handles objects in memory in Internet Explorer. The vulnerability could corrupt memory in such a way that an attacker could execute arbitrary code in the context of the current user. An attacker who successfully exploited the vulnerability could gain the same user rights as the current user. If the current user is logged on with administrative user rights, an attacker who successfully exploited the vulnerability could take control of an affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights.
In a web-based attack scenario, an attacker could host a specially crafted website that is designed to exploit the vulnerability through Internet Explorer and then convince a user to view the website. An attacker could also embed an ActiveX control marked &amp;quot;safe for initialization&amp;quot; in an application or Microsoft Office document that hosts the IE rendering engine. The attacker could also take advantage of compromised websites and websites that accept or host user-provided content or advertisements. These websites could contain specially crafted content that could exploit the vulnerability.
The security update addresses the vulnerability by modifying how the scripting engine handles objects in memory.
</description>
      <guid isPermaLink="false">CVE-2020-1570|2024-08-04T06:39:10.581Z</guid>
      <pubDate>Mon, 17 Aug 2020 19:13:46 +0000</pubDate>
    </item>
  </channel>
</rss>

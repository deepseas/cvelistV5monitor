<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Drupal.org -- Drupal Core</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/drupal.org/drupal%20core.rss</link>
    <description>The latest CVEs for Drupal.org -- Drupal Core</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Mon, 05 Aug 2024 21:23:44 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2017-6932|2024-08-05T15:49:01.342Z -- drupal.org -- drupal%20core
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2017-6932</link>
      <description>Drupal core 7.x versions before 7.57 has an external link injection vulnerability when the language switcher block is used. A similar vulnerability exists in various custom and contributed modules. This vulnerability could allow an attacker to trick users into unwillingly navigating to an external site.</description>
      <guid isPermaLink="false">CVE-2017-6932|2024-08-05T15:49:01.342Z</guid>
      <pubDate>Wed, 21 Feb 2018 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2017-6927|2024-08-05T15:49:01.296Z -- drupal.org -- drupal%20core
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2017-6927</link>
      <description>Drupal 8.4.x versions before 8.4.5 and Drupal 7.x versions before 7.57 has a Drupal.checkPlain() JavaScript function which is used to escape potentially dangerous text before outputting it to HTML (as JavaScript output does not typically go through Twig autoescaping). This function does not correctly handle all methods of injecting malicious HTML, leading to a cross-site scripting vulnerability under certain circumstances. The PHP functions which Drupal provides for HTML escaping are not affected.</description>
      <guid isPermaLink="false">CVE-2017-6927|2024-08-05T15:49:01.296Z</guid>
      <pubDate>Wed, 21 Feb 2018 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2017-6930|2024-08-05T15:49:01.294Z -- drupal.org -- drupal%20core
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2017-6930</link>
      <description>In Drupal versions 8.4.x versions before 8.4.5 when using node access controls with a multilingual site, Drupal marks the untranslated version of a node as the default fallback for access queries. This fallback is used for languages that do not yet have a translated version of the created node. This can result in an access bypass vulnerability. This issue is mitigated by the fact that it only applies to sites that a) use the Content Translation module; and b) use a node access module such as Domain Access which implement hook_node_access_records().</description>
      <guid isPermaLink="false">CVE-2017-6930|2024-08-05T15:49:01.294Z</guid>
      <pubDate>Wed, 21 Feb 2018 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2017-6926|2024-08-05T15:49:02.219Z -- drupal.org -- drupal%20core
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2017-6926</link>
      <description>In Drupal versions 8.4.x versions before 8.4.5 users with permission to post comments are able to view content and comments they do not have access to, and are also able to add comments to this content. This vulnerability is mitigated by the fact that the comment system must be enabled and the attacker must have permission to post comments.</description>
      <guid isPermaLink="false">CVE-2017-6926|2024-08-05T15:49:02.219Z</guid>
      <pubDate>Wed, 21 Feb 2018 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2017-6920|2024-08-05T15:49:01.366Z -- drupal.org -- drupal%20core
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2017-6920</link>
      <description>Drupal core 8 before versions 8.3.4 allows remote attackers to execute arbitrary code due to the PECL YAML parser not handling PHP objects safely during certain operations.</description>
      <guid isPermaLink="false">CVE-2017-6920|2024-08-05T15:49:01.366Z</guid>
      <pubDate>Wed, 21 Jun 2017 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2017-6928|2024-08-05T15:49:02.767Z -- drupal.org -- drupal%20core
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2017-6928</link>
      <description>Drupal core 7.x versions before 7.57 when using Drupal's private file system, Drupal will check to make sure a user has access to a file before allowing the user to view or download it. This check fails under certain conditions in which one module is trying to grant access to the file and another is trying to deny it, leading to an access bypass vulnerability. This vulnerability is mitigated by the fact that it only occurs for unusual site configurations.</description>
      <guid isPermaLink="false">CVE-2017-6928|2024-08-05T15:49:02.767Z</guid>
      <pubDate>Wed, 21 Feb 2018 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2017-6931|2024-08-05T15:49:02.925Z -- drupal.org -- drupal%20core
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2017-6931</link>
      <description>In Drupal versions 8.4.x versions before 8.4.5 the Settings Tray module has a vulnerability that allows users to update certain data that they do not have the permissions for. If you have implemented a Settings Tray form in contrib or a custom module, the correct access checks should be added. This release fixes the only two implementations in core, but does not harden against other such bypasses. This vulnerability can be mitigated by disabling the Settings Tray module.</description>
      <guid isPermaLink="false">CVE-2017-6931|2024-08-05T15:49:02.925Z</guid>
      <pubDate>Wed, 21 Feb 2018 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2017-6929|2024-08-05T15:49:01.342Z -- drupal.org -- drupal%20core
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2017-6929</link>
      <description>A jQuery cross site scripting vulnerability is present when making Ajax requests to untrusted domains. This vulnerability is mitigated by the fact that it requires contributed or custom modules in order to exploit. For Drupal 8, this vulnerability was already fixed in Drupal 8.4.0 in the Drupal core upgrade to jQuery 3. For Drupal 7, it is fixed in the current release (Drupal 7.57) for jQuery 1.4.4 (the version that ships with Drupal 7 core) as well as for other newer versions of jQuery that might be used on the site, for example using the jQuery Update module.</description>
      <guid isPermaLink="false">CVE-2017-6929|2024-08-05T15:49:01.342Z</guid>
      <pubDate>Wed, 21 Feb 2018 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>

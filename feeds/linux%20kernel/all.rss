<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Linux Kernel -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/linux%20kernel/all.rss</link>
    <description>The latest CVEs for Linux Kernel -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 18:24:25 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2020-14386|2024-08-04T12:46:34.367Z -- linux%20kernel -- kernel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-14386</link>
      <description>A flaw was found in the Linux kernel before 5.9-rc4. Memory corruption can be exploited to gain root privileges from unprivileged processes. The highest threat from this vulnerability is to data confidentiality and integrity.</description>
      <guid isPermaLink="false">CVE-2020-14386|2024-08-04T12:46:34.367Z</guid>
      <pubDate>Wed, 16 Sep 2020 12:48:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-14304|2024-08-04T12:39:36.607Z -- linux%20kernel -- kernel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-14304</link>
      <description>A memory disclosure flaw was found in the Linux kernel's ethernet drivers, in the way it read data from the EEPROM of the device. This flaw allows a local user to read uninitialized values from the kernel memory. The highest threat from this vulnerability is to confidentiality.</description>
      <guid isPermaLink="false">CVE-2020-14304|2024-08-04T12:39:36.607Z</guid>
      <pubDate>Tue, 15 Sep 2020 19:40:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-10781|2024-08-04T11:14:15.582Z -- linux%20kernel -- kernel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-10781</link>
      <description>A flaw was found in the Linux Kernel before 5.8-rc6 in the ZRAM kernel module, where a user with a local account and the ability to read the /sys/class/zram-control/hot_add file can create ZRAM device nodes in the /dev/ directory. This read allocates kernel memory and is not accounted for a user that triggers the creation of that ZRAM device. With this vulnerability, continually reading the device may consume a large amount of system memory and cause the Out-of-Memory (OOM) killer to activate and terminate random userspace processes, possibly making the system inoperable.</description>
      <guid isPermaLink="false">CVE-2020-10781|2024-08-04T11:14:15.582Z</guid>
      <pubDate>Wed, 16 Sep 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-10767|2024-08-04T11:14:15.591Z -- linux%20kernel -- kernel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-10767</link>
      <description>A flaw was found in the Linux kernel before 5.8-rc1 in the implementation of the Enhanced IBPB (Indirect Branch Prediction Barrier). The IBPB mitigation will be disabled when STIBP is not available or when the Enhanced Indirect Branch Restricted Speculation (IBRS) is available. This flaw allows a local attacker to perform a Spectre V2 style attack when this configuration is active. The highest threat from this vulnerability is to confidentiality.</description>
      <guid isPermaLink="false">CVE-2020-10767|2024-08-04T11:14:15.591Z</guid>
      <pubDate>Tue, 15 Sep 2020 22:14:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-10766|2024-08-04T11:14:15.011Z -- linux%20kernel -- kernel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-10766</link>
      <description>A logic bug flaw was found in Linux kernel before 5.8-rc1 in the implementation of SSBD. A bug in the logic handling allows an attacker with a local account to disable SSBD protection during a context switch when additional speculative execution mitigations are in place. This issue was introduced when the per task/process conditional STIPB switching was added on top of the existing SSBD switching. The highest threat from this vulnerability is to confidentiality.</description>
      <guid isPermaLink="false">CVE-2020-10766|2024-08-04T11:14:15.011Z</guid>
      <pubDate>Tue, 15 Sep 2020 22:10:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-16120|2024-08-04T13:37:53.989Z -- linux%20kernel -- linux%20kernel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-16120</link>
      <description>Overlayfs did not properly perform permission checking when copying up files in an overlayfs and could be exploited from within a user namespace, if, for example, unprivileged user namespaces were allowed. It was possible to have a file not readable by an unprivileged user to be copied to a mountpoint controlled by the user, like a removable device. This was introduced in kernel version 4.19 by commit d1d04ef ("ovl: stack file ops"). This was fixed in kernel version 5.8 by commits 56230d9 ("ovl: verify permissions in ovl_path_open()"), 48bd024 ("ovl: switch to mounter creds in readdir") and 05acefb ("ovl: check permission to open real file"). Additionally, commits 130fdbc ("ovl: pass correct flags for opening real directory") and 292f902 ("ovl: call secutiry hook in ovl_real_ioctl()") in kernel 5.8 might also be desired or necessary. These additional commits introduced a regression in overlay mounts within user namespaces which prevented access to files with ownership outside of the user namespace. This regression was mitigated by subsequent commit b6650da ("ovl: do not fail because of O_NOATIMEi") in kernel 5.11.</description>
      <guid isPermaLink="false">CVE-2020-16120|2024-08-04T13:37:53.989Z</guid>
      <pubDate>Tue, 13 Oct 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1749|2024-08-04T06:46:30.814Z -- linux%20kernel -- kernel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1749</link>
      <description>A flaw was found in the Linux kernel's implementation of some networking protocols in IPsec, such as VXLAN and GENEVE tunnels over IPv6. When an encrypted tunnel is created between two hosts, the kernel isn't correctly routing tunneled data over the encrypted link; rather sending the data unencrypted. This would allow anyone in between the two endpoints to read the traffic unencrypted. The main threat from this vulnerability is to data confidentiality.</description>
      <guid isPermaLink="false">CVE-2020-1749|2024-08-04T06:46:30.814Z</guid>
      <pubDate>Wed, 09 Sep 2020 14:35:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-8834|2024-08-04T10:12:10.661Z -- linux%20kernel -- linux%20kernel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-8834</link>
      <description>KVM in the Linux kernel on Power8 processors has a conflicting use of HSTATE_HOST_R1 to store r1 state in kvmppc_hv_entry plus in kvmppc_{save,restore}_tm, leading to a stack corruption. Because of this, an attacker with the ability run code in kernel space of a guest VM can cause the host kernel to panic. There were two commits that, according to the reporter, introduced the vulnerability: f024ee098476 ("KVM: PPC: Book3S HV: Pull out TM state save/restore into separate procedures") 87a11bb6a7f7 ("KVM: PPC: Book3S HV: Work around XER[SO] bug in fake suspend mode") The former landed in 4.8, the latter in 4.17. This was fixed without realizing the impact in 4.18 with the following three commits, though it's believed the first is the only strictly necessary commit: 6f597c6b63b6 ("KVM: PPC: Book3S PR: Add guest MSR parameter for kvmppc_save_tm()/kvmppc_restore_tm()") 7b0e827c6970 ("KVM: PPC: Book3S HV: Factor fake-suspend handling out of kvmppc_save/restore_tm") 009c872a8bc4 ("KVM: PPC: Book3S PR: Move kvmppc_save_tm/kvmppc_restore_tm to separate file")</description>
      <guid isPermaLink="false">CVE-2020-8834|2024-08-04T10:12:10.661Z</guid>
      <pubDate>Mon, 06 Apr 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-14385|2024-08-04T12:46:34.096Z -- linux%20kernel -- kernel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-14385</link>
      <description>A flaw was found in the Linux kernel before 5.9-rc4. A failure of the file system metadata validator in XFS can cause an inode with a valid, user-creatable extended attribute to be flagged as corrupt. This can lead to the filesystem being shutdown, or otherwise rendered inaccessible until it is remounted, leading to a denial of service. The highest threat from this vulnerability is to system availability.</description>
      <guid isPermaLink="false">CVE-2020-14385|2024-08-04T12:46:34.096Z</guid>
      <pubDate>Tue, 15 Sep 2020 21:14:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-14314|2024-08-04T12:39:36.409Z -- linux%20kernel -- kernel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-14314</link>
      <description>A memory out-of-bounds read flaw was found in the Linux kernel before 5.9-rc2 with the ext3/ext4 file system, in the way it accesses a directory with broken indexing. This flaw allows a local user to crash the system if the directory exists. The highest threat from this vulnerability is to system availability.</description>
      <guid isPermaLink="false">CVE-2020-14314|2024-08-04T12:39:36.409Z</guid>
      <pubDate>Tue, 15 Sep 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-10732|2024-08-04T11:14:14.998Z -- linux%20kernel -- kernel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-10732</link>
      <description>A flaw was found in the Linux kernel's implementation of Userspace core dumps. This flaw allows an attacker with a local account to crash a trivial program and exfiltrate private kernel data.</description>
      <guid isPermaLink="false">CVE-2020-10732|2024-08-04T11:14:14.998Z</guid>
      <pubDate>Fri, 12 Jun 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-10768|2024-08-04T11:14:15.299Z -- linux%20kernel -- kernel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-10768</link>
      <description>A flaw was found in the Linux Kernel before 5.8-rc1 in the prctl() function, where it can be used to enable indirect branch speculation after it has been disabled. This call incorrectly reports it as being 'force disabled' when it is not and opens the system to Spectre v2 attacks. The highest threat from this vulnerability is to confidentiality.</description>
      <guid isPermaLink="false">CVE-2020-10768|2024-08-04T11:14:15.299Z</guid>
      <pubDate>Tue, 15 Sep 2020 23:13:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-8835|2024-08-04T10:12:10.621Z -- linux%20kernel -- linux%20kernel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-8835</link>
      <description>In the Linux kernel 5.5.0 and newer, the bpf verifier (kernel/bpf/verifier.c) did not properly restrict the register bounds for 32-bit operations, leading to out-of-bounds reads and writes in kernel memory. The vulnerability also affects the Linux 5.4 stable series, starting with v5.4.7, as the introducing commit was backported to that branch. This vulnerability was fixed in 5.6.1, 5.5.14, and 5.4.29. (issue is aka ZDI-CAN-10780)</description>
      <guid isPermaLink="false">CVE-2020-8835|2024-08-04T10:12:10.621Z</guid>
      <pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>

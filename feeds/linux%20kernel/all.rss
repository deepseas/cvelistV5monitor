<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Linux Kernel -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/linux%20kernel/all.rss</link>
    <description>The latest CVEs for Linux Kernel -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Mon, 16 Sep 2024 19:20:16 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2020-16120|2024-09-16T18:49:11.997Z -- linux%20kernel -- linux%20kernel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-16120</link>
      <description>Overlayfs did not properly perform permission checking when copying up files in an overlayfs and could be exploited from within a user namespace, if, for example, unprivileged user namespaces were allowed. It was possible to have a file not readable by an unprivileged user to be copied to a mountpoint controlled by the user, like a removable device. This was introduced in kernel version 4.19 by commit d1d04ef ("ovl: stack file ops"). This was fixed in kernel version 5.8 by commits 56230d9 ("ovl: verify permissions in ovl_path_open()"), 48bd024 ("ovl: switch to mounter creds in readdir") and 05acefb ("ovl: check permission to open real file"). Additionally, commits 130fdbc ("ovl: pass correct flags for opening real directory") and 292f902 ("ovl: call secutiry hook in ovl_real_ioctl()") in kernel 5.8 might also be desired or necessary. These additional commits introduced a regression in overlay mounts within user namespaces which prevented access to files with ownership outside of the user namespace. This regression was mitigated by subsequent commit b6650da ("ovl: do not fail because of O_NOATIMEi") in kernel 5.11.</description>
      <guid isPermaLink="false">CVE-2020-16120|2024-09-16T18:49:11.997Z</guid>
      <pubDate>Wed, 10 Feb 2021 19:45:26 +0000</pubDate>
    </item>
  </channel>
</rss>

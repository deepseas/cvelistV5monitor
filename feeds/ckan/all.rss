<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for ckan -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/ckan/all.rss</link>
    <description>The latest CVEs for ckan -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 21 Aug 2024 15:22:55 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-41675|2024-08-21T14:34:31.424Z -- ckan -- ckan
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-41675</link>
      <description>CKAN is an open-source data management system for powering data hubs and data portals. The Datatables view plugin did not properly escape record data coming from the DataStore, leading to a potential XSS vector. Sites running CKAN &gt;= 2.7.0 with the datatables_view plugin activated. This is a plugin included in CKAN core, that not activated by default but it is widely used to preview tabular data. This vulnerability has been fixed in CKAN 2.10.5 and 2.11.0.</description>
      <guid isPermaLink="false">CVE-2024-41675|2024-08-21T14:34:31.424Z</guid>
      <pubDate>Wed, 21 Aug 2024 14:34:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-43371|2024-08-21T14:47:31.160Z -- ckan -- ckan
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-43371</link>
      <description>CKAN is an open-source data management system for powering data hubs and data portals. There are a number of CKAN plugins, including XLoader, DataPusher, Resource proxy and ckanext-archiver, that work by downloading the contents of local or remote files in order to perform some actions with their contents (e.g. pushing to the DataStore, streaming contents or saving a local copy). All of them use the resource URL, and there are currently no checks to limit what URLs can be requested. This means that a malicious (or unaware) user can create a resource with a URL pointing to a place where they should not have access in order for one of the previous tools to retrieve it (known as a Server Side Request Forgery). Users wanting to protect against these kinds of attacks can use one or a combination of the following approaches: (1) Use a separate HTTP proxy like Squid that can be used to allow / disallow IPs, domains etc as needed, and make CKAN extensions aware of this setting via the ckan.download_proxy config option. (2) Implement custom firewall rules to prevent access to restricted resources. (3) Use custom validators on the resource url field to block/allow certain domains or IPs. All latest versions of the plugins listed above support the ckan.download_proxy settings. Support for this setting in the Resource Proxy plugin was included in CKAN 2.10.5 and 2.11.0.</description>
      <guid isPermaLink="false">CVE-2024-43371|2024-08-21T14:47:31.160Z</guid>
      <pubDate>Wed, 21 Aug 2024 14:47:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-41674|2024-08-21T14:31:26.240Z -- ckan -- ckan
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-41674</link>
      <description>CKAN is an open-source data management system for powering data hubs and data portals. If there were connection issues with the Solr server, the internal Solr URL (potentially including credentials) could be leaked to package_search calls as part of the returned error message. This has been patched in CKAN 2.10.5 and 2.11.0.</description>
      <guid isPermaLink="false">CVE-2024-41674|2024-08-21T14:31:26.240Z</guid>
      <pubDate>Wed, 21 Aug 2024 14:31:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27097|2024-03-13T20:40:50.855Z -- ckan -- ckan</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27097</link>
      <description>A user endpoint didn't perform filtering on an incoming parameter, which was added directly to the application log. This could lead to an attacker injecting false log entries or corrupt the log file format. This has been fixed in the CKAN versions 2.9.11 and 2.10.4. Users are advised to upgrade. Users unable to upgrade should override the `/user/reset` endpoint to filter the `id` parameter in order to exclude newlines.</description>
      <guid isPermaLink="false">CVE-2024-27097|2024-03-13T20:40:50.855Z</guid>
      <pubDate>Wed, 13 Mar 2024 20:40:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27097|2024-08-02T00:27:59.495Z -- ckan -- ckan</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27097</link>
      <description>A user endpoint didn't perform filtering on an incoming parameter, which was added directly to the application log. This could lead to an attacker injecting false log entries or corrupt the log file format. This has been fixed in the CKAN versions 2.9.11 and 2.10.4. Users are advised to upgrade. Users unable to upgrade should override the `/user/reset` endpoint to filter the `id` parameter in order to exclude newlines.</description>
      <guid isPermaLink="false">CVE-2024-27097|2024-08-02T00:27:59.495Z</guid>
      <pubDate>Wed, 13 Mar 2024 20:40:50 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for rubygems -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/rubygems/all.rss</link>
    <description>The latest CVEs for rubygems -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 23:21:57 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-40165|2024-08-02T18:24:55.791Z -- rubygems -- rubygems.org
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-40165</link>
      <description>rubygems.org is the Ruby community's primary gem (library) hosting service. Insufficient input validation allowed malicious actors to replace any uploaded gem version that had a platform, version number, or gem name matching `/-\d/`, permanently replacing the legitimate upload in the canonical gem storage bucket, and triggering an immediate CDN purge so that the malicious gem would be served immediately. The maintainers have checked all gems matching the `/-\d/` pattern and can confirm that no unexpected `.gem`s were found. As a result, we believe this vulnerability was _not_ exploited. The easiest way to ensure that a user's applications were not exploited by this vulnerability is to check that all of your downloaded .gems have a checksum that matches the checksum recorded in the RubyGems.org database. RubyGems contributor Maciej Mensfeld wrote a tool to automatically check that all downloaded .gem files match the checksums recorded in the RubyGems.org database. You can use it by running: `bundle add bundler-integrity` followed by `bundle exec bundler-integrity`. Neither this tool nor anything else can prove you were not exploited, but the can assist your investigation by quickly comparing RubyGems API-provided checksums with the checksums of files on your disk. The issue has been patched with improved input validation and the changes are live. No action is required on the part of the user. Users are advised to validate their local gems.</description>
      <guid isPermaLink="false">CVE-2023-40165|2024-08-02T18:24:55.791Z</guid>
      <pubDate>Thu, 17 Aug 2023 17:06:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-35221|2024-06-06T18:59:30.878Z -- rubygems -- rubygems.org</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35221</link>
      <description>Rubygems.org is the Ruby community's gem hosting service. A Gem publisher can cause a Remote DoS when publishing a Gem. This is due to how Ruby reads the Manifest of Gem files when using Gem::Specification.from_yaml. from_yaml makes use of SafeYAML.load which allows YAML aliases inside the YAML-based metadata of a gem. YAML aliases allow for Denial of Service attacks with so-called `YAML-bombs` (comparable to Billion laughs attacks). This was patched. There is is no action required by users. This issue is also tracked as GHSL-2024-001 and was discovered by the GitHub security lab.</description>
      <guid isPermaLink="false">CVE-2024-35221|2024-06-06T18:59:30.878Z</guid>
      <pubDate>Wed, 29 May 2024 20:18:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-35221|2024-08-02T03:07:46.784Z -- rubygems -- rubygems.org</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-35221</link>
      <description>Rubygems.org is the Ruby community's gem hosting service. A Gem publisher can cause a Remote DoS when publishing a Gem. This is due to how Ruby reads the Manifest of Gem files when using Gem::Specification.from_yaml. from_yaml makes use of SafeYAML.load which allows YAML aliases inside the YAML-based metadata of a gem. YAML aliases allow for Denial of Service attacks with so-called `YAML-bombs` (comparable to Billion laughs attacks). This was patched. There is is no action required by users. This issue is also tracked as GHSL-2024-001 and was discovered by the GitHub security lab.</description>
      <guid isPermaLink="false">CVE-2024-35221|2024-08-02T03:07:46.784Z</guid>
      <pubDate>Wed, 29 May 2024 20:18:06 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for rubygems -- rubygems.org</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/rubygems/rubygems.org.rss</link>
    <description>The latest CVEs for rubygems -- rubygems.org</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 12:25:42 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-29218|2024-08-03T06:17:54.351Z -- rubygems -- rubygems.org
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-29218</link>
      <description>RubyGems is a package registry used to supply software for the Ruby language ecosystem. An ordering mistake in the code that accepts gem uploads allowed some gems (with platforms ending in numbers, like `arm64-darwin-21`) to be temporarily replaced in the CDN cache by a malicious package. The bug has been patched, and is believed to have never been exploited, based on an extensive review of logs and existing gems by rubygems. The easiest way to ensure that an application has not been exploited by this vulnerability is to verify all downloaded .gems checksums match the checksum recorded in the RubyGems.org database. RubyGems.org has been patched and is no longer vulnerable to this issue.</description>
      <guid isPermaLink="false">CVE-2022-29218|2024-08-03T06:17:54.351Z</guid>
      <pubDate>Thu, 12 May 2022 23:55:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-29176|2024-08-03T06:17:53.919Z -- rubygems -- rubygems.org
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-29176</link>
      <description>Rubygems is a package registry used to supply software for the Ruby language ecosystem. Due to a bug in the yank action, it was possible for any RubyGems.org user to remove and replace certain gems even if that user was not authorized to do so. To be vulnerable, a gem needed: one or more dashes in its name creation within 30 days OR no updates for over 100 days At present, we believe this vulnerability has not been exploited. RubyGems.org sends an email to all gem owners when a gem version is published or yanked. We have not received any support emails from gem owners indicating that their gem has been yanked without authorization. An audit of gem changes for the last 18 months did not find any examples of this vulnerability being used in a malicious way. A deeper audit for any possible use of this exploit is ongoing, and we will update this advisory once it is complete. Using Bundler in --frozen or --deployment mode in CI and during deploys, as the Bundler team has always recommended, will guarantee that your application does not silently switch to versions created using this exploit. To audit your application history for possible past exploits, review your Gemfile.lock and look for gems whose platform changed when the version number did not change. For example, gemname-3.1.2 updating to gemname-3.1.2-java could indicate a possible abuse of this vulnerability. RubyGems.org has been patched and is no longer vulnerable to this issue as of the 5th of May 2022.</description>
      <guid isPermaLink="false">CVE-2022-29176|2024-08-03T06:17:53.919Z</guid>
      <pubDate>Thu, 05 May 2022 22:05:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-36073|2024-08-03T09:52:00.512Z -- rubygems -- rubygems.org
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-36073</link>
      <description>RubyGems.org is the Ruby community gem host. A bug in password &amp; email change confirmation code allowed an attacker to change their RubyGems.org account's email to an unowned email address. Having access to an account whose email has been changed could enable an attacker to save API keys for that account, and when a legitimate user attempts to create an account with their email (and has to reset password to gain access) and is granted access to other gems, the attacker would then be able to publish and yank versions of those gems. Commit number 90c9e6aac2d91518b479c51d48275c57de492d4d contains a patch for this issue.</description>
      <guid isPermaLink="false">CVE-2022-36073|2024-08-03T09:52:00.512Z</guid>
      <pubDate>Wed, 07 Sep 2022 19:45:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-35221|2024-06-06T18:59:30.878Z -- rubygems -- rubygems.org</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35221</link>
      <description>Rubygems.org is the Ruby community's gem hosting service. A Gem publisher can cause a Remote DoS when publishing a Gem. This is due to how Ruby reads the Manifest of Gem files when using Gem::Specification.from_yaml. from_yaml makes use of SafeYAML.load which allows YAML aliases inside the YAML-based metadata of a gem. YAML aliases allow for Denial of Service attacks with so-called `YAML-bombs` (comparable to Billion laughs attacks). This was patched. There is is no action required by users. This issue is also tracked as GHSL-2024-001 and was discovered by the GitHub security lab.</description>
      <guid isPermaLink="false">CVE-2024-35221|2024-06-06T18:59:30.878Z</guid>
      <pubDate>Wed, 29 May 2024 20:18:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-35221|2024-08-02T03:07:46.784Z -- rubygems -- rubygems.org</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-35221</link>
      <description>Rubygems.org is the Ruby community's gem hosting service. A Gem publisher can cause a Remote DoS when publishing a Gem. This is due to how Ruby reads the Manifest of Gem files when using Gem::Specification.from_yaml. from_yaml makes use of SafeYAML.load which allows YAML aliases inside the YAML-based metadata of a gem. YAML aliases allow for Denial of Service attacks with so-called `YAML-bombs` (comparable to Billion laughs attacks). This was patched. There is is no action required by users. This issue is also tracked as GHSL-2024-001 and was discovered by the GitHub security lab.</description>
      <guid isPermaLink="false">CVE-2024-35221|2024-08-02T03:07:46.784Z</guid>
      <pubDate>Wed, 29 May 2024 20:18:06 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for KNIME -- KNIME Server</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/knime/knime%20server.rss</link>
    <description>The latest CVEs for KNIME -- KNIME Server</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 21:21:39 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-44748|2024-08-03T14:01:31.162Z -- knime -- knime%20server
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-44748</link>
      <description>A directory traversal vulnerability in the ZIP archive extraction routines of KNIME Server since 4.3.0 can result in arbitrary files being overwritten on the server's file system. This vulnerability is also known as 'Zip-Slip'.





An attacker can create a KNIME workflow that, when being uploaded, can overwrite arbitrary files that the operating system user running the KNIME Server process has write access to. The user must be authenticated and have permissions to upload files to KNIME Server.


This can impact data integrity (file contents are changed) or cause errors in other software (vital files being corrupted). It can even lead to remote code execution if executable files are being replaced and subsequently executed by the KNIME Server process user. In all cases the attacker has to know the location of files on the server's file system, though.

Note that users that have permissions to upload workflows usually also have permissions to run them on the KNIME Server and can therefore already execute arbitrary code in the context of the KNIME Executor's operating system user.

There is no workaround to prevent this vulnerability from being exploited. Updates to fixed versions 4.13.6, 4.14.3, or 4.15.3 are advised.


</description>
      <guid isPermaLink="false">CVE-2022-44748|2024-08-03T14:01:31.162Z</guid>
      <pubDate>Thu, 24 Nov 2022 06:36:23 +0000</pubDate>
    </item>
  </channel>
</rss>

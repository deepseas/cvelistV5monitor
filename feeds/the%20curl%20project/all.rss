<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for The curl Project -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/the%20curl%20project/all.rss</link>
    <description>The latest CVEs for The curl Project -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Tue, 06 Aug 2024 06:24:41 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2016-8618|2024-08-06T02:27:41.241Z -- the%20curl%20project -- curl
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-8618</link>
      <description>The libcurl API function called `curl_maprintf()` before version 7.51.0 can be tricked into doing a double-free due to an unsafe `size_t` multiplication, on systems using 32 bit `size_t` variables.</description>
      <guid isPermaLink="false">CVE-2016-8618|2024-08-06T02:27:41.241Z</guid>
      <pubDate>Tue, 31 Jul 2018 21:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2016-8617|2024-08-06T02:27:41.225Z -- the%20curl%20project -- curl
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-8617</link>
      <description>The base64 encode function in curl before version 7.51.0 is prone to a buffer being under allocated in 32bit systems if it receives at least 1Gb as input via `CURLOPT_USERNAME`.</description>
      <guid isPermaLink="false">CVE-2016-8617|2024-08-06T02:27:41.225Z</guid>
      <pubDate>Tue, 31 Jul 2018 22:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2016-8624|2024-08-06T02:27:41.205Z -- the%20curl%20project -- curl
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-8624</link>
      <description>curl before version 7.51.0 doesn't parse the authority component of the URL correctly when the host name part ends with a '#' character, and could instead be tricked into connecting to a different host. This may have security implications if you for example use an URL parser that follows the RFC to check for allowed domains before using curl to request them.</description>
      <guid isPermaLink="false">CVE-2016-8624|2024-08-06T02:27:41.205Z</guid>
      <pubDate>Tue, 31 Jul 2018 21:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2016-8616|2024-08-06T02:27:40.954Z -- the%20curl%20project -- curl
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-8616</link>
      <description>A flaw was found in curl before version 7.51.0 When re-using a connection, curl was doing case insensitive comparisons of user name and password with the existing connections. This means that if an unused connection with proper credentials exists for a protocol that has connection-scoped credentials, an attacker can cause that connection to be reused if s/he knows the case-insensitive version of the correct password.</description>
      <guid isPermaLink="false">CVE-2016-8616|2024-08-06T02:27:40.954Z</guid>
      <pubDate>Wed, 01 Aug 2018 06:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2016-8625|2024-08-06T02:27:41.183Z -- the%20curl%20project -- curl
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-8625</link>
      <description>curl before version 7.51.0 uses outdated IDNA 2003 standard to handle International Domain Names and this may lead users to potentially and unknowingly issue network transfer requests to the wrong host.</description>
      <guid isPermaLink="false">CVE-2016-8625|2024-08-06T02:27:41.183Z</guid>
      <pubDate>Wed, 01 Aug 2018 06:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2016-8615|2024-08-06T02:27:41.202Z -- the%20curl%20project -- curl
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-8615</link>
      <description>A flaw was found in curl before version 7.51. If cookie state is written into a cookie jar file that is later read back and used for subsequent requests, a malicious HTTP server can inject new cookies for arbitrary domains into said cookie jar.</description>
      <guid isPermaLink="false">CVE-2016-8615|2024-08-06T02:27:41.202Z</guid>
      <pubDate>Wed, 01 Aug 2018 06:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2016-8622|2024-08-06T02:27:40.993Z -- the%20curl%20project -- curl
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-8622</link>
      <description>The URL percent-encoding decode function in libcurl before 7.51.0 is called `curl_easy_unescape`. Internally, even if this function would be made to allocate a unscape destination buffer larger than 2GB, it would return that new length in a signed 32 bit integer variable, thus the length would get either just truncated or both truncated and turned negative. That could then lead to libcurl writing outside of its heap based buffer.</description>
      <guid isPermaLink="false">CVE-2016-8622|2024-08-06T02:27:40.993Z</guid>
      <pubDate>Tue, 31 Jul 2018 21:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2016-8620|2024-08-06T02:27:40.910Z -- the%20curl%20project -- curl
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-8620</link>
      <description>The 'globbing' feature in curl before version 7.51.0 has a flaw that leads to integer overflow and out-of-bounds read via user controlled input.</description>
      <guid isPermaLink="false">CVE-2016-8620|2024-08-06T02:27:40.910Z</guid>
      <pubDate>Wed, 01 Aug 2018 06:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2016-8621|2024-08-06T02:27:41.134Z -- the%20curl%20project -- curl
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-8621</link>
      <description>The `curl_getdate` function in curl before version 7.51.0 is vulnerable to an out of bounds read if it receives an input with one digit short.</description>
      <guid isPermaLink="false">CVE-2016-8621|2024-08-06T02:27:41.134Z</guid>
      <pubDate>Tue, 31 Jul 2018 22:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2016-8619|2024-08-06T02:27:40.965Z -- the%20curl%20project -- curl
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-8619</link>
      <description>The function `read_data()` in security.c in curl before version 7.51.0 is vulnerable to memory double free.</description>
      <guid isPermaLink="false">CVE-2016-8619|2024-08-06T02:27:40.965Z</guid>
      <pubDate>Wed, 01 Aug 2018 06:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2016-8623|2024-08-06T02:27:41.010Z -- the%20curl%20project -- curl
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-8623</link>
      <description>A flaw was found in curl before version 7.51.0. The way curl handles cookies permits other threads to trigger a use-after-free leading to information disclosure.</description>
      <guid isPermaLink="false">CVE-2016-8623|2024-08-06T02:27:41.010Z</guid>
      <pubDate>Wed, 01 Aug 2018 06:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>

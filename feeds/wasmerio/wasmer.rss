<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for wasmerio -- wasmer</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/wasmerio/wasmer.rss</link>
    <description>The latest CVEs for wasmerio -- wasmer</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 19 Jun 2024 20:21:33 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-38358|2024-06-19T19:55:26.111Z -- wasmerio -- wasmer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-38358</link>
      <description>Wasmer is a web assembly (wasm) Runtime supporting WASIX, WASI and Emscripten. If the preopened directory has a symlink pointing outside, WASI programs can traverse the symlink and access host filesystem if the caller sets both `oflags::creat` and `rights::fd_write`. Programs can also crash the runtime by creating a symlink pointing outside with `path_symlink` and `path_open`ing the link. This issue has been addressed in commit `b9483d022` which has been included in release version 4.3.2. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-38358|2024-06-19T19:55:26.111Z</guid>
      <pubDate>Wed, 19 Jun 2024 19:55:26 +0000</pubDate>
    </item>
  </channel>
</rss>

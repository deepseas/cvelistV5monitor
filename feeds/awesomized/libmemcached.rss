<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for awesomized -- libmemcached</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/awesomized/libmemcached.rss</link>
    <description>The latest CVEs for awesomized -- libmemcached</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 20:23:26 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-27478|2024-08-02T12:09:43.474Z -- awesomized -- libmemcached
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-27478</link>
      <description>libmemcached-awesome is an open source C/C++ client library and tools for the memcached server. `libmemcached` could return data for a previously requested key, if that previous request timed out due to a low `POLL_TIMEOUT`. This issue has been addressed in version 1.1.4. Users are advised to upgrade. There are several ways to workaround or lower the probability of this bug affecting a given deployment. 1: use a reasonably high `POLL_TIMEOUT` setting, like the default. 2: use separate libmemcached connections for unrelated data. 3: do not re-use libmemcached connections in an unknown state.</description>
      <guid isPermaLink="false">CVE-2023-27478|2024-08-02T12:09:43.474Z</guid>
      <pubDate>Tue, 07 Mar 2023 17:55:39 +0000</pubDate>
    </item>
  </channel>
</rss>

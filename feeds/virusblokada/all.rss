<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for VirusBlokAda -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/virusblokada/all.rss</link>
    <description>The latest CVEs for VirusBlokAda -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 12 Jun 2024 11:24:22 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-23439|2024-06-04T17:45:57.522Z -- virusblokada -- vba32%20antivirus
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-23439</link>
      <description>Vba32 Antivirus v3.36.0 is vulnerable to an Arbitrary Memory Read vulnerability by triggering the 0x22201B, 0x22201F, 0x222023, 0x222027 ,0x22202B, 0x22202F, 0x22203F, 0x222057 and 0x22205B IOCTL codes of the Vba32m64.sys driver.</description>
      <guid isPermaLink="false">CVE-2024-23439|2024-06-04T17:45:57.522Z</guid>
      <pubDate>Tue, 13 Feb 2024 14:58:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-23441|2024-01-29T16:06:17.742Z -- virusblokada -- vba32%20antivirus
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-23441</link>
      <description>Vba32 Antivirus v3.36.0 is vulnerable to a Denial of Service vulnerability by triggering the 0x2220A7 IOCTL code of the Vba32m64.sys driver.</description>
      <guid isPermaLink="false">CVE-2024-23441|2024-01-29T16:06:17.742Z</guid>
      <pubDate>Mon, 29 Jan 2024 16:06:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-23440|2024-06-04T17:45:46.784Z -- virusblokada -- vba32%20antivirus
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-23440</link>
      <description>Vba32 Antivirus v3.36.0 is vulnerable to an Arbitrary Memory Read vulnerability.Â The 0x22200B IOCTL code of the Vba32m64.sys driver allows to read up to 0x802 of memory from ar arbitrary user-supplied pointer.</description>
      <guid isPermaLink="false">CVE-2024-23440|2024-06-04T17:45:46.784Z</guid>
      <pubDate>Tue, 13 Feb 2024 15:01:12 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Google -- gRPC</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/google/grpc.rss</link>
    <description>The latest CVEs for Google -- gRPC</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 16:24:39 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-4785|2024-08-02T07:38:00.495Z -- google -- grpc
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-4785</link>
      <description>Lack of error handling in the TCP server in Google's gRPC starting version 1.23 on posix-compatible platforms (ex. Linux) allows an attacker to cause a denial of service by initiating a significant number of connections with the server. Note that gRPC C++ Python, and Ruby are affected, but gRPC Java, and Go are NOT affected. </description>
      <guid isPermaLink="false">CVE-2023-4785|2024-08-02T07:38:00.495Z</guid>
      <pubDate>Wed, 13 Sep 2023 16:31:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1428|2024-08-02T05:49:11.535Z -- google -- grpc
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-1428</link>
      <description>There exists an vulnerability causing an abort() to be called in gRPC. 
The following headers cause gRPC's C++ implementation to abort() when called via http2:

te: x (x != trailers)

:scheme: x (x != http, https)

grpclb_client_stats: x (x == anything)

On top of sending one of those headers, a later header must be sent that gets the total header size past 8KB. We recommend upgrading past git commit 2485fa94bd8a723e5c977d55a3ce10b301b437f8 or v1.53 and above.

</description>
      <guid isPermaLink="false">CVE-2023-1428|2024-08-02T05:49:11.535Z</guid>
      <pubDate>Fri, 09 Jun 2023 10:46:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-33953|2024-08-02T15:54:14.192Z -- google -- grpc
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-33953</link>
      <description>gRPC contains a vulnerability that allows hpack table accounting errors could lead to unwanted disconnects between clients and servers in exceptional cases/ Three vectors were found that allow the following DOS attacks:

- Unbounded memory buffering in the HPACK parser
- Unbounded CPU consumption in the HPACK parser

The unbounded CPU consumption is down to a copy that occurred per-input-block in the parser, and because that could be unbounded due to the memory copy bug we end up with an O(n^2) parsing loop, with n selected by the client.

The unbounded memory buffering bugs:

- The header size limit check was behind the string reading code, so we needed to first buffer up to a 4 gigabyte string before rejecting it as longer than 8 or 16kb.
- HPACK varints have an encoding quirk whereby an infinite number of 0’s can be added at the start of an integer. gRPC’s hpack parser needed to read all of them before concluding a parse.
- gRPC’s metadata overflow check was performed per frame, so that the following sequence of frames could cause infinite buffering: HEADERS: containing a: 1 CONTINUATION: containing a: 2 CONTINUATION: containing a: 3 etc…</description>
      <guid isPermaLink="false">CVE-2023-33953|2024-08-02T15:54:14.192Z</guid>
      <pubDate>Wed, 09 Aug 2023 12:54:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-32731|2024-08-02T15:25:37.017Z -- google -- grpc
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-32731</link>
      <description>When gRPC HTTP2 stack raised a header size exceeded error, it skipped parsing the rest of the HPACK frame. This caused any HPACK table mutations to also be skipped, resulting in a desynchronization of HPACK tables between sender and receiver. If leveraged, say, between a proxy and a backend, this could lead to requests from the proxy being interpreted as containing headers from different proxy clients - leading to an information leak that can be used for privilege escalation or data exfiltration. We recommend upgrading beyond the commit contained in  https://github.com/grpc/grpc/pull/33005 https://github.com/grpc/grpc/pull/33005 
</description>
      <guid isPermaLink="false">CVE-2023-32731|2024-08-02T15:25:37.017Z</guid>
      <pubDate>Fri, 09 Jun 2023 10:54:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-32732|2024-08-02T15:25:36.637Z -- google -- grpc
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-32732</link>
      <description>gRPC contains a vulnerability whereby a client can cause a termination of connection between a HTTP2 proxy and a gRPC server: a base64 encoding error for `-bin` suffixed headers will result in a disconnection by the gRPC server, but is typically allowed by HTTP2 proxies. We recommend upgrading beyond the commit in  https://github.com/grpc/grpc/pull/32309 https://www.google.com/url 
</description>
      <guid isPermaLink="false">CVE-2023-32732|2024-08-02T15:25:36.637Z</guid>
      <pubDate>Fri, 09 Jun 2023 10:48:15 +0000</pubDate>
    </item>
  </channel>
</rss>

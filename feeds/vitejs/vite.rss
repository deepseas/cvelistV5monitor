<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for vitejs -- vite</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/vitejs/vite.rss</link>
    <description>The latest CVEs for vitejs -- vite</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 23:21:34 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-49293|2024-08-02T21:53:44.657Z -- vitejs -- vite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-49293</link>
      <description>Vite is a website frontend framework. When Vite's HTML transformation is invoked manually via `server.transformIndexHtml`, the original request URL is passed in unmodified, and the `html` being transformed contains inline module scripts (`&lt;script type="module"&gt;...&lt;/script&gt;`), it is possible to inject arbitrary HTML into the transformed output by supplying a malicious URL query string to `server.transformIndexHtml`. Only apps using `appType: 'custom'` and using the default Vite HTML middleware are affected. The HTML entry must also contain an inline script. The attack requires a user to click on a malicious URL while running the dev server. Restricted files aren't exposed to the attacker. This issue has been addressed in vite@5.0.5, vite@4.5.1, and vite@4.4.12. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-49293|2024-08-02T21:53:44.657Z</guid>
      <pubDate>Mon, 04 Dec 2023 23:03:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-34092|2024-08-02T16:01:53.638Z -- vitejs -- vite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-34092</link>
      <description>Vite provides frontend tooling. Prior to versions 2.9.16, 3.2.7, 4.0.5, 4.1.5, 4.2.3, and 4.3.9, Vite Server Options (`server.fs.deny`) can be bypassed using double forward-slash (//) allows any unauthenticated user to read file from the Vite root-path of the application including the default `fs.deny` settings (`['.env', '.env.*', '*.{crt,pem}']`). Only users explicitly exposing the Vite dev server to the network (using `--host` or `server.host` config option) are affected, and only files in the immediate Vite project root folder could be exposed. This issue is fixed in vite@4.3.9, vite@4.2.3, vite@4.1.5, vite@4.0.5, vite@3.2.7, and vite@2.9.16.</description>
      <guid isPermaLink="false">CVE-2023-34092|2024-08-02T16:01:53.638Z</guid>
      <pubDate>Thu, 01 Jun 2023 16:29:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31207|2024-08-02T01:46:04.483Z -- vitejs -- vite</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-31207</link>
      <description>Vite (French word for "quick", pronounced /vit/, like "veet") is a frontend build tooling to improve the frontend development experience.`server.fs.deny` does not deny requests for patterns with directories. This vulnerability has been patched in version(s) 5.2.6, 5.1.7, 5.0.13, 4.5.3, 3.2.10 and 2.9.18.</description>
      <guid isPermaLink="false">CVE-2024-31207|2024-08-02T01:46:04.483Z</guid>
      <pubDate>Thu, 04 Apr 2024 15:51:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31207|2024-06-04T17:36:11.128Z -- vitejs -- vite</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-31207</link>
      <description>Vite (French word for "quick", pronounced /vit/, like "veet") is a frontend build tooling to improve the frontend development experience.`server.fs.deny` does not deny requests for patterns with directories. This vulnerability has been patched in version(s) 5.2.6, 5.1.7, 5.0.13, 4.5.3, 3.2.10 and 2.9.18.</description>
      <guid isPermaLink="false">CVE-2024-31207|2024-06-04T17:36:11.128Z</guid>
      <pubDate>Thu, 04 Apr 2024 15:51:54 +0000</pubDate>
    </item>
  </channel>
</rss>

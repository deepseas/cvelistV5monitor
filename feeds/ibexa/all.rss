<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for ibexa -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/ibexa/all.rss</link>
    <description>The latest CVEs for ibexa -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 16 Aug 2024 15:22:36 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-43369|2024-08-16T14:05:43.757Z -- ibexa -- fieldtype-richtext
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-43369</link>
      <description>Ibexa RichText Field Type is a Field Type for supporting rich formatted text stored in a structured XML format. In versions on the 4.6 branch prior to 4.6.10, the validator for the RichText fieldtype blocklists `javascript:` and `vbscript:` in links to prevent XSS. This can leave other options open, and the check can be circumvented using upper case. Content editing permissions for RichText content is required to exploit this vulnerability, which typically means Editor role or higher. The fix implements an allowlist instead, which allows only approved link protocols. The new check is case insensitive. Version 4.6.10 contains a patch for this issue. No known workarounds are available.</description>
      <guid isPermaLink="false">CVE-2024-43369|2024-08-16T14:05:43.757Z</guid>
      <pubDate>Thu, 15 Aug 2024 23:17:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-39318|2024-07-31T15:38:48.237Z -- ibexa -- admin-ui</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-39318</link>
      <description>The Ibexa Admin UI Bundle contains all the necessary parts to run the Ibexa DXP Back Office interface. The file upload widget is vulnerable to XSS payloads in filenames. Access permission to upload files is required. As such, in most cases only authenticated editors and administrators will have the required permission. It is not persistent, i.e. the payload is only executed during the upload. In effect, an attacker will have to trick an editor/administrator into uploading a strangely named file.</description>
      <guid isPermaLink="false">CVE-2024-39318|2024-07-31T15:38:48.237Z</guid>
      <pubDate>Wed, 31 Jul 2024 15:38:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-39318|2024-08-01T19:44:20.703Z -- ibexa -- admin-ui</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-39318</link>
      <description>The Ibexa Admin UI Bundle contains all the necessary parts to run the Ibexa DXP Back Office interface. The file upload widget is vulnerable to XSS payloads in filenames. Access permission to upload files is required. As such, in most cases only authenticated editors and administrators will have the required permission. It is not persistent, i.e. the payload is only executed during the upload. In effect, an attacker will have to trick an editor/administrator into uploading a strangely named file.</description>
      <guid isPermaLink="false">CVE-2024-39318|2024-08-01T19:44:20.703Z</guid>
      <pubDate>Wed, 31 Jul 2024 15:38:48 +0000</pubDate>
    </item>
  </channel>
</rss>

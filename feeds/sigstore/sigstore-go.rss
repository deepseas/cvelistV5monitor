<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for sigstore -- sigstore-go</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/sigstore/sigstore-go.rss</link>
    <description>The latest CVEs for sigstore -- sigstore-go</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Thu, 05 Sep 2024 15:23:38 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-45395|2024-09-05T14:25:27.922Z -- sigstore -- sigstore-go
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-45395</link>
      <description>sigstore-go, a Go library for Sigstore signing and verification, is susceptible to a denial of service attack in versions prior to 0.6.1 when a verifier is provided a maliciously crafted Sigstore Bundle containing large amounts of verifiable data, in the form of signed transparency log entries, RFC 3161 timestamps, and attestation subjects. The verification of these data structures is computationally expensive. This can be used to consume excessive CPU resources, leading to a denial of service attack. TUF's security model labels this type of vulnerability an "Endless data attack," and can lead to verification failing to complete and disrupting services that rely on sigstore-go for verification. This vulnerability is addressed with sigstore-go 0.6.1, which adds hard limits to the number of verifiable data structures that can be processed in a bundle. Verification will fail if a bundle has data that exceeds these limits. The limits are 32 signed transparency log entries, 32 RFC 3161 timestamps, 1024 attestation subjects, and 32 digests per attestation subject. These limits are intended to be high enough to accommodate the vast majority of use cases, while preventing the verification of maliciously crafted bundles that contain large amounts of verifiable data. Users who are vulnerable but unable to quickly upgrade may consider adding manual bundle validation to enforce limits similar to those in the referenced patch prior to calling sigstore-go's verification functions.</description>
      <guid isPermaLink="false">CVE-2024-45395|2024-09-05T14:25:27.922Z</guid>
      <pubDate>Wed, 04 Sep 2024 20:15:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-45395|2024-09-04T20:15:08.769Z -- sigstore -- sigstore-go</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-45395</link>
      <description>sigstore-go, a Go library for Sigstore signing and verification, is susceptible to a denial of service attack in versions prior to 0.6.1 when a verifier is provided a maliciously crafted Sigstore Bundle containing large amounts of verifiable data, in the form of signed transparency log entries, RFC 3161 timestamps, and attestation subjects. The verification of these data structures is computationally expensive. This can be used to consume excessive CPU resources, leading to a denial of service attack. TUF's security model labels this type of vulnerability an "Endless data attack," and can lead to verification failing to complete and disrupting services that rely on sigstore-go for verification. This vulnerability is addressed with sigstore-go 0.6.1, which adds hard limits to the number of verifiable data structures that can be processed in a bundle. Verification will fail if a bundle has data that exceeds these limits. The limits are 32 signed transparency log entries, 32 RFC 3161 timestamps, 1024 attestation subjects, and 32 digests per attestation subject. These limits are intended to be high enough to accommodate the vast majority of use cases, while preventing the verification of maliciously crafted bundles that contain large amounts of verifiable data. Users who are vulnerable but unable to quickly upgrade may consider adding manual bundle validation to enforce limits similar to those in the referenced patch prior to calling sigstore-go's verification functions.</description>
      <guid isPermaLink="false">CVE-2024-45395|2024-09-04T20:15:08.769Z</guid>
      <pubDate>Wed, 04 Sep 2024 20:15:08 +0000</pubDate>
    </item>
  </channel>
</rss>

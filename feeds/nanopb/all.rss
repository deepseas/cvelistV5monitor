<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for nanopb -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/nanopb/all.rss</link>
    <description>The latest CVEs for nanopb -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 23:23:13 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2021-21401|2024-08-03T18:09:16.087Z -- nanopb -- nanopb
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-21401</link>
      <description>Nanopb is a small code-size Protocol Buffers implementation in ansi C. In Nanopb before versions 0.3.9.8 and 0.4.5, decoding a specifically formed message can cause invalid `free()` or `realloc()` calls if the message type contains an `oneof` field, and the `oneof` directly contains both a pointer field and a non-pointer field. If the message data first contains the non-pointer field and then the pointer field, the data of the non-pointer field is incorrectly treated as if it was a pointer value. Such message data rarely occurs in normal messages, but it is a concern when untrusted data is parsed. This has been fixed in versions 0.3.9.8 and 0.4.5. See referenced GitHub Security Advisory for more information including workarounds.</description>
      <guid isPermaLink="false">CVE-2021-21401|2024-08-03T18:09:16.087Z</guid>
      <pubDate>Tue, 23 Mar 2021 17:45:19 +0000</pubDate>
    </item>
  </channel>
</rss>

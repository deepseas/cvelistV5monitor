<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for nanopb -- nanopb</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/nanopb/nanopb.rss</link>
    <description>The latest CVEs for nanopb -- nanopb</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 12:25:49 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2020-5235|2024-08-04T08:22:09.040Z -- nanopb -- nanopb
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-5235</link>
      <description>There is a potentially exploitable out of memory condition In Nanopb before 0.4.1, 0.3.9.5, and 0.2.9.4. When nanopb is compiled with PB_ENABLE_MALLOC, the message to be decoded contains a repeated string, bytes or message field and realloc() runs out of memory when expanding the array nanopb can end up calling `free()` on a pointer value that comes from uninitialized memory. Depending on platform this can result in a crash or further memory corruption, which may be exploitable in some cases. This problem is fixed in nanopb-0.4.1, nanopb-0.3.9.5, nanopb-0.2.9.4.</description>
      <guid isPermaLink="false">CVE-2020-5235|2024-08-04T08:22:09.040Z</guid>
      <pubDate>Tue, 04 Feb 2020 03:00:18 +0000</pubDate>
    </item>
  </channel>
</rss>

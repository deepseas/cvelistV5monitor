<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>CVE Feed for gradio-app -- gradio-app/gradio</title><link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/gradio-app/gradio-app%2Fgradio.rss</link><description>The latest CVEs for gradio-app -- gradio-app/gradio</description><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><lastBuildDate>Wed, 29 May 2024 23:21:25 +0000</lastBuildDate><ttl>60</ttl><item><title>CVE-2024-1540|2024-04-16T11:10:23.577Z -- gradio-app -- gradio-app/gradio</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1540</link><description>A command injection vulnerability exists in the deploy+test-visual.yml workflow of the gradio-app/gradio repository, due to improper neutralization of special elements used in a command. This vulnerability allows attackers to execute unauthorized commands, potentially leading to unauthorized modification of the base repository or secrets exfiltration. The issue arises from the unsafe handling of GitHub context information within a `run` operation, where expressions inside `${{ }}` are evaluated and substituted before script execution. Remediation involves setting untrusted input values to intermediate environment variables to prevent direct influence on script generation.</description><guid isPermaLink="false">CVE-2024-1540|2024-04-16T11:10:23.577Z</guid><pubDate>Wed, 27 Mar 2024 15:54:27 +0000</pubDate></item><item><title>CVE-2024-1561|2024-04-16T00:00:15.906Z -- gradio-app -- gradio-app/gradio</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1561</link><description>An issue was discovered in gradio-app/gradio, where the `/component_server` endpoint improperly allows the invocation of any method on a `Component` class with attacker-controlled arguments. Specifically, by exploiting the `move_resource_to_block_cache()` method of the `Block` class, an attacker can copy any file on the filesystem to a temporary directory and subsequently retrieve it. This vulnerability enables unauthorized local file read access, posing a significant risk especially when the application is exposed to the internet via `launch(share=True)`, thereby allowing remote attackers to read files on the host machine. Furthermore, gradio apps hosted on `huggingface.co` are also affected, potentially leading to the exposure of sensitive information such as API keys and credentials stored in environment variables.</description><guid isPermaLink="false">CVE-2024-1561|2024-04-16T00:00:15.906Z</guid><pubDate>Tue, 16 Apr 2024 00:00:15 +0000</pubDate></item><item><title>CVE-2024-1183|2024-04-16T11:10:55.212Z -- gradio-app -- gradio-app/gradio</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1183</link><description>An SSRF (Server-Side Request Forgery) vulnerability exists in the gradio-app/gradio repository, allowing attackers to scan and identify open ports within an internal network. By manipulating the 'file' parameter in a GET request, an attacker can discern the status of internal ports based on the presence of a 'Location' header or a 'File not allowed' error in the response.</description><guid isPermaLink="false">CVE-2024-1183|2024-04-16T11:10:55.212Z</guid><pubDate>Tue, 16 Apr 2024 00:00:14 +0000</pubDate></item><item><title>CVE-2024-1727|2024-04-16T11:10:19.322Z -- gradio-app -- gradio-app/gradio</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1727</link><description>A Cross-Site Request Forgery (CSRF) vulnerability in gradio-app/gradio allows attackers to upload multiple large files to a victim's system if they are running Gradio locally. By crafting a malicious HTML page that triggers an unauthorized file upload to the victim's server, an attacker can deplete the system's disk space, potentially leading to a denial of service. This issue affects the file upload functionality as implemented in gradio/routes.py.</description><guid isPermaLink="false">CVE-2024-1727|2024-04-16T11:10:19.322Z</guid><pubDate>Thu, 21 Mar 2024 19:57:39 +0000</pubDate></item><item><title>CVE-2024-1728|2024-04-16T11:10:26.994Z -- gradio-app -- gradio-app/gradio</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1728</link><description>gradio-app/gradio is vulnerable to a local file inclusion vulnerability due to improper validation of user-supplied input in the UploadButton component. Attackers can exploit this vulnerability to read arbitrary files on the filesystem, such as private SSH keys, by manipulating the file path in the request to the `/queue/join` endpoint. This issue could potentially lead to remote code execution. The vulnerability is present in the handling of file upload paths, allowing attackers to redirect file uploads to unintended locations on the server.</description><guid isPermaLink="false">CVE-2024-1728|2024-04-16T11:10:26.994Z</guid><pubDate>Wed, 10 Apr 2024 17:07:56 +0000</pubDate></item><item><title>CVE-2024-1729|2024-04-16T11:10:24.181Z -- gradio-app -- gradio-app/gradio</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1729</link><description>A timing attack vulnerability exists in the gradio-app/gradio repository, specifically within the login function in routes.py. The vulnerability arises from the use of a direct comparison operation (`app.auth[username] == password`) to validate user credentials, which can be exploited to guess passwords based on response times. Successful exploitation of this vulnerability could allow an attacker to bypass authentication mechanisms and gain unauthorized access.</description><guid isPermaLink="false">CVE-2024-1729|2024-04-16T11:10:24.181Z</guid><pubDate>Fri, 29 Mar 2024 04:35:12 +0000</pubDate></item><item><title>CVE-2024-0964|2024-02-05T22:53:44.859Z -- gradio-app -- gradio-app/gradio</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0964</link><description>A local file include could be remotely triggered in Gradio due to a vulnerable user-supplied JSON value in an API request.</description><guid isPermaLink="false">CVE-2024-0964|2024-02-05T22:53:44.859Z</guid><pubDate>Mon, 05 Feb 2024 22:53:44 +0000</pubDate></item><item><title>CVE-2024-2206|2024-04-16T11:10:22.483Z -- gradio-app -- gradio-app/gradio</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2206</link><description>An SSRF vulnerability exists in the gradio-app/gradio due to insufficient validation of user-supplied URLs in the `/proxy` route. Attackers can exploit this vulnerability by manipulating the `self.replica_urls` set through the `X-Direct-Url` header in requests to the `/` and `/config` routes, allowing the addition of arbitrary URLs for proxying. This flaw enables unauthorized proxying of requests and potential access to internal endpoints within the Hugging Face space. The issue arises from the application's inadequate checking of safe URLs in the `build_proxy_request` function.</description><guid isPermaLink="false">CVE-2024-2206|2024-04-16T11:10:22.483Z</guid><pubDate>Wed, 27 Mar 2024 00:00:32 +0000</pubDate></item></channel></rss>
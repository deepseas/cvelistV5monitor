<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for gradio-app -- gradio-app/gradio</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/gradio-app/gradio-app%2Fgradio.rss</link>
    <description>The latest CVEs for gradio-app -- gradio-app/gradio</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Thu, 06 Jun 2024 21:21:35 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-4325|2024-06-06T17:55:29.815Z -- gradio-app -- gradio-app%2Fgradio</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4325</link>
      <description>A Server-Side Request Forgery (SSRF) vulnerability exists in the gradio-app/gradio version 4.21.0, specifically within the `/queue/join` endpoint and the `save_url_to_cache` function. The vulnerability arises when the `path` value, obtained from the user and expected to be a URL, is used to make an HTTP request without sufficient validation checks. This flaw allows an attacker to send crafted requests that could lead to unauthorized access to the local network or the AWS metadata endpoint, thereby compromising the security of internal servers.</description>
      <guid isPermaLink="false">CVE-2024-4325|2024-06-06T17:55:29.815Z</guid>
      <pubDate>Thu, 06 Jun 2024 17:55:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4253|2024-06-05T20:00:07.427Z -- gradio-app -- gradio-app%2Fgradio</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4253</link>
      <description>A command injection vulnerability exists in the gradio-app/gradio repository, specifically within the 'test-functional.yml' workflow. The vulnerability arises due to improper neutralization of special elements used in a command, allowing for unauthorized modification of the base repository or secrets exfiltration. The issue affects versions up to and including '@gradio/video@0.6.12'. The flaw is present in the workflow's handling of GitHub context information, where it echoes the full name of the head repository, the head branch, and the workflow reference without adequate sanitization. This could potentially lead to the exfiltration of sensitive secrets such as 'GITHUB_TOKEN', 'COMMENT_TOKEN', and 'CHROMATIC_PROJECT_TOKEN'.</description>
      <guid isPermaLink="false">CVE-2024-4253|2024-06-05T20:00:07.427Z</guid>
      <pubDate>Tue, 04 Jun 2024 07:30:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4254|2024-06-04T12:01:37.541Z -- gradio-app -- gradio-app%2Fgradio</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4254</link>
      <description>The 'deploy-website.yml' workflow in the gradio-app/gradio repository, specifically in the 'main' branch, is vulnerable to secrets exfiltration due to improper authorization. The vulnerability arises from the workflow's explicit checkout and execution of code from a fork, which is unsafe as it allows the running of untrusted code in an environment with access to push to the base repository and access secrets. This flaw could lead to the exfiltration of sensitive secrets such as GITHUB_TOKEN, HF_TOKEN, VERCEL_ORG_ID, VERCEL_PROJECT_ID, COMMENT_TOKEN, AWSACCESSKEYID, AWSSECRETKEY, and VERCEL_TOKEN. The vulnerability is present in the workflow file located at https://github.com/gradio-app/gradio/blob/72f4ca88ab569aae47941b3fb0609e57f2e13a27/.github/workflows/deploy-website.yml.</description>
      <guid isPermaLink="false">CVE-2024-4254|2024-06-04T12:01:37.541Z</guid>
      <pubDate>Tue, 04 Jun 2024 12:01:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2206|2024-04-16T11:10:22.483Z -- gradio-app -- gradio-app%2Fgradio</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2206</link>
      <description>An SSRF vulnerability exists in the gradio-app/gradio due to insufficient validation of user-supplied URLs in the `/proxy` route. Attackers can exploit this vulnerability by manipulating the `self.replica_urls` set through the `X-Direct-Url` header in requests to the `/` and `/config` routes, allowing the addition of arbitrary URLs for proxying. This flaw enables unauthorized proxying of requests and potential access to internal endpoints within the Hugging Face space. The issue arises from the application's inadequate checking of safe URLs in the `build_proxy_request` function.</description>
      <guid isPermaLink="false">CVE-2024-2206|2024-04-16T11:10:22.483Z</guid>
      <pubDate>Wed, 27 Mar 2024 00:00:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4253|2024-06-05T19:38:53.530Z -- gradio-app -- gradio-app%2Fgradio</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4253</link>
      <description>A command injection vulnerability exists in the gradio-app/gradio repository, specifically within the 'test-functional.yml' workflow. The vulnerability arises due to improper neutralization of special elements used in a command, allowing for unauthorized modification of the base repository or secrets exfiltration. The issue affects versions up to and including '@gradio/video@0.6.12'. The flaw is present in the workflow's handling of GitHub context information, where it echoes the full name of the head repository, the head branch, and the workflow reference without adequate sanitization. This could potentially lead to the exfiltration of sensitive secrets such as 'GITHUB_TOKEN', 'COMMENT_TOKEN', and 'CHROMATIC_PROJECT_TOKEN'.</description>
      <guid isPermaLink="false">CVE-2024-4253|2024-06-05T19:38:53.530Z</guid>
      <pubDate>Tue, 04 Jun 2024 07:30:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4941|2024-06-06T17:55:11.754Z -- gradio-app -- gradio-app%2Fgradio</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4941</link>
      <description>A local file inclusion vulnerability exists in the JSON component of gradio-app/gradio version 4.25. The vulnerability arises from improper input validation in the `postprocess()` function within `gradio/components/json_component.py`, where a user-controlled string is parsed as JSON. If the parsed JSON object contains a `path` key, the specified file is moved to a temporary directory, making it possible to retrieve it later via the `/file=..` endpoint. This issue is due to the `processing_utils.move_files_to_cache()` function traversing any object passed to it, looking for a dictionary with a `path` key, and then copying the specified file to a temporary directory. The vulnerability can be exploited by an attacker to read files on the remote system, posing a significant security risk.</description>
      <guid isPermaLink="false">CVE-2024-4941|2024-06-06T17:55:11.754Z</guid>
      <pubDate>Thu, 06 Jun 2024 17:55:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4325|2024-06-06T19:34:17.024Z -- gradio-app -- gradio-app%2Fgradio</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4325</link>
      <description>A Server-Side Request Forgery (SSRF) vulnerability exists in the gradio-app/gradio version 4.21.0, specifically within the `/queue/join` endpoint and the `save_url_to_cache` function. The vulnerability arises when the `path` value, obtained from the user and expected to be a URL, is used to make an HTTP request without sufficient validation checks. This flaw allows an attacker to send crafted requests that could lead to unauthorized access to the local network or the AWS metadata endpoint, thereby compromising the security of internal servers.</description>
      <guid isPermaLink="false">CVE-2024-4325|2024-06-06T19:34:17.024Z</guid>
      <pubDate>Thu, 06 Jun 2024 17:55:29 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for wpwhitesecurity -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/wpwhitesecurity/all.rss</link>
    <description>The latest CVEs for wpwhitesecurity -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 12 Jun 2024 11:24:18 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-2286|2023-06-09T12:32:00.696Z -- wpwhitesecurity -- wp%20activity%20log
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2286</link>
      <description>The WP Activity Log for WordPress is vulnerable to Cross-Site Request Forgery in versions up to, and including, 4.5.0. This is due to missing or incorrect nonce validation on the ajax_run_cleanup function. This makes it possible for unauthenticated attackers to invoke this function via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description>
      <guid isPermaLink="false">CVE-2023-2286|2023-06-09T12:32:00.696Z</guid>
      <pubDate>Fri, 09 Jun 2023 12:32:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2284|2023-06-09T12:32:00.238Z -- wpwhitesecurity -- wp%20activity%20log%20premium
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2284</link>
      <description>The WP Activity Log Premium plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the ajax_switch_db function in versions up to, and including, 4.5.0. This makes it possible for authenticated attackers with subscriber-level or higher to make changes to the plugin's settings.</description>
      <guid isPermaLink="false">CVE-2023-2284|2023-06-09T12:32:00.238Z</guid>
      <pubDate>Fri, 09 Jun 2023 12:32:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2285|2023-06-09T12:31:59.732Z -- wpwhitesecurity -- wp%20activity%20log%20premium
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2285</link>
      <description>The WP Activity Log Premium plugin for WordPress is vulnerable to Cross-Site Request Forgery in versions up to, and including, 4.5.0. This is due to missing or incorrect nonce validation on the ajax_switch_db function. This makes it possible for unauthenticated attackers to make changes to the plugin's settings via a forged request granted they can trick a site administrator into performing an action such as clicking on a link.</description>
      <guid isPermaLink="false">CVE-2023-2285|2023-06-09T12:31:59.732Z</guid>
      <pubDate>Fri, 09 Jun 2023 12:31:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2261|2023-06-09T12:32:01.124Z -- wpwhitesecurity -- wp%20activity%20log
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2261</link>
      <description>The WP Activity Log plugin for WordPress is vulnerable to authorization bypass due to a missing capability check on the handle_ajax_call function in versions up to, and including, 4.5.0. This makes it possible for authenticated attackers, with subscriber-level access or higher, to obtain a list of users with accounts on the site. This includes ids, usernames and emails.</description>
      <guid isPermaLink="false">CVE-2023-2261|2023-06-09T12:32:01.124Z</guid>
      <pubDate>Fri, 09 Jun 2023 12:32:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2018|2024-06-06T13:35:45.997Z -- wpwhitesecurity -- wp%20activity%20log%20premium
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2018</link>
      <description>The WP Activity Log Premium plugin for WordPress is vulnerable to SQL Injection via the entry-&gt;roles parameter in all versions up to, and including, 4.6.4 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers with subscriber privileges to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database. One demonstrated attack included the injection of a PHP Object.</description>
      <guid isPermaLink="false">CVE-2024-2018|2024-06-06T13:35:45.997Z</guid>
      <pubDate>Tue, 09 Apr 2024 18:58:42 +0000</pubDate>
    </item>
  </channel>
</rss>

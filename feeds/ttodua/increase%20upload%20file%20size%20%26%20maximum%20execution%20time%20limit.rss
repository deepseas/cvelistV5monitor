<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for ttodua -- Increase upload file size &amp; Maximum Execution Time limit</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/ttodua/increase%20upload%20file%20size%20%26%20maximum%20execution%20time%20limit.rss</link>
    <description>The latest CVEs for ttodua -- Increase upload file size &amp; Maximum Execution Time limit</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 11 Oct 2024 14:23:09 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-9611|2024-10-11T13:44:49.522Z -- ttodua -- increase%20upload%20file%20size%20%26%20maximum%20execution%20time%20limit
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-9611</link>
      <description>The Increase upload file size &amp; Maximum Execution Time limit plugin for WordPress is vulnerable to Reflected Cross-Site Scripting due to the use of add_query_arg without appropriate escaping on the URL in all versions up to, and including, 2.0. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description>
      <guid isPermaLink="false">CVE-2024-9611|2024-10-11T13:44:49.522Z</guid>
      <pubDate>Fri, 11 Oct 2024 06:50:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-9611|2024-10-11T06:50:15.170Z -- ttodua -- increase%20upload%20file%20size%20%26%20maximum%20execution%20time%20limit</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-9611</link>
      <description>The Increase upload file size &amp; Maximum Execution Time limit plugin for WordPress is vulnerable to Reflected Cross-Site Scripting due to the use of add_query_arg without appropriate escaping on the URL in all versions up to, and including, 2.0. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description>
      <guid isPermaLink="false">CVE-2024-9611|2024-10-11T06:50:15.170Z</guid>
      <pubDate>Fri, 11 Oct 2024 06:50:15 +0000</pubDate>
    </item>
  </channel>
</rss>

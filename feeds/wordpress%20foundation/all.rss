<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for WordPress Foundation -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/wordpress%20foundation/all.rss</link>
    <description>The latest CVEs for WordPress Foundation -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 16 Oct 2024 13:25:04 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-4973|2024-10-16T12:59:35.321Z -- wordpress%20foundation -- wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4973</link>
      <description>WordPress Core, in versions up to 6.0.2, is vulnerable to Authenticated Stored Cross-Site Scripting that can be exploited by users with access to the WordPress post and page editor, typically consisting of Authors, Contributors, and Editors making it possible to inject arbitrary web scripts into posts and pages that execute if the the_meta(); function is called on that page.</description>
      <guid isPermaLink="false">CVE-2022-4973|2024-10-16T12:59:35.321Z</guid>
      <pubDate>Wed, 16 Oct 2024 06:43:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4439|2024-08-01T20:40:47.361Z -- wordpress%20foundation -- wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4439</link>
      <description>WordPress Core is vulnerable to Stored Cross-Site Scripting via user display names in the Avatar block in various versions up to 6.5.2 due to insufficient output escaping on the display name. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. In addition, it also makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that have the comment block present and display the comment author's avatar.</description>
      <guid isPermaLink="false">CVE-2024-4439|2024-08-01T20:40:47.361Z</guid>
      <pubDate>Fri, 03 May 2024 05:32:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6305|2024-06-25T13:04:14.874Z -- wordpress%20foundation -- wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6305</link>
      <description>WordPress Core is vulnerable to Stored Cross-Site Scripting via the Template Part Block in various versions up to 6.5.5 due to insufficient input sanitization and output escaping on the 'tagName' attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2024-6305|2024-06-25T13:04:14.874Z</guid>
      <pubDate>Tue, 25 Jun 2024 11:09:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4439|2024-06-04T17:54:08.655Z -- wordpress%20foundation -- wordpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4439</link>
      <description>WordPress Core is vulnerable to Stored Cross-Site Scripting via user display names in the Avatar block in various versions up to 6.5.2 due to insufficient output escaping on the display name. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. In addition, it also makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that have the comment block present and display the comment author's avatar.</description>
      <guid isPermaLink="false">CVE-2024-4439|2024-06-04T17:54:08.655Z</guid>
      <pubDate>Fri, 03 May 2024 05:32:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6306|2024-06-25T11:09:22.113Z -- wordpress%20foundation -- wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6306</link>
      <description>WordPress Core is vulnerable to Directory Traversal in various versions up to 6.5.5 via the Template Part block. This makes it possible for authenticated attackers, with Contributor-level access and above, to include arbitrary HTML Files on sites running Windows.</description>
      <guid isPermaLink="false">CVE-2024-6306|2024-06-25T11:09:22.113Z</guid>
      <pubDate>Tue, 25 Jun 2024 11:09:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6305|2024-06-25T11:09:21.240Z -- wordpress%20foundation -- wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6305</link>
      <description>WordPress Core is vulnerable to Stored Cross-Site Scripting via the Template Part Block in various versions up to 6.5.5 due to insufficient input sanitization and output escaping on the 'tagName' attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2024-6305|2024-06-25T11:09:21.240Z</guid>
      <pubDate>Tue, 25 Jun 2024 11:09:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6307|2024-06-25T11:09:23.005Z -- wordpress%20foundation -- wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6307</link>
      <description>WordPress Core is vulnerable to Stored Cross-Site Scripting via the HTML API in various versions up to 6.5.5 due to insufficient input sanitization and output escaping on URLs. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2024-6307|2024-06-25T11:09:23.005Z</guid>
      <pubDate>Tue, 25 Jun 2024 11:09:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6307|2024-06-28T12:28:10.199Z -- wordpress%20foundation -- wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6307</link>
      <description>WordPress Core is vulnerable to Stored Cross-Site Scripting via the HTML API in various versions prior to 6.5.5 due to insufficient input sanitization and output escaping on URLs. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2024-6307|2024-06-28T12:28:10.199Z</guid>
      <pubDate>Tue, 25 Jun 2024 11:09:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6307|2024-07-06T03:10:01.568Z -- wordpress%20foundation -- wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6307</link>
      <description>WordPress Core is vulnerable to Stored Cross-Site Scripting via the HTML API in various versions prior to 6.5.5 due to insufficient input sanitization and output escaping on URLs. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2024-6307|2024-07-06T03:10:01.568Z</guid>
      <pubDate>Tue, 25 Jun 2024 11:09:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6307|2024-08-01T21:33:05.534Z -- wordpress%20foundation -- wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6307</link>
      <description>WordPress Core is vulnerable to Stored Cross-Site Scripting via the HTML API in various versions prior to 6.5.5 due to insufficient input sanitization and output escaping on URLs. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2024-6307|2024-08-01T21:33:05.534Z</guid>
      <pubDate>Tue, 25 Jun 2024 11:09:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4973|2024-10-16T06:43:41.734Z -- wordpress%20foundation -- wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4973</link>
      <description>WordPress Core, in versions up to 6.0.2, is vulnerable to Authenticated Stored Cross-Site Scripting that can be exploited by users with access to the WordPress post and page editor, typically consisting of Authors, Contributors, and Editors making it possible to inject arbitrary web scripts into posts and pages that execute if the the_meta(); function is called on that page.</description>
      <guid isPermaLink="false">CVE-2022-4973|2024-10-16T06:43:41.734Z</guid>
      <pubDate>Wed, 16 Oct 2024 06:43:41 +0000</pubDate>
    </item>
  </channel>
</rss>

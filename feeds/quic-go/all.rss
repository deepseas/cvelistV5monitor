<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for quic-go -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/quic-go/all.rss</link>
    <description>The latest CVEs for quic-go -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 22:23:12 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-49295|2024-08-02T21:53:45.389Z -- quic-go -- quic-go
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-49295</link>
      <description>quic-go is an implementation of the QUIC protocol (RFC 9000, RFC 9001, RFC 9002) in Go. An attacker can cause its peer to run out of memory sending a large number of PATH_CHALLENGE frames. The receiver is supposed to respond to each PATH_CHALLENGE frame with a PATH_RESPONSE frame. The attacker can prevent the receiver from sending out (the vast majority of) these PATH_RESPONSE frames by collapsing the peers congestion window (by selectively acknowledging received packets) and by manipulating the peer's RTT estimate. This vulnerability has been patched in versions 0.37.7, 0.38.2 and 0.39.4.</description>
      <guid isPermaLink="false">CVE-2023-49295|2024-08-02T21:53:45.389Z</guid>
      <pubDate>Wed, 10 Jan 2024 21:40:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-46239|2024-08-02T20:37:40.330Z -- quic-go -- quic-go
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-46239</link>
      <description>quic-go is an implementation of the QUIC protocol in Go. Starting in version 0.37.0 and prior to version 0.37.3, by serializing an ACK frame after the CRYTPO that allows a node to complete the handshake, a remote node could trigger a nil pointer dereference (leading to a panic) when the node attempted to drop the Handshake packet number space. An attacker can bring down a quic-go node with very minimal effort. Completing the QUIC handshake only requires sending and receiving a few packets. Version 0.37.3 contains a patch. Versions before 0.37.0 are not affected.</description>
      <guid isPermaLink="false">CVE-2023-46239|2024-08-02T20:37:40.330Z</guid>
      <pubDate>Tue, 31 Oct 2023 15:02:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-22189|2024-08-01T22:35:34.903Z -- quic-go -- quic-go</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-22189</link>
      <description>quic-go is an implementation of the QUIC protocol in Go. Prior to version 0.42.0, an attacker can cause its peer to run out of memory sending a large number of `NEW_CONNECTION_ID` frames that retire old connection IDs. The receiver is supposed to respond to each retirement frame with a `RETIRE_CONNECTION_ID` frame. The attacker can prevent the receiver from sending out (the vast majority of) these `RETIRE_CONNECTION_ID` frames by collapsing the peers congestion window (by selectively acknowledging received packets) and by manipulating the peer's RTT estimate. Version 0.42.0 contains a patch for the issue. No known workarounds are available.</description>
      <guid isPermaLink="false">CVE-2024-22189|2024-08-01T22:35:34.903Z</guid>
      <pubDate>Thu, 04 Apr 2024 14:25:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-22189|2024-04-04T14:25:43.663Z -- quic-go -- quic-go</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-22189</link>
      <description>quic-go is an implementation of the QUIC protocol in Go. Prior to version 0.42.0, an attacker can cause its peer to run out of memory sending a large number of `NEW_CONNECTION_ID` frames that retire old connection IDs. The receiver is supposed to respond to each retirement frame with a `RETIRE_CONNECTION_ID` frame. The attacker can prevent the receiver from sending out (the vast majority of) these `RETIRE_CONNECTION_ID` frames by collapsing the peers congestion window (by selectively acknowledging received packets) and by manipulating the peer's RTT estimate. Version 0.42.0 contains a patch for the issue. No known workarounds are available.</description>
      <guid isPermaLink="false">CVE-2024-22189|2024-04-04T14:25:43.663Z</guid>
      <pubDate>Thu, 04 Apr 2024 14:25:43 +0000</pubDate>
    </item>
  </channel>
</rss>

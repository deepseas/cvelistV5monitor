<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for mermaid-js -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/mermaid-js/all.rss</link>
    <description>The latest CVEs for mermaid-js -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 12:25:50 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2021-43861|2024-08-04T04:10:17.137Z -- mermaid-js -- mermaid
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-43861</link>
      <description>Mermaid is a Javascript based diagramming and charting tool that uses Markdown-inspired text definitions and a renderer to create and modify complex diagrams. Prior to version 8.13.8, malicious diagrams can run javascript code at diagram readers' machines. Users should upgrade to version 8.13.8 to receive a patch. There are no known workarounds aside from upgrading.</description>
      <guid isPermaLink="false">CVE-2021-43861|2024-08-04T04:10:17.137Z</guid>
      <pubDate>Thu, 30 Dec 2021 13:40:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-38527|2024-08-02T04:12:25.179Z -- mermaid-js -- zenuml-core</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-38527</link>
      <description>ZenUML is JavaScript-based diagramming tool that requires no server, using Markdown-inspired text definitions and a renderer to create and modify sequence diagrams. Markdown-based comments in the ZenUML diagram syntax are susceptible to Cross-site Scripting (XSS). The comment feature allows the user to attach small notes for reference. This feature allows the user to enter in their comment in markdown comment, allowing them to use common markdown features, such as `**` for bolded text. However, the markdown text is currently not sanitized before rendering, allowing an attacker to enter a malicious payload for the comment which leads to XSS. This puts existing applications that use ZenUML unsandboxed at risk of arbitrary JavaScript execution when rendering user-controlled diagrams. This vulnerability was patched in version 3.23.25,</description>
      <guid isPermaLink="false">CVE-2024-38527|2024-08-02T04:12:25.179Z</guid>
      <pubDate>Wed, 26 Jun 2024 19:33:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-38527|2024-06-26T19:33:46.575Z -- mermaid-js -- zenuml-core</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-38527</link>
      <description>ZenUML is JavaScript-based diagramming tool that requires no server, using Markdown-inspired text definitions and a renderer to create and modify sequence diagrams. Markdown-based comments in the ZenUML diagram syntax are susceptible to Cross-site Scripting (XSS). The comment feature allows the user to attach small notes for reference. This feature allows the user to enter in their comment in markdown comment, allowing them to use common markdown features, such as `**` for bolded text. However, the markdown text is currently not sanitized before rendering, allowing an attacker to enter a malicious payload for the comment which leads to XSS. This puts existing applications that use ZenUML unsandboxed at risk of arbitrary JavaScript execution when rendering user-controlled diagrams. This vulnerability was patched in version 3.23.25,</description>
      <guid isPermaLink="false">CVE-2024-38527|2024-06-26T19:33:46.575Z</guid>
      <pubDate>Wed, 26 Jun 2024 19:33:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-38527|2024-06-27T19:04:37.531Z -- mermaid-js -- zenuml-core</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-38527</link>
      <description>ZenUML is JavaScript-based diagramming tool that requires no server, using Markdown-inspired text definitions and a renderer to create and modify sequence diagrams. Markdown-based comments in the ZenUML diagram syntax are susceptible to Cross-site Scripting (XSS). The comment feature allows the user to attach small notes for reference. This feature allows the user to enter in their comment in markdown comment, allowing them to use common markdown features, such as `**` for bolded text. However, the markdown text is currently not sanitized before rendering, allowing an attacker to enter a malicious payload for the comment which leads to XSS. This puts existing applications that use ZenUML unsandboxed at risk of arbitrary JavaScript execution when rendering user-controlled diagrams. This vulnerability was patched in version 3.23.25,</description>
      <guid isPermaLink="false">CVE-2024-38527|2024-06-27T19:04:37.531Z</guid>
      <pubDate>Wed, 26 Jun 2024 19:33:46 +0000</pubDate>
    </item>
  </channel>
</rss>

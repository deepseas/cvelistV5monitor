<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for composer -- composer</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/composer/composer.rss</link>
    <description>The latest CVEs for composer -- composer</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 23:23:02 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-24828|2024-08-03T04:20:50.547Z -- composer -- composer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-24828</link>
      <description>Composer is a dependency manager for the PHP programming language. Integrators using Composer code to call `VcsDriver::getFileContent` can have a code injection vulnerability if the user can control the `$file` or `$identifier` argument. This leads to a vulnerability on packagist.org for example where the composer.json's `readme` field can be used as a vector for injecting parameters into hg/Mercurial via the `$file` argument, or git via the `$identifier` argument if you allow arbitrary data there (Packagist does not, but maybe other integrators do). Composer itself should not be affected by the vulnerability as it does not call `getFileContent` with arbitrary data into `$file`/`$identifier`. To the best of our knowledge this was not abused, and the vulnerability has been patched on packagist.org and Private Packagist within a day of the vulnerability report.</description>
      <guid isPermaLink="false">CVE-2022-24828|2024-08-03T04:20:50.547Z</guid>
      <pubDate>Wed, 13 Apr 2022 21:00:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-29472|2024-08-03T22:11:05.384Z -- composer -- composer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-29472</link>
      <description>Composer is a dependency manager for PHP. URLs for Mercurial repositories in the root composer.json and package source download URLs are not sanitized correctly. Specifically crafted URL values allow code to be executed in the HgDriver if hg/Mercurial is installed on the system. The impact to Composer users directly is limited as the composer.json file is typically under their own control and source download URLs can only be supplied by third party Composer repositories they explicitly trust to download and execute source code from, e.g. Composer plugins. The main impact is to services passing user input to Composer, including Packagist.org and Private Packagist. This allowed users to trigger remote code execution. The vulnerability has been patched on Packagist.org and Private Packagist within 12h of receiving the initial vulnerability report and based on a review of logs, to the best of our knowledge, was not abused by anyone. Other services/tools using VcsRepository/VcsDriver or derivatives may also be vulnerable and should upgrade their composer/composer dependency immediately. Versions 1.10.22 and 2.0.13 include patches for this issue.</description>
      <guid isPermaLink="false">CVE-2021-29472|2024-08-03T22:11:05.384Z</guid>
      <pubDate>Tue, 27 Apr 2021 20:30:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-35242|2024-07-15T20:44:10.241Z -- composer -- composer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-35242</link>
      <description>Composer is a dependency manager for PHP. On the 2.x branch prior to versions 2.2.24 and 2.7.7, the `composer install` command running inside a git/hg repository which has specially crafted branch names can lead to command injection. This requires cloning untrusted repositories. Patches are available in version 2.2.24 for 2.2 LTS or 2.7.7 for mainline. As a workaround, avoid cloning potentially compromised repositories.</description>
      <guid isPermaLink="false">CVE-2024-35242|2024-07-15T20:44:10.241Z</guid>
      <pubDate>Mon, 10 Jun 2024 21:23:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-35241|2024-07-15T20:43:01.084Z -- composer -- composer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-35241</link>
      <description>Composer is a dependency manager for PHP. On the 2.x branch prior to versions 2.2.24 and 2.7.7, the `status`, `reinstall` and `remove` commands with packages installed from source via git containing specially crafted branch names in the repository can be used to execute code. Patches for this issue are available in version 2.2.24 for 2.2 LTS or 2.7.7 for mainline. As a workaround, avoid installing dependencies via git by using `--prefer-dist` or the `preferred-install: dist` config setting.</description>
      <guid isPermaLink="false">CVE-2024-35241|2024-07-15T20:43:01.084Z</guid>
      <pubDate>Mon, 10 Jun 2024 21:19:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-35242|2024-06-10T21:23:44.040Z -- composer -- composer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35242</link>
      <description>Composer is a dependency manager for PHP. On the 2.x branch prior to versions 2.2.24 and 2.7.7, the `composer install` command running inside a git/hg repository which has specially crafted branch names can lead to command injection. This requires cloning untrusted repositories. Patches are available in version 2.2.24 for 2.2 LTS or 2.7.7 for mainline. As a workaround, avoid cloning potentially compromised repositories.</description>
      <guid isPermaLink="false">CVE-2024-35242|2024-06-10T21:23:44.040Z</guid>
      <pubDate>Mon, 10 Jun 2024 21:23:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-35241|2024-06-10T21:19:47.123Z -- composer -- composer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35241</link>
      <description>Composer is a dependency manager for PHP. On the 2.x branch prior to versions 2.2.24 and 2.7.7, the `status`, `reinstall` and `remove` commands with packages installed from source via git containing specially crafted branch names in the repository can be used to execute code. Patches for this issue are available in version 2.2.24 for 2.2 LTS or 2.7.7 for mainline. As a workaround, avoid installing dependencies via git by using `--prefer-dist` or the `preferred-install: dist` config setting.</description>
      <guid isPermaLink="false">CVE-2024-35241|2024-06-10T21:19:47.123Z</guid>
      <pubDate>Mon, 10 Jun 2024 21:19:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24821|2024-02-08T23:54:04.058Z -- composer -- composer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-24821</link>
      <description>Composer is a dependency Manager for the PHP language. In affected versions several files within the local working directory are included during the invocation of Composer and in the context of the executing user. As such, under certain conditions arbitrary code execution may lead to local privilege escalation, provide lateral user movement or malicious code execution when Composer is invoked within a directory with tampered files. All Composer CLI commands are affected, including composer.phar's self-update. The following scenarios are of high risk: Composer being run with sudo, Pipelines which may execute Composer on untrusted projects, Shared environments with developers who run Composer individually on the same project. This vulnerability has been addressed in versions 2.7.0 and 2.2.23. It is advised that the patched versions are applied at the earliest convenience. Where not possible, the following should be addressed: Remove all sudo composer privileges for all users to mitigate root privilege escalation, and avoid running Composer within an untrusted directory, or if needed, verify that the contents of `vendor/composer/InstalledVersions.php` and `vendor/composer/installed.php` do not include untrusted code.  A reset can also be done on these files by the following:```sh
rm vendor/composer/installed.php vendor/composer/InstalledVersions.php
composer install --no-scripts --no-plugins
```</description>
      <guid isPermaLink="false">CVE-2024-24821|2024-02-08T23:54:04.058Z</guid>
      <pubDate>Thu, 08 Feb 2024 23:54:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-35242|2024-08-02T03:07:46.921Z -- composer -- composer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-35242</link>
      <description>Composer is a dependency manager for PHP. On the 2.x branch prior to versions 2.2.24 and 2.7.7, the `composer install` command running inside a git/hg repository which has specially crafted branch names can lead to command injection. This requires cloning untrusted repositories. Patches are available in version 2.2.24 for 2.2 LTS or 2.7.7 for mainline. As a workaround, avoid cloning potentially compromised repositories.</description>
      <guid isPermaLink="false">CVE-2024-35242|2024-08-02T03:07:46.921Z</guid>
      <pubDate>Mon, 10 Jun 2024 21:23:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-35241|2024-08-02T03:07:46.823Z -- composer -- composer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-35241</link>
      <description>Composer is a dependency manager for PHP. On the 2.x branch prior to versions 2.2.24 and 2.7.7, the `status`, `reinstall` and `remove` commands with packages installed from source via git containing specially crafted branch names in the repository can be used to execute code. Patches for this issue are available in version 2.2.24 for 2.2 LTS or 2.7.7 for mainline. As a workaround, avoid installing dependencies via git by using `--prefer-dist` or the `preferred-install: dist` config setting.</description>
      <guid isPermaLink="false">CVE-2024-35241|2024-08-02T03:07:46.823Z</guid>
      <pubDate>Mon, 10 Jun 2024 21:19:47 +0000</pubDate>
    </item>
  </channel>
</rss>

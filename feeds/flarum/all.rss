<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for flarum -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/flarum/all.rss</link>
    <description>The latest CVEs for flarum -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 20:22:17 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-41938|2024-08-03T12:56:38.524Z -- flarum -- framework
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-41938</link>
      <description>Flarum is an open source discussion platform. Flarum's page title system allowed for page titles to be converted into HTML DOM nodes when pages were rendered. The change was made after `v1.5` and was not noticed. This allowed an attacker to inject malicious HTML markup using a discussion title input, either by creating a new discussion or renaming one. The XSS attack occurs after a visitor opens the relevant discussion page. All communities running Flarum from `v1.5.0` to `v1.6.1` are impacted. The vulnerability has been fixed and published as flarum/core `v1.6.2`. All communities running Flarum from `v1.5.0` to `v1.6.1` have to upgrade as soon as possible to v1.6.2. There are no known workarounds for this issue.</description>
      <guid isPermaLink="false">CVE-2022-41938|2024-08-03T12:56:38.524Z</guid>
      <pubDate>Sat, 19 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-21283|2024-08-03T18:09:15.180Z -- flarum -- sticky
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-21283</link>
      <description>Flarum is an open source discussion platform for websites. The "Flarum Sticky" extension versions 0.1.0-beta.14 and 0.1.0-beta.15 has a cross-site scripting vulnerability. A change in release beta 14 of the Sticky extension caused the plain text content of the first post of a pinned discussion to be injected as HTML on the discussion list. The issue was discovered following an internal audit. Any HTML would be injected through the m.trust() helper. This resulted in an HTML injection where &lt;script&gt; tags would not be executed. However it was possible to run javascript from other HTML attributes, enabling a cross-site scripting (XSS) attack to be performed. Since the exploit only happens with the first post of a pinned discussion, an attacker would need the ability to pin their own discussion, or be able to edit a discussion that was previously pinned. On forums where all pinned posts are authored by your staff, you can be relatively certain the vulnerability has not been exploited. Forums where some user-created discussions were pinned can look at the first post edit date to find whether the vulnerability might have been exploited. Because Flarum doesn't store the post content history, you cannot be certain if a malicious edit was reverted. The fix will be available in version v0.1.0-beta.16 with Flarum beta 16. The fix has already been back-ported to Flarum beta 15 as version v0.1.0-beta.15.1 of the Sticky extension. Forum administrators can disable the Sticky extension until they are able to apply the update. The vulnerability cannot be exploited while the extension is disabled.</description>
      <guid isPermaLink="false">CVE-2021-21283|2024-08-03T18:09:15.180Z</guid>
      <pubDate>Tue, 26 Jan 2021 20:45:24 +0000</pubDate>
    </item>
  </channel>
</rss>

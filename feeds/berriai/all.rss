<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for berriai -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/berriai/all.rss</link>
    <description>The latest CVEs for berriai -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Thu, 01 Aug 2024 21:22:49 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-4264|2024-08-01T20:33:53.229Z -- berriai -- berriai%2Flitellm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4264</link>
      <description>A remote code execution (RCE) vulnerability exists in the berriai/litellm project due to improper control of the generation of code when using the `eval` function unsafely in the `litellm.get_secret()` method. Specifically, when the server utilizes Google KMS, untrusted data is passed to the `eval` function without any sanitization. Attackers can exploit this vulnerability by injecting malicious values into environment variables through the `/config/update` endpoint, which allows for the update of settings in `proxy_server_config.yaml`.</description>
      <guid isPermaLink="false">CVE-2024-4264|2024-08-01T20:33:53.229Z</guid>
      <pubDate>Sat, 18 May 2024 00:00:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4888|2024-08-01T20:55:10.271Z -- berriai -- berriai%2Flitellm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4888</link>
      <description>BerriAI's litellm, in its latest version, is vulnerable to arbitrary file deletion due to improper input validation on the `/audio/transcriptions` endpoint. An attacker can exploit this vulnerability by sending a specially crafted request that includes a file path to the server, which then deletes the specified file without proper authorization or validation. This vulnerability is present in the code where `os.remove(file.filename)` is used to delete a file, allowing any user to delete critical files on the server such as SSH keys, SQLite databases, or configuration files. </description>
      <guid isPermaLink="false">CVE-2024-4888|2024-08-01T20:55:10.271Z</guid>
      <pubDate>Thu, 06 Jun 2024 18:31:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4890|2024-08-01T20:55:10.325Z -- berriai -- berriai%2Flitellm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4890</link>
      <description>A blind SQL injection vulnerability exists in the berriai/litellm application, specifically within the '/team/update' process. The vulnerability arises due to the improper handling of the 'user_id' parameter in the raw SQL query used for deleting users. An attacker can exploit this vulnerability by injecting malicious SQL commands through the 'user_id' parameter, leading to potential unauthorized access to sensitive information such as API keys, user information, and tokens stored in the database. The affected version is 1.27.14.</description>
      <guid isPermaLink="false">CVE-2024-4890|2024-08-01T20:55:10.325Z</guid>
      <pubDate>Thu, 06 Jun 2024 18:23:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4889|2024-08-01T20:55:10.313Z -- berriai -- berriai%2Flitellm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4889</link>
      <description>A code injection vulnerability exists in the berriai/litellm application, version 1.34.6, due to the use of unvalidated input in the eval function within the secret management system. This vulnerability requires a valid Google KMS configuration file to be exploitable. Specifically, by setting the `UI_LOGO_PATH` variable to a remote server address in the `get_image` function, an attacker can write a malicious Google KMS configuration file to the `cached_logo.jpg` file. This file can then be used to execute arbitrary code by assigning malicious code to the `SAVE_CONFIG_TO_DB` environment variable, leading to full system control. The vulnerability is contingent upon the use of the Google KMS feature.</description>
      <guid isPermaLink="false">CVE-2024-4889|2024-08-01T20:55:10.313Z</guid>
      <pubDate>Thu, 06 Jun 2024 17:53:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2952|2024-07-03T16:51:12.428Z -- berriai -- berriai%2Flitellm</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2952</link>
      <description>BerriAI/litellm is vulnerable to Server-Side Template Injection (SSTI) via the `/completions` endpoint. The vulnerability arises from the `hf_chat_template` method processing the `chat_template` parameter from the `tokenizer_config.json` file through the Jinja template engine without proper sanitization. Attackers can exploit this by crafting malicious `tokenizer_config.json` files that execute arbitrary code on the server.</description>
      <guid isPermaLink="false">CVE-2024-2952|2024-07-03T16:51:12.428Z</guid>
      <pubDate>Wed, 10 Apr 2024 17:07:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5710|2024-07-01T09:25:45.571Z -- berriai -- berriai%2Flitellm</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5710</link>
      <description>berriai/litellm version 1.34.34 is vulnerable to improper access control in its team management functionality. This vulnerability allows attackers to perform unauthorized actions such as creating, updating, viewing, deleting, blocking, and unblocking any teams, as well as adding or deleting any member to or from any teams. The vulnerability stems from insufficient access control checks in various team management endpoints, enabling attackers to exploit these functionalities without proper authorization.</description>
      <guid isPermaLink="false">CVE-2024-5710|2024-07-01T09:25:45.571Z</guid>
      <pubDate>Thu, 27 Jun 2024 18:41:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5710|2024-06-27T18:41:19.900Z -- berriai -- berriai%2Flitellm</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5710</link>
      <description>berriai/litellm version 1.34.34 is vulnerable to improper access control in its team management functionality. This vulnerability allows attackers to perform unauthorized actions such as creating, updating, viewing, deleting, blocking, and unblocking any teams, as well as adding or deleting any member to or from any teams. The vulnerability stems from insufficient access control checks in various team management endpoints, enabling attackers to exploit these functionalities without proper authorization.</description>
      <guid isPermaLink="false">CVE-2024-5710|2024-06-27T18:41:19.900Z</guid>
      <pubDate>Thu, 27 Jun 2024 18:41:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5751|2024-06-27T18:40:49.896Z -- berriai -- berriai%2Flitellm</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5751</link>
      <description>BerriAI/litellm version v1.35.8 contains a vulnerability where an attacker can achieve remote code execution. The vulnerability exists in the `add_deployment` function, which decodes and decrypts environment variables from base64 and assigns them to `os.environ`. An attacker can exploit this by sending a malicious payload to the `/config/update` endpoint, which is then processed and executed by the server when the `get_secret` function is triggered. This requires the server to use Google KMS and a database to store a model.</description>
      <guid isPermaLink="false">CVE-2024-5751|2024-06-27T18:40:49.896Z</guid>
      <pubDate>Thu, 27 Jun 2024 18:40:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5225|2024-06-06T20:15:18.960Z -- berriai -- berriai%2Flitellm</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-5225</link>
      <description>An SQL Injection vulnerability exists in the berriai/litellm repository, specifically within the `/global/spend/logs` endpoint. The vulnerability arises due to improper neutralization of special elements used in an SQL command. The affected code constructs an SQL query by concatenating an unvalidated `api_key` parameter directly into the query, making it susceptible to SQL Injection if the `api_key` contains malicious data. This issue affects the latest version of the repository. Successful exploitation of this vulnerability could lead to unauthorized access, data manipulation, exposure of confidential information, and denial of service (DoS).</description>
      <guid isPermaLink="false">CVE-2024-5225|2024-06-06T20:15:18.960Z</guid>
      <pubDate>Thu, 06 Jun 2024 18:19:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4888|2024-06-07T19:34:20.681Z -- berriai -- berriai%2Flitellm</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4888</link>
      <description>BerriAI's litellm, in its latest version, is vulnerable to arbitrary file deletion due to improper input validation on the `/audio/transcriptions` endpoint. An attacker can exploit this vulnerability by sending a specially crafted request that includes a file path to the server, which then deletes the specified file without proper authorization or validation. This vulnerability is present in the code where `os.remove(file.filename)` is used to delete a file, allowing any user to delete critical files on the server such as SSH keys, SQLite databases, or configuration files.</description>
      <guid isPermaLink="false">CVE-2024-4888|2024-06-07T19:34:20.681Z</guid>
      <pubDate>Thu, 06 Jun 2024 18:31:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4889|2024-06-06T17:53:35.202Z -- berriai -- berriai%2Flitellm</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4889</link>
      <description>A code injection vulnerability exists in the berriai/litellm application, version 1.34.6, due to the use of unvalidated input in the eval function within the secret management system. This vulnerability requires a valid Google KMS configuration file to be exploitable. Specifically, by setting the `UI_LOGO_PATH` variable to a remote server address in the `get_image` function, an attacker can write a malicious Google KMS configuration file to the `cached_logo.jpg` file. This file can then be used to execute arbitrary code by assigning malicious code to the `SAVE_CONFIG_TO_DB` environment variable, leading to full system control. The vulnerability is contingent upon the use of the Google KMS feature.</description>
      <guid isPermaLink="false">CVE-2024-4889|2024-06-06T17:53:35.202Z</guid>
      <pubDate>Thu, 06 Jun 2024 17:53:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4264|2024-05-18T00:00:15.222Z -- berriai -- berriai%2Flitellm</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4264</link>
      <description>A remote code execution (RCE) vulnerability exists in the berriai/litellm project due to improper control of the generation of code when using the `eval` function unsafely in the `litellm.get_secret()` method. Specifically, when the server utilizes Google KMS, untrusted data is passed to the `eval` function without any sanitization. Attackers can exploit this vulnerability by injecting malicious values into environment variables through the `/config/update` endpoint, which allows for the update of settings in `proxy_server_config.yaml`.</description>
      <guid isPermaLink="false">CVE-2024-4264|2024-05-18T00:00:15.222Z</guid>
      <pubDate>Sat, 18 May 2024 00:00:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4890|2024-06-07T19:36:25.329Z -- berriai -- berriai%2Flitellm</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4890</link>
      <description>A blind SQL injection vulnerability exists in the berriai/litellm application, specifically within the '/team/update' process. The vulnerability arises due to the improper handling of the 'user_id' parameter in the raw SQL query used for deleting users. An attacker can exploit this vulnerability by injecting malicious SQL commands through the 'user_id' parameter, leading to potential unauthorized access to sensitive information such as API keys, user information, and tokens stored in the database. The affected version is 1.27.14.</description>
      <guid isPermaLink="false">CVE-2024-4890|2024-06-07T19:36:25.329Z</guid>
      <pubDate>Thu, 06 Jun 2024 18:23:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2952|2024-04-16T11:10:21.535Z -- berriai -- berriai%2Flitellm</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2952</link>
      <description>BerriAI/litellm is vulnerable to Server-Side Template Injection (SSTI) via the `/completions` endpoint. The vulnerability arises from the `hf_chat_template` method processing the `chat_template` parameter from the `tokenizer_config.json` file through the Jinja template engine without proper sanitization. Attackers can exploit this by crafting malicious `tokenizer_config.json` files that execute arbitrary code on the server.</description>
      <guid isPermaLink="false">CVE-2024-2952|2024-04-16T11:10:21.535Z</guid>
      <pubDate>Wed, 10 Apr 2024 17:07:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4889|2024-06-12T20:34:14.108Z -- berriai -- berriai%2Flitellm</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4889</link>
      <description>A code injection vulnerability exists in the berriai/litellm application, version 1.34.6, due to the use of unvalidated input in the eval function within the secret management system. This vulnerability requires a valid Google KMS configuration file to be exploitable. Specifically, by setting the `UI_LOGO_PATH` variable to a remote server address in the `get_image` function, an attacker can write a malicious Google KMS configuration file to the `cached_logo.jpg` file. This file can then be used to execute arbitrary code by assigning malicious code to the `SAVE_CONFIG_TO_DB` environment variable, leading to full system control. The vulnerability is contingent upon the use of the Google KMS feature.</description>
      <guid isPermaLink="false">CVE-2024-4889|2024-06-12T20:34:14.108Z</guid>
      <pubDate>Thu, 06 Jun 2024 17:53:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5710|2024-06-27T19:54:54.734Z -- berriai -- berriai%2Flitellm</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5710</link>
      <description>berriai/litellm version 1.34.34 is vulnerable to improper access control in its team management functionality. This vulnerability allows attackers to perform unauthorized actions such as creating, updating, viewing, deleting, blocking, and unblocking any teams, as well as adding or deleting any member to or from any teams. The vulnerability stems from insufficient access control checks in various team management endpoints, enabling attackers to exploit these functionalities without proper authorization.</description>
      <guid isPermaLink="false">CVE-2024-5710|2024-06-27T19:54:54.734Z</guid>
      <pubDate>Thu, 27 Jun 2024 18:41:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5751|2024-07-02T19:00:11.936Z -- berriai -- berriai%2Flitellm</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5751</link>
      <description>BerriAI/litellm version v1.35.8 contains a vulnerability where an attacker can achieve remote code execution. The vulnerability exists in the `add_deployment` function, which decodes and decrypts environment variables from base64 and assigns them to `os.environ`. An attacker can exploit this by sending a malicious payload to the `/config/update` endpoint, which is then processed and executed by the server when the `get_secret` function is triggered. This requires the server to use Google KMS and a database to store a model.</description>
      <guid isPermaLink="false">CVE-2024-5751|2024-07-02T19:00:11.936Z</guid>
      <pubDate>Thu, 27 Jun 2024 18:40:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2952|2024-08-01T19:32:42.587Z -- berriai -- berriai%2Flitellm</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2952</link>
      <description>BerriAI/litellm is vulnerable to Server-Side Template Injection (SSTI) via the `/completions` endpoint. The vulnerability arises from the `hf_chat_template` method processing the `chat_template` parameter from the `tokenizer_config.json` file through the Jinja template engine without proper sanitization. Attackers can exploit this by crafting malicious `tokenizer_config.json` files that execute arbitrary code on the server.</description>
      <guid isPermaLink="false">CVE-2024-2952|2024-08-01T19:32:42.587Z</guid>
      <pubDate>Wed, 10 Apr 2024 17:07:52 +0000</pubDate>
    </item>
  </channel>
</rss>

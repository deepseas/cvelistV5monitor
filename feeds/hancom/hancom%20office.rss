<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for HANCOM -- Hancom Office</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/hancom/hancom%20office.rss</link>
    <description>The latest CVEs for HANCOM -- Hancom Office</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Tue, 06 Aug 2024 04:23:58 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2016-4291|2024-08-06T00:25:14.057Z -- hancom -- hancom%20office
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-4291</link>
      <description>When opening a Hangul HShow Document (.hpt) and processing a structure within the document, Hancom Office 2014 will use a field from the structure in an operation that can cause the integer to overflow. This result is then used to allocate memory to copy file data in. Due to the lack of bounds checking on the integer, the allocated memory buffer can be made to be undersized at which point the reading of file data will write outside the bounds of the buffer. This can lead to code execution under the context of the application.</description>
      <guid isPermaLink="false">CVE-2016-4291|2024-08-06T00:25:14.057Z</guid>
      <pubDate>Fri, 06 Jan 2017 21:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2016-4292|2024-08-06T00:25:14.181Z -- hancom -- hancom%20office
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-4292</link>
      <description>When opening a Hangul HShow Document (.hpt) and processing a structure within the document, Hancom Office 2014 will use a static size to allocate a heap buffer yet explicitly trust a size from the file when modifying data inside of it. Due to this, an aggressor can corrupt memory outside the bounds of this buffer which can lead to code execution under the context of the application.</description>
      <guid isPermaLink="false">CVE-2016-4292|2024-08-06T00:25:14.181Z</guid>
      <pubDate>Fri, 06 Jan 2017 21:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2016-4295|2024-08-06T00:25:14.023Z -- hancom -- hancom%20office
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-4295</link>
      <description>When opening a Hangul Hcell Document (.cell) and processing a particular record within the Workbook stream, an index miscalculation leading to a heap overlow can be made to occur in Hancom Office 2014. The vulnerability occurs when processing data for a formula used to render a chart via the HncChartPlugin.hplg library. Due to a lack of bounds-checking when incrementing an index that is used for writing into a buffer for formulae, the application can be made to write pointer data outside its bounds which can lead to code execution under the context of the application.</description>
      <guid isPermaLink="false">CVE-2016-4295|2024-08-06T00:25:14.023Z</guid>
      <pubDate>Fri, 06 Jan 2017 21:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2016-4294|2024-08-06T00:25:14.117Z -- hancom -- hancom%20office
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-4294</link>
      <description>When opening a Hangul Hcell Document (.cell) and processing a property record within the Workbook stream, Hancom Office 2014 will attempt to allocate space for an element using a length from the file. When copying user-supplied data to this buffer, however, the application will use a different size which leads to a heap-based buffer overflow. This vulnerability can lead to code-execution under the context of the application.</description>
      <guid isPermaLink="false">CVE-2016-4294|2024-08-06T00:25:14.117Z</guid>
      <pubDate>Fri, 06 Jan 2017 21:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2016-4290|2024-08-06T00:25:14.096Z -- hancom -- hancom%20office
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-4290</link>
      <description>When opening a Hangul HShow Document (.hpt) and processing a structure within the document, Hancom Office 2014 will attempt to allocate space for a block of data within the file. When calculating this length, the application will use a value from the file and add a constant to it without checking whether the addition of the constant will cause the integer to overflow which will cause the buffer to be undersized when the application tries to copy file data into it. This allows one to overwrite contiguous data in the heap which can lead to code-execution under the context of the application.</description>
      <guid isPermaLink="false">CVE-2016-4290|2024-08-06T00:25:14.096Z</guid>
      <pubDate>Fri, 06 Jan 2017 21:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2016-4296|2024-08-06T00:25:14.459Z -- hancom -- hancom%20office
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-4296</link>
      <description>When opening a Hangul Hcell Document (.cell) and processing a record that uses the CSSValFormat object, Hancom Office 2014 will search for an underscore ("_") character at the end of the string and write a null terminator after it. If the character is at the very end of the string, the application will mistakenly write the null-byte outside the bounds of its destination. This can result in heap corruption that can lead code execution under the context of the application</description>
      <guid isPermaLink="false">CVE-2016-4296|2024-08-06T00:25:14.459Z</guid>
      <pubDate>Fri, 06 Jan 2017 21:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>

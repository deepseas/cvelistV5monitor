<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for faye -- faye-websocket</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/faye/faye-websocket.rss</link>
    <description>The latest CVEs for faye -- faye-websocket</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 20:23:19 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2020-15133|2024-08-04T13:08:22.247Z -- faye -- faye-websocket
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-15133</link>
      <description>In faye-websocket before version 0.11.0, there is a lack of certification validation in TLS handshakes. The `Faye::WebSocket::Client` class uses the `EM::Connection#start_tls` method in EventMachine to implement the TLS handshake whenever a `wss:` URL is used for the connection. This method does not implement certificate verification by default, meaning that it does not check that the server presents a valid and trusted TLS certificate for the expected hostname. That means that any `wss:` connection made using this library is vulnerable to a man-in-the-middle attack, since it does not confirm the identity of the server it is connected to. For further background information on this issue, please see the referenced GitHub Advisory. Upgrading `faye-websocket` to v0.11.0 is recommended.</description>
      <guid isPermaLink="false">CVE-2020-15133|2024-08-04T13:08:22.247Z</guid>
      <pubDate>Fri, 31 Jul 2020 17:40:21 +0000</pubDate>
    </item>
  </channel>
</rss>

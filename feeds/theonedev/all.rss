<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for theonedev -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/theonedev/all.rss</link>
    <description>The latest CVEs for theonedev -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 20:22:02 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2021-21245|2024-08-03T18:09:15.339Z -- theonedev -- onedev
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-21245</link>
      <description>OneDev is an all-in-one devops platform. In OneDev before version 4.0.3, AttachmentUploadServlet also saves user controlled data (`request.getInputStream()`) to a user specified location (`request.getHeader("File-Name")`). This issue may lead to arbitrary file upload which can be used to upload a WebShell to OneDev server. This issue is addressed in 4.0.3 by only allowing uploaded file to be in attachments folder. The webshell issue is not possible as OneDev never executes files in attachments folder.</description>
      <guid isPermaLink="false">CVE-2021-21245|2024-08-03T18:09:15.339Z</guid>
      <pubDate>Fri, 15 Jan 2021 20:10:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-21244|2024-08-03T18:09:14.896Z -- theonedev -- onedev
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-21244</link>
      <description>OneDev is an all-in-one devops platform. In OneDev before version 4.0.3, There is a vulnerability that enabled pre-auth server side template injection via Bean validation message tampering. Full details in the reference GHSA. This issue was fixed in 4.0.3 by disabling validation interpolation completely.</description>
      <guid isPermaLink="false">CVE-2021-21244|2024-08-03T18:09:14.896Z</guid>
      <pubDate>Fri, 15 Jan 2021 20:05:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-21251|2024-08-03T18:09:14.852Z -- theonedev -- onedev
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-21251</link>
      <description>OneDev is an all-in-one devops platform. In OneDev before version 4.0.3 there is a critical "zip slip" vulnerability. This issue may lead to arbitrary file write. The KubernetesResource REST endpoint untars user controlled data from the request body using TarUtils. TarUtils is a custom library method leveraging Apache Commons Compress. During the untar process, there are no checks in place to prevent an untarred file from traversing the file system and overriding an existing file. For a successful exploitation, the attacker requires a valid __JobToken__ which may not be possible to get without using any of the other reported vulnerabilities. But this should be considered a vulnerability in `io.onedev.commons.utils.TarUtils` since it lives in a different artifact and can affect other projects using it. This issue was addressed in 4.0.3 by validating paths in tar archive to only allow them to be in specified folder when extracted.</description>
      <guid isPermaLink="false">CVE-2021-21251|2024-08-03T18:09:14.852Z</guid>
      <pubDate>Fri, 15 Jan 2021 20:10:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-21249|2024-08-03T18:09:15.155Z -- theonedev -- onedev
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-21249</link>
      <description>OneDev is an all-in-one devops platform. In OneDev before version 4.0.3, there is an issue involving YAML parsing which can lead to post-auth remote code execution. In order to parse and process YAML files, OneDev uses SnakeYaml which by default (when not using `SafeConstructor`) allows the instantiation of arbitrary classes. We can leverage that to run arbitrary code by instantiating classes such as `javax.script.ScriptEngineManager` and using `URLClassLoader` to load the script engine provider, resulting in the instantiation of a user controlled class. For a full example refer to the referenced GHSA. This issue was addressed in 4.0.3 by only allowing certain known classes to be deserialized</description>
      <guid isPermaLink="false">CVE-2021-21249|2024-08-03T18:09:15.155Z</guid>
      <pubDate>Fri, 15 Jan 2021 20:10:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-39205|2024-08-03T12:00:42.469Z -- theonedev -- onedev
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-39205</link>
      <description>Onedev is an open source, self-hosted Git Server with CI/CD and Kanban. In versions of Onedev prior to 7.3.0 unauthenticated users can take over a OneDev instance if there is no properly configured reverse proxy. The /git-prereceive-callback endpoint is used by the pre-receive git hook on the server to check for branch protections during a push event. It is only intended to be accessed from localhost, but the check relies on the X-Forwarded-For header. Invoking this endpoint leads to the execution of one of various git commands. The environment variables of this command execution can be controlled via query parameters. This allows attackers to write to arbitrary files, which can in turn lead to the execution of arbitrary code. Such an attack would be very hard to detect, which increases the potential impact even more. Users are advised to upgrade. There are no known workarounds for this issue.</description>
      <guid isPermaLink="false">CVE-2022-39205|2024-08-03T12:00:42.469Z</guid>
      <pubDate>Tue, 13 Sep 2022 18:30:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-39207|2024-08-03T12:00:42.570Z -- theonedev -- onedev
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-39207</link>
      <description>Onedev is an open source, self-hosted Git Server with CI/CD and Kanban. During CI/CD builds, it is possible to save build artifacts for later retrieval. They can be accessed through OneDev's web UI after the successful run of a build. These artifact files are served by the webserver in the same context as the UI without any further restrictions. This leads to Cross-Site Scripting (XSS) when a user creates a build artifact that contains HTML. When accessing the artifact, the content is rendered by the browser, including any JavaScript that it contains. Since all cookies (except for the rememberMe one) do not set the HttpOnly flag, an attacker could steal the session of a victim and use it to impersonate them. To exploit this issue, attackers need to be able to modify the content of artifacts, which usually means they need to be able to modify a project's build spec. The exploitation requires the victim to click on an attacker's link. It can be used to elevate privileges by targeting admins of a OneDev instance. In the worst case, this can lead to arbitrary code execution on the server, because admins can create Server Shell Executors and use them to run any command on the server. This issue has been patched in version 7.3.0. Users are advised to upgrade. There are no known workarounds for this issue.</description>
      <guid isPermaLink="false">CVE-2022-39207|2024-08-03T12:00:42.570Z</guid>
      <pubDate>Tue, 13 Sep 2022 18:50:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-21250|2024-08-03T18:09:15.068Z -- theonedev -- onedev
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-21250</link>
      <description>OneDev is an all-in-one devops platform. In OneDev before version 4.0.3, there is a critical vulnerability which may lead to arbitrary file read. When BuildSpec is provided in XML format, the spec is processed by XmlBuildSpecMigrator.migrate(buildSpecString); which processes the XML document without preventing the expansion of external entities. These entities can be configured to read arbitrary files from the file system and dump their contents in the final XML document to be migrated. If the files are dumped in properties included in the YAML file, it will be possible for an attacker to read them. If not, it is possible for an attacker to exfiltrate the contents of these files Out Of Band. This issue was addressed in 4.0.3 by ignoring ENTITY instructions in xml file.</description>
      <guid isPermaLink="false">CVE-2021-21250|2024-08-03T18:09:15.068Z</guid>
      <pubDate>Fri, 15 Jan 2021 20:10:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-21242|2024-08-03T18:09:14.970Z -- theonedev -- onedev
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-21242</link>
      <description>OneDev is an all-in-one devops platform. In OneDev before version 4.0.3, there is a critical vulnerability which can lead to pre-auth remote code execution. AttachmentUploadServlet deserializes untrusted data from the `Attachment-Support` header. This Servlet does not enforce any authentication or authorization checks. This issue may lead to pre-auth remote code execution. This issue was fixed in 4.0.3 by removing AttachmentUploadServlet and not using deserialization</description>
      <guid isPermaLink="false">CVE-2021-21242|2024-08-03T18:09:14.970Z</guid>
      <pubDate>Fri, 15 Jan 2021 20:05:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-21246|2024-08-03T18:09:15.150Z -- theonedev -- onedev
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-21246</link>
      <description>OneDev is an all-in-one devops platform. In OneDev before version 4.0.3, the REST UserResource endpoint performs a security check to make sure that only administrators can list user details. However for the `/users/{id}` endpoint there are no security checks enforced so it is possible to retrieve arbitrary user details including their Access Tokens! These access tokens can be used to access the API or clone code in the build spec via the HTTP(S) protocol. It has permissions to all projects accessible by the user account. This issue may lead to `Sensitive data leak` and leak the Access Token which can be used to impersonate the administrator or any other users. This issue was addressed in 4.0.3 by removing user info from restful api.</description>
      <guid isPermaLink="false">CVE-2021-21246|2024-08-03T18:09:15.150Z</guid>
      <pubDate>Fri, 15 Jan 2021 20:10:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-39206|2024-08-03T12:00:43.907Z -- theonedev -- onedev
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-39206</link>
      <description>Onedev is an open source, self-hosted Git Server with CI/CD and Kanban. When using Docker-based job executors, the Docker socket (e.g. /var/run/docker.sock on Linux) is mounted into each Docker step. Users that can define and trigger CI/CD jobs on a project could use this to control the Docker daemon on the host machine. This is a known dangerous pattern, as it can be used to break out of Docker containers and, in most cases, gain root privileges on the host system. This issue allows regular (non-admin) users to potentially take over the build infrastructure of a OneDev instance. Attackers need to have an account (or be able to register one) and need permission to create a project. Since code.onedev.io has the right preconditions for this to be exploited by remote attackers, it could have been used to hijack builds of OneDev itself, e.g. by injecting malware into the docker images that are built and pushed to Docker Hub. The impact is increased by this as described before. Users are advised to upgrade to 7.3.0 or higher. There are no known workarounds for this issue.</description>
      <guid isPermaLink="false">CVE-2022-39206|2024-08-03T12:00:43.907Z</guid>
      <pubDate>Tue, 13 Sep 2022 18:50:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-21247|2024-08-03T18:09:14.990Z -- theonedev -- onedev
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-21247</link>
      <description>OneDev is an all-in-one devops platform. In OneDev before version 4.0.3, the application's BasePage registers an AJAX event listener (`AbstractPostAjaxBehavior`) in all pages other than the login page. This listener decodes and deserializes the `data` query parameter. We can access this listener by submitting a POST request to any page. This issue may lead to `post-auth RCE` This endpoint is subject to authentication and, therefore, requires a valid user to carry on the attack. This issue was addressed in 4.0.3 by encrypting serialization payload with secrets only known to server.</description>
      <guid isPermaLink="false">CVE-2021-21247|2024-08-03T18:09:14.990Z</guid>
      <pubDate>Fri, 15 Jan 2021 20:10:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-21243|2024-08-03T18:09:15.013Z -- theonedev -- onedev
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-21243</link>
      <description>OneDev is an all-in-one devops platform. In OneDev before version 4.0.3, a Kubernetes REST endpoint exposes two methods that deserialize untrusted data from the request body. These endpoints do not enforce any authentication or authorization checks. This issue may lead to pre-auth RCE. This issue was fixed in 4.0.3 by not using deserialization at KubernetesResource side.</description>
      <guid isPermaLink="false">CVE-2021-21243|2024-08-03T18:09:15.013Z</guid>
      <pubDate>Fri, 15 Jan 2021 20:05:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-21248|2024-08-03T18:09:15.318Z -- theonedev -- onedev
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-21248</link>
      <description>OneDev is an all-in-one devops platform. In OneDev before version 4.0.3, there is a critical vulnerability involving the build endpoint parameters. InputSpec is used to define parameters of a Build spec. It does so by using dynamically generated Groovy classes. A user able to control job parameters can run arbitrary code on OneDev's server by injecting arbitrary Groovy code. The ultimate result is in the injection of a static constructor that will run arbitrary code. For a full example refer to the referenced GHSA. This issue was addressed in 4.0.3 by escaping special characters such as quote from user input.</description>
      <guid isPermaLink="false">CVE-2021-21248|2024-08-03T18:09:15.318Z</guid>
      <pubDate>Fri, 15 Jan 2021 20:10:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-39208|2024-08-03T12:00:42.363Z -- theonedev -- onedev
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-39208</link>
      <description>Onedev is an open source, self-hosted Git Server with CI/CD and Kanban. All files in the /opt/onedev/sites/ directory are exposed and can be read by unauthenticated users. This directory contains all projects, including their bare git repos and build artifacts. This file disclosure vulnerability can be used by unauthenticated attackers to leak all project files of any project. Since project IDs are incremental, an attacker could iterate through them and leak all project data. This issue has been resolved in version 7.3.0 and users are advised to upgrade. There are no known workarounds for this issue.</description>
      <guid isPermaLink="false">CVE-2022-39208|2024-08-03T12:00:42.363Z</guid>
      <pubDate>Tue, 13 Sep 2022 18:42:28 +0000</pubDate>
    </item>
  </channel>
</rss>

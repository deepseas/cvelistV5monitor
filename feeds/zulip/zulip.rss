<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for zulip -- zulip</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/zulip/zulip.rss</link>
    <description>The latest CVEs for zulip -- zulip</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 12:25:47 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2021-43791|2024-08-04T04:03:08.967Z -- zulip -- zulip
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-43791</link>
      <description>Zulip is an open source group chat application that combines real-time chat with threaded conversations. In affected versions expiration dates on the confirmation objects associated with email invitations were not enforced properly in the new account registration flow. A confirmation link takes a user to the check_prereg_key_and_redirect endpoint, before getting redirected to POST to /accounts/register/. The problem was that validation was happening in the check_prereg_key_and_redirect part and not in /accounts/register/ - meaning that one could submit an expired confirmation key and be able to register. The issue is fixed in Zulip 4.8. There are no known workarounds and users are advised to upgrade as soon as possible.</description>
      <guid isPermaLink="false">CVE-2021-43791|2024-08-04T04:03:08.967Z</guid>
      <pubDate>Thu, 02 Dec 2021 00:15:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-41115|2024-08-04T02:59:31.570Z -- zulip -- zulip
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-41115</link>
      <description>Zulip is an open source team chat server. In affected versions Zulip allows organization administrators on a server to configure "linkifiers" that automatically create links from messages that users send, detected via arbitrary regular expressions. Malicious organization administrators could subject the server to a denial-of-service via regular expression complexity attacks; most simply, by configuring a quadratic-time regular expression in a linkifier, and sending messages that exploited it. A regular expression attempted to parse the user-provided regexes to verify that they were safe from ReDoS -- this was both insufficient, as well as _itself_ subject to ReDoS if the organization administrator entered a sufficiently complex invalid regex. Affected users should [upgrade to the just-released Zulip 4.7](https://zulip.readthedocs.io/en/latest/production/upgrade-or-modify.html#upgrading-to-a-release), or [`main`](https://zulip.readthedocs.io/en/latest/production/upgrade-or-modify.html#upgrading-from-a-git-repository).</description>
      <guid isPermaLink="false">CVE-2021-41115|2024-08-04T02:59:31.570Z</guid>
      <pubDate>Thu, 07 Oct 2021 22:20:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-43799|2024-08-04T04:03:08.713Z -- zulip -- zulip
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-43799</link>
      <description>Zulip is an open-source team collaboration tool. Zulip Server installs RabbitMQ for internal message passing. In versions of Zulip Server prior to 4.9, the initial installation (until first reboot, or restart of RabbitMQ) does not successfully limit the default ports which RabbitMQ opens; this includes port 25672, the RabbitMQ distribution port, which is used as a management port. RabbitMQ's default "cookie" which protects this port is generated using a weak PRNG, which limits the entropy of the password to at most 36 bits; in practicality, the seed for the randomizer is biased, resulting in approximately 20 bits of entropy. If other firewalls (at the OS or network level) do not protect port 25672, a remote attacker can brute-force the 20 bits of entropy in the "cookie" and leverage it for arbitrary execution of code as the rabbitmq user. They can also read all data which is sent through RabbitMQ, which includes all message traffic sent by users. Version 4.9 contains a patch for this vulnerability. As a workaround, ensure that firewalls prevent access to ports 5672 and 25672 from outside the Zulip server.</description>
      <guid isPermaLink="false">CVE-2021-43799|2024-08-04T04:03:08.713Z</guid>
      <pubDate>Tue, 25 Jan 2022 20:55:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27286|2024-08-02T00:27:59.940Z -- zulip -- zulip</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27286</link>
      <description>Zulip is an open-source team collaboration. When a user moves a Zulip message, they have the option to move all messages in the topic, move only subsequent messages as well, or move just a single message.  If the user chose to just move one message, and was moving it from a public stream to a private stream, Zulip would successfully move the message, -- but active users who did not have access to the private stream, but whose client had already received the message, would continue to see the message in the public stream until they reloaded their client.  Additionally, Zulip did not remove view permissions on the message from recently-active users, allowing the message to show up in the "All messages" view or in search results, but not in "Inbox" or "Recent conversations" views. While the bug has been present since moving messages between streams was first introduced in version 3.0, this option became much more common starting in Zulip 8.0, when the default option in the picker for moving the very last message in a conversation was changed. This issue is fixed in Zulip Server 8.3. No known workarounds are available.</description>
      <guid isPermaLink="false">CVE-2024-27286|2024-08-02T00:27:59.940Z</guid>
      <pubDate>Wed, 20 Mar 2024 19:35:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27286|2024-06-04T17:46:59.769Z -- zulip -- zulip</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27286</link>
      <description>Zulip is an open-source team collaboration. When a user moves a Zulip message, they have the option to move all messages in the topic, move only subsequent messages as well, or move just a single message.  If the user chose to just move one message, and was moving it from a public stream to a private stream, Zulip would successfully move the message, -- but active users who did not have access to the private stream, but whose client had already received the message, would continue to see the message in the public stream until they reloaded their client.  Additionally, Zulip did not remove view permissions on the message from recently-active users, allowing the message to show up in the "All messages" view or in search results, but not in "Inbox" or "Recent conversations" views. While the bug has been present since moving messages between streams was first introduced in version 3.0, this option became much more common starting in Zulip 8.0, when the default option in the picker for moving the very last message in a conversation was changed. This issue is fixed in Zulip Server 8.3. No known workarounds are available.</description>
      <guid isPermaLink="false">CVE-2024-27286|2024-06-04T17:46:59.769Z</guid>
      <pubDate>Wed, 20 Mar 2024 19:35:59 +0000</pubDate>
    </item>
  </channel>
</rss>

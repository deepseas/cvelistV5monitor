<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for 202ecommerce -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/202ecommerce/all.rss</link>
    <description>The latest CVEs for 202ecommerce -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 21:22:13 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-28843|2024-08-02T13:51:38.551Z -- 202ecommerce -- paypal
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-28843</link>
      <description>PrestaShop/paypal is an open source module for the PrestaShop web commerce ecosystem which provides paypal payment support. A SQL injection vulnerability found in the PrestaShop paypal module from release from 3.12.0 to and including 3.16.3 allow a remote attacker to gain privileges, modify data, and potentially affect system availability. The cause of this issue is that SQL queries were being constructed with user input which had not been properly filtered. Only deployments on PrestaShop 1.6 are affected. Users are advised to upgrade to module version 3.16.4. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-28843|2024-08-02T13:51:38.551Z</guid>
      <pubDate>Fri, 31 Mar 2023 17:02:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-41670|2024-08-02T04:46:52.667Z -- 202ecommerce -- paypal</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-41670</link>
      <description>In the module "PayPal Official" for PrestaShop 7+ releases prior to version 6.4.2 and for PrestaShop 1.6 releases prior to version 3.18.1, a malicious customer can confirm an order even if payment is finally declined by PayPal. A logical weakness during the capture of a payment in case of disabled webhooks can be exploited to create an accepted order. This could allow a threat actor to confirm an order with a fraudulent payment support. Versions 6.4.2 and 3.18.1 contain a patch for the issue. Additionally, users enable webhooks and check they are callable.</description>
      <guid isPermaLink="false">CVE-2024-41670|2024-08-02T04:46:52.667Z</guid>
      <pubDate>Fri, 26 Jul 2024 14:46:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-41670|2024-07-26T14:46:14.226Z -- 202ecommerce -- paypal</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-41670</link>
      <description>In the module "PayPal Official" for PrestaShop 7+ releases prior to version 6.4.2 and for PrestaShop 1.6 releases prior to version 3.18.1, a malicious customer can confirm an order even if payment is finally declined by PayPal. A logical weakness during the capture of a payment in case of disabled webhooks can be exploited to create an accepted order. This could allow a threat actor to confirm an order with a fraudulent payment support. Versions 6.4.2 and 3.18.1 contain a patch for the issue. Additionally, users enable webhooks and check they are callable.</description>
      <guid isPermaLink="false">CVE-2024-41670|2024-07-26T14:46:14.226Z</guid>
      <pubDate>Fri, 26 Jul 2024 14:46:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-41670|2024-07-26T15:56:54.457Z -- 202ecommerce -- paypal</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-41670</link>
      <description>In the module "PayPal Official" for PrestaShop 7+ releases prior to version 6.4.2 and for PrestaShop 1.6 releases prior to version 3.18.1, a malicious customer can confirm an order even if payment is finally declined by PayPal. A logical weakness during the capture of a payment in case of disabled webhooks can be exploited to create an accepted order. This could allow a threat actor to confirm an order with a fraudulent payment support. Versions 6.4.2 and 3.18.1 contain a patch for the issue. Additionally, users enable webhooks and check they are callable.</description>
      <guid isPermaLink="false">CVE-2024-41670|2024-07-26T15:56:54.457Z</guid>
      <pubDate>Fri, 26 Jul 2024 14:46:14 +0000</pubDate>
    </item>
  </channel>
</rss>

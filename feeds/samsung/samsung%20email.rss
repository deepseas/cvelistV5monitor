<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Samsung -- Samsung Email</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/samsung/samsung%20email.rss</link>
    <description>The latest CVEs for Samsung -- Samsung Email</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Mon, 05 Aug 2024 10:23:32 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2018-10498|2024-08-05T07:39:07.683Z -- samsung -- samsung%20email
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-10498</link>
      <description>This vulnerability allows local attackers to disclose sensitive information on vulnerable installations of Samsung Email Fixed in version 5.0.02.16. An attacker must first obtain the ability to execute low-privileged code on the target system in order to exploit this vulnerability. The specific flaw exists within the handling of file:/// URIs. The issue lies in the lack of proper validation of user-supplied data, which can allow for reading arbitrary files. An attacker can leverage this in conjunction with other vulnerabilities to escalate privileges. Was ZDI-CAN-5329.</description>
      <guid isPermaLink="false">CVE-2018-10498|2024-08-05T07:39:07.683Z</guid>
      <pubDate>Mon, 24 Sep 2018 23:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-10497|2024-08-05T07:39:08.259Z -- samsung -- samsung%20email
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-10497</link>
      <description>This vulnerability allows local attackers to escalate privileges on vulnerable installations of Samsung Email Fixed in version 5.0.02.16. An attacker must first obtain the ability to execute low-privileged code on the target system in order to exploit this vulnerability. The specific flaw exists within the handling of EML files. The issue results from the lack of proper validation of user-supplied data, which can allow arbitrary JavaScript to execute. An attacker can leverage this vulnerability to escalate privileges to resources normally protected from the application. Was ZDI-CAN-5328.</description>
      <guid isPermaLink="false">CVE-2018-10497|2024-08-05T07:39:08.259Z</guid>
      <pubDate>Mon, 24 Sep 2018 23:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>

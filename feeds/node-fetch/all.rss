<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for node-fetch -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/node-fetch/all.rss</link>
    <description>The latest CVEs for node-fetch -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 22:23:06 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2020-15168|2024-08-04T13:08:22.463Z -- node-fetch -- node-fetch
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-15168</link>
      <description>node-fetch before versions 2.6.1 and 3.0.0-beta.9 did not honor the size option after following a redirect, which means that when a content size was over the limit, a FetchError would never get thrown and the process would end without failure. For most people, this fix will have a little or no impact. However, if you are relying on node-fetch to gate files above a size, the impact could be significant, for example: If you don't double-check the size of the data after fetch() has completed, your JS thread could get tied up doing work on a large file (DoS) and/or cost you money in computing.</description>
      <guid isPermaLink="false">CVE-2020-15168|2024-08-04T13:08:22.463Z</guid>
      <pubDate>Thu, 10 Sep 2020 18:25:13 +0000</pubDate>
    </item>
  </channel>
</rss>

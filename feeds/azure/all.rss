<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Azure -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/azure/all.rss</link>
    <description>The latest CVEs for Azure -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 16:24:50 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-23939|2024-08-02T10:49:07.638Z -- azure -- setup-kubectl
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-23939</link>
      <description>Azure/setup-kubectl is a GitHub Action for installing Kubectl. This vulnerability only impacts versions before version 3. An insecure temporary creation of a file allows other actors on the Actions runner to replace the Kubectl binary created by this action because it is world writable. This Kubectl tool installer runs `fs.chmodSync(kubectlPath, 777)` to set permissions on the Kubectl binary, however, this allows any local user to replace the Kubectl binary. This allows privilege escalation to the user that can also run kubectl, most likely root. This attack is only possible if an attacker somehow breached the GitHub actions runner or if a user is utilizing an Action that maliciously executes this attack. This has been fixed and released in all versions `v3` and later. 775 permissions are used instead. Users are advised to upgrade. There are no known workarounds for this issue.
</description>
      <guid isPermaLink="false">CVE-2023-23939|2024-08-02T10:49:07.638Z</guid>
      <pubDate>Mon, 06 Mar 2023 18:19:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27099|2024-08-02T00:27:59.513Z -- azure -- azure-uamqp-c</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27099</link>
      <description>The uAMQP is a C library for AMQP 1.0 communication to Azure Cloud Services. When processing an incorrect `AMQP_VALUE` failed state, may cause a double free problem. This may cause a RCE. Update submodule with commit 2ca42b6e4e098af2d17e487814a91d05f6ae4987.</description>
      <guid isPermaLink="false">CVE-2024-27099|2024-08-02T00:27:59.513Z</guid>
      <pubDate>Tue, 27 Feb 2024 18:58:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29195|2024-08-02T01:10:55.203Z -- azure -- azure-c-shared-utility</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-29195</link>
      <description>The azure-c-shared-utility is a C library for AMQP/MQTT communication to Azure Cloud Services. This library may be used by the Azure IoT C SDK for communication between IoT Hub and IoT Hub devices. An attacker can cause an integer wraparound or under-allocation or heap buffer overflow due to vulnerabilities in parameter checking mechanism, by exploiting the buffer length parameter in Azure C SDK, which may lead to remote code execution. Requirements for RCE are 1. Compromised Azure account allowing malformed payloads to be sent to the device via IoT Hub service, 2. By passing IoT hub service max message payload limit of 128KB, and 3. Ability to overwrite code space with remote code. Fixed in commit https://github.com/Azure/azure-c-shared-utility/commit/1129147c38ac02ad974c4c701a1e01b2141b9fe2.</description>
      <guid isPermaLink="false">CVE-2024-29195|2024-08-02T01:10:55.203Z</guid>
      <pubDate>Tue, 26 Mar 2024 02:57:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27099|2024-07-26T17:59:55.682Z -- azure -- azure-uamqp-c</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27099</link>
      <description>The uAMQP is a C library for AMQP 1.0 communication to Azure Cloud Services. When processing an incorrect `AMQP_VALUE` failed state, may cause a double free problem. This may cause a RCE. Update submodule with commit 2ca42b6e4e098af2d17e487814a91d05f6ae4987.</description>
      <guid isPermaLink="false">CVE-2024-27099|2024-07-26T17:59:55.682Z</guid>
      <pubDate>Tue, 27 Feb 2024 18:58:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-25110|2024-02-12T19:58:36.362Z -- azure -- azure-uamqp-c</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-25110</link>
      <description>The UAMQP is a general purpose C library for AMQP 1.0. During a call to open_get_offered_capabilities, a memory allocation may fail causing a use-after-free issue and if a client called it during connection communication it may cause a remote code execution. Users are advised to update the submodule with commit `30865c9c`. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-25110|2024-02-12T19:58:36.362Z</guid>
      <pubDate>Mon, 12 Feb 2024 19:58:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27099|2024-02-27T18:58:26.274Z -- azure -- azure-uamqp-c</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27099</link>
      <description>The uAMQP is a C library for AMQP 1.0 communication to Azure Cloud Services. When processing an incorrect `AMQP_VALUE` failed state, may cause a double free problem. This may cause a RCE. Update submodule with commit 2ca42b6e4e098af2d17e487814a91d05f6ae4987.</description>
      <guid isPermaLink="false">CVE-2024-27099|2024-02-27T18:58:26.274Z</guid>
      <pubDate>Tue, 27 Feb 2024 18:58:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29195|2024-03-26T02:57:20.769Z -- azure -- azure-c-shared-utility</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-29195</link>
      <description>The azure-c-shared-utility is a C library for AMQP/MQTT communication to Azure Cloud Services. This library may be used by the Azure IoT C SDK for communication between IoT Hub and IoT Hub devices. An attacker can cause an integer wraparound or under-allocation or heap buffer overflow due to vulnerabilities in parameter checking mechanism, by exploiting the buffer length parameter in Azure C SDK, which may lead to remote code execution. Requirements for RCE are 1. Compromised Azure account allowing malformed payloads to be sent to the device via IoT Hub service, 2. By passing IoT hub service max message payload limit of 128KB, and 3. Ability to overwrite code space with remote code. Fixed in commit https://github.com/Azure/azure-c-shared-utility/commit/1129147c38ac02ad974c4c701a1e01b2141b9fe2.</description>
      <guid isPermaLink="false">CVE-2024-29195|2024-03-26T02:57:20.769Z</guid>
      <pubDate>Tue, 26 Mar 2024 02:57:20 +0000</pubDate>
    </item>
  </channel>
</rss>

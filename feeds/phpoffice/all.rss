<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for PHPOffice -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/phpoffice/all.rss</link>
    <description>The latest CVEs for PHPOffice -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Thu, 29 Aug 2024 14:23:05 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-45046|2024-08-29T13:11:25.969Z -- phpoffice -- phpspreadsheet
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-45046</link>
      <description>PHPSpreadsheet is a pure PHP library for reading and writing spreadsheet files. In affected versions `\PhpOffice\PhpSpreadsheet\Writer\Html` doesn't sanitize spreadsheet styling information such as font names, allowing an attacker to inject arbitrary JavaScript on the page. As a result an attacker may used a crafted spreadsheet to fully takeover a session of a user viewing spreadsheet files as HTML. This issue has been addressed in release version 2.1.0. All users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-45046|2024-08-29T13:11:25.969Z</guid>
      <pubDate>Wed, 28 Aug 2024 20:41:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-45048|2024-08-29T13:10:20.156Z -- phpoffice -- phpspreadsheet
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-45048</link>
      <description>PHPSpreadsheet is a pure PHP library for reading and writing spreadsheet files. Affected versions are subject to a bypassing of a filter which allows for an XXE-attack. This in turn allows attacker to obtain contents of local files, even if error reporting is muted. This vulnerability has been addressed in release version 2.2.1. All users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-45048|2024-08-29T13:10:20.156Z</guid>
      <pubDate>Wed, 28 Aug 2024 20:38:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-45048|2024-08-28T20:38:29.486Z -- phpoffice -- phpspreadsheet</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-45048</link>
      <description>PHPSpreadsheet is a pure PHP library for reading and writing spreadsheet files. Affected versions are subject to a bypassing of a filter which allows for an XXE-attack. This in turn allows attacker to obtain contents of local files, even if error reporting is muted. This vulnerability has been addressed in release version 2.2.1. All users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-45048|2024-08-28T20:38:29.486Z</guid>
      <pubDate>Wed, 28 Aug 2024 20:38:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-45046|2024-08-28T20:41:23.628Z -- phpoffice -- phpspreadsheet</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-45046</link>
      <description>PHPSpreadsheet is a pure PHP library for reading and writing spreadsheet files. In affected versions `\PhpOffice\PhpSpreadsheet\Writer\Html` doesn't sanitize spreadsheet styling information such as font names, allowing an attacker to inject arbitrary JavaScript on the page. As a result an attacker may used a crafted spreadsheet to fully takeover a session of a user viewing spreadsheet files as HTML. This issue has been addressed in release version 2.1.0. All users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-45046|2024-08-28T20:41:23.628Z</guid>
      <pubDate>Wed, 28 Aug 2024 20:41:23 +0000</pubDate>
    </item>
  </channel>
</rss>

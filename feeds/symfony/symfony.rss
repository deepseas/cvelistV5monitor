<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for symfony -- symfony</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/symfony/symfony.rss</link>
    <description>The latest CVEs for symfony -- symfony</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 11:20:12 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2020-5255|2024-08-04T08:22:09.086Z -- symfony -- symfony
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-5255</link>
      <description>In Symfony before versions 4.4.7 and 5.0.7, when a `Response` does not contain a `Content-Type` header, affected versions of Symfony can fallback to the format defined in the `Accept` header of the request, leading to a possible mismatch between the response&amp;#39;s content and `Content-Type` header. When the response is cached, this can prevent the use of the website by other users. This has been patched in versions 4.4.7 and 5.0.7.</description>
      <guid isPermaLink="false">CVE-2020-5255|2024-08-04T08:22:09.086Z</guid>
      <pubDate>Mon, 30 Mar 2020 19:30:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-41267|2024-08-04T03:08:31.656Z -- symfony -- symfony
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-41267</link>
      <description>Symfony/Http-Kernel is the HTTP kernel component for Symfony, a PHP framework for web and console applications and a set of reusable PHP components. Headers that are not part of the "trusted_headers" allowed list are ignored and protect users from "Cache poisoning" attacks. In Symfony 5.2, maintainers added support for the `X-Forwarded-Prefix` headers, but this header was accessible in SubRequest, even if it was not part of the "trusted_headers" allowed list. An attacker could leverage this opportunity to forge requests containing a `X-Forwarded-Prefix` header, leading to a web cache poisoning issue. Versions 5.3.12 and later have a patch to ensure that the `X-Forwarded-Prefix` header is not forwarded to subrequests when it is not trusted.</description>
      <guid isPermaLink="false">CVE-2021-41267|2024-08-04T03:08:31.656Z</guid>
      <pubDate>Wed, 24 Nov 2021 18:55:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-5275|2024-08-04T08:22:09.094Z -- symfony -- symfony
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-5275</link>
      <description>In symfony/security-http before versions 4.4.7 and 5.0.7, when a `Firewall` checks access control rule, it iterate overs each rule's attributes and stops as soon as the accessDecisionManager decides to grant access on the attribute, preventing the check of next attributes that should have been take into account in an unanimous strategy. The accessDecisionManager is now called with all attributes at once, allowing the unanimous strategy being applied on each attribute. This issue is patched in versions 4.4.7 and 5.0.7.</description>
      <guid isPermaLink="false">CVE-2020-5275|2024-08-04T08:22:09.094Z</guid>
      <pubDate>Mon, 30 Mar 2020 19:45:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-5274|2024-08-04T08:22:09.100Z -- symfony -- symfony
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-5274</link>
      <description>In Symfony before versions 5.0.5 and 4.4.5, some properties of the Exception were not properly escaped when the `ErrorHandler` rendered it stacktrace. In addition, the stacktrace were displayed even in a non-debug configuration. The ErrorHandler now escape alls properties of the exception, and the stacktrace is only display in debug configuration. This issue is patched in symfony/http-foundation versions 4.4.5 and 5.0.5</description>
      <guid isPermaLink="false">CVE-2020-5274|2024-08-04T08:22:09.100Z</guid>
      <pubDate>Mon, 30 Mar 2020 19:40:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-41268|2024-08-04T03:08:31.842Z -- symfony -- symfony
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-41268</link>
      <description>Symfony/SecurityBundle is the security system for Symfony, a PHP framework for web and console applications and a set of reusable PHP components. Since the rework of the Remember me cookie in version 5.3.0, the cookie is not invalidated when the user changes their password. Attackers can therefore maintain their access to the account even if the password is changed as long as they have had the chance to login once and get a valid remember me cookie. Starting with version 5.3.12, Symfony makes the password part of the signature by default. In that way, when the password changes, then the cookie is not valid anymore.</description>
      <guid isPermaLink="false">CVE-2021-41268|2024-08-04T03:08:31.842Z</guid>
      <pubDate>Wed, 24 Nov 2021 18:55:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-41270|2024-08-04T03:08:31.658Z -- symfony -- symfony
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-41270</link>
      <description>Symfony/Serializer handles serializing and deserializing data structures for Symfony, a PHP framework for web and console applications and a set of reusable PHP components. Symfony versions 4.1.0 before 4.4.35 and versions 5.0.0 before 5.3.12 are vulnerable to CSV injection, also known as formula injection. In Symfony 4.1, maintainers added the opt-in `csv_escape_formulas` option in the `CsvEncoder`, to prefix all cells starting with `=`, `+`, `-` or `@` with a tab `\t`. Since then, OWASP added 2 chars in that list: Tab (0x09) and Carriage return (0x0D). This makes the previous prefix char (Tab `\t`) part of the vulnerable characters, and OWASP suggests using the single quote `'` for prefixing the value. Starting with versions 4.4.34 and 5.3.12, Symfony now follows the OWASP recommendations and uses the single quote `'` to prefix formulas and add the prefix to cells starting by `\t`, `\r` as well as `=`, `+`, `-` and `@`.</description>
      <guid isPermaLink="false">CVE-2021-41270|2024-08-04T03:08:31.658Z</guid>
      <pubDate>Wed, 24 Nov 2021 19:05:11 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for aedart -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/aedart/all.rss</link>
    <description>The latest CVEs for aedart -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 21:22:46 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-30857|2024-08-02T14:37:15.508Z -- aedart -- ion
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-30857</link>
      <description>@aedart/support is the support package for Ion, a monorepo for JavaScript/TypeScript packages. Prior to version `0.6.1`, there is a possible prototype pollution issue for the `MetadataRecord`, when merged with a base class' metadata object, in `meta` decorator from the `@aedart/support` package. The likelihood of exploitation is questionable, given that a class's metadata can only be set or altered when the class is decorated via `meta()`. Furthermore, object(s) of sensitive nature would have to be stored as metadata, before this can lead to a security impact. The issue has been patched in version `0.6.1`.
</description>
      <guid isPermaLink="false">CVE-2023-30857|2024-08-02T14:37:15.508Z</guid>
      <pubDate>Fri, 28 Apr 2023 20:37:41 +0000</pubDate>
    </item>
  </channel>
</rss>

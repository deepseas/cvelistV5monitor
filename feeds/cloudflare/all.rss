<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Cloudflare -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/cloudflare/all.rss</link>
    <description>The latest CVEs for Cloudflare -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 12:25:31 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-2147|2024-08-03T00:24:44.346Z -- cloudflare -- warp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2147</link>
      <description>Cloudflare Warp for Windows from version 2022.2.95.0 contained an unquoted service path which enables arbitrary code execution leading to privilege escalation. The fix was released in version 2022.3.186.0.</description>
      <guid isPermaLink="false">CVE-2022-2147|2024-08-03T00:24:44.346Z</guid>
      <pubDate>Thu, 23 Jun 2022 21:00:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3512|2024-08-03T01:14:02.071Z -- cloudflare -- warp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3512</link>
      <description>Using warp-cli command "add-trusted-ssid", a user was able to disconnect WARP client and bypass the "Lock WARP switch" feature resulting in Zero Trust policies not being enforced on an affected endpoint.

</description>
      <guid isPermaLink="false">CVE-2022-3512|2024-08-03T01:14:02.071Z</guid>
      <pubDate>Fri, 28 Oct 2022 09:22:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3320|2024-08-03T01:07:06.479Z -- cloudflare -- warp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3320</link>
      <description>It was possible to bypass policies configured for Zero Trust Secure Web Gateway by using warp-cli 'set-custom-endpoint' subcommand. Using this command with an unreachable endpoint caused the WARP Client to disconnect and allowed bypassing administrative restrictions on a Zero Trust enrolled endpoint. 





</description>
      <guid isPermaLink="false">CVE-2022-3320|2024-08-03T01:07:06.479Z</guid>
      <pubDate>Fri, 28 Oct 2022 09:30:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4428|2024-08-03T01:41:44.657Z -- cloudflare -- warp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4428</link>
      <description>support_uri parameter in the WARP client local settings file (mdm.xml) lacked proper validation which allowed for privilege escalation and launching an arbitrary executable on the local machine upon clicking on the "Send feedback" option. An attacker with access to the local file system could use a crafted XML config file pointing to a malicious file or set a local path to the executable using Cloudflare Zero Trust Dashboard (for Zero Trust enrolled clients).
</description>
      <guid isPermaLink="false">CVE-2022-4428|2024-08-03T01:41:44.657Z</guid>
      <pubDate>Wed, 11 Jan 2023 16:49:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3322|2024-08-03T01:07:06.465Z -- cloudflare -- warp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3322</link>
      <description>Lock Warp switch is a feature of Zero Trust platform which, when
 enabled, prevents users of enrolled devices from disabling WARP client.
 Due to insufficient policy verification by WARP iOS client, this 
feature could be bypassed by using the "Disable WARP" quick action.



</description>
      <guid isPermaLink="false">CVE-2022-3322|2024-08-03T01:07:06.465Z</guid>
      <pubDate>Fri, 28 Oct 2022 09:25:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3337|2024-08-03T01:07:06.580Z -- cloudflare -- warp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3337</link>
      <description>It was possible for a user to delete a VPN profile from WARP mobile client on iOS platform despite the  Lock WARP switch https://developers.cloudflare.com/cloudflare-one/connections/connect-devices/warp/warp-settings/#lock-warp-switch  feature
 being enabled on Zero Trust Platform. This led to bypassing policies 
and restrictions enforced for enrolled devices by the Zero Trust 
platform.



</description>
      <guid isPermaLink="false">CVE-2022-3337|2024-08-03T01:07:06.580Z</guid>
      <pubDate>Fri, 28 Oct 2022 09:25:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4457|2024-08-03T01:41:44.612Z -- cloudflare -- warp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4457</link>
      <description>Due to a misconfiguration in the manifest file of the WARP client for Android, it was possible to a perform a task hijacking attack. An attacker could create a malicious mobile application which could hijack legitimate app and steal potentially sensitive information when installed on the victim's device.

</description>
      <guid isPermaLink="false">CVE-2022-4457|2024-08-03T01:41:44.612Z</guid>
      <pubDate>Wed, 11 Jan 2023 16:32:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3321|2024-08-03T01:07:06.458Z -- cloudflare -- warp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3321</link>
      <description>It was possible to bypass  Lock WARP switch feature https://developers.cloudflare.com/cloudflare-one/connections/connect-devices/warp/warp-settings/#lock-warp-switch  on the WARP iOS mobile client by enabling both "Disable for cellular networks" and "Disable for Wi-Fi networks" switches at once in the application settings. Such configuration caused the WARP client to disconnect and allowed the user to bypass restrictions and policies enforced by the Zero Trust platform.</description>
      <guid isPermaLink="false">CVE-2022-3321|2024-08-03T01:07:06.458Z</guid>
      <pubDate>Fri, 28 Oct 2022 09:24:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2145|2024-08-03T00:24:44.183Z -- cloudflare -- warp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2145</link>
      <description>Cloudflare WARP client for Windows (up to v. 2022.5.309.0) allowed creation of mount points from its ProgramData folder. During installation of the WARP client, it was possible to escalate privileges and overwrite SYSTEM protected files.</description>
      <guid isPermaLink="false">CVE-2022-2145|2024-08-03T00:24:44.183Z</guid>
      <pubDate>Tue, 28 Jun 2022 17:45:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2529|2024-08-03T00:39:08.043Z -- cloudflare -- goflow
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2529</link>
      <description>sflow decode package does not employ sufficient packet sanitisation which can lead to a denial of service attack. Attackers can craft malformed packets causing the process to consume large amounts of memory resulting in a denial of service.</description>
      <guid isPermaLink="false">CVE-2022-2529|2024-08-03T00:39:08.043Z</guid>
      <pubDate>Fri, 30 Sep 2022 10:45:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3616|2024-08-03T01:14:03.299Z -- cloudflare -- octorpki
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3616</link>
      <description>Attackers can create long chains of CAs that would lead to OctoRPKI exceeding its max iterations parameter. In consequence it would cause the program to crash, preventing it from finishing the validation and leading to a denial of service. Credits to Donika Mirdita and Haya Shulman - Fraunhofer SIT, ATHENE, who discovered and reported this vulnerability.

</description>
      <guid isPermaLink="false">CVE-2022-3616|2024-08-03T01:14:03.299Z</guid>
      <pubDate>Fri, 28 Oct 2022 06:24:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2225|2024-08-03T00:32:09.058Z -- cloudflare -- warp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2225</link>
      <description>By using warp-cli subcommands (disable-ethernet, disable-wifi), it was possible for a user without admin privileges to bypass configured Zero Trust security policies (e.g. Secure Web Gateway policies) and features such as 'Lock WARP switch'.</description>
      <guid isPermaLink="false">CVE-2022-2225|2024-08-03T00:32:09.058Z</guid>
      <pubDate>Tue, 26 Jul 2022 11:35:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1765|2024-08-01T18:48:22.108Z -- cloudflare -- quiche</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1765</link>
      <description>Cloudflare Quiche (through version 0.19.1/0.20.0) was affected by an unlimited resource allocation vulnerability causing rapid increase of memory usage of the system running quiche server or client.
A remote attacker could take advantage of this vulnerability by repeatedly sending an unlimited number of 1-RTT CRYPTO frames after previously completing the QUIC handshake.
Exploitation was possible for the duration of the connection which could be extended by the attacker. 
quiche 0.19.2 and 0.20.1 are the earliest versions containing the fix for this issue.</description>
      <guid isPermaLink="false">CVE-2024-1765|2024-08-01T18:48:22.108Z</guid>
      <pubDate>Tue, 12 Mar 2024 18:04:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1410|2024-08-01T18:40:20.619Z -- cloudflare -- quiche</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1410</link>
      <description>Cloudflare quiche was discovered to be vulnerable to unbounded storage of information related to connection ID retirement, which could lead to excessive resource consumption. Each QUIC connection possesses a set of connection Identifiers (IDs); see  RFC 9000 Section 5.1 https://datatracker.ietf.org/doc/html/rfc9000#section-5.1 . Endpoints declare the number of active connection IDs they are willing to support using the active_connection_id_limit transport parameter. The peer can create new IDs using a NEW_CONNECTION_ID frame but must stay within the active ID limit. This is done by retirement of old IDs, the endpoint sends NEW_CONNECTION_ID includes a value in the retire_prior_to field, which elicits a RETIRE_CONNECTION_ID frame as confirmation. An unauthenticated remote attacker can exploit the vulnerability by sending NEW_CONNECTION_ID frames and manipulating the connection (e.g. by restricting the peer's congestion window size) so that RETIRE_CONNECTION_ID frames can only be sent at a slower rate than they are received, leading to storage of information related to connection IDs in an unbounded queue. Quiche versions 0.19.2 and 0.20.1 are the earliest to address this problem. There is no workaround for affected versions.</description>
      <guid isPermaLink="false">CVE-2024-1410|2024-08-01T18:40:20.619Z</guid>
      <pubDate>Tue, 12 Mar 2024 18:06:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1765|2024-06-04T18:00:25.467Z -- cloudflare -- quiche</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1765</link>
      <description>Cloudflare Quiche (through version 0.19.1/0.20.0) was affected by an unlimited resource allocation vulnerability causing rapid increase of memory usage of the system running quiche server or client.
A remote attacker could take advantage of this vulnerability by repeatedly sending an unlimited number of 1-RTT CRYPTO frames after previously completing the QUIC handshake.
Exploitation was possible for the duration of the connection which could be extended by the attacker. 
quiche 0.19.2 and 0.20.1 are the earliest versions containing the fix for this issue.</description>
      <guid isPermaLink="false">CVE-2024-1765|2024-06-04T18:00:25.467Z</guid>
      <pubDate>Tue, 12 Mar 2024 18:04:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1410|2024-06-04T17:59:28.523Z -- cloudflare -- quiche</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1410</link>
      <description>Cloudflare quiche was discovered to be vulnerable to unbounded storage of information related to connection ID retirement, which could lead to excessive resource consumption. Each QUIC connection possesses a set of connection Identifiers (IDs); see  RFC 9000 Section 5.1 https://datatracker.ietf.org/doc/html/rfc9000#section-5.1 . Endpoints declare the number of active connection IDs they are willing to support using the active_connection_id_limit transport parameter. The peer can create new IDs using a NEW_CONNECTION_ID frame but must stay within the active ID limit. This is done by retirement of old IDs, the endpoint sends NEW_CONNECTION_ID includes a value in the retire_prior_to field, which elicits a RETIRE_CONNECTION_ID frame as confirmation. An unauthenticated remote attacker can exploit the vulnerability by sending NEW_CONNECTION_ID frames and manipulating the connection (e.g. by restricting the peer's congestion window size) so that RETIRE_CONNECTION_ID frames can only be sent at a slower rate than they are received, leading to storage of information related to connection IDs in an unbounded queue. Quiche versions 0.19.2 and 0.20.1 are the earliest to address this problem. There is no workaround for affected versions.</description>
      <guid isPermaLink="false">CVE-2024-1410|2024-06-04T17:59:28.523Z</guid>
      <pubDate>Tue, 12 Mar 2024 18:06:05 +0000</pubDate>
    </item>
  </channel>
</rss>

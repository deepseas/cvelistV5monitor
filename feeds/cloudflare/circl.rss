<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Cloudflare -- CIRCL</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/cloudflare/circl.rss</link>
    <description>The latest CVEs for Cloudflare -- CIRCL</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 17:22:49 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-1732|2024-08-02T05:57:24.987Z -- cloudflare -- circl
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-1732</link>
      <description>When sampling randomness for a shared secret, the implementation of Kyber and FrodoKEM, did not check whether crypto/rand.Read() returns an error. In rare deployment cases (error thrown by the Read() function), this could lead to a predictable shared secret.

The tkn20 and blindrsa components did not check whether enough randomness was returned from the user provided randomness source. Typically the user provides crypto/rand.Reader, which in the vast majority of cases will always return the right number random bytes. In the cases where it does not, or the user provides a source that does not, the blinding for blindrsa is weak and integrity of the plaintext is not ensured in tkn20.

</description>
      <guid isPermaLink="false">CVE-2023-1732|2024-08-02T05:57:24.987Z</guid>
      <pubDate>Wed, 10 May 2023 11:41:53 +0000</pubDate>
    </item>
  </channel>
</rss>

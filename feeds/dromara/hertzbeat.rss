<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for dromara -- hertzbeat</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/dromara/hertzbeat.rss</link>
    <description>The latest CVEs for dromara -- hertzbeat</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 14 Aug 2024 20:22:54 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-51388|2024-08-14T19:09:04.986Z -- dromara -- hertzbeat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-51388</link>
      <description>Hertzbeat is a real-time monitoring system. In `CalculateAlarm.java`, `AviatorEvaluator` is used to directly execute the expression function, and no security policy is configured, resulting in AviatorScript (which can execute any static method by default) script injection. Version 1.4.1 fixes this vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-51388|2024-08-14T19:09:04.986Z</guid>
      <pubDate>Thu, 22 Feb 2024 15:53:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-51653|2024-07-25T18:12:39.492Z -- dromara -- hertzbeat</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-51653</link>
      <description>Hertzbeat is a real-time monitoring system. In the implementation of `JmxCollectImpl.java`, `JMXConnectorFactory.connect` is vulnerable to JNDI injection. The corresponding interface is `/api/monitor/detect`. If there is a URL field, the address will be used by default. When the URL is `service:jmx:rmi:///jndi/rmi://xxxxxxx:1099/localHikari`, it can be exploited to cause remote code execution. Version 1.4.1 contains a fix for this issue.</description>
      <guid isPermaLink="false">CVE-2023-51653|2024-07-25T18:12:39.492Z</guid>
      <pubDate>Thu, 22 Feb 2024 15:39:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-51388|2024-02-22T15:53:46.458Z -- dromara -- hertzbeat</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-51388</link>
      <description>Hertzbeat is a real-time monitoring system. In `CalculateAlarm.java`, `AviatorEvaluator` is used to directly execute the expression function, and no security policy is configured, resulting in AviatorScript (which can execute any static method by default) script injection. Version 1.4.1 fixes this vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-51388|2024-02-22T15:53:46.458Z</guid>
      <pubDate>Thu, 22 Feb 2024 15:53:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-51653|2024-02-22T15:39:49.280Z -- dromara -- hertzbeat</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-51653</link>
      <description>Hertzbeat is a real-time monitoring system. In the implementation of `JmxCollectImpl.java`, `JMXConnectorFactory.connect` is vulnerable to JNDI injection. The corresponding interface is `/api/monitor/detect`. If there is a URL field, the address will be used by default. When the URL is `service:jmx:rmi:///jndi/rmi://xxxxxxx:1099/localHikari`, it can be exploited to cause remote code execution. Version 1.4.1 contains a fix for this issue.</description>
      <guid isPermaLink="false">CVE-2023-51653|2024-02-22T15:39:49.280Z</guid>
      <pubDate>Thu, 22 Feb 2024 15:39:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-51389|2024-02-22T15:59:29.842Z -- dromara -- hertzbeat</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-51389</link>
      <description>Hertzbeat is a real-time monitoring system. At the interface of `/define/yml`, SnakeYAML is used as a parser to parse yml content, but no security configuration is used, resulting in a YAML deserialization vulnerability. Version 1.4.1 fixes this vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-51389|2024-02-22T15:59:29.842Z</guid>
      <pubDate>Thu, 22 Feb 2024 15:59:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-51388|2024-08-02T22:32:09.231Z -- dromara -- hertzbeat</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-51388</link>
      <description>Hertzbeat is a real-time monitoring system. In `CalculateAlarm.java`, `AviatorEvaluator` is used to directly execute the expression function, and no security policy is configured, resulting in AviatorScript (which can execute any static method by default) script injection. Version 1.4.1 fixes this vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-51388|2024-08-02T22:32:09.231Z</guid>
      <pubDate>Thu, 22 Feb 2024 15:53:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-51389|2024-08-02T22:32:09.412Z -- dromara -- hertzbeat</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-51389</link>
      <description>Hertzbeat is a real-time monitoring system. At the interface of `/define/yml`, SnakeYAML is used as a parser to parse yml content, but no security configuration is used, resulting in a YAML deserialization vulnerability. Version 1.4.1 fixes this vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-51389|2024-08-02T22:32:09.412Z</guid>
      <pubDate>Thu, 22 Feb 2024 15:59:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-51653|2024-08-02T22:40:34.196Z -- dromara -- hertzbeat</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-51653</link>
      <description>Hertzbeat is a real-time monitoring system. In the implementation of `JmxCollectImpl.java`, `JMXConnectorFactory.connect` is vulnerable to JNDI injection. The corresponding interface is `/api/monitor/detect`. If there is a URL field, the address will be used by default. When the URL is `service:jmx:rmi:///jndi/rmi://xxxxxxx:1099/localHikari`, it can be exploited to cause remote code execution. Version 1.4.1 contains a fix for this issue.</description>
      <guid isPermaLink="false">CVE-2023-51653|2024-08-02T22:40:34.196Z</guid>
      <pubDate>Thu, 22 Feb 2024 15:39:49 +0000</pubDate>
    </item>
  </channel>
</rss>

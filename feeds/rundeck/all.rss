<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for rundeck -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/rundeck/all.rss</link>
    <description>The latest CVEs for rundeck -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 09:23:31 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-29186|2024-08-03T06:17:53.977Z -- rundeck -- rundeck
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-29186</link>
      <description>Rundeck is an open source automation service with a web console, command line tools and a WebAPI. Rundeck community and rundeck-enterprise docker images contained a pre-generated SSH keypair. If the id_rsa.pub public key of the keypair was copied to authorized_keys files on remote host, those hosts would allow access to anyone with the exposed private credentials. This misconfiguration only impacts Rundeck Docker instances of PagerDutyÂ® Process Automation On Prem (formerly Rundeck) version 4.0 and earlier, not Debian, RPM or .WAR. Additionally, the id_rsa.pub file would have to be copied from the Docker image filesystem contents without overwriting it and used to configure SSH access on a host. A patch on Rundeck's `main` branch has removed the pre-generated SSH key pair, but it does not remove exposed keys that have been configured. To patch, users must run a script on hosts in their environment to search for exposed keys and rotate them. Two workarounds are available: Do not use any pre-existing public key file from the rundeck docker images to allow SSH access by adding it to authorized_keys files and, if you have copied the public key file included in the docker image, remove it from any authorized_keys files.</description>
      <guid isPermaLink="false">CVE-2022-29186|2024-08-03T06:17:53.977Z</guid>
      <pubDate>Fri, 20 May 2022 20:20:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-31044|2024-08-03T07:03:40.301Z -- rundeck -- rundeck
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-31044</link>
      <description>Rundeck is an open source automation service with a web console, command line tools and a WebAPI. The Key Storage converter plugin mechanism was not enabled correctly in Rundeck 4.2.0 and 4.2.1, resulting in use of the encryption layer for Key Storage possibly not working. Any credentials created or overwritten using Rundeck 4.2.0 or 4.2.1 might result in them being written in plaintext to the backend storage. This affects those using any `Storage Converter` plugin. Rundeck 4.3.1 and 4.2.2 have fixed the code and upon upgrade will re-encrypt any plain text values. Version 4.3.0 does not have the vulnerability, but does not include the patch to re-encrypt plain text values if 4.2.0 or 4.2.1 were used. To prevent plaintext credentials from being stored in Rundeck 4.2.0/4.2.1, write access to key storage can be disabled via ACLs. After upgrading to 4.3.1 or later, write access can be restored.</description>
      <guid isPermaLink="false">CVE-2022-31044|2024-08-03T07:03:40.301Z</guid>
      <pubDate>Wed, 15 Jun 2022 19:00:22 +0000</pubDate>
    </item>
  </channel>
</rss>

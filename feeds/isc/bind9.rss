<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for ISC -- BIND9</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/isc/bind9.rss</link>
    <description>The latest CVEs for ISC -- BIND9</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Mon, 16 Sep 2024 23:21:21 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2020-8617|2024-09-16T20:26:32.566Z -- isc -- bind9
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-8617</link>
      <description>Using a specially-crafted message, an attacker may potentially cause a BIND server to reach an inconsistent state if the attacker knows (or successfully guesses) the name of a TSIG key used by the server. Since BIND, by default, configures a local session key even on servers whose configuration does not otherwise make use of it, almost all current BIND servers are vulnerable. In releases of BIND dating from March 2018 and after, an assertion check in tsig.c detects this inconsistent state and deliberately exits. Prior to the introduction of the check the server would continue operating in an inconsistent state, with potentially harmful results.</description>
      <guid isPermaLink="false">CVE-2020-8617|2024-09-16T20:26:32.566Z</guid>
      <pubDate>Tue, 19 May 2020 14:05:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25215|2024-09-16T22:02:24.791Z -- isc -- bind9
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25215</link>
      <description>In BIND 9.0.0 -&gt; 9.11.29, 9.12.0 -&gt; 9.16.13, and versions BIND 9.9.3-S1 -&gt; 9.11.29-S1 and 9.16.8-S1 -&gt; 9.16.13-S1 of BIND Supported Preview Edition, as well as release versions 9.17.0 -&gt; 9.17.11 of the BIND 9.17 development branch, when a vulnerable version of named receives a query for a record triggering the flaw described above, the named process will terminate due to a failed assertion check. The vulnerability affects all currently maintained BIND 9 branches (9.11, 9.11-S, 9.16, 9.16-S, 9.17) as well as all other versions of BIND 9.</description>
      <guid isPermaLink="false">CVE-2021-25215|2024-09-16T22:02:24.791Z</guid>
      <pubDate>Thu, 29 Apr 2021 00:55:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-6477|2024-09-16T16:47:45.899Z -- isc -- bind9
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-6477</link>
      <description>With pipelining enabled each incoming query on a TCP connection requires a similar resource allocation to a query received via UDP or via TCP without pipelining enabled. A client using a TCP-pipelined connection to a server could consume more resources than the server has been provisioned to handle. When a TCP connection with a large number of pipelined queries is closed, the load on the server releasing these multiple resources can cause it to become unresponsive, even for queries that can be answered authoritatively or from cache. (This is most likely to be perceived as an intermittent server problem).</description>
      <guid isPermaLink="false">CVE-2019-6477|2024-09-16T16:47:45.899Z</guid>
      <pubDate>Tue, 26 Nov 2019 16:11:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-8621|2024-09-16T16:18:00.777Z -- isc -- bind9
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-8621</link>
      <description>In BIND 9.14.0 -&gt; 9.16.5, 9.17.0 -&gt; 9.17.3, If a server is configured with both QNAME minimization and 'forward first' then an attacker who can send queries to it may be able to trigger the condition that will cause the server to crash. Servers that 'forward only' are not affected.</description>
      <guid isPermaLink="false">CVE-2020-8621|2024-09-16T16:18:00.777Z</guid>
      <pubDate>Fri, 21 Aug 2020 20:50:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-8622|2024-09-16T17:14:14.760Z -- isc -- bind9
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-8622</link>
      <description>In BIND 9.0.0 -&gt; 9.11.21, 9.12.0 -&gt; 9.16.5, 9.17.0 -&gt; 9.17.3, also affects 9.9.3-S1 -&gt; 9.11.21-S1 of the BIND 9 Supported Preview Edition, An attacker on the network path for a TSIG-signed request, or operating the server receiving the TSIG-signed request, could send a truncated response to that request, triggering an assertion failure, causing the server to exit. Alternately, an off-path attacker would have to correctly guess when a TSIG-signed request was sent, along with other characteristics of the packet and message, and spoof a truncated response to trigger an assertion failure, causing the server to exit.</description>
      <guid isPermaLink="false">CVE-2020-8622|2024-09-16T17:14:14.760Z</guid>
      <pubDate>Fri, 21 Aug 2020 20:50:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25216|2024-09-16T22:25:23.581Z -- isc -- bind9
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25216</link>
      <description>In BIND 9.5.0 -&gt; 9.11.29, 9.12.0 -&gt; 9.16.13, and versions BIND 9.11.3-S1 -&gt; 9.11.29-S1 and 9.16.8-S1 -&gt; 9.16.13-S1 of BIND Supported Preview Edition, as well as release versions 9.17.0 -&gt; 9.17.1 of the BIND 9.17 development branch, BIND servers are vulnerable if they are running an affected version and are configured to use GSS-TSIG features. In a configuration which uses BIND's default settings the vulnerable code path is not exposed, but a server can be rendered vulnerable by explicitly setting values for the tkey-gssapi-keytab or tkey-gssapi-credential configuration options. Although the default configuration is not vulnerable, GSS-TSIG is frequently used in networks where BIND is integrated with Samba, as well as in mixed-server environments that combine BIND servers with Active Directory domain controllers. For servers that meet these conditions, the ISC SPNEGO implementation is vulnerable to various attacks, depending on the CPU architecture for which BIND was built: For named binaries compiled for 64-bit platforms, this flaw can be used to trigger a buffer over-read, leading to a server crash. For named binaries compiled for 32-bit platforms, this flaw can be used to trigger a server crash due to a buffer overflow and possibly also to achieve remote code execution. We have determined that standard SPNEGO implementations are available in the MIT and Heimdal Kerberos libraries, which support a broad range of operating systems, rendering the ISC implementation unnecessary and obsolete. Therefore, to reduce the attack surface for BIND users, we will be removing the ISC SPNEGO implementation in the April releases of BIND 9.11 and 9.16 (it had already been dropped from BIND 9.17). We would not normally remove something from a stable ESV (Extended Support Version) of BIND, but since system libraries can replace the ISC SPNEGO implementation, we have made an exception in this case for reasons of stability and security.</description>
      <guid isPermaLink="false">CVE-2021-25216|2024-09-16T22:25:23.581Z</guid>
      <pubDate>Thu, 29 Apr 2021 00:55:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-8625|2024-09-16T22:40:02.277Z -- isc -- bind9
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-8625</link>
      <description>BIND servers are vulnerable if they are running an affected version and are configured to use GSS-TSIG features. In a configuration which uses BIND's default settings the vulnerable code path is not exposed, but a server can be rendered vulnerable by explicitly setting valid values for the tkey-gssapi-keytab or tkey-gssapi-credentialconfiguration options. Although the default configuration is not vulnerable, GSS-TSIG is frequently used in networks where BIND is integrated with Samba, as well as in mixed-server environments that combine BIND servers with Active Directory domain controllers. The most likely outcome of a successful exploitation of the vulnerability is a crash of the named process. However, remote code execution, while unproven, is theoretically possible. Affects: BIND 9.5.0 -&gt; 9.11.27, 9.12.0 -&gt; 9.16.11, and versions BIND 9.11.3-S1 -&gt; 9.11.27-S1 and 9.16.8-S1 -&gt; 9.16.11-S1 of BIND Supported Preview Edition. Also release versions 9.17.0 -&gt; 9.17.1 of the BIND 9.17 development branch</description>
      <guid isPermaLink="false">CVE-2020-8625|2024-09-16T22:40:02.277Z</guid>
      <pubDate>Wed, 17 Feb 2021 22:40:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25219|2024-09-16T17:33:38.865Z -- isc -- bind9
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25219</link>
      <description>In BIND 9.3.0 -&gt; 9.11.35, 9.12.0 -&gt; 9.16.21, and versions 9.9.3-S1 -&gt; 9.11.35-S1 and 9.16.8-S1 -&gt; 9.16.21-S1 of BIND Supported Preview Edition, as well as release versions 9.17.0 -&gt; 9.17.18 of the BIND 9.17 development branch, exploitation of broken authoritative servers using a flaw in response processing can cause degradation in BIND resolver performance. The way the lame cache is currently designed makes it possible for its internal data structures to grow almost infinitely, which may cause significant delays in client query processing.</description>
      <guid isPermaLink="false">CVE-2021-25219|2024-09-16T17:33:38.865Z</guid>
      <pubDate>Wed, 27 Oct 2021 21:10:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-8624|2024-09-16T17:52:52.920Z -- isc -- bind9
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-8624</link>
      <description>In BIND 9.9.12 -&gt; 9.9.13, 9.10.7 -&gt; 9.10.8, 9.11.3 -&gt; 9.11.21, 9.12.1 -&gt; 9.16.5, 9.17.0 -&gt; 9.17.3, also affects 9.9.12-S1 -&gt; 9.9.13-S1, 9.11.3-S1 -&gt; 9.11.21-S1 of the BIND 9 Supported Preview Edition, An attacker who has been granted privileges to change a specific subset of the zone's content could abuse these unintended additional privileges to update other contents of the zone.</description>
      <guid isPermaLink="false">CVE-2020-8624|2024-09-16T17:52:52.920Z</guid>
      <pubDate>Fri, 21 Aug 2020 20:50:20 +0000</pubDate>
    </item>
  </channel>
</rss>

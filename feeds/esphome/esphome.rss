<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for esphome -- esphome</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/esphome/esphome.rss</link>
    <description>The latest CVEs for esphome -- esphome</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 19:19:51 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2021-41104|2024-08-04T02:59:31.350Z -- esphome -- esphome
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-41104</link>
      <description>ESPHome is a system to control the ESP8266/ESP32. Anyone with web_server enabled and HTTP basic auth configured on version 2021.9.1 or older is vulnerable to an issue in which `web_server` allows over-the-air (OTA) updates without checking user defined basic auth username &amp; password. This issue is patched in version 2021.9.2. As a workaround, one may disable or remove `web_server`.</description>
      <guid isPermaLink="false">CVE-2021-41104|2024-08-04T02:59:31.350Z</guid>
      <pubDate>Tue, 28 Sep 2021 15:15:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29019|2024-07-03T17:34:17.347Z -- esphome -- esphome</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-29019</link>
      <description>ESPHome is a system to control microcontrollers remotely through Home Automation systems. API endpoints in dashboard component of ESPHome version 2023.12.9 (command line installation) are vulnerable to Cross-Site Request Forgery (CSRF) allowing remote attackers to carry out attacks against a logged user of the dashboard to perform operations on configuration files (create, edit, delete). It is possible for a malicious actor to create a specifically crafted web page that triggers a cross site request against ESPHome, this allows bypassing the authentication for API calls on the platform. This vulnerability allows bypassing authentication on API calls accessing configuration file operations on the behalf of a logged user. In order to trigger the vulnerability, the victim must visit a weaponized page. In addition to this, it is possible to chain this vulnerability with GHSA-9p43-hj5j-96h5/ CVE-2024-27287 to obtain a complete takeover of the user account. Version 2024.3.0 contains a patch for this issue.</description>
      <guid isPermaLink="false">CVE-2024-29019|2024-07-03T17:34:17.347Z</guid>
      <pubDate>Thu, 21 Mar 2024 15:54:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27081|2024-02-26T16:29:21.620Z -- esphome -- esphome</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27081</link>
      <description>ESPHome is a system to control your ESP8266/ESP32. A security misconfiguration in the edit configuration file API in the dashboard component of ESPHome version 2023.12.9 (command line installation) allows authenticated remote attackers to read and write arbitrary files under the configuration directory rendering remote code execution possible.  This vulnerability is patched in 2024.2.1.</description>
      <guid isPermaLink="false">CVE-2024-27081|2024-02-26T16:29:21.620Z</guid>
      <pubDate>Mon, 26 Feb 2024 16:29:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27287|2024-03-06T18:19:48.117Z -- esphome -- esphome</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27287</link>
      <description>ESPHome is a system to control your ESP8266/ESP32 for Home Automation systems. Starting in version 2023.12.9 and prior to version 2024.2.2, editing the configuration file API in dashboard component of ESPHome version 2023.12.9 (command line installation and Home Assistant add-on) serves unsanitized data with `Content-Type: text/html; charset=UTF-8`, allowing a remote authenticated user to inject arbitrary web script and exfiltrate session cookies via Cross-Site scripting. It is possible for a malicious authenticated user to inject arbitrary Javascript in configuration files using a POST request to the /edit endpoint, the configuration parameter allows to specify the file to write. To trigger the XSS vulnerability, the victim must visit the page` /edit?configuration=[xss file]`. Abusing this vulnerability a malicious actor could perform operations on the dashboard on the behalf of a logged user, access sensitive information, create, edit and delete configuration files and flash firmware on managed boards.
In addition to this, cookies are not correctly secured, allowing the exfiltration of session cookie values. Version 2024.2.2 contains a patch for this issue.</description>
      <guid isPermaLink="false">CVE-2024-27287|2024-03-06T18:19:48.117Z</guid>
      <pubDate>Wed, 06 Mar 2024 18:19:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29019|2024-03-21T15:54:42.548Z -- esphome -- esphome</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-29019</link>
      <description>ESPHome is a system to control microcontrollers remotely through Home Automation systems. API endpoints in dashboard component of ESPHome version 2023.12.9 (command line installation) are vulnerable to Cross-Site Request Forgery (CSRF) allowing remote attackers to carry out attacks against a logged user of the dashboard to perform operations on configuration files (create, edit, delete). It is possible for a malicious actor to create a specifically crafted web page that triggers a cross site request against ESPHome, this allows bypassing the authentication for API calls on the platform. This vulnerability allows bypassing authentication on API calls accessing configuration file operations on the behalf of a logged user. In order to trigger the vulnerability, the victim must visit a weaponized page. In addition to this, it is possible to chain this vulnerability with GHSA-9p43-hj5j-96h5/ CVE-2024-27287 to obtain a complete takeover of the user account. Version 2024.3.0 contains a patch for this issue.</description>
      <guid isPermaLink="false">CVE-2024-29019|2024-03-21T15:54:42.548Z</guid>
      <pubDate>Thu, 21 Mar 2024 15:54:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27287|2024-08-02T00:27:59.920Z -- esphome -- esphome</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27287</link>
      <description>ESPHome is a system to control your ESP8266/ESP32 for Home Automation systems. Starting in version 2023.12.9 and prior to version 2024.2.2, editing the configuration file API in dashboard component of ESPHome version 2023.12.9 (command line installation and Home Assistant add-on) serves unsanitized data with `Content-Type: text/html; charset=UTF-8`, allowing a remote authenticated user to inject arbitrary web script and exfiltrate session cookies via Cross-Site scripting. It is possible for a malicious authenticated user to inject arbitrary Javascript in configuration files using a POST request to the /edit endpoint, the configuration parameter allows to specify the file to write. To trigger the XSS vulnerability, the victim must visit the page` /edit?configuration=[xss file]`. Abusing this vulnerability a malicious actor could perform operations on the dashboard on the behalf of a logged user, access sensitive information, create, edit and delete configuration files and flash firmware on managed boards.
In addition to this, cookies are not correctly secured, allowing the exfiltration of session cookie values. Version 2024.2.2 contains a patch for this issue.</description>
      <guid isPermaLink="false">CVE-2024-27287|2024-08-02T00:27:59.920Z</guid>
      <pubDate>Wed, 06 Mar 2024 18:19:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29019|2024-08-02T01:03:51.717Z -- esphome -- esphome</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-29019</link>
      <description>ESPHome is a system to control microcontrollers remotely through Home Automation systems. API endpoints in dashboard component of ESPHome version 2023.12.9 (command line installation) are vulnerable to Cross-Site Request Forgery (CSRF) allowing remote attackers to carry out attacks against a logged user of the dashboard to perform operations on configuration files (create, edit, delete). It is possible for a malicious actor to create a specifically crafted web page that triggers a cross site request against ESPHome, this allows bypassing the authentication for API calls on the platform. This vulnerability allows bypassing authentication on API calls accessing configuration file operations on the behalf of a logged user. In order to trigger the vulnerability, the victim must visit a weaponized page. In addition to this, it is possible to chain this vulnerability with GHSA-9p43-hj5j-96h5/ CVE-2024-27287 to obtain a complete takeover of the user account. Version 2024.3.0 contains a patch for this issue.</description>
      <guid isPermaLink="false">CVE-2024-29019|2024-08-02T01:03:51.717Z</guid>
      <pubDate>Thu, 21 Mar 2024 15:54:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27081|2024-08-02T00:27:57.835Z -- esphome -- esphome</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27081</link>
      <description>ESPHome is a system to control your ESP8266/ESP32. A security misconfiguration in the edit configuration file API in the dashboard component of ESPHome version 2023.12.9 (command line installation) allows authenticated remote attackers to read and write arbitrary files under the configuration directory rendering remote code execution possible.  This vulnerability is patched in 2024.2.1.</description>
      <guid isPermaLink="false">CVE-2024-27081|2024-08-02T00:27:57.835Z</guid>
      <pubDate>Mon, 26 Feb 2024 16:29:21 +0000</pubDate>
    </item>
  </channel>
</rss>

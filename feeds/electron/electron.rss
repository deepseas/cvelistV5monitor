<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for electron -- electron</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/electron/electron.rss</link>
    <description>The latest CVEs for electron -- electron</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 09:23:25 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2020-4075|2024-08-04T07:52:20.843Z -- electron -- electron
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-4075</link>
      <description>In Electron before versions 7.2.4, 8.2.4, and 9.0.0-beta21, arbitrary local file read is possible by defining unsafe window options on a child window opened via window.open. As a workaround, ensure you are calling `event.preventDefault()` on all new-window events where the `url` or `options` is not something you expect. This is fixed in versions 9.0.0-beta.21, 8.2.4 and 7.2.4.</description>
      <guid isPermaLink="false">CVE-2020-4075|2024-08-04T07:52:20.843Z</guid>
      <pubDate>Tue, 07 Jul 2020 00:05:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-39184|2024-08-04T01:58:18.275Z -- electron -- electron
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-39184</link>
      <description>Electron is a framework for writing cross-platform desktop applications using JavaScript, HTML and CSS. A vulnerability in versions prior to 11.5.0, 12.1.0, and 13.3.0 allows a sandboxed renderer to request a "thumbnail" image of an arbitrary file on the user's system. The thumbnail can potentially include significant parts of the original file, including textual data in many cases. Versions 15.0.0-alpha.10, 14.0.0, 13.3.0, 12.1.0, and 11.5.0 all contain a fix for the vulnerability. Two workarounds aside from upgrading are available. One may make the vulnerability significantly more difficult for an attacker to exploit by enabling `contextIsolation` in one's app. One may also disable the functionality of the `createThumbnailFromPath` API if one does not need it.</description>
      <guid isPermaLink="false">CVE-2021-39184|2024-08-04T01:58:18.275Z</guid>
      <pubDate>Tue, 12 Oct 2021 19:05:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-4076|2024-08-04T07:52:20.967Z -- electron -- electron
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-4076</link>
      <description>In Electron before versions 7.2.4, 8.2.4, and 9.0.0-beta21, there is a context isolation bypass. Code running in the main world context in the renderer can reach into the isolated Electron context and perform privileged actions. Apps using contextIsolation are affected. This is fixed in versions 9.0.0-beta.21, 8.2.4 and 7.2.4.</description>
      <guid isPermaLink="false">CVE-2020-4076|2024-08-04T07:52:20.967Z</guid>
      <pubDate>Tue, 07 Jul 2020 00:05:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-4077|2024-08-04T07:52:20.939Z -- electron -- electron
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-4077</link>
      <description>In Electron before versions 7.2.4, 8.2.4, and 9.0.0-beta21, there is a context isolation bypass. Code running in the main world context in the renderer can reach into the isolated Electron context and perform privileged actions. Apps using both `contextIsolation` and `contextBridge` are affected. This is fixed in versions 9.0.0-beta.21, 8.2.4 and 7.2.4.</description>
      <guid isPermaLink="false">CVE-2020-4077|2024-08-04T07:52:20.939Z</guid>
      <pubDate>Tue, 07 Jul 2020 00:05:16 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for electron -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/electron/all.rss</link>
    <description>The latest CVEs for electron -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 02:31:01 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2021-39184|2024-08-04T01:58:18.275Z -- electron -- electron
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-39184</link>
      <description>Electron is a framework for writing cross-platform desktop applications using JavaScript, HTML and CSS. A vulnerability in versions prior to 11.5.0, 12.1.0, and 13.3.0 allows a sandboxed renderer to request a "thumbnail" image of an arbitrary file on the user's system. The thumbnail can potentially include significant parts of the original file, including textual data in many cases. Versions 15.0.0-alpha.10, 14.0.0, 13.3.0, 12.1.0, and 11.5.0 all contain a fix for the vulnerability. Two workarounds aside from upgrading are available. One may make the vulnerability significantly more difficult for an attacker to exploit by enabling `contextIsolation` in one's app. One may also disable the functionality of the `createThumbnailFromPath` API if one does not need it.</description>
      <guid isPermaLink="false">CVE-2021-39184|2024-08-04T01:58:18.275Z</guid>
      <pubDate>Tue, 12 Oct 2021 19:05:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29900|2024-07-30T17:50:41.198Z -- electron -- packager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-29900</link>
      <description>Electron Packager bundles Electron-based application source code with a renamed Electron executable and supporting files into folders ready for distribution. A random segment of ~1-10kb of Node.js heap memory allocated either side of a known buffer will be leaked into the final executable. This memory _could_ contain sensitive information such as environment variables, secrets files, etc. This issue is patched in 18.3.1.</description>
      <guid isPermaLink="false">CVE-2024-29900|2024-07-30T17:50:41.198Z</guid>
      <pubDate>Fri, 29 Mar 2024 15:15:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29900|2024-03-29T15:15:45.766Z -- electron -- packager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-29900</link>
      <description>Electron Packager bundles Electron-based application source code with a renamed Electron executable and supporting files into folders ready for distribution. A random segment of ~1-10kb of Node.js heap memory allocated either side of a known buffer will be leaked into the final executable. This memory _could_ contain sensitive information such as environment variables, secrets files, etc. This issue is patched in 18.3.1.</description>
      <guid isPermaLink="false">CVE-2024-29900|2024-03-29T15:15:45.766Z</guid>
      <pubDate>Fri, 29 Mar 2024 15:15:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29900|2024-08-02T01:17:58.508Z -- electron -- packager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-29900</link>
      <description>Electron Packager bundles Electron-based application source code with a renamed Electron executable and supporting files into folders ready for distribution. A random segment of ~1-10kb of Node.js heap memory allocated either side of a known buffer will be leaked into the final executable. This memory _could_ contain sensitive information such as environment variables, secrets files, etc. This issue is patched in 18.3.1.</description>
      <guid isPermaLink="false">CVE-2024-29900|2024-08-02T01:17:58.508Z</guid>
      <pubDate>Fri, 29 Mar 2024 15:15:45 +0000</pubDate>
    </item>
  </channel>
</rss>

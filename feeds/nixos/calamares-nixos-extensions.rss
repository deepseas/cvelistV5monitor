<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for NixOS -- calamares-nixos-extensions</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/nixos/calamares-nixos-extensions.rss</link>
    <description>The latest CVEs for NixOS -- calamares-nixos-extensions</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Tue, 03 Sep 2024 18:24:34 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-43378|2024-09-03T18:02:47.756Z -- nixos -- calamares-nixos-extensions
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-43378</link>
      <description>calamares-nixos-extensions provides Calamares branding and modules for NixOS, a distribution of GNU/Linux. Users who installed NixOS through the graphical installer who used manual disk partitioning to create a setup where the system was booted via legacy BIOS rather than UEFI; some disk partitions are encrypted; but the partitions containing either `/` or `/boot` are unencrypted; have their LUKS disk encryption key file in plain text either in `/crypto_keyfile.bin`, or in a CPIO archive attached to their NixOS initrd. `nixos-install` is not affected, nor are UEFI installations, nor was the default automatic partitioning configuration on legacy BIOS systems. The problem has been fixed in calamares-nixos-extensions 0.3.17, which was included in NixOS. The current installer images for the NixOS 24.05 and unstable (24.11) channels are unaffected. The fix reached 24.05 at 2024-08-13 20:06:59 UTC, and unstable at 2024-08-15 09:00:20 UTC. Installer images downloaded before those times may be vulnerable. The best solution for affected users is probably to back up their data and do a complete reinstallation. However, the mitigation procedure in GHSA-3rvf-24q2-24ww should work solely for the case where `/` is encrypted but `/boot` is not. If `/` is unencrypted, then the `/crypto_keyfile.bin` file will need to be deleted in addition to the remediation steps in the previous advisory. This issue is a partial regression of CVE-2023-36476 / GHSA-3rvf-24q2-24ww, which was more severe as it applied to the default configuration on BIOS systems.</description>
      <guid isPermaLink="false">CVE-2024-43378|2024-09-03T18:02:47.756Z</guid>
      <pubDate>Thu, 15 Aug 2024 23:53:07 +0000</pubDate>
    </item>
  </channel>
</rss>

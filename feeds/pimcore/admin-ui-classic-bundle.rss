<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>CVE Feed for pimcore -- admin-ui-classic-bundle</title><link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/pimcore/admin-ui-classic-bundle.rss</link><description>The latest CVEs for pimcore -- admin-ui-classic-bundle</description><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><lastBuildDate>Fri, 31 May 2024 16:28:17 +0000</lastBuildDate><ttl>60</ttl><item><title>CVE-2024-23648|2024-01-24T18:05:44.645Z -- pimcore -- admin-ui-classic-bundle
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-23648</link><description>Pimcore's Admin Classic Bundle provides a backend user interface for Pimcore. The password reset functionality sends to the the user requesting a password change an email containing an URL to reset its password. The URL sent contains a unique token, valid during 24 hours, allowing the user to reset its password. This token is highly sensitive ; as an attacker able to retrieve it would be able to resets the user's password. Prior to version 1.2.3, the reset-password URL is crafted using the "Host" HTTP header of the request sent to request a password reset. This way, an external attacker could send password requests for users, but specify a "Host" header of a website that they control. If the user receiving the mail clicks on the link, the attacker would retrieve the reset token of the victim and perform account takeover. Version 1.2.3 fixes this issue.</description><guid isPermaLink="false">CVE-2024-23648|2024-01-24T18:05:44.645Z</guid><pubDate>Wed, 24 Jan 2024 18:05:44 +0000</pubDate></item><item><title>CVE-2024-23646|2024-01-24T19:41:49.578Z -- pimcore -- admin-ui-classic-bundle
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-23646</link><description>Pimcore's Admin Classic Bundle provides a backend user interface for Pimcore. The application allows users to create zip files from available files on the site. In the 1.x branch prior to version 1.3.2, parameter `selectedIds` is susceptible to SQL Injection. Any backend user with very basic permissions can execute arbitrary SQL statements and thus alter any data or escalate their privileges to at least admin level. Version 1.3.2 contains a fix for this issue.
</description><guid isPermaLink="false">CVE-2024-23646|2024-01-24T19:41:49.578Z</guid><pubDate>Wed, 24 Jan 2024 19:41:49 +0000</pubDate></item><item><title>CVE-2024-24822|2024-02-07T18:24:47.126Z -- pimcore -- admin-ui-classic-bundle
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-24822</link><description>Pimcore's Admin Classic Bundle provides a backend user interface for Pimcore. Prior to version 1.3.3, an attacker can create, delete etc. tags without having the permission to do so. A fix is available in version 1.3.3. As a workaround, one may apply the patch manually.</description><guid isPermaLink="false">CVE-2024-24822|2024-02-07T18:24:47.126Z</guid><pubDate>Wed, 07 Feb 2024 17:17:58 +0000</pubDate></item><item><title>CVE-2024-25625|2024-02-19T15:41:29.147Z -- pimcore -- admin-ui-classic-bundle
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-25625</link><description>Pimcore's Admin Classic Bundle provides a Backend UI for Pimcore. A potential security vulnerability has been discovered in `pimcore/admin-ui-classic-bundle` prior to version 1.3.4. The vulnerability involves a Host Header Injection in the `invitationLinkAction` function of the UserController, specifically in the way `$loginUrl` trusts user input.  The host header from incoming HTTP requests is used unsafely when generating URLs. An attacker can manipulate the HTTP host header in requests to the /admin/user/invitationlink endpoint, resulting in the generation of URLs with the attacker's domain. In fact, if a host header is injected in the POST request, the $loginURL parameter is constructed with this unvalidated host header. It is then used to send an invitation email to the provided user. This vulnerability can be used to perform phishing attacks by making the URLs in the invitation links emails point to an attacker-controlled domain. Version 1.3.4 contains a patch for the vulnerability. The maintainers recommend validating the host header and ensuring it matches the application's domain. It would also be beneficial to use a default trusted host or hostname if the incoming host header is not recognized or is absent.</description><guid isPermaLink="false">CVE-2024-25625|2024-02-19T15:41:29.147Z</guid><pubDate>Mon, 19 Feb 2024 15:41:29 +0000</pubDate></item></channel></rss>
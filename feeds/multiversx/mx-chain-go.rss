<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for multiversx -- mx-chain-go</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/multiversx/mx-chain-go.rss</link>
    <description>The latest CVEs for multiversx -- mx-chain-go</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 12 Jun 2024 11:24:34 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-33964|2023-05-31T17:07:21.667Z -- multiversx -- mx-chain-go
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-33964</link>
      <description>mx-chain-go is an implementation of the MultiversX blockchain protocol written in the Go language. Metachain cannot process a cross-shard miniblock. Prior to version 1.4.16, an invalid transaction with the wrong username on metachain is not treated correctly on the metachain transaction processor. This is strictly a processing issue that could have happened on MultiversX chain. If an error like this had occurred, the metachain would have stopped notarizing blocks from the shard chains. The resuming of notarization is possible only after applying a patched binary version. A patch in version 1.4.16 introduces `processIfTxErrorCrossShard` for the metachain transaction processor. There are no known workarounds for this issue.
</description>
      <guid isPermaLink="false">CVE-2023-33964|2023-05-31T17:07:21.667Z</guid>
      <pubDate>Wed, 31 May 2023 17:07:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-34458|2023-07-13T18:45:03.499Z -- multiversx -- mx-chain-go
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-34458</link>
      <description>mx-chain-go is the official implementation of the MultiversX blockchain protocol, written in golang. When executing a relayed transaction, if the inner transaction failed, it would have increased the inner transaction's sender account nonce. This could have contributed to a limited DoS attack on a targeted account. The fix is a breaking change so a new flag `RelayedNonceFixEnableEpoch` was needed. This was a strict processing issue while validating blocks on a chain. This vulnerability has been patched in version 1.4.17.</description>
      <guid isPermaLink="false">CVE-2023-34458|2023-07-13T18:45:03.499Z</guid>
      <pubDate>Thu, 13 Jul 2023 18:45:03 +0000</pubDate>
    </item>
  </channel>
</rss>

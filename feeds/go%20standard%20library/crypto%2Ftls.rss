<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Go standard library -- crypto/tls</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/go%20standard%20library/crypto%2Ftls.rss</link>
    <description>The latest CVEs for Go standard library -- crypto/tls</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 12 Jun 2024 11:24:32 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-29409|2023-08-02T19:47:23.829Z -- go%20standard%20library -- crypto%2Ftls
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-29409</link>
      <description>Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to &lt;= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.</description>
      <guid isPermaLink="false">CVE-2023-29409|2023-08-02T19:47:23.829Z</guid>
      <pubDate>Wed, 02 Aug 2023 19:47:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-39321|2023-10-11T21:14:51.855Z -- go%20standard%20library -- crypto%2Ftls
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-39321</link>
      <description>Processing an incomplete post-handshake message for a QUIC connection can cause a panic.</description>
      <guid isPermaLink="false">CVE-2023-39321|2023-10-11T21:14:51.855Z</guid>
      <pubDate>Fri, 08 Sep 2023 16:13:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-39322|2023-10-11T21:14:59.364Z -- go%20standard%20library -- crypto%2Ftls
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-39322</link>
      <description>QUIC connections do not set an upper bound on the amount of data buffered when reading post-handshake messages, allowing a malicious QUIC connection to cause unbounded memory growth. With fix, connections now consistently reject messages larger than 65KiB in size.</description>
      <guid isPermaLink="false">CVE-2023-39322|2023-10-11T21:14:59.364Z</guid>
      <pubDate>Fri, 08 Sep 2023 16:13:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-45287|2023-12-05T16:18:06.104Z -- go%20standard%20library -- crypto%2Ftls
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-45287</link>
      <description>Before Go 1.20, the RSA based TLS key exchanges used the math/big library, which is not constant time. RSA blinding was applied to prevent timing attacks, but analysis shows this may not have been fully effective. In particular it appears as if the removal of PKCS#1 padding may leak timing information, which in turn could be used to recover session key bits. In Go 1.20, the crypto/tls library switched to a fully constant time RSA implementation, which we do not believe exhibits any timing side channels.</description>
      <guid isPermaLink="false">CVE-2023-45287|2023-12-05T16:18:06.104Z</guid>
      <pubDate>Tue, 05 Dec 2023 16:18:06 +0000</pubDate>
    </item>
  </channel>
</rss>

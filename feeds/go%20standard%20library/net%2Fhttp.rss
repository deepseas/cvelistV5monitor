<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Go standard library -- net/http</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/go%20standard%20library/net%2Fhttp.rss</link>
    <description>The latest CVEs for Go standard library -- net/http</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 11:20:02 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-1705|2024-08-03T00:10:03.918Z -- go%20standard%20library -- net%2Fhttp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1705</link>
      <description>Acceptance of some invalid Transfer-Encoding headers in the HTTP/1 client in net/http before Go 1.17.12 and Go 1.18.4 allows HTTP request smuggling if combined with an intermediate server that also improperly fails to reject the header as invalid.</description>
      <guid isPermaLink="false">CVE-2022-1705|2024-08-03T00:10:03.918Z</guid>
      <pubDate>Tue, 09 Aug 2022 20:16:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-32148|2024-08-03T07:32:55.971Z -- go%20standard%20library -- net%2Fhttp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-32148</link>
      <description>Improper exposure of client IP addresses in net/http before Go 1.17.12 and Go 1.18.4 can be triggered by calling httputil.ReverseProxy.ServeHTTP with a Request.Header map containing a nil value for the X-Forwarded-For header, which causes ReverseProxy to set the client IP as the value of the X-Forwarded-For header.</description>
      <guid isPermaLink="false">CVE-2022-32148|2024-08-03T07:32:55.971Z</guid>
      <pubDate>Tue, 09 Aug 2022 20:18:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-45289|2024-08-02T20:21:15.333Z -- go%20standard%20library -- net%2Fhttp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-45289</link>
      <description>When following an HTTP redirect to a domain which is not a subdomain match or exact match of the initial domain, an http.Client does not forward sensitive headers such as "Authorization" or "Cookie". For example, a redirect from foo.com to www.foo.com will forward the Authorization header, but a redirect to bar.com will not. A maliciously crafted HTTP redirect could cause sensitive headers to be unexpectedly forwarded.</description>
      <guid isPermaLink="false">CVE-2023-45289|2024-08-02T20:21:15.333Z</guid>
      <pubDate>Tue, 05 Mar 2024 22:22:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-45288|2024-08-02T20:21:15.329Z -- go%20standard%20library -- net%2Fhttp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-45288</link>
      <description>An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.</description>
      <guid isPermaLink="false">CVE-2023-45288|2024-08-02T20:21:15.329Z</guid>
      <pubDate>Thu, 04 Apr 2024 20:37:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24791|2024-07-03T13:45:59.566Z -- go%20standard%20library -- net%2Fhttp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-24791</link>
      <description>The net/http HTTP/1.1 client mishandled the case where a server responds to a request with an "Expect: 100-continue" header with a non-informational (200 or higher) status. This mishandling could leave a client connection in an invalid state, where the next request sent on the connection will fail. An attacker sending a request to a net/http/httputil.ReverseProxy proxy can exploit this mishandling to cause a denial of service by sending "Expect: 100-continue" requests which elicit a non-informational response from the backend. Each such request leaves the proxy with an invalid connection, and causes one subsequent request using that connection to fail.</description>
      <guid isPermaLink="false">CVE-2024-24791|2024-07-03T13:45:59.566Z</guid>
      <pubDate>Tue, 02 Jul 2024 21:28:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-45289|2024-06-04T17:20:06.035Z -- go%20standard%20library -- net%2Fhttp</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-45289</link>
      <description>When following an HTTP redirect to a domain which is not a subdomain match or exact match of the initial domain, an http.Client does not forward sensitive headers such as "Authorization" or "Cookie". For example, a redirect from foo.com to www.foo.com will forward the Authorization header, but a redirect to bar.com will not. A maliciously crafted HTTP redirect could cause sensitive headers to be unexpectedly forwarded.</description>
      <guid isPermaLink="false">CVE-2023-45289|2024-06-04T17:20:06.035Z</guid>
      <pubDate>Tue, 05 Mar 2024 22:22:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-45288|2024-04-04T20:37:30.714Z -- go%20standard%20library -- net%2Fhttp</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-45288</link>
      <description>An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.</description>
      <guid isPermaLink="false">CVE-2023-45288|2024-04-04T20:37:30.714Z</guid>
      <pubDate>Thu, 04 Apr 2024 20:37:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24791|2024-07-02T21:28:25.677Z -- go%20standard%20library -- net%2Fhttp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-24791</link>
      <description>The net/http HTTP/1.1 client mishandled the case where a server responds to a request with an "Expect: 100-continue" header with a non-informational (200 or higher) status. This mishandling could leave a client connection in an invalid state, where the next request sent on the connection will fail. An attacker sending a request to a net/http/httputil.ReverseProxy proxy can exploit this mishandling to cause a denial of service by sending "Expect: 100-continue" requests which elicit a non-informational response from the backend. Each such request leaves the proxy with an invalid connection, and causes one subsequent request using that connection to fail.</description>
      <guid isPermaLink="false">CVE-2024-24791|2024-07-02T21:28:25.677Z</guid>
      <pubDate>Tue, 02 Jul 2024 21:28:25 +0000</pubDate>
    </item>
  </channel>
</rss>

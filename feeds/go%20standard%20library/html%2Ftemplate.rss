<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Go standard library -- html/template</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/go%20standard%20library/html%2Ftemplate.rss</link>
    <description>The latest CVEs for Go standard library -- html/template</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 14:22:55 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-24540|2024-08-02T11:03:17.767Z -- go%20standard%20library -- html%2Ftemplate
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-24540</link>
      <description>Not all valid JavaScript whitespace characters are considered to be whitespace. Templates containing whitespace characters outside of the character set "\t\n\f\r\u0020\u2028\u2029" in JavaScript contexts that also contain actions may not be properly sanitized during execution.</description>
      <guid isPermaLink="false">CVE-2023-24540|2024-08-02T11:03:17.767Z</guid>
      <pubDate>Thu, 11 May 2023 15:29:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-24539|2024-08-02T11:03:17.753Z -- go%20standard%20library -- html%2Ftemplate
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-24539</link>
      <description>Angle brackets (&lt;&gt;) are not considered dangerous characters when inserted into CSS contexts. Templates containing multiple actions separated by a '/' character can result in unexpectedly closing the CSS context and allowing for injection of unexpected HTML, if executed with untrusted input.</description>
      <guid isPermaLink="false">CVE-2023-24539|2024-08-02T11:03:17.753Z</guid>
      <pubDate>Thu, 11 May 2023 15:29:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-24538|2024-08-02T11:03:17.754Z -- go%20standard%20library -- html%2Ftemplate
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-24538</link>
      <description>Templates do not properly consider backticks (`) as Javascript string delimiters, and do not escape them as expected. Backticks are used, since ES6, for JS template literals. If a template contains a Go template action within a Javascript template literal, the contents of the action can be used to terminate the literal, injecting arbitrary Javascript code into the Go template. As ES6 template literals are rather complex, and themselves can do string interpolation, the decision was made to simply disallow Go template actions from being used inside of them (e.g. "var a = {{.}}"), since there is no obviously safe way to allow this behavior. This takes the same approach as github.com/google/safehtml. With fix, Template.Parse returns an Error when it encounters templates like this, with an ErrorCode of value 12. This ErrorCode is currently unexported, but will be exported in the release of Go 1.21. Users who rely on the previous behavior can re-enable it using the GODEBUG flag jstmpllitinterp=1, with the caveat that backticks will now be escaped. This should be used with caution.</description>
      <guid isPermaLink="false">CVE-2023-24538|2024-08-02T11:03:17.754Z</guid>
      <pubDate>Thu, 06 Apr 2023 15:50:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24785|2024-06-04T17:43:02.716Z -- go%20standard%20library -- html%2Ftemplate</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-24785</link>
      <description>If errors returned from MarshalJSON methods contain user controlled data, they may be used to break the contextual auto-escaping behavior of the html/template package, allowing for subsequent actions to inject unexpected content into templates.</description>
      <guid isPermaLink="false">CVE-2024-24785|2024-06-04T17:43:02.716Z</guid>
      <pubDate>Tue, 05 Mar 2024 22:22:33 +0000</pubDate>
    </item>
  </channel>
</rss>

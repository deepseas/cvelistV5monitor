<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Go standard library -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/go%20standard%20library/all.rss</link>
    <description>The latest CVEs for Go standard library -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Thu, 26 Sep 2024 20:23:56 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-39321|2024-09-26T17:25:25.677Z -- go%20standard%20library -- crypto%2Ftls
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-39321</link>
      <description>Processing an incomplete post-handshake message for a QUIC connection can cause a panic.</description>
      <guid isPermaLink="false">CVE-2023-39321|2024-09-26T17:25:25.677Z</guid>
      <pubDate>Fri, 08 Sep 2023 16:13:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-39319|2024-09-26T16:04:58.123Z -- go%20standard%20library -- html%2Ftemplate
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-39319</link>
      <description>The html/template package does not apply the proper rules for handling occurrences of "&lt;script", "&lt;!--", and "&lt;/script" within JS literals in &lt;script&gt; contexts. This may cause the template parser to improperly consider script contexts to be terminated early, causing actions to be improperly escaped. This could be leveraged to perform an XSS attack.</description>
      <guid isPermaLink="false">CVE-2023-39319|2024-09-26T16:04:58.123Z</guid>
      <pubDate>Fri, 08 Sep 2023 16:13:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-39318|2024-09-26T16:05:10.408Z -- go%20standard%20library -- html%2Ftemplate
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-39318</link>
      <description>The html/template package does not properly handle HTML-like "" comment tokens, nor hashbang "#!" comment tokens, in &lt;script&gt; contexts. This may cause the template parser to improperly interpret the contents of &lt;script&gt; contexts, causing actions to be improperly escaped. This may be leveraged to perform an XSS attack.</description>
      <guid isPermaLink="false">CVE-2023-39318|2024-09-26T16:05:10.408Z</guid>
      <pubDate>Fri, 08 Sep 2023 16:13:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-39322|2024-09-26T15:56:13.357Z -- go%20standard%20library -- crypto%2Ftls
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-39322</link>
      <description>QUIC connections do not set an upper bound on the amount of data buffered when reading post-handshake messages, allowing a malicious QUIC connection to cause unbounded memory growth. With fix, connections now consistently reject messages larger than 65KiB in size.</description>
      <guid isPermaLink="false">CVE-2023-39322|2024-09-26T15:56:13.357Z</guid>
      <pubDate>Fri, 08 Sep 2023 16:13:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34155|2024-09-26T15:03:07.202Z -- go%20standard%20library -- go%2Fparser</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34155</link>
      <description>Calling any of the Parse functions on Go source code which contains deeply nested literals can cause a panic due to stack exhaustion.</description>
      <guid isPermaLink="false">CVE-2024-34155|2024-09-26T15:03:07.202Z</guid>
      <pubDate>Fri, 06 Sep 2024 20:42:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34156|2024-09-26T15:03:08.203Z -- go%20standard%20library -- encoding%2Fgob</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34156</link>
      <description>Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.</description>
      <guid isPermaLink="false">CVE-2024-34156|2024-09-26T15:03:08.203Z</guid>
      <pubDate>Fri, 06 Sep 2024 20:42:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34155|2024-09-09T13:55:46.774Z -- go%20standard%20library -- go%2Fparser</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34155</link>
      <description>Calling any of the Parse functions on Go source code which contains deeply nested literals can cause a panic due to stack exhaustion.</description>
      <guid isPermaLink="false">CVE-2024-34155|2024-09-09T13:55:46.774Z</guid>
      <pubDate>Fri, 06 Sep 2024 20:42:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24790|2024-09-05T08:03:29.294Z -- go%20standard%20library -- net%2Fnetip</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-24790</link>
      <description>The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.</description>
      <guid isPermaLink="false">CVE-2024-24790|2024-09-05T08:03:29.294Z</guid>
      <pubDate>Wed, 05 Jun 2024 15:13:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-45288|2024-08-26T20:40:01.996Z -- go%20standard%20library -- net%2Fhttp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-45288</link>
      <description>An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.</description>
      <guid isPermaLink="false">CVE-2023-45288|2024-08-26T20:40:01.996Z</guid>
      <pubDate>Thu, 04 Apr 2024 20:37:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-45288|2024-08-02T20:21:15.329Z -- go%20standard%20library -- net%2Fhttp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-45288</link>
      <description>An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.</description>
      <guid isPermaLink="false">CVE-2023-45288|2024-08-02T20:21:15.329Z</guid>
      <pubDate>Thu, 04 Apr 2024 20:37:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24791|2024-07-03T13:45:59.566Z -- go%20standard%20library -- net%2Fhttp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-24791</link>
      <description>The net/http HTTP/1.1 client mishandled the case where a server responds to a request with an "Expect: 100-continue" header with a non-informational (200 or higher) status. This mishandling could leave a client connection in an invalid state, where the next request sent on the connection will fail. An attacker sending a request to a net/http/httputil.ReverseProxy proxy can exploit this mishandling to cause a denial of service by sending "Expect: 100-continue" requests which elicit a non-informational response from the backend. Each such request leaves the proxy with an invalid connection, and causes one subsequent request using that connection to fail.</description>
      <guid isPermaLink="false">CVE-2024-24791|2024-07-03T13:45:59.566Z</guid>
      <pubDate>Tue, 02 Jul 2024 21:28:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24789|2024-06-13T16:20:49.160Z -- go%20standard%20library -- archive%2Fzip</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-24789</link>
      <description>The archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors.</description>
      <guid isPermaLink="false">CVE-2024-24789|2024-06-13T16:20:49.160Z</guid>
      <pubDate>Wed, 05 Jun 2024 15:13:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-45288|2024-04-04T20:37:30.714Z -- go%20standard%20library -- net%2Fhttp</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-45288</link>
      <description>An attacker may cause an HTTP/2 endpoint to read arbitrary amounts of header data by sending an excessive number of CONTINUATION frames. Maintaining HPACK state requires parsing and processing all HEADERS and CONTINUATION frames on a connection. When a request's headers exceed MaxHeaderBytes, no memory is allocated to store the excess headers, but they are still parsed. This permits an attacker to cause an HTTP/2 endpoint to read arbitrary amounts of header data, all associated with a request which is going to be rejected. These headers can include Huffman-encoded data which is significantly more expensive for the receiver to decode than for an attacker to send. The fix sets a limit on the amount of excess header frames we will process before closing a connection.</description>
      <guid isPermaLink="false">CVE-2023-45288|2024-04-04T20:37:30.714Z</guid>
      <pubDate>Thu, 04 Apr 2024 20:37:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24790|2024-06-05T15:13:50.527Z -- go%20standard%20library -- net%2Fnetip</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-24790</link>
      <description>The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.</description>
      <guid isPermaLink="false">CVE-2024-24790|2024-06-05T15:13:50.527Z</guid>
      <pubDate>Wed, 05 Jun 2024 15:13:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24789|2024-06-05T15:13:51.938Z -- go%20standard%20library -- archive%2Fzip</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-24789</link>
      <description>The archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors.</description>
      <guid isPermaLink="false">CVE-2024-24789|2024-06-05T15:13:51.938Z</guid>
      <pubDate>Wed, 05 Jun 2024 15:13:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24788|2024-05-09T20:25:03.081Z -- go%20standard%20library -- net</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-24788</link>
      <description>A malformed DNS message in response to a query can cause the Lookup functions to get stuck in an infinite loop.</description>
      <guid isPermaLink="false">CVE-2024-24788|2024-05-09T20:25:03.081Z</guid>
      <pubDate>Wed, 08 May 2024 15:31:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24788|2024-06-12T19:40:33.056Z -- go%20standard%20library -- net</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-24788</link>
      <description>A malformed DNS message in response to a query can cause the Lookup functions to get stuck in an infinite loop.</description>
      <guid isPermaLink="false">CVE-2024-24788|2024-06-12T19:40:33.056Z</guid>
      <pubDate>Wed, 08 May 2024 15:31:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24791|2024-07-02T21:28:25.677Z -- go%20standard%20library -- net%2Fhttp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-24791</link>
      <description>The net/http HTTP/1.1 client mishandled the case where a server responds to a request with an "Expect: 100-continue" header with a non-informational (200 or higher) status. This mishandling could leave a client connection in an invalid state, where the next request sent on the connection will fail. An attacker sending a request to a net/http/httputil.ReverseProxy proxy can exploit this mishandling to cause a denial of service by sending "Expect: 100-continue" requests which elicit a non-informational response from the backend. Each such request leaves the proxy with an invalid connection, and causes one subsequent request using that connection to fail.</description>
      <guid isPermaLink="false">CVE-2024-24791|2024-07-02T21:28:25.677Z</guid>
      <pubDate>Tue, 02 Jul 2024 21:28:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24790|2024-09-03T17:47:16.286Z -- go%20standard%20library -- net%2Fnetip</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-24790</link>
      <description>The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.</description>
      <guid isPermaLink="false">CVE-2024-24790|2024-09-03T17:47:16.286Z</guid>
      <pubDate>Wed, 05 Jun 2024 15:13:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34158|2024-09-06T20:42:42.822Z -- go%20standard%20library -- go%2Fbuild%2Fconstraint</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34158</link>
      <description>Calling Parse on a "// +build" build tag line with deeply nested expressions can cause a panic due to stack exhaustion.</description>
      <guid isPermaLink="false">CVE-2024-34158|2024-09-06T20:42:42.822Z</guid>
      <pubDate>Fri, 06 Sep 2024 20:42:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34156|2024-09-06T20:42:42.661Z -- go%20standard%20library -- encoding%2Fgob</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34156</link>
      <description>Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.</description>
      <guid isPermaLink="false">CVE-2024-34156|2024-09-06T20:42:42.661Z</guid>
      <pubDate>Fri, 06 Sep 2024 20:42:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34155|2024-09-06T20:42:42.518Z -- go%20standard%20library -- go%2Fparser</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34155</link>
      <description>Calling any of the Parse functions on Go source code which contains deeply nested literals can cause a panic due to stack exhaustion.</description>
      <guid isPermaLink="false">CVE-2024-34155|2024-09-06T20:42:42.518Z</guid>
      <pubDate>Fri, 06 Sep 2024 20:42:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34158|2024-09-09T14:04:26.919Z -- go%20standard%20library -- go%2Fbuild%2Fconstraint</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34158</link>
      <description>Calling Parse on a "// +build" build tag line with deeply nested expressions can cause a panic due to stack exhaustion.</description>
      <guid isPermaLink="false">CVE-2024-34158|2024-09-09T14:04:26.919Z</guid>
      <pubDate>Fri, 06 Sep 2024 20:42:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34156|2024-09-09T14:29:46.867Z -- go%20standard%20library -- encoding%2Fgob</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34156</link>
      <description>Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.</description>
      <guid isPermaLink="false">CVE-2024-34156|2024-09-09T14:29:46.867Z</guid>
      <pubDate>Fri, 06 Sep 2024 20:42:42 +0000</pubDate>
    </item>
  </channel>
</rss>

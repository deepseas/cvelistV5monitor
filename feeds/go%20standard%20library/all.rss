<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Go standard library -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/go%20standard%20library/all.rss</link>
    <description>The latest CVEs for Go standard library -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Tue, 22 Oct 2024 16:24:48 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-29409|2024-10-22T14:16:01.839Z -- go%20standard%20library -- crypto%2Ftls
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-29409</link>
      <description>Extremely large RSA keys in certificate chains can cause a client/server to expend significant CPU time verifying signatures. With fix, the size of RSA keys transmitted during handshakes is restricted to &lt;= 8192 bits. Based on a survey of publicly trusted RSA keys, there are currently only three certificates in circulation with keys larger than this, and all three appear to be test certificates that are not actively deployed. It is possible there are larger keys in use in private PKIs, but we target the web PKI, so causing breakage here in the interests of increasing the default safety of users of crypto/tls seems reasonable.</description>
      <guid isPermaLink="false">CVE-2023-29409|2024-10-22T14:16:01.839Z</guid>
      <pubDate>Wed, 02 Aug 2023 19:47:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24791|2024-10-04T15:02:46.565Z -- go%20standard%20library -- net%2Fhttp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-24791</link>
      <description>The net/http HTTP/1.1 client mishandled the case where a server responds to a request with an "Expect: 100-continue" header with a non-informational (200 or higher) status. This mishandling could leave a client connection in an invalid state, where the next request sent on the connection will fail. An attacker sending a request to a net/http/httputil.ReverseProxy proxy can exploit this mishandling to cause a denial of service by sending "Expect: 100-continue" requests which elicit a non-informational response from the backend. Each such request leaves the proxy with an invalid connection, and causes one subsequent request using that connection to fail.</description>
      <guid isPermaLink="false">CVE-2024-24791|2024-10-04T15:02:46.565Z</guid>
      <pubDate>Tue, 02 Jul 2024 21:28:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34158|2024-10-04T15:02:47.715Z -- go%20standard%20library -- go%2Fbuild%2Fconstraint</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34158</link>
      <description>Calling Parse on a "// +build" build tag line with deeply nested expressions can cause a panic due to stack exhaustion.</description>
      <guid isPermaLink="false">CVE-2024-34158|2024-10-04T15:02:47.715Z</guid>
      <pubDate>Fri, 06 Sep 2024 20:42:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34155|2024-09-26T15:03:07.202Z -- go%20standard%20library -- go%2Fparser</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34155</link>
      <description>Calling any of the Parse functions on Go source code which contains deeply nested literals can cause a panic due to stack exhaustion.</description>
      <guid isPermaLink="false">CVE-2024-34155|2024-09-26T15:03:07.202Z</guid>
      <pubDate>Fri, 06 Sep 2024 20:42:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34156|2024-09-26T15:03:08.203Z -- go%20standard%20library -- encoding%2Fgob</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34156</link>
      <description>Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.</description>
      <guid isPermaLink="false">CVE-2024-34156|2024-09-26T15:03:08.203Z</guid>
      <pubDate>Fri, 06 Sep 2024 20:42:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34155|2024-09-09T13:55:46.774Z -- go%20standard%20library -- go%2Fparser</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34155</link>
      <description>Calling any of the Parse functions on Go source code which contains deeply nested literals can cause a panic due to stack exhaustion.</description>
      <guid isPermaLink="false">CVE-2024-34155|2024-09-09T13:55:46.774Z</guid>
      <pubDate>Fri, 06 Sep 2024 20:42:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24790|2024-09-05T08:03:29.294Z -- go%20standard%20library -- net%2Fnetip</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-24790</link>
      <description>The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.</description>
      <guid isPermaLink="false">CVE-2024-24790|2024-09-05T08:03:29.294Z</guid>
      <pubDate>Wed, 05 Jun 2024 15:13:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24791|2024-07-03T13:45:59.566Z -- go%20standard%20library -- net%2Fhttp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-24791</link>
      <description>The net/http HTTP/1.1 client mishandled the case where a server responds to a request with an "Expect: 100-continue" header with a non-informational (200 or higher) status. This mishandling could leave a client connection in an invalid state, where the next request sent on the connection will fail. An attacker sending a request to a net/http/httputil.ReverseProxy proxy can exploit this mishandling to cause a denial of service by sending "Expect: 100-continue" requests which elicit a non-informational response from the backend. Each such request leaves the proxy with an invalid connection, and causes one subsequent request using that connection to fail.</description>
      <guid isPermaLink="false">CVE-2024-24791|2024-07-03T13:45:59.566Z</guid>
      <pubDate>Tue, 02 Jul 2024 21:28:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24789|2024-06-13T16:20:49.160Z -- go%20standard%20library -- archive%2Fzip</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-24789</link>
      <description>The archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors.</description>
      <guid isPermaLink="false">CVE-2024-24789|2024-06-13T16:20:49.160Z</guid>
      <pubDate>Wed, 05 Jun 2024 15:13:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24790|2024-06-05T15:13:50.527Z -- go%20standard%20library -- net%2Fnetip</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-24790</link>
      <description>The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.</description>
      <guid isPermaLink="false">CVE-2024-24790|2024-06-05T15:13:50.527Z</guid>
      <pubDate>Wed, 05 Jun 2024 15:13:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24789|2024-06-05T15:13:51.938Z -- go%20standard%20library -- archive%2Fzip</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-24789</link>
      <description>The archive/zip package's handling of certain types of invalid zip files differs from the behavior of most zip implementations. This misalignment could be exploited to create an zip file with contents that vary depending on the implementation reading the file. The archive/zip package now rejects files containing these errors.</description>
      <guid isPermaLink="false">CVE-2024-24789|2024-06-05T15:13:51.938Z</guid>
      <pubDate>Wed, 05 Jun 2024 15:13:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24788|2024-05-09T20:25:03.081Z -- go%20standard%20library -- net</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-24788</link>
      <description>A malformed DNS message in response to a query can cause the Lookup functions to get stuck in an infinite loop.</description>
      <guid isPermaLink="false">CVE-2024-24788|2024-05-09T20:25:03.081Z</guid>
      <pubDate>Wed, 08 May 2024 15:31:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24788|2024-06-12T19:40:33.056Z -- go%20standard%20library -- net</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-24788</link>
      <description>A malformed DNS message in response to a query can cause the Lookup functions to get stuck in an infinite loop.</description>
      <guid isPermaLink="false">CVE-2024-24788|2024-06-12T19:40:33.056Z</guid>
      <pubDate>Wed, 08 May 2024 15:31:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24791|2024-07-02T21:28:25.677Z -- go%20standard%20library -- net%2Fhttp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-24791</link>
      <description>The net/http HTTP/1.1 client mishandled the case where a server responds to a request with an "Expect: 100-continue" header with a non-informational (200 or higher) status. This mishandling could leave a client connection in an invalid state, where the next request sent on the connection will fail. An attacker sending a request to a net/http/httputil.ReverseProxy proxy can exploit this mishandling to cause a denial of service by sending "Expect: 100-continue" requests which elicit a non-informational response from the backend. Each such request leaves the proxy with an invalid connection, and causes one subsequent request using that connection to fail.</description>
      <guid isPermaLink="false">CVE-2024-24791|2024-07-02T21:28:25.677Z</guid>
      <pubDate>Tue, 02 Jul 2024 21:28:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24790|2024-09-03T17:47:16.286Z -- go%20standard%20library -- net%2Fnetip</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-24790</link>
      <description>The various Is methods (IsPrivate, IsLoopback, etc) did not work as expected for IPv4-mapped IPv6 addresses, returning false for addresses which would return true in their traditional IPv4 forms.</description>
      <guid isPermaLink="false">CVE-2024-24790|2024-09-03T17:47:16.286Z</guid>
      <pubDate>Wed, 05 Jun 2024 15:13:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34158|2024-09-06T20:42:42.822Z -- go%20standard%20library -- go%2Fbuild%2Fconstraint</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34158</link>
      <description>Calling Parse on a "// +build" build tag line with deeply nested expressions can cause a panic due to stack exhaustion.</description>
      <guid isPermaLink="false">CVE-2024-34158|2024-09-06T20:42:42.822Z</guid>
      <pubDate>Fri, 06 Sep 2024 20:42:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34156|2024-09-06T20:42:42.661Z -- go%20standard%20library -- encoding%2Fgob</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34156</link>
      <description>Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.</description>
      <guid isPermaLink="false">CVE-2024-34156|2024-09-06T20:42:42.661Z</guid>
      <pubDate>Fri, 06 Sep 2024 20:42:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34155|2024-09-06T20:42:42.518Z -- go%20standard%20library -- go%2Fparser</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34155</link>
      <description>Calling any of the Parse functions on Go source code which contains deeply nested literals can cause a panic due to stack exhaustion.</description>
      <guid isPermaLink="false">CVE-2024-34155|2024-09-06T20:42:42.518Z</guid>
      <pubDate>Fri, 06 Sep 2024 20:42:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34158|2024-09-09T14:04:26.919Z -- go%20standard%20library -- go%2Fbuild%2Fconstraint</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34158</link>
      <description>Calling Parse on a "// +build" build tag line with deeply nested expressions can cause a panic due to stack exhaustion.</description>
      <guid isPermaLink="false">CVE-2024-34158|2024-09-09T14:04:26.919Z</guid>
      <pubDate>Fri, 06 Sep 2024 20:42:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34156|2024-09-09T14:29:46.867Z -- go%20standard%20library -- encoding%2Fgob</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34156</link>
      <description>Calling Decoder.Decode on a message which contains deeply nested structures can cause a panic due to stack exhaustion. This is a follow-up to CVE-2022-30635.</description>
      <guid isPermaLink="false">CVE-2024-34156|2024-09-09T14:29:46.867Z</guid>
      <pubDate>Fri, 06 Sep 2024 20:42:42 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for carrierwaveuploader -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/carrierwaveuploader/all.rss</link>
    <description>The latest CVEs for carrierwaveuploader -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 23:22:20 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-49090|2024-08-02T21:46:29.040Z -- carrierwaveuploader -- carrierwave
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-49090</link>
      <description>CarrierWave is a solution for file uploads for Rails, Sinatra and other Ruby web frameworks. CarrierWave has a Content-Type allowlist bypass vulnerability, possibly leading to XSS. The validation in `allowlisted_content_type?` determines Content-Type permissions by performing a partial match. If the `content_type` argument of `allowlisted_content_type?` is passed a value crafted by the attacker, Content-Types not included in the `content_type_allowlist` will be allowed. This issue has been patched in versions 2.2.5 and 3.0.5.</description>
      <guid isPermaLink="false">CVE-2023-49090|2024-08-02T21:46:29.040Z</guid>
      <pubDate>Wed, 29 Nov 2023 14:38:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29034|2024-08-02T01:03:51.518Z -- carrierwaveuploader -- carrierwave</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-29034</link>
      <description>CarrierWave is a solution for file uploads for Rails, Sinatra and other Ruby web frameworks. The vulnerability CVE-2023-49090 wasn't fully addressed. This vulnerability is caused by the fact that when uploading to object storage, including Amazon S3, it is possible to set a Content-Type value that is interpreted by browsers to be different from what's allowed by `content_type_allowlist`, by providing multiple values separated by commas. This bypassed value can be used to cause XSS. Upgrade to 3.0.7 or 2.2.6.</description>
      <guid isPermaLink="false">CVE-2024-29034|2024-08-02T01:03:51.518Z</guid>
      <pubDate>Sun, 24 Mar 2024 19:27:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29034|2024-03-24T20:05:20.176Z -- carrierwaveuploader -- carrierwave</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-29034</link>
      <description>CarrierWave is a solution for file uploads for Rails, Sinatra and other Ruby web frameworks. The vulnerability CVE-2023-49090 wasn't fully addressed. This vulnerability is caused by the fact that when uploading to object storage, including Amazon S3, it is possible to set a Content-Type value that is interpreted by browsers to be different from what's allowed by `content_type_allowlist`, by providing multiple values separated by commas. This bypassed value can be used to cause XSS. Upgrade to 3.0.7 or 2.2.6.</description>
      <guid isPermaLink="false">CVE-2024-29034|2024-03-24T20:05:20.176Z</guid>
      <pubDate>Sun, 24 Mar 2024 19:27:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29034|2024-08-01T19:25:35.488Z -- carrierwaveuploader -- carrierwave</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-29034</link>
      <description>CarrierWave is a solution for file uploads for Rails, Sinatra and other Ruby web frameworks. The vulnerability CVE-2023-49090 wasn't fully addressed. This vulnerability is caused by the fact that when uploading to object storage, including Amazon S3, it is possible to set a Content-Type value that is interpreted by browsers to be different from what's allowed by `content_type_allowlist`, by providing multiple values separated by commas. This bypassed value can be used to cause XSS. Upgrade to 3.0.7 or 2.2.6.</description>
      <guid isPermaLink="false">CVE-2024-29034|2024-08-01T19:25:35.488Z</guid>
      <pubDate>Sun, 24 Mar 2024 19:27:35 +0000</pubDate>
    </item>
  </channel>
</rss>

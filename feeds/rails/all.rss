<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for rails -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/rails/all.rss</link>
    <description>The latest CVEs for rails -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 13:22:29 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-23517|2024-08-03T03:43:46.454Z -- rails -- rails-html-sanitizer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-23517</link>
      <description>rails-html-sanitizer is responsible for sanitizing HTML fragments in Rails applications. Certain configurations of rails-html-sanitizer &lt; 1.4.4 use an inefficient regular expression that is susceptible to excessive backtracking when attempting to sanitize certain SVG attributes. This may lead to a denial of service through CPU resource consumption. This issue has been patched in version 1.4.4.</description>
      <guid isPermaLink="false">CVE-2022-23517|2024-08-03T03:43:46.454Z</guid>
      <pubDate>Wed, 14 Dec 2022 16:10:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-23633|2024-08-03T03:51:44.739Z -- rails -- rails
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-23633</link>
      <description>Action Pack is a framework for handling and responding to web requests. Under certain circumstances response bodies will not be closed. In the event a response is *not* notified of a `close`, `ActionDispatch::Executor` will not know to reset thread local state for the next request. This can lead to data being leaked to subsequent requests.This has been fixed in Rails 7.0.2.1, 6.1.4.5, 6.0.4.5, and 5.2.6.1. Upgrading is highly recommended, but to work around this problem a middleware described in GHSA-wh98-p28r-vrc9 can be used.</description>
      <guid isPermaLink="false">CVE-2022-23633|2024-08-03T03:51:44.739Z</guid>
      <pubDate>Fri, 11 Feb 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-23518|2024-08-03T03:43:46.428Z -- rails -- rails-html-sanitizer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-23518</link>
      <description>rails-html-sanitizer is responsible for sanitizing HTML fragments in Rails applications. Versions &gt;= 1.0.3, &lt; 1.4.4 are vulnerable to cross-site scripting via data URIs when used in combination with Loofah &gt;= 2.1.0. This issue is patched in version 1.4.4.</description>
      <guid isPermaLink="false">CVE-2022-23518|2024-08-03T03:43:46.428Z</guid>
      <pubDate>Wed, 14 Dec 2022 16:22:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-23519|2024-08-03T03:43:46.505Z -- rails -- rails-html-sanitizer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-23519</link>
      <description>rails-html-sanitizer is responsible for sanitizing HTML fragments in Rails applications. Prior to version 1.4.4, a possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer may allow an attacker to inject content if the application developer has overridden the sanitizer's allowed tags in either of the following ways: allow both "math" and "style" elements,  or allow both "svg" and "style" elements. Code is only impacted if allowed tags are being overridden. . This issue is fixed in version 1.4.4. All users overriding the allowed tags to include "math" or "svg" and "style" should either upgrade or use the following workaround immediately: Remove "style" from the overridden allowed tags, or remove "math" and "svg" from the overridden allowed tags.
</description>
      <guid isPermaLink="false">CVE-2022-23519|2024-08-03T03:43:46.505Z</guid>
      <pubDate>Wed, 14 Dec 2022 16:50:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-23520|2024-08-03T03:43:46.436Z -- rails -- rails-html-sanitizer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-23520</link>
      <description>rails-html-sanitizer is responsible for sanitizing HTML fragments in Rails applications. Prior to version 1.4.4, there is a possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer due to an incomplete fix of CVE-2022-32209. Rails::Html::Sanitizer may allow an attacker to inject content if the application developer has overridden the sanitizer's allowed tags to allow both "select" and "style" elements. Code is only impacted if allowed tags are being overridden. This issue is patched in version 1.4.4. All users overriding the allowed tags to include both "select" and "style" should either upgrade or use this workaround: Remove either "select" or "style" from the overridden allowed tags. NOTE: Code is _not_ impacted if allowed tags are overridden using either the :tags option to the Action View helper method sanitize or the :tags option to the instance method SafeListSanitizer#sanitize.
</description>
      <guid isPermaLink="false">CVE-2022-23520|2024-08-03T03:43:46.436Z</guid>
      <pubDate>Wed, 14 Dec 2022 17:07:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-32464|2024-08-02T02:13:39.964Z -- rails -- rails</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-32464</link>
      <description>Action Text brings rich text content and editing to Rails. Instances of ActionText::Attachable::ContentAttachment included within a rich_text_area tag could potentially contain unsanitized HTML. This vulnerability is fixed in 7.1.3.4 and 7.2.0.beta2.</description>
      <guid isPermaLink="false">CVE-2024-32464|2024-08-02T02:13:39.964Z</guid>
      <pubDate>Tue, 04 Jun 2024 19:53:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-32464|2024-07-31T19:56:56.875Z -- rails -- rails</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-32464</link>
      <description>Action Text brings rich text content and editing to Rails. Instances of ActionText::Attachable::ContentAttachment included within a rich_text_area tag could potentially contain unsanitized HTML. This vulnerability is fixed in 7.1.3.4 and 7.2.0.beta2.</description>
      <guid isPermaLink="false">CVE-2024-32464|2024-07-31T19:56:56.875Z</guid>
      <pubDate>Tue, 04 Jun 2024 19:53:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28103|2024-06-04T19:49:49.370Z -- rails -- rails</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28103</link>
      <description>Action Pack is a framework for handling and responding to web requests. Since 6.1.0, the application configurable Permissions-Policy is only served on responses with an HTML related Content-Type. This vulnerability is fixed in  6.1.7.8, 7.0.8.2, and 7.1.3.3.</description>
      <guid isPermaLink="false">CVE-2024-28103|2024-06-04T19:49:49.370Z</guid>
      <pubDate>Tue, 04 Jun 2024 19:47:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-32464|2024-06-04T19:53:59.774Z -- rails -- rails</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-32464</link>
      <description>Action Text brings rich text content and editing to Rails. Instances of ActionText::Attachable::ContentAttachment included within a rich_text_area tag could potentially contain unsanitized HTML. This vulnerability is fixed in 7.1.3.4 and 7.2.0.beta2.</description>
      <guid isPermaLink="false">CVE-2024-32464|2024-06-04T19:53:59.774Z</guid>
      <pubDate>Tue, 04 Jun 2024 19:53:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-26144|2024-02-27T15:44:04.166Z -- rails -- rails</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-26144</link>
      <description>Rails is a web-application framework. Starting with version 5.2.0, there is a possible sensitive session information leak in Active Storage. By default, Active Storage sends a Set-Cookie header along with the user's session cookie when serving blobs. It also sets Cache-Control to public. Certain proxies may cache the Set-Cookie, leading to an information leak. The vulnerability is fixed in 7.0.8.1 and 6.1.7.7.</description>
      <guid isPermaLink="false">CVE-2024-26144|2024-02-27T15:44:04.166Z</guid>
      <pubDate>Tue, 27 Feb 2024 15:44:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-26143|2024-02-28T15:48:59.407Z -- rails -- rails</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-26143</link>
      <description>Rails is a web-application framework. There is a possible XSS vulnerability when using the translation helpers in Action Controller. Applications using translation methods like translate, or t on a controller, with a key ending in "_html", a :default key which contains untrusted user input, and the resulting string is used in a view, may be susceptible to an XSS vulnerability. The vulnerability is fixed in 7.1.3.1 and 7.0.8.1.</description>
      <guid isPermaLink="false">CVE-2024-26143|2024-02-28T15:48:59.407Z</guid>
      <pubDate>Tue, 27 Feb 2024 15:33:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-26142|2024-02-27T15:25:44.103Z -- rails -- rails</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-26142</link>
      <description>Rails is a web-application framework. Starting in version 7.1.0, there is a possible ReDoS vulnerability in the Accept header parsing routines of Action Dispatch. This vulnerability is patched in 7.1.3.1. Ruby 3.2 has mitigations for this problem, so Rails applications using Ruby 3.2 or newer are unaffected.</description>
      <guid isPermaLink="false">CVE-2024-26142|2024-02-27T15:25:44.103Z</guid>
      <pubDate>Tue, 27 Feb 2024 15:25:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28103|2024-06-20T16:31:41.257Z -- rails -- rails</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-28103</link>
      <description>Action Pack is a framework for handling and responding to web requests. Since 6.1.0, the application configurable Permissions-Policy is only served on responses with an HTML related Content-Type. This vulnerability is fixed in  6.1.7.8, 7.0.8.2, and 7.1.3.3.</description>
      <guid isPermaLink="false">CVE-2024-28103|2024-06-20T16:31:41.257Z</guid>
      <pubDate>Tue, 04 Jun 2024 19:47:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28103|2024-08-02T00:48:48.658Z -- rails -- rails</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-28103</link>
      <description>Action Pack is a framework for handling and responding to web requests. Since 6.1.0, the application configurable Permissions-Policy is only served on responses with an HTML related Content-Type. This vulnerability is fixed in  6.1.7.8, 7.0.8.2, and 7.1.3.3.</description>
      <guid isPermaLink="false">CVE-2024-28103|2024-08-02T00:48:48.658Z</guid>
      <pubDate>Tue, 04 Jun 2024 19:47:44 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for photoweblog -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/photoweblog/all.rss</link>
    <description>The latest CVEs for photoweblog -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 27 Sep 2024 07:22:31 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-8991|2024-09-27T06:53:58.679Z -- photoweblog -- osm%20%E2%80%93%20openstreetmap
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-8991</link>
      <description>The OSM – OpenStreetMap plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's osm_map and osm_map_v3 shortcodes in all versions up to, and including, 6.1.0 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2024-8991|2024-09-27T06:53:58.679Z</guid>
      <pubDate>Fri, 27 Sep 2024 06:53:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3603|2024-07-23T14:17:52.726Z -- photoweblog -- osm%20%E2%80%93%20openstreetmap</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3603</link>
      <description>The OSM – OpenStreetMap plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'osm_map' shortcode in all versions up to, and including, 6.0.2 due to insufficient input sanitization and output escaping on user supplied attributes such as 'theme'. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2024-3603|2024-07-23T14:17:52.726Z</guid>
      <pubDate>Tue, 09 Jul 2024 08:33:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3603|2024-07-09T08:33:07.241Z -- photoweblog -- osm%20%E2%80%93%20openstreetmap</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3603</link>
      <description>The OSM – OpenStreetMap plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'osm_map' shortcode in all versions up to, and including, 6.0.2 due to insufficient input sanitization and output escaping on user supplied attributes such as 'theme'. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2024-3603|2024-07-09T08:33:07.241Z</guid>
      <pubDate>Tue, 09 Jul 2024 08:33:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3604|2024-07-09T08:33:11.994Z -- photoweblog -- osm%20%E2%80%93%20openstreetmap</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3604</link>
      <description>The OSM – OpenStreetMap plugin for WordPress is vulnerable to SQL Injection via the 'tagged_filter' attribute of the 'osm_map_v3' shortcode in all versions up to, and including, 6.0.2 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with contributor-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description>
      <guid isPermaLink="false">CVE-2024-3604|2024-07-09T08:33:11.994Z</guid>
      <pubDate>Tue, 09 Jul 2024 08:33:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3604|2024-07-09T14:37:58.868Z -- photoweblog -- osm%20%E2%80%93%20openstreetmap</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3604</link>
      <description>The OSM – OpenStreetMap plugin for WordPress is vulnerable to SQL Injection via the 'tagged_filter' attribute of the 'osm_map_v3' shortcode in all versions up to, and including, 6.0.2 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with contributor-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description>
      <guid isPermaLink="false">CVE-2024-3604|2024-07-09T14:37:58.868Z</guid>
      <pubDate>Tue, 09 Jul 2024 08:33:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3603|2024-08-01T20:12:07.999Z -- photoweblog -- osm%20%E2%80%93%20openstreetmap</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3603</link>
      <description>The OSM – OpenStreetMap plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'osm_map' shortcode in all versions up to, and including, 6.0.2 due to insufficient input sanitization and output escaping on user supplied attributes such as 'theme'. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2024-3603|2024-08-01T20:12:07.999Z</guid>
      <pubDate>Tue, 09 Jul 2024 08:33:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3604|2024-08-01T20:12:08.142Z -- photoweblog -- osm%20%E2%80%93%20openstreetmap</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3604</link>
      <description>The OSM – OpenStreetMap plugin for WordPress is vulnerable to SQL Injection via the 'tagged_filter' attribute of the 'osm_map_v3' shortcode in all versions up to, and including, 6.0.2 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with contributor-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description>
      <guid isPermaLink="false">CVE-2024-3604|2024-08-01T20:12:08.142Z</guid>
      <pubDate>Tue, 09 Jul 2024 08:33:11 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for libp2p -- go-libp2p</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/libp2p/go-libp2p.rss</link>
    <description>The latest CVEs for libp2p -- go-libp2p</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 23:22:02 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-39533|2024-08-02T18:10:21.375Z -- libp2p -- go-libp2p
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-39533</link>
      <description>go-libp2p is the Go implementation of the libp2p Networking Stack. Prior to versions 0.27.8, 0.28.2, and 0.29.1 malicious peer can use large RSA keys to run a resource exhaustion attack &amp; force a node to spend time doing signature verification of the large key. This vulnerability is present in the core/crypto module of go-libp2p and can occur during the Noise handshake and the libp2p x509 extension verification step. To prevent this attack, go-libp2p versions 0.27.8, 0.28.2, and 0.29.1 restrict RSA keys to &lt;= 8192 bits. To protect one's application, it is necessary to update to these patch releases and to use the updated Go compiler in 1.20.7 or 1.19.12. There are no known workarounds for this issue.</description>
      <guid isPermaLink="false">CVE-2023-39533|2024-08-02T18:10:21.375Z</guid>
      <pubDate>Tue, 08 Aug 2023 18:50:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-40583|2024-08-02T18:38:50.867Z -- libp2p -- go-libp2p
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-40583</link>
      <description>libp2p is a networking stack and library modularized out of The IPFS Project, and bundled separately for other tools to use. In go-libp2p, by using signed peer records a malicious actor can store an arbitrary amount of data in a remote nodeâ€™s memory. This memory does not get garbage collected and so the victim can run out of memory and crash. If users of go-libp2p in production are not monitoring memory consumption over time, it could be a silent attack i.e. the attacker could bring down nodes over a period of time (how long depends on the node resources i.e. a go-libp2p node on a virtual server with 4 gb of memory takes about 90 sec to bring down; on a larger server, it might take a bit longer.) This issue was patched in version 0.27.4.</description>
      <guid isPermaLink="false">CVE-2023-40583|2024-08-02T18:38:50.867Z</guid>
      <pubDate>Fri, 25 Aug 2023 20:25:28 +0000</pubDate>
    </item>
  </channel>
</rss>

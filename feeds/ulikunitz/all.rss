<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for ulikunitz -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/ulikunitz/all.rss</link>
    <description>The latest CVEs for ulikunitz -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 23:23:06 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2021-29482|2024-08-03T22:11:05.477Z -- ulikunitz -- xz
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-29482</link>
      <description>xz is a compression and decompression library focusing on the xz format completely written in Go. The function readUvarint used to read the xz container format may not terminate a loop provide malicous input. The problem has been fixed in release v0.5.8. As a workaround users can limit the size of the compressed file input to a reasonable size for their use case. The standard library had recently the same issue and got the CVE-2020-16845 allocated.</description>
      <guid isPermaLink="false">CVE-2021-29482|2024-08-03T22:11:05.477Z</guid>
      <pubDate>Wed, 28 Apr 2021 18:15:15 +0000</pubDate>
    </item>
  </channel>
</rss>

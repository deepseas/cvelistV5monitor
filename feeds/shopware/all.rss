<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for shopware -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/shopware/all.rss</link>
    <description>The latest CVEs for shopware -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 06:24:43 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-24748|2024-08-03T04:20:49.934Z -- shopware -- platform
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-24748</link>
      <description>Shopware is an open commerce platform based on the Symfony php Framework and the Vue javascript framework. In versions prior to 6.4.8.2 it is possible to modify customers and to create orders without App Permission. This issue is a result of improper api route checking. Users are advised to upgrade to version 6.4.8.2. There are no known workarounds.</description>
      <guid isPermaLink="false">CVE-2022-24748|2024-08-03T04:20:49.934Z</guid>
      <pubDate>Wed, 09 Mar 2022 22:25:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-24745|2024-08-03T04:20:50.203Z -- shopware -- platform
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-24745</link>
      <description>Shopware is an open commerce platform based on the Symfony php Framework and the Vue javascript framework. In affected versions guest sessions are shared between customers when HTTP cache is enabled. This can lead to inconsistent experiences for guest users. Setups with Varnish are not affected by this issue. This issue has been resolved in version 6.4.8.2. Users unable to upgrade should disable the HTTP Cache.</description>
      <guid isPermaLink="false">CVE-2022-24745|2024-08-03T04:20:50.203Z</guid>
      <pubDate>Wed, 09 Mar 2022 22:25:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-24871|2024-08-03T04:29:00.197Z -- shopware -- platform
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-24871</link>
      <description>Shopware is an open commerce platform based on Symfony Framework and Vue. In affected versions an attacker can abuse the Admin SDK functionality on the server to read or update internal resources. Users are advised to update to the current version 6.4.10.1. For older versions of 6.1, 6.2, and 6.3, corresponding security measures are also available via a plugin. There are no known workarounds for this issue.</description>
      <guid isPermaLink="false">CVE-2022-24871|2024-08-03T04:29:00.197Z</guid>
      <pubDate>Wed, 20 Apr 2022 19:05:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-24744|2024-08-03T04:20:50.204Z -- shopware -- platform
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-24744</link>
      <description>Shopware is an open commerce platform based on the Symfony php Framework and the Vue javascript framework. In affected versions user sessions are not logged out if the password is reset via password recovery. This issue has been resolved in version 6.4.8.1. For older versions of 6.1, 6.2, and 6.3, corresponding security measures are also available via a plugin.</description>
      <guid isPermaLink="false">CVE-2022-24744|2024-08-03T04:20:50.204Z</guid>
      <pubDate>Wed, 09 Mar 2022 22:25:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-24747|2024-08-03T04:20:50.206Z -- shopware -- platform
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-24747</link>
      <description>Shopware is an open commerce platform based on the Symfony php Framework and the Vue javascript framework. Affected versions of shopware do no properly set sensitive HTTP headers to be non-cacheable. If there is an HTTP cache between the server and client then headers may be exposed via HTTP caches. This issue has been resolved in version 6.4.8.2. There are no known workarounds.</description>
      <guid isPermaLink="false">CVE-2022-24747|2024-08-03T04:20:50.206Z</guid>
      <pubDate>Wed, 09 Mar 2022 22:25:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-21651|2024-08-03T02:46:39.541Z -- shopware -- shopware
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-21651</link>
      <description>Shopware is an open source e-commerce software platform. An open redirect vulnerability has been discovered. Users may be arbitrary redirected due to incomplete URL handling in the shopware router. This issue has been resolved in version 5.7.7. There is no workaround and users are advised to upgrade as soon as possible.</description>
      <guid isPermaLink="false">CVE-2022-21651|2024-08-03T02:46:39.541Z</guid>
      <pubDate>Wed, 05 Jan 2022 19:15:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-24879|2024-08-03T04:29:00.197Z -- shopware -- shopware
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-24879</link>
      <description>Shopware is an open source e-commerce software platform. Versions prior to 5.7.9 are vulnerable to malfunction of cross-site request forgery (CSRF) token validation. Under certain circumstances, the CSRF tokens were not generated anew and not validated correctly. This issue is fixed in version 5.7.9. Users of older versions may attempt to mitigate the vulnerability by using the Shopware security plugin.</description>
      <guid isPermaLink="false">CVE-2022-24879|2024-08-03T04:29:00.197Z</guid>
      <pubDate>Thu, 28 Apr 2022 14:15:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-24746|2024-08-03T04:20:50.458Z -- shopware -- platform
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-24746</link>
      <description>Shopware is an open commerce platform based on the Symfony php Framework and the Vue javascript framework. In affected versions it is possible to inject code via the voucher code form. This issue has been patched in version 6.4.8.1. There are no known workarounds for this issue.</description>
      <guid isPermaLink="false">CVE-2022-24746|2024-08-03T04:20:50.458Z</guid>
      <pubDate>Wed, 09 Mar 2022 22:25:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-21652|2024-08-03T02:46:39.393Z -- shopware -- shopware
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-21652</link>
      <description>Shopware is an open source e-commerce software platform. In affected versions shopware would not invalidate a user session in the event of a password change. With version 5.7.7 the session validation was adjusted, so that sessions created prior to the latest password change of a customer account can't be used to login with said account. This also means, that upon a password change, all existing sessions for a given customer account are automatically considered invalid. There is no workaround for this issue.</description>
      <guid isPermaLink="false">CVE-2022-21652|2024-08-03T02:46:39.393Z</guid>
      <pubDate>Wed, 05 Jan 2022 19:20:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-24892|2024-08-03T04:29:00.669Z -- shopware -- shopware
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-24892</link>
      <description>Shopware is an open source e-commerce software platform. Starting with version 5.0.4 and before version 5.7.9, multiple tokens for password reset can be requested. All tokens can be used to change the password. This makes it possible for an attacker to take over the victim's account if they somehow gain access to the victims email account and find an unused password reset token in the emails. This issue is fixed in version 5.7.9.</description>
      <guid isPermaLink="false">CVE-2022-24892|2024-08-03T04:29:00.669Z</guid>
      <pubDate>Thu, 28 Apr 2022 14:20:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-24873|2024-08-03T04:29:00.662Z -- shopware -- shopware
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-24873</link>
      <description>Shopware is an open source e-commerce software platform. Prior to version 5.7.9, Shopware is vulnerable to non-stored cross-site scripting in the storefront. This issue is fixed in version 5.7.9. Users of older versions may attempt to mitigate the vulnerability by using the Shopware security plugin.</description>
      <guid isPermaLink="false">CVE-2022-24873|2024-08-03T04:29:00.662Z</guid>
      <pubDate>Thu, 28 Apr 2022 13:45:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-24872|2024-08-03T04:29:00.723Z -- shopware -- platform
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-24872</link>
      <description>Shopware is an open commerce platform based on Symfony Framework and Vue. Permissions set to sales channel context by admin-api are still usable within normal user session. Users are advised to update to the current version 6.4.10.1. For older versions of 6.1, 6.2, and 6.3, corresponding security measures are also available via a plugin. There are no known workarounds for this issue.</description>
      <guid isPermaLink="false">CVE-2022-24872|2024-08-03T04:29:00.723Z</guid>
      <pubDate>Wed, 20 Apr 2022 19:15:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27917|2024-08-02T00:41:55.530Z -- shopware -- shopware</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27917</link>
      <description>Shopware is an open commerce platform based on Symfony Framework and Vue. The Symfony Session Handler pops the Session Cookie and assigns it to the Response. Since Shopware 6.5.8.0, the 404 pages are cached to improve the performance of 404 pages. So the cached Response which contains a Session Cookie when the Browser accessing the 404 page, has no cookies yet. The Symfony Session Handler is in use, when no explicit Session configuration has been done. When Redis is in use for Sessions using the PHP Redis extension, this exploiting code is not used. Shopware version 6.5.8.7 contains a patch for this issue. As a workaround, use Redis for Sessions, as this does not trigger the exploit code.</description>
      <guid isPermaLink="false">CVE-2024-27917|2024-08-02T00:41:55.530Z</guid>
      <pubDate>Wed, 06 Mar 2024 19:36:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27917|2024-03-06T19:36:27.357Z -- shopware -- shopware</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27917</link>
      <description>Shopware is an open commerce platform based on Symfony Framework and Vue. The Symfony Session Handler pops the Session Cookie and assigns it to the Response. Since Shopware 6.5.8.0, the 404 pages are cached to improve the performance of 404 pages. So the cached Response which contains a Session Cookie when the Browser accessing the 404 page, has no cookies yet. The Symfony Session Handler is in use, when no explicit Session configuration has been done. When Redis is in use for Sessions using the PHP Redis extension, this exploiting code is not used. Shopware version 6.5.8.7 contains a patch for this issue. As a workaround, use Redis for Sessions, as this does not trigger the exploit code.</description>
      <guid isPermaLink="false">CVE-2024-27917|2024-03-06T19:36:27.357Z</guid>
      <pubDate>Wed, 06 Mar 2024 19:36:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31447|2024-04-08T15:48:24.047Z -- shopware -- shopware</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-31447</link>
      <description>Shopware 6 is an open commerce platform based on Symfony Framework and Vue. Starting in version 6.3.5.0 and prior to versions 6.6.1.0 and 6.5.8.8, when a authenticated request is made to `POST /store-api/account/logout`, the cart will be cleared, but the User won't be logged out. This affects only the direct store-api usage, as the PHP Storefront listens additionally on `CustomerLogoutEvent` and invalidates the session additionally. The problem has been fixed in Shopware 6.6.1.0 and 6.5.8.8. Those who are unable to update can install the latest version of the Shopware Security Plugin as a workaround.</description>
      <guid isPermaLink="false">CVE-2024-31447|2024-04-08T15:48:24.047Z</guid>
      <pubDate>Mon, 08 Apr 2024 15:39:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31447|2024-08-02T01:52:56.942Z -- shopware -- shopware</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-31447</link>
      <description>Shopware 6 is an open commerce platform based on Symfony Framework and Vue. Starting in version 6.3.5.0 and prior to versions 6.6.1.0 and 6.5.8.8, when a authenticated request is made to `POST /store-api/account/logout`, the cart will be cleared, but the User won't be logged out. This affects only the direct store-api usage, as the PHP Storefront listens additionally on `CustomerLogoutEvent` and invalidates the session additionally. The problem has been fixed in Shopware 6.6.1.0 and 6.5.8.8. Those who are unable to update can install the latest version of the Shopware Security Plugin as a workaround.</description>
      <guid isPermaLink="false">CVE-2024-31447|2024-08-02T01:52:56.942Z</guid>
      <pubDate>Mon, 08 Apr 2024 15:39:29 +0000</pubDate>
    </item>
  </channel>
</rss>

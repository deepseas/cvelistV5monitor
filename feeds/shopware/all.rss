<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>CVE Feed for shopware -- all</title><link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/shopware/all.rss</link><description>The latest CVEs for shopware -- all</description><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><lastBuildDate>Fri, 31 May 2024 16:28:17 +0000</lastBuildDate><ttl>60</ttl><item><title>CVE-2024-22408|2024-01-16T22:26:41.447Z -- shopware -- shopware
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-22408</link><description>Shopware is an open headless commerce platform. The implemented Flow Builder functionality in the Shopware application does not adequately validate the URL used when creating the “call webhook” action. This enables malicious users to perform web requests to internal hosts. This issue has been fixed in the Commercial Plugin release 6.5.7.4 or with the Security Plugin. For installations with Shopware 6.4 the Security plugin is recommended to be installed and up to date. For older versions of 6.4 and 6.5 corresponding security measures are also available via a plugin. For the full range of functions, we recommend updating to the latest Shopware version.

</description><guid isPermaLink="false">CVE-2024-22408|2024-01-16T22:26:41.447Z</guid><pubDate>Tue, 16 Jan 2024 22:26:41 +0000</pubDate></item><item><title>CVE-2024-22407|2024-01-16T22:29:06.955Z -- shopware -- shopware
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-22407</link><description>Shopware is an open headless commerce platform. In the Shopware CMS, the state handler for orders fails to sufficiently verify user authorizations for actions that modify the payment, delivery, and/or order status. Due to this inadequate implementation, users lacking 'write' permissions for orders are still able to change the order state. This issue has been addressed and users are advised to update to Shopware 6.5.7.4. For older versions of 6.1, 6.2, 6.3 and 6.4 corresponding security measures are also available via a plugin. For the full range of functions, we recommend updating to the latest Shopware version.</description><guid isPermaLink="false">CVE-2024-22407|2024-01-16T22:29:06.955Z</guid><pubDate>Tue, 16 Jan 2024 22:29:06 +0000</pubDate></item><item><title>CVE-2024-22406|2024-01-16T22:30:04.324Z -- shopware -- shopware
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-22406</link><description>Shopware is an open headless commerce platform. The Shopware application API contains a search functionality which enables users to search through information stored within their Shopware instance. The searches performed by this function can be aggregated using the parameters in the “aggregations” object. The ‘name’ field in this “aggregations” object is vulnerable SQL-injection and can be exploited using time-based SQL-queries.  This issue has been addressed and users are advised to update to Shopware 6.5.7.4. For older versions of 6.1, 6.2, 6.3 and 6.4 corresponding security measures are also available via a plugin. For the full range of functions, we recommend updating to the latest Shopware version.</description><guid isPermaLink="false">CVE-2024-22406|2024-01-16T22:30:04.324Z</guid><pubDate>Tue, 16 Jan 2024 22:30:04 +0000</pubDate></item><item><title>CVE-2024-27917|2024-03-06T19:36:27.357Z -- shopware -- shopware
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27917</link><description>Shopware is an open commerce platform based on Symfony Framework and Vue. The Symfony Session Handler pops the Session Cookie and assigns it to the Response. Since Shopware 6.5.8.0, the 404 pages are cached to improve the performance of 404 pages. So the cached Response which contains a Session Cookie when the Browser accessing the 404 page, has no cookies yet. The Symfony Session Handler is in use, when no explicit Session configuration has been done. When Redis is in use for Sessions using the PHP Redis extension, this exploiting code is not used. Shopware version 6.5.8.7 contains a patch for this issue. As a workaround, use Redis for Sessions, as this does not trigger the exploit code.</description><guid isPermaLink="false">CVE-2024-27917|2024-03-06T19:36:27.357Z</guid><pubDate>Wed, 06 Mar 2024 19:36:27 +0000</pubDate></item><item><title>CVE-2024-31447|2024-04-08T15:48:24.047Z -- shopware -- shopware
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-31447</link><description>Shopware 6 is an open commerce platform based on Symfony Framework and Vue. Starting in version 6.3.5.0 and prior to versions 6.6.1.0 and 6.5.8.8, when a authenticated request is made to `POST /store-api/account/logout`, the cart will be cleared, but the User won't be logged out. This affects only the direct store-api usage, as the PHP Storefront listens additionally on `CustomerLogoutEvent` and invalidates the session additionally. The problem has been fixed in Shopware 6.6.1.0 and 6.5.8.8. Those who are unable to update can install the latest version of the Shopware Security Plugin as a workaround.
</description><guid isPermaLink="false">CVE-2024-31447|2024-04-08T15:48:24.047Z</guid><pubDate>Mon, 08 Apr 2024 15:39:29 +0000</pubDate></item></channel></rss>
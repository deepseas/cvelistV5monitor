<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for shopware -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/shopware/all.rss</link>
    <description>The latest CVEs for shopware -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 17:22:34 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-22733|2024-08-02T10:13:50.192Z -- shopware -- platform
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-22733</link>
      <description>Shopware is an open source commerce platform based on Symfony Framework and Vue js. In affected versions the log module would write out all kind of sent mails. An attacker with access to either the local system logs or a centralized logging store may have access to other users accounts. This issue has been addressed in version 6.4.18.1. For older versions of 6.1, 6.2, and 6.3, corresponding security measures are also available via a plugin. For the full range of functions, we recommend updating to the latest Shopware version. Users unable to upgrade may remove from all users the log module ACL rights or disable logging.</description>
      <guid isPermaLink="false">CVE-2023-22733|2024-08-02T10:13:50.192Z</guid>
      <pubDate>Tue, 17 Jan 2023 21:37:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-34099|2024-08-02T16:01:53.452Z -- shopware -- shopware
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-34099</link>
      <description>Shopware is an open source e-commerce software. The mail validation in the registration process had some flaws, so it was possible to construct different mail addresses, that in the end result in the same address, which is shared by multiple accounts. This issue has been addressed in version 5.7.18 and users are advised to update. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-34099|2024-08-02T16:01:53.452Z</guid>
      <pubDate>Tue, 27 Jun 2023 16:29:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-34098|2024-08-02T16:01:53.536Z -- shopware -- shopware
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-34098</link>
      <description>Shopware is an open source e-commerce software. Due to an incorrect configuration in the `.htaccess` file, the configuration file of the Javascript could be read in production environments (`themes/package-lock.json`). With this information, the specific Shopware version in a deployment might be determined by an attacker, which could be used for further attacks. Users are advised to update to version 5.7.18. There are no known workarounds for this vulnerability.
</description>
      <guid isPermaLink="false">CVE-2023-34098|2024-08-02T16:01:53.536Z</guid>
      <pubDate>Tue, 27 Jun 2023 16:25:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-22730|2024-08-02T10:13:50.235Z -- shopware -- platform
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-22730</link>
      <description>Shopware is an open source commerce platform based on Symfony Framework and Vue js. In affected versions It was possible to put the same line item multiple times in the cart using the AP. The Cart Validators checked the line item's individuality and the user was able to bypass quantity limits in sales. This problem has been fixed with version 6.4.18.1. Users on major versions 6.1, 6.2, and 6.3 may also obtain this fix via a plugin. 
</description>
      <guid isPermaLink="false">CVE-2023-22730|2024-08-02T10:13:50.235Z</guid>
      <pubDate>Tue, 17 Jan 2023 21:27:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-22734|2024-08-02T10:13:50.203Z -- shopware -- platform
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-22734</link>
      <description>Shopware is an open source commerce platform based on Symfony Framework and Vue js. The newsletter double opt-in validation was not checked properly, and it was possible to skip the complete double opt in process. As a result operators may have inconsistencies in their newsletter systems. This problem has been fixed with version 6.4.18.1. Users are advised to upgrade. Users unable to upgrade may find security measures are available via a plugin for major versions 6.1, 6.2, and 6.3. Users may also disable newsletter registration completely.
</description>
      <guid isPermaLink="false">CVE-2023-22734|2024-08-02T10:13:50.203Z</guid>
      <pubDate>Tue, 17 Jan 2023 21:21:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-23941|2024-08-02T10:49:07.974Z -- shopware -- swagpaypal
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-23941</link>
      <description>SwagPayPal is a PayPal integration for shopware/platform. If JavaScript-based PayPal checkout methods are used (PayPal Plus, Smart Payment Buttons, SEPA, Pay Later, Venmo, Credit card), the amount and item list sent to PayPal may not be identical to the one in the created order. The problem has been fixed with version 5.4.4. As a workaround, disable the aforementioned payment methods or use the Security Plugin in version &gt;= 1.0.21.</description>
      <guid isPermaLink="false">CVE-2023-23941|2024-08-02T10:49:07.974Z</guid>
      <pubDate>Fri, 03 Feb 2023 20:26:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-22732|2024-08-02T10:13:50.234Z -- shopware -- platform
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-22732</link>
      <description>Shopware is an open source commerce platform based on Symfony Framework and Vue js. The Administration session expiration was set to one week, when an attacker has stolen the session cookie they could use it for a long period of time. In version 6.4.18.1 an automatic logout into the Administration session has been added. As a result the user will be logged out when they are inactive. Users are advised to upgrade. There are no known workarounds for this issue.
</description>
      <guid isPermaLink="false">CVE-2023-22732|2024-08-02T10:13:50.234Z</guid>
      <pubDate>Tue, 17 Jan 2023 21:34:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-22731|2024-08-02T10:13:50.227Z -- shopware -- platform
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-22731</link>
      <description>Shopware is an open source commerce platform based on Symfony Framework and Vue js. In a Twig environment **without the Sandbox extension**, it is possible to refer to PHP functions in twig filters like `map`, `filter`, `sort`. This allows a template to call any global PHP function and thus execute arbitrary code. The attacker must have access to a Twig environment in order to exploit this vulnerability. This problem has been fixed with 6.4.18.1 with an override of the specified filters until the integration of the Sandbox extension has been finished. Users are advised to upgrade. Users of major versions 6.1, 6.2, and 6.3 may also receive this fix via a plugin.
</description>
      <guid isPermaLink="false">CVE-2023-22731|2024-08-02T10:13:50.227Z</guid>
      <pubDate>Tue, 17 Jan 2023 21:31:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27917|2024-08-02T00:41:55.530Z -- shopware -- shopware</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27917</link>
      <description>Shopware is an open commerce platform based on Symfony Framework and Vue. The Symfony Session Handler pops the Session Cookie and assigns it to the Response. Since Shopware 6.5.8.0, the 404 pages are cached to improve the performance of 404 pages. So the cached Response which contains a Session Cookie when the Browser accessing the 404 page, has no cookies yet. The Symfony Session Handler is in use, when no explicit Session configuration has been done. When Redis is in use for Sessions using the PHP Redis extension, this exploiting code is not used. Shopware version 6.5.8.7 contains a patch for this issue. As a workaround, use Redis for Sessions, as this does not trigger the exploit code.</description>
      <guid isPermaLink="false">CVE-2024-27917|2024-08-02T00:41:55.530Z</guid>
      <pubDate>Wed, 06 Mar 2024 19:36:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27917|2024-03-06T19:36:27.357Z -- shopware -- shopware</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27917</link>
      <description>Shopware is an open commerce platform based on Symfony Framework and Vue. The Symfony Session Handler pops the Session Cookie and assigns it to the Response. Since Shopware 6.5.8.0, the 404 pages are cached to improve the performance of 404 pages. So the cached Response which contains a Session Cookie when the Browser accessing the 404 page, has no cookies yet. The Symfony Session Handler is in use, when no explicit Session configuration has been done. When Redis is in use for Sessions using the PHP Redis extension, this exploiting code is not used. Shopware version 6.5.8.7 contains a patch for this issue. As a workaround, use Redis for Sessions, as this does not trigger the exploit code.</description>
      <guid isPermaLink="false">CVE-2024-27917|2024-03-06T19:36:27.357Z</guid>
      <pubDate>Wed, 06 Mar 2024 19:36:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31447|2024-04-08T15:48:24.047Z -- shopware -- shopware</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-31447</link>
      <description>Shopware 6 is an open commerce platform based on Symfony Framework and Vue. Starting in version 6.3.5.0 and prior to versions 6.6.1.0 and 6.5.8.8, when a authenticated request is made to `POST /store-api/account/logout`, the cart will be cleared, but the User won't be logged out. This affects only the direct store-api usage, as the PHP Storefront listens additionally on `CustomerLogoutEvent` and invalidates the session additionally. The problem has been fixed in Shopware 6.6.1.0 and 6.5.8.8. Those who are unable to update can install the latest version of the Shopware Security Plugin as a workaround.</description>
      <guid isPermaLink="false">CVE-2024-31447|2024-04-08T15:48:24.047Z</guid>
      <pubDate>Mon, 08 Apr 2024 15:39:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31447|2024-08-02T01:52:56.942Z -- shopware -- shopware</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-31447</link>
      <description>Shopware 6 is an open commerce platform based on Symfony Framework and Vue. Starting in version 6.3.5.0 and prior to versions 6.6.1.0 and 6.5.8.8, when a authenticated request is made to `POST /store-api/account/logout`, the cart will be cleared, but the User won't be logged out. This affects only the direct store-api usage, as the PHP Storefront listens additionally on `CustomerLogoutEvent` and invalidates the session additionally. The problem has been fixed in Shopware 6.6.1.0 and 6.5.8.8. Those who are unable to update can install the latest version of the Shopware Security Plugin as a workaround.</description>
      <guid isPermaLink="false">CVE-2024-31447|2024-08-02T01:52:56.942Z</guid>
      <pubDate>Mon, 08 Apr 2024 15:39:29 +0000</pubDate>
    </item>
  </channel>
</rss>

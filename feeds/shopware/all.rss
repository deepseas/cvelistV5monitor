<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for shopware -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/shopware/all.rss</link>
    <description>The latest CVEs for shopware -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 19:19:44 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2021-37710|2024-08-04T01:23:01.529Z -- shopware -- platform
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-37710</link>
      <description>Shopware is an open source eCommerce platform. Versions prior to 6.4.3.1 contain a Cross-Site Scripting vulnerability via SVG media files. Version 6.4.3.1 contains a patch. As workarounds for older versions of 6.1, 6.2, and 6.3, corresponding security measures are also available via a plugin.</description>
      <guid isPermaLink="false">CVE-2021-37710|2024-08-04T01:23:01.529Z</guid>
      <pubDate>Mon, 16 Aug 2021 22:20:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-41188|2024-08-04T03:08:31.242Z -- shopware -- shopware
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-41188</link>
      <description>Shopware is open source e-commerce software. Versions prior to 5.7.6 contain a cross-site scripting vulnerability. This issue is patched in version 5.7.6. Two workarounds are available. Using the security plugin or adding a particular following config to the `.htaccess` file will protect against cross-site scripting in this case. There is also a config for those using nginx as a server. The plugin and the configs can be found on the GitHub Security Advisory page for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2021-41188|2024-08-04T03:08:31.242Z</guid>
      <pubDate>Tue, 26 Oct 2021 15:00:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-37711|2024-08-04T01:23:01.658Z -- shopware -- platform
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-37711</link>
      <description>Versions prior to 6.4.3.1 contain an authenticated server-side request forgery vulnerability in file upload via URL. Version 6.4.3.1 contains a patch. As workarounds for older versions of 6.1, 6.2, and 6.3, corresponding security measures are also available via a plugin.</description>
      <guid isPermaLink="false">CVE-2021-37711|2024-08-04T01:23:01.658Z</guid>
      <pubDate>Mon, 16 Aug 2021 22:25:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-37708|2024-08-04T01:23:01.658Z -- shopware -- platform
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-37708</link>
      <description>Shopware is an open source eCommerce platform. Versions prior to 6.4.3.1 contain a command injection vulnerability in mail agent settings. Version 6.4.3.1 contains a patch. As workarounds for older versions of 6.1, 6.2, and 6.3, corresponding security measures are also available via a plugin.</description>
      <guid isPermaLink="false">CVE-2021-37708|2024-08-04T01:23:01.658Z</guid>
      <pubDate>Mon, 16 Aug 2021 19:15:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-37707|2024-08-04T01:23:01.507Z -- shopware -- platform
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-37707</link>
      <description>Shopware is an open source eCommerce platform. Versions prior to 6.4.3.1 contain a vulnerability that allows manipulation of product reviews via API. Version 6.4.3.1 contains a patch. As workarounds for older versions of 6.1, 6.2, and 6.3, corresponding security measures are also available via a plugin.</description>
      <guid isPermaLink="false">CVE-2021-37707|2024-08-04T01:23:01.507Z</guid>
      <pubDate>Mon, 16 Aug 2021 18:55:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-37709|2024-08-04T01:23:01.522Z -- shopware -- platform
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-37709</link>
      <description>Shopware is an open source eCommerce platform. Versions prior to 6.4.3.1 contain a vulnerability involving an insecure direct object reference of log files of the Import/Export feature. Version 6.4.3.1 contains a patch. As workarounds for older versions of 6.1, 6.2, and 6.3, corresponding security measures are also available via a plugin.</description>
      <guid isPermaLink="false">CVE-2021-37709|2024-08-04T01:23:01.522Z</guid>
      <pubDate>Mon, 16 Aug 2021 22:05:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27917|2024-08-02T00:41:55.530Z -- shopware -- shopware</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27917</link>
      <description>Shopware is an open commerce platform based on Symfony Framework and Vue. The Symfony Session Handler pops the Session Cookie and assigns it to the Response. Since Shopware 6.5.8.0, the 404 pages are cached to improve the performance of 404 pages. So the cached Response which contains a Session Cookie when the Browser accessing the 404 page, has no cookies yet. The Symfony Session Handler is in use, when no explicit Session configuration has been done. When Redis is in use for Sessions using the PHP Redis extension, this exploiting code is not used. Shopware version 6.5.8.7 contains a patch for this issue. As a workaround, use Redis for Sessions, as this does not trigger the exploit code.</description>
      <guid isPermaLink="false">CVE-2024-27917|2024-08-02T00:41:55.530Z</guid>
      <pubDate>Wed, 06 Mar 2024 19:36:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27917|2024-03-06T19:36:27.357Z -- shopware -- shopware</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27917</link>
      <description>Shopware is an open commerce platform based on Symfony Framework and Vue. The Symfony Session Handler pops the Session Cookie and assigns it to the Response. Since Shopware 6.5.8.0, the 404 pages are cached to improve the performance of 404 pages. So the cached Response which contains a Session Cookie when the Browser accessing the 404 page, has no cookies yet. The Symfony Session Handler is in use, when no explicit Session configuration has been done. When Redis is in use for Sessions using the PHP Redis extension, this exploiting code is not used. Shopware version 6.5.8.7 contains a patch for this issue. As a workaround, use Redis for Sessions, as this does not trigger the exploit code.</description>
      <guid isPermaLink="false">CVE-2024-27917|2024-03-06T19:36:27.357Z</guid>
      <pubDate>Wed, 06 Mar 2024 19:36:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31447|2024-04-08T15:48:24.047Z -- shopware -- shopware</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-31447</link>
      <description>Shopware 6 is an open commerce platform based on Symfony Framework and Vue. Starting in version 6.3.5.0 and prior to versions 6.6.1.0 and 6.5.8.8, when a authenticated request is made to `POST /store-api/account/logout`, the cart will be cleared, but the User won't be logged out. This affects only the direct store-api usage, as the PHP Storefront listens additionally on `CustomerLogoutEvent` and invalidates the session additionally. The problem has been fixed in Shopware 6.6.1.0 and 6.5.8.8. Those who are unable to update can install the latest version of the Shopware Security Plugin as a workaround.</description>
      <guid isPermaLink="false">CVE-2024-31447|2024-04-08T15:48:24.047Z</guid>
      <pubDate>Mon, 08 Apr 2024 15:39:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31447|2024-08-02T01:52:56.942Z -- shopware -- shopware</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-31447</link>
      <description>Shopware 6 is an open commerce platform based on Symfony Framework and Vue. Starting in version 6.3.5.0 and prior to versions 6.6.1.0 and 6.5.8.8, when a authenticated request is made to `POST /store-api/account/logout`, the cart will be cleared, but the User won't be logged out. This affects only the direct store-api usage, as the PHP Storefront listens additionally on `CustomerLogoutEvent` and invalidates the session additionally. The problem has been fixed in Shopware 6.6.1.0 and 6.5.8.8. Those who are unable to update can install the latest version of the Shopware Security Plugin as a workaround.</description>
      <guid isPermaLink="false">CVE-2024-31447|2024-08-02T01:52:56.942Z</guid>
      <pubDate>Mon, 08 Apr 2024 15:39:29 +0000</pubDate>
    </item>
  </channel>
</rss>

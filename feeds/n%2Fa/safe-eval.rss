<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for n/a -- safe-eval</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/n%2Fa/safe-eval.rss</link>
    <description>The latest CVEs for n/a -- safe-eval</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 12 Jun 2024 11:24:42 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-26122|2023-04-11T05:00:02.658Z -- n%2Fa -- safe-eval
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-26122</link>
      <description>All versions of the package safe-eval are vulnerable to Sandbox Bypass due to improper input sanitization. The vulnerability is derived from prototype pollution exploitation.&#13;Exploiting this vulnerability might result in remote code execution ("RCE").&#13;&#13;**Vulnerable functions:**&#13;&#13;__defineGetter__, stack(), toLocaleString(), propertyIsEnumerable.call(),  valueOf().</description>
      <guid isPermaLink="false">CVE-2023-26122|2023-04-11T05:00:02.658Z</guid>
      <pubDate>Tue, 11 Apr 2023 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-26121|2023-04-11T05:00:01.308Z -- n%2Fa -- safe-eval
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-26121</link>
      <description>All versions of the package safe-eval are vulnerable to Prototype Pollution via the safeEval function, due to improper sanitization of its parameter content.</description>
      <guid isPermaLink="false">CVE-2023-26121|2023-04-11T05:00:01.308Z</guid>
      <pubDate>Tue, 11 Apr 2023 05:00:01 +0000</pubDate>
    </item>
  </channel>
</rss>

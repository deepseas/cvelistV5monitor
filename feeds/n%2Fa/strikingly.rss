<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for n/a -- Strikingly</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/n%2Fa/strikingly.rss</link>
    <description>The latest CVEs for n/a -- Strikingly</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 12 Jun 2024 11:24:27 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-2582|2023-05-08T00:00:00 -- n%2Fa -- strikingly
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2582</link>
      <description>A prototype pollution vulnerability exists in Strikingly CMS which can result in reflected cross-site scripting (XSS) in affected applications and sites built with Strikingly. The vulnerability exists because of Strikingly JavaScript library parsing the URL fragment allows access to the __proto__ or constructor properties and the Object prototype. By leveraging an embedded gadget like jQuery, an attacker who convinces a victim to visit a specially crafted link could achieve arbitrary javascript execution in the context of the user's browser.</description>
      <guid isPermaLink="false">CVE-2023-2582|2023-05-08T00:00:00</guid>
      <pubDate>Mon, 08 May 2023 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>

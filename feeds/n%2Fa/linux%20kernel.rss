<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for n/a -- Linux kernel</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/n%2Fa/linux%20kernel.rss</link>
    <description>The latest CVEs for n/a -- Linux kernel</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 12 Jun 2024 11:24:28 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-1078|2023-11-05T18:06:14.308401 -- n%2Fa -- linux%20kernel
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1078</link>
      <description>A flaw was found in the Linux Kernel in RDS (Reliable Datagram Sockets) protocol. The rds_rm_zerocopy_callback() uses list_entry() on the head of a list causing a type confusion. Local user can trigger this with rds_message_put(). Type confusion leads to `struct rds_msg_zcopy_info *info` actually points to something else that is potentially controlled by local user. It is known how to trigger this, which causes an out of bounds access, and a lock corruption.</description>
      <guid isPermaLink="false">CVE-2023-1078|2023-11-05T18:06:14.308401</guid>
      <pubDate>Mon, 27 Mar 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1652|2023-05-11T00:00:00 -- n%2Fa -- linux%20kernel
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1652</link>
      <description>A use-after-free flaw was found in nfsd4_ssc_setup_dul in fs/nfsd/nfs4proc.c in the NFS filesystem in the Linux Kernel. This issue could allow a local attacker to crash the system or it may lead to a kernel information leak problem.</description>
      <guid isPermaLink="false">CVE-2023-1652|2023-05-11T00:00:00</guid>
      <pubDate>Wed, 29 Mar 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1079|2023-05-03T00:00:00 -- n%2Fa -- linux%20kernel
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1079</link>
      <description>A flaw was found in the Linux kernel. A use-after-free may be triggered in asus_kbd_backlight_set when plugging/disconnecting in a malicious USB device, which advertises itself as an Asus device. Similarly to the previous known CVE-2023-25012, but in asus devices, the work_struct may be scheduled by the LED controller while the device is disconnecting, triggering a use-after-free on the struct asus_kbd_leds *led structure. A malicious USB device may exploit the issue to cause memory corruption with controlled data.</description>
      <guid isPermaLink="false">CVE-2023-1079|2023-05-03T00:00:00</guid>
      <pubDate>Mon, 27 Mar 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1583|2023-07-23T00:00:00 -- n%2Fa -- linux%20kernel
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1583</link>
      <description>A NULL pointer dereference was found in io_file_bitmap_get in io_uring/filetable.c in the io_uring sub-component in the Linux Kernel. When fixed files are unregistered, some context information (file_alloc_{start,end} and alloc_hint) is not cleared. A subsequent request that has auto index selection enabled via IORING_FILE_INDEX_ALLOC can cause a NULL pointer dereference. An unprivileged user can use the flaw to cause a system crash.</description>
      <guid isPermaLink="false">CVE-2023-1583|2023-07-23T00:00:00</guid>
      <pubDate>Fri, 24 Mar 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1076|2023-05-03T00:00:00 -- n%2Fa -- linux%20kernel
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1076</link>
      <description>A flaw was found in the Linux Kernel. The tun/tap sockets have their socket UID hardcoded to 0 due to a type confusion in their initialization function. While it will be often correct, as tuntap devices require CAP_NET_ADMIN, it may not always be the case, e.g., a non-root user only having that capability. This would make tun/tap sockets being incorrectly treated in filtering/routing decisions, possibly bypassing network filters.</description>
      <guid isPermaLink="false">CVE-2023-1076|2023-05-03T00:00:00</guid>
      <pubDate>Mon, 27 Mar 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1077|2024-01-11T19:06:55.294655 -- n%2Fa -- linux%20kernel
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1077</link>
      <description>In the Linux kernel, pick_next_rt_entity() may return a type confused entry, not detected by the BUG_ON condition, as the confused entry will not be NULL, but list_head.The buggy error condition would lead to a type confused entry with the list head,which would then be used as a type confused sched_rt_entity,causing memory corruption.</description>
      <guid isPermaLink="false">CVE-2023-1077|2024-01-11T19:06:55.294655</guid>
      <pubDate>Mon, 27 Mar 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0210|2023-07-23T00:00:00 -- n%2Fa -- linux%20kernel
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0210</link>
      <description>A bug affects the Linux kernelâ€™s ksmbd NTLMv2 authentication and is known to crash the OS immediately in Linux-based systems.</description>
      <guid isPermaLink="false">CVE-2023-0210|2023-07-23T00:00:00</guid>
      <pubDate>Mon, 27 Mar 2023 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3220|2023-06-20T00:00:00 -- n%2Fa -- linux%20kernel
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3220</link>
      <description>An issue was discovered in the Linux kernel through 6.1-rc8. dpu_crtc_atomic_check in drivers/gpu/drm/msm/disp/dpu1/dpu_crtc.c lacks check of the return value of kzalloc() and will cause the NULL Pointer Dereference.</description>
      <guid isPermaLink="false">CVE-2023-3220|2023-06-20T00:00:00</guid>
      <pubDate>Tue, 20 Jun 2023 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>

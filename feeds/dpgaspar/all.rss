<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for dpgaspar -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/dpgaspar/all.rss</link>
    <description>The latest CVEs for dpgaspar -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 22:23:09 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-34110|2024-08-02T16:01:53.900Z -- dpgaspar -- flask-appbuilder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-34110</link>
      <description>Flask-AppBuilder is an application development framework, built on top of Flask. Prior to version 4.3.2, an authenticated malicious actor with Admin privileges, could by adding a special character on the add, edit User forms trigger a database error, this error is surfaced back to this actor on the UI. On certain database engines this error can include the entire user row including the pbkdf2:sha256 hashed password. This vulnerability has been fixed in version 4.3.2.
</description>
      <guid isPermaLink="false">CVE-2023-34110|2024-08-02T16:01:53.900Z</guid>
      <pubDate>Thu, 22 Jun 2023 22:34:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-29005|2024-08-02T14:00:14.338Z -- dpgaspar -- flask-appbuilder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-29005</link>
      <description>Flask-AppBuilder versions before 4.3.0 lack rate limiting which can allow an attacker to brute-force user credentials. Version 4.3.0 includes the ability to enable rate limiting using `AUTH_RATE_LIMITED = True`, `RATELIMIT_ENABLED = True`, and setting an `AUTH_RATE_LIMIT`.</description>
      <guid isPermaLink="false">CVE-2023-29005|2024-08-02T14:00:14.338Z</guid>
      <pubDate>Mon, 10 Apr 2023 20:47:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27083|2024-02-28T15:34:02.490Z -- dpgaspar -- flask-appbuilder</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27083</link>
      <description>Flask-AppBuilder is an application development framework, built on top of Flask. A Cross-Site Scripting (XSS) vulnerability has been discovered on the OAuth login page. An attacker could trick a user to follow a specially crafted URL to the OAuth login page. This URL could inject and execute malicious javascript code that would get executed on the user's browser. This issue was introduced on 4.1.4 and patched on 4.2.1.</description>
      <guid isPermaLink="false">CVE-2024-27083|2024-02-28T15:34:02.490Z</guid>
      <pubDate>Wed, 28 Feb 2024 15:34:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-25128|2024-06-04T17:35:35.173Z -- dpgaspar -- flask-appbuilder</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-25128</link>
      <description>Flask-AppBuilder is an application development framework, built on top of Flask. When Flask-AppBuilder is set to AUTH_TYPE AUTH_OID, it allows an attacker to forge an HTTP request, that could deceive the backend into using any requested OpenID service. This vulnerability could grant an attacker unauthorised privilege access if a custom OpenID service is deployed by the attacker and accessible by the backend. This vulnerability is only exploitable when the application is using the OpenID 2.0 authorization protocol. Upgrade to Flask-AppBuilder 4.3.11 to fix the vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-25128|2024-06-04T17:35:35.173Z</guid>
      <pubDate>Wed, 28 Feb 2024 15:30:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27083|2024-08-02T00:27:57.821Z -- dpgaspar -- flask-appbuilder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27083</link>
      <description>Flask-AppBuilder is an application development framework, built on top of Flask. A Cross-Site Scripting (XSS) vulnerability has been discovered on the OAuth login page. An attacker could trick a user to follow a specially crafted URL to the OAuth login page. This URL could inject and execute malicious javascript code that would get executed on the user's browser. This issue was introduced on 4.1.4 and patched on 4.2.1.</description>
      <guid isPermaLink="false">CVE-2024-27083|2024-08-02T00:27:57.821Z</guid>
      <pubDate>Wed, 28 Feb 2024 15:34:02 +0000</pubDate>
    </item>
  </channel>
</rss>

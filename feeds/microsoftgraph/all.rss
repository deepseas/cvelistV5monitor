<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for microsoftgraph -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/microsoftgraph/all.rss</link>
    <description>The latest CVEs for microsoftgraph -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 12 Jun 2024 11:24:51 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-49282|2023-12-05T22:44:21.628Z -- microsoftgraph -- msgraph-sdk-php
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-49282</link>
      <description>msgraph-sdk-php is the Microsoft Graph Library for PHP. The Microsoft Graph PHP SDK published packages which contained test code that enabled the use of the phpInfo() function from any application that could access and execute the file at vendor/microsoft/microsoft-graph/tests/GetPhpInfo.php.  The phpInfo function exposes system information. The vulnerability affects the GetPhpInfo.php script of the PHP SDK which contains a call to the phpinfo() function. This vulnerability requires a misconfiguration of the server to be present so it can be exploited. For example, making the PHP application’s /vendor directory web accessible. The combination of the vulnerability and the server misconfiguration would allow an attacker to craft an HTTP request that executes the phpinfo() method. The attacker would then be able to get access to system information like configuration, modules, and environment variables and later on use the compromised secrets to access additional data. This problem has been patched in versions 1.109.1 and 2.0.0-RC5. If an immediate deployment with the updated vendor package is not available, you can perform the following temporary workarounds: delete the `vendor/microsoft/microsoft-graph/tests/GetPhpInfo.php` file, remove access to the `/vendor` directory, or disable the phpinfo function.</description>
      <guid isPermaLink="false">CVE-2023-49282|2023-12-05T22:44:21.628Z</guid>
      <pubDate>Tue, 05 Dec 2023 22:40:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-49283|2023-12-05T22:44:40.433Z -- microsoftgraph -- msgraph-sdk-php-core
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-49283</link>
      <description>microsoft-graph-core the Microsoft Graph Library for PHP. The Microsoft Graph Beta PHP SDK published packages which contained test code that enabled the use of the phpInfo() function from any application that could access and execute the file at `vendor/microsoft/microsoft-graph-core/tests/GetPhpInfo.php`. The phpInfo function exposes system information. The vulnerability affects the GetPhpInfo.php script of the PHP SDK which contains a call to the phpinfo() function. This vulnerability requires a misconfiguration of the server to be present so it can be exploited. For example, making the PHP application’s /vendor directory web accessible. The combination of the vulnerability and the server misconfiguration would allow an attacker to craft an HTTP request that executes the phpinfo() method. The attacker would then be able to get access to system information like configuration, modules, and environment variables and later on use the compromised secrets to access additional data. This problem has been patched in version 2.0.2. If an immediate deployment with the updated vendor package is not available, you can perform the following temporary workarounds: delete the `vendor/microsoft/microsoft-graph-core/tests/GetPhpInfo.php` file, remove access to the /vendor directory, or disable the phpinfo function
</description>
      <guid isPermaLink="false">CVE-2023-49283|2023-12-05T22:44:40.433Z</guid>
      <pubDate>Tue, 05 Dec 2023 22:44:40 +0000</pubDate>
    </item>
  </channel>
</rss>

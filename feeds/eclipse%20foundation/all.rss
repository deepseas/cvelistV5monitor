<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Eclipse Foundation -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/eclipse%20foundation/all.rss</link>
    <description>The latest CVEs for Eclipse Foundation -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 17 Jul 2024 16:24:31 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-7272|2024-07-17T15:00:20.172Z -- eclipse%20foundation -- parsson
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7272</link>
      <description>In Eclipse Parsson before 1.0.4 and 1.1.3, a document with a large depth of nested objects can allow an attacker to cause a Java stack overflow exception and denial of service. Eclipse Parsson allows processing (e.g. parse, generate, transform and query) JSON documents.</description>
      <guid isPermaLink="false">CVE-2023-7272|2024-07-17T15:00:20.172Z</guid>
      <pubDate>Wed, 17 Jul 2024 15:00:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5165|2024-06-04T18:02:58.332Z -- eclipse%20foundation -- eclipse%20ditto</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-5165</link>
      <description>In Eclipse Ditto versions 3.0.0 to 3.5.5, the user input of several input fields of the Eclipse  Ditto Explorer User Interface https://eclipse.dev/ditto/user-interface.html  was not properly neutralized and thus vulnerable to both Reflected and Stored XSS (Cross Site Scripting).





Several inputs were not persisted at the backend of Eclipse Ditto, but only in local browser storage to save settings of "environments" of the UI and e.g. the last performed "search queries", resulting in a "Reflected XSS" vulnerability.




However, several other inputs were persisted at the backend of Eclipse Ditto, leading to a "Stored XSS" vulnerability. Those mean that authenticated and authorized users at Eclipse Ditto can persist Things in Ditto which can - when being displayed by other users also being authorized to see those Things in the Eclipse Ditto UI - cause scripts to be executed in the browser of other users.</description>
      <guid isPermaLink="false">CVE-2024-5165|2024-06-04T18:02:58.332Z</guid>
      <pubDate>Thu, 23 May 2024 09:56:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0740|2024-06-04T17:59:17.800Z -- eclipse%20foundation -- eclipse%20target%20management</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0740</link>
      <description>Eclipse Target Management: Terminal and Remote System Explorer (RSE) version &lt;= 4.5.400 has a remote code execution vulnerability that does not require authentication. 





The fixed version is included in Eclipse IDE 2024-03</description>
      <guid isPermaLink="false">CVE-2024-0740|2024-06-04T17:59:17.800Z</guid>
      <pubDate>Fri, 26 Apr 2024 09:36:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4536|2024-06-04T17:53:35.014Z -- eclipse%20foundation -- edc</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4536</link>
      <description>In Eclipse Dataspace Components from version 0.2.1 to 0.6.2, in the EDC Connector component ( https://github.com/eclipse-edc/Connector ), an attacker might obtain OAuth2 client secrets from the vault.

In Eclipse Dataspace Components from version 0.2.1 to 0.6.2, we have identified a security vulnerability in the EDC Connector component ( https://github.com/eclipse-edc/Connector ) regarding the OAuth2-protected data sink feature. When using a custom, OAuth2-protected data sink, the OAuth2-specific data address properties are resolved by the provider data plane. Problematically, the consumer-provided clientSecretKey, which indicates the OAuth2 client secret to retrieve from a secrets vault, is resolved in the context of the provider's vault, not the consumer. This secret's value is then sent to the tokenUrl, also consumer-controlled, as part of an OAuth2 client credentials grant. The returned access token is then sent as a bearer token to the data sink URL.

This feature is now disabled entirely, because not all code paths necessary for a successful realization were fully implemented.</description>
      <guid isPermaLink="false">CVE-2024-4536|2024-06-04T17:53:35.014Z</guid>
      <pubDate>Tue, 07 May 2024 13:11:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3046|2024-04-10T05:51:23.655Z -- eclipse%20foundation -- kura</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3046</link>
      <description>In Eclipse Kura LogServlet component included in versions 5.0.0 to 5.4.1, a specifically crafted request to the servlet can allow an unauthenticated user to retrieve the device logs. Also, downloaded logs may be used by an attacker to perform privilege escalation by using the session id of an authenticated user reported in logs.

This issue affects org.eclipse.kura:org.eclipse.kura.web2 version range [2.0.600, 2.4.0], which is included in Eclipse Kura version range [5.0.0, 5.4.1]</description>
      <guid isPermaLink="false">CVE-2024-3046|2024-04-10T05:51:23.655Z</guid>
      <pubDate>Tue, 09 Apr 2024 10:02:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3933|2024-06-04T17:31:08.547Z -- eclipse%20foundation -- open%20j9</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3933</link>
      <description>In Eclipse OpenJ9 release versions prior to 0.44.0 and after 0.13.0, when running with JVM option -Xgc:concurrentScavenge, the sequence generated for System.arrayCopy on the IBM Z platform with hardware and software support for guarded storage [1], could allow access to a buffer with an incorrect length value when executing an arraycopy sequence while the Concurrent Scavenge Garbage Collection cycle is active and the source and destination memory regions for arraycopy overlap. This allows read and write to addresses beyond the end of the array range.</description>
      <guid isPermaLink="false">CVE-2024-3933|2024-06-04T17:31:08.547Z</guid>
      <pubDate>Mon, 27 May 2024 06:08:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2212|2024-03-26T15:58:27.486Z -- eclipse%20foundation -- threadx</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2212</link>
      <description>In Eclipse ThreadX before 6.4.0,  xQueueCreate() and xQueueCreateSet() 
functions from the FreeRTOS compatibility API 
(utility/rtos_compatibility_layers/FreeRTOS/tx_freertos.c) were missing 
parameter checks. This could lead to integer wraparound, 
under-allocations and heap buffer overflows.</description>
      <guid isPermaLink="false">CVE-2024-2212|2024-03-26T15:58:27.486Z</guid>
      <pubDate>Tue, 26 Mar 2024 15:58:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2452|2024-03-26T15:43:36.233Z -- eclipse%20foundation -- threadx</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2452</link>
      <description>In Eclipse ThreadX NetX Duo before 6.4.0, if an attacker can control 
parameters of __portable_aligned_alloc() could cause an integer 
wrap-around and an allocation smaller than expected. This could cause 
subsequent heap buffer overflows.</description>
      <guid isPermaLink="false">CVE-2024-2452|2024-03-26T15:43:36.233Z</guid>
      <pubDate>Tue, 26 Mar 2024 15:43:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2214|2024-03-26T15:48:36.304Z -- eclipse%20foundation -- threadx</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2214</link>
      <description>In Eclipse ThreadX before version 6.4.0, the _Mtxinit() function in the 
Xtensa port was missing an array size check causing a memory overwrite. 
The affected file was ports/xtensa/xcc/src/tx_clib_lock.c</description>
      <guid isPermaLink="false">CVE-2024-2214|2024-03-26T15:48:36.304Z</guid>
      <pubDate>Tue, 26 Mar 2024 15:48:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2452|2024-06-26T20:51:50.331Z -- eclipse%20foundation -- threadx</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2452</link>
      <description>In Eclipse ThreadX NetX Duo before 6.4.0, if an attacker can control 
parameters of __portable_aligned_alloc() could cause an integer 
wrap-around and an allocation smaller than expected. This could cause 
subsequent heap buffer overflows.</description>
      <guid isPermaLink="false">CVE-2024-2452|2024-06-26T20:51:50.331Z</guid>
      <pubDate>Tue, 26 Mar 2024 15:43:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2214|2024-07-09T19:33:35.132Z -- eclipse%20foundation -- threadx</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2214</link>
      <description>In Eclipse ThreadX before version 6.4.0, the _Mtxinit() function in the 
Xtensa port was missing an array size check causing a memory overwrite. 
The affected file was ports/xtensa/xcc/src/tx_clib_lock.c</description>
      <guid isPermaLink="false">CVE-2024-2214|2024-07-09T19:33:35.132Z</guid>
      <pubDate>Tue, 26 Mar 2024 15:48:36 +0000</pubDate>
    </item>
  </channel>
</rss>

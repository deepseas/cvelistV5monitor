<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>CVE Feed for Eclipse Foundation -- EDC</title><link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/eclipse%20foundation/edc.rss</link><description>The latest CVEs for Eclipse Foundation -- EDC</description><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><lastBuildDate>Tue, 28 May 2024 22:02:45 +0000</lastBuildDate><ttl>60</ttl><item><title>CVE-2024-4536|2024-05-07T13:11:45.310Z -- Eclipse Foundation -- EDC
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4536</link><description>In Eclipse Dataspace Components from version 0.2.1 to 0.6.2, in the EDC Connector component ( https://github.com/eclipse-edc/Connector ), an attacker might obtain OAuth2 client secrets from the vault.

In Eclipse Dataspace Components from version 0.2.1 to 0.6.2, we have identified a security vulnerability in the EDC Connector component ( https://github.com/eclipse-edc/Connector ) regarding the OAuth2-protected data sink feature. When using a custom, OAuth2-protected data sink, the OAuth2-specific data address properties are resolved by the provider data plane. Problematically, the consumer-provided clientSecretKey, which indicates the OAuth2 client secret to retrieve from a secrets vault, is resolved in the context of the provider's vault, not the consumer. This secret's value is then sent to the tokenUrl, also consumer-controlled, as part of an OAuth2 client credentials grant. The returned access token is then sent as a bearer token to the data sink URL.

This feature is now disabled entirely, because not all code paths necessary for a successful realization were fully implemented.

</description><guid isPermaLink="false">CVE-2024-4536|2024-05-07T13:11:45.310Z</guid><pubDate>Tue, 07 May 2024 13:11:45 +0000</pubDate></item></channel></rss>
<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for nothings -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/nothings/all.rss</link>
    <description>The latest CVEs for nothings -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Thu, 12 Sep 2024 14:23:44 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-45679|2024-09-12T13:36:24.697Z -- nothings -- stb
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-45679</link>
      <description>stb_vorbis is a single file MIT licensed library for processing ogg vorbis files. A crafted file may trigger memory allocation failure in `start_decoder`. In that case the function returns early, but some of the pointers in `f-&gt;comment_list` are left initialized and later `setup_free` is called on these pointers in `vorbis_deinit`. This issue may lead to code execution.</description>
      <guid isPermaLink="false">CVE-2023-45679|2024-09-12T13:36:24.697Z</guid>
      <pubDate>Fri, 20 Oct 2023 23:26:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-45675|2024-09-12T13:40:37.887Z -- nothings -- stb
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-45675</link>
      <description>stb_vorbis is a single file MIT licensed library for processing ogg vorbis files. A crafted file may trigger out of bounds write in `f-&gt;vendor[len] = (char)'\0';`. The root cause is that if the len read in `start_decoder` is `-1` and `len + 1` becomes 0 when passed to `setup_malloc`. The `setup_malloc` behaves differently when `f-&gt;alloc.alloc_buffer` is pre-allocated. Instead of returning `NULL` as in `malloc` case it shifts the pre-allocated buffer by zero and returns the currently available memory block. This issue may lead to code execution.</description>
      <guid isPermaLink="false">CVE-2023-45675|2024-09-12T13:40:37.887Z</guid>
      <pubDate>Fri, 20 Oct 2023 23:26:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-45678|2024-09-12T13:37:04.169Z -- nothings -- stb
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-45678</link>
      <description>stb_vorbis is a single file MIT licensed library for processing ogg vorbis files. A crafted file may trigger out of buffer write in `start_decoder` because at maximum `m-&gt;submaps` can be 16 but `submap_floor` and `submap_residue` are declared as arrays of 15 elements. This issue may lead to code execution.</description>
      <guid isPermaLink="false">CVE-2023-45678|2024-09-12T13:37:04.169Z</guid>
      <pubDate>Fri, 20 Oct 2023 23:26:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-45677|2024-09-12T13:37:51.394Z -- nothings -- stb
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-45677</link>
      <description>stb_vorbis is a single file MIT licensed library for processing ogg vorbis files. A crafted file may trigger out of bounds write in `f-&gt;vendor[len] = (char)'\0';`. The root cause is that if `len` read in `start_decoder` is a negative number and `setup_malloc` successfully allocates memory in that case, but memory write is done with a negative index `len`. Similarly if len is INT_MAX the integer overflow len+1 happens in `f-&gt;vendor = (char*)setup_malloc(f, sizeof(char) * (len+1));` and `f-&gt;comment_list[i] = (char*)setup_malloc(f, sizeof(char) * (len+1));`. This issue may lead to code execution.</description>
      <guid isPermaLink="false">CVE-2023-45677|2024-09-12T13:37:51.394Z</guid>
      <pubDate>Fri, 20 Oct 2023 23:26:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-45676|2024-09-12T13:38:48.646Z -- nothings -- stb
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-45676</link>
      <description>stb_vorbis is a single file MIT licensed library for processing ogg vorbis files. A crafted file may trigger out of bounds write in `f-&gt;vendor[i] = get8_packet(f);`. The root cause is an integer overflow in `setup_malloc`. A sufficiently large value in the variable `sz` overflows with `sz+7` in and the negative value passes the maximum available memory buffer check. This issue may lead to code execution.</description>
      <guid isPermaLink="false">CVE-2023-45676|2024-09-12T13:38:48.646Z</guid>
      <pubDate>Fri, 20 Oct 2023 23:26:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-45682|2024-09-12T13:35:19.803Z -- nothings -- stb
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-45682</link>
      <description>stb_vorbis is a single file MIT licensed library for processing ogg vorbis files. A crafted file may trigger out of bounds read in `DECODE` macro when `var` is negative. As it can be seen in the definition of `DECODE_RAW` a negative `var` is a valid value. This issue may be used to leak internal memory allocation information.</description>
      <guid isPermaLink="false">CVE-2023-45682|2024-09-12T13:35:19.803Z</guid>
      <pubDate>Fri, 20 Oct 2023 23:27:04 +0000</pubDate>
    </item>
  </channel>
</rss>

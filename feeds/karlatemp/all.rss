<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Karlatemp -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/karlatemp/all.rss</link>
    <description>The latest CVEs for Karlatemp -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 10:23:06 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-31139|2024-08-03T07:11:39.258Z -- karlatemp -- unsafeaccessor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-31139</link>
      <description>UnsafeAccessor (UA) is a bridge to access jdk.internal.misc.Unsafe &amp; sun.misc.Unsafe. Normally, if UA is loaded as a named module, the internal data of UA is protected by JVM and others can only access UA via UA's standard API. The main application can set up `SecurityCheck.AccessLimiter` for UA to limit access to UA. Starting with version 1.4.0 and prior to version 1.7.0, when `SecurityCheck.AccessLimiter` is set up, untrusted code can access UA without limitation, even when UA is loaded as a named module. This issue does not affect those for whom `SecurityCheck.AccessLimiter` is not set up. Version 1.7.0 contains a patch.</description>
      <guid isPermaLink="false">CVE-2022-31139|2024-08-03T07:11:39.258Z</guid>
      <pubDate>Mon, 11 Jul 2022 18:25:11 +0000</pubDate>
    </item>
  </channel>
</rss>

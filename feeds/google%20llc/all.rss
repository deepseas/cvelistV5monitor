<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Google LLC -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/google%20llc/all.rss</link>
    <description>The latest CVEs for Google LLC -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Tue, 17 Sep 2024 19:20:16 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2021-22564|2024-09-17T00:21:49.352Z -- google%20llc -- libjxl
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-22564</link>
      <description>For certain valid JPEG XL images with a size slightly larger than an integer number of groups (256x256 pixels) when processing the groups out of order the decoder can perform an out of bounds copy of image pixels from an image buffer in the heap to another. This copy can occur when processing the right or bottom edges of the image, but only when groups are processed in certain order. Groups can be processed out of order in multi-threaded decoding environments with heavy thread load but also with images that contain the groups in an arbitrary order in the file. It is recommended to upgrade past 0.6.0 or patch with https://github.com/libjxl/libjxl/pull/775</description>
      <guid isPermaLink="false">CVE-2021-22564|2024-09-17T00:21:49.352Z</guid>
      <pubDate>Mon, 01 Nov 2021 13:10:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-22563|2024-09-17T02:10:45.898Z -- google%20llc -- libjxl
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-22563</link>
      <description>Invalid JPEG XL images using libjxl can cause an out of bounds access on a std::vector&lt;std::vector&lt;T&gt;&gt; when rendering splines. The OOB read access can either lead to a segfault, or rendering splines based on other process memory. It is recommended to upgrade past 0.6.0 or patch with https://github.com/libjxl/libjxl/pull/757</description>
      <guid isPermaLink="false">CVE-2021-22563|2024-09-17T02:10:45.898Z</guid>
      <pubDate>Mon, 01 Nov 2021 13:10:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-22539|2024-09-17T01:46:31.592Z -- google%20llc -- vscode-bazel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-22539</link>
      <description>An attacker can place a crafted JSON config file into the project folder pointing to a custom executable. VScode-bazel allows the workspace path to lint *.bzl files to be set via this config file. As such the attacker is able to execute any executable on the system through vscode-bazel. We recommend upgrading to version 0.4.1 or above.</description>
      <guid isPermaLink="false">CVE-2021-22539|2024-09-17T01:46:31.592Z</guid>
      <pubDate>Fri, 16 Apr 2021 10:15:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-0451|2024-09-17T01:01:18.962Z -- google%20llc -- dart%20sdk
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-0451</link>
      <description>Dart SDK contains the HTTPClient in dart:io library whcih includes authorization headers when handling cross origin redirects. These headers may be explicitly set and contain sensitive information. By default, HttpClient handles redirection logic. If a request is sent to example.com with authorization header and it redirects to an attackers site, they might not expect attacker site to receive authorization header. We recommend updating the Dart SDK to version 2.16.0 or beyond.</description>
      <guid isPermaLink="false">CVE-2022-0451|2024-09-17T01:01:18.962Z</guid>
      <pubDate>Fri, 18 Feb 2022 13:35:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-22548|2024-09-17T01:11:52.435Z -- google%20llc -- asylo
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-22548</link>
      <description>An attacker can change the pointer to untrusted memory to point to trusted memory region which causes copying trusted memory to trusted memory, if the latter is later copied out, it allows for reading of memory regions from the trusted region. It is recommended to update past 0.6.2 or git commit https://github.com/google/asylo/commit/53ed5d8fd8118ced1466e509606dd2f473707a5c</description>
      <guid isPermaLink="false">CVE-2021-22548|2024-09-17T01:11:52.435Z</guid>
      <pubDate>Tue, 08 Jun 2021 13:15:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-25327|2024-09-17T04:15:20.454Z -- google%20llc -- fscrypt
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-25327</link>
      <description>The PAM module for fscrypt doesn't adequately validate fscrypt metadata files, allowing users to create malicious metadata files that prevent other users from logging in. A local user can cause a denial of service by creating a fscrypt metadata file that prevents other users from logging into the system. We recommend upgrading to version 0.3.3 or above</description>
      <guid isPermaLink="false">CVE-2022-25327|2024-09-17T04:15:20.454Z</guid>
      <pubDate>Fri, 25 Feb 2022 11:00:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-22552|2024-09-17T01:40:58.668Z -- google%20llc -- asylo
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-22552</link>
      <description>An untrusted memory read vulnerability in Asylo versions up to 0.6.1 allows an untrusted attacker to pass a syscall number in MessageReader that is then used by sysno() and can bypass validation. This can allow the attacker to read memory from within the secure enclave. We recommend updating to Asylo 0.6.3 or past https://github.com/google/asylo/commit/90d7619e9dd99bcdb6cd28c7649d741d254d9a1a</description>
      <guid isPermaLink="false">CVE-2021-22552|2024-09-17T01:40:58.668Z</guid>
      <pubDate>Mon, 02 Aug 2021 15:40:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-22567|2024-09-17T00:10:28.748Z -- google%20llc -- dart%20sdk
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-22567</link>
      <description>Bidirectional Unicode text can be interpreted and compiled differently than how it appears in editors which can be exploited to get nefarious code passed a code review by appearing benign. An attacker could embed a source that is invisible to a code reviewer that modifies the behavior of a program in unexpected ways.</description>
      <guid isPermaLink="false">CVE-2021-22567|2024-09-17T00:10:28.748Z</guid>
      <pubDate>Wed, 05 Jan 2022 10:55:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-22549|2024-09-17T02:42:42.905Z -- google%20llc -- asylo
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-22549</link>
      <description>An attacker can modify the address to point to trusted memory to overwrite arbitrary trusted memory. It is recommended to update past 0.6.2 or git commit https://github.com/google/asylo/commit/53ed5d8fd8118ced1466e509606dd2f473707a5c</description>
      <guid isPermaLink="false">CVE-2021-22549|2024-09-17T02:42:42.905Z</guid>
      <pubDate>Tue, 08 Jun 2021 13:15:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-8905|2024-09-17T00:06:27.121Z -- google%20llc -- asylo
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-8905</link>
      <description>A buffer length validation vulnerability in Asylo versions prior to 0.6.0 allows an attacker to read data they should not have access to. The 'enc_untrusted_recvfrom' function generates a return value which is deserialized by 'MessageReader', and copied into three different 'extents'. The length of the third 'extents' is controlled by the outside world, and not verified on copy, allowing the attacker to force Asylo to copy trusted memory data into an untrusted buffer of significantly small length.. We recommend updating Asylo to version 0.6.0 or later.</description>
      <guid isPermaLink="false">CVE-2020-8905|2024-09-17T00:06:27.121Z</guid>
      <pubDate>Wed, 12 Aug 2020 18:20:13 +0000</pubDate>
    </item>
  </channel>
</rss>

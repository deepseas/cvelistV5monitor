<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Google LLC -- Guava</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/google%20llc/guava.rss</link>
    <description>The latest CVEs for Google LLC -- Guava</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 20:23:19 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2020-8908|2024-08-04T10:12:10.998Z -- google%20llc -- guava
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-8908</link>
      <description>A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured.

</description>
      <guid isPermaLink="false">CVE-2020-8908|2024-08-04T10:12:10.998Z</guid>
      <pubDate>Thu, 10 Dec 2020 22:10:58 +0000</pubDate>
    </item>
  </channel>
</rss>

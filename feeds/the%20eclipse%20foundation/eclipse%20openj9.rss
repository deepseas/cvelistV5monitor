<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for The Eclipse Foundation -- Eclipse OpenJ9</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/the%20eclipse%20foundation/eclipse%20openj9.rss</link>
    <description>The latest CVEs for The Eclipse Foundation -- Eclipse OpenJ9</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Mon, 05 Aug 2024 20:23:01 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2018-12539|2024-08-05T08:38:06.190Z -- the%20eclipse%20foundation -- eclipse%20openj9
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-12539</link>
      <description>In Eclipse OpenJ9 version 0.8, users other than the process owner may be able to use Java Attach API to connect to an Eclipse OpenJ9 or IBM JVM on the same machine and use Attach API operations, which includes the ability to execute untrusted native code. Attach API is enabled by default on Windows, Linux and AIX JVMs and can be disabled using the command line option -Dcom.ibm.tools.attach.enable=no.</description>
      <guid isPermaLink="false">CVE-2018-12539|2024-08-05T08:38:06.190Z</guid>
      <pubDate>Tue, 14 Aug 2018 19:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-12548|2024-08-05T08:38:06.287Z -- the%20eclipse%20foundation -- eclipse%20openj9
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-12548</link>
      <description>In OpenJDK + Eclipse OpenJ9 version 0.11.0 builds, the public jdk.crypto.jniprovider.NativeCrypto class contains public static natives which accept pointer values that are dereferenced in the native code.</description>
      <guid isPermaLink="false">CVE-2018-12548|2024-08-05T08:38:06.287Z</guid>
      <pubDate>Thu, 31 Jan 2019 20:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-17631|2024-08-05T01:47:13.242Z -- the%20eclipse%20foundation -- eclipse%20openj9
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-17631</link>
      <description>From Eclipse OpenJ9 0.15 to 0.16, access to diagnostic operations such as causing a GC or creating a diagnostic file are permitted without any privilege checks.</description>
      <guid isPermaLink="false">CVE-2019-17631|2024-08-05T01:47:13.242Z</guid>
      <pubDate>Thu, 17 Oct 2019 17:38:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-17639|2024-08-05T01:47:13.522Z -- the%20eclipse%20foundation -- eclipse%20openj9
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-17639</link>
      <description>In Eclipse OpenJ9 prior to version 0.21 on Power platforms, calling the System.arraycopy method with a length longer than the length of the source or destination array can, in certain specially crafted code patterns, cause the current method to return prematurely with an undefined return value. This allows whatever value happens to be in the return register at that time to be used as if it matches the method's declared return type.</description>
      <guid isPermaLink="false">CVE-2019-17639|2024-08-05T01:47:13.522Z</guid>
      <pubDate>Wed, 15 Jul 2020 21:19:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-12549|2024-08-05T08:38:06.337Z -- the%20eclipse%20foundation -- eclipse%20openj9
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-12549</link>
      <description>In Eclipse OpenJ9 version 0.11.0, the OpenJ9 JIT compiler may incorrectly omit a null check on the receiver object of an Unsafe call when accelerating it.</description>
      <guid isPermaLink="false">CVE-2018-12549|2024-08-05T08:38:06.337Z</guid>
      <pubDate>Mon, 11 Feb 2019 15:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-12547|2024-08-05T08:38:05.983Z -- the%20eclipse%20foundation -- eclipse%20openj9
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-12547</link>
      <description>In Eclipse OpenJ9, prior to the 0.12.0 release, the jio_snprintf() and jio_vsnprintf() native methods ignored the length parameter. This affects existing APIs that called the functions to exceed the allocated buffer. This functions were not directly callable by non-native user code.</description>
      <guid isPermaLink="false">CVE-2018-12547|2024-08-05T08:38:05.983Z</guid>
      <pubDate>Mon, 11 Feb 2019 15:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>

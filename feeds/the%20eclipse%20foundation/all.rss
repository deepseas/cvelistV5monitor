<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for The Eclipse Foundation -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/the%20eclipse%20foundation/all.rss</link>
    <description>The latest CVEs for The Eclipse Foundation -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Mon, 05 Aug 2024 07:21:32 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2019-17635|2024-08-05T01:47:13.610Z -- the%20eclipse%20foundation -- eclipse%20memory%20analyzer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-17635</link>
      <description>Eclipse Memory Analyzer version 1.9.1 and earlier is subject to a deserialization vulnerability if an index file of a parsed heap dump is replaced by a malicious version and the heap dump is reopened in Memory Analyzer. The user must chose to reopen an already parsed heap dump with an untrusted index for the problem to occur. The problem can be averted if the index files from an untrusted source are deleted and the heap dump is opened and reparsed. Also some local configuration data is subject to a deserialization vulnerability if the local data were to be replaced with a malicious version. This can be averted if the local configuration data stored on the file system cannot be changed by an attacker. The vulnerability could possibly allow code execution on the local system.</description>
      <guid isPermaLink="false">CVE-2019-17635|2024-08-05T01:47:13.610Z</guid>
      <pubDate>Fri, 17 Jan 2020 18:35:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-17633|2024-08-05T01:47:13.494Z -- the%20eclipse%20foundation -- eclipse%20che
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-17633</link>
      <description>For Eclipse Che versions 6.16 to 7.3.0, with both authentication and TLS disabled, visiting a malicious web site could trigger the start of an arbitrary Che workspace. Che with no authentication and no TLS is not usually deployed on a public network but is often used for local installations (e.g. on personal laptops). In that case, even if the Che API is not exposed externally, some javascript running in the local browser is able to send requests to it.</description>
      <guid isPermaLink="false">CVE-2019-17633|2024-08-05T01:47:13.494Z</guid>
      <pubDate>Thu, 19 Dec 2019 17:05:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-17631|2024-08-05T01:47:13.242Z -- the%20eclipse%20foundation -- eclipse%20openj9
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-17631</link>
      <description>From Eclipse OpenJ9 0.15 to 0.16, access to diagnostic operations such as causing a GC or creating a diagnostic file are permitted without any privilege checks.</description>
      <guid isPermaLink="false">CVE-2019-17631|2024-08-05T01:47:13.242Z</guid>
      <pubDate>Thu, 17 Oct 2019 17:38:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-17639|2024-08-05T01:47:13.522Z -- the%20eclipse%20foundation -- eclipse%20openj9
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-17639</link>
      <description>In Eclipse OpenJ9 prior to version 0.21 on Power platforms, calling the System.arraycopy method with a length longer than the length of the source or destination array can, in certain specially crafted code patterns, cause the current method to return prematurely with an undefined return value. This allows whatever value happens to be in the return register at that time to be used as if it matches the method's declared return type.</description>
      <guid isPermaLink="false">CVE-2019-17639|2024-08-05T01:47:13.522Z</guid>
      <pubDate>Wed, 15 Jul 2020 21:19:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-17634|2024-08-05T01:47:13.640Z -- the%20eclipse%20foundation -- eclipse%20memory%20analyzer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-17634</link>
      <description>Eclipse Memory Analyzer version 1.9.1 and earlier is subject to a cross site scripting (XSS) vulnerability when generating an HTML report from a malicious heap dump. The user must chose todownload, open the malicious heap dump and generate an HTML report for the problem to occur. The heap dump could be specially crafted, or could come from a crafted application or from an application processing malicious data. The vulnerability is present whena report is generated and opened from the Memory Analyzer graphical user interface, or when a report generated in batch mode is then opened in Memory Analyzer or by a web browser. The vulnerability could possibly allow code execution on the local system whenthe report is opened in Memory Analyzer.</description>
      <guid isPermaLink="false">CVE-2019-17634|2024-08-05T01:47:13.640Z</guid>
      <pubDate>Fri, 17 Jan 2020 18:35:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-17637|2024-08-05T01:47:13.211Z -- the%20eclipse%20foundation -- eclipse%20web%20tools%20platform
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-17637</link>
      <description>In all versions of Eclipse Web Tools Platform through release 3.18 (2020-06), XML and DTD files referring to external entities could be exploited to send the contents of local files to a remote server when edited or validated, even when external entity resolution is disabled in the user preferences.</description>
      <guid isPermaLink="false">CVE-2019-17637|2024-08-05T01:47:13.211Z</guid>
      <pubDate>Wed, 15 Jul 2020 14:55:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-17632|2024-08-05T01:47:13.488Z -- the%20eclipse%20foundation -- eclipse%20jetty
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-17632</link>
      <description>In Eclipse Jetty versions 9.4.21.v20190926, 9.4.22.v20191022, and 9.4.23.v20191118, the generation of default unhandled Error response content (in text/html and text/json Content-Type) does not escape Exception messages in stacktraces included in error output.</description>
      <guid isPermaLink="false">CVE-2019-17632|2024-08-05T01:47:13.488Z</guid>
      <pubDate>Mon, 25 Nov 2019 21:56:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-17636|2024-08-05T01:47:13.536Z -- the%20eclipse%20foundation -- eclipse%20theia
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-17636</link>
      <description>In Eclipse Theia versions 0.3.9 through 0.15.0, one of the default pre-packaged Theia extensions is "Mini-Browser", published as "@theia/mini-browser" on npmjs.com. This extension, for its own needs, exposes a HTTP endpoint that allows to read the content of files on the host's filesystem, given their path, without restrictions on the requester's origin. This design is vulnerable to being exploited remotely through a DNS rebinding attack or a drive-by download of a carefully crafted exploit.</description>
      <guid isPermaLink="false">CVE-2019-17636|2024-08-05T01:47:13.536Z</guid>
      <pubDate>Tue, 10 Mar 2020 14:30:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-17638|2024-08-05T01:47:13.630Z -- the%20eclipse%20foundation -- eclipse%20jetty
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-17638</link>
      <description>In Eclipse Jetty, versions 9.4.27.v20200227 to 9.4.29.v20200521, in case of too large response headers, Jetty throws an exception to produce an HTTP 431 error. When this happens, the ByteBuffer containing the HTTP response headers is released back to the ByteBufferPool twice. Because of this double release, two threads can acquire the same ByteBuffer from the pool and while thread1 is about to use the ByteBuffer to write response1 data, thread2 fills the ByteBuffer with other data. Thread1 then proceeds to write the buffer that now contains different data. This results in client1, which issued request1 seeing data from another request or response which could contain sensitive data belonging to client2 (HTTP session ids, authentication credentials, etc.). If the Jetty version cannot be upgraded, the vulnerability can be significantly reduced by configuring a responseHeaderSize significantly larger than the requestHeaderSize (12KB responseHeaderSize and 8KB requestHeaderSize).</description>
      <guid isPermaLink="false">CVE-2019-17638|2024-08-05T01:47:13.630Z</guid>
      <pubDate>Thu, 09 Jul 2020 18:10:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-17640|2024-08-05T01:47:13.749Z -- the%20eclipse%20foundation -- eclipse%20vert.x
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-17640</link>
      <description>In Eclipse Vert.x 3.4.x up to 3.9.4, 4.0.0.milestone1, 4.0.0.milestone2, 4.0.0.milestone3, 4.0.0.milestone4, 4.0.0.milestone5, 4.0.0.Beta1, 4.0.0.Beta2, and 4.0.0.Beta3, StaticHandler doesn't correctly processes back slashes on Windows Operating systems, allowing, escape the webroot folder to the current working directory.</description>
      <guid isPermaLink="false">CVE-2019-17640|2024-08-05T01:47:13.749Z</guid>
      <pubDate>Thu, 15 Oct 2020 20:30:15 +0000</pubDate>
    </item>
  </channel>
</rss>

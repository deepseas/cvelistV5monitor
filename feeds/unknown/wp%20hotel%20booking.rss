<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Unknown -- WP Hotel Booking</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/unknown/wp%20hotel%20booking.rss</link>
    <description>The latest CVEs for Unknown -- WP Hotel Booking</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 12 Jun 2024 11:24:53 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-5651|2023-11-20T18:55:08.790Z -- unknown -- wp%20hotel%20booking
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5651</link>
      <description>The WP Hotel Booking WordPress plugin before 2.0.8 does not have authorisation and CSRF checks, as well as does not ensure that the package to be deleted is a package, allowing any authenticated users, such as subscriber to delete arbitrary posts</description>
      <guid isPermaLink="false">CVE-2023-5651|2023-11-20T18:55:08.790Z</guid>
      <pubDate>Mon, 20 Nov 2023 18:55:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5799|2023-11-20T18:55:07.999Z -- unknown -- wp%20hotel%20booking
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5799</link>
      <description>The WP Hotel Booking WordPress plugin before 2.0.8 does not have proper authorisation when deleting a package, allowing Contributor and above roles to delete posts that do no belong to them</description>
      <guid isPermaLink="false">CVE-2023-5799|2023-11-20T18:55:07.999Z</guid>
      <pubDate>Mon, 20 Nov 2023 18:55:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5652|2023-11-20T18:55:06.152Z -- unknown -- wp%20hotel%20booking
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5652</link>
      <description>The WP Hotel Booking WordPress plugin before 2.0.8 does not have authorisation and CSRF checks, as well as does not escape user input before using it in a SQL statement of a function hooked to admin_init, allowing unauthenticated users to perform SQL injections</description>
      <guid isPermaLink="false">CVE-2023-5652|2023-11-20T18:55:06.152Z</guid>
      <pubDate>Mon, 20 Nov 2023 18:55:06 +0000</pubDate>
    </item>
  </channel>
</rss>

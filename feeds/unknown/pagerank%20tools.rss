<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Unknown -- Pagerank tools</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/unknown/pagerank%20tools.rss</link>
    <description>The latest CVEs for Unknown -- Pagerank tools</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Thu, 01 Aug 2024 22:22:32 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-5730|2024-08-01T21:18:07.116Z -- unknown -- pagerank%20tools
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5730</link>
      <description>The Pagerank tools WordPress plugin through 1.1.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5730|2024-08-01T21:18:07.116Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5730|2024-06-28T06:00:05.085Z -- unknown -- pagerank%20tools</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5730</link>
      <description>The Pagerank tools WordPress plugin through 1.1.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5730|2024-06-28T06:00:05.085Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5730|2024-06-28T14:21:56.436Z -- unknown -- pagerank%20tools</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5730</link>
      <description>The Pagerank tools WordPress plugin through 1.1.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5730|2024-06-28T14:21:56.436Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:05 +0000</pubDate>
    </item>
  </channel>
</rss>

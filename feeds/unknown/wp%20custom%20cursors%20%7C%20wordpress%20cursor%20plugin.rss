<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Unknown -- WP Custom Cursors | WordPress Cursor Plugin</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/unknown/wp%20custom%20cursors%20%7C%20wordpress%20cursor%20plugin.rss</link>
    <description>The latest CVEs for Unknown -- WP Custom Cursors | WordPress Cursor Plugin</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 23:22:20 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-5911|2024-08-02T08:14:24.669Z -- unknown -- wp%20custom%20cursors%20%7C%20wordpress%20cursor%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-5911</link>
      <description>The WP Custom Cursors | WordPress Cursor Plugin WordPress plugin through 3.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-5911|2024-08-02T08:14:24.669Z</guid>
      <pubDate>Mon, 08 Jan 2024 19:00:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2221|2024-08-02T06:12:20.675Z -- unknown -- wp%20custom%20cursors%20%7C%20wordpress%20cursor%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-2221</link>
      <description>The WP Custom Cursors WordPress plugin before 3.2 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as Admin.</description>
      <guid isPermaLink="false">CVE-2023-2221|2024-08-02T06:12:20.675Z</guid>
      <pubDate>Mon, 19 Jun 2023 10:52:42 +0000</pubDate>
    </item>
  </channel>
</rss>

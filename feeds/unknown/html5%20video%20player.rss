<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Unknown -- Html5 Video Player</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/unknown/html5%20video%20player.rss</link>
    <description>The latest CVEs for Unknown -- Html5 Video Player</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Thu, 01 Aug 2024 22:22:37 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-5522|2024-08-01T21:18:05.372Z -- unknown -- html5%20video%20player
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5522</link>
      <description>The HTML5 Video Player  WordPress plugin before 2.5.27 does not sanitize and escape a parameter from a REST route before using it in a SQL statement, allowing unauthenticated users to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2024-5522|2024-08-01T21:18:05.372Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5522|2024-06-20T06:00:04.044Z -- unknown -- html5%20video%20player</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5522</link>
      <description>The HTML5 Video Player  WordPress plugin before 2.5.27 does not sanitize and escape a parameter from a REST route before using it in a SQL statement, allowing unauthenticated users to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2024-5522|2024-06-20T06:00:04.044Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5522|2024-06-20T16:09:19.209Z -- unknown -- html5%20video%20player</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5522</link>
      <description>The HTML5 Video Player  WordPress plugin before 2.5.27 does not sanitize and escape a parameter from a REST route before using it in a SQL statement, allowing unauthenticated users to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2024-5522|2024-06-20T16:09:19.209Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:04 +0000</pubDate>
    </item>
  </channel>
</rss>

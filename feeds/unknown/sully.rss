<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Unknown -- SULly</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/unknown/sully.rss</link>
    <description>The latest CVEs for Unknown -- SULly</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Mon, 15 Jul 2024 15:23:37 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-5034|2024-07-15T14:28:47.130Z -- unknown -- sully
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5034</link>
      <description>The SULly WordPress plugin before 4.3.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5034|2024-07-15T14:28:47.130Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5032|2024-07-15T14:00:58.599Z -- unknown -- sully
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5032</link>
      <description>The SULly WordPress plugin before 4.3.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5032|2024-07-15T14:00:58.599Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5151|2024-07-13T12:00:13.958Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5151</link>
      <description>The SULly WordPress plugin before 4.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5151|2024-07-13T12:00:13.958Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5032|2024-07-13T06:00:07.731Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5032</link>
      <description>The SULly WordPress plugin before 4.3.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5032|2024-07-13T06:00:07.731Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5034|2024-07-13T06:00:08.319Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5034</link>
      <description>The SULly WordPress plugin before 4.3.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5034|2024-07-13T06:00:08.319Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5151|2024-07-13T06:00:09.746Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5151</link>
      <description>The SULly WordPress plugin before 4.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5151|2024-07-13T06:00:09.746Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5033|2024-07-13T06:00:08.044Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5033</link>
      <description>The SULly WordPress plugin before 4.3.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5033|2024-07-13T06:00:08.044Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5033|2024-07-13T22:58:08.451Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5033</link>
      <description>The SULly WordPress plugin before 4.3.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5033|2024-07-13T22:58:08.451Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
  </channel>
</rss>

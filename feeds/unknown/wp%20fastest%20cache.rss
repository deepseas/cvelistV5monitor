<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Unknown -- WP Fastest Cache</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/unknown/wp%20fastest%20cache.rss</link>
    <description>The latest CVEs for Unknown -- WP Fastest Cache</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 19:19:55 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-1938|2024-08-02T06:05:27.034Z -- unknown -- wp%20fastest%20cache
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-1938</link>
      <description>The WP Fastest Cache WordPress plugin before 1.1.5 does not have CSRF check in an AJAX action, and does not validate user input before using it in the wp_remote_get() function, leading to a Blind SSRF issue</description>
      <guid isPermaLink="false">CVE-2023-1938|2024-08-02T06:05:27.034Z</guid>
      <pubDate>Tue, 30 May 2023 07:49:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6063|2024-08-02T08:21:17.206Z -- unknown -- wp%20fastest%20cache
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6063</link>
      <description>The WP Fastest Cache WordPress plugin before 1.2.2 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by unauthenticated users.</description>
      <guid isPermaLink="false">CVE-2023-6063|2024-08-02T08:21:17.206Z</guid>
      <pubDate>Mon, 04 Dec 2023 21:29:41 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Unknown -- wpbrutalai</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/unknown/wpbrutalai.rss</link>
    <description>The latest CVEs for Unknown -- wpbrutalai</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 18:25:04 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-2605|2024-08-02T06:26:09.841Z -- unknown -- wpbrutalai
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-2605</link>
      <description>The wpbrutalai WordPress plugin before 2.0.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against a logged in high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-2605|2024-08-02T06:26:09.841Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2601|2024-08-02T06:26:09.926Z -- unknown -- wpbrutalai
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-2601</link>
      <description>The wpbrutalai WordPress plugin before 2.0.0 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by admin via CSRF.</description>
      <guid isPermaLink="false">CVE-2023-2601|2024-08-02T06:26:09.926Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:12 +0000</pubDate>
    </item>
  </channel>
</rss>

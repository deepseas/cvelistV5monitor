<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Unknown -- LiteSpeed Cache</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/unknown/litespeed%20cache.rss</link>
    <description>The latest CVEs for Unknown -- LiteSpeed Cache</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 22:22:32 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2021-24963|2024-08-03T19:49:14.342Z -- unknown -- litespeed%20cache
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24963</link>
      <description>The LiteSpeed Cache WordPress plugin before 4.4.4 does not escape the qc_res parameter before outputting it back in the JS code of an admin page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-24963|2024-08-03T19:49:14.342Z</guid>
      <pubDate>Mon, 03 Jan 2022 12:49:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24964|2024-08-03T19:49:14.371Z -- unknown -- litespeed%20cache
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24964</link>
      <description>The LiteSpeed Cache WordPress plugin before 4.4.4 does not properly verify that requests are coming from QUIC.cloud servers, allowing attackers to make requests to certain endpoints by using a specific X-Forwarded-For header value. In addition, one of the endpoint could be used to set CSS code if a setting is enabled, which will then be output in some pages without being sanitised and escaped. Combining those two issues, an unauthenticated attacker could put Cross-Site Scripting payloads in pages visited by users.</description>
      <guid isPermaLink="false">CVE-2021-24964|2024-08-03T19:49:14.371Z</guid>
      <pubDate>Mon, 03 Jan 2022 12:49:08 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Unknown -- SupportCandy</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/unknown/supportcandy.rss</link>
    <description>The latest CVEs for Unknown -- SupportCandy</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 21:22:30 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-1730|2024-08-02T05:57:24.977Z -- unknown -- supportcandy
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-1730</link>
      <description>The SupportCandy WordPress plugin before 3.1.5 does not validate and escape user input before using it in an SQL statement, which could allow unauthenticated attackers to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2023-1730|2024-08-02T05:57:24.977Z</guid>
      <pubDate>Tue, 02 May 2023 07:05:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2719|2024-08-02T06:33:05.256Z -- unknown -- supportcandy
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-2719</link>
      <description>The SupportCandy WordPress plugin before 3.1.7 does not properly sanitise and escape the `id` parameter for an Agent in the REST API before using it in an SQL statement, leading to an SQL Injection exploitable by users with a role as low as Subscriber.</description>
      <guid isPermaLink="false">CVE-2023-2719|2024-08-02T06:33:05.256Z</guid>
      <pubDate>Mon, 19 Jun 2023 10:52:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2805|2024-08-02T06:33:05.771Z -- unknown -- supportcandy
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-2805</link>
      <description>The SupportCandy WordPress plugin before 3.1.7 does not properly sanitise and escape the agents[] parameter in the set_add_agent_leaves AJAX function before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-2805|2024-08-02T06:33:05.771Z</guid>
      <pubDate>Mon, 19 Jun 2023 10:52:54 +0000</pubDate>
    </item>
  </channel>
</rss>

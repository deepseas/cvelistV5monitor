<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Unknown -- Widget4Call</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/unknown/widget4call.rss</link>
    <description>The latest CVEs for Unknown -- Widget4Call</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 28 Jun 2024 16:23:43 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-5727|2024-06-28T15:06:25.428Z -- unknown -- widget4call
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5727</link>
      <description>The Widget4Call WordPress plugin through 1.0.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5727|2024-06-28T15:06:25.428Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5727|2024-06-28T06:00:03.875Z -- unknown -- widget4call</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5727</link>
      <description>The Widget4Call WordPress plugin through 1.0.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5727|2024-06-28T06:00:03.875Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:03 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Unknown -- ENL Newsletter</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/unknown/enl%20newsletter.rss</link>
    <description>The latest CVEs for Unknown -- ENL Newsletter</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 12 Jun 2024 11:24:18 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-3058|2024-06-04T17:32:46.776Z -- unknown -- enl%20newsletter
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3058</link>
      <description>The ENL Newsletter WordPress plugin through 1.0.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3058|2024-06-04T17:32:46.776Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3059|2024-06-04T17:32:14.386Z -- unknown -- enl%20newsletter
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3059</link>
      <description>The ENL Newsletter WordPress plugin through 1.0.1 does not have CSRF checks in some places, which could allow attackers to make logged in admins delete arbitrary Campaigns via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3059|2024-06-04T17:32:14.386Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3060|2024-06-04T17:32:10.817Z -- unknown -- enl%20newsletter
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3060</link>
      <description>The ENL Newsletter WordPress plugin through 1.0.1 does not sanitize and escape a parameter before using it in a SQL statement, allowing admin+ to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2024-3060|2024-06-04T17:32:10.817Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Unknown -- Timetable and Event Schedule by MotoPress</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/unknown/timetable%20and%20event%20schedule%20by%20motopress.rss</link>
    <description>The latest CVEs for Unknown -- Timetable and Event Schedule by MotoPress</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 23:22:57 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2021-24724|2024-08-03T19:42:16.651Z -- unknown -- timetable%20and%20event%20schedule%20by%20motopress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24724</link>
      <description>The Timetable and Event Schedule by MotoPress WordPress plugin before 2.3.19 does not sanitise some of its parameters, which could allow low privilege users such as author to perform XSS attacks against frontend and backend users when viewing the related event/s</description>
      <guid isPermaLink="false">CVE-2021-24724|2024-08-03T19:42:16.651Z</guid>
      <pubDate>Mon, 13 Sep 2021 17:56:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24584|2024-08-03T19:35:20.210Z -- unknown -- timetable%20and%20event%20schedule%20by%20motopress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24584</link>
      <description>The Timetable and Event Schedule WordPress plugin before 2.4.2 does not have proper access control when updating a timeslot, allowing any user with the edit_posts capability (contributor+) to update arbitrary timeslot from any events. Furthermore, no CSRF check is in place as well, allowing such attack to be perform via CSRF against a logged in with such capability. In versions before 2.3.19, the lack of sanitisation and escaping in some of the fields, like the descritption could also lead to Stored XSS issues</description>
      <guid isPermaLink="false">CVE-2021-24584|2024-08-03T19:35:20.210Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24585|2024-08-03T19:35:20.312Z -- unknown -- timetable%20and%20event%20schedule%20by%20motopress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24585</link>
      <description>The Timetable and Event Schedule WordPress plugin before 2.4.0 outputs the Hashed Password, Username and Email Address (along other less sensitive data) of the user related to the Even Head of the Timeslot in the response when requesting the event Timeslot data with a user with the edit_posts capability. Combined with the other Unauthorised Event Timeslot Modification issue (https://wpscan.com/reports/submissions/4699/) where an arbitrary user ID can be set, this could allow low privilege users with the edit_posts capability (such as author) to retrieve sensitive User data by iterating over the user_id</description>
      <guid isPermaLink="false">CVE-2021-24585|2024-08-03T19:35:20.312Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24583|2024-08-03T19:35:20.182Z -- unknown -- timetable%20and%20event%20schedule%20by%20motopress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24583</link>
      <description>The Timetable and Event Schedule WordPress plugin before 2.4.2 does not have proper access control when deleting a timeslot, allowing any user with the edit_posts capability (contributor+) to delete arbitrary timeslot from any events. Furthermore, no CSRF check is in place as well, allowing such attack to be performed via CSRF against a logged in with such capability</description>
      <guid isPermaLink="false">CVE-2021-24583|2024-08-03T19:35:20.182Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:20 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Unknown -- Animated AL List</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/unknown/animated%20al%20list.rss</link>
    <description>The latest CVEs for Unknown -- Animated AL List</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Thu, 01 Aug 2024 22:22:45 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-5728|2024-08-01T21:18:07.034Z -- unknown -- animated%20al%20list
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5728</link>
      <description>The Animated AL List WordPress plugin through 1.0.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5728|2024-08-01T21:18:07.034Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5728|2024-06-28T06:00:04.165Z -- unknown -- animated%20al%20list</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5728</link>
      <description>The Animated AL List WordPress plugin through 1.0.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5728|2024-06-28T06:00:04.165Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5728|2024-07-03T20:41:05.795Z -- unknown -- animated%20al%20list</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5728</link>
      <description>The Animated AL List WordPress plugin through 1.0.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5728|2024-07-03T20:41:05.795Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:04 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Unknown -- WpStickyBar</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/unknown/wpstickybar.rss</link>
    <description>The latest CVEs for Unknown -- WpStickyBar</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Tue, 30 Jul 2024 20:21:03 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-6226|2024-07-30T19:20:14.781Z -- unknown -- wpstickybar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6226</link>
      <description>The WpStickyBar  WordPress plugin through 2.1.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6226|2024-07-30T19:20:14.781Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5765|2024-07-30T19:26:01.409Z -- unknown -- wpstickybar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5765</link>
      <description>The WpStickyBar  WordPress plugin through 2.1.0 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2024-5765|2024-07-30T19:26:01.409Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5765|2024-07-30T06:00:08.234Z -- unknown -- wpstickybar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5765</link>
      <description>The WpStickyBar  WordPress plugin through 2.1.0 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2024-5765|2024-07-30T06:00:08.234Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6226|2024-07-30T06:00:10.319Z -- unknown -- wpstickybar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6226</link>
      <description>The WpStickyBar  WordPress plugin through 2.1.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6226|2024-07-30T06:00:10.319Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
  </channel>
</rss>

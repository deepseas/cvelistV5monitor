<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Unknown -- Autoptimize</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/unknown/autoptimize.rss</link>
    <description>The latest CVEs for Unknown -- Autoptimize</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 23:23:06 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2021-24378|2024-08-03T19:28:23.784Z -- unknown -- autoptimize
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24378</link>
      <description>The Autoptimize WordPress plugin before 2.7.8 does not check for malicious files such as .html in the archive uploaded via the 'Import Settings' feature. As a result, it is possible for a high privilege user to upload a malicious file containing JavaScript code inside an archive which will execute when a victim visits index.html inside the plugin directory.</description>
      <guid isPermaLink="false">CVE-2021-24378|2024-08-03T19:28:23.784Z</guid>
      <pubDate>Mon, 21 Jun 2021 19:18:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4057|2024-08-03T01:27:54.476Z -- unknown -- autoptimize
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4057</link>
      <description>The Autoptimize WordPress plugin before 3.1.0 uses an easily guessable path to store plugin's exported settings and logs.</description>
      <guid isPermaLink="false">CVE-2022-4057|2024-08-03T01:27:54.476Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24376|2024-08-03T19:28:23.812Z -- unknown -- autoptimize
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24376</link>
      <description>The Autoptimize WordPress plugin before 2.7.8 attempts to delete malicious files (such as .php) form the uploaded archive via the "Import Settings" feature, after its extraction. However, the extracted folders are not checked and it is possible to upload a zip which contained a directory with PHP file in it and then it is not removed from the disk. It is a bypass of CVE-2020-24948 which allows sending a PHP file via the "Import Settings" functionality to achieve Remote Code Execution.</description>
      <guid isPermaLink="false">CVE-2021-24376|2024-08-03T19:28:23.812Z</guid>
      <pubDate>Mon, 21 Jun 2021 19:18:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24377|2024-08-03T19:28:23.923Z -- unknown -- autoptimize
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24377</link>
      <description>The Autoptimize WordPress plugin before 2.7.8 attempts to remove potential malicious files from the extracted archive uploaded via the 'Import Settings' feature, however this is not sufficient to protect against RCE as a race condition can be achieved in between the moment the file is extracted on the disk but not yet removed. It is a bypass of CVE-2020-24948.</description>
      <guid isPermaLink="false">CVE-2021-24377|2024-08-03T19:28:23.923Z</guid>
      <pubDate>Mon, 21 Jun 2021 19:18:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24332|2024-08-03T19:28:23.474Z -- unknown -- autoptimize
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24332</link>
      <description>The Autoptimize WordPress plugin before 2.8.4 was missing proper escaping and sanitisation in some of its settings, allowing high privilege users to set XSS payloads in them, leading to stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-24332|2024-08-03T19:28:23.474Z</guid>
      <pubDate>Mon, 24 May 2021 10:58:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2635|2024-08-03T00:46:03.470Z -- unknown -- autoptimize
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2635</link>
      <description>The Autoptimize WordPress plugin before 3.1.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2635|2024-08-03T00:46:03.470Z</guid>
      <pubDate>Fri, 16 Sep 2022 08:40:30 +0000</pubDate>
    </item>
  </channel>
</rss>

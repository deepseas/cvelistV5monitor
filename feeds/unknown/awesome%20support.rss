<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Unknown -- Awesome Support</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/unknown/awesome%20support.rss</link>
    <description>The latest CVEs for Unknown -- Awesome Support</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 12 Jun 2024 11:24:53 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-5355|2023-11-06T20:41:57.821Z -- unknown -- awesome%20support
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5355</link>
      <description>The Awesome Support WordPress plugin before 6.1.5 does not sanitize file paths when deleting temporary attachment files, allowing a ticket submitter to delete arbitrary files on the server.</description>
      <guid isPermaLink="false">CVE-2023-5355|2023-11-06T20:41:57.821Z</guid>
      <pubDate>Mon, 06 Nov 2023 20:41:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5354|2023-11-06T20:40:28.644Z -- unknown -- awesome%20support
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5354</link>
      <description>The Awesome Support WordPress plugin before 6.1.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-5354|2023-11-06T20:40:28.644Z</guid>
      <pubDate>Mon, 06 Nov 2023 20:40:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5352|2023-11-06T20:40:54.117Z -- unknown -- awesome%20support
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5352</link>
      <description>The Awesome Support WordPress plugin before 6.1.5 does not correctly authorize the wpas_edit_reply function, allowing users to edit posts for which they do not have permission.</description>
      <guid isPermaLink="false">CVE-2023-5352|2023-11-06T20:40:54.117Z</guid>
      <pubDate>Mon, 06 Nov 2023 20:40:54 +0000</pubDate>
    </item>
  </channel>
</rss>

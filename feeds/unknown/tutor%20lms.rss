<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Unknown -- Tutor LMS</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/unknown/tutor%20lms.rss</link>
    <description>The latest CVEs for Unknown -- Tutor LMS</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 17:22:39 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-3133|2024-08-02T06:48:07.356Z -- unknown -- tutor%20lms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-3133</link>
      <description>The Tutor LMS WordPress plugin before 2.2.1 does not implement adequate permission checks for REST API endpoints, allowing unauthenticated attackers to access information from Lessons that should not be publicly available.</description>
      <guid isPermaLink="false">CVE-2023-3133|2024-08-02T06:48:07.356Z</guid>
      <pubDate>Tue, 04 Jul 2023 07:23:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4805|2024-08-02T07:38:00.703Z -- unknown -- tutor%20lms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-4805</link>
      <description>The Tutor LMS WordPress plugin before 2.3.0 does not sanitise and escape some of its settings, which could allow users such as subscriber to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-4805|2024-08-02T07:38:00.703Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0236|2024-08-02T05:02:44.106Z -- unknown -- tutor%20lms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-0236</link>
      <description>The Tutor LMS WordPress plugin before 2.0.10 does not sanitise and escape the reset_key and user_id parameters before outputting then back in attributes, leading to Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-0236|2024-08-02T05:02:44.106Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:21 +0000</pubDate>
    </item>
  </channel>
</rss>

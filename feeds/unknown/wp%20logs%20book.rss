<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Unknown -- WP Logs Book</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/unknown/wp%20logs%20book.rss</link>
    <description>The latest CVEs for Unknown -- WP Logs Book</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 21 Jun 2024 07:20:44 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-4475|2024-06-21T06:00:04.785Z -- unknown -- wp%20logs%20book
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4475</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not have CSRF check when clearing logs, which could allow attackers to make a logged in admin clear the logs them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4475|2024-06-21T06:00:04.785Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4477|2024-06-21T06:00:04.995Z -- unknown -- wp%20logs%20book
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4477</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not sanitise and escape some of its log data before outputting them back in an admin dashboard, leading to an Unauthenticated Stored Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-4477|2024-06-21T06:00:04.995Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4474|2024-06-21T06:00:04.573Z -- unknown -- wp%20logs%20book
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4474</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4474|2024-06-21T06:00:04.573Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
  </channel>
</rss>

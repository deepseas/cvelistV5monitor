<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Unknown -- SSL Zen</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/unknown/ssl%20zen.rss</link>
    <description>The latest CVEs for Unknown -- SSL Zen</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 24 Jul 2024 20:22:24 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-1076|2024-07-24T19:53:18.089Z -- unknown -- ssl%20zen
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1076</link>
      <description>The SSL Zen  WordPress plugin before 4.6.0 only relies on the use of .htaccess to prevent visitors from accessing the site's generated private keys, which allows an attacker to read them if the site runs on a server who doesn't support .htaccess files, like NGINX.</description>
      <guid isPermaLink="false">CVE-2024-1076|2024-07-24T19:53:18.089Z</guid>
      <pubDate>Wed, 08 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1076|2024-05-08T06:00:02.175Z -- unknown -- ssl%20zen</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1076</link>
      <description>The SSL Zen  WordPress plugin before 4.6.0 only relies on the use of .htaccess to prevent visitors from accessing the site's generated private keys, which allows an attacker to read them if the site runs on a server who doesn't support .htaccess files, like NGINX.</description>
      <guid isPermaLink="false">CVE-2024-1076|2024-05-08T06:00:02.175Z</guid>
      <pubDate>Wed, 08 May 2024 06:00:02 +0000</pubDate>
    </item>
  </channel>
</rss>

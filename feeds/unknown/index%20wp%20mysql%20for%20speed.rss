<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Unknown -- Index WP MySQL For Speed</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/unknown/index%20wp%20mysql%20for%20speed.rss</link>
    <description>The latest CVEs for Unknown -- Index WP MySQL For Speed</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 24 Jul 2024 21:22:00 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-4977|2024-07-24T19:59:02.122Z -- unknown -- index%20wp%20mysql%20for%20speed
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4977</link>
      <description>The Index WP MySQL For Speed WordPress plugin before 1.4.18 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-4977|2024-07-24T19:59:02.122Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4977|2024-07-13T06:00:06.897Z -- unknown -- index%20wp%20mysql%20for%20speed</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4977</link>
      <description>The Index WP MySQL For Speed WordPress plugin before 1.4.18 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-4977|2024-07-13T06:00:06.897Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
  </channel>
</rss>

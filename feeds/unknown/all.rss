<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Unknown -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/unknown/all.rss</link>
    <description>The latest CVEs for Unknown -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 22:21:55 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2021-24139|2024-08-03T19:21:18.629Z -- unknown -- photo%20gallery%20by%2010web
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24139</link>
      <description>Unvalidated input in the Photo Gallery (10Web Photo Gallery) WordPress plugin, versions before 1.5.55, leads to SQL injection via the frontend/models/model.php bwg_search_x parameter.</description>
      <guid isPermaLink="false">CVE-2021-24139|2024-08-03T19:21:18.629Z</guid>
      <pubDate>Thu, 18 Mar 2021 14:57:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25083|2024-08-03T19:56:09.977Z -- unknown -- registrations%20for%20the%20events%20calendar%20%E2%80%93%20event%20registration%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25083</link>
      <description>The Registrations for the Events Calendar WordPress plugin before 2.7.10 does not escape the qtype parameter before outputting it back in an attribute in the settings page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-25083|2024-08-03T19:56:09.977Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:01:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24669|2024-08-03T19:42:16.136Z -- unknown -- maz%20loader%20%E2%80%93%20preloader%20builder%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24669</link>
      <description>The MAZ Loader – Preloader Builder for WordPress plugin before 1.3.3 does not validate or escape the loader_id parameter of the mzldr shortcode, which allows users with a role as low as Contributor to perform SQL injection.</description>
      <guid isPermaLink="false">CVE-2021-24669|2024-08-03T19:42:16.136Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:34:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24404|2024-08-03T19:28:23.928Z -- unknown -- wp-board
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24404</link>
      <description>The options.php file of the WP-Board WordPress plugin through 1.1 beta accepts a postid parameter which is not sanitised, escaped or validated before inserting to a SQL statement, leading to SQL injection. This is a time based SQLI and in the same function vulnerable parameter is passed twice so if we pass time as 5 seconds it takes 10 seconds to return since the query ran twice.</description>
      <guid isPermaLink="false">CVE-2021-24404|2024-08-03T19:28:23.928Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25087|2024-08-03T19:56:09.993Z -- unknown -- download%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25087</link>
      <description>The Download Manager WordPress plugin before 3.2.35 does not have any authorisation checks in some of the REST API endpoints, allowing unauthenticated attackers to call them, which could lead to sensitive information disclosure, such as posts passwords (fixed in 3.2.24) and files Master Keys (fixed in 3.2.25).</description>
      <guid isPermaLink="false">CVE-2021-25087|2024-08-03T19:56:09.993Z</guid>
      <pubDate>Mon, 07 Mar 2022 08:16:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24311|2024-08-03T19:28:23.439Z -- unknown -- external%20media
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24311</link>
      <description>The wp_ajax_upload-remote-file AJAX action of the External Media WordPress plugin before 1.0.34 was vulnerable to arbitrary file uploads via any authenticated users.</description>
      <guid isPermaLink="false">CVE-2021-24311|2024-08-03T19:28:23.439Z</guid>
      <pubDate>Tue, 01 Jun 2021 11:33:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24820|2024-08-03T19:42:17.213Z -- unknown -- cost%20calculator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24820</link>
      <description>The Cost Calculator WordPress plugin through 1.6 allows authenticated users (Contributor+ in versions &lt; 1.5, and Admin+ in versions &lt;= 1.6) to perform path traversal and local PHP file inclusion on Windows Web Servers via the Cost Calculator post's Layout</description>
      <guid isPermaLink="false">CVE-2021-24820|2024-08-03T19:42:17.213Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24652|2024-08-03T19:35:20.368Z -- unknown -- postx%20%E2%80%93%20gutenberg%20blocks%20for%20post%20grid
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24652</link>
      <description>The PostX – Gutenberg Blocks for Post Grid WordPress plugin before 2.4.10 performs incorrect checks before allowing any logged in user to perform some ajax based requests, allowing any user to modify, delete or add ultp_options values.</description>
      <guid isPermaLink="false">CVE-2021-24652|2024-08-03T19:35:20.368Z</guid>
      <pubDate>Mon, 27 Sep 2021 15:25:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4749|2024-08-03T01:48:40.195Z -- unknown -- posts%20list%20designer%20by%20category
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4749</link>
      <description>The Posts List Designer by Category WordPress plugin before 3.2 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4749|2024-08-03T01:48:40.195Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4717|2024-08-03T01:48:40.204Z -- unknown -- strong%20testimonials
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4717</link>
      <description>The Strong Testimonials WordPress plugin before 3.0.3 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4717|2024-08-03T01:48:40.204Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3694|2024-08-03T01:14:03.342Z -- unknown -- syncee
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3694</link>
      <description>The Syncee WordPress plugin before 1.0.10 leaks the administrator token that can be used to take over the administrator's account.</description>
      <guid isPermaLink="false">CVE-2022-3694|2024-08-03T01:14:03.342Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24498|2024-08-03T19:35:20.011Z -- unknown -- calendar%20event%20multi%20view
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24498</link>
      <description>The Calendar Event Multi View WordPress plugin before 1.4.01 does not sanitise or escape the 'start' and 'end' GET parameters before outputting them in the page (via php/edit.php), leading to a reflected Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-24498|2024-08-03T19:35:20.011Z</guid>
      <pubDate>Mon, 02 Aug 2021 10:32:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24468|2024-08-03T19:35:18.687Z -- unknown -- leaflet%20map
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24468</link>
      <description>The Leaflet Map WordPress plugin before 3.0.0 does not escape some shortcode attributes before they are used in JavaScript code or HTML, which could allow users with a role as low as Contributors to exploit stored XSS issues</description>
      <guid isPermaLink="false">CVE-2021-24468|2024-08-03T19:35:18.687Z</guid>
      <pubDate>Mon, 02 Aug 2021 10:32:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24496|2024-08-03T19:35:20.311Z -- unknown -- community%20events
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24496</link>
      <description>The Community Events WordPress plugin before 1.4.8 does not sanitise, validate or escape its importrowscount and successimportcount GET parameters before outputting them back in an admin page, leading to a reflected Cross-Site Scripting issue which will be executed in the context of a logged in administrator</description>
      <guid isPermaLink="false">CVE-2021-24496|2024-08-03T19:35:20.311Z</guid>
      <pubDate>Mon, 02 Aug 2021 10:32:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24806|2024-08-03T19:42:17.338Z -- unknown -- comments%20%E2%80%93%20wpdiscuz
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24806</link>
      <description>The wpDiscuz WordPress plugin before 7.3.4 does check for CSRF when adding, editing and deleting comments, which could allow attacker to make logged in users such as admin edit and delete arbitrary comment, or the user who made the comment to edit it via a CSRF attack. Attackers could also make logged in users post arbitrary comment.</description>
      <guid isPermaLink="false">CVE-2021-24806|2024-08-03T19:42:17.338Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:35:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24533|2024-08-03T19:35:19.939Z -- unknown -- maintenance
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24533</link>
      <description>The Maintenance WordPress plugin before 4.03 does not sanitise or escape some of its settings, allowing high privilege users such as admin to se Cross-Site Scripting payload in them (even when the unfiltered_html capability is disallowed), which will be triggered in the frontend</description>
      <guid isPermaLink="false">CVE-2021-24533|2024-08-03T19:35:19.939Z</guid>
      <pubDate>Mon, 23 Aug 2021 11:10:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24266|2024-08-03T19:28:22.635Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder%20lite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24266</link>
      <description>The “The Plus Addons for Elementor Page Builder Lite” WordPress Plugin before 2.0.6 has four widgets that are vulnerable to stored Cross-Site Scripting (XSS) by lower-privileged users such as contributors, all via a similar method.</description>
      <guid isPermaLink="false">CVE-2021-24266|2024-08-03T19:28:22.635Z</guid>
      <pubDate>Wed, 05 May 2021 18:28:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24596|2024-08-03T19:35:20.237Z -- unknown -- youforms%20for%20wordpress%20%E2%80%93%20creating%20forms%20for%20copecart
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24596</link>
      <description>The youForms for WordPress plugin through 1.0.5 does not sanitise escape the Button Text field of its Templates, allowing high privilege users (editors and admins) to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24596|2024-08-03T19:35:20.237Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2071|2024-08-03T00:24:44.139Z -- unknown -- name%20directory
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2071</link>
      <description>The Name Directory WordPress plugin before 1.25.4 does not have CSRF check when importing names, and is also lacking sanitisation as well as escaping in some of the imported data, which could allow attackers to make a logged in admin import arbitrary names with XSS payloads in them.</description>
      <guid isPermaLink="false">CVE-2022-2071|2024-08-03T00:24:44.139Z</guid>
      <pubDate>Mon, 25 Jul 2022 12:46:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24536|2024-08-03T19:35:19.891Z -- unknown -- custom%20login%20redirect
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24536</link>
      <description>The Custom Login Redirect WordPress plugin through 1.0.0 does not have CSRF check in place when saving its settings, and do not sanitise or escape user input before outputting them back in the page, leading to a Stored Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24536|2024-08-03T19:35:19.891Z</guid>
      <pubDate>Mon, 16 Aug 2021 10:48:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25078|2024-08-03T19:56:09.889Z -- unknown -- affiliates%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25078</link>
      <description>The Affiliates Manager WordPress plugin before 2.9.0 does not validate, sanitise and escape the IP address of requests logged by the click tracking feature, allowing unauthenticated attackers to perform Cross-Site Scripting attacks against admin viewing the tracked requests.</description>
      <guid isPermaLink="false">CVE-2021-25078|2024-08-03T19:56:09.889Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:01:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4544|2024-08-03T01:41:45.451Z -- unknown -- social%20media%20share%20buttons%20%7C%20mashshare
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4544</link>
      <description>The MashShare WordPress plugin before 3.8.7 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4544|2024-08-03T01:41:45.451Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4451|2024-08-03T01:41:44.692Z -- unknown -- social%20sharing%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4451</link>
      <description>The Social Sharing WordPress plugin before 3.3.45 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4451|2024-08-03T01:41:44.692Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2912|2024-08-03T00:52:59.857Z -- unknown -- craw%20data
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2912</link>
      <description>The Craw Data WordPress plugin through 1.0.0 does not implement nonce checks, which could allow attackers to make a logged in admin change the url value performing unwanted crawls on third-party sites (SSRF).</description>
      <guid isPermaLink="false">CVE-2022-2912|2024-08-03T00:52:59.857Z</guid>
      <pubDate>Fri, 16 Sep 2022 08:40:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4330|2024-08-03T01:34:50.170Z -- unknown -- wp%20attachments
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4330</link>
      <description>The WP Attachments WordPress plugin before 5.0.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4330|2024-08-03T01:34:50.170Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24770|2024-08-03T19:42:17.023Z -- unknown -- stylish%20price%20list
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24770</link>
      <description>The Stylish Price List WordPress plugin before 6.9.1 does not perform capability checks in its spl_upload_ser_img AJAX action (available to authenticated users), which could allow any authenticated users, such as subscriber, to upload arbitrary images.</description>
      <guid isPermaLink="false">CVE-2021-24770|2024-08-03T19:42:17.023Z</guid>
      <pubDate>Mon, 01 Nov 2021 08:46:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24791|2024-08-03T19:42:17.170Z -- unknown -- header%20footer%20code%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24791</link>
      <description>The Header Footer Code Manager WordPress plugin before 1.1.14 does not validate and escape the "orderby" and "order" request parameters before using them in a SQL statement when viewing the Snippets admin dashboard, leading to SQL injections</description>
      <guid isPermaLink="false">CVE-2021-24791|2024-08-03T19:42:17.170Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:35:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4061|2024-08-03T01:27:54.227Z -- unknown -- jobboardwp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4061</link>
      <description>The JobBoardWP WordPress plugin before 1.2.2 does not properly validate file names and types in its file upload functionalities, allowing unauthenticated users to upload arbitrary files such as PHP.</description>
      <guid isPermaLink="false">CVE-2022-4061|2024-08-03T01:27:54.227Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24564|2024-08-03T19:35:20.210Z -- unknown -- wpfront%20scroll%20top
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24564</link>
      <description>The WPFront Scroll Top WordPress plugin before 2.0.6.07225 does not sanitise or escape its Image ALT setting before outputting it attributes, leading to an Authenticated Stored Cross-Site Scripting issues even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24564|2024-08-03T19:35:20.210Z</guid>
      <pubDate>Mon, 23 Aug 2021 11:10:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24656|2024-08-03T19:35:20.407Z -- unknown -- simple%20social%20media%20share%20buttons%20%E2%80%93%20social%20sharing%20for%20everyone
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24656</link>
      <description>The Simple Social Media Share Buttons WordPress plugin before 3.2.4 does not escape the Share Title settings before outputting it in the frontend pages or posts (depending on the settings used), allowing high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24656|2024-08-03T19:35:20.407Z</guid>
      <pubDate>Mon, 11 Oct 2021 10:45:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24489|2024-08-03T19:35:20.198Z -- unknown -- request%20a%20quote
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24489</link>
      <description>The Request a Quote WordPress plugin before 2.3.9 does not sanitise, validate or escape some of its settings in the admin dashboard, leading to authenticated Stored Cross-Site Scripting issues even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24489|2024-08-03T19:35:20.198Z</guid>
      <pubDate>Mon, 25 Oct 2021 13:20:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4306|2024-08-03T01:34:50.052Z -- unknown -- panda%20pods%20repeater%20field
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4306</link>
      <description>The Panda Pods Repeater Field WordPress plugin before 1.5.4 does not sanitize and escapes a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against a user having at least Contributor permission.</description>
      <guid isPermaLink="false">CVE-2022-4306|2024-08-03T01:34:50.052Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2981|2024-08-03T00:52:59.918Z -- unknown -- download%20monitor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2981</link>
      <description>The Download Monitor WordPress plugin before 4.5.98 does not ensure that files to be downloaded are inside the blog folders, and not sensitive, allowing high privilege users such as admin to download the wp-config.php or /etc/passwd even in an hardened environment or multisite setup.</description>
      <guid isPermaLink="false">CVE-2022-2981|2024-08-03T00:52:59.918Z</guid>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2559|2024-08-03T00:39:08.111Z -- unknown -- fluent%20support%20%E2%80%93%20wordpress%20helpdesk%20and%20customer%20support%20ticket%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2559</link>
      <description>The Fluent Support WordPress plugin before 1.5.8 does not properly sanitise, validate and escape various parameters before using them in an SQL statement, leading to an SQL Injection vulnerability exploitable by high privilege users</description>
      <guid isPermaLink="false">CVE-2022-2559|2024-08-03T00:39:08.111Z</guid>
      <pubDate>Mon, 29 Aug 2022 17:15:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4578|2024-08-03T01:41:45.671Z -- unknown -- video%20conferencing%20with%20zoom
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4578</link>
      <description>The Video Conferencing with Zoom WordPress plugin before 4.0.10 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4578|2024-08-03T01:41:45.671Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24900|2024-08-03T19:49:14.011Z -- unknown -- ninja%20tables%20%E2%80%93%20best%20wp%20datatables%20plugin%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24900</link>
      <description>The Ninja Tables WordPress plugin before 4.1.8 does not sanitise and escape some of its table fields, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24900|2024-08-03T19:49:14.011Z</guid>
      <pubDate>Tue, 01 Feb 2022 12:21:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24736|2024-08-03T19:42:16.864Z -- unknown -- easy%20download%20manager%20and%20file%20sharing%20plugin%20with%20frontend%20file%20upload%20%E2%80%93%20a%20better%20media%20library%20%E2%80%94%20shared%20files
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24736</link>
      <description>The Easy Download Manager and File Sharing Plugin with frontend file upload – a better Media Library — Shared Files WordPress plugin before 1.6.57 does not sanitise and escape some of its settings before outputting them in attributes, which could lead to Stored Cross-Site Scripting issues.</description>
      <guid isPermaLink="false">CVE-2021-24736|2024-08-03T19:42:16.864Z</guid>
      <pubDate>Mon, 18 Oct 2021 13:46:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24138|2024-08-03T19:21:18.282Z -- unknown -- adrotate
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24138</link>
      <description>Unvalidated input in the AdRotate WordPress plugin, versions before 5.8.4, leads to Authenticated SQL injection via param "id". This requires an admin privileged user.</description>
      <guid isPermaLink="false">CVE-2021-24138|2024-08-03T19:21:18.282Z</guid>
      <pubDate>Thu, 18 Mar 2021 14:57:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24402|2024-08-03T19:28:24.015Z -- unknown -- wp%20icommerce%20%E2%80%93%20the%20first%20interactive%20ecommerce%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24402</link>
      <description>The Orders functionality in the WP iCommerce WordPress plugin through 1.1.1 has an `order_id` parameter which is not sanitised, escaped or validated before inserting to a SQL statement, leading to SQL injection. The feature is available to low privilege users such as contributors</description>
      <guid isPermaLink="false">CVE-2021-24402|2024-08-03T19:28:24.015Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24313|2024-08-03T19:28:23.788Z -- unknown -- wp%20prayer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24313</link>
      <description>The WP Prayer WordPress plugin before 1.6.2 provides the functionality to store requested prayers/praises and list them on a WordPress website. These stored prayer/praise requests can be listed by using the WP Prayer engine. An authenticated WordPress user with any role can fill in the form to request a prayer. The form to request prayers or praises have several fields. The 'prayer request' and 'praise request' fields do not use proper input validation and can be used to store XSS payloads.</description>
      <guid isPermaLink="false">CVE-2021-24313|2024-08-03T19:28:23.788Z</guid>
      <pubDate>Tue, 01 Jun 2021 11:33:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1645|2024-08-03T00:10:03.746Z -- unknown -- amazon%20link
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1645</link>
      <description>The Amazon Link WordPress plugin through 3.2.10 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-1645|2024-08-03T00:10:03.746Z</guid>
      <pubDate>Mon, 30 May 2022 08:36:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24223|2024-08-03T19:21:18.787Z -- unknown -- n5%20upload%20form
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24223</link>
      <description>The N5 Upload Form WordPress plugin through 1.0 suffers from an arbitrary file upload issue in page where a Form from the plugin is embed, as any file can be uploaded. The uploaded filename might be hard to guess as it's generated with md5(uniqid(rand())), however, in the case of misconfigured servers with Directory listing enabled, accessing it is trivial.</description>
      <guid isPermaLink="false">CVE-2021-24223|2024-08-03T19:21:18.787Z</guid>
      <pubDate>Mon, 12 Apr 2021 14:04:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4465|2024-08-03T01:41:45.002Z -- unknown -- wp%20video%20lightbox
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4465</link>
      <description>The WP Video Lightbox WordPress plugin before 1.9.7 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2022-4465|2024-08-03T01:41:45.002Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24432|2024-08-03T19:28:24.002Z -- unknown -- advanced%20ajax%20product%20filters
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24432</link>
      <description>The Advanced AJAX Product Filters WordPress plugin does not sanitise the 'term_id' POST parameter before outputting it in the page, leading to reflected Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-24432|2024-08-03T19:28:24.002Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:49:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24133|2024-08-03T19:21:18.611Z -- unknown -- activecampaign
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24133</link>
      <description>Lack of CSRF checks in the ActiveCampaign WordPress plugin, versions before 8.0.2, on its Settings form, which could allow attacker to make a logged-in administrator change API Credentials to attacker's account.</description>
      <guid isPermaLink="false">CVE-2021-24133|2024-08-03T19:21:18.611Z</guid>
      <pubDate>Thu, 18 Mar 2021 14:57:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2798|2024-08-03T00:46:04.536Z -- unknown -- affiliates%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2798</link>
      <description>The Affiliates Manager WordPress plugin before 2.9.14 does not validate and sanitise the affiliate data, which could allow users registering as affiliate to perform CSV injection attacks against an admin exporting the data</description>
      <guid isPermaLink="false">CVE-2022-2798|2024-08-03T00:46:04.536Z</guid>
      <pubDate>Fri, 16 Sep 2022 08:40:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24866|2024-08-03T19:49:13.461Z -- unknown -- wp%20data%20access
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24866</link>
      <description>The WP Data Access WordPress plugin before 5.0.0 does not properly sanitise and escape the backup_date parameter before using it a SQL statement, leading to a SQL injection issue and could allow arbitrary table deletion</description>
      <guid isPermaLink="false">CVE-2021-24866|2024-08-03T19:49:13.461Z</guid>
      <pubDate>Mon, 06 Dec 2021 15:55:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2387|2024-08-03T00:39:06.976Z -- unknown -- easy%20digital%20downloads%20%E2%80%93%20simple%20ecommerce%20for%20selling%20digital%20files
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2387</link>
      <description>The Easy Digital Downloads WordPress plugin before 3.0 does not have CSRF check in place when deleting payment history, and does not ensure that the post to be deleted is actually a payment history. As a result, attackers could make a logged in admin delete arbitrary post via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-2387|2024-08-03T00:39:06.976Z</guid>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4675|2024-08-03T01:48:39.832Z -- unknown -- mongoose%20page%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4675</link>
      <description>The Mongoose Page Plugin WordPress plugin before 1.9.0 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4675|2024-08-03T01:48:39.832Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1957|2024-08-03T00:24:44.237Z -- unknown -- comment%20license
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1957</link>
      <description>The Comment License WordPress plugin before 1.4.0 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1957|2024-08-03T00:24:44.237Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:57:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1532|2024-08-03T00:10:02.923Z -- unknown -- themify%20%E2%80%93%20woocommerce%20product%20filter
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1532</link>
      <description>Themify WordPress plugin before 1.3.8 does not sanitise and escape the page parameter before outputting it back in an attribute in an admin page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-1532|2024-08-03T00:10:02.923Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:41:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24636|2024-08-03T19:35:20.270Z -- unknown -- print%20my%20blog%20%E2%80%93%20print%2C%20pdf%2C%20%26%20ebook%20converter%20wordpress%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24636</link>
      <description>The Print My Blog WordPress Plugin before 3.4.2 does not enforce nonce (CSRF) checks, which allows attackers to make logged in administrators deactivate the Print My Blog plugin and delete all saved data for that plugin by tricking them to open a malicious link</description>
      <guid isPermaLink="false">CVE-2021-24636|2024-08-03T19:35:20.270Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1609|2024-08-03T00:10:03.591Z -- unknown -- school-management-pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1609</link>
      <description>The School Management WordPress plugin before 9.9.7 contains an obfuscated backdoor injected in it's license checking code that registers a REST API handler, allowing an unauthenticated attacker to execute arbitrary PHP code on the site.</description>
      <guid isPermaLink="false">CVE-2022-1609|2024-08-03T00:10:03.591Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:52:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2046|2024-08-03T00:24:43.957Z -- unknown -- directorist%20%E2%80%93%20wordpress%20business%20directory%20plugin%20with%20classified%20ads%20listings
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2046</link>
      <description>The Directorist WordPress plugin before 7.2.3 allows administrators to download other plugins from the same vendor directly to the site, but does not check the URL domain it gets the zip files from. This could allow administrators to run code on the server, which is a problem in multisite configurations.</description>
      <guid isPermaLink="false">CVE-2022-2046|2024-08-03T00:24:43.957Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:46:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3469|2024-08-03T01:14:01.402Z -- unknown -- wp%20attachments
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3469</link>
      <description>The WP Attachments WordPress plugin before 5.0.5 does not sanitize and escapes some of its settings, which could allow high-privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example, in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3469|2024-08-03T01:14:01.402Z</guid>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1685|2024-08-03T00:10:03.847Z -- unknown -- five%20minute%20webshop
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1685</link>
      <description>The Five Minute Webshop WordPress plugin through 1.3.2 does not properly validate and sanitise the orderby parameter before using it in a SQL statement via the Manage Products admin page, leading to an SQL Injection</description>
      <guid isPermaLink="false">CVE-2022-1685|2024-08-03T00:10:03.847Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24521|2024-08-03T19:35:19.972Z -- unknown -- side%20menu%20lite%20%E2%80%93%20add%20sticky%20fixed%20buttons
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24521</link>
      <description>The Side Menu Lite – add sticky fixed buttons WordPress plugin before 2.2.1 does not properly sanitize input values from the browser when building an SQL statement. Users with the administrator role or permission to manage this plugin could perform an SQL Injection attack.</description>
      <guid isPermaLink="false">CVE-2021-24521|2024-08-03T19:35:19.972Z</guid>
      <pubDate>Mon, 09 Aug 2021 10:04:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-22734|2024-08-03T03:21:48.945Z -- unknown -- simple%20quotation
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-22734</link>
      <description>The Simple Quotation WordPress plugin through 1.3.2 does not have CSRF check when creating or editing a quote and does not sanitise and escape Quotes. As a result, attacker could make a logged in admin create or edit arbitrary quote, and put Cross-Site Scripting payloads in them</description>
      <guid isPermaLink="false">CVE-2022-22734|2024-08-03T03:21:48.945Z</guid>
      <pubDate>Mon, 14 Mar 2022 14:41:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25002|2024-08-03T19:49:14.548Z -- unknown -- tipsacarrier
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25002</link>
      <description>The Tipsacarrier WordPress plugin before 1.5.0.5 does not have any authorisation check in place some functions, which could allow unauthenticated users to access Orders data which could be used to retrieve the client full address, name and phone via tracking URL</description>
      <guid isPermaLink="false">CVE-2021-25002|2024-08-03T19:49:14.548Z</guid>
      <pubDate>Mon, 02 May 2022 16:05:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24491|2024-08-03T19:35:20.117Z -- unknown -- fileviewer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24491</link>
      <description>The Fileviewer WordPress plugin through 2.2 does not have CSRF checks in place when performing actions such as upload and delete files. As a result, attackers could make a logged in administrator delete and upload arbitrary files via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2021-24491|2024-08-03T19:35:20.117Z</guid>
      <pubDate>Mon, 13 Sep 2021 17:56:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4760|2024-08-03T01:48:40.480Z -- unknown -- oneclick%20chat%20to%20order
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4760</link>
      <description>The OneClick Chat to Order WordPress plugin before 1.0.4.2 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4760|2024-08-03T01:48:40.480Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24203|2024-08-03T19:21:18.671Z -- unknown -- elementor%20website%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24203</link>
      <description>In the Elementor Website Builder WordPress plugin before 3.1.4, the divider widget (includes/widgets/divider.php) accepts an ‘html_tag’ parameter. Although the element control lists a fixed set of possible html tags, it is possible for a user with Contributor or above permissions to send a modified ‘save_builder’ request with this parameter set to ‘script’ and combined with a ‘text’ parameter containing JavaScript, which will then be executed when the saved page is viewed or previewed.</description>
      <guid isPermaLink="false">CVE-2021-24203|2024-08-03T19:21:18.671Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2350|2024-08-03T00:32:09.701Z -- unknown -- disable%20user%20login
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2350</link>
      <description>The Disable User Login WordPress plugin through 1.0.1 does not have authorisation and CSRF checks when updating its settings, allowing unauthenticated attackers to block (or unblock) users at will.</description>
      <guid isPermaLink="false">CVE-2022-2350|2024-08-03T00:32:09.701Z</guid>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4459|2024-08-03T01:41:44.734Z -- unknown -- wp%20show%20posts
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4459</link>
      <description>The WP Show Posts WordPress plugin before 1.1.4 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4459|2024-08-03T01:41:44.734Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24335|2024-08-03T19:28:23.425Z -- unknown -- car%20repair%20services%20%26%20auto%20mechanic
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24335</link>
      <description>The Car Repair Services &amp; Auto Mechanic WordPress theme before 4.0 did not properly sanitise its serviceestimatekey search parameter before outputting it back in the page, leading to a reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24335|2024-08-03T19:28:23.425Z</guid>
      <pubDate>Tue, 01 Jun 2021 11:33:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1956|2024-08-03T00:24:43.993Z -- unknown -- shortcut%20macros
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1956</link>
      <description>The Shortcut Macros WordPress plugin through 1.3 does not have authorisation and CSRF checks in place when updating its settings, which could allow any authenticated users, such as subscriber, to update them.</description>
      <guid isPermaLink="false">CVE-2022-1956|2024-08-03T00:24:43.993Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:56:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24235|2024-08-03T19:21:18.713Z -- unknown -- goto
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24235</link>
      <description>The Goto WordPress theme before 2.0 does not sanitise the keywords and start_date GET parameter on its Tour List page, leading to an unauthenticated reflected Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-24235|2024-08-03T19:21:18.713Z</guid>
      <pubDate>Thu, 22 Apr 2021 21:00:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24617|2024-08-03T19:35:20.219Z -- unknown -- gamepress%20%E2%80%93%20the%20game%20database%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24617</link>
      <description>The GamePress WordPress plugin through 1.1.0 does not escape the op_edit POST parameter before outputting it back in multiple Game Option pages, leading to Reflected Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-24617|2024-08-03T19:35:20.219Z</guid>
      <pubDate>Mon, 18 Oct 2021 13:45:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4497|2024-08-03T01:41:45.003Z -- unknown -- jetpack%20crm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4497</link>
      <description>The Jetpack CRM WordPress plugin before 5.5 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins</description>
      <guid isPermaLink="false">CVE-2022-4497|2024-08-03T01:41:45.003Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2367|2024-08-03T00:32:09.766Z -- unknown -- wsm%20downloader
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2367</link>
      <description>The WSM Downloader WordPress plugin through 1.4.0 allows only specific popular websites to download images/files from, this can be bypassed due to the lack of good "link" parameter validation</description>
      <guid isPermaLink="false">CVE-2022-2367|2024-08-03T00:32:09.766Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:47:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24136|2024-08-03T19:21:18.510Z -- unknown -- testimonials%20widget
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24136</link>
      <description>Unvalidated input and lack of output encoding in the Testimonials Widget WordPress plugin, versions before 4.0.0, lead to multiple Cross-Site Scripting vulnerabilities, allowing remote attackers to inject arbitrary JavaScript code or HTML via the below parameters: - Author - Job Title - Location - Company - Email - URL</description>
      <guid isPermaLink="false">CVE-2021-24136|2024-08-03T19:21:18.510Z</guid>
      <pubDate>Thu, 18 Mar 2021 14:57:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1831|2024-08-03T00:17:00.474Z -- unknown -- wplite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1831</link>
      <description>The WPlite WordPress plugin through 1.3.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1831|2024-08-03T00:17:00.474Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24783|2024-08-03T19:42:17.350Z -- unknown -- post%20expirator%3A%20automatically%20unpublish%20wordpress%20posts
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24783</link>
      <description>The Post Expirator WordPress plugin before 2.6.0 does not have proper capability checks in place, which could allow users with a role as low as Contributor to schedule deletion of arbitrary posts.</description>
      <guid isPermaLink="false">CVE-2021-24783|2024-08-03T19:42:17.350Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:35:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2351|2024-08-03T00:32:09.569Z -- unknown -- post%20smtp%20mailer%2Femail%20log
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2351</link>
      <description>The Post SMTP Mailer/Email Log WordPress plugin before 2.1.4 does not escape some of its settings before outputting them in the admins dashboard, allowing high privilege users to perform Cross-Site Scripting attacks against other users even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2351|2024-08-03T00:32:09.569Z</guid>
      <pubDate>Fri, 16 Sep 2022 08:40:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24234|2024-08-03T19:21:18.676Z -- unknown -- ivory%20search%20%E2%80%93%20wordpress%20search%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24234</link>
      <description>The Search Forms page of the Ivory Search WordPress lugin before 4.6.1 did not properly sanitise the tab parameter before output it in the page, leading to a reflected Cross-Site Scripting issue when opening a malicious crafted link as a high privilege user. Knowledge of a form id is required to conduct the attack.</description>
      <guid isPermaLink="false">CVE-2021-24234|2024-08-03T19:21:18.676Z</guid>
      <pubDate>Thu, 22 Apr 2021 21:00:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3494|2024-08-03T01:14:01.457Z -- unknown -- complianz%20%E2%80%93%20gdpr%2Fccpa%20cookie%20consent
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3494</link>
      <description>The Complianz WordPress plugin before 6.3.4, and Complianz Premium WordPress plugin before 6.3.6 allow a translators to inject arbitrary SQL through an unsanitized translation. SQL can be injected through an infected translation file, or by a user with a translator role through translation plugins such as Loco Translate or WPML.</description>
      <guid isPermaLink="false">CVE-2022-3494|2024-08-03T01:14:01.457Z</guid>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3720|2024-08-03T01:20:57.121Z -- unknown -- event%20monster
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3720</link>
      <description>The Event Monster WordPress plugin before 1.2.0 does not validate and escape some parameters before using them in SQL statements, which could lead to SQL Injection exploitable by high privilege users</description>
      <guid isPermaLink="false">CVE-2022-3720|2024-08-03T01:20:57.121Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24337|2024-08-03T19:28:23.427Z -- unknown -- video%20embed
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24337</link>
      <description>The id GET parameter of one of the Video Embed WordPress plugin through 1.0's page (available via forced browsing) is not sanitised, validated or escaped before being used in a SQL statement, allowing low privilege users, such as subscribers, to perform SQL injection.</description>
      <guid isPermaLink="false">CVE-2021-24337|2024-08-03T19:28:23.427Z</guid>
      <pubDate>Mon, 07 Jun 2021 10:49:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25049|2024-08-03T19:49:14.626Z -- unknown -- mobile%20events%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25049</link>
      <description>The Mobile Events Manager WordPress plugin before 1.4.4 does not sanitise and escape various of its settings, allowing high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-25049|2024-08-03T19:49:14.626Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:01:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3440|2024-08-03T01:07:06.588Z -- unknown -- rock%20convert
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3440</link>
      <description>The Rock Convert WordPress plugin before 2.11.0 does not sanitise and escape an URL before outputting it back in an attribute when a specific widget is present on a page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-3440|2024-08-03T01:07:06.588Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1777|2024-08-03T00:16:59.974Z -- unknown -- filr%20%E2%80%93%20secure%20document%20library
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1777</link>
      <description>The Filr WordPress plugin before 1.2.2.1 does not have authorisation check in two of its AJAX actions, allowing them to be called by any authenticated users, such as subscriber. They are are protected with a nonce, however the nonce is leaked on the dashboard. This could allow them to upload arbitrary HTML files as well as delete all files or arbitrary ones.</description>
      <guid isPermaLink="false">CVE-2022-1777|2024-08-03T00:16:59.974Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24550|2024-08-03T19:35:20.125Z -- unknown -- broken%20link%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24550</link>
      <description>The Broken Link Manager WordPress plugin through 0.6.5 does not sanitise, validate or escape the url GET parameter before using it in a SQL statement when retrieving an URL to edit, leading to an authenticated SQL injection issue</description>
      <guid isPermaLink="false">CVE-2021-24550|2024-08-03T19:35:20.125Z</guid>
      <pubDate>Mon, 23 Aug 2021 11:10:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24634|2024-08-03T19:35:20.313Z -- unknown -- recipe%20card%20blocks%20by%20wpzoom
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24634</link>
      <description>The Recipe Card Blocks by WPZOOM WordPress plugin before 2.8.3 does not properly sanitise or escape some of the properties of the Recipe Card Block (such as ingredientsLayout, iconSet, steps, ingredients, recipeTitle, or settings), which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2021-24634|2024-08-03T19:35:20.313Z</guid>
      <pubDate>Mon, 27 Sep 2021 15:25:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24619|2024-08-03T19:35:20.279Z -- unknown -- per%20page%20add%20to%20head
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24619</link>
      <description>The Per page add to head WordPress plugin through 1.4.4 does not properly sanitise one of its setting, allowing malicious HTML to be inserted by high privilege users even when the unfiltered_html capability is disallowed, which could lead to Cross-Site Scripting issues.</description>
      <guid isPermaLink="false">CVE-2021-24619|2024-08-03T19:35:20.279Z</guid>
      <pubDate>Mon, 13 Sep 2021 17:56:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24540|2024-08-03T19:35:19.842Z -- unknown -- wonder%20video%20embed
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24540</link>
      <description>The Wonder Video Embed WordPress plugin before 1.8 does not escape parameters of its wonderplugin_video shortcode, which could allow users with a role as low as Contributor to perform Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2021-24540|2024-08-03T19:35:19.842Z</guid>
      <pubDate>Mon, 16 Aug 2021 10:48:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25045|2024-08-03T19:49:14.553Z -- unknown -- asgaros%20forum
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25045</link>
      <description>The Asgaros Forum WordPress plugin before 1.15.15 does not validate or escape the forum_id parameter before using it in a SQL statement when editing a forum, leading to an SQL injection issue</description>
      <guid isPermaLink="false">CVE-2021-25045|2024-08-03T19:49:14.553Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:01:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4837|2024-08-03T01:55:45.780Z -- unknown -- cpo%20companion
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4837</link>
      <description>The CPO Companion WordPress plugin before 1.1.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4837|2024-08-03T01:55:45.780Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24379|2024-08-03T19:28:23.786Z -- unknown -- comments%20like%20dislike
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24379</link>
      <description>The Comments Like Dislike WordPress plugin before 1.1.4 allows users to like/dislike posted comments, however does not prevent them from replaying the AJAX request to add a like. This allows any user (even unauthenticated) to add unlimited like/dislike to any comment. The plugin appears to have some Restriction modes, such as Cookie Restriction, IP Restrictions, Logged In User Restriction, however, they do not prevent such attack as they only check client side</description>
      <guid isPermaLink="false">CVE-2021-24379|2024-08-03T19:28:23.786Z</guid>
      <pubDate>Mon, 21 Jun 2021 19:18:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24403|2024-08-03T19:28:23.817Z -- unknown -- wordpress%20page%20contact
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24403</link>
      <description>The Orders functionality in the WordPress Page Contact plugin through 1.0 has an order_id parameter which is not sanitised, escaped or validated before inserting to a SQL statement, leading to SQL injection. The feature is available to low privilege users such as contributors</description>
      <guid isPermaLink="false">CVE-2021-24403|2024-08-03T19:28:23.817Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2181|2024-08-03T00:32:08.747Z -- unknown -- advanced%20wordpress%20reset
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2181</link>
      <description>The Advanced WordPress Reset WordPress plugin before 1.6 does not escape some generated URLs before outputting them back in href attributes of admin dashboard pages, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2181|2024-08-03T00:32:08.747Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:49:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24724|2024-08-03T19:42:16.651Z -- unknown -- timetable%20and%20event%20schedule%20by%20motopress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24724</link>
      <description>The Timetable and Event Schedule by MotoPress WordPress plugin before 2.3.19 does not sanitise some of its parameters, which could allow low privilege users such as author to perform XSS attacks against frontend and backend users when viewing the related event/s</description>
      <guid isPermaLink="false">CVE-2021-24724|2024-08-03T19:42:16.651Z</guid>
      <pubDate>Mon, 13 Sep 2021 17:56:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4236|2024-08-03T01:34:49.922Z -- unknown -- welcart%20e-commerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4236</link>
      <description>The Welcart e-Commerce WordPress plugin before 2.8.5 does not validate user input before using it to output the content of a file via an AJAX action available to any authenticated users, which could allow users with a role as low as subscriber to read arbitrary files on the server.</description>
      <guid isPermaLink="false">CVE-2022-4236|2024-08-03T01:34:49.922Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4512|2024-08-03T01:41:45.617Z -- unknown -- better%20font%20awesome
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4512</link>
      <description>The Better Font Awesome WordPress plugin before 2.0.4 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-4512|2024-08-03T01:41:45.617Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24811|2024-08-03T19:42:17.193Z -- unknown -- shop%20page%20wp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24811</link>
      <description>The Shop Page WP WordPress plugin before 1.2.8 does not sanitise and escape some of the Product fields, allowing high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24811|2024-08-03T19:42:17.193Z</guid>
      <pubDate>Mon, 29 Nov 2021 08:25:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4124|2024-08-03T01:27:54.486Z -- unknown -- popup%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4124</link>
      <description>The Popup Manager WordPress plugin through 1.6.6 does not have authorisation and CSRF checks when deleting popups, which could allow unauthenticated users to delete them</description>
      <guid isPermaLink="false">CVE-2022-4124|2024-08-03T01:27:54.486Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1546|2024-08-03T00:10:02.946Z -- unknown -- woocommerce%20%E2%80%93%20product%20importer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1546</link>
      <description>The WooCommerce - Product Importer WordPress plugin through 1.5.2 does not sanitise and escape the imported data before outputting it back in the page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-1546|2024-08-03T00:10:02.946Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:55:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24974|2024-08-03T19:49:14.388Z -- unknown -- product%20feed%20pro%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24974</link>
      <description>The Product Feed PRO for WooCommerce WordPress plugin before 11.0.7 does not have authorisation and CSRF check in some of its AJAX actions, allowing any authenticated users to call then, which could lead to Stored Cross-Site Scripting issue (which will be triggered in the admin dashboard) due to the lack of escaping.</description>
      <guid isPermaLink="false">CVE-2021-24974|2024-08-03T19:49:14.388Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:01:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2538|2024-08-03T00:39:08.067Z -- unknown -- wp%20hide%20%26%20security%20enhancer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2538</link>
      <description>The WP Hide &amp; Security Enhancer WordPress plugin before 1.8 does not escape a parameter before outputting it back in an attribute of a backend page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2538|2024-08-03T00:39:08.067Z</guid>
      <pubDate>Mon, 29 Aug 2022 17:15:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3688|2024-08-03T01:14:03.351Z -- unknown -- wpqa%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3688</link>
      <description>The WPQA Builder WordPress plugin before 5.9 does not have CSRF check when following and unfollowing users, which could allow attackers to make logged in users perform such actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2022-3688|2024-08-03T01:14:03.351Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24606|2024-08-03T19:35:20.276Z -- unknown -- availability%20calendar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24606</link>
      <description>The Availability Calendar WordPress plugin before 1.2.1 does not escape the category attribute from its shortcode before using it in a SQL statement, leading to a SQL Injection issue, which can be exploited by any user able to add shortcode to posts/pages, such as contributor+</description>
      <guid isPermaLink="false">CVE-2021-24606|2024-08-03T19:35:20.276Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1527|2024-08-03T00:10:02.821Z -- unknown -- wp%202fa%20%E2%80%93%20two-factor%20authentication%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1527</link>
      <description>The WP 2FA WordPress plugin before 2.2.1 does not sanitise and escape a parameter before outputting it back in an admin page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-1527|2024-08-03T00:10:02.821Z</guid>
      <pubDate>Mon, 30 May 2022 08:35:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24711|2024-08-03T19:42:16.146Z -- unknown -- software%20license%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24711</link>
      <description>The del_reistered_domains AJAX action of the Software License Manager WordPress plugin before 4.5.1 does not have any CSRF checks, and is vulnerable to a CSRF attack</description>
      <guid isPermaLink="false">CVE-2021-24711|2024-08-03T19:42:16.146Z</guid>
      <pubDate>Mon, 11 Oct 2021 10:45:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24893|2024-08-03T19:49:14.012Z -- unknown -- stars%20rating
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24893</link>
      <description>The Stars Rating WordPress plugin before 3.5.1 does not validate the submitted rating, allowing submission of long integer, causing a Denial of Service in the comments section, or pending comment dashboard depending if the user sent it as unauthenticated or authenticated.</description>
      <guid isPermaLink="false">CVE-2021-24893|2024-08-03T19:49:14.012Z</guid>
      <pubDate>Mon, 03 Jan 2022 12:49:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24202|2024-08-03T19:21:18.620Z -- unknown -- elementor%20website%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24202</link>
      <description>In the Elementor Website Builder WordPress plugin before 3.1.4, the heading widget (includes/widgets/heading.php) accepts a ‘header_size’ parameter. Although the element control lists a fixed set of possible html tags, it is possible for a user with Contributor or above permissions to send a modified ‘save_builder’ request with this parameter set to ‘script’ and combined with a ‘title’ parameter containing JavaScript, which will then be executed when the saved page is viewed or previewed.</description>
      <guid isPermaLink="false">CVE-2021-24202|2024-08-03T19:21:18.620Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24391|2024-08-03T19:28:23.814Z -- unknown -- cashtomer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24391</link>
      <description>An editid GET parameter of the Cashtomer WordPress plugin through 1.0.0 is not properly sanitised, escaped or validated before inserting to a SQL statement, leading to SQL injection.</description>
      <guid isPermaLink="false">CVE-2021-24391|2024-08-03T19:28:23.814Z</guid>
      <pubDate>Mon, 06 Sep 2021 11:09:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2413|2024-08-03T00:39:07.571Z -- unknown -- slide%20anything
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2413</link>
      <description>The Slide Anything WordPress plugin before 2.3.47 does not properly sanitize or escape the slide title before outputting it in the admin pages, allowing a logged in user with roles as low as Author to inject a javascript payload into the slide title even when the unfiltered_html capability is disabled.</description>
      <guid isPermaLink="false">CVE-2022-2413|2024-08-03T00:39:07.571Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:49:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24293|2024-08-03T19:28:22.816Z -- unknown -- nextgen%20gallery%20pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24293</link>
      <description>In the eCommerce module of the NextGEN Gallery Pro WordPress plugin before 3.1.11, there is an action to call get_cart_items via photocrati_ajax , after that the settings[shipping_address][name] is able to inject malicious javascript.</description>
      <guid isPermaLink="false">CVE-2021-24293|2024-08-03T19:28:22.816Z</guid>
      <pubDate>Wed, 05 May 2021 18:28:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24760|2024-08-03T19:42:16.874Z -- unknown -- gutenberg%20pdf%20viewer%20block
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24760</link>
      <description>The Gutenberg PDF Viewer Block WordPress plugin before 1.0.1 does not sanitise and escape its block, which could allow users with a role as low as Contributor to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2021-24760|2024-08-03T19:42:16.874Z</guid>
      <pubDate>Mon, 18 Oct 2021 13:46:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24829|2024-08-03T19:42:17.199Z -- unknown -- visitor%20traffic%20real%20time%20statistics
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24829</link>
      <description>The Visitor Traffic Real Time Statistics WordPress plugin before 3.9 does not validate and escape user input passed to the today_traffic_index AJAX action (available to any authenticated users) before using it in a SQL statement, leading to an SQL injection issue</description>
      <guid isPermaLink="false">CVE-2021-24829|2024-08-03T19:42:17.199Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:35:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4669|2024-08-03T01:48:39.837Z -- unknown -- page%20builder%3A%20live%20composer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4669</link>
      <description>The Page Builder: Live Composer WordPress plugin before 1.5.23 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-4669|2024-08-03T01:48:39.837Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4762|2024-08-03T01:48:40.287Z -- unknown -- materialis%20companion
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4762</link>
      <description>The Materialis Companion WordPress plugin before 1.3.40 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4762|2024-08-03T01:48:40.287Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4060|2024-08-03T01:27:54.404Z -- unknown -- user%20post%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4060</link>
      <description>The User Post Gallery WordPress plugin through 2.19 does not limit what callback functions can be called by users, making it possible to any visitors to run code on sites running it.</description>
      <guid isPermaLink="false">CVE-2022-4060|2024-08-03T01:27:54.404Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3578|2024-08-03T01:14:02.603Z -- unknown -- profilegrid%20%E2%80%93%20user%20profiles%2C%20memberships%2C%20groups%20and%20communities
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3578</link>
      <description>The ProfileGrid WordPress plugin before 5.1.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-3578|2024-08-03T01:14:02.603Z</guid>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2261|2024-08-03T00:32:09.674Z -- unknown -- wpide%20%E2%80%93%20file%20manager%20%26%20code%20editor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2261</link>
      <description>The WPIDE WordPress plugin before 3.0 does not sanitize and validate the filename parameter before using it in a require statement in the admin dashboard, leading to a Local File Inclusion issue.</description>
      <guid isPermaLink="false">CVE-2022-2261|2024-08-03T00:32:09.674Z</guid>
      <pubDate>Mon, 29 Aug 2022 17:15:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25061|2024-08-03T19:49:14.594Z -- unknown -- wp%20booking%20system%20%E2%80%93%20booking%20calendar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25061</link>
      <description>The WP Booking System WordPress plugin before 2.0.15 was affected by a reflected xss in wp-booking-system on the wpbs-calendars admin page.</description>
      <guid isPermaLink="false">CVE-2021-25061|2024-08-03T19:49:14.594Z</guid>
      <pubDate>Mon, 17 Jan 2022 13:00:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24145|2024-08-03T19:21:18.213Z -- unknown -- modern%20events%20calendar%20lite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24145</link>
      <description>Arbitrary file upload in the Modern Events Calendar Lite WordPress plugin, versions before 5.16.5, did not properly check the imported file, allowing PHP ones to be uploaded by administrator by using the 'text/csv' content-type in the request.</description>
      <guid isPermaLink="false">CVE-2021-24145|2024-08-03T19:21:18.213Z</guid>
      <pubDate>Thu, 18 Mar 2021 14:57:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2891|2024-08-03T00:53:00.501Z -- unknown -- wp%202fa
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2891</link>
      <description>The WP 2FA WordPress plugin before 2.3.0 uses comparison operators that don't mitigate time-based attacks, which could be abused to leak information about the authentication codes being compared.</description>
      <guid isPermaLink="false">CVE-2022-2891|2024-08-03T00:53:00.501Z</guid>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4786|2024-08-03T01:48:40.432Z -- unknown -- video.js
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4786</link>
      <description>The Video.js WordPress plugin through 4.5.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4786|2024-08-03T01:48:40.432Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4120|2024-08-03T01:27:54.483Z -- unknown -- stop%20spammers%20security%20%7C%20block%20spam%20users%2C%20comments%2C%20forms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4120</link>
      <description>The Stop Spammers Security | Block Spam Users, Comments, Forms WordPress plugin before 2022.6 passes base64 encoded user input to the unserialize() PHP function when CAPTCHA are used as second challenge, which could lead to PHP Object injection if a plugin installed on the blog has a suitable gadget chain</description>
      <guid isPermaLink="false">CVE-2022-4120|2024-08-03T01:27:54.483Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3601|2024-08-03T01:14:03.204Z -- unknown -- image%20hover%20effects%20css3
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3601</link>
      <description>The Image Hover Effects Css3 WordPress plugin through 4.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3601|2024-08-03T01:14:03.204Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4165|2024-08-03T01:34:48.816Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4165</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the cg_order POST parameter before concatenating it to an SQL query in order-custom-fields-with-and-without-search.php. This may allow malicious users with at least author privilege to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4165|2024-08-03T01:34:48.816Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4372|2024-08-03T01:34:50.179Z -- unknown -- web%20invoice
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4372</link>
      <description>The Web Invoice WordPress plugin through 2.1.3 does not properly sanitize and escape a parameter before using it in a SQL statement, leading to a SQL Injection exploitable by high privilege users such as admin by default. However, depending on the plugin configuration, other users, such as subscriber could exploit this as well</description>
      <guid isPermaLink="false">CVE-2022-4372|2024-08-03T01:34:50.179Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24173|2024-08-03T19:21:18.724Z -- unknown -- vm%20backups
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24173</link>
      <description>The VM Backups WordPress plugin through 1.0 does not have CSRF checks, allowing attackers to make a logged in user unwanted actions, such as update the plugin's options, leading to a Stored Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-24173|2024-08-03T19:21:18.724Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24253|2024-08-03T19:28:22.247Z -- unknown -- classyfrieds
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24253</link>
      <description>The Classyfrieds WordPress plugin through 3.8 does not properly check the uploaded file when an authenticated user adds a listing, only checking the content-type in the request. This allows any authenticated user to upload arbitrary PHP files via the Add Listing feature of the plugin, leading to RCE.</description>
      <guid isPermaLink="false">CVE-2021-24253|2024-08-03T19:28:22.247Z</guid>
      <pubDate>Wed, 05 May 2021 18:39:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24985|2024-08-03T19:49:14.541Z -- unknown -- easy%20forms%20for%20mailchimp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24985</link>
      <description>The Easy Forms for Mailchimp WordPress plugin before 6.8.6 does not sanitise and escape the field_name and field_type parameters before outputting them back in attributes, leading to Reflected Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-24985|2024-08-03T19:49:14.541Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:01:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24871|2024-08-03T19:49:12.639Z -- unknown -- get%20custom%20field%20values
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24871</link>
      <description>The Get Custom Field Values WordPress plugin before 4.0.1 does not escape custom fields before outputting them in the page, which could allow users with a role as low as contributor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2021-24871|2024-08-03T19:49:12.639Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:41:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24666|2024-08-03T19:42:15.993Z -- unknown -- podlove%20podcast%20publisher
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24666</link>
      <description>The Podlove Podcast Publisher WordPress plugin before 3.5.6 contains a 'Social &amp; Donations' module (not activated by default), which adds the rest route '/services/contributor/(?P&lt;id&gt;[\d]+), takes an 'id' and 'category' parameters as arguments. Both parameters can be used for the SQLi.</description>
      <guid isPermaLink="false">CVE-2021-24666|2024-08-03T19:42:15.993Z</guid>
      <pubDate>Mon, 27 Sep 2021 15:25:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-4436|2024-08-03T17:30:07.527Z -- unknown -- 3dprint%20lite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-4436</link>
      <description>The 3DPrint Lite WordPress plugin before 1.9.1.5 does not have any authorisation and does not check the uploaded file in its p3dlite_handle_upload AJAX action , allowing unauthenticated users to upload arbitrary file to the web server. However, there is a .htaccess, preventing the file to be accessed on Web servers such as Apache.</description>
      <guid isPermaLink="false">CVE-2021-4436|2024-08-03T17:30:07.527Z</guid>
      <pubDate>Mon, 05 Feb 2024 09:02:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24774|2024-08-03T19:42:17.040Z -- unknown -- check%20%26%20log%20email
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24774</link>
      <description>The Check &amp; Log Email WordPress plugin before 1.0.3 does not validate and escape the "order" and "orderby" GET parameters before using them in a SQL statement when viewing logs, leading to SQL injections issues</description>
      <guid isPermaLink="false">CVE-2021-24774|2024-08-03T19:42:17.040Z</guid>
      <pubDate>Mon, 25 Oct 2021 13:20:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2093|2024-08-03T00:24:44.260Z -- unknown -- wp%20duplicate%20page
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2093</link>
      <description>The WP Duplicate Page WordPress plugin before 1.3 does not sanitize and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2093|2024-08-03T00:24:44.260Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:57:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2340|2024-08-03T00:32:09.356Z -- unknown -- w-dalil
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2340</link>
      <description>The W-DALIL WordPress plugin through 2.0 does not sanitise and escape some of its fields, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2340|2024-08-03T00:32:09.356Z</guid>
      <pubDate>Mon, 25 Jul 2022 12:48:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24823|2024-08-03T19:42:17.351Z -- unknown -- support%20board
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24823</link>
      <description>The Support Board WordPress plugin before 3.3.6 does not have any CSRF checks in actions handled by the include/ajax.php file, which could allow attackers to make logged in users do unwanted actions. For example, make an admin delete arbitrary files</description>
      <guid isPermaLink="false">CVE-2021-24823|2024-08-03T19:42:17.351Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4362|2024-08-03T01:34:50.159Z -- unknown -- popup%20maker
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4362</link>
      <description>The Popup Maker WordPress plugin before 1.16.9 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4362|2024-08-03T01:34:50.159Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4447|2024-08-03T01:41:44.594Z -- unknown -- fontsy
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4447</link>
      <description>The Fontsy WordPress plugin through 1.8.6 does not properly sanitize and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection.</description>
      <guid isPermaLink="false">CVE-2022-4447|2024-08-03T01:41:44.594Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24681|2024-08-03T19:42:16.052Z -- unknown -- duplicate%20page
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24681</link>
      <description>The Duplicate Page WordPress plugin through 4.4.2 does not sanitise or escape the Duplicate Post Suffix settings before outputting it, which could allow high privilege users to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24681|2024-08-03T19:42:16.052Z</guid>
      <pubDate>Mon, 11 Oct 2021 10:45:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3828|2024-08-03T01:20:58.378Z -- unknown -- video%20thumbnails
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3828</link>
      <description>The Video Thumbnails WordPress plugin through 2.12.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3828|2024-08-03T01:20:58.378Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24611|2024-08-03T19:35:20.209Z -- unknown -- keyword%20meta
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24611</link>
      <description>The Keyword Meta WordPress plugin through 3.0 does not sanitise of escape its settings before outputting them back in the page after they are saved, allowing for Cross-Site Scripting issues. Furthermore, it is also lacking any CSRF check, allowing attacker to make a logged in high privilege user save arbitrary setting via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2021-24611|2024-08-03T19:35:20.209Z</guid>
      <pubDate>Mon, 06 Sep 2021 11:09:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25113|2024-08-03T19:56:10.552Z -- unknown -- dropdown%20menu%20widget
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25113</link>
      <description>The Dropdown Menu Widget WordPress plugin through 1.9.7 does not have authorisation and CSRF checks when saving its settings, allowing low privilege users such as subscriber to update them. Due to the lack of sanitisation and escaping, it could also lead to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-25113|2024-08-03T19:56:10.552Z</guid>
      <pubDate>Mon, 04 Apr 2022 15:35:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1830|2024-08-03T00:17:00.377Z -- unknown -- amazon%20einzeltitellinks
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1830</link>
      <description>The Amazon Einzeltitellinks WordPress plugin through 1.3.3 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping</description>
      <guid isPermaLink="false">CVE-2022-1830|2024-08-03T00:17:00.377Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4321|2024-08-03T01:34:50.062Z -- unknown -- pdf%20generator%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4321</link>
      <description>The PDF Generator for WordPress plugin before 1.1.2 includes a vendored dompdf example file which is susceptible to Reflected Cross-Site Scripting and could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2022-4321|2024-08-03T01:34:50.062Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3750|2024-08-03T01:20:58.378Z -- unknown -- ask%20me
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3750</link>
      <description>The  has a CSRF vulnerability that allows the deletion of a post without using a nonce or prompting for confirmation.</description>
      <guid isPermaLink="false">CVE-2022-3750|2024-08-03T01:20:58.378Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4357|2024-08-03T01:34:50.165Z -- unknown -- letsrecover
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4357</link>
      <description>The LetsRecover WordPress plugin before 1.2.0 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection.</description>
      <guid isPermaLink="false">CVE-2022-4357|2024-08-03T01:34:50.165Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4265|2024-08-03T01:34:49.903Z -- unknown -- replyable
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4265</link>
      <description>The Replyable WordPress plugin before 2.2.10 does not validate the class name submitted by the request when instantiating an object in the prompt_dismiss_notice action and also lacks CSRF check in the related action. This could allow any authenticated users, such as subscriber to perform Object Injection attacks. The attack could also be done via a CSRF vector against any authenticated user</description>
      <guid isPermaLink="false">CVE-2022-4265|2024-08-03T01:34:49.903Z</guid>
      <pubDate>Mon, 06 Mar 2023 13:33:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24934|2024-08-03T19:49:14.011Z -- unknown -- visual%20css%20style%20editor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24934</link>
      <description>The Visual CSS Style Editor WordPress plugin before 7.5.4 does not sanitise and escape the wyp_page_type parameter before outputting it back in an admin page, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24934|2024-08-03T19:49:14.011Z</guid>
      <pubDate>Tue, 01 Feb 2022 12:21:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3823|2024-08-03T01:20:58.795Z -- unknown -- beautiful%20cookie%20consent%20banner
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3823</link>
      <description>The Beautiful Cookie Consent Banner WordPress plugin before 2.9.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3823|2024-08-03T01:20:58.795Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25098|2024-08-03T19:56:10.667Z -- unknown -- pricing%20tables%20wordpress%20plugin%20%E2%80%93%20easy%20pricing%20tables
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25098</link>
      <description>The Pricing Tables WordPress Plugin WordPress plugin before 3.1.3 does not verify the CSRF nonce when removing posts, allowing attackers to make a logged in admin remove arbitrary posts from the blog via a CSRF attack, which will be put in the trash</description>
      <guid isPermaLink="false">CVE-2021-25098|2024-08-03T19:56:10.667Z</guid>
      <pubDate>Mon, 07 Mar 2022 08:16:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3961|2024-08-03T01:27:53.132Z -- unknown -- directorist
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3961</link>
      <description>The Directorist WordPress plugin before 7.4.4 does not prevent users with low privileges (like subscribers) from accessing sensitive system information.</description>
      <guid isPermaLink="false">CVE-2022-3961|2024-08-03T01:27:53.132Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24664|2024-08-03T19:42:15.967Z -- unknown -- school%20management%20system%20%E2%80%93%20wpschoolpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24664</link>
      <description>The School Management System – WPSchoolPress WordPress plugin before 2.1.17 sanitise some fields using sanitize_text_field() but does not escape them before outputting in attributes, resulting in Stored Cross-Site Scripting issues.</description>
      <guid isPermaLink="false">CVE-2021-24664|2024-08-03T19:42:15.967Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:34:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24998|2024-08-03T19:49:14.542Z -- unknown -- simple%20jwt%20login
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24998</link>
      <description>The Simple JWT Login WordPress plugin before 3.3.0 can be used to create new WordPress user accounts with a randomly generated password. The password is generated using the str_shuffle  PHP function that "does not generate cryptographically secure values, and should not be used for cryptographic purposes" according to PHP's documentation.</description>
      <guid isPermaLink="false">CVE-2021-24998|2024-08-03T19:49:14.542Z</guid>
      <pubDate>Mon, 27 Dec 2021 10:33:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24384|2024-08-03T19:28:23.922Z -- unknown -- joomsport%20%E2%80%93%20for%20sports%3A%20team%20%26%20league%2C%20football%2C%20hockey%20%26%20more
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24384</link>
      <description>The joomsport_md_load AJAX action of the JoomSport WordPress plugin before 5.1.8, registered for both unauthenticated and unauthenticated users, unserialised user input from the shattr POST parameter, leading to a PHP Object Injection issue. Even though the plugin does not have a suitable gadget chain to exploit this, other installed plugins could, which might lead to more severe issues such as RCE</description>
      <guid isPermaLink="false">CVE-2021-24384|2024-08-03T19:28:23.922Z</guid>
      <pubDate>Tue, 06 Jul 2021 11:03:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24853|2024-08-03T19:42:17.211Z -- unknown -- qr%20redirector
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24853</link>
      <description>The QR Redirector WordPress plugin before 1.6 does not have capability and CSRF checks when saving bulk QR Redirector settings via the qr_save_bulk AJAX action, which could allow any authenticated user, such as subscriber to change the redirect response status code of arbitrary QR Redirects</description>
      <guid isPermaLink="false">CVE-2021-24853|2024-08-03T19:42:17.211Z</guid>
      <pubDate>Wed, 17 Nov 2021 10:15:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1601|2024-08-03T00:10:03.701Z -- unknown -- user%20access%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1601</link>
      <description>The User Access Manager WordPress plugin before 2.2.18 prioritizes getting a visitor's IP from certain HTTP headers over PHP's REMOTE_ADDR, which makes it possible for attackers to access restricted content in certain situations.</description>
      <guid isPermaLink="false">CVE-2022-1601|2024-08-03T00:10:03.701Z</guid>
      <pubDate>Wed, 30 Aug 2023 14:22:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1557|2024-08-03T00:10:02.962Z -- unknown -- uleak%20security%20%26%20monitoring%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1557</link>
      <description>The ULeak Security &amp; Monitoring WordPress plugin through 1.2.3 does not have authorisation and CSRF checks when updating its settings, and is also lacking sanitisation as well as escaping in some of them, which could allow any authenticated users such as subscriber to perform Stored Cross-Site Scripting attacks against admins viewing the settings</description>
      <guid isPermaLink="false">CVE-2022-1557|2024-08-03T00:10:02.962Z</guid>
      <pubDate>Mon, 16 May 2022 14:31:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2080|2024-08-03T00:24:44.176Z -- unknown -- sensei%20lms%20%E2%80%93%20online%20courses%2C%20quizzes%2C%20%26%20learning
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2080</link>
      <description>The Sensei LMS WordPress plugin before 4.5.2 does not ensure that the sender of a private message is either the teacher or the original sender, allowing any authenticated user to send messages to arbitrary private conversation via a IDOR attack. Note: Attackers are not able to see responses/messages between the teacher and student</description>
      <guid isPermaLink="false">CVE-2022-2080|2024-08-03T00:24:44.176Z</guid>
      <pubDate>Mon, 29 Aug 2022 14:40:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24751|2024-08-03T19:42:16.566Z -- unknown -- generateblocks
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24751</link>
      <description>The GenerateBlocks WordPress plugin before 1.4.0 does not validate the generateblocks/container block's tagName attribute, which could allow users with a role as low as contributor to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2021-24751|2024-08-03T19:42:16.566Z</guid>
      <pubDate>Mon, 29 Nov 2021 08:25:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24562|2024-08-03T19:35:20.173Z -- unknown -- lms%20by%20lifterlms%20%E2%80%93%20online%20course%2C%20membership%20%26%20learning%20management%20system%20plugin%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24562</link>
      <description>The LMS by LifterLMS – Online Course, Membership &amp; Learning Management System Plugin for WordPress plugin before 4.21.2 was affected by an IDOR issue, allowing students to see other student answers and grades</description>
      <guid isPermaLink="false">CVE-2021-24562|2024-08-03T19:35:20.173Z</guid>
      <pubDate>Mon, 23 Aug 2021 11:10:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24233|2024-08-03T19:21:18.922Z -- unknown -- cooked%20ppro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24233</link>
      <description>The Cooked Pro WordPress plugin before 1.7.5.6 was affected by unauthenticated reflected Cross-Site Scripting issues, due to improper sanitisation of user input while being output back in pages as an arbitrary attribute.</description>
      <guid isPermaLink="false">CVE-2021-24233|2024-08-03T19:21:18.922Z</guid>
      <pubDate>Thu, 22 Apr 2021 21:00:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-25812|2024-08-03T04:49:43.741Z -- unknown -- transposh%20wordpress%20translation
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-25812</link>
      <description>The Transposh WordPress Translation WordPress plugin before 1.0.8 does not validate its debug settings, which could allow allowing high privilege users such as admin to perform RCE</description>
      <guid isPermaLink="false">CVE-2022-25812|2024-08-03T04:49:43.741Z</guid>
      <pubDate>Mon, 22 Aug 2022 14:59:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1603|2024-08-03T00:10:03.703Z -- unknown -- mail%20subscribe%20list
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1603</link>
      <description>The Mail Subscribe List WordPress plugin before 2.1.4 does not have CSRF check in place when deleting subscribed users, which could allow attackers to make a logged in admin perform such action and delete arbitrary users from the subscribed list</description>
      <guid isPermaLink="false">CVE-2022-1603|2024-08-03T00:10:03.703Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:25:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24975|2024-08-03T19:49:14.049Z -- unknown -- nextscripts%3A%20social%20networks%20auto-poster
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24975</link>
      <description>The NextScripts: Social Networks Auto-Poster WordPress plugin before 4.3.24 does not sanitise and escape logged requests before outputting them in the related admin dashboard, leading to an Unauthenticated Stored Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24975|2024-08-03T19:49:14.049Z</guid>
      <pubDate>Tue, 01 Feb 2022 12:21:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1995|2024-08-03T00:24:43.913Z -- unknown -- malware%20scanner
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1995</link>
      <description>The Malware Scanner WordPress plugin before 4.5.2 does not sanitise and escape some of its settings, leading to malicious users with administrator privileges to store malicious Javascript code leading to Cross-Site Scripting attacks when unfiltered_html is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-1995|2024-08-03T00:24:43.913Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:59:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24426|2024-08-03T19:28:23.844Z -- unknown -- backup%20by%2010web%20%E2%80%93%20backup%20and%20restore%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24426</link>
      <description>The Backup by 10Web – Backup and Restore Plugin WordPress plugin through 1.0.20 does not sanitise or escape the tab parameter before outputting it back in the page, leading to a reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24426|2024-08-03T19:28:23.844Z</guid>
      <pubDate>Mon, 12 Jul 2021 19:20:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24428|2024-08-03T19:28:23.805Z -- unknown -- rss%20for%20yandex%20turbo
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24428</link>
      <description>The RSS for Yandex Turbo WordPress plugin through 1.30 does not sanitise or escape some of its settings before saving and outputing them in the admin dashboard, leading to an Authenticated Stored Cross-Site Scripting issue even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24428|2024-08-03T19:28:23.805Z</guid>
      <pubDate>Mon, 02 Aug 2021 10:31:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1591|2024-08-03T00:10:03.505Z -- unknown -- wordpress%20ping%20optimizer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1591</link>
      <description>The WordPress Ping Optimizer WordPress plugin before 2.35.1.3.0 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1591|2024-08-03T00:10:03.505Z</guid>
      <pubDate>Mon, 19 Sep 2022 14:00:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24961|2024-08-03T19:49:14.402Z -- unknown -- wordpress%20file%20upload
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24961</link>
      <description>The WordPress File Upload WordPress plugin before 4.16.3, wordpress-file-upload-pro WordPress plugin before 4.16.3 does not escape some of its shortcode argument, which could allow users with a role as low as Contributor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2021-24961|2024-08-03T19:49:14.402Z</guid>
      <pubDate>Mon, 07 Mar 2022 08:16:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2449|2024-08-03T00:39:07.578Z -- unknown -- resmush.it%20%3A%20the%20only%20free%20image%20optimizer%20%26%20compress%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2449</link>
      <description>The reSmush.it : the only free Image Optimizer &amp; compress plugin WordPress plugin before 0.4.4 does not perform CSRF checks for any of its AJAX actions, allowing an attackers to trick logged in users to perform various actions on their behalf on the site.</description>
      <guid isPermaLink="false">CVE-2022-2449|2024-08-03T00:39:07.578Z</guid>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1558|2024-08-03T00:10:02.951Z -- unknown -- curtain
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1558</link>
      <description>The Curtain WordPress plugin through 1.0.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1558|2024-08-03T00:10:02.951Z</guid>
      <pubDate>Mon, 23 May 2022 07:15:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24913|2024-08-03T19:49:14.408Z -- unknown -- logo%20showcase%20with%20slick%20slider%20%E2%80%93%20logo%20carousel%2C%20logo%20slider%20%26%20logo%20grid
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24913</link>
      <description>The Logo Showcase with Slick Slider WordPress plugin before 2.0.1 does not have CSRF check in the lswss_save_attachment_data AJAX action, allowing attackers to make a logged in high privilege user, change title, description, alt text, and URL of arbitrary uploaded media.</description>
      <guid isPermaLink="false">CVE-2021-24913|2024-08-03T19:49:14.408Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24474|2024-08-03T19:35:19.667Z -- unknown -- awesome%20weather%20widget
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24474</link>
      <description>The Awesome Weather Widget WordPress plugin through 3.0.2 does not sanitize the id parameter of its awesome_weather_refresh AJAX action, leading to an unauthenticated Reflected Cross-Site Scripting (XSS) Vulnerability.</description>
      <guid isPermaLink="false">CVE-2021-24474|2024-08-03T19:35:19.667Z</guid>
      <pubDate>Mon, 02 Aug 2021 10:32:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24773|2024-08-03T19:42:16.966Z -- unknown -- wordpress%20download%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24773</link>
      <description>The WordPress Download Manager WordPress plugin before 3.2.16 does not escape some of the Download settings when outputting them, allowing high privilege users to perform XSS attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24773|2024-08-03T19:42:16.966Z</guid>
      <pubDate>Mon, 01 Nov 2021 08:46:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24854|2024-08-03T19:42:17.302Z -- unknown -- qr%20redirector
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24854</link>
      <description>The QR Redirector WordPress plugin before 1.6.1 does not sanitise and escape some of the QR Redirect fields, which could allow users with a role as low as Contributor perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2021-24854|2024-08-03T19:42:17.302Z</guid>
      <pubDate>Wed, 17 Nov 2021 10:15:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24782|2024-08-03T19:42:17.321Z -- unknown -- flex%20local%20fonts
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24782</link>
      <description>The Flex Local Fonts WordPress plugin through 1.0.0 does not escape the Class Name field when adding a font, which could allow hight privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24782|2024-08-03T19:42:17.321Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:40:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4507|2024-08-03T01:41:45.615Z -- unknown -- real%20cookie%20banner%3A%20gdpr%20%28dsgvo%29%20%26%20eprivacy%20cookie%20consent
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4507</link>
      <description>The Real Cookie Banner WordPress plugin before 3.4.10 does not validate and escapes some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as a contributor to perform Stored Cross-Site Scripting attacks against logged-in admins.</description>
      <guid isPermaLink="false">CVE-2022-4507|2024-08-03T01:41:45.615Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4682|2024-08-03T01:48:39.936Z -- unknown -- lightbox%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4682</link>
      <description>The Lightbox Gallery WordPress plugin before 0.9.5 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4682|2024-08-03T01:48:39.936Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4580|2024-08-03T01:41:45.676Z -- unknown -- twenty20%20image%20before-after
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4580</link>
      <description>The Twenty20 Image Before-After WordPress plugin through 1.5.9 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4580|2024-08-03T01:41:45.676Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24856|2024-08-03T19:42:17.305Z -- unknown -- shared%20files%20%E2%80%93%20easy%20download%20manager%20and%20file%20sharing%20plugin%20with%20frontend%20file%20upload
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24856</link>
      <description>The Shared Files WordPress plugin before 1.6.61 does not sanitise and escape the Download Counter Text settings, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24856|2024-08-03T19:42:17.305Z</guid>
      <pubDate>Wed, 17 Nov 2021 10:16:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24957|2024-08-03T19:49:14.418Z -- unknown -- advanced%20page%20visit%20counter%20%E2%80%93%20advanced%20wordpress%20visit%20counter
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24957</link>
      <description>The Advanced Page Visit Counter WordPress plugin before 6.1.6 does not escape the artID parameter before using it in a SQL statement in the apvc_reset_count_art AJAX action, available to any authenticated user, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2021-24957|2024-08-03T19:49:14.418Z</guid>
      <pubDate>Mon, 25 Apr 2022 15:50:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24535|2024-08-03T19:35:20.179Z -- unknown -- light%20messages
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24535</link>
      <description>The Light Messages WordPress plugin through 1.0 is lacking CSRF check when updating it's settings, and is not sanitising its Message Content in them (even with the unfiltered_html disallowed). As a result, an attacker could make a logged in admin update the settings to arbitrary values, and set a Cross-Site Scripting payload in the Message Content. Depending on the options set, the XSS payload can be triggered either in the backend only (in the plugin's settings), or both frontend and backend.</description>
      <guid isPermaLink="false">CVE-2021-24535|2024-08-03T19:35:20.179Z</guid>
      <pubDate>Mon, 16 Aug 2021 10:48:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24795|2024-08-03T19:42:17.183Z -- unknown -- filter%20portfolio%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24795</link>
      <description>The Filter Portfolio Gallery WordPress plugin through 1.5 is lacking Cross-Site Request Forgery (CSRF) check when deleting a Gallery, which could allow attackers to make a logged in admin delete arbitrary Gallery.</description>
      <guid isPermaLink="false">CVE-2021-24795|2024-08-03T19:42:17.183Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:40:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3209|2024-08-03T01:00:10.808Z -- unknown -- soledad
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3209</link>
      <description>The soledad WordPress theme before 8.2.5 does not sanitise the {id,datafilter[type],...} parameters in its penci_more_slist_post_ajax AJAX action, leading to a Reflected Cross-Site Scripting (XSS) vulnerability.</description>
      <guid isPermaLink="false">CVE-2022-3209|2024-08-03T01:00:10.808Z</guid>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1556|2024-08-03T00:10:03.475Z -- unknown -- stafflist
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1556</link>
      <description>The StaffList WordPress plugin before 3.1.5 does not properly sanitise and escape a parameter before using it in a SQL statement when searching for Staff in the admin dashboard, leading to an SQL Injection</description>
      <guid isPermaLink="false">CVE-2022-1556|2024-08-03T00:10:03.475Z</guid>
      <pubDate>Mon, 30 May 2022 08:35:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3282|2024-08-03T01:07:06.479Z -- unknown -- drag%20and%20drop%20multiple%20file%20upload%20%E2%80%93%20contact%20form%207
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3282</link>
      <description>The Drag and Drop Multiple File Upload WordPress plugin before 1.3.6.5 does not properly check for the upload size limit set in forms, taking the value from user input sent when submitting the form. As a result, attackers could control the file length limit and bypass the limit set by admins in the contact form.</description>
      <guid isPermaLink="false">CVE-2022-3282|2024-08-03T01:07:06.479Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24939|2024-08-03T19:49:13.832Z -- unknown -- loginwp%20%28formerly%20peter%27s%20login%20redirect%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24939</link>
      <description>The LoginWP (Formerly Peter's Login Redirect) WordPress plugin before 3.0.0.5 does not sanitise and escape the rul_login_url and rul_logout_url parameter before outputting them back in attributes in an admin page, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24939|2024-08-03T19:49:13.832Z</guid>
      <pubDate>Mon, 06 Dec 2021 15:55:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3921|2024-08-03T01:20:59.118Z -- unknown -- listingo
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3921</link>
      <description>The Listingo WordPress theme before 3.2.7 does not validate files to be uploaded via an AJAX action available to unauthenticated users, which could allow them to upload arbitrary files and lead to RCE</description>
      <guid isPermaLink="false">CVE-2022-3921|2024-08-03T01:20:59.118Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:57:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-4334|2024-08-03T17:23:10.547Z -- unknown -- fancy%20product%20designer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-4334</link>
      <description>The Fancy Product Designer plugin for WordPress is vulnerable to unauthorized modification of site options due to a missing capability check on the fpd_update_options function in versions up to, and including, 4.6.9. This makes it possible for authenticated attackers with subscriber-level permissions to modify site options, including setting the default role to administrator which can allow privilege escalation.</description>
      <guid isPermaLink="false">CVE-2021-4334|2024-08-03T17:23:10.547Z</guid>
      <pubDate>Fri, 20 Oct 2023 07:29:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1614|2024-08-03T00:10:03.664Z -- unknown -- wp-email
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1614</link>
      <description>The WP-EMail WordPress plugin before 2.69.0 prioritizes getting a visitor's IP from certain HTTP headers over PHP's REMOTE_ADDR, which makes it possible to bypass IP-based anti-spamming restrictions.</description>
      <guid isPermaLink="false">CVE-2022-1614|2024-08-03T00:10:03.664Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:25:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4764|2024-08-03T01:48:40.421Z -- unknown -- simple%20file%20downloader
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4764</link>
      <description>The Simple File Downloader WordPress plugin through 1.0.4 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4764|2024-08-03T01:48:40.421Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1617|2024-08-03T00:10:03.762Z -- unknown -- wp-invoice
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1617</link>
      <description>The WP-Invoice WordPress plugin through 4.3.1 does not have CSRF check in place when updating its settings, and is lacking sanitisation as well as escaping in some of them, allowing attacker to make a logged in admin change them and add XSS payload in them</description>
      <guid isPermaLink="false">CVE-2022-1617|2024-08-03T00:10:03.762Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:52:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24781|2024-08-03T19:42:17.214Z -- unknown -- image%20source%20control
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24781</link>
      <description>The Image Source Control WordPress plugin before 2.3.1 allows users with a role as low as Contributor to change arbitrary post meta fields of arbitrary posts (even those they should not be able to edit)</description>
      <guid isPermaLink="false">CVE-2021-24781|2024-08-03T19:42:17.214Z</guid>
      <pubDate>Mon, 01 Nov 2021 08:46:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4226|2024-08-03T01:34:49.844Z -- unknown -- simple%20basic%20contact%20form
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4226</link>
      <description>The Simple Basic Contact Form WordPress plugin before 20221201 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4226|2024-08-03T01:34:49.844Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4309|2024-08-03T01:34:50.143Z -- unknown -- subscribe2
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4309</link>
      <description>The Subscribe2 WordPress plugin before 10.38 does not have CSRF check when deleting users, which could allow attackers to make a logged in admin delete arbitrary users by knowing their email via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2022-4309|2024-08-03T01:34:50.143Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3933|2024-08-03T01:27:53.029Z -- unknown -- essential%20real%20estate
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3933</link>
      <description>The Essential Real Estate WordPress plugin before 3.9.6 does not sanitize and escapes some parameters, which could allow users with a role as low as Admin to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-3933|2024-08-03T01:27:53.029Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24444|2024-08-03T19:28:23.965Z -- unknown -- taxopress%20%E2%80%93%20create%20and%20manage%20taxonomies%2C%20tags%2C%20categories
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24444</link>
      <description>The TaxoPress – Create and Manage Taxonomies, Tags, Categories WordPress plugin before 3.0.7.2 does not sanitise its Taxonomy description field, allowing high privilege users to set JavaScript payload in them even when the unfiltered_html capability is disallowed, leading to an authenticated Stored Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-24444|2024-08-03T19:28:23.965Z</guid>
      <pubDate>Mon, 02 Aug 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24538|2024-08-03T19:35:20.035Z -- unknown -- current%20book
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24538</link>
      <description>The Current Book WordPress plugin through 1.0.1 does not sanitize user input when an authenticated user adds Author or Book Title, then does not escape these values when outputting to the browser leading to an Authenticated Stored XSS Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-24538|2024-08-03T19:35:20.035Z</guid>
      <pubDate>Mon, 16 Aug 2021 10:48:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3021|2024-08-03T00:52:59.860Z -- unknown -- slickr%20flickr
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3021</link>
      <description>The Slickr Flickr WordPress plugin through 2.8.1 does not sanitise and escape its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-3021|2024-08-03T00:52:59.860Z</guid>
      <pubDate>Mon, 19 Sep 2022 14:01:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24285|2024-08-03T19:28:23.358Z -- unknown -- car%20seller%20-%20auto%20classifieds%20script
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24285</link>
      <description>The request_list_request AJAX call of the Car Seller - Auto Classifieds Script WordPress plugin through 2.1.0, available to both authenticated and unauthenticated users, does not sanitise, validate or escape the order_id POST parameter before using it in a SQL statement, leading to a SQL Injection issue.</description>
      <guid isPermaLink="false">CVE-2021-24285|2024-08-03T19:28:23.358Z</guid>
      <pubDate>Fri, 14 May 2021 11:38:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24703|2024-08-03T19:42:16.132Z -- unknown -- download%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24703</link>
      <description>The Download Plugin WordPress plugin before 1.6.1 does not have capability and CSRF checks in the dpwap_plugin_activate AJAX action, allowing any authenticated users, such as subscribers, to activate plugins that are already installed.</description>
      <guid isPermaLink="false">CVE-2021-24703|2024-08-03T19:42:16.132Z</guid>
      <pubDate>Tue, 23 Nov 2021 19:16:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24912|2024-08-03T19:49:13.475Z -- unknown -- transposh%20wordpress%20translation
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24912</link>
      <description>The Transposh WordPress Translation WordPress plugin before 1.0.8 does not have CSRF check in its tp_translation AJAX action, which could allow attackers to make authorised users add a translation. Given the lack of sanitisation in the tk0 parameter, this could lead to a Stored Cross-Site Scripting issue which will be executed in the context of a logged in admin</description>
      <guid isPermaLink="false">CVE-2021-24912|2024-08-03T19:49:13.475Z</guid>
      <pubDate>Mon, 22 Aug 2022 14:56:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2654|2024-08-03T00:46:03.475Z -- unknown -- classified%20listing%20%E2%80%93%20classified%20ads%20%26%20business%20directory%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2654</link>
      <description>The Classima WordPress theme before 2.1.11 and some of its required plugins (Classified Listing before 2.2.14, Classified Listing Pro before 2.0.20, Classified Listing Store &amp; Membership before 1.4.20 and Classima Core before 1.10) do not escape a parameter before outputting it back in attributes, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2654|2024-08-03T00:46:03.475Z</guid>
      <pubDate>Fri, 16 Sep 2022 08:40:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4158|2024-08-03T01:27:54.533Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4158</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the cg_Fields POST parameter before concatenating it to an SQL query in users-registry-check-registering-and-login.php. This may allow malicious visitors to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4158|2024-08-03T01:27:54.533Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25018|2024-08-03T19:49:14.554Z -- unknown -- ppom%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25018</link>
      <description>The PPOM for WooCommerce WordPress plugin before 24.0 does not have authorisation and CSRF checks in the ppom_settings_panel_action AJAX action, allowing any authenticated to call it and set arbitrary settings. Furthermore, due to the lack of sanitisation and escaping, it could lead to Stored XSS issues</description>
      <guid isPermaLink="false">CVE-2021-25018|2024-08-03T19:49:14.554Z</guid>
      <pubDate>Mon, 14 Feb 2022 09:20:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24938|2024-08-03T19:49:13.917Z -- unknown -- woocs%20%E2%80%93%20currency%20switcher%20for%20woocommerce.%20professional%20and%20free%20multi%20currency%20plugin%20%E2%80%93%20pay%20in%20selected%20currency
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24938</link>
      <description>The WOOCS WordPress plugin before 1.3.7.1 does not sanitise and escape the key parameter of the woocs_update_profiles_data AJAX action (available to any authenticated user) before outputting it back in the response, leading to a Reflected cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24938|2024-08-03T19:49:13.917Z</guid>
      <pubDate>Mon, 06 Dec 2021 15:55:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24518|2024-08-03T19:35:19.719Z -- unknown -- wpfront%20notification%20bar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24518</link>
      <description>The WPFront Notification Bar WordPress plugin before 2.0.0.07176 does not sanitise or escape its Custom CSS setting, allowing high privilege users such as admin to set XSS payload in it even when the unfiltered_html capability is disallowed, leading to an authenticated Stored Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24518|2024-08-03T19:35:19.719Z</guid>
      <pubDate>Mon, 16 Aug 2021 10:48:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24586|2024-08-03T19:35:20.192Z -- unknown -- per%20page%20add%20to%20head
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24586</link>
      <description>The Per page add to head WordPress plugin before 1.4.4 is lacking any CSRF check when saving its settings, which could allow attackers to make a logged in admin change them. Furthermore, as the plugin allows arbitrary HTML to be inserted in one of the setting (feature mentioned by the plugin), this could lead to Stored XSS issue which will be triggered either in the backend, frontend or both depending on the payload used.</description>
      <guid isPermaLink="false">CVE-2021-24586|2024-08-03T19:35:20.192Z</guid>
      <pubDate>Mon, 13 Sep 2021 17:56:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24584|2024-08-03T19:35:20.210Z -- unknown -- timetable%20and%20event%20schedule%20by%20motopress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24584</link>
      <description>The Timetable and Event Schedule WordPress plugin before 2.4.2 does not have proper access control when updating a timeslot, allowing any user with the edit_posts capability (contributor+) to update arbitrary timeslot from any events. Furthermore, no CSRF check is in place as well, allowing such attack to be perform via CSRF against a logged in with such capability. In versions before 2.3.19, the lack of sanitisation and escaping in some of the fields, like the descritption could also lead to Stored XSS issues</description>
      <guid isPermaLink="false">CVE-2021-24584|2024-08-03T19:35:20.210Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24157|2024-08-03T19:21:18.299Z -- unknown -- orbit%20fox%20by%20themeisle
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24157</link>
      <description>Orbit Fox by ThemeIsle has a feature to add custom scripts to the header and footer of a page or post. There were no checks to verify that a user had the unfiltered_html capability prior to saving the script tags, thus allowing lower-level users to inject scripts that could potentially be malicious.</description>
      <guid isPermaLink="false">CVE-2021-24157|2024-08-03T19:21:18.299Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3839|2024-08-03T01:20:58.796Z -- unknown -- analytics%20for%20wp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3839</link>
      <description>The Analytics for WP WordPress plugin through 1.5.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3839|2024-08-03T01:20:58.796Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2709|2024-08-03T00:46:03.629Z -- unknown -- float%20to%20top%20button
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2709</link>
      <description>The Float to Top Button WordPress plugin through 2.3.6 does not escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2709|2024-08-03T00:46:03.629Z</guid>
      <pubDate>Mon, 19 Sep 2022 14:00:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25105|2024-08-03T19:56:10.637Z -- unknown -- ivory%20search%20%E2%80%93%20wordpress%20search%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25105</link>
      <description>The Ivory Search WordPress plugin before 5.4.1 does not escape some of the Form settings, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-25105|2024-08-03T19:56:10.637Z</guid>
      <pubDate>Mon, 07 Feb 2022 15:47:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4356|2024-08-03T01:34:50.137Z -- unknown -- letsrecover
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4356</link>
      <description>The LetsRecover WordPress plugin before 1.2.0 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2022-4356|2024-08-03T01:34:50.137Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2638|2024-08-03T00:46:03.231Z -- unknown -- export%20all%20urls
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2638</link>
      <description>The Export All URLs WordPress plugin before 4.4 does not validate the path of the file to be removed on the system which is supposed to be the CSV file. This could allow high privilege users to delete arbitrary file from the server</description>
      <guid isPermaLink="false">CVE-2022-2638|2024-08-03T00:46:03.231Z</guid>
      <pubDate>Mon, 29 Aug 2022 17:15:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24776|2024-08-03T19:42:17.424Z -- unknown -- wp%20performance%20score%20booster%20%E2%80%93%20optimize%20speed%2C%20enable%20cache%20%26%20page%20preload
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24776</link>
      <description>The WP Performance Score Booster WordPress plugin before 2.1 does not have CSRF check when saving its settings, which could allow attackers to make a logged in admin change them via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2021-24776|2024-08-03T19:42:17.424Z</guid>
      <pubDate>Wed, 17 Nov 2021 10:15:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2460|2024-08-03T00:39:07.706Z -- unknown -- wpdating
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2460</link>
      <description>The WPDating WordPress plugin before 7.4.0 does not properly escape user input before concatenating it to certain SQL queries, leading to multiple SQL injection vulnerabilities exploitable by unauthenticated users</description>
      <guid isPermaLink="false">CVE-2022-2460|2024-08-03T00:39:07.706Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:51:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25120|2024-08-03T19:56:10.563Z -- unknown -- easy%20social%20feed%20pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25120</link>
      <description>The Easy Social Feed Free and Pro WordPress plugins before 6.2.7 do not sanitise some of their parameters used via AJAX actions before outputting them back in the response, leading to Reflected Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-25120|2024-08-03T19:56:10.563Z</guid>
      <pubDate>Mon, 18 Apr 2022 17:10:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4835|2024-08-03T01:55:45.831Z -- unknown -- social%20sharing%20toolkit
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4835</link>
      <description>The Social Sharing Toolkit WordPress plugin through 2.6 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4835|2024-08-03T01:55:45.831Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4653|2024-08-03T01:48:38.872Z -- unknown -- greenshift
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4653</link>
      <description>The Greenshift WordPress plugin before 4.8.9 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4653|2024-08-03T01:48:38.872Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24862|2024-08-03T19:49:13.521Z -- unknown -- registrationmagic%20%E2%80%93%20custom%20registration%20forms%2C%20user%20registration%20and%20user%20login%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24862</link>
      <description>The RegistrationMagic WordPress plugin before 5.0.1.6 does not escape user input in its rm_chronos_ajax AJAX action before using it in a SQL statement when duplicating tasks in batches, which could lead to a SQL injection issue</description>
      <guid isPermaLink="false">CVE-2021-24862|2024-08-03T19:49:13.521Z</guid>
      <pubDate>Mon, 10 Jan 2022 15:30:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4153|2024-08-03T01:27:54.477Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4153</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the upload[] POST parameter before concatenating it to an SQL query in get-data-create-upload-v10.php. This may allow malicious users with at least author privilege to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4153|2024-08-03T01:27:54.477Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:27:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2361|2024-08-03T00:32:09.618Z -- unknown -- wp%20social%20chat%20%E2%80%93%20click%20to%20chat%20app
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2361</link>
      <description>The WP Social Chat WordPress plugin before 6.0.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-2361|2024-08-03T00:32:09.618Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:01:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24370|2024-08-03T19:28:23.807Z -- unknown -- fancy%20product%20designer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24370</link>
      <description>The Fancy Product Designer WordPress plugin before 4.6.9 allows unauthenticated attackers to upload arbitrary files, resulting in remote code execution.</description>
      <guid isPermaLink="false">CVE-2021-24370|2024-08-03T19:28:23.807Z</guid>
      <pubDate>Mon, 21 Jun 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1589|2024-08-03T00:10:03.626Z -- unknown -- change%20wp-admin%20login
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1589</link>
      <description>The Change wp-admin login WordPress plugin before 1.1.0 does not properly check for authorisation and is also missing CSRF check when updating its settings, which could allow unauthenticated users to change the settings. The attacked could also be performed via a CSRF vector</description>
      <guid isPermaLink="false">CVE-2022-1589|2024-08-03T00:10:03.626Z</guid>
      <pubDate>Mon, 30 May 2022 08:36:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24478|2024-08-03T19:35:19.701Z -- unknown -- bookshelf
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24478</link>
      <description>The Bookshelf WordPress plugin through 2.0.4 does not sanitise or escape its "Paypal email address" setting before outputting it in the page, leading to an authenticated Stored Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24478|2024-08-03T19:35:19.701Z</guid>
      <pubDate>Mon, 02 Aug 2021 10:32:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3420|2024-08-03T01:07:06.587Z -- unknown -- official%20integration%20for%20billingo
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3420</link>
      <description>The Official Integration for Billingo WordPress plugin before 3.4.0 does not sanitise and escape some of its settings, which could allow high privilege users with a role as low as Shop Manager to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-3420|2024-08-03T01:07:06.587Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24880|2024-08-03T19:49:13.465Z -- unknown -- supportcandy%20%E2%80%93%20helpdesk%20%26%20support%20ticket%20system
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24880</link>
      <description>The SupportCandy WordPress plugin before 2.2.7 does not validate and escape the page attribute of its shortcode, which could allow users with a role as low as Contributor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2021-24880|2024-08-03T19:49:13.465Z</guid>
      <pubDate>Mon, 07 Feb 2022 15:47:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24804|2024-08-03T19:42:17.213Z -- unknown -- simple%20jwt%20login%20%E2%80%93%20login%20and%20register%20to%20wordpress%20using%20jwt
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24804</link>
      <description>The Simple JWT Login WordPress plugin before 3.2.1 does not have nonce checks when saving its settings, allowing attackers to make a logged in admin changed them. Settings such as HMAC verification secret, account registering and default user roles can be updated, which could result in site takeover.</description>
      <guid isPermaLink="false">CVE-2021-24804|2024-08-03T19:42:17.213Z</guid>
      <pubDate>Wed, 17 Nov 2021 10:15:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4781|2024-08-03T01:48:40.315Z -- unknown -- accordion%20shortcodes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4781</link>
      <description>The Accordion Shortcodes WordPress plugin through 2.4.2 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4781|2024-08-03T01:48:40.315Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24500|2024-08-03T19:35:19.928Z -- unknown -- workreap
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24500</link>
      <description>Several AJAX actions available in the Workreap WordPress theme before 2.2.2 lacked CSRF protections, as well as allowing insecure direct object references that were not validated. This allows an attacker to trick a logged in user to submit a POST request to the vulnerable site, potentially modifying or deleting arbitrary objects on the target site.</description>
      <guid isPermaLink="false">CVE-2021-24500|2024-08-03T19:35:19.928Z</guid>
      <pubDate>Mon, 09 Aug 2021 10:04:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2240|2024-08-03T00:32:09.260Z -- unknown -- request%20a%20quote
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2240</link>
      <description>The Request a Quote WordPress plugin through 2.3.7 does not validate uploaded CSV files, allowing unauthenticated users to attach a malicious CSV file to a quote, which could lead to a CSV injection once an admin download and open it</description>
      <guid isPermaLink="false">CVE-2022-2240|2024-08-03T00:32:09.260Z</guid>
      <pubDate>Mon, 25 Jul 2022 12:47:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2241|2024-08-03T00:32:09.268Z -- unknown -- featured%20image%20from%20url%20%28fifu%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2241</link>
      <description>The Featured Image from URL (FIFU) WordPress plugin before 4.0.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack. Furthermore, due to the lack of validation, sanitisation and escaping in some of them, it could also lead to Stored XSS issues</description>
      <guid isPermaLink="false">CVE-2022-2241|2024-08-03T00:32:09.268Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:50:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2089|2024-08-03T00:24:44.232Z -- unknown -- bold%20page%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2089</link>
      <description>The Bold Page Builder WordPress plugin before 4.3.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2089|2024-08-03T00:24:44.232Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:57:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4156|2024-08-03T01:27:54.540Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4156</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the user_id POST parameter before concatenating it to an SQL query in ajax-functions-backend.php. This may allow malicious users with at least author privilege to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4156|2024-08-03T01:27:54.540Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24587|2024-08-03T19:35:20.318Z -- unknown -- splash%20header
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24587</link>
      <description>The Splash Header WordPress plugin before 1.20.8 doesn't sanitise and escape some of its settings while outputting them in the admin dashboard, leading to an authenticated Stored Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-24587|2024-08-03T19:35:20.318Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4097|2024-08-03T01:27:54.385Z -- unknown -- all-in-one%20security%20%28aios%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4097</link>
      <description>The All-In-One Security (AIOS) WordPress plugin before 5.0.8 is susceptible to IP Spoofing attacks, which can lead to bypassed security features (like IP blocks, rate limiting, brute force protection, and more).</description>
      <guid isPermaLink="false">CVE-2022-4097|2024-08-03T01:27:54.385Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24758|2024-08-03T19:42:16.879Z -- unknown -- email%20log
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24758</link>
      <description>The Email Log WordPress plugin before 2.4.7 does not properly validate, sanitise and escape the "orderby" and "order" GET parameters before using them in SQL statement in the admin dashboard, leading to SQL injections</description>
      <guid isPermaLink="false">CVE-2021-24758|2024-08-03T19:42:16.879Z</guid>
      <pubDate>Wed, 17 Nov 2021 10:15:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24174|2024-08-03T19:21:18.712Z -- unknown -- database%20backups
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24174</link>
      <description>The Database Backups WordPress plugin through 1.2.2.6 does not have CSRF checks, allowing attackers to make a logged in user unwanted actions, such as generate backups of the database, change the plugin's settings and delete backups.</description>
      <guid isPermaLink="false">CVE-2021-24174|2024-08-03T19:21:18.712Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2426|2024-08-03T00:39:07.036Z -- unknown -- thinkific%20uploader
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2426</link>
      <description>The Thinkific Uploader WordPress plugin through 1.0.0 does not sanitise and escape its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks against other administrators.</description>
      <guid isPermaLink="false">CVE-2022-2426|2024-08-03T00:39:07.036Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:51:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4114|2024-08-03T01:27:54.443Z -- unknown -- superio
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4114</link>
      <description>The Superio WordPress theme does not sanitise and escape some parameters, which could allow users with a role as low as a subscriber to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-4114|2024-08-03T01:27:54.443Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24196|2024-08-03T19:21:18.781Z -- unknown -- social%20slider%20widget
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24196</link>
      <description>The Social Slider Widget WordPress plugin before 1.8.5 allowed Authenticated Reflected XSS in the plugin settings page as the ‘token_error’ parameter can be controlled by users and it is directly echoed without being sanitized</description>
      <guid isPermaLink="false">CVE-2021-24196|2024-08-03T19:21:18.781Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24941|2024-08-03T19:49:13.877Z -- unknown -- popups%2C%20welcome%20bar%2C%20optins%20and%20lead%20generation%20plugin%20%E2%80%93%20icegram
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24941</link>
      <description>The Popups, Welcome Bar, Optins and Lead Generation Plugin WordPress plugin before 2.0.5 does not sanitise and escape the message_id parameter of the get_message_action_row AJAX action before outputting it back in an attribute, leading to a reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24941|2024-08-03T19:49:13.877Z</guid>
      <pubDate>Tue, 21 Dec 2021 08:45:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24415|2024-08-03T19:28:24.017Z -- unknown -- polo%20video%20gallery%20%E2%80%93%20best%20wordpress%20video%20gallery%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24415</link>
      <description>The Polo Video Gallery – Best wordpress video gallery plugin WordPress plugin through 1.2 does not sanitise or validate the parameters from its shortcode, allowing users with a role as low as contributor to set Cross-Site Scripting payload in them which will be triggered in the page/s with the embed malicious shortcode</description>
      <guid isPermaLink="false">CVE-2021-24415|2024-08-03T19:28:24.017Z</guid>
      <pubDate>Mon, 18 Oct 2021 13:45:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24660|2024-08-03T19:35:20.414Z -- unknown -- postx%20%E2%80%93%20gutenberg%20blocks%20for%20post%20grid
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24660</link>
      <description>The PostX – Gutenberg Blocks for Post Grid WordPress plugin before 2.4.10, with Saved Templates Addon enabled, allows users with a role as low as Contributor to perform Stored Cross-Site Scripting attacks via the plugin's shortcode.</description>
      <guid isPermaLink="false">CVE-2021-24660|2024-08-03T19:35:20.414Z</guid>
      <pubDate>Mon, 27 Sep 2021 15:25:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24147|2024-08-03T19:21:18.252Z -- unknown -- modern%20events%20calendar%20lite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24147</link>
      <description>Unvalidated input and lack of output encoding in the Modern Events Calendar Lite WordPress plugin, versions before 5.16.5, did not sanitise the mic_comment field (Notes on time) when adding/editing an event, allowing users with privilege as low as author to add events with a Cross-Site Scripting payload in them, which will be triggered in the frontend when viewing the event.</description>
      <guid isPermaLink="false">CVE-2021-24147|2024-08-03T19:21:18.252Z</guid>
      <pubDate>Thu, 18 Mar 2021 14:57:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3987|2024-08-03T01:27:54.167Z -- unknown -- responsive%20lightbox2
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3987</link>
      <description>The Responsive Lightbox2 WordPress plugin before 1.0.4 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-3987|2024-08-03T01:27:54.167Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25116|2024-08-03T19:56:10.649Z -- unknown -- enqueue%20anything
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25116</link>
      <description>The Enqueue Anything WordPress plugin through 1.0.1 does not have authorisation and CSRF checks in the remove_asset AJAX action, and does not ensure that the item to be deleted is actually an asset. As a result, low privilege users such as subscriber could delete arbitrary assets, as well as put arbitrary posts in the trash.</description>
      <guid isPermaLink="false">CVE-2021-25116|2024-08-03T19:56:10.649Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:41:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24324|2024-08-03T19:28:23.398Z -- unknown -- 404%20seo%20redirection
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24324</link>
      <description>The 404 SEO Redirection WordPress plugin through 1.3 is lacking CSRF checks in all its settings, allowing attackers to make a logged in user change the plugin's settings. Due to the lack of sanitisation and escaping in some fields, it could also lead to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-24324|2024-08-03T19:28:23.398Z</guid>
      <pubDate>Mon, 17 May 2021 16:48:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3300|2024-08-03T01:07:06.454Z -- unknown -- form%20maker%20by%2010web%20%E2%80%93%20mobile-friendly%20drag%20%26%20drop%20contact%20form%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3300</link>
      <description>The Form Maker by 10Web WordPress plugin before 1.15.6 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2022-3300|2024-08-03T01:07:06.454Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24130|2024-08-03T19:21:18.661Z -- unknown -- wp%20google%20map%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24130</link>
      <description>Unvalidated input in the WP Google Map Plugin WordPress plugin, versions before 4.1.5, in the Manage Locations page within the plugin settings was vulnerable to SQL Injection through a high privileged user (admin+).</description>
      <guid isPermaLink="false">CVE-2021-24130|2024-08-03T19:21:18.661Z</guid>
      <pubDate>Thu, 18 Mar 2021 14:57:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2144|2024-08-03T00:24:44.277Z -- unknown -- jquery%20validation%20for%20contact%20form%207
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2144</link>
      <description>The Jquery Validation For Contact Form 7 WordPress plugin before 5.3 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change Blog options like default_role, users_can_register via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-2144|2024-08-03T00:24:44.277Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:36:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1598|2024-08-03T00:10:03.660Z -- unknown -- wpqa%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1598</link>
      <description>The WPQA Builder WordPress plugin before 5.5 which is a companion to the Discy and Himer , lacks authentication in a REST API endpoint, allowing unauthenticated users to discover private questions sent between users on the site.</description>
      <guid isPermaLink="false">CVE-2022-1598|2024-08-03T00:10:03.660Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24201|2024-08-03T19:21:18.669Z -- unknown -- elementor%20website%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24201</link>
      <description>In the Elementor Website Builder WordPress plugin before 3.1.4, the column element (includes/elements/column.php) accepts an ‘html_tag’ parameter. Although the element control lists a fixed set of possible html tags, it is possible for a user with Contributor or above permissions to send a modified ‘save_builder’ request containing JavaScript in the ‘html_tag’ parameter, which is not filtered and is output without escaping. This JavaScript will then be executed when the saved page is viewed or previewed.</description>
      <guid isPermaLink="false">CVE-2021-24201|2024-08-03T19:21:18.669Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4374|2024-08-03T01:41:44.352Z -- unknown -- bg%20bible%20references
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4374</link>
      <description>The Bg Bible References WordPress plugin through 3.8.14 does not sanitize and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2022-4374|2024-08-03T01:41:44.352Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4157|2024-08-03T01:27:54.526Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4157</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the cg_option_id POST parameter before concatenating it to an SQL query in export-votes-all.php. This may allow malicious users with administrator privileges (i.e. on multisite WordPress configurations) to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4157|2024-08-03T01:27:54.526Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:27:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24756|2024-08-03T19:42:16.815Z -- unknown -- wp%20system%20log
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24756</link>
      <description>The WP System Log WordPress plugin before 1.0.21 does not sanitise, validate and escape the IP address retrieved from login requests before outputting them in the admin dashboard, which could allow unauthenticated attacker to perform Cross-Site Scripting attacks against admins viewing the logs.</description>
      <guid isPermaLink="false">CVE-2021-24756|2024-08-03T19:42:16.815Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:40:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3243|2024-08-03T01:00:10.864Z -- unknown -- import%20all%20xml%2C%20csv%20%26%20txt%20into%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3243</link>
      <description>The Import all XML, CSV &amp; TXT WordPress plugin before 6.5.8 does not properly sanitise and escape imported data before using them back SQL statements, leading to SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2022-3243|2024-08-03T01:00:10.864Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24217|2024-08-03T19:21:18.798Z -- unknown -- facebook%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24217</link>
      <description>The run_action function of the Facebook for WordPress plugin before 3.0.0 deserializes user supplied data making it possible for PHP objects to be supplied creating an Object Injection vulnerability. There was also a useable magic method in the plugin that could be used to achieve remote code execution.</description>
      <guid isPermaLink="false">CVE-2021-24217|2024-08-03T19:21:18.798Z</guid>
      <pubDate>Mon, 12 Apr 2021 14:01:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24143|2024-08-03T19:21:18.374Z -- unknown -- accesspress%20social%20icons
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24143</link>
      <description>Unvalidated input in the AccessPress Social Icons plugin, versions before 1.8.1, did not sanitise its widget attribute, allowing accounts with post permission, such as author, to perform SQL injections.</description>
      <guid isPermaLink="false">CVE-2021-24143|2024-08-03T19:21:18.374Z</guid>
      <pubDate>Thu, 18 Mar 2021 14:57:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1541|2024-08-03T00:10:02.951Z -- unknown -- video%20slider%20%E2%80%93%20slider%20carousel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1541</link>
      <description>The Video Slider WordPress plugin before 1.4.8 does not sanitize or escape some of its video settings, which could allow high-privileged users to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1541|2024-08-03T00:10:02.951Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1597|2024-08-03T00:10:03.533Z -- unknown -- wpqa%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1597</link>
      <description>The WPQA Builder WordPress plugin before 5.4, used as a companion for the Discy and Himer , does not sanitise and escape a parameter on its reset password form which makes it possible to perform Reflected Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-1597|2024-08-03T00:10:03.533Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24818|2024-08-03T19:42:17.201Z -- unknown -- wp%20limits
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24818</link>
      <description>The WP Limits WordPress plugin through 1.0 does not have CSRF check when saving its settings, allowing attacker to make a logged in admin change them, which could make the blog unstable by setting low values</description>
      <guid isPermaLink="false">CVE-2021-24818|2024-08-03T19:42:17.201Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:41:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4481|2024-08-03T01:41:44.704Z -- unknown -- mesmerize%20companion
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4481</link>
      <description>The Mesmerize Companion WordPress plugin before 1.6.135 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4481|2024-08-03T01:41:44.704Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24674|2024-08-03T19:42:16.064Z -- unknown -- genie%20wp%20favicon
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24674</link>
      <description>The Genie WP Favicon WordPress plugin through 0.5.2 does not have CSRF in place when updating the favicon, which could allow attackers to make a logged in admin change it via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2021-24674|2024-08-03T19:42:16.064Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:35:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24733|2024-08-03T19:42:16.560Z -- unknown -- wp%20post%20page%20clone
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24733</link>
      <description>The WP Post Page Clone WordPress plugin before 1.2 allows users with a role as low as Contributor to clone and view other users' draft and password-protected posts which they cannot view normally.</description>
      <guid isPermaLink="false">CVE-2021-24733|2024-08-03T19:42:16.560Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:00:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3360|2024-08-03T01:07:06.555Z -- unknown -- learnpress%20%E2%80%93%20wordpress%20lms%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3360</link>
      <description>The LearnPress WordPress plugin before 4.1.7.2 unserialises user input in a REST API endpoint available to unauthenticated users, which could lead to PHP Object Injection when a suitable gadget is present, leadint to remote code execution (RCE). To successfully exploit this vulnerability attackers must have knowledge of the site secrets, allowing them to generate a valid hash via the wp_hash() function.</description>
      <guid isPermaLink="false">CVE-2022-3360|2024-08-03T01:07:06.555Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25048|2024-08-03T19:49:14.560Z -- unknown -- page%20builder%3A%20kingcomposer%20%E2%80%93%20free%20drag%20and%20drop%20page%20builder%20by%20king-theme
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25048</link>
      <description>The KingComposer WordPress plugin through 2.9.6 does not have authorisation, CSRF and sanitisation/escaping when creating profile, allowing any authenticated users to create arbitrary ones, with Cross-Site Scripting payloads in them</description>
      <guid isPermaLink="false">CVE-2021-25048|2024-08-03T19:49:14.560Z</guid>
      <pubDate>Mon, 04 Apr 2022 15:35:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24401|2024-08-03T19:28:24.002Z -- unknown -- wp%20domain%20redirect
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24401</link>
      <description>The Edit domain functionality in the WP Domain Redirect WordPress plugin through 1.0 has an `editid` parameter which is not sanitised, escaped or validated before inserting to a SQL statement, leading to SQL injection.</description>
      <guid isPermaLink="false">CVE-2021-24401|2024-08-03T19:28:24.002Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24359|2024-08-03T19:28:23.838Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24359</link>
      <description>The Plus Addons for Elementor Page Builder WordPress plugin before 4.1.11 did not properly check that a user requesting a password reset was the legitimate user, allowing an attacker to send an arbitrary reset password email to a registered user on behalf of the WordPress site. Such issue could be chained with an open redirect (CVE-2021-24358) in version below 4.1.10, to include a crafted password reset link in the email, which would lead to an account takeover.</description>
      <guid isPermaLink="false">CVE-2021-24359|2024-08-03T19:28:23.838Z</guid>
      <pubDate>Mon, 14 Jun 2021 13:37:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25121|2024-08-03T19:56:09.993Z -- unknown -- rating%20by%20bestwebsoft
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25121</link>
      <description>The Rating by BestWebSoft WordPress plugin before 1.6 does not validate the submitted rating, allowing submission of long integer, causing a Denial of Service on the post/page when a user submit such rating</description>
      <guid isPermaLink="false">CVE-2021-25121|2024-08-03T19:56:09.993Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:25:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1559|2024-08-03T00:10:03.423Z -- unknown -- clipr
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1559</link>
      <description>The Clipr WordPress plugin through 1.2.3 does not sanitise and escape its API Key settings before outputting it in an attribute, leading to a Stored Cross-Site Scripting issue even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1559|2024-08-03T00:10:03.423Z</guid>
      <pubDate>Mon, 16 May 2022 14:31:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24397|2024-08-03T19:28:23.912Z -- unknown -- microcopy
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24397</link>
      <description>The edit functionality in the MicroCopy WordPress plugin through 1.1.0 makes a get request to fetch the related option. The id parameter used is not sanitised, escaped or validated before inserting to a SQL statement, leading to SQL injection.</description>
      <guid isPermaLink="false">CVE-2021-24397|2024-08-03T19:28:23.912Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1759|2024-08-03T00:16:59.833Z -- unknown -- rb%20internal%20links
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1759</link>
      <description>The RB Internal Links WordPress plugin through 2.0.16 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack, as well as perform Stored Cross-Site Scripting attacks due to the lack of sanitisation and escaping</description>
      <guid isPermaLink="false">CVE-2022-1759|2024-08-03T00:16:59.833Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24865|2024-08-03T19:49:12.651Z -- unknown -- advanced%20custom%20fields%3A%20extended
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24865</link>
      <description>The Advanced Custom Fields: Extended WordPress plugin before 0.8.8.7 does not validate the order and orderby parameters before using them in a SQL statement, leading to a SQL Injection issue</description>
      <guid isPermaLink="false">CVE-2021-24865|2024-08-03T19:49:12.651Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:00:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24604|2024-08-03T19:35:20.314Z -- unknown -- availability%20calendar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24604</link>
      <description>The Availability Calendar WordPress plugin before 1.2.2 does not sanitise or escape its Category Names before outputting them in page/post where the associated shortcode is embed, allowing high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24604|2024-08-03T19:35:20.314Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4352|2024-08-03T01:34:50.159Z -- unknown -- qe%20seo%20handyman
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4352</link>
      <description>The Qe SEO Handyman WordPress plugin through 1.0 does not properly sanitize and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2022-4352|2024-08-03T01:34:50.159Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4010|2024-08-03T01:27:54.128Z -- unknown -- image%20hover%20effects
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4010</link>
      <description>The Image Hover Effects WordPress plugin before 5.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4010|2024-08-03T01:27:54.128Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25011|2024-08-03T19:49:14.559Z -- unknown -- maps%20plugin%20using%20google%20maps%20for%20wordpress%20%E2%80%93%20wp%20google%20map
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25011</link>
      <description>The Maps Plugin using Google Maps for WordPress plugin before 1.8.1 does not have proper authorisation and CSRF in most of its AJAX actions, which could allow any authenticated users, such as subscriber to delete arbitrary posts and update the plugin's settings.</description>
      <guid isPermaLink="false">CVE-2021-25011|2024-08-03T19:49:14.559Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24680|2024-08-03T19:42:16.108Z -- unknown -- wp%20travel%20engine%20%E2%80%93%20travel%20and%20tour%20booking%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24680</link>
      <description>The WP Travel Engine WordPress plugin before 5.3.1 does not escape the Description field in the Trip Destination/Activities/Trip Type and Pricing Category pages, allowing users with a role as low as editor to perform Stored Cross-Site Scripting attacks, even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24680|2024-08-03T19:42:16.108Z</guid>
      <pubDate>Mon, 03 Jan 2022 12:49:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3425|2024-08-03T01:07:06.568Z -- unknown -- analyticator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3425</link>
      <description>The Analyticator WordPress plugin before 6.5.6 unserializes user input provided via the settings, which could allow high-privilege users such as admin to perform PHP Object Injection when a suitable gadget is present.</description>
      <guid isPermaLink="false">CVE-2022-3425|2024-08-03T01:07:06.568Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4476|2024-08-03T01:41:45.000Z -- unknown -- download%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4476</link>
      <description>The Download Manager WordPress plugin before 3.2.62 does not validate and escapes some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as a contributor to perform Stored Cross-Site Scripting attacks against logged-in admins.</description>
      <guid isPermaLink="false">CVE-2022-4476|2024-08-03T01:41:45.000Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24624|2024-08-03T19:35:20.275Z -- unknown -- mp3%20audio%20player%20for%20music%2C%20radio%20%26%20podcast%20by%20sonaar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24624</link>
      <description>The MP3 Audio Player for Music, Radio &amp; Podcast by Sonaar WordPress plugin before 2.4.2 does not properly sanitize or escape data in some of its Playlist settings, allowing high privilege users to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2021-24624|2024-08-03T19:35:20.275Z</guid>
      <pubDate>Mon, 01 Nov 2021 08:46:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24609|2024-08-03T19:35:20.211Z -- unknown -- wp%20mapa%20politico%20espa%C3%B1a
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24609</link>
      <description>The WP Mapa Politico Espana WordPress plugin before 3.7.0 does not sanitise or escape some of its settings before outputting them in attributes, allowing high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24609|2024-08-03T19:35:20.211Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25029|2024-08-03T19:49:14.629Z -- unknown -- cluevo%20lms%2C%20e-learning%20platform
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25029</link>
      <description>The CLUEVO LMS, E-Learning Platform WordPress plugin before 1.8.1 does not sanitise and escape Course's module, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-25029|2024-08-03T19:49:14.629Z</guid>
      <pubDate>Mon, 07 Feb 2022 15:47:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24453|2024-08-03T19:28:24.044Z -- unknown -- include%20me
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24453</link>
      <description>The Include Me WordPress plugin through 1.2.1 is vulnerable to path traversal / local file inclusion, which can lead to Remote Code Execution (RCE) of the system due to log poisoning and therefore potentially a full compromise of the underlying structure</description>
      <guid isPermaLink="false">CVE-2021-24453|2024-08-03T19:28:24.044Z</guid>
      <pubDate>Mon, 19 Jul 2021 10:53:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2543|2024-08-03T00:39:07.976Z -- unknown -- visual%20portfolio%2C%20photo%20gallery%20%26%20post%20grid
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2543</link>
      <description>The Visual Portfolio, Photo Gallery &amp; Post Grid WordPress plugin before 2.18.0 does not have proper authorisation checks in some of its REST endpoints, allowing unauthenticated users to call them and inject arbitrary CSS in arbitrary saved layouts</description>
      <guid isPermaLink="false">CVE-2022-2543|2024-08-03T00:39:07.976Z</guid>
      <pubDate>Mon, 05 Sep 2022 12:35:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4370|2024-08-03T01:34:50.125Z -- unknown -- multimedial%20images
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4370</link>
      <description>The multimedial images WordPress plugin through 1.0b does not properly sanitize and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as Admin.</description>
      <guid isPermaLink="false">CVE-2022-4370|2024-08-03T01:34:50.125Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24531|2024-08-03T19:35:20.133Z -- unknown -- charitable%20%E2%80%93%20donation%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24531</link>
      <description>The Charitable – Donation Plugin WordPress plugin before 1.6.51 is affected by an authenticated stored cross-site scripting vulnerability which was found in the add donation feature.</description>
      <guid isPermaLink="false">CVE-2021-24531|2024-08-03T19:35:20.133Z</guid>
      <pubDate>Mon, 23 Aug 2021 11:10:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2383|2024-08-03T00:39:06.347Z -- unknown -- feed%20them%20social%20%E2%80%93%20for%20twitter%20feed%2C%20youtube%20and%20more
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2383</link>
      <description>The Feed Them Social WordPress plugin before 3.0.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2383|2024-08-03T00:39:06.347Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:02:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24796|2024-08-03T19:42:17.335Z -- unknown -- my%20tickets
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24796</link>
      <description>The My Tickets WordPress plugin before 1.8.31 does not properly sanitise and escape the Email field of booked tickets before outputting it in the Payment admin dashboard, which could allow unauthenticated users to perform Cross-Site Scripting attacks against admins</description>
      <guid isPermaLink="false">CVE-2021-24796|2024-08-03T19:42:17.335Z</guid>
      <pubDate>Wed, 17 Nov 2021 10:15:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24863|2024-08-03T19:49:12.639Z -- unknown -- wp%20block%20and%20stop%20bad%20bots%20crawlers%20and%20spiders%20and%20anti%20spam%20protection%20plugin%20stopbadbots
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24863</link>
      <description>The WP Block and Stop Bad Bots Crawlers and Spiders and Anti Spam Protection Plugin StopBadBots WordPress plugin before 6.67 does not sanitise and escape the User Agent before using it in a SQL statement to save it, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2021-24863|2024-08-03T19:49:12.639Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:41:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3834|2024-08-03T01:20:58.477Z -- unknown -- google%20forms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3834</link>
      <description>The Google Forms WordPress plugin through 0.95 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3834|2024-08-03T01:20:58.477Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1787|2024-08-03T00:16:59.877Z -- unknown -- sideblog%20wordpress%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1787</link>
      <description>The Sideblog WordPress plugin through 6.0 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping</description>
      <guid isPermaLink="false">CVE-2022-1787|2024-08-03T00:16:59.877Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1686|2024-08-03T00:10:03.913Z -- unknown -- five%20minute%20webshop
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1686</link>
      <description>The Five Minute Webshop WordPress plugin through 1.3.2 does not sanitise and escape the id parameter before using it in a SQL statement when editing a product via the admin dashboard, leading to an SQL Injection</description>
      <guid isPermaLink="false">CVE-2022-1686|2024-08-03T00:10:03.913Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24608|2024-08-03T19:35:20.214Z -- unknown -- formidable%20form%20builder%20%E2%80%93%20contact%20form%2C%20survey%20%26%20quiz%20forms%20plugin%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24608</link>
      <description>The Formidable Form Builder – Contact Form, Survey &amp; Quiz Forms Plugin for WordPress plugin before 5.0.07 does not sanitise and escape its Form's Labels, allowing high privileged users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24608|2024-08-03T19:35:20.214Z</guid>
      <pubDate>Mon, 25 Oct 2021 13:20:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25020|2024-08-03T19:49:14.597Z -- unknown -- caos%20%7C%20host%20google%20analytics%20locally
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25020</link>
      <description>The CAOS | Host Google Analytics Locally WordPress plugin before 4.1.9 does not validate the cache directory setting, allowing high privilege users to use a path traversal vector and delete arbitrary folders when uninstalling the plugin</description>
      <guid isPermaLink="false">CVE-2021-25020|2024-08-03T19:49:14.597Z</guid>
      <pubDate>Mon, 03 Jan 2022 12:49:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25081|2024-08-03T19:56:10.996Z -- unknown -- maps%20plugin%20using%20google%20maps%20for%20wordpress%20%E2%80%93%20wp%20google%20map
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25081</link>
      <description>The Maps Plugin using Google Maps for WordPress plugin before 1.8.4 does not have CSRF checks in most of its AJAX actions, which could allow attackers to make logged in admins delete arbitrary posts and update the plugin's settings via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2021-25081|2024-08-03T19:56:10.996Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3119|2024-08-03T01:00:10.532Z -- unknown -- oauth%20client%20single%20sign%20on%20for%20wordpress%20%28%20oauth%202.0%20sso%20%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3119</link>
      <description>The OAuth client Single Sign On WordPress plugin before 3.0.4 does not have authorisation and CSRF when updating its settings, which could allow unauthenticated attackers to update them and change the OAuth endpoints to ones they controls, allowing them to then be authenticated as admin if they know the correct email address</description>
      <guid isPermaLink="false">CVE-2022-3119|2024-08-03T01:00:10.532Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3605|2024-08-03T01:14:02.026Z -- unknown -- wp%20csv%20exporter
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3605</link>
      <description>The WP CSV Exporter WordPress plugin before 1.3.7 does not properly escape the fields when exporting data as CSV, leading to a CSV injection vulnerability.</description>
      <guid isPermaLink="false">CVE-2022-3605|2024-08-03T01:14:02.026Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24642|2024-08-03T19:35:20.367Z -- unknown -- scroll%20baner
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24642</link>
      <description>The Scroll Baner WordPress plugin through 1.0 does not have CSRF check in place when saving its settings, nor perform any sanitisation, escaping or validation on them. This could allow attackers to make logged in admin change them and could lead to RCE (via a file upload) as well as XSS</description>
      <guid isPermaLink="false">CVE-2021-24642|2024-08-03T19:35:20.367Z</guid>
      <pubDate>Mon, 18 Oct 2021 13:45:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3739|2024-08-03T01:20:57.523Z -- unknown -- wp%20best%20quiz
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3739</link>
      <description>The WP Best Quiz WordPress plugin through 1.0 does not sanitize and escape some parameters, which could allow users with a role as low as Author to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-3739|2024-08-03T01:20:57.523Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:53:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24231|2024-08-03T19:21:18.660Z -- unknown -- patreon%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24231</link>
      <description>The Jetpack Scan team identified a Cross-Site Request Forgery vulnerability in the Patreon WordPress plugin before 1.7.0, allowing attackers to make a logged administrator disconnect the site from Patreon by visiting a specially crafted link.</description>
      <guid isPermaLink="false">CVE-2021-24231|2024-08-03T19:21:18.660Z</guid>
      <pubDate>Mon, 12 Apr 2021 14:06:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1691|2024-08-03T00:10:03.803Z -- unknown -- realty%20workstation
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1691</link>
      <description>The Realty Workstation WordPress plugin before 1.0.15 does not sanitise and escape the trans_edit parameter before using it in a SQL statement when an agent edit a transaction, leading to an SQL injection</description>
      <guid isPermaLink="false">CVE-2022-1691|2024-08-03T00:10:03.803Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24651|2024-08-03T19:35:20.416Z -- unknown -- poll%20maker
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24651</link>
      <description>The Poll Maker WordPress plugin before 3.4.2 allows unauthenticated users to perform SQL injection via the ays_finish_poll AJAX action. While the result is not disclosed in the response, it is possible to use a timing attack to exfiltrate data such as password hash.</description>
      <guid isPermaLink="false">CVE-2021-24651|2024-08-03T19:35:20.416Z</guid>
      <pubDate>Mon, 11 Oct 2021 10:45:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4449|2024-08-03T01:41:44.457Z -- unknown -- page%20scroll%20to%20id
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4449</link>
      <description>The Page scroll to id WordPress plugin before 1.7.6 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4449|2024-08-03T01:41:44.457Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4298|2024-08-03T01:34:50.063Z -- unknown -- wholesale%20market
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4298</link>
      <description>The Wholesale Market WordPress plugin before 2.2.1 does not have authorisation check, as well as does not validate user input used to generate system path, allowing unauthenticated attackers to download arbitrary file from the server.</description>
      <guid isPermaLink="false">CVE-2022-4298|2024-08-03T01:34:50.063Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3853|2024-08-03T01:20:58.385Z -- unknown -- supra%20csv
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3853</link>
      <description>Cross-site Scripting (XSS) is a client-side code injection attack. The attacker aims to execute malicious scripts in a web browser of the victim by including malicious code in a legitimate web page or web application.</description>
      <guid isPermaLink="false">CVE-2022-3853|2024-08-03T01:20:58.385Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25024|2024-08-03T19:49:14.665Z -- unknown -- eventcalendar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25024</link>
      <description>The EventCalendar WordPress plugin before 1.1.51 does not escape some user input before outputting it back in attributes, leading to Reflected Cross-SIte Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-25024|2024-08-03T19:49:14.665Z</guid>
      <pubDate>Mon, 17 Jan 2022 13:00:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4547|2024-08-03T01:41:45.616Z -- unknown -- conditional%20payment%20methods%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4547</link>
      <description>The Conditional Payment Methods for WooCommerce WordPress plugin through 1.0 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by [high privilege users such as admin|users with a role as low as admin.</description>
      <guid isPermaLink="false">CVE-2022-4547|2024-08-03T01:41:45.616Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2222|2024-08-03T00:32:08.748Z -- unknown -- download%20monitor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2222</link>
      <description>The Download Monitor WordPress plugin before 4.5.91 does not ensure that files to be downloaded are inside the blog folders, and not sensitive, allowing high privilege users such as admin to download the wp-config.php or /etc/passwd even in an hardened environment or multisite setup.</description>
      <guid isPermaLink="false">CVE-2022-2222|2024-08-03T00:32:08.748Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:37:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24544|2024-08-03T19:35:20.162Z -- unknown -- responsive%20wordpress%20slider
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24544</link>
      <description>The Responsive WordPress Slider WordPress plugin through 2.2.0 does not sanitise and escape some of the Slider options, allowing Cross-Site Scripting payloads to be set in them. Furthermore, as by default any authenticated user is allowed to create Sliders (https://wordpress.org/support/topic/slider-can-be-changed-from-any-user-even-subscriber/, such settings can be changed in the plugin's settings), this would allow user with a role as low as subscriber to perform Cross-Site Scripting attacks against logged in admins viewing the slider list and could lead to privilege escalation by creating a rogue admin account for example.</description>
      <guid isPermaLink="false">CVE-2021-24544|2024-08-03T19:35:20.162Z</guid>
      <pubDate>Mon, 25 Oct 2021 13:20:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4043|2024-08-03T01:27:54.012Z -- unknown -- wp%20custom%20admin%20interface
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4043</link>
      <description>The WP Custom Admin Interface WordPress plugin before 7.29 unserialize user input provided via the settings, which could allow high privilege users such as admin to perform PHP Object Injection when a suitable gadget is present.</description>
      <guid isPermaLink="false">CVE-2022-4043|2024-08-03T01:27:54.012Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4627|2024-08-03T01:48:38.915Z -- unknown -- shiftnav
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4627</link>
      <description>The ShiftNav WordPress plugin before 1.7.2 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4627|2024-08-03T01:48:38.915Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3769|2024-08-03T01:20:58.299Z -- unknown -- owm%20weather
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3769</link>
      <description>The OWM Weather WordPress plugin before 5.6.9 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as contributor</description>
      <guid isPermaLink="false">CVE-2022-3769|2024-08-03T01:20:58.299Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1583|2024-08-03T00:10:03.760Z -- unknown -- external%20links%20in%20new%20window%20%2F%20new%20tab
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1583</link>
      <description>The External Links in New Window / New Tab WordPress plugin before 1.43 does not ensure window.opener is set to "null" when links to external sites are clicked, which may enable tabnabbing attacks to occur.</description>
      <guid isPermaLink="false">CVE-2022-1583|2024-08-03T00:10:03.760Z</guid>
      <pubDate>Mon, 30 May 2022 08:36:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3822|2024-08-03T01:20:58.372Z -- unknown -- donations%20via%20paypal
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3822</link>
      <description>The Donations via PayPal WordPress plugin before 1.9.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3822|2024-08-03T01:20:58.372Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24228|2024-08-03T19:21:19.050Z -- unknown -- patreon%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24228</link>
      <description>The Jetpack Scan team identified a Reflected Cross-Site Scripting in the Login Form of the Patreon WordPress plugin before 1.7.2. The WordPress login form (wp-login.php) is hooked by the plugin and offers to allow users to authenticate on the site using their Patreon account. Unfortunately, some of the error logging logic behind the scene allowed user-controlled input to be reflected on the login page, unsanitized.</description>
      <guid isPermaLink="false">CVE-2021-24228|2024-08-03T19:21:19.050Z</guid>
      <pubDate>Mon, 12 Apr 2021 14:05:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4392|2024-08-03T01:41:44.427Z -- unknown -- ipanorama%20360%20wordpress%20virtual%20tour%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4392</link>
      <description>The iPanorama 360 WordPress Virtual Tour Builder plugin through 1.6.29 does not sanitise and escape some of its settings, which could allow users such as contributor+ to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-4392|2024-08-03T01:41:44.427Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4831|2024-08-03T01:55:44.991Z -- unknown -- custom%20user%20profile%20fields%20for%20user%20registration%20%26%20member%20frontend%20profiles%20with%20paid%20memberships%20pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4831</link>
      <description>The Custom User Profile Fields for User Registration WordPress plugin before 1.8.1 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4831|2024-08-03T01:55:44.991Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1994|2024-08-03T00:24:43.944Z -- unknown -- login%20with%20otp%20over%20sms%2C%20email%2C%20whatsapp%20and%20google%20authenticator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1994</link>
      <description>The Login With OTP Over SMS, Email, WhatsApp and Google Authenticator WordPress plugin before 1.0.8 does not escape its settings, allowing high privilege users such as admin to perform Cross-Site Scripting attacks even when the unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1994|2024-08-03T00:24:43.944Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:59:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24272|2024-08-03T19:28:22.755Z -- unknown -- fitness%20calculators
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24272</link>
      <description>The fitness calculators WordPress plugin before 1.9.6 add calculators for Water intake, BMI calculator, protein Intake, and Body Fat and was lacking CSRF check, allowing attackers to make logged in users perform unwanted actions, such as change the calculator headers. Due to the lack of sanitisation, this could also lead to a Stored Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24272|2024-08-03T19:28:22.755Z</guid>
      <pubDate>Wed, 05 May 2021 18:28:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4385|2024-08-03T01:41:44.445Z -- unknown -- intuitive%20custom%20post%20order
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4385</link>
      <description>The Intuitive Custom Post Order WordPress plugin before 3.1.4 does not check for authorization in the update-menu-order ajax action, allowing any logged in user (with roles as low as Subscriber) to update the menu order</description>
      <guid isPermaLink="false">CVE-2022-4385|2024-08-03T01:41:44.445Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3393|2024-08-03T01:07:06.503Z -- unknown -- post%20to%20csv%20by%20bestwebsoft
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3393</link>
      <description>The Post to CSV by BestWebSoft WordPress plugin through 1.4.0 does not properly escape fields when exporting data as CSV, leading to a CSV injection</description>
      <guid isPermaLink="false">CVE-2022-3393|2024-08-03T01:07:06.503Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4946|2024-08-03T01:55:46.120Z -- unknown -- frontend%20post%20wordpress%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4946</link>
      <description>The Frontend Post WordPress Plugin WordPress plugin through 2.8.4 does not validate an attribute of one of its shortcode, which could allow users with a role as low as contributor to add a malicious shortcode to a page/post, which will redirect users to an arbitrary domain.</description>
      <guid isPermaLink="false">CVE-2022-4946|2024-08-03T01:55:46.120Z</guid>
      <pubDate>Mon, 05 Jun 2023 13:39:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24410|2024-08-03T19:28:24.002Z -- unknown -- %E0%B0%A4%E0%B1%86%E0%B0%B2%E0%B1%81%E0%B0%97%E0%B1%81%20%E0%B0%AC%E0%B1%88%E0%B0%AC%E0%B0%BF%E0%B0%B2%E0%B1%8D%20%E0%B0%B5%E0%B0%9A%E0%B0%A8%E0%B0%AE%E0%B1%81%E0%B0%B2%E0%B1%81
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24410</link>
      <description>The తెలుగు బైబిల్ వచనములు WordPress plugin through 1.0 is lacking any CSRF check when saving its settings and verses, and do not sanitise or escape them when outputting them back in the page. This could allow attackers to make a logged in admin change the settings, as well as add malicious verses containing JavaScript code in them, leading to Stored XSS issues</description>
      <guid isPermaLink="false">CVE-2021-24410|2024-08-03T19:28:24.002Z</guid>
      <pubDate>Mon, 16 Aug 2021 10:48:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24597|2024-08-03T19:35:20.208Z -- unknown -- %E6%9C%89%E8%B5%8F%20you%20shang
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24597</link>
      <description>The You Shang WordPress plugin through 1.0.1 does not escape its qrcode links settings, which result into Stored Cross-Site Scripting issues in frontend posts and the plugins settings page depending on the payload used</description>
      <guid isPermaLink="false">CVE-2021-24597|2024-08-03T19:35:20.208Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4103|2024-08-03T01:27:54.457Z -- unknown -- royal%20elementor%20addons%20%28elementor%20templates%2C%20post%20grid%2C%20mega%20menu%20%26%20header%20footer%20builder%2C%20woocommerce%20builder%2C%20product%20grid%2C%20slider%2C%20parallax%20image%20%26%20other%20free%20elementor%20widgets%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4103</link>
      <description>The Royal Elementor Addons WordPress plugin before 1.3.56 does not have authorisation and CSRF checks when creating a template, and does not ensure that the post created is a template. This could allow any authenticated users, such as subscriber to create a post (as well as any post type) with an arbitrary title</description>
      <guid isPermaLink="false">CVE-2022-4103|2024-08-03T01:27:54.457Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4553|2024-08-03T01:41:45.636Z -- unknown -- fl3r%20feelbox
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4553</link>
      <description>The FL3R FeelBox WordPress plugin through 8.1 does not have CSRF check when updating reseting moods  which could allow attackers to make logged in admins perform such action via a CSRF attack and delete the lydl_posts &amp; lydl_poststimestamp DB tables</description>
      <guid isPermaLink="false">CVE-2022-4553|2024-08-03T01:41:45.636Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2846|2024-08-03T00:52:59.515Z -- unknown -- calendar%20event%20multi%20view
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2846</link>
      <description>The Calendar Event Multi View WordPress plugin before 1.4.07 does not have any authorisation and CSRF checks in place when creating an event, and is also lacking sanitisation as well as escaping in some of the event fields. This could allow unauthenticated attackers to create arbitrary events and put Cross-Site Scripting payloads in it.</description>
      <guid isPermaLink="false">CVE-2022-2846|2024-08-03T00:52:59.515Z</guid>
      <pubDate>Tue, 16 Aug 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24614|2024-08-03T19:35:20.310Z -- unknown -- book%20appointment%20online
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24614</link>
      <description>The Book appointment online WordPress plugin before 1.39 does not sanitise or escape Service Prices before outputting it in the List, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24614|2024-08-03T19:35:20.310Z</guid>
      <pubDate>Mon, 13 Sep 2021 17:56:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4479|2024-08-03T01:41:45.246Z -- unknown -- table%20of%20contents%20plus
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4479</link>
      <description>The Table of Contents Plus WordPress plugin before 2212 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4479|2024-08-03T01:41:45.246Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24445|2024-08-03T19:28:23.810Z -- unknown -- my%20site%20audit
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24445</link>
      <description>The My Site Audit WordPress plugin through 1.2.4 does not sanitise or escape the Audit Name field when creating an audit, allowing high privilege users to set JavaScript payloads in them, even when he unfiltered_html capability is disallowed, leading to an authenticated Stored Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24445|2024-08-03T19:28:23.810Z</guid>
      <pubDate>Mon, 16 Aug 2021 10:48:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25044|2024-08-03T19:49:14.532Z -- unknown -- cryptocurrency%20pricing%20list%20and%20ticker
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25044</link>
      <description>The Cryptocurrency Pricing list and Ticker WordPress plugin through 1.5 does not sanitise and escape the ccpw_setpage parameter before outputting it back in pages where its shortcode is embed, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-25044|2024-08-03T19:49:14.532Z</guid>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24439|2024-08-03T19:28:23.951Z -- unknown -- browser%20screenshots
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24439</link>
      <description>The Browser Screenshots WordPress plugin before 1.7.6 allowed authenticated users with a role as low as Contributor to perform Stored Cross-Site Scripting attacks as the image_class parameter of the browser-shot shortcode was not escaped.</description>
      <guid isPermaLink="false">CVE-2021-24439|2024-08-03T19:28:23.951Z</guid>
      <pubDate>Mon, 12 Jul 2021 19:21:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25025|2024-08-03T19:49:14.534Z -- unknown -- eventcalendar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25025</link>
      <description>The EventCalendar WordPress plugin before 1.1.51 does not have proper authorisation and CSRF checks in the add_calendar_event AJAX actions, allowing users with a role as low as subscriber to create events</description>
      <guid isPermaLink="false">CVE-2021-25025|2024-08-03T19:49:14.534Z</guid>
      <pubDate>Mon, 17 Jan 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3149|2024-08-03T01:00:10.535Z -- unknown -- wp%20custom%20cursors
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3149</link>
      <description>The WP Custom Cursors WordPress plugin before 3.0.1 does not have CSRF check in place when creating and editing cursors, which could allow attackers to made a logged in admin perform such actions via CSRF attacks. Furthermore, due to the lack of sanitisation and escaping in some of the cursor options, it could also lead to Stored Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-3149|2024-08-03T01:00:10.535Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4826|2024-08-03T01:55:44.206Z -- unknown -- simple%20tooltips
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4826</link>
      <description>The Simple Tooltips WordPress plugin before 2.1.4 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4826|2024-08-03T01:55:44.206Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25055|2024-08-03T19:49:14.591Z -- unknown -- feedwordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25055</link>
      <description>The FeedWordPress plugin before 2022.0123 is affected by a Reflected Cross-Site Scripting (XSS) within the "visibility" parameter.</description>
      <guid isPermaLink="false">CVE-2021-25055|2024-08-03T19:49:14.591Z</guid>
      <pubDate>Mon, 21 Feb 2022 10:45:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24847|2024-08-03T19:42:17.342Z -- unknown -- seo%20redirection%20plugin%20%E2%80%93%20301%20redirect%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24847</link>
      <description>The importFromRedirection AJAX action of the SEO Redirection Plugin – 301 Redirect Manager WordPress plugin before 8.2, available to any authenticated user, does not properly sanitise the offset parameter before using it in a SQL statement, leading an SQL injection when the redirection plugin is also installed</description>
      <guid isPermaLink="false">CVE-2021-24847|2024-08-03T19:42:17.342Z</guid>
      <pubDate>Wed, 17 Nov 2021 10:15:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24182|2024-08-03T19:21:18.774Z -- unknown -- tutor%20lms%20%E2%80%93%20elearning%20and%20online%20course%20solution
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24182</link>
      <description>The tutor_quiz_builder_get_answers_by_question AJAX action from the Tutor LMS – eLearning and online course solution WordPress plugin before 1.8.3 was vulnerable to UNION based SQL injection that could be exploited by students.</description>
      <guid isPermaLink="false">CVE-2021-24182|2024-08-03T19:21:18.774Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4953|2024-08-03T01:55:46.165Z -- unknown -- elementor%20website%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4953</link>
      <description>The Elementor Website Builder WordPress plugin before 3.5.5 does not filter out user-controlled URLs from being loaded into the DOM. This could be used to inject rogue iframes that point to malicious URLs.</description>
      <guid isPermaLink="false">CVE-2022-4953|2024-08-03T01:55:46.165Z</guid>
      <pubDate>Mon, 14 Aug 2023 19:10:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24150|2024-08-03T19:21:18.365Z -- unknown -- like%20button%20rating%20%E2%99%A5%20likebtn
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24150</link>
      <description>The LikeBtn WordPress Like Button Rating ♥ LikeBtn WordPress plugin before 2.6.32 was vulnerable to Unauthenticated Full-Read Server-Side Request Forgery (SSRF).</description>
      <guid isPermaLink="false">CVE-2021-24150|2024-08-03T19:21:18.365Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2405|2024-08-03T00:39:07.244Z -- unknown -- wp%20popup%20builder%20%E2%80%93%20popup%20forms%20%2C%20marketing%20popup%20%26%20%20newsletter
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2405</link>
      <description>The WP Popup Builder WordPress plugin before 1.2.9 does not have authorisation and CSRF check in an AJAX action, allowing any authenticated users, such as subscribers to delete arbitrary Popup</description>
      <guid isPermaLink="false">CVE-2022-2405|2024-08-03T00:39:07.244Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24857|2024-08-03T19:42:17.347Z -- unknown -- totop%20link
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24857</link>
      <description>The ToTop Link WordPress plugin through 1.7.1 passes base64 encoded user input to the unserialize() PHP function, which could lead to PHP Object injection if a plugin installed on the blog has a suitable gadget chain.</description>
      <guid isPermaLink="false">CVE-2021-24857|2024-08-03T19:42:17.347Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:41:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24904|2024-08-03T19:49:13.405Z -- unknown -- mortgage%20calculators%20wp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24904</link>
      <description>The Mortgage Calculators WP WordPress plugin before 1.56 does not implement any sanitisation on the color setting of the background of a calculator, which could allow high privilege users to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24904|2024-08-03T19:49:13.405Z</guid>
      <pubDate>Mon, 14 Feb 2022 09:20:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24623|2024-08-03T19:35:20.232Z -- unknown -- wordpress%20advanced%20ticket%20system%2C%20elite%20support%20helpdesk
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24623</link>
      <description>The WordPress Advanced Ticket System, Elite Support Helpdesk WordPress plugin before 1.0.64 does not sanitize or escape form values before saving to the database or when outputting, which allows high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24623|2024-08-03T19:35:20.232Z</guid>
      <pubDate>Mon, 13 Sep 2021 17:56:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24812|2024-08-03T19:42:17.340Z -- unknown -- betterlinks%20%E2%80%93%20shorten%2C%20track%20and%20manage%20any%20url
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24812</link>
      <description>The BetterLinks WordPress plugin before 1.2.6 does not sanitise and escape some of imported link fields, which could lead to Stored Cross-Site Scripting issues when an admin import a malicious CSV.</description>
      <guid isPermaLink="false">CVE-2021-24812|2024-08-03T19:42:17.340Z</guid>
      <pubDate>Tue, 23 Nov 2021 19:16:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2863|2024-08-03T00:52:58.992Z -- unknown -- migration%2C%20backup%2C%20staging%20%E2%80%93%20wpvivid
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2863</link>
      <description>The Migration, Backup, Staging WordPress plugin before 0.9.76 does not sanitise and validate a parameter before using it to read the content of a file, allowing high privilege users to read any file from the web server via a Traversal attack</description>
      <guid isPermaLink="false">CVE-2022-2863|2024-08-03T00:52:58.992Z</guid>
      <pubDate>Fri, 16 Sep 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3441|2024-08-03T01:07:06.609Z -- unknown -- rock%20convert
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3441</link>
      <description>The Rock Convert WordPress plugin before 2.11.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3441|2024-08-03T01:07:06.609Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24816|2024-08-03T19:42:17.200Z -- unknown -- phoenix%20media%20rename
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24816</link>
      <description>The Phoenix Media Rename WordPress plugin before 3.4.4 does not have capability checks in its phoenix_media_rename AJAX action, which could allow users with Author roles to rename any uploaded media files, including ones they do not own.</description>
      <guid isPermaLink="false">CVE-2021-24816|2024-08-03T19:42:17.200Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:35:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1780|2024-08-03T00:16:59.855Z -- unknown -- latex%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1780</link>
      <description>The LaTeX for WordPress plugin through 3.4.10 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack which could also lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping</description>
      <guid isPermaLink="false">CVE-2022-1780|2024-08-03T00:16:59.855Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2555|2024-08-03T00:39:07.995Z -- unknown -- yotpo%20reviews%20for%20woocommerce%20%28unofficial%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2555</link>
      <description>The Yotpo Reviews for WooCommerce WordPress plugin through 2.0.4 lacks nonce check when updating its settings, which could allow attacker to make a logged in admin change them via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2022-2555|2024-08-03T00:39:07.995Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:04:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3925|2024-08-03T01:20:58.822Z -- unknown -- buddybadges
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3925</link>
      <description>The buddybadges WordPress plugin through 1.0.0 does not sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users</description>
      <guid isPermaLink="false">CVE-2022-3925|2024-08-03T01:20:58.822Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24948|2024-08-03T19:49:14.124Z -- unknown -- the%20plus%20addons%20for%20elementor%20-%20pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24948</link>
      <description>The Plus Addons for Elementor - Pro WordPress plugin before 5.0.7 does not validate the qvquery parameter of the tp_get_dl_post_info_ajax AJAX action, which could allow unauthenticated users to retrieve sensitive information, such as private and draft posts</description>
      <guid isPermaLink="false">CVE-2021-24948|2024-08-03T19:49:14.124Z</guid>
      <pubDate>Mon, 10 Jan 2022 15:30:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4323|2024-08-03T01:34:50.147Z -- unknown -- analyticator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4323</link>
      <description>The Analyticator WordPress plugin before 6.5.6 unserializes user input provided via the settings, which could allow high privilege users such as admin to perform PHP Object Injection when a suitable gadget is present</description>
      <guid isPermaLink="false">CVE-2022-4323|2024-08-03T01:34:50.147Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4782|2024-08-03T01:48:40.494Z -- unknown -- clickfunnels
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4782</link>
      <description>The ClickFunnels WordPress plugin through 3.1.1 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4782|2024-08-03T01:48:40.494Z</guid>
      <pubDate>Wed, 16 Aug 2023 11:03:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24420|2024-08-03T19:28:23.956Z -- unknown -- request%20a%20quote
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24420</link>
      <description>The Request a Quote WordPress plugin before 2.3.4 did not sanitise and escape some of its quote fields when adding/editing a quote as admin, leading to Stored Cross-Site scripting issues when the quote is output in the 'All Quotes" table.</description>
      <guid isPermaLink="false">CVE-2021-24420|2024-08-03T19:28:23.956Z</guid>
      <pubDate>Mon, 12 Jul 2021 19:20:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24882|2024-08-03T19:49:13.943Z -- unknown -- slideshow%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24882</link>
      <description>The Slideshow Gallery WordPress plugin before 1.7.4 does not sanitise and escape the Slide "Title", "Description", and Gallery "Title" fields, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24882|2024-08-03T19:49:13.943Z</guid>
      <pubDate>Tue, 23 Nov 2021 19:16:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25118|2024-08-03T19:56:10.582Z -- unknown -- yoast%20seo
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25118</link>
      <description>The Yoast SEO WordPress plugin (from versions 16.7 until 17.2) discloses the full internal path of featured images in posts via the wp/v2/posts REST endpoints which could help an attacker identify other vulnerabilities or help during the exploitation of other identified vulnerabilities.</description>
      <guid isPermaLink="false">CVE-2021-25118|2024-08-03T19:56:10.582Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2186|2024-08-03T00:32:08.635Z -- unknown -- simple%20post%20notes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2186</link>
      <description>The Simple Post Notes WordPress plugin before 1.7.6 does not sanitise and escape its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2186|2024-08-03T00:32:08.635Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:37:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1779|2024-08-03T00:16:59.906Z -- unknown -- auto%20delete%20posts
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1779</link>
      <description>The Auto Delete Posts WordPress plugin through 1.3.0 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and delete specific posts, categories and attachments at once.</description>
      <guid isPermaLink="false">CVE-2022-1779|2024-08-03T00:16:59.906Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1605|2024-08-03T00:10:03.598Z -- unknown -- email%20users
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1605</link>
      <description>The Email Users WordPress plugin through 4.8.8 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and change the notification settings of arbitrary users</description>
      <guid isPermaLink="false">CVE-2022-1605|2024-08-03T00:10:03.598Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24303|2024-08-03T19:28:23.552Z -- unknown -- jiangqie%20official%20website%20mini%20program
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24303</link>
      <description>The JiangQie Official Website Mini Program WordPress plugin before 1.1.1 does not escape or validate the id GET parameter before using it in SQL statements, leading to SQL injection issues</description>
      <guid isPermaLink="false">CVE-2021-24303|2024-08-03T19:28:23.552Z</guid>
      <pubDate>Mon, 06 Sep 2021 11:09:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25005|2024-08-03T19:49:14.588Z -- unknown -- seur%20oficial
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25005</link>
      <description>The SEUR Oficial WordPress plugin before 1.7.0 does not sanitize and escape some of its settings allowing high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-25005|2024-08-03T19:49:14.588Z</guid>
      <pubDate>Mon, 17 Jan 2022 13:00:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3481|2024-08-03T01:14:01.440Z -- unknown -- woocommerce%20dropshipping
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3481</link>
      <description>The WooCommerce Dropshipping WordPress plugin before 4.4 does not properly sanitise and escape a parameter before using it in a SQL statement via a REST endpoint available to unauthenticated users, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2022-3481|2024-08-03T01:14:01.440Z</guid>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25058|2024-08-03T19:49:14.590Z -- unknown -- the%20buffer%20button
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25058</link>
      <description>The Buffer Button WordPress plugin through 1.0 was vulnerable to Authenticated Stored Cross Site Scripting (XSS) within the Twitter username to mention text field.</description>
      <guid isPermaLink="false">CVE-2021-25058|2024-08-03T19:49:14.590Z</guid>
      <pubDate>Mon, 21 Feb 2022 10:45:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3462|2024-08-03T01:07:06.715Z -- unknown -- highlight%20focus
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3462</link>
      <description>The Highlight Focus WordPress plugin through 1.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3462|2024-08-03T01:07:06.715Z</guid>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4788|2024-08-03T01:48:40.473Z -- unknown -- embed%20pdf
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4788</link>
      <description>The Embed PDF WordPress plugin through 1.0.6 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4788|2024-08-03T01:48:40.473Z</guid>
      <pubDate>Mon, 27 Feb 2023 15:24:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24983|2024-08-03T19:49:14.271Z -- unknown -- asset%20cleanup%3A%20page%20speed%20booster
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24983</link>
      <description>The Asset CleanUp: Page Speed Booster WordPress plugin before 1.3.8.5 does not sanitise and escape POSted parameters sent to the wpassetcleanup_fetch_active_plugins_icons AJAX action (available to admin users), leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24983|2024-08-03T19:49:14.271Z</guid>
      <pubDate>Tue, 01 Feb 2022 12:21:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2091|2024-08-03T00:24:44.215Z -- unknown -- cache%20images
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2091</link>
      <description>The Cache Images WordPress plugin before 3.2.1 does not implement nonce checks, which could allow attackers to make any logged user upload images via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2022-2091|2024-08-03T00:24:44.215Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:57:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25100|2024-08-03T19:56:09.986Z -- unknown -- givewp%20%E2%80%93%20donation%20plugin%20and%20fundraising%20platform
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25100</link>
      <description>The GiveWP WordPress plugin before 2.17.3 does not escape the s parameter before outputting it back in an attribute in the Donation Forms dashboard, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-25100|2024-08-03T19:56:09.986Z</guid>
      <pubDate>Mon, 21 Feb 2022 10:45:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4672|2024-08-03T01:48:39.586Z -- unknown -- wordpress%20simple%20shopping%20cart
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4672</link>
      <description>The WordPress Simple Shopping Cart WordPress plugin before 4.6.2 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4672|2024-08-03T01:48:39.586Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25021|2024-08-03T19:49:14.646Z -- unknown -- omgf%20%7C%20host%20google%20fonts%20locally
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25021</link>
      <description>The OMGF | Host Google Fonts Locally WordPress plugin before 4.5.12 does not validate the cache directory setting, allowing high privilege users to use a path traversal vector and delete arbitrary folders when uninstalling the plugin</description>
      <guid isPermaLink="false">CVE-2021-25021|2024-08-03T19:49:14.646Z</guid>
      <pubDate>Mon, 03 Jan 2022 12:49:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24685|2024-08-03T19:42:15.987Z -- unknown -- flat%20preloader
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24685</link>
      <description>The Flat Preloader WordPress plugin before 1.5.4 does not enforce nonce checks when saving its settings, as well as does not sanitise and escape them, which could allow attackers to a make logged in admin change them with a Cross-Site Scripting payload (triggered either in the frontend or backend depending on the payload)</description>
      <guid isPermaLink="false">CVE-2021-24685|2024-08-03T19:42:15.987Z</guid>
      <pubDate>Mon, 01 Nov 2021 08:46:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4373|2024-08-03T01:34:50.188Z -- unknown -- quote-o-matic
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4373</link>
      <description>The Quote-O-Matic WordPress plugin through 1.0.5 does not properly sanitize and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2022-4373|2024-08-03T01:34:50.188Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1951|2024-08-03T00:24:43.611Z -- unknown -- core%20plugin%20for%20kitestudio%20themes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1951</link>
      <description>The core plugin for kitestudio WordPress plugin before 2.3.1 does not sanitise and escape some parameters before outputting them back in a response of an AJAX action, available to both unauthenticated and authenticated users when a premium theme from the vendor is active, leading to a Reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2022-1951|2024-08-03T00:24:43.611Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:56:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24925|2024-08-03T19:49:14.007Z -- unknown -- modern%20events%20calendar%20lite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24925</link>
      <description>The Modern Events Calendar Lite WordPress plugin before 6.1.5 does not sanitise and escape the current_month_divider parameter of its mec_list_load_more AJAX call (available to both unauthenticated and authenticated users) before outputting it back in the response, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24925|2024-08-03T19:49:14.007Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:41:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24677|2024-08-03T19:42:16.066Z -- unknown -- find%20my%20blocks
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24677</link>
      <description>The Find My Blocks WordPress plugin before 3.4.0 does not have authorisation checks in its REST API, which could allow unauthenticated users to enumerate private posts' titles.</description>
      <guid isPermaLink="false">CVE-2021-24677|2024-08-03T19:42:16.066Z</guid>
      <pubDate>Mon, 18 Oct 2021 13:45:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3930|2024-08-03T01:27:53.132Z -- unknown -- directorist
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3930</link>
      <description>The Directorist WordPress plugin before 7.4.2.2 suffers from an IDOR vulnerability which an attacker can exploit to change the password  of arbitrary users instead of his own.</description>
      <guid isPermaLink="false">CVE-2022-3930|2024-08-03T01:27:53.132Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24352|2024-08-03T19:28:23.446Z -- unknown -- simple%20301%20redirects%20by%20betterlinks
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24352</link>
      <description>The export_data function of the Simple 301 Redirects by BetterLinks WordPress plugin before 2.0.4 had no capability or nonce checks making it possible for unauthenticated users to export a site's redirects.</description>
      <guid isPermaLink="false">CVE-2021-24352|2024-08-03T19:28:23.446Z</guid>
      <pubDate>Mon, 14 Jun 2021 13:37:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24396|2024-08-03T19:28:23.858Z -- unknown -- gseor%20%E2%80%93%20wordpress%20seo%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24396</link>
      <description>A pageid GET parameter of the GSEOR – WordPress SEO Plugin WordPress plugin through 1.3 is not sanitised, escaped or validated before inserting to a SQL statement, leading to SQL injection.</description>
      <guid isPermaLink="false">CVE-2021-24396|2024-08-03T19:28:23.858Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:05:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2597|2024-08-03T00:46:03.062Z -- unknown -- visual%20portfolio%2C%20photo%20gallery%20%26%20post%20grid
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2597</link>
      <description>The Visual Portfolio, Photo Gallery &amp; Post Grid WordPress plugin before 2.19.0 does not have proper authorisation checks in some of its REST endpoints, allowing users with a role as low as contributor to call them and inject arbitrary CSS in arbitrary saved layouts</description>
      <guid isPermaLink="false">CVE-2022-2597|2024-08-03T00:46:03.062Z</guid>
      <pubDate>Mon, 05 Sep 2022 12:35:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2395|2024-08-03T00:39:06.395Z -- unknown -- weforms%20%E2%80%93%20easy%20drag%20%26%20drop%20contact%20form%20builder%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2395</link>
      <description>The weForms WordPress plugin before 1.6.14 does not sanitise and escape its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2395|2024-08-03T00:39:06.395Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:48:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24696|2024-08-03T19:42:16.140Z -- unknown -- simple%20download%20monitor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24696</link>
      <description>The Simple Download Monitor WordPress plugin before 3.9.9 does not enforce nonce checks, which could allow attackers to perform CSRF attacks to 1) make admins export logs to exploit a separate log disclosure vulnerability (fixed in 3.9.6), 2) delete logs (fixed in 3.9.9), 3) remove thumbnail image from downloads</description>
      <guid isPermaLink="false">CVE-2021-24696|2024-08-03T19:42:16.140Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:00:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4230|2024-08-03T01:34:49.929Z -- unknown -- wp%20statistics
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4230</link>
      <description>The WP Statistics WordPress plugin before 13.2.9 does not escape a parameter, which could allow authenticated users to perform SQL Injection attacks. By default, the affected feature is available to users with the manage_options capability (admin+), however the plugin has a settings to allow low privilege users to access it as well.</description>
      <guid isPermaLink="false">CVE-2022-4230|2024-08-03T01:34:49.929Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24523|2024-08-03T19:35:19.870Z -- unknown -- daily%20prayer%20time
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24523</link>
      <description>The Daily Prayer Time WordPress plugin before 2021.08.10 does not sanitise or escape some of its settings before outputting them in the page, leading to Authenticated Stored Cross-Site Scripting issues.</description>
      <guid isPermaLink="false">CVE-2021-24523|2024-08-03T19:35:19.870Z</guid>
      <pubDate>Mon, 13 Sep 2021 17:56:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4160|2024-08-03T01:34:48.801Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4160</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the cg_copy_id POST parameter before concatenating it to an SQL query in  cg-copy-comments.php and cg-copy-rating.php. This may allow malicious users with at least author privilege to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4160|2024-08-03T01:34:48.801Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24897|2024-08-03T19:49:13.999Z -- unknown -- add%20subtitle
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24897</link>
      <description>The Add Subtitle WordPress plugin through 1.1.0 does not sanitise or escape the sub-title field (available only with classic editor) when output in the page, which could allow users with a role as low as contributor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2021-24897|2024-08-03T19:49:13.999Z</guid>
      <pubDate>Mon, 14 Mar 2022 14:40:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2710|2024-08-03T00:46:03.416Z -- unknown -- scroll%20to%20top
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2710</link>
      <description>The Scroll To Top WordPress plugin before 1.4.1 does not escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2710|2024-08-03T00:46:03.416Z</guid>
      <pubDate>Mon, 19 Sep 2022 14:00:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24994|2024-08-03T19:49:14.585Z -- unknown -- migration%2C%20backup%2C%20staging%20%E2%80%93%20wpvivid%20backup%20and%20migration%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24994</link>
      <description>The Migration, Backup, Staging WordPress plugin before 0.9.69 does not have authorisation when adding remote storages, and does not sanitise as well as escape a parameter from such unauthenticated requests before outputting it in admin page, leading to a Stored Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24994|2024-08-03T19:49:14.585Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24842|2024-08-03T19:42:17.397Z -- unknown -- bulk%20datetime%20change
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24842</link>
      <description>The Bulk Datetime Change WordPress plugin before 1.12 does not enforce capability checks which allows users with Contributor roles to 1) list private post titles of other users and 2) change the posted date of other users' posts.</description>
      <guid isPermaLink="false">CVE-2021-24842|2024-08-03T19:42:17.397Z</guid>
      <pubDate>Mon, 29 Nov 2021 08:25:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24480|2024-08-03T19:35:19.561Z -- unknown -- event%20geek
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24480</link>
      <description>The Event Geek WordPress plugin through 2.5.2 does not sanitise or escape its "Use your own " setting before outputting it in the page, leading to an authenticated (admin+) stored Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24480|2024-08-03T19:35:19.561Z</guid>
      <pubDate>Mon, 02 Aug 2021 10:32:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1690|2024-08-03T00:10:03.752Z -- unknown -- note%20press
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1690</link>
      <description>The Note Press WordPress plugin through 0.1.10 does not sanitise and escape the ids from the bulk actions before using them in a SQL statement in an admin page, leading to an SQL injection</description>
      <guid isPermaLink="false">CVE-2022-1690|2024-08-03T00:10:03.752Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2382|2024-08-03T00:39:06.347Z -- unknown -- product%20slider%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2382</link>
      <description>The Product Slider for WooCommerce WordPress plugin before 2.5.7 has flawed CSRF checks and lack authorisation in some of its AJAX actions, allowing any authenticated users, such as subscriber to call them. One in particular could allow them to delete arbitrary blog options.</description>
      <guid isPermaLink="false">CVE-2022-2382|2024-08-03T00:39:06.347Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:02:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24932|2024-08-03T19:49:12.678Z -- unknown -- auto%20featured%20image%20%28auto%20post%20thumbnail%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24932</link>
      <description>The Auto Featured Image (Auto Post Thumbnail) WordPress plugin before 3.9.3 does not sanitise and escape the post_id parameter before outputting back in an admin page within a JS block, leading to a Reflected Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-24932|2024-08-03T19:49:12.678Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:41:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1971|2024-08-03T00:24:44.067Z -- unknown -- nextcellent%20gallery%20%E2%80%93%20nextgen%20legacy
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1971</link>
      <description>The NextCellent Gallery WordPress plugin through 1.9.35 does not sanitise and escape some of its image settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-1971|2024-08-03T00:24:44.067Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:59:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24986|2024-08-03T19:49:14.581Z -- unknown -- post%20grid
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24986</link>
      <description>The Post Grid WordPress plugin before 2.1.16 does not escape the keyword parameter before outputting it back in an attribute, leading to a Reflected Cross-Site Scripting in pages containing a Post Grid with a search form</description>
      <guid isPermaLink="false">CVE-2021-24986|2024-08-03T19:49:14.581Z</guid>
      <pubDate>Mon, 11 Apr 2022 14:40:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4753|2024-08-03T01:48:40.287Z -- unknown -- print-o-matic
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4753</link>
      <description>The Print-O-Matic WordPress plugin before 2.1.8 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4753|2024-08-03T01:48:40.287Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25070|2024-08-03T19:56:09.968Z -- unknown -- block%20bad%20bots%20and%20stop%20bad%20bots%20crawlers%20and%20spiders%20and%20anti%20spam%20protection
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25070</link>
      <description>The Block Bad Bots WordPress plugin before 6.88 does not properly sanitise and escape the User Agent before using it in a SQL statement to record logs, leading to an SQL Injection issue</description>
      <guid isPermaLink="false">CVE-2021-25070|2024-08-03T19:56:09.968Z</guid>
      <pubDate>Mon, 28 Mar 2022 17:22:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1644|2024-08-03T00:10:03.792Z -- unknown -- call%26book%20mobile%20bar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1644</link>
      <description>The Call&amp;Book Mobile Bar WordPress plugin through 1.2.2 does not sanitize and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-1644|2024-08-03T00:10:03.792Z</guid>
      <pubDate>Mon, 30 May 2022 08:36:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3989|2024-08-03T01:27:54.119Z -- unknown -- motors
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3989</link>
      <description>The Motors WordPress plugin before 1.4.4 does not properly validate uploaded files for dangerous file types (such as .php) in an AJAX action, allowing an attacker to sign up on a victim's WordPress instance, upload a malicious PHP file and attempt to launch a brute-force attack to discover the uploaded payload.</description>
      <guid isPermaLink="false">CVE-2022-3989|2024-08-03T01:27:54.119Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4680|2024-08-03T01:48:39.943Z -- unknown -- revive%20old%20posts
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4680</link>
      <description>The Revive Old Posts WordPress plugin before 9.0.11 unserializes user input provided via the settings, which could allow high privilege users such as admin to perform PHP Object Injection when a suitable gadget is present.</description>
      <guid isPermaLink="false">CVE-2022-4680|2024-08-03T01:48:39.943Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24552|2024-08-03T19:35:20.202Z -- unknown -- simple%20events%20calendar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24552</link>
      <description>The Simple Events Calendar WordPress plugin through 1.4.0 does not sanitise, validate or escape the event_id POST parameter before using it in a SQL statement when deleting events, leading to an authenticated SQL injection issue</description>
      <guid isPermaLink="false">CVE-2021-24552|2024-08-03T19:35:20.202Z</guid>
      <pubDate>Mon, 23 Aug 2021 11:10:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24899|2024-08-03T19:49:13.962Z -- unknown -- media%20tags
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24899</link>
      <description>The Media-Tags WordPress plugin through 3.2.0.2 does not sanitise and escape any of its Labels settings, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_htnl capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24899|2024-08-03T19:49:13.962Z</guid>
      <pubDate>Mon, 29 Nov 2021 08:25:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2389|2024-08-03T00:39:07.097Z -- unknown -- abandoned%20cart%20recovery%20for%20woocommerce%2C%20follow%20up%20emails%2C%20newsletter%20builder%20%26%20marketing%20automation%20by%20autonami
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2389</link>
      <description>The Abandoned Cart Recovery for WooCommerce, Follow Up Emails, Newsletter Builder &amp; Marketing Automation By Autonami WordPress plugin before 2.1.2 does not have authorisation and CSRF checks in one of its AJAX action, allowing any authenticated users, such as subscriber to create automations</description>
      <guid isPermaLink="false">CVE-2022-2389|2024-08-03T00:39:07.097Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:02:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4758|2024-08-03T01:48:40.408Z -- unknown -- 10webmapbuilder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4758</link>
      <description>The 10WebMapBuilder WordPress plugin before 1.0.72 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4758|2024-08-03T01:48:40.408Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1938|2024-08-03T00:24:42.640Z -- unknown -- awin%20data%20feed
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1938</link>
      <description>The Awin Data Feed WordPress plugin before 1.8 does not sanitise and escape a header when processing request to generate analytics data, allowing unauthenticated users to perform Stored Cross-Site Scripting attacks against a logged in admin viewing the plugin's settings</description>
      <guid isPermaLink="false">CVE-2022-1938|2024-08-03T00:24:42.640Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:56:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1709|2024-08-03T00:10:03.915Z -- unknown -- throws%20spam%20away
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1709</link>
      <description>The Throws SPAM Away WordPress plugin before 3.3.1 does not have CSRF checks in place when deleting comments (either all, spam, or pending), allowing attackers to make a logged in admin delete comments via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1709|2024-08-03T00:10:03.915Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24955|2024-08-03T19:49:13.992Z -- unknown -- user%20registration%2C%20login%20form%2C%20user%20profile%20%26%20membership%20%E2%80%93%20profilepress%20%28formerly%20wp%20user%20avatar%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24955</link>
      <description>The User Registration, Login Form, User Profile &amp; Membership WordPress plugin before 3.2.3 does not escape the data parameter of the pp_get_forms_by_builder_type AJAX action before outputting it back in an attribute, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24955|2024-08-03T19:49:13.992Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:41:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4562|2024-08-03T01:41:45.613Z -- unknown -- meks%20flexible%20shortcodes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4562</link>
      <description>The Meks Flexible Shortcodes WordPress plugin before 1.3.5 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4562|2024-08-03T01:41:45.613Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24630|2024-08-03T19:35:20.323Z -- unknown -- schreikasten
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24630</link>
      <description>The Schreikasten WordPress plugin through 0.14.18 does not sanitise or escape the id GET parameter before using it in SQL statements in the comments dashboard from various actions, leading to authenticated SQL Injections which can be exploited by users as low as author</description>
      <guid isPermaLink="false">CVE-2021-24630|2024-08-03T19:35:20.323Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:34:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24327|2024-08-03T19:28:24.001Z -- unknown -- seo%20redirection%20plugin%20%E2%80%93%20301%20redirect%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24327</link>
      <description>The SEO Redirection Plugin – 301 Redirect Manager WordPress plugin before 6.4 did not sanitise the Redirect From and Redirect To fields when creating a new redirect in the dashboard, allowing high privilege users (even with the unfiltered_html disabled) to set XSS payloads</description>
      <guid isPermaLink="false">CVE-2021-24327|2024-08-03T19:28:24.001Z</guid>
      <pubDate>Mon, 17 May 2021 16:48:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4358|2024-08-03T01:34:50.207Z -- unknown -- wp%20rss%20by%20publishers
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4358</link>
      <description>The WP RSS By Publishers WordPress plugin through 0.1 does not properly sanitize and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2022-4358|2024-08-03T01:34:50.207Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4834|2024-08-03T01:55:45.645Z -- unknown -- cpt%20bootstrap%20carousel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4834</link>
      <description>The CPT Bootstrap Carousel WordPress plugin through 1.12 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4834|2024-08-03T01:55:45.645Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4159|2024-08-03T01:34:48.817Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4159</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the cg_id POST parameter before concatenating it to an SQL query in 0_change-gallery.php. This may allow malicious users with at least author privilege to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4159|2024-08-03T01:34:48.817Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4486|2024-08-03T01:41:45.042Z -- unknown -- meteor%20slides
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4486</link>
      <description>The Meteor Slides WordPress plugin before 1.5.7 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4486|2024-08-03T01:41:45.042Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24966|2024-08-03T19:49:14.380Z -- unknown -- error%20log%20viewer%20by%20bestwebsoft
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24966</link>
      <description>The Error Log Viewer WordPress plugin through 1.1.1 does not validate the path of the log file to clear, allowing high privilege users to clear arbitrary files on the web server, including those outside of the blog folder</description>
      <guid isPermaLink="false">CVE-2021-24966|2024-08-03T19:49:14.380Z</guid>
      <pubDate>Mon, 14 Mar 2022 14:41:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3849|2024-08-03T01:20:59.035Z -- unknown -- wp%20user%20merger
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3849</link>
      <description>The WP User Merger WordPress plugin before 1.5.3 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as admin</description>
      <guid isPermaLink="false">CVE-2022-3849|2024-08-03T01:20:59.035Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3994|2024-08-03T01:27:53.743Z -- unknown -- authenticator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3994</link>
      <description>The Authenticator WordPress plugin before 1.3.1 does not prevent subscribers from updating a site's feed access token, which may deny other users access to the functionality in certain configurations.</description>
      <guid isPermaLink="false">CVE-2022-3994|2024-08-03T01:27:53.743Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4549|2024-08-03T01:41:45.670Z -- unknown -- tickera
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4549</link>
      <description>The Tickera WordPress plugin before 3.5.1.0 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged-in admin change them via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2022-4549|2024-08-03T01:41:45.670Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25035|2024-08-03T19:49:14.533Z -- unknown -- backup%20and%20staging%20by%20wp%20time%20capsule
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25035</link>
      <description>The Backup and Staging by WP Time Capsule WordPress plugin before 1.22.7 does not sanitise and escape the error parameter before outputting it back in an admin page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-25035|2024-08-03T19:49:14.533Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:01:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24210|2024-08-03T19:21:18.865Z -- unknown -- phastpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24210</link>
      <description>There is an open redirect in the PhastPress WordPress plugin before 1.111 that allows an attacker to malform a request to a page with the plugin and then redirect the victim to a malicious page. There is also a support comment from another user one year ago (https://wordpress.org/support/topic/phast-php-used-for-remote-fetch/) that says that the php involved in the request only go to whitelisted pages but it's possible to redirect the victim to any domain.</description>
      <guid isPermaLink="false">CVE-2021-24210|2024-08-03T19:21:18.865Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4478|2024-08-03T01:41:45.428Z -- unknown -- font%20awesome
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4478</link>
      <description>The Font Awesome WordPress plugin before 4.3.2 does not validate and escapes some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as a contributor to perform Stored Cross-Site Scripting attacks against logged-in admins.</description>
      <guid isPermaLink="false">CVE-2022-4478|2024-08-03T01:41:45.428Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24395|2024-08-03T19:28:23.915Z -- unknown -- embed%20youtube%20video
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24395</link>
      <description>The editid GET parameter of the Embed Youtube Video WordPress plugin through 1.0 is not sanitised, escaped or validated before inserting to a SQL statement, leading to SQL injection.</description>
      <guid isPermaLink="false">CVE-2021-24395|2024-08-03T19:28:23.915Z</guid>
      <pubDate>Mon, 06 Sep 2021 11:09:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1765|2024-08-03T00:16:59.872Z -- unknown -- hot%20linked%20image%20cacher
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1765</link>
      <description>The Hot Linked Image Cacher WordPress plugin through 1.16 is vulnerable to CSRF. This can be used to store / cache images from external domains on the server, which could lead to legal risks (due to copyright violations or licensing rules).</description>
      <guid isPermaLink="false">CVE-2022-1765|2024-08-03T00:16:59.872Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4655|2024-08-03T01:48:39.582Z -- unknown -- welcart%20e-commerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4655</link>
      <description>The Welcart e-Commerce WordPress plugin before 2.8.9 does not validate and escapes one of its shortcode attributes, which could allow users with a role as low as a contributor to perform a Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4655|2024-08-03T01:48:39.582Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24170|2024-08-03T19:21:18.636Z -- unknown -- user%20profile%20picture
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24170</link>
      <description>The REST API endpoint get_users in the User Profile Picture WordPress plugin before 2.5.0 returned more information than was required for its functionality to users with the upload_files capability. This included password hashes, hashed user activation keys, usernames, emails, and other less sensitive information.</description>
      <guid isPermaLink="false">CVE-2021-24170|2024-08-03T19:21:18.636Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2574|2024-08-03T00:39:08.073Z -- unknown -- meks%20easy%20social%20share
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2574</link>
      <description>The Meks Easy Social Share WordPress plugin before 1.2.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2574|2024-08-03T00:39:08.073Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24632|2024-08-03T19:35:20.226Z -- unknown -- recipe%20card%20blocks%20by%20wpzoom
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24632</link>
      <description>The Recipe Card Blocks by WPZOOM WordPress plugin before 2.8.1 does not escape the message parameter before outputting it back in the admin dashboard, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24632|2024-08-03T19:35:20.226Z</guid>
      <pubDate>Mon, 27 Sep 2021 15:25:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24742|2024-08-03T19:42:16.621Z -- unknown -- logo%20slider%20and%20showcase
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24742</link>
      <description>The Logo Slider and Showcase WordPress plugin before 1.3.37 allows Editor users to update the plugin's settings via the rtWLSSettings AJAX action because it uses a nonce for authorisation instead of a capability check.</description>
      <guid isPermaLink="false">CVE-2021-24742|2024-08-03T19:42:16.621Z</guid>
      <pubDate>Mon, 01 Nov 2021 08:46:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24134|2024-08-03T19:21:18.263Z -- unknown -- constant%20contact%20forms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24134</link>
      <description>Unvalidated input and lack of output encoding in the Constant Contact Forms WordPress plugin, versions before 1.8.8, lead to multiple Stored Cross-Site Scripting vulnerabilities, which allowed high-privileged user (Editor+) to inject arbitrary JavaScript code or HTML in posts where the malicious form is embed.</description>
      <guid isPermaLink="false">CVE-2021-24134|2024-08-03T19:21:18.263Z</guid>
      <pubDate>Thu, 18 Mar 2021 14:57:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4196|2024-08-03T01:34:49.612Z -- unknown -- multi%20step%20form
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4196</link>
      <description>The Multi Step Form WordPress plugin before 1.7.8 does not sanitise and escape some of its form fields, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4196|2024-08-03T01:34:49.612Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24137|2024-08-03T19:21:18.663Z -- unknown -- blog2social%3A%20social%20media%20auto%20post%20%26%20scheduler
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24137</link>
      <description>Unvalidated input in the Blog2Social WordPress plugin, versions before 6.3.1, lead to SQL Injection in the Re-Share Posts feature, allowing authenticated users to inject arbitrary SQL commands.</description>
      <guid isPermaLink="false">CVE-2021-24137|2024-08-03T19:21:18.663Z</guid>
      <pubDate>Thu, 18 Mar 2021 14:57:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4295|2024-08-03T01:34:50.095Z -- unknown -- show%20all%20comments
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4295</link>
      <description>The Show All Comments WordPress plugin before 7.0.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against a logged in high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2022-4295|2024-08-03T01:34:50.095Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24698|2024-08-03T19:42:16.185Z -- unknown -- simple%20download%20monitor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24698</link>
      <description>The Simple Download Monitor WordPress plugin before 3.9.6 allows users with a role as low as Contributor to remove thumbnails from downloads they do not own, even if they cannot normally edit the download.</description>
      <guid isPermaLink="false">CVE-2021-24698|2024-08-03T19:42:16.185Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:35:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24167|2024-08-03T19:21:18.623Z -- unknown -- web-stat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24167</link>
      <description>When visiting a site running Web-Stat &lt; 1.4.0, the "wts_web_stat_load_init" function used the visitor’s browser to send an XMLHttpRequest request to https://wts2.one/ajax.htm?action=lookup_WP_account.</description>
      <guid isPermaLink="false">CVE-2021-24167|2024-08-03T19:21:18.623Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24263|2024-08-03T19:28:22.655Z -- unknown -- powerpack%20addons%20for%20elementor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24263</link>
      <description>The “Elementor Addons – PowerPack Addons for Elementor” WordPress Plugin before 2.3.2 for WordPress has several widgets that are vulnerable to stored Cross-Site Scripting (XSS) by lower-privileged users such as contributors, all via a similar method.</description>
      <guid isPermaLink="false">CVE-2021-24263|2024-08-03T19:28:22.655Z</guid>
      <pubDate>Wed, 05 May 2021 18:28:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24559|2024-08-03T19:35:20.264Z -- unknown -- qyrr
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24559</link>
      <description>The Qyrr WordPress plugin before 0.7 does not escape the data-uri of the QR Code when outputting it in a src attribute, allowing for Cross-Site Scripting attacks. Furthermore, the data_uri_to_meta AJAX action, available to all authenticated users, only had a CSRF check in place, with the nonce available to users with a role as low as Contributor allowing any user with such role (and above) to set a malicious data-uri in arbitrary QR Code posts, leading to a Stored Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-24559|2024-08-03T19:35:20.264Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:48:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24529|2024-08-03T19:35:20.018Z -- unknown -- grid%20gallery%20%E2%80%93%20photo%20image%20grid%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24529</link>
      <description>The Grid Gallery – Photo Image Grid Gallery WordPress plugin before 1.2.5 does not properly sanitize the title field for image galleries when adding them via the admin dashboard, resulting in an authenticated Stored Cross-Site Scripting vulnerability.</description>
      <guid isPermaLink="false">CVE-2021-24529|2024-08-03T19:35:20.018Z</guid>
      <pubDate>Mon, 23 Aug 2021 11:10:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3246|2024-08-03T01:07:05.561Z -- unknown -- blog2social%3A%20social%20media%20auto%20post%20%26%20scheduler
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3246</link>
      <description>The Blog2Social: Social Media Auto Post &amp; Scheduler WordPress plugin before 6.9.10 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by any authenticated users, such as subscribers</description>
      <guid isPermaLink="false">CVE-2022-3246|2024-08-03T01:07:05.561Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3936|2024-08-03T01:27:52.941Z -- unknown -- team%20members
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3936</link>
      <description>The Team Members WordPress plugin before 5.2.1 does not sanitize and escapes some of its settings, which could allow high-privilege users such as editors to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example, in a multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3936|2024-08-03T01:27:52.941Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24580|2024-08-03T19:35:20.253Z -- unknown -- side%20menu%20lite%20-%20add%20sticky%20fixed%20buttons
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24580</link>
      <description>The Side Menu Lite WordPress plugin before 2.2.6 does not sanitise user input from the List page in the admin dashboard before using it in SQL statement, leading to a SQL Injection issue</description>
      <guid isPermaLink="false">CVE-2021-24580|2024-08-03T19:35:20.253Z</guid>
      <pubDate>Mon, 30 Aug 2021 14:11:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4484|2024-08-03T01:41:44.920Z -- unknown -- social%20share%2C%20social%20login%20and%20social%20comments%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4484</link>
      <description>The Social Share, Social Login and Social Comments Plugin WordPress plugin before 7.13.44 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4484|2024-08-03T01:41:44.920Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4774|2024-08-03T01:48:40.397Z -- unknown -- bit%20form
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4774</link>
      <description>The Bit Form WordPress plugin before 1.9 does not validate the file types uploaded via it's file upload form field, allowing unauthenticated users to upload arbitrary files types such as PHP or HTML files to the server, leading to Remote Code Execution.</description>
      <guid isPermaLink="false">CVE-2022-4774|2024-08-03T01:48:40.397Z</guid>
      <pubDate>Mon, 15 May 2023 12:15:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24958|2024-08-03T19:49:13.964Z -- unknown -- meks%20easy%20photo%20feed%20widget
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24958</link>
      <description>The Meks Easy Photo Feed Widget WordPress plugin before 1.2.4 does not have capability and CSRF checks in the meks_save_business_selected_account AJAX action, available to any authenticated user, and does not escape some of the settings. As a result, any authenticated user, such as subscriber could update the plugin's settings and put Cross-Site Scripting payloads in them</description>
      <guid isPermaLink="false">CVE-2021-24958|2024-08-03T19:49:13.964Z</guid>
      <pubDate>Mon, 14 Mar 2022 14:41:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24163|2024-08-03T19:21:18.613Z -- unknown -- ninja%20forms%20contact%20form%20%E2%80%93%20the%20drag%20and%20drop%20form%20builder%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24163</link>
      <description>The AJAX action, wp_ajax_ninja_forms_sendwp_remote_install_handler, did not have a capability check on it, nor did it have any nonce protection, therefore making it possible for low-level users, such as subscribers, to install and activate the SendWP Ninja Forms Contact Form – The Drag and Drop Form Builder for WordPress WordPress plugin before 3.4.34 and retrieve the client_secret key needed to establish the SendWP connection while also installing the SendWP plugin.</description>
      <guid isPermaLink="false">CVE-2021-24163|2024-08-03T19:21:18.613Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1792|2024-08-03T00:16:59.933Z -- unknown -- quick%20subscribe
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1792</link>
      <description>The Quick Subscribe WordPress plugin through 1.7.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and leading to Stored XSS due to the lack of sanitisation and escaping in some of them</description>
      <guid isPermaLink="false">CVE-2022-1792|2024-08-03T00:16:59.933Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:43:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24924|2024-08-03T19:49:13.481Z -- unknown -- email%20log
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24924</link>
      <description>The Email Log WordPress plugin before 2.4.8 does not escape the d parameter before outputting it back in an attribute in the Log page, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24924|2024-08-03T19:49:13.481Z</guid>
      <pubDate>Mon, 06 Dec 2021 15:55:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25030|2024-08-03T19:49:14.585Z -- unknown -- events%20made%20easy
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25030</link>
      <description>The Events Made Easy WordPress plugin before 2.2.36 does not sanitise and escape the search_text parameter before using it in a SQL statement via the eme_searchmail AJAX action, available to any authenticated users. As a result, users with a role as low as subscriber can call it and perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2021-25030|2024-08-03T19:49:14.585Z</guid>
      <pubDate>Mon, 03 Jan 2022 12:49:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24227|2024-08-03T19:21:18.863Z -- unknown -- patreon%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24227</link>
      <description>The Jetpack Scan team identified a Local File Disclosure vulnerability in the Patreon WordPress plugin before 1.7.0 that could be abused by anyone visiting the site. Using this attack vector, an attacker could leak important internal files like wp-config.php, which contains database credentials and cryptographic keys used in the generation of nonces and cookies.</description>
      <guid isPermaLink="false">CVE-2021-24227|2024-08-03T19:21:18.863Z</guid>
      <pubDate>Mon, 12 Apr 2021 14:05:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-4208|2024-08-03T17:16:04.256Z -- unknown -- exportfeed%3A%20list%20woocommerce%20products%20on%20ebay%20store
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-4208</link>
      <description>The ExportFeed WordPress plugin through 2.0.1.0 does not sanitise and escape the product_id POST parameter before using it in a SQL statement, leading to a SQL injection vulnerability exploitable by high privilege users</description>
      <guid isPermaLink="false">CVE-2021-4208|2024-08-03T17:16:04.256Z</guid>
      <pubDate>Mon, 21 Feb 2022 10:45:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1647|2024-08-03T00:10:03.693Z -- unknown -- formcraft%20%E2%80%93%20contact%20form%20builder%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1647</link>
      <description>The FormCraft WordPress plugin before 1.2.6 does not sanitise and escape Field Labels, allowing high privilege users such as admin to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-1647|2024-08-03T00:10:03.693Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4355|2024-08-03T01:34:50.161Z -- unknown -- letsrecover
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4355</link>
      <description>The LetsRecover WordPress plugin before 1.2.0 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2022-4355|2024-08-03T01:34:50.161Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25039|2024-08-03T19:49:14.586Z -- unknown -- wordpress%20multisite%20content%20copier%2Fupdater
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25039</link>
      <description>The WordPress Multisite Content Copier/Updater WordPress plugin before 2.1.0 does not sanitise and escape the wmcc_content_type, wmcc_source_blog and wmcc_record_per_page parameters before outputting them back in attributes, leading to Reflected Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-25039|2024-08-03T19:49:14.586Z</guid>
      <pubDate>Mon, 07 Mar 2022 08:16:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24508|2024-08-03T19:35:19.732Z -- unknown -- smash%20balloon%20social%20post%20feed
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24508</link>
      <description>The Smash Balloon Social Post Feed WordPress plugin before 2.19.2 does not sanitise or escape the feedID POST parameter in its feed_locator AJAX action (available to both authenticated and unauthenticated users) before outputting a truncated version of it in the admin dashboard, leading to an unauthenticated Stored Cross-Site Scripting issue which will be executed in the context of a logged in administrator.</description>
      <guid isPermaLink="false">CVE-2021-24508|2024-08-03T19:35:19.732Z</guid>
      <pubDate>Mon, 13 Sep 2021 17:56:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24949|2024-08-03T19:49:13.413Z -- unknown -- the%20plus%20addons%20for%20elementor%20-%20pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24949</link>
      <description>The "WP Search Filters" widget of The Plus Addons for Elementor - Pro WordPress plugin before 5.0.7 does not sanitise and escape the option parameter before using it in a SQL statement, which could lead to SQL injection</description>
      <guid isPermaLink="false">CVE-2021-24949|2024-08-03T19:49:13.413Z</guid>
      <pubDate>Mon, 10 Jan 2022 15:30:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24761|2024-08-03T19:42:16.647Z -- unknown -- error%20log%20viewer%20by%20bestwebsoft
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24761</link>
      <description>The Error Log Viewer WordPress plugin before 1.1.2 does not perform nonce check when deleting a log file and does not have path traversal prevention, which could allow attackers to make a logged in admin delete arbitrary text files on the web server.</description>
      <guid isPermaLink="false">CVE-2021-24761|2024-08-03T19:42:16.647Z</guid>
      <pubDate>Tue, 01 Feb 2022 12:21:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24937|2024-08-03T19:49:13.474Z -- unknown -- asset%20cleanup%3A%20page%20speed%20booster
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24937</link>
      <description>The Asset CleanUp: Page Speed Booster WordPress plugin before 1.3.8.5 does not escape the wpacu_selected_sub_tab_area parameter before outputting it back in an attribute in an admin page, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24937|2024-08-03T19:49:13.474Z</guid>
      <pubDate>Tue, 01 Feb 2022 12:21:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25042|2024-08-03T19:49:14.590Z -- unknown -- wp%20visitor%20statistics%20%28real%20time%20traffic%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25042</link>
      <description>The WP Visitor Statistics (Real Time Traffic) WordPress plugin before 5.5 does not have authorisation and CSRF checks in the updateIpAddress AJAX action, allowing any authenticated user to call it, or make a logged in user do it via a CSRF attack and add an arbitrary IP address to exclude. Furthermore, due to the lack of validation, sanitisation and escaping, users could set a malicious value and perform Cross-Site Scripting attacks against logged in admin</description>
      <guid isPermaLink="false">CVE-2021-25042|2024-08-03T19:49:14.590Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25028|2024-08-03T19:49:14.594Z -- unknown -- event%20tickets
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25028</link>
      <description>The Event Tickets WordPress plugin before 5.2.2 does not validate the tribe_tickets_redirect_to parameter before redirecting the user to the given value, leading to an arbitrary redirect issue</description>
      <guid isPermaLink="false">CVE-2021-25028|2024-08-03T19:49:14.594Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:01:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1566|2024-08-03T00:10:03.472Z -- unknown -- quotes%20llama
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1566</link>
      <description>The Quotes llama WordPress plugin before 1.0.0 does not sanitise and escape Quotes, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed. The attack could also be performed by tricking an admin to import a malicious CSV file</description>
      <guid isPermaLink="false">CVE-2022-1566|2024-08-03T00:10:03.472Z</guid>
      <pubDate>Mon, 30 May 2022 08:35:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24525|2024-08-03T19:35:19.902Z -- unknown -- wordpress%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24525</link>
      <description>The Shortcodes Ultimate WordPress plugin before 5.10.2 allows users with Contributor roles to perform stored XSS via shortcode attributes. Note: the plugin is inconsistent in its handling of shortcode attributes; some do escape, most don't, and there are even some attributes that are insecure by design (like [su_button]'s onclick attribute).</description>
      <guid isPermaLink="false">CVE-2021-24525|2024-08-03T19:35:19.902Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1581|2024-08-03T00:10:03.682Z -- unknown -- wp-polls
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1581</link>
      <description>The WP-Polls WordPress plugin before 2.76.0 prioritizes getting a visitor's IP from certain HTTP headers over PHP's REMOTE_ADDR, which makes it possible to bypass IP-based limitations to vote in certain situations.</description>
      <guid isPermaLink="false">CVE-2022-1581|2024-08-03T00:10:03.682Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2352|2024-08-03T00:32:09.763Z -- unknown -- post%20smtp%20mailer%2Femail%20log
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2352</link>
      <description>The Post SMTP Mailer/Email Log WordPress plugin before 2.1.7 does not have proper authorisation in some AJAX actions, which could allow high privilege users such as admin to perform blind SSRF on multisite installations for example.</description>
      <guid isPermaLink="false">CVE-2022-2352|2024-08-03T00:32:09.763Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3865|2024-08-03T01:20:58.599Z -- unknown -- wp%20user%20merger
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3865</link>
      <description>The WP User Merger WordPress plugin before 1.5.3 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as admin</description>
      <guid isPermaLink="false">CVE-2022-3865|2024-08-03T01:20:58.599Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:50:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24534|2024-08-03T19:35:20.213Z -- unknown -- phonetrack%20meu%20site%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24534</link>
      <description>The PhoneTrack Meu Site Manager WordPress plugin through 0.1 does not sanitise or escape its "php_id" setting before outputting it back in an attribute in the page, leading to a stored Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-24534|2024-08-03T19:35:20.213Z</guid>
      <pubDate>Mon, 16 Aug 2021 10:48:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2133|2024-08-03T00:24:44.224Z -- unknown -- oauth%20single%20sign%20on%20%E2%80%93%20sso%20%28oauth%20client%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2133</link>
      <description>The OAuth Single Sign On WordPress plugin before 6.22.6 doesn't validate that OAuth access token requests are legitimate, which allows attackers to log onto the site with the only knowledge of a user's email address.</description>
      <guid isPermaLink="false">CVE-2022-2133|2024-08-03T00:24:44.224Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:36:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4320|2024-08-03T01:34:50.061Z -- unknown -- wordpress%20events%20calendar%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4320</link>
      <description>The WordPress Events Calendar WordPress plugin before 1.4.5 does not sanitize and escapes a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against both unauthenticated and authenticated users (such as high-privilege ones like admin).</description>
      <guid isPermaLink="false">CVE-2022-4320|2024-08-03T01:34:50.061Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4699|2024-08-03T01:48:39.997Z -- unknown -- mediaelement.js
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4699</link>
      <description>The MediaElement.js WordPress plugin through 4.2.8 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high-privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4699|2024-08-03T01:48:39.997Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3070|2024-08-03T01:00:10.579Z -- unknown -- generate%20pdf%20using%20contact%20form%207
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3070</link>
      <description>The Generate PDF WordPress plugin before 3.6 does not sanitise and escape its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-3070|2024-08-03T01:00:10.579Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24835|2024-08-03T19:42:17.420Z -- unknown -- wcfm%20%E2%80%93%20frontend%20manager%20for%20woocommerce%20along%20with%20bookings%20subscription%20listings%20compatible
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24835</link>
      <description>The WCFM – Frontend Manager for WooCommerce along with Bookings Subscription Listings Compatible WordPress plugin before 6.5.12, when used in combination with another WCFM - WooCommerce Multivendor plugin such as WCFM - WooCommerce Multivendor Marketplace, does not escape the withdrawal_vendor parameter before using it in a SQL statement, allowing low privilege users such as Subscribers to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2021-24835|2024-08-03T19:42:17.420Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:35:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24753|2024-08-03T19:42:16.632Z -- unknown -- rich%20reviews%20by%20starfish
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24753</link>
      <description>The Rich Reviews by Starfish WordPress plugin before 1.9.6 does not properly validate the orderby GET parameter of the pending reviews page before using it in a SQL statement, leading to an authenticated SQL injection issue</description>
      <guid isPermaLink="false">CVE-2021-24753|2024-08-03T19:42:16.632Z</guid>
      <pubDate>Mon, 27 Dec 2021 10:33:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24878|2024-08-03T19:49:12.683Z -- unknown -- supportcandy%20%E2%80%93%20helpdesk%20%26%20support%20ticket%20system
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24878</link>
      <description>The SupportCandy WordPress plugin before 2.2.7 does not sanitise and escape the query string before outputting it back in pages with the [wpsc_create_ticket] shortcode embed, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24878|2024-08-03T19:49:12.683Z</guid>
      <pubDate>Mon, 07 Feb 2022 15:47:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25006|2024-08-03T19:49:14.557Z -- unknown -- molie%20%E2%80%93%20instructure%20canvas%20linking%20tool
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25006</link>
      <description>The MOLIE WordPress plugin through 0.5 does not escape the course_id parameter before outputting it back in the admin dashboard, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-25006|2024-08-03T19:49:14.557Z</guid>
      <pubDate>Mon, 14 Mar 2022 14:41:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25071|2024-08-03T19:56:09.956Z -- unknown -- akismet%20privacy%20policies
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25071</link>
      <description>The WordPress plugin through 2.0.1 does not sanitise and escape the translation parameter before outputting it back in an admin page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-25071|2024-08-03T19:56:09.956Z</guid>
      <pubDate>Mon, 28 Mar 2022 17:22:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24633|2024-08-03T19:35:20.225Z -- unknown -- countdown%20block
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24633</link>
      <description>The Countdown Block WordPress plugin before 1.1.2 does not have authorisation in the eb_write_block_css AJAX action, which allows any authenticated user, such as Subscriber, to modify post contents displayed to users.</description>
      <guid isPermaLink="false">CVE-2021-24633|2024-08-03T19:35:20.225Z</guid>
      <pubDate>Mon, 27 Sep 2021 15:25:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3847|2024-08-03T01:20:58.782Z -- unknown -- showing%20url%20in%20qr%20code
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3847</link>
      <description>The Showing URL in QR Code WordPress plugin through 0.0.1 does not have CSRF check when updating its settings, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin or editor add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-3847|2024-08-03T01:20:58.782Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:50:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4142|2024-08-03T01:27:54.543Z -- unknown -- wordpress%20filter%20gallery%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4142</link>
      <description>The WordPress Filter Gallery Plugin WordPress plugin before 0.1.6 does not properly escape the filters passed in the ufg_gallery_filters ajax action before outputting them on the page, allowing a high privileged user such as an administrator to inject HTML or javascript to the plugin settings page, even when the unfiltered_html capability is disabled.</description>
      <guid isPermaLink="false">CVE-2022-4142|2024-08-03T01:27:54.543Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24578|2024-08-03T19:35:20.197Z -- unknown -- sportspress%20%E2%80%93%20sports%20club%20%26%20league%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24578</link>
      <description>The SportsPress WordPress plugin before 2.7.9 does not sanitise and escape its match_day parameter before outputting back in the Events backend page, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24578|2024-08-03T19:35:20.197Z</guid>
      <pubDate>Tue, 21 Dec 2021 08:45:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24169|2024-08-03T19:21:18.795Z -- unknown -- advanced%20order%20export%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24169</link>
      <description>This Advanced Order Export For WooCommerce WordPress plugin before 3.1.8 helps you to easily export WooCommerce order data. The tab parameter in the Admin Panel is vulnerable to reflected XSS.</description>
      <guid isPermaLink="false">CVE-2021-24169|2024-08-03T19:21:18.795Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24716|2024-08-03T19:42:16.663Z -- unknown -- modern%20events%20calendar%20lite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24716</link>
      <description>The Modern Events Calendar Lite WordPress plugin before 5.22.3 does not properly sanitize or escape values set by users with access to adjust settings withing wp-admin.</description>
      <guid isPermaLink="false">CVE-2021-24716|2024-08-03T19:42:16.663Z</guid>
      <pubDate>Mon, 01 Nov 2021 08:46:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2276|2024-08-03T00:32:09.597Z -- unknown -- wp%20edit%20menu
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2276</link>
      <description>The WP Edit Menu WordPress plugin before 1.5.0 does not have authorisation and CSRF in an AJAX action, which could allow unauthenticated attackers to delete arbitrary posts/pages from the blog</description>
      <guid isPermaLink="false">CVE-2022-2276|2024-08-03T00:32:09.597Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:00:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24516|2024-08-03T19:35:20.061Z -- unknown -- planso%20forms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24516</link>
      <description>The PlanSo Forms WordPress plugin through 2.6.3 does not escape the title of its Form before outputting it in attributes, allowing high privilege users such as admin to set XSS payload in it, even when the unfiltered_html is disallowed, leading to an Authenticated Stored Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-24516|2024-08-03T19:35:20.061Z</guid>
      <pubDate>Mon, 18 Oct 2021 13:45:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4830|2024-08-03T01:55:45.614Z -- unknown -- paid%20memberships%20pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4830</link>
      <description>The Paid Memberships Pro WordPress plugin before 2.9.9 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4830|2024-08-03T01:55:45.614Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24252|2024-08-03T19:28:22.564Z -- unknown -- event%20banner
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24252</link>
      <description>The Event Banner WordPress plugin through 1.3 does not verify the uploaded image file, allowing admin accounts to upload arbitrary files, such as .exe, .php, or others executable, leading to RCE. Due to the lack of CSRF check, the issue can also be used via such vector to achieve the same result, or via a LFI as authorisation checks are missing (but would require WP to be loaded)</description>
      <guid isPermaLink="false">CVE-2021-24252|2024-08-03T19:28:22.564Z</guid>
      <pubDate>Wed, 05 May 2021 18:39:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1572|2024-08-03T00:10:03.642Z -- unknown -- html2wp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1572</link>
      <description>The HTML2WP WordPress plugin through 1.0.0 does not have authorisation and CSRF checks in an AJAX action, available to any authenticated users such as subscriber, which could allow them to delete arbitrary file</description>
      <guid isPermaLink="false">CVE-2022-1572|2024-08-03T00:10:03.642Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:56:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4166|2024-08-03T01:34:48.788Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4166</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the addCountS POST parameter before concatenating it to an SQL query in 4_activate.php. This may allow malicious users with at least author privilege to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4166|2024-08-03T01:34:48.788Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24526|2024-08-03T19:35:20.030Z -- unknown -- form%20maker%20by%2010web%20%E2%80%93%20mobile-friendly%20drag%20%26%20drop%20contact%20form%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24526</link>
      <description>The Form Maker by 10Web – Mobile-Friendly Drag &amp; Drop Contact Form Builder WordPress plugin before 1.13.60 does not escape its Form Title before outputting it in an attribute when editing a form in the admin dashboard, leading to an authenticated Stored Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24526|2024-08-03T19:35:20.030Z</guid>
      <pubDate>Mon, 16 Aug 2021 10:48:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24822|2024-08-03T19:42:17.228Z -- unknown -- stylish%20cost%20calculator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24822</link>
      <description>The Stylish Cost Calculator WordPress plugin before 7.0.4 does not have any authorisation and CSRF checks on some of its AJAX actions (available to authenticated users), which could allow any authenticated users, such as subscriber to call them, and perform Stored Cross-Site Scripting attacks against logged in admin, as well as frontend users due to the lack of sanitisation and escaping in some parameters</description>
      <guid isPermaLink="false">CVE-2021-24822|2024-08-03T19:42:17.228Z</guid>
      <pubDate>Mon, 29 Nov 2021 08:25:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3247|2024-08-03T01:07:05.647Z -- unknown -- blog2social%3A%20social%20media%20auto%20post%20%26%20scheduler
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3247</link>
      <description>The Blog2Social: Social Media Auto Post &amp; Scheduler WordPress plugin before 6.9.10 does not have authorisation in an AJAX action, and does not ensure that the URL to make a request to is an external one. As a result, any authenticated users, such as subscriber could perform SSRF attacks</description>
      <guid isPermaLink="false">CVE-2022-3247|2024-08-03T01:07:05.647Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24800|2024-08-03T19:42:17.205Z -- unknown -- dw%20question%20answer%20pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24800</link>
      <description>The DW Question &amp; Answer Pro WordPress plugin through 1.3.4 does not check that the comment to edit belongs to the user making the request, allowing any user to edit other comments.</description>
      <guid isPermaLink="false">CVE-2021-24800|2024-08-03T19:42:17.205Z</guid>
      <pubDate>Mon, 25 Apr 2022 15:50:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24551|2024-08-03T19:35:19.902Z -- unknown -- edit%20comments
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24551</link>
      <description>The Edit Comments WordPress plugin through 0.3 does not sanitise, validate or escape the jal_edit_comments GET parameter before using it in a SQL statement, leading to a SQL injection issue</description>
      <guid isPermaLink="false">CVE-2021-24551|2024-08-03T19:35:19.902Z</guid>
      <pubDate>Mon, 23 Aug 2021 11:10:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24177|2024-08-03T19:21:18.692Z -- unknown -- file%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24177</link>
      <description>In the default configuration of the File Manager WordPress plugin before 7.1, a Reflected XSS can occur on the endpoint /wp-admin/admin.php?page=wp_file_manager_properties when a payload is submitted on the User-Agent parameter. The payload is then reflected back on the web application response.</description>
      <guid isPermaLink="false">CVE-2021-24177|2024-08-03T19:21:18.692Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24393|2024-08-03T19:28:23.800Z -- unknown -- comment%20highlighter
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24393</link>
      <description>A c GET parameter of the Comment Highlighter WordPress plugin through 0.13 is not properly sanitised, escaped or validated before inserting to a SQL statement, leading to SQL injection.</description>
      <guid isPermaLink="false">CVE-2021-24393|2024-08-03T19:28:23.800Z</guid>
      <pubDate>Mon, 06 Sep 2021 11:09:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4480|2024-08-03T01:41:45.004Z -- unknown -- click%20to%20chat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4480</link>
      <description>The Click to Chat WordPress plugin before 3.18.1 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4480|2024-08-03T01:41:45.004Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4784|2024-08-03T01:48:40.467Z -- unknown -- hueman%20addons
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4784</link>
      <description>The Hueman Addons WordPress plugin through 2.3.3 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4784|2024-08-03T01:48:40.467Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3137|2024-08-03T01:00:10.436Z -- unknown -- taskbuilder%20%E2%80%93%20wordpress%20project%20%26%20task%20management%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3137</link>
      <description>The Taskbuilder WordPress plugin before 1.0.8 does not validate and sanitise task's attachments, which could allow any authenticated user (such as subscriber) creating a task to perform Stored Cross-Site Scripting by attaching a malicious SVG file</description>
      <guid isPermaLink="false">CVE-2022-3137|2024-08-03T01:00:10.436Z</guid>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25082|2024-08-03T19:56:09.873Z -- unknown -- popup%20builder%20%E2%80%93%20create%20highly%20converting%2C%20mobile%20friendly%20marketing%20popups.
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25082</link>
      <description>The Popup Builder WordPress plugin before 4.0.7 does not validate and sanitise the sgpb_type parameter before using it in a require statement, leading to a Local File Inclusion issue. Furthermore, since the beginning of the string can be controlled, the issue can lead to RCE vulnerability via wrappers such as PHAR</description>
      <guid isPermaLink="false">CVE-2021-25082|2024-08-03T19:56:09.873Z</guid>
      <pubDate>Mon, 21 Feb 2022 10:45:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3194|2024-08-03T01:00:10.810Z -- unknown -- dokan
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3194</link>
      <description>The Dokan WordPress plugin before 3.6.4 allows vendors to inject arbitrary javascript in product reviews, which may allow them to run stored XSS attacks against other users like site administrators.</description>
      <guid isPermaLink="false">CVE-2022-3194|2024-08-03T01:00:10.810Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:53:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24787|2024-08-03T19:42:17.334Z -- unknown -- client%20invoicing%20by%20sprout%20invoices%20%E2%80%93%20easy%20estimates%20and%20invoices%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24787</link>
      <description>The Client Invoicing by Sprout Invoices WordPress plugin before 19.9.7 does not sanitise and escape some of its settings, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24787|2024-08-03T19:42:17.334Z</guid>
      <pubDate>Wed, 17 Nov 2021 10:15:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4471|2024-08-03T01:41:44.920Z -- unknown -- yarpp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4471</link>
      <description>The YARPP WordPress plugin before 5.30.3 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4471|2024-08-03T01:41:44.920Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1627|2024-08-03T00:10:03.670Z -- unknown -- my%20private%20site
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1627</link>
      <description>The My Private Site WordPress plugin before 3.0.8 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1627|2024-08-03T00:10:03.670Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:57:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24973|2024-08-03T19:49:14.017Z -- unknown -- site%20reviews
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24973</link>
      <description>The Site Reviews WordPress plugin before 5.17.3 does not sanitise and escape the site-reviews parameter of the glsr_action AJAX action (available to unauthenticated and any authenticated users), allowing them to perform Cross-Site Scripting attacks against logged in admins viewing the Tool dashboard of the plugin</description>
      <guid isPermaLink="false">CVE-2021-24973|2024-08-03T19:49:14.017Z</guid>
      <pubDate>Mon, 03 Jan 2022 12:49:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3302|2024-08-03T01:07:06.448Z -- unknown -- spam%20protection%2C%20antispam%2C%20firewall%20by%20cleantalk
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3302</link>
      <description>The Spam protection, AntiSpam, FireWall by CleanTalk WordPress plugin before 5.185.1 does not validate ids before using them in a SQL statement, which could lead to SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2022-3302|2024-08-03T01:07:06.448Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24577|2024-08-03T19:35:20.255Z -- unknown -- coming%20soon%20and%20maintenance%20mode
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24577</link>
      <description>The Coming soon and Maintenance mode WordPress plugin before 3.5.3 does not properly sanitize inputs submitted by authenticated users when setting adding or modifying coming soon or maintenance mode pages, leading to stored XSS.</description>
      <guid isPermaLink="false">CVE-2021-24577|2024-08-03T19:35:20.255Z</guid>
      <pubDate>Mon, 11 Oct 2021 10:45:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25108|2024-08-03T19:56:10.877Z -- unknown -- ip2location%20country%20blocker
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25108</link>
      <description>The IP2Location Country Blocker WordPress plugin before 2.26.6 does not have CSRF check in the ip2location_country_blocker_save_rules AJAX action, allowing attackers to make a logged in admin block arbitrary country, or block all of them at once, preventing users from accessing the frontend.</description>
      <guid isPermaLink="false">CVE-2021-25108|2024-08-03T19:56:10.877Z</guid>
      <pubDate>Mon, 07 Feb 2022 15:47:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1832|2024-08-03T00:17:00.782Z -- unknown -- capa%20protect
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1832</link>
      <description>The CaPa Protect WordPress plugin through 0.5.8.2 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and disable the applied protection.</description>
      <guid isPermaLink="false">CVE-2022-1832|2024-08-03T00:17:00.782Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24135|2024-08-03T19:21:18.346Z -- unknown -- wp%20customer%20reviews
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24135</link>
      <description>Unvalidated input and lack of output encoding in the WP Customer Reviews WordPress plugin, versions before 3.4.3, lead to multiple Stored Cross-Site Scripting vulnerabilities allowing remote attackers to inject arbitrary JavaScript code or HTML.</description>
      <guid isPermaLink="false">CVE-2021-24135|2024-08-03T19:21:18.346Z</guid>
      <pubDate>Thu, 18 Mar 2021 14:57:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2386|2024-08-03T00:39:07.934Z -- unknown -- crowdsignal%20dashboard%20%E2%80%93%20polls%2C%20surveys%20%26%20more
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2386</link>
      <description>The Crowdsignal Dashboard WordPress plugin before 3.0.8 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2386|2024-08-03T00:39:07.934Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:48:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24627|2024-08-03T19:35:20.233Z -- unknown -- g%20auto-hyperlink
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24627</link>
      <description>The G Auto-Hyperlink WordPress plugin through 1.0.1 does not sanitise or escape an 'id' GET parameter before using it in a SQL statement, to select data to be displayed in the admin dashboard, leading to an authenticated SQL injection</description>
      <guid isPermaLink="false">CVE-2021-24627|2024-08-03T19:35:20.233Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:34:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24954|2024-08-03T19:49:13.543Z -- unknown -- user%20registration%2C%20login%20form%2C%20user%20profile%20%26%20membership%20%E2%80%93%20profilepress%20%28formerly%20wp%20user%20avatar%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24954</link>
      <description>The User Registration, Login Form, User Profile &amp; Membership WordPress plugin before 3.2.3 does not sanitise and escape the ppress_cc_data parameter before outputting it back in an attribute of an admin dashboard page, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24954|2024-08-03T19:49:13.543Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:41:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24907|2024-08-03T19:49:13.505Z -- unknown -- contact%20form%2C%20drag%20and%20drop%20form%20builder%20for%20wordpress%20%E2%80%93%20everest%20forms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24907</link>
      <description>The Contact Form, Drag and Drop Form Builder for WordPress plugin before 1.8.0 does not escape the status parameter before outputting it back in an attribute, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24907|2024-08-03T19:49:13.505Z</guid>
      <pubDate>Tue, 21 Dec 2021 08:45:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3124|2024-08-03T01:00:10.519Z -- unknown -- frontend%20file%20manager%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3124</link>
      <description>The Frontend File Manager Plugin WordPress plugin before 21.3 allows any unauthenticated user to rename uploaded files from users. Furthermore, due to the lack of validation in the destination filename, this could allow allow them to change the content of arbitrary files on the web server</description>
      <guid isPermaLink="false">CVE-2022-3124|2024-08-03T01:00:10.519Z</guid>
      <pubDate>Mon, 03 Oct 2022 13:45:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24691|2024-08-03T19:42:16.107Z -- unknown -- quiz%20and%20survey%20master%20%E2%80%93%20best%20quiz%2C%20exam%20and%20survey%20plugin%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24691</link>
      <description>The Quiz And Survey Master WordPress plugin before 7.3.2 does not escape the Quiz Url Slug setting before outputting it in some pages, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24691|2024-08-03T19:42:16.107Z</guid>
      <pubDate>Mon, 11 Oct 2021 10:45:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1563|2024-08-03T00:10:03.470Z -- unknown -- wp-graphql-woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1563</link>
      <description>The WPGraphQL WooCommerce WordPress plugin before 0.12.4 does not prevent unauthenticated attackers from enumerating a shop's coupon codes and values via GraphQL.</description>
      <guid isPermaLink="false">CVE-2022-1563|2024-08-03T00:10:03.470Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:50:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1724|2024-08-03T00:16:58.963Z -- unknown -- simple%20membership
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1724</link>
      <description>The Simple Membership WordPress plugin before 4.1.1 does not properly sanitise and escape parameters before outputting them back in AJAX actions, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-1724|2024-08-03T00:16:58.963Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3451|2024-08-03T01:07:06.695Z -- unknown -- product%20stock%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3451</link>
      <description>The Product Stock Manager WordPress plugin before 1.0.5 does not have authorisation and proper CSRF checks in multiple AJAX actions, allowing users with a role as low as subscriber to call them. One action in particular could allow to update arbitrary options</description>
      <guid isPermaLink="false">CVE-2022-3451|2024-08-03T01:07:06.695Z</guid>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24613|2024-08-03T19:35:20.219Z -- unknown -- post%20views%20counter
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24613</link>
      <description>The Post Views Counter WordPress plugin before 1.3.5 does not sanitise or escape its Post Views Label settings, which could allow high privilege users to perform Cross-Site Scripting attacks in the frontend even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24613|2024-08-03T19:35:20.219Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3912|2024-08-03T01:20:58.758Z -- unknown -- user%20registration
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3912</link>
      <description>The User Registration WordPress plugin before 2.2.4.1 does not properly restrict the files to be uploaded via an AJAX action available to both unauthenticated and authenticated users, which could allow unauthenticated users to upload PHP files for example.</description>
      <guid isPermaLink="false">CVE-2022-3912|2024-08-03T01:20:58.758Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24655|2024-08-03T19:35:20.306Z -- unknown -- wp%20user%20manager%20%E2%80%93%20user%20profile%20builder%20%26%20membership
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24655</link>
      <description>The WP User Manager WordPress plugin before 2.6.3 does not ensure that the user ID to reset the password of is related to the reset key given. As a result, any authenticated user can reset the password (to an arbitrary value) of any user knowing only their ID, and gain access to their account.</description>
      <guid isPermaLink="false">CVE-2021-24655|2024-08-03T19:35:20.306Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:35:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4670|2024-08-03T01:48:39.487Z -- unknown -- pdf.js%20viewer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4670</link>
      <description>The PDF.js Viewer WordPress plugin before 2.1.8 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-4670|2024-08-03T01:48:39.487Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3131|2024-08-03T01:00:09.699Z -- unknown -- search%20logger%20%E2%80%93%20know%20what%20your%20visitors%20search
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3131</link>
      <description>The Search Logger WordPress plugin through 0.9 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users</description>
      <guid isPermaLink="false">CVE-2022-3131|2024-08-03T01:00:09.699Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1967|2024-08-03T00:24:43.403Z -- unknown -- wp%20championship
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1967</link>
      <description>The WP Championship WordPress plugin before 9.3 is lacking CSRF checks in various places, allowing attackers to make a logged in admin perform unwanted actions, such as create and delete arbitrary teams as well as update the plugin's settings. Due to the lack of sanitisation and escaping, it could also lead to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2022-1967|2024-08-03T00:24:43.403Z</guid>
      <pubDate>Mon, 04 Jul 2022 13:05:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4658|2024-08-03T01:48:40.085Z -- unknown -- rssimport
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4658</link>
      <description>The RSSImport WordPress plugin through 4.6.1 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4658|2024-08-03T01:48:40.085Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24221|2024-08-03T19:21:19.093Z -- unknown -- quiz%20and%20survey%20master%20%E2%80%93%20best%20quiz%2C%20exam%20and%20survey%20plugin%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24221</link>
      <description>The Quiz And Survey Master – Best Quiz, Exam and Survey Plugin for WordPress plugin before 7.1.12 did not sanitise the result_id GET parameter on pages with the [qsm_result] shortcode without id attribute, concatenating it in a SQL statement and leading to an SQL injection. The lowest role allowed to use this shortcode in post or pages being author, such user could gain unauthorised access to the DBMS. If the shortcode (without the id attribute) is embed on a public page or post, then unauthenticated users could exploit the injection.</description>
      <guid isPermaLink="false">CVE-2021-24221|2024-08-03T19:21:19.093Z</guid>
      <pubDate>Mon, 12 Apr 2021 14:03:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24719|2024-08-03T19:42:16.657Z -- unknown -- enfold
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24719</link>
      <description>The Enfold Enfold WordPress theme before 4.8.4 was vulnerable to Reflected Cross-Site Scripting (XSS). The vulnerability is present on Enfold versions previous than 4.8.4 which use Avia Page Builder.</description>
      <guid isPermaLink="false">CVE-2021-24719|2024-08-03T19:42:16.657Z</guid>
      <pubDate>Mon, 11 Oct 2021 10:45:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24747|2024-08-03T19:42:16.686Z -- unknown -- seo%20booster
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24747</link>
      <description>The SEO Booster WordPress plugin before 3.8 allows for authenticated SQL injection via the "fn_my_ajaxified_dataloader_ajax" AJAX request as the $_REQUEST['order'][0]['dir'] parameter is not properly escaped leading to blind and error-based SQL injections.</description>
      <guid isPermaLink="false">CVE-2021-24747|2024-08-03T19:42:16.686Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:40:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2563|2024-08-03T00:39:08.066Z -- unknown -- tutor%20lms%20%E2%80%93%20elearning%20and%20online%20course%20solution
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2563</link>
      <description>The Tutor LMS WordPress plugin before 2.0.10 does not escape some course parameters, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2563|2024-08-03T00:39:08.066Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3824|2024-08-03T01:20:58.448Z -- unknown -- wp%20admin%20ui%20customize
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3824</link>
      <description>The WP Admin UI Customize WordPress plugin before 1.5.13 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3824|2024-08-03T01:20:58.448Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24968|2024-08-03T19:49:14.382Z -- unknown -- ultimate%20faq%20%E2%80%93%20wordpress%20faq%20and%20accordion%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24968</link>
      <description>The Ultimate FAQ WordPress plugin before 2.1.2 does not have capability and CSRF checks in the ewd_ufaq_welcome_add_faq and ewd_ufaq_welcome_add_faq_page AJAX actions, available to any authenticated users. As a result, any users, with a role as low as Subscriber could create FAQ and FAQ questions</description>
      <guid isPermaLink="false">CVE-2021-24968|2024-08-03T19:49:14.382Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:00:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2546|2024-08-03T00:39:07.984Z -- unknown -- all-in-one%20wp%20migration
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2546</link>
      <description>The All-in-One WP Migration WordPress plugin before 7.63 uses the wrong content type, and does not properly escape the response from the ai1wm_export AJAX action, allowing an attacker to craft a request that when submitted by any visitor will inject arbitrary html or javascript into the response that will be executed in the victims session. Note: This requires knowledge of a static secret key</description>
      <guid isPermaLink="false">CVE-2022-2546|2024-08-03T00:39:07.984Z</guid>
      <pubDate>Thu, 02 Feb 2023 08:28:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4023|2024-08-03T01:27:54.410Z -- unknown -- 3dprint
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4023</link>
      <description>The 3DPrint WordPress plugin before 3.5.6.9 does not protect against CSRF attacks in the modified version of Tiny File Manager included with the plugin, allowing an attacker to craft a malicious request that will create an archive of any files or directories on the target server by tricking a logged in admin into submitting a form. Furthermore the created archive has a predictable location and name, allowing the attacker to download the file if they know the time at which the form was submitted, making it possible to leak sensitive files like the WordPress configuration containing database credentials and secrets.</description>
      <guid isPermaLink="false">CVE-2022-4023|2024-08-03T01:27:54.410Z</guid>
      <pubDate>Mon, 17 Jul 2023 13:29:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24455|2024-08-03T19:35:19.191Z -- unknown -- tutor%20lms%20%E2%80%93%20elearning%20and%20online%20course%20solution
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24455</link>
      <description>The Tutor LMS – eLearning and online course solution WordPress plugin before 1.9.2 did not escape the Summary field of Announcements (when outputting it in an attribute), which can be created by users as low as Tutor Instructor. This lead to a Stored Cross-Site Scripting issue, which is triggered when viewing the Announcements list, and could result in privilege escalation when viewed by an admin.</description>
      <guid isPermaLink="false">CVE-2021-24455|2024-08-03T19:35:19.191Z</guid>
      <pubDate>Mon, 02 Aug 2021 10:32:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4674|2024-08-03T01:48:39.549Z -- unknown -- ibtana
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4674</link>
      <description>The Ibtana WordPress plugin before 1.1.8.8 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack</description>
      <guid isPermaLink="false">CVE-2022-4674|2024-08-03T01:48:39.549Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24918|2024-08-03T19:49:13.472Z -- unknown -- smash%20balloon%20social%20post%20feed
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24918</link>
      <description>The Smash Balloon Social Post Feed WordPress plugin before 4.0.1 did not have any privilege or nonce validation before saving the plugin's setting. As a result, any logged-in user on a vulnerable site could update the settings and store rogue JavaScript on each of its posts and pages.</description>
      <guid isPermaLink="false">CVE-2021-24918|2024-08-03T19:49:13.472Z</guid>
      <pubDate>Mon, 29 Nov 2021 08:25:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24260|2024-08-03T19:28:22.726Z -- unknown -- livemesh%20addons%20for%20elementor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24260</link>
      <description>The “Livemesh Addons for Elementor” WordPress Plugin before 6.8 has several widgets that are vulnerable to stored Cross-Site Scripting (XSS) by lower-privileged users such as contributors, all via a similar method.</description>
      <guid isPermaLink="false">CVE-2021-24260|2024-08-03T19:28:22.726Z</guid>
      <pubDate>Wed, 05 May 2021 18:28:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2737|2024-08-03T00:46:04.156Z -- unknown -- wp%20staging%20%E2%80%93%20backup%20duplicator%20%26%20migration
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2737</link>
      <description>The WP STAGING WordPress plugin before 2.9.18 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2737|2024-08-03T00:46:04.156Z</guid>
      <pubDate>Fri, 16 Sep 2022 08:40:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4299|2024-08-03T01:34:50.111Z -- unknown -- metricool
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4299</link>
      <description>The Metricool WordPress plugin before 1.18 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4299|2024-08-03T01:34:50.111Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24257|2024-08-03T19:28:22.250Z -- unknown -- premium%20addons%20for%20elementor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24257</link>
      <description>The “Premium Addons for Elementor” WordPress Plugin before 4.2.8 has several widgets that are vulnerable to stored Cross-Site Scripting (XSS) by lower-privileged users such as contributors, all via a similar method.</description>
      <guid isPermaLink="false">CVE-2021-24257|2024-08-03T19:28:22.250Z</guid>
      <pubDate>Wed, 05 May 2021 18:28:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3408|2024-08-03T01:07:06.513Z -- unknown -- wp%20word%20count
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3408</link>
      <description>The WP Word Count WordPress plugin through 3.2.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-3408|2024-08-03T01:07:06.513Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24433|2024-08-03T19:28:24.030Z -- unknown -- simple%20sort%26search
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24433</link>
      <description>The simple sort&amp;search WordPress plugin through 0.0.3 does not make sure that the indexurl parameter of the shortcodes "category_sims", "order_sims", "orderby_sims", "period_sims", and "tag_sims" use allowed URL protocols, which can lead to stored cross-site scripting by users with a role as low as Contributor</description>
      <guid isPermaLink="false">CVE-2021-24433|2024-08-03T19:28:24.030Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:49:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24889|2024-08-03T19:49:13.490Z -- unknown -- ninja%20forms%20contact%20form%20%E2%80%93%20the%20drag%20and%20drop%20form%20builder%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24889</link>
      <description>The Ninja Forms Contact Form WordPress plugin before 3.6.4 does not escape keys of the fields POST parameter, which could allow high privilege users to perform SQL injections attacks</description>
      <guid isPermaLink="false">CVE-2021-24889|2024-08-03T19:49:13.490Z</guid>
      <pubDate>Mon, 29 Nov 2021 08:25:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4119|2024-08-03T01:27:54.415Z -- unknown -- image%20optimizer%2C%20resizer%20and%20cdn
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4119</link>
      <description>The Image Optimizer, Resizer and CDN WordPress plugin before 6.8.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4119|2024-08-03T01:27:54.415Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24558|2024-08-03T19:35:20.186Z -- unknown -- project%20status
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24558</link>
      <description>The pspin_duplicate_post_save_as_new_post function of the Project Status WordPress plugin through 1.6 does not sanitise, validate or escape the post GET parameter passed to it before outputting it in an error message when the related post does not exist, leading to a reflected XSS issue</description>
      <guid isPermaLink="false">CVE-2021-24558|2024-08-03T19:35:20.186Z</guid>
      <pubDate>Mon, 23 Aug 2021 11:10:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24479|2024-08-03T19:35:19.406Z -- unknown -- drawblog
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24479</link>
      <description>The DrawBlog WordPress plugin through 0.90 does not sanitise or validate some of its settings before outputting them back in the page, leading to an authenticated stored Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24479|2024-08-03T19:35:19.406Z</guid>
      <pubDate>Mon, 02 Aug 2021 10:32:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3244|2024-08-03T01:00:10.691Z -- unknown -- import%20all%20xml%2C%20csv%20%26%20txt%20into%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3244</link>
      <description>The Import all XML, CSV &amp; TXT WordPress plugin before 6.5.8 does not have authorisation in some places, which could allow any authenticated users to access some of the plugin features if they manage to get the related nonce</description>
      <guid isPermaLink="false">CVE-2022-3244|2024-08-03T01:00:10.691Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1599|2024-08-03T00:10:03.993Z -- unknown -- admin%20management%20xtended
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1599</link>
      <description>The Admin Management Xtended WordPress plugin before 2.4.5 does not have CSRF checks in some of its AJAX actions, allowing attackers to make a logged users with the right capabilities to call them. This can lead to changes in post status (draft, published), slug, post date, comment status (enabled, disabled) and more.</description>
      <guid isPermaLink="false">CVE-2022-1599|2024-08-03T00:10:03.993Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:56:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1542|2024-08-03T00:10:02.947Z -- unknown -- hpb%20dashboard
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1542</link>
      <description>The HPB Dashboard WordPress plugin through 1.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-1542|2024-08-03T00:10:02.947Z</guid>
      <pubDate>Mon, 30 May 2022 08:35:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24212|2024-08-03T19:21:18.794Z -- unknown -- woocommerce%20help%20scout
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24212</link>
      <description>The WooCommerce Help Scout WordPress plugin before 2.9.1 (https://woocommerce.com/products/woocommerce-help-scout/) allows unauthenticated users to upload any files to the site which by default will end up in wp-content/uploads/hstmp.</description>
      <guid isPermaLink="false">CVE-2021-24212|2024-08-03T19:21:18.794Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24490|2024-08-03T19:35:19.462Z -- unknown -- email%20artillery%20%28mass%20email%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24490</link>
      <description>The Email Artillery (MASS EMAIL) WordPress plugin through 4.1 does not properly check the uploaded files from the Import Emails feature, allowing arbitrary files to be uploaded. Furthermore, the plugin is also lacking any CSRF check, allowing such issue to be exploited via a CSRF attack as well. However, due to the presence of a .htaccess, denying access to everything in the folder the file is uploaded to, the malicious uploaded file will only be accessible on Web Servers such as Nginx/IIS</description>
      <guid isPermaLink="false">CVE-2021-24490|2024-08-03T19:35:19.462Z</guid>
      <pubDate>Mon, 13 Sep 2021 17:56:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4150|2024-08-03T01:27:54.549Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4150</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the option_id POST parameter before concatenating it to an SQL query in order-custom-fields-with-and-without-search.php. This may allow malicious users with at least author privilege to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4150|2024-08-03T01:27:54.549Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25065|2024-08-03T19:56:09.480Z -- unknown -- smash%20balloon%20social%20post%20feed
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25065</link>
      <description>The Smash Balloon Social Post Feed WordPress plugin before 4.1.1 was affected by a reflected XSS in custom-facebook-feed in cff-top admin page.</description>
      <guid isPermaLink="false">CVE-2021-25065|2024-08-03T19:56:09.480Z</guid>
      <pubDate>Mon, 17 Jan 2022 13:00:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24675|2024-08-03T19:42:16.224Z -- unknown -- one%20user%20avatar%20%7C%20user%20profile%20picture
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24675</link>
      <description>The One User Avatar WordPress plugin before 2.3.7 does not check for CSRF when updating the Avatar in page where the [avatar_upload] shortcode is embed. As a result, attackers could make logged in user change their avatar via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2021-24675|2024-08-03T19:42:16.224Z</guid>
      <pubDate>Mon, 18 Oct 2021 13:45:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1562|2024-08-03T00:10:03.556Z -- unknown -- enable%20svg
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1562</link>
      <description>The Enable SVG WordPress plugin before 1.4.0 does not sanitise uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads</description>
      <guid isPermaLink="false">CVE-2022-1562|2024-08-03T00:10:03.556Z</guid>
      <pubDate>Mon, 30 May 2022 08:35:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3691|2024-08-03T01:14:03.244Z -- unknown -- deepl%20pro%20api%20translation%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3691</link>
      <description>The DeepL Pro API translation plugin WordPress plugin before 1.7.5 discloses sensitive information (including the DeepL API key) in files that are publicly accessible to an external, unauthenticated visitor.</description>
      <guid isPermaLink="false">CVE-2022-3691|2024-08-03T01:14:03.244Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1895|2024-08-03T00:17:00.918Z -- unknown -- underconstruction
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1895</link>
      <description>The underConstruction WordPress plugin before 1.20 does not have CSRF check in place when deactivating the construction mode, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1895|2024-08-03T00:17:00.918Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24771|2024-08-03T19:42:17.001Z -- unknown -- inspirational%20quote%20rotator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24771</link>
      <description>The Inspirational Quote Rotator WordPress plugin through 1.0.0 does not sanitize and escape some of its quote fields when adding/editing a quote as admin, leading to Stored Cross-Site scripting issues when the quote is output in the "Quotes list" even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24771|2024-08-03T19:42:17.001Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:40:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4673|2024-08-03T01:48:39.844Z -- unknown -- rate%20my%20post
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4673</link>
      <description>The Rate my Post WordPress plugin before 3.3.9 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4673|2024-08-03T01:48:39.844Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25057|2024-08-03T19:49:14.631Z -- unknown -- translation%20exchange%20%E2%80%93%20translate%20your%20wordpress%20site%20in%20minutes%21
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25057</link>
      <description>The Translation Exchange WordPress plugin through 1.0.14 was vulnerable to Authenticated Stored Cross-Site Scripting (XSS) within the Project Key text field found in the plugin's settings.</description>
      <guid isPermaLink="false">CVE-2021-25057|2024-08-03T19:49:14.631Z</guid>
      <pubDate>Mon, 21 Feb 2022 10:45:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4754|2024-08-03T01:48:40.322Z -- unknown -- easy%20social%20box%20%2F%20page%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4754</link>
      <description>The Easy Social Box / Page Plugin WordPress plugin through 4.1.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4754|2024-08-03T01:48:40.322Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:51:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24798|2024-08-03T19:42:17.188Z -- unknown -- wp%20header%20images
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24798</link>
      <description>The WP Header Images WordPress plugin before 2.0.1 does not sanitise and escape the t parameter before outputting it back in the plugin's settings page, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24798|2024-08-03T19:42:17.188Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:35:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1846|2024-08-03T00:17:00.834Z -- unknown -- tiny%20contact%20form
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1846</link>
      <description>The Tiny Contact Form WordPress plugin through 0.7 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1846|2024-08-03T00:17:00.834Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:58:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2913|2024-08-03T00:52:59.981Z -- unknown -- login%20no%20captcha%20recaptcha
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2913</link>
      <description>The Login No Captcha reCAPTCHA WordPress plugin before 1.7 doesn't check the proper IP address allowing attackers to spoof IP addresses on the allow list and bypass the need for captcha on the login screen.</description>
      <guid isPermaLink="false">CVE-2022-2913|2024-08-03T00:52:59.981Z</guid>
      <pubDate>Fri, 16 Sep 2022 08:40:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3632|2024-08-03T01:14:02.950Z -- unknown -- oauth%20client%20by%20digitialpixies
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3632</link>
      <description>The OAuth Client by DigitialPixies WordPress plugin through 1.1.0 does not have CSRF checks in some places, which could allow attackers to make logged-in users perform unwanted actions.</description>
      <guid isPermaLink="false">CVE-2022-3632|2024-08-03T01:14:02.950Z</guid>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2532|2024-08-03T00:39:07.947Z -- unknown -- feed%20them%20social%20%E2%80%93%20for%20twitter%20feed%2C%20youtube%20and%20more
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2532</link>
      <description>The Feed Them Social WordPress plugin before 3.0.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2532|2024-08-03T00:39:07.947Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:03:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24828|2024-08-03T19:42:17.224Z -- unknown -- mortgage%20calculator%20%2F%20loan%20calculator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24828</link>
      <description>The Mortgage Calculator / Loan Calculator WordPress plugin before 1.5.17 does not escape the some of the attributes of its mlcalc shortcode before outputting them, which could allow users with a role as low as contributor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2021-24828|2024-08-03T19:42:17.224Z</guid>
      <pubDate>Mon, 03 Jan 2022 12:49:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2381|2024-08-03T00:39:06.339Z -- unknown -- e%20unlocked%20%E2%80%93%20student%20result
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2381</link>
      <description>The E Unlocked - Student Result WordPress plugin through 1.0.4 is lacking CSRF and validation when uploading the School logo, which could allow attackers to make a logged in admin upload arbitrary files, such as PHP via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-2381|2024-08-03T00:39:06.339Z</guid>
      <pubDate>Mon, 15 Aug 2022 08:37:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3831|2024-08-03T01:20:58.383Z -- unknown -- recaptcha
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3831</link>
      <description>The reCAPTCHA WordPress plugin through 1.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3831|2024-08-03T01:20:58.383Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1772|2024-08-03T00:16:59.892Z -- unknown -- google%20places%20reviews
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1772</link>
      <description>The Google Places Reviews WordPress plugin before 2.0.0 does not properly escape its Google API key setting, which is reflected on the site's administration panel. A malicious administrator could abuse this bug, in a multisite WordPress configuration, to trick super-administrators into viewing the booby-trapped payload and taking over their account.</description>
      <guid isPermaLink="false">CVE-2022-1772|2024-08-03T00:16:59.892Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4346|2024-08-03T01:34:50.170Z -- unknown -- all-in-one%20security%20%28aios%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4346</link>
      <description>The All-In-One Security (AIOS) WordPress plugin before 5.1.3 leaked settings of the plugin publicly, including the used email address.</description>
      <guid isPermaLink="false">CVE-2022-4346|2024-08-03T01:34:50.170Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2903|2024-08-03T00:53:00.439Z -- unknown -- ninja%20forms%20contact%20form%20%E2%80%93%20the%20drag%20and%20drop%20form%20builder%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2903</link>
      <description>The Ninja Forms Contact Form WordPress plugin before 3.6.13 unserialises the content of an imported file, which could lead to PHP object injections issues when an admin import (intentionally or not) a malicious file and a suitable gadget chain is present on the blog.</description>
      <guid isPermaLink="false">CVE-2022-2903|2024-08-03T00:53:00.439Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24810|2024-08-03T19:42:17.265Z -- unknown -- wp%20event%20manager%20%E2%80%93%20easily%20build%20your%20calendar%20of%20events%21
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24810</link>
      <description>The WP Event Manager WordPress plugin before 3.1.23 does not escape some of its Field Editor settings when outputting them, allowing high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24810|2024-08-03T19:42:17.265Z</guid>
      <pubDate>Mon, 07 Mar 2022 08:16:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2423|2024-08-03T00:39:07.417Z -- unknown -- dw%20promobar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2423</link>
      <description>The DW Promobar WordPress plugin through 1.0.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2423|2024-08-03T00:39:07.417Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:50:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24794|2024-08-03T19:42:17.200Z -- unknown -- connections%20business%20directory
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24794</link>
      <description>The Connections Business Directory WordPress plugin before 10.4.3 does not escape the Address settings when creating an Entry, which could allow high privilege users to perform Cross-Site Scripting when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24794|2024-08-03T19:42:17.200Z</guid>
      <pubDate>Mon, 01 Nov 2021 08:46:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3220|2024-08-03T01:00:10.606Z -- unknown -- advanced%20comment%20form
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3220</link>
      <description>The Advanced Comment Form WordPress plugin before 1.2.1 does not sanitise and escape its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-3220|2024-08-03T01:00:10.606Z</guid>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24971|2024-08-03T19:49:14.149Z -- unknown -- wp%20responsive%20menu
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24971</link>
      <description>The WP Responsive Menu WordPress plugin before 3.1.7.1 does not have capability and CSRF checks in the wpr_live_update AJAX action, as well as do not sanitise and escape some of the data submitted. As a result, any authenticated, such as subscriber could update the plugin's settings and perform Cross-Site Scripting attacks against all visitor and users on the frontend</description>
      <guid isPermaLink="false">CVE-2021-24971|2024-08-03T19:49:14.149Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4745|2024-08-03T01:48:40.413Z -- unknown -- wp%20customer%20area
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4745</link>
      <description>The WP Customer Area WordPress plugin before 8.1.4 does not have CSRF checks when performing some actions such as chmod, mkdir and copy, which could allow attackers to make a logged-in admin perform them and create arbitrary folders, copy file for example.</description>
      <guid isPermaLink="false">CVE-2022-4745|2024-08-03T01:48:40.413Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24879|2024-08-03T19:49:13.940Z -- unknown -- supportcandy%20%E2%80%93%20helpdesk%20%26%20support%20ticket%20system
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24879</link>
      <description>The SupportCandy WordPress plugin before 2.2.7 does not have CSRF check in the wpsc_tickets AJAX action, nor has any sanitisation or escaping in some of the filter fields which could allow attackers to make a logged in user having access to the ticket lists dashboard set an arbitrary filter (stored in their cookies) with an XSS payload in it.</description>
      <guid isPermaLink="false">CVE-2021-24879|2024-08-03T19:49:13.940Z</guid>
      <pubDate>Mon, 07 Feb 2022 15:47:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24309|2024-08-03T19:28:23.445Z -- unknown -- weekly%20schedule
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24309</link>
      <description>The "Schedule Name" input in the Weekly Schedule WordPress plugin before 3.4.3 general options did not properly sanitize input, allowing a user to inject javascript code using the &lt;script&gt; HTML tags and cause a stored XSS issue</description>
      <guid isPermaLink="false">CVE-2021-24309|2024-08-03T19:28:23.445Z</guid>
      <pubDate>Tue, 01 Jun 2021 11:33:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25084|2024-08-03T19:56:09.878Z -- unknown -- advanced%20cron%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25084</link>
      <description>The Advanced Cron Manager WordPress plugin before 2.4.2 and Advanced Cron Manager Pro WordPress plugin before 2.5.3 do not have authorisation checks in some of their AJAX actions, allowing any authenticated users, such as subscriber to call them and add or remove events as well as schedules for example</description>
      <guid isPermaLink="false">CVE-2021-25084|2024-08-03T19:56:09.878Z</guid>
      <pubDate>Mon, 07 Feb 2022 15:47:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24572|2024-08-03T19:35:20.165Z -- unknown -- accept%20donations%20with%20paypal
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24572</link>
      <description>The Accept Donations with PayPal WordPress plugin before 1.3.1 provides a function to create donation buttons which are internally stored as posts. The deletion of a button is not CSRF protected and there is no control to check if the deleted post was a button post. As a result, an attacker could make logged in admins delete arbitrary posts</description>
      <guid isPermaLink="false">CVE-2021-24572|2024-08-03T19:35:20.165Z</guid>
      <pubDate>Mon, 01 Nov 2021 08:46:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24991|2024-08-03T19:49:14.528Z -- unknown -- woocommerce%20pdf%20invoices%20%26%20packing%20slips
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24991</link>
      <description>The WooCommerce PDF Invoices &amp; Packing Slips WordPress plugin before 2.10.5 does not escape the tab and section parameters before outputting it back in an attribute, leading to a Reflected Cross-Site Scripting in the admin dashboard</description>
      <guid isPermaLink="false">CVE-2021-24991|2024-08-03T19:49:14.528Z</guid>
      <pubDate>Mon, 03 Jan 2022 12:49:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24784|2024-08-03T19:42:17.198Z -- unknown -- wp%20admin%20logo%20changer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24784</link>
      <description>The WP Admin Logo Changer WordPress plugin through 1.0 does not have CSRF check when saving its settings, which could allow attackers to make a logged in admin update them via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2021-24784|2024-08-03T19:42:17.198Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:40:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4110|2024-08-03T01:27:54.410Z -- unknown -- eventify%E2%84%A2
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4110</link>
      <description>The Eventify™ WordPress plugin through 2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4110|2024-08-03T01:27:54.410Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25016|2024-08-03T19:49:14.553Z -- unknown -- floating%20chat%20widget%3A%20contact%20icons%2C%20messages%2C%20telegram%2C%20email%2C%20sms%2C%20call%20button%20%E2%80%93%20chaty
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25016</link>
      <description>The Chaty WordPress plugin before 2.8.3 and Chaty Pro WordPress plugin before 2.8.2 do not sanitise and escape the search parameter before outputting it back in the admin dashboard, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-25016|2024-08-03T19:49:14.553Z</guid>
      <pubDate>Mon, 03 Jan 2022 12:49:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3207|2024-08-03T01:00:10.617Z -- unknown -- simple%20file%20list
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3207</link>
      <description>The Simple File List WordPress plugin before 4.4.12 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3207|2024-08-03T01:00:10.617Z</guid>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-4331|2024-08-03T17:23:10.662Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-4331</link>
      <description>The Plus Addons for Elementor plugin for WordPress is vulnerable to privilege escalation in versions up to, and including 4.1.9 (pro) and 2.0.6 (free). The plugin adds a registration form to the Elementor page builders functionality. As part of the registration form, users can choose which role to set as the default for users upon registration. This field is not hidden for lower-level users so any user with access to the Elementor page builder, such as contributors, can set the default role to administrator. Since contributors can not publish posts, only author+ users can elevate privileges without interaction via a site administrator (to approve a post).</description>
      <guid isPermaLink="false">CVE-2021-4331|2024-08-03T17:23:10.662Z</guid>
      <pubDate>Tue, 07 Mar 2023 14:07:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1818|2024-08-03T00:17:00.207Z -- unknown -- multi-page%20toolkit
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1818</link>
      <description>The Multi-page Toolkit WordPress plugin through 2.6 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping as well</description>
      <guid isPermaLink="false">CVE-2022-1818|2024-08-03T00:17:00.207Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24687|2024-08-03T19:42:16.150Z -- unknown -- modern%20events%20calendar%20lite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24687</link>
      <description>The Modern Events Calendar Lite WordPress plugin before 5.22.2 does not escape some of its settings before outputting them in attributes, allowing high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24687|2024-08-03T19:42:16.150Z</guid>
      <pubDate>Mon, 04 Oct 2021 11:20:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24575|2024-08-03T19:35:20.174Z -- unknown -- school%20management%20system%20%E2%80%93%20wpschoolpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24575</link>
      <description>The School Management System – WPSchoolPress WordPress plugin before 2.1.10 does not properly sanitize or use prepared statements before using POST variable in SQL queries, leading to SQL injection in multiple actions available to various authenticated users, from simple subscribers/students to teachers and above.</description>
      <guid isPermaLink="false">CVE-2021-24575|2024-08-03T19:35:20.174Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:34:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24852|2024-08-03T19:42:17.184Z -- unknown -- mousewheel%20smooth%20scroll
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24852</link>
      <description>The MouseWheel Smooth Scroll WordPress plugin before 5.7 does not have CSRF check in place on its settings page, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2021-24852|2024-08-03T19:42:17.184Z</guid>
      <pubDate>Wed, 17 Nov 2021 10:15:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3357|2024-08-03T01:07:06.526Z -- unknown -- smart%20slider%203
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3357</link>
      <description>The Smart Slider 3 WordPress plugin before 3.5.1.11 unserialises the content of an imported file, which could lead to PHP object injection issues when a user import (intentionally or not) a malicious file, and a suitable gadget chain is present on the site.</description>
      <guid isPermaLink="false">CVE-2022-3357|2024-08-03T01:07:06.526Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25059|2024-08-03T19:49:14.560Z -- unknown -- download%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25059</link>
      <description>The Download Plugin WordPress plugin before 2.0.0 does not properly validate a user has the required privileges to access a backup's nonce identifier, which may allow any users with an account on the site (such as subscriber) to download a full copy of the website.</description>
      <guid isPermaLink="false">CVE-2021-25059|2024-08-03T19:49:14.560Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1964|2024-08-03T00:24:43.600Z -- unknown -- easy%20svg%20support
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1964</link>
      <description>The Easy SVG Support WordPress plugin before 3.3.0 does not sanitise uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads</description>
      <guid isPermaLink="false">CVE-2022-1964|2024-08-03T00:24:43.600Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:58:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3096|2024-08-03T01:00:10.099Z -- unknown -- wp%20total%20hacks
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3096</link>
      <description>The WP Total Hacks WordPress plugin through 4.7.2 does not prevent low privilege users from modifying the plugin's settings. This could allow users such as subscribers to perform Stored Cross-Site Scripting attacks against other users, like administrators, due to the lack of sanitisation and escaping as well.</description>
      <guid isPermaLink="false">CVE-2022-3096|2024-08-03T01:00:10.099Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24717|2024-08-03T19:42:16.585Z -- unknown -- automatorwp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24717</link>
      <description>The AutomatorWP WordPress plugin before 1.7.6 does not perform capability checks which allows users with Subscriber roles to enumerate automations, disclose title of private posts or user emails, call functions, or perform privilege escalation via Ajax actions.</description>
      <guid isPermaLink="false">CVE-2021-24717|2024-08-03T19:42:16.585Z</guid>
      <pubDate>Mon, 01 Nov 2021 08:46:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4897|2024-08-03T01:55:46.053Z -- unknown -- backupbuddy
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4897</link>
      <description>The BackupBuddy WordPress plugin before 8.8.3 does not sanitise and escape some parameters before outputting them back in various places, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-4897|2024-08-03T01:55:46.053Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25067|2024-08-03T19:56:09.465Z -- unknown -- landing%20page%20builder%20%E2%80%93%20lead%20page%20%E2%80%93%20optin%20page%20%E2%80%93%20squeeze%20page%20%E2%80%93%20wordpress%20landing%20pages
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25067</link>
      <description>The Landing Page Builder WordPress plugin before 1.4.9.6 was affected by a reflected XSS in page-builder-add on the ulpb_post admin page.</description>
      <guid isPermaLink="false">CVE-2021-25067|2024-08-03T19:56:09.465Z</guid>
      <pubDate>Mon, 17 Jan 2022 13:00:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3981|2024-08-03T01:27:53.947Z -- unknown -- icegram%20express
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3981</link>
      <description>The Icegram Express WordPress plugin before 5.5.1 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by any authenticated users, such as subscriber</description>
      <guid isPermaLink="false">CVE-2022-3981|2024-08-03T01:27:53.947Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1755|2024-08-03T00:16:59.865Z -- unknown -- svg%20support
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1755</link>
      <description>The SVG Support WordPress plugin before 2.5 does not properly handle SVG added via an URL, which could allow users with a role as low as author to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-1755|2024-08-03T00:16:59.865Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2558|2024-08-03T00:39:08.163Z -- unknown -- simple%20job%20board
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2558</link>
      <description>The Simple Job Board WordPress plugin before 2.10.0 is susceptible to Directory Listing which allows the public listing of uploaded resumes in certain configurations.</description>
      <guid isPermaLink="false">CVE-2022-2558|2024-08-03T00:39:08.163Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:04:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24256|2024-08-03T19:28:22.736Z -- unknown -- elementor%20%E2%80%93%20header%2C%20footer%20%26%20blocks%20template
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24256</link>
      <description>The “Elementor – Header, Footer &amp; Blocks Template” WordPress Plugin before 1.5.8 has two widgets that are vulnerable to stored Cross-Site Scripting (XSS) by lower-privileged users such as contributors, all via a similar method.</description>
      <guid isPermaLink="false">CVE-2021-24256|2024-08-03T19:28:22.736Z</guid>
      <pubDate>Wed, 05 May 2021 18:28:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1551|2024-08-03T00:10:03.030Z -- unknown -- sp%20project%20%26%20document%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1551</link>
      <description>The SP Project &amp; Document Manager WordPress plugin before 4.58 uses an easily guessable path to store user files, bad actors could use that to access other users' sensitive files.</description>
      <guid isPermaLink="false">CVE-2022-1551|2024-08-03T00:10:03.030Z</guid>
      <pubDate>Mon, 25 Jul 2022 12:46:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1904|2024-08-03T00:17:00.911Z -- unknown -- pricing%20tables%20wordpress%20plugin%20%E2%80%93%20easy%20pricing%20tables
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1904</link>
      <description>The Pricing Tables WordPress Plugin WordPress plugin before 3.2.1 does not sanitise and escape parameter before outputting it back in a page available to any user (both authenticated and unauthenticated) when a specific setting is enabled, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-1904|2024-08-03T00:17:00.911Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:58:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24341|2024-08-03T19:28:23.417Z -- unknown -- xllentech%20english%20islamic%20calendar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24341</link>
      <description>When deleting a date in the Xllentech English Islamic Calendar WordPress plugin before 2.6.8, the year_number and month_number POST parameters are not sanitised, escaped or validated before being used in a SQL statement, leading to SQL injection.</description>
      <guid isPermaLink="false">CVE-2021-24341|2024-08-03T19:28:23.417Z</guid>
      <pubDate>Mon, 14 Jun 2021 13:37:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25064|2024-08-03T19:49:14.581Z -- unknown -- wow%20countdowns%20%E2%80%93%20easily%20create%20any%20countdowns%2C%20counters%20and%20timers
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25064</link>
      <description>The Wow Countdowns WordPress plugin through 3.1.2 does not sanitize user input into the 'did' parameter and uses it in a SQL statement, leading to an authenticated SQL Injection.</description>
      <guid isPermaLink="false">CVE-2021-25064|2024-08-03T19:49:14.581Z</guid>
      <pubDate>Mon, 28 Mar 2022 17:21:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24749|2024-08-03T19:42:16.664Z -- unknown -- url%20shortify%20%E2%80%93%20simple%2C%20powerful%20and%20easy%20url%20shortener%20plugin%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24749</link>
      <description>The URL Shortify WordPress plugin before 1.5.1 does not have CSRF check in place when bulk-deleting links or groups, which could allow attackers to make a logged in admin delete arbitrary link and group via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2021-24749|2024-08-03T19:42:16.664Z</guid>
      <pubDate>Mon, 29 Nov 2021 08:25:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24592|2024-08-03T19:35:20.145Z -- unknown -- sitewide%20notice%20wp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24592</link>
      <description>The Sitewide Notice WP WordPress plugin before 2.3 does not sanitise some of its settings before outputting them in frontend pages, allowing high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24592|2024-08-03T19:35:20.145Z</guid>
      <pubDate>Mon, 30 Aug 2021 14:11:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24471|2024-08-03T19:35:19.727Z -- unknown -- youtube%20embed
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24471</link>
      <description>The YouTube Embed WordPress plugin before 5.2.2 does not validate, escape or sanitise some of its shortcode attributes, leading to Stored XSS issues by 1. using w, h, controls, cc_lang, color, language, start, stop, or style parameter of youtube shortcode, 2. by using style, class, rel, target, width, height, or alt parameter of youtube_thumb shortcode, or 3. by embedding a video whose title or description contains XSS payload (if API key is configured).</description>
      <guid isPermaLink="false">CVE-2021-24471|2024-08-03T19:35:19.727Z</guid>
      <pubDate>Mon, 16 Aug 2021 10:48:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2711|2024-08-03T00:46:03.827Z -- unknown -- import%20any%20xml%20or%20csv%20file%20to%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2711</link>
      <description>The Import any XML or CSV File to WordPress plugin before 3.6.9 is not validating the paths of files contained in uploaded zip archives, allowing highly privileged users, such as admins, to write arbitrary files to any part of the file system accessible by the web server via a path traversal vector.</description>
      <guid isPermaLink="false">CVE-2022-2711|2024-08-03T00:46:03.827Z</guid>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4626|2024-08-03T01:48:40.374Z -- unknown -- ppwp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4626</link>
      <description>The PPWP WordPress plugin before 1.8.6 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4626|2024-08-03T01:48:40.374Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24378|2024-08-03T19:28:23.784Z -- unknown -- autoptimize
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24378</link>
      <description>The Autoptimize WordPress plugin before 2.7.8 does not check for malicious files such as .html in the archive uploaded via the 'Import Settings' feature. As a result, it is possible for a high privilege user to upload a malicious file containing JavaScript code inside an archive which will execute when a victim visits index.html inside the plugin directory.</description>
      <guid isPermaLink="false">CVE-2021-24378|2024-08-03T19:28:23.784Z</guid>
      <pubDate>Mon, 21 Jun 2021 19:18:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1578|2024-08-03T00:10:03.399Z -- unknown -- my%20wpdb
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1578</link>
      <description>The My wpdb WordPress plugin before 2.5 is missing CSRF check when running SQL queries, which could allow attacker to make a logged in admin run arbitrary SQL query via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1578|2024-08-03T00:10:03.399Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24839|2024-08-03T19:42:17.253Z -- unknown -- supportcandy%20%E2%80%93%20helpdesk%20%26%20support%20ticket%20system
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24839</link>
      <description>The SupportCandy WordPress plugin before 2.2.5 does not have authorisation and CSRF checks in its wpsc_tickets AJAX action, which could allow unauthenticated users to call it and delete arbitrary tickets via the set_delete_permanently_bulk_ticket setting_action. Other actions may be affected as well.</description>
      <guid isPermaLink="false">CVE-2021-24839|2024-08-03T19:42:17.253Z</guid>
      <pubDate>Mon, 07 Feb 2022 15:47:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4714|2024-08-03T01:48:40.301Z -- unknown -- wp%20dark%20mode
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4714</link>
      <description>The WP Dark Mode WordPress plugin before 4.0.0 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack</description>
      <guid isPermaLink="false">CVE-2022-4714|2024-08-03T01:48:40.301Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:51:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1717|2024-08-03T00:10:03.938Z -- unknown -- custom%20share%20buttons%20with%20floating%20sidebar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1717</link>
      <description>The Custom Share Buttons with Floating Sidebar WordPress plugin before 4.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1717|2024-08-03T00:10:03.938Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:25:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24240|2024-08-03T19:21:18.939Z -- unknown -- business%20hours%20pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24240</link>
      <description>The Business Hours Pro WordPress plugin through 5.5.0 allows a remote attacker to upload arbitrary files using its manual update functionality, leading to an unauthenticated remote code execution vulnerability.</description>
      <guid isPermaLink="false">CVE-2021-24240|2024-08-03T19:21:18.939Z</guid>
      <pubDate>Thu, 22 Apr 2021 21:00:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2655|2024-08-03T00:46:03.372Z -- unknown -- classified%20listing%20pro%20-%20classified%20ads%20%26%20business%20directory%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2655</link>
      <description>The Classified Listing Pro WordPress plugin before 2.0.20 does not escape a generated URL before outputting it back in an attribute in an admin page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2655|2024-08-03T00:46:03.372Z</guid>
      <pubDate>Fri, 16 Sep 2022 08:40:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2040|2024-08-03T00:24:44.147Z -- unknown -- brizy%20%E2%80%93%20page%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2040</link>
      <description>The Brizy WordPress plugin before 2.4.2 does not sanitise and escape some element URL, which could allow users with a role as low as Contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-2040|2024-08-03T00:24:44.147Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:59:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2072|2024-08-03T00:24:44.324Z -- unknown -- name%20directory
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2072</link>
      <description>The Name Directory WordPress plugin before 1.25.3 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting. Furthermore, as the payload is also saved into the database after the request, it leads to a Stored XSS as well</description>
      <guid isPermaLink="false">CVE-2022-2072|2024-08-03T00:24:44.324Z</guid>
      <pubDate>Mon, 25 Jul 2022 12:46:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24743|2024-08-03T19:42:16.800Z -- unknown -- podcast%20subscribe%20buttons
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24743</link>
      <description>The Podcast Subscribe Buttons WordPress plugin before 1.4.2 allows users with any role capable of editing or adding posts to perform stored XSS.</description>
      <guid isPermaLink="false">CVE-2021-24743|2024-08-03T19:42:16.800Z</guid>
      <pubDate>Mon, 18 Oct 2021 13:46:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24982|2024-08-03T19:49:14.172Z -- unknown -- child%20theme%20generator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24982</link>
      <description>The Child Theme Generator WordPress plugin through 2.2.7 does not sanitise escape the parade parameter before outputting it back, leading to a Reflected Cross-Site Scripting in the admin dashboard</description>
      <guid isPermaLink="false">CVE-2021-24982|2024-08-03T19:49:14.172Z</guid>
      <pubDate>Mon, 14 Mar 2022 14:41:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2275|2024-08-03T00:32:09.357Z -- unknown -- wp%20edit%20menu
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2275</link>
      <description>The WP Edit Menu WordPress plugin before 1.5.0 does not have CSRF in an AJAX action, which could allow attackers to make a logged in admin delete arbitrary posts/pages from the blog via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-2275|2024-08-03T00:32:09.357Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:00:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24360|2024-08-03T19:28:23.706Z -- unknown -- yes%2Fno%20chart
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24360</link>
      <description>The Yes/No Chart WordPress plugin before 1.0.12 did not sanitise its sid shortcode parameter before using it in a SQL statement, allowing medium privilege users (contributor+) to perform Blind SQL Injection attacks</description>
      <guid isPermaLink="false">CVE-2021-24360|2024-08-03T19:28:23.706Z</guid>
      <pubDate>Mon, 14 Jun 2021 13:37:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24858|2024-08-03T19:42:17.244Z -- unknown -- cookie%20notification%20plugin%20for%20wordpress%20%E2%80%93%20wp%20cookie%20user%20info
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24858</link>
      <description>The Cookie Notification Plugin for WordPress plugin before 1.0.9 does not sanitise or escape the id GET parameter before using it in a SQL statement, when retrieving the setting to edit in the admin dashboard, leading to an authenticated SQL Injection</description>
      <guid isPermaLink="false">CVE-2021-24858|2024-08-03T19:42:17.244Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:00:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2325|2024-08-03T00:32:09.684Z -- unknown -- invitation%20based%20registrations
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2325</link>
      <description>The Invitation Based Registrations WordPress plugin through 2.2.84 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2325|2024-08-03T00:32:09.684Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:52:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24667|2024-08-03T19:42:16.073Z -- unknown -- gallery%20blocks%20with%20lightbox.%20image%20gallery%2C%20%28html5%20video%20%2C%20youtube%2C%20vimeo%29%20video%20gallery%20and%20lightbox%20for%20native%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24667</link>
      <description>A stored cross-site scripting vulnerability has been discovered in : Simply Gallery Blocks with Lightbox (Version – 2.2.0 &amp; below). The vulnerability exists in the Lightbox functionality where a user with low privileges is allowed to execute arbitrary script code within the context of the application. This vulnerability is due to insufficient validation of image parameters in meta data.</description>
      <guid isPermaLink="false">CVE-2021-24667|2024-08-03T19:42:16.073Z</guid>
      <pubDate>Mon, 30 Aug 2021 14:11:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24905|2024-08-03T19:49:13.470Z -- unknown -- advanced%20contact%20form%207%20db
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24905</link>
      <description>The Advanced Contact form 7 DB WordPress plugin before 1.8.7 does not have authorisation nor CSRF checks in the acf7_db_edit_scr_file_delete AJAX action, and does not validate the file to be deleted, allowing any authenticated user to delete arbitrary files on the web server. For example, removing the wp-config.php allows attackers to trigger WordPress setup again, gain administrator privileges and execute arbitrary code or display arbitrary content to the users.</description>
      <guid isPermaLink="false">CVE-2021-24905|2024-08-03T19:49:13.470Z</guid>
      <pubDate>Mon, 21 Mar 2022 18:55:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1894|2024-08-03T00:17:00.933Z -- unknown -- popup%20builder%20%E2%80%93%20create%20highly%20converting%2C%20mobile%20friendly%20marketing%20popups.
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1894</link>
      <description>The Popup Builder WordPress plugin before 4.1.11 does not escape and sanitize some settings, which could allow high privilege users to perform Stored Cross-Site Scripting attacks when the unfiltred_html is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1894|2024-08-03T00:17:00.933Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:56:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1688|2024-08-03T00:10:03.815Z -- unknown -- note%20press
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1688</link>
      <description>The Note Press WordPress plugin through 0.1.10 does not sanitise and escape the id parameter before using it in various SQL statement via the admin dashboard, leading to SQL Injections</description>
      <guid isPermaLink="false">CVE-2022-1688|2024-08-03T00:10:03.815Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3574|2024-08-03T01:14:02.085Z -- unknown -- wpforms%20pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3574</link>
      <description>The WPForms Pro WordPress plugin before 1.7.7 does not validate its form data when generating the exported CSV, which could lead to CSV injection.</description>
      <guid isPermaLink="false">CVE-2022-3574|2024-08-03T01:14:02.085Z</guid>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2384|2024-08-03T00:39:07.356Z -- unknown -- digital%20publications%20by%20supsystic
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2384</link>
      <description>The Digital Publications by Supsystic WordPress plugin before 1.7.4 does not sanitise and escape its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2384|2024-08-03T00:39:07.356Z</guid>
      <pubDate>Mon, 15 Aug 2022 08:37:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3366|2024-08-03T01:07:06.472Z -- unknown -- publishpress%20capabilities%20%E2%80%93%20user%20role%20access%2C%20editor%20permissions%2C%20admin%20menus
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3366</link>
      <description>The PublishPress Capabilities WordPress plugin before 2.5.2, PublishPress Capabilities Pro WordPress plugin before 2.5.2 unserializes the content of imported files, which could lead to PHP object injection attacks by administrators, on multisite WordPress configurations. Successful exploitation in this case requires other plugins with a suitable gadget chain to be present on the site.</description>
      <guid isPermaLink="false">CVE-2022-3366|2024-08-03T01:07:06.472Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24563|2024-08-03T19:35:20.198Z -- unknown -- frontend%20uploader
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24563</link>
      <description>The Frontend Uploader WordPress plugin through 1.3.2 does not prevent HTML files from being uploaded via its form, allowing unauthenticated user to upload a malicious HTML file containing JavaScript for example, which will be triggered when someone access the file directly</description>
      <guid isPermaLink="false">CVE-2021-24563|2024-08-03T19:35:20.198Z</guid>
      <pubDate>Mon, 11 Oct 2021 10:45:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24546|2024-08-03T19:35:20.035Z -- unknown -- gutenberg%20block%20editor%20toolkit%20%E2%80%93%20editorskit
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24546</link>
      <description>The Gutenberg Block Editor Toolkit – EditorsKit WordPress plugin before 1.31.6 does not sanitise and validate the Conditional Logic of the Custom Visibility settings, allowing users with a role as low contributor to execute Arbitrary PHP code</description>
      <guid isPermaLink="false">CVE-2021-24546|2024-08-03T19:35:20.035Z</guid>
      <pubDate>Mon, 11 Oct 2021 10:45:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24638|2024-08-03T19:35:20.317Z -- unknown -- omgf%20%7C%20host%20google%20fonts%20locally
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24638</link>
      <description>The OMGF WordPress plugin before 4.5.4 does not escape or validate the handle parameter of the REST API, which allows unauthenticated users to perform path traversal and overwrite arbitrary CSS file with Google Fonts CSS, or download fonts uploaded on Google Fonts website.</description>
      <guid isPermaLink="false">CVE-2021-24638|2024-08-03T19:35:20.317Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24183|2024-08-03T19:21:18.708Z -- unknown -- tutor%20lms%20%E2%80%93%20elearning%20and%20online%20course%20solution
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24183</link>
      <description>The tutor_quiz_builder_get_question_form AJAX action from the Tutor LMS – eLearning and online course solution WordPress plugin before 1.8.3 was vulnerable to UNION based SQL injection that could be exploited by students.</description>
      <guid isPermaLink="false">CVE-2021-24183|2024-08-03T19:21:18.708Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25099|2024-08-03T19:56:10.761Z -- unknown -- givewp%20%E2%80%93%20donation%20plugin%20and%20fundraising%20platform
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25099</link>
      <description>The GiveWP WordPress plugin before 2.17.3 does not sanitise and escape the form_id parameter before outputting it back in the response of an unauthenticated request via the give_checkout_login AJAX action, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-25099|2024-08-03T19:56:10.761Z</guid>
      <pubDate>Mon, 21 Feb 2022 10:45:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-25810|2024-08-03T04:49:43.477Z -- unknown -- transposh%20wordpress%20translation
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-25810</link>
      <description>The Transposh WordPress Translation WordPress plugin through 1.0.8 exposes a couple of sensitive actions such has “tp_reset” under the Utilities tab (/wp-admin/admin.php?page=tp_utils), which can be used/executed as the lowest-privileged user. Basically all Utilities functionalities are vulnerable this way, which involves resetting configurations and backup/restore operations.</description>
      <guid isPermaLink="false">CVE-2022-25810|2024-08-03T04:49:43.477Z</guid>
      <pubDate>Mon, 22 Aug 2022 14:58:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4485|2024-08-03T01:41:45.576Z -- unknown -- page-list
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4485</link>
      <description>The Page-list WordPress plugin before 5.3 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4485|2024-08-03T01:41:45.576Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4467|2024-08-03T01:41:45.364Z -- unknown -- search%20%26%20filter
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4467</link>
      <description>The Search &amp; Filter WordPress plugin before 1.2.16 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2022-4467|2024-08-03T01:41:45.364Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4024|2024-08-03T01:27:54.143Z -- unknown -- registration%20forms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4024</link>
      <description>The Registration Forms WordPress plugin before 3.8.1.3 does not have authorisation and CSRF when deleting users via an init action handler, allowing unauthenticated attackers to delete arbitrary users (along with their posts)</description>
      <guid isPermaLink="false">CVE-2022-4024|2024-08-03T01:27:54.143Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3935|2024-08-03T01:27:53.085Z -- unknown -- welcart%20e-commerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3935</link>
      <description>The Welcart e-Commerce WordPress plugin before 2.8.4 does not sanitise and escape some parameters, which could allow any authenticated users, such as subscriber to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-3935|2024-08-03T01:27:53.085Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1600|2024-08-03T00:10:03.637Z -- unknown -- yop%20poll
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1600</link>
      <description>The YOP Poll WordPress plugin before 6.4.3 prioritizes getting a visitor's IP from certain HTTP headers over PHP's REMOTE_ADDR, which makes it possible to bypass IP-based limitations to vote in certain situations.</description>
      <guid isPermaLink="false">CVE-2022-1600|2024-08-03T00:10:03.637Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:48:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3025|2024-08-03T00:53:00.515Z -- unknown -- bitcoin%20%2F%20altcoin%20faucet
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3025</link>
      <description>The Bitcoin / Altcoin Faucet WordPress plugin through 1.6.0 does not have any CSRF check when saving its settings, allowing attacker to make a logged in admin change them via a CSRF attack. Furthermore, due to the lack of sanitisation and escaping, it could also lead to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2022-3025|2024-08-03T00:53:00.515Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3136|2024-08-03T01:00:10.318Z -- unknown -- social%20rocket%20%E2%80%93%20social%20sharing%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3136</link>
      <description>The Social Rocket WordPress plugin before 1.3.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3136|2024-08-03T01:00:10.318Z</guid>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24921|2024-08-03T19:49:13.923Z -- unknown -- advanced%20database%20cleaner
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24921</link>
      <description>The Advanced Database Cleaner WordPress plugin before 3.0.4 does not sanitise and escape $_GET keys and values before outputting them back in attributes, leading to Reflected Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-24921|2024-08-03T19:49:13.923Z</guid>
      <pubDate>Mon, 21 Feb 2022 10:45:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24255|2024-08-03T19:28:22.650Z -- unknown -- essential%20addons%20for%20elementor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24255</link>
      <description>The Essential Addons for Elementor Lite WordPress Plugin before 4.5.4 has two widgets that are vulnerable to stored Cross-Site Scripting (XSS) by lower-privileged users such as contributors, both via a similar method.</description>
      <guid isPermaLink="false">CVE-2021-24255|2024-08-03T19:28:22.650Z</guid>
      <pubDate>Wed, 05 May 2021 18:28:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4650|2024-08-03T01:48:38.923Z -- unknown -- hashbar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4650</link>
      <description>The HashBar WordPress plugin before 1.3.6 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4650|2024-08-03T01:48:38.923Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2172|2024-08-03T00:32:08.540Z -- unknown -- linkworth%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2172</link>
      <description>The LinkWorth WordPress plugin before 3.3.4 does not implement nonce checks, which could allow attackers to make a logged in admin change settings via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2022-2172|2024-08-03T00:32:08.540Z</guid>
      <pubDate>Mon, 22 Aug 2022 14:59:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24423|2024-08-03T19:28:23.809Z -- unknown -- updraftplus%20wordpress%20backup%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24423</link>
      <description>The UpdraftPlus WordPress Backup Plugin WordPress plugin before 1.6.59 does not sanitise its updraft_service settings, allowing high privilege users to set malicious JavaScript payload in it and leading to a Stored Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24423|2024-08-03T19:28:23.809Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:00:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24745|2024-08-03T19:42:16.657Z -- unknown -- about%20author%20box
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24745</link>
      <description>The About Author Box WordPress plugin before 1.0.2 does not sanitise and escape the Social Profiles field values before outputting them in attributes, which could allow user with a role as low as contributor to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2021-24745|2024-08-03T19:42:16.657Z</guid>
      <pubDate>Mon, 29 Nov 2021 08:25:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24351|2024-08-03T19:28:23.522Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24351</link>
      <description>The theplus_more_post AJAX action of The Plus Addons for Elementor Page Builder WordPress plugin before 4.1.12 did not properly sanitise some of its fields, leading to a reflected Cross-Site Scripting (exploitable on both unauthenticated and authenticated users)</description>
      <guid isPermaLink="false">CVE-2021-24351|2024-08-03T19:28:23.522Z</guid>
      <pubDate>Mon, 14 Jun 2021 13:37:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2184|2024-08-03T00:32:08.609Z -- unknown -- captcha%204wp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2184</link>
      <description>The CAPTCHA 4WP WordPress plugin before 7.1.0 lets user input reach a sensitive require_once call in one of its admin-side templates. This can be abused by attackers, via a Cross-Site Request Forgery attack to run arbitrary code on the server.</description>
      <guid isPermaLink="false">CVE-2022-2184|2024-08-03T00:32:08.609Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:50:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24158|2024-08-03T19:21:18.563Z -- unknown -- orbit%20fox%20by%20themeisle
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24158</link>
      <description>Orbit Fox by ThemeIsle has a feature to add a registration form to both the Elementor and Beaver Builder page builders functionality. As part of the registration form, administrators can choose which role to set as the default for users upon registration. This field is hidden from view for lower-level users, however, they can still supply the user_role parameter to update the default role for registration.</description>
      <guid isPermaLink="false">CVE-2021-24158|2024-08-03T19:21:18.563Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24963|2024-08-03T19:49:14.342Z -- unknown -- litespeed%20cache
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24963</link>
      <description>The LiteSpeed Cache WordPress plugin before 4.4.4 does not escape the qc_res parameter before outputting it back in the JS code of an admin page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-24963|2024-08-03T19:49:14.342Z</guid>
      <pubDate>Mon, 03 Jan 2022 12:49:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4545|2024-08-03T01:41:45.634Z -- unknown -- sitemap
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4545</link>
      <description>The Sitemap WordPress plugin before 4.4 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4545|2024-08-03T01:41:45.634Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24507|2024-08-03T19:35:20.199Z -- unknown -- astra%20pro%20addon
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24507</link>
      <description>The Astra Pro Addon WordPress plugin before 3.5.2 did not properly sanitise or escape some of the POST parameters from the astra_pagination_infinite and astra_shop_pagination_infinite AJAX action (available to both unauthenticated and authenticated user) before using them in SQL statement, leading to an SQL Injection issues</description>
      <guid isPermaLink="false">CVE-2021-24507|2024-08-03T19:35:20.199Z</guid>
      <pubDate>Mon, 09 Aug 2021 10:04:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24896|2024-08-03T19:49:13.968Z -- unknown -- caldera%20forms%20%E2%80%93%20more%20than%20contact%20forms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24896</link>
      <description>The Caldera Forms WordPress plugin before 1.9.5 does not sanitise and escape the Form Name before outputting it in attributes, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24896|2024-08-03T19:49:13.968Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:41:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24682|2024-08-03T19:42:15.980Z -- unknown -- cool%20tag%20cloud
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24682</link>
      <description>The Cool Tag Cloud WordPress plugin before 2.26 does not escape the style attribute of the cool_tag_cloud shortcode, which could allow users with a role as low as Contributor to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2021-24682|2024-08-03T19:42:15.980Z</guid>
      <pubDate>Mon, 01 Nov 2021 08:46:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1776|2024-08-03T00:16:59.614Z -- unknown -- popups%2C%20welcome%20bar%2C%20optins%20and%20lead%20generation%20plugin%20%E2%80%93%20icegram
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1776</link>
      <description>The Popups, Welcome Bar, Optins and Lead Generation Plugin WordPress plugin before 2.1.8 does not sanitize and escape some campaign parameters, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-1776|2024-08-03T00:16:59.614Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:57:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1608|2024-08-03T00:10:03.660Z -- unknown -- onepress%20social%20locker
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1608</link>
      <description>The OnePress Social Locker WordPress plugin through 5.6.2 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1608|2024-08-03T00:10:03.660Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1712|2024-08-03T00:10:03.917Z -- unknown -- livesync%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1712</link>
      <description>The LiveSync for WordPress plugin through 1.0 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1712|2024-08-03T00:10:03.917Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24894|2024-08-03T19:49:14.027Z -- unknown -- reviews%20plus
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24894</link>
      <description>The Reviews Plus WordPress plugin before 1.2.14 does not validate the submitted rating, allowing submission of long integer, causing a Denial of Service in the review section when an authenticated user submit such rating and the reviews are set to be displayed on the post/page</description>
      <guid isPermaLink="false">CVE-2021-24894|2024-08-03T19:49:14.027Z</guid>
      <pubDate>Tue, 23 Nov 2021 19:16:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2450|2024-08-03T00:39:07.624Z -- unknown -- resmush.it%20%3A%20the%20only%20free%20image%20optimizer%20%26%20compress%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2450</link>
      <description>The reSmush.it : the only free Image Optimizer &amp; compress plugin WordPress plugin before 0.4.4 lacks authorization in various AJAX actions, allowing any logged-in users, such as subscribers to call them.</description>
      <guid isPermaLink="false">CVE-2022-2450|2024-08-03T00:39:07.624Z</guid>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4448|2024-08-03T01:41:44.722Z -- unknown -- givewp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4448</link>
      <description>The GiveWP WordPress plugin before 2.24.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4448|2024-08-03T01:41:44.722Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24877|2024-08-03T19:49:12.677Z -- unknown -- mainwp%20child%20-%20securely%20connects%20sites%20to%20the%20mainwp%20wordpress%20manager%20dashboard
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24877</link>
      <description>The MainWP Child WordPress plugin before 4.1.8 does not validate the orderby and order parameter before using them in a SQL statement, leading to an SQL injection exploitable by high privilege users such as admin when the Backup and Staging by WP Time Capsule plugin is installed</description>
      <guid isPermaLink="false">CVE-2021-24877|2024-08-03T19:49:12.677Z</guid>
      <pubDate>Tue, 23 Nov 2021 19:16:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24176|2024-08-03T19:21:18.783Z -- unknown -- jh%20404%20logger
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24176</link>
      <description>The JH 404 Logger WordPress plugin through 1.1 doesn't sanitise the referer and path of 404 pages, when they are output in the dashboard, which leads to executing arbitrary JavaScript code in the WordPress dashboard.</description>
      <guid isPermaLink="false">CVE-2021-24176|2024-08-03T19:21:18.783Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2600|2024-08-03T00:46:03.164Z -- unknown -- auto-hyperlink%20urls
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2600</link>
      <description>The Auto-hyperlink URLs WordPress plugin through 5.4.1 does not set rel="noopener noreferer" on generated links, which can lead to Tab Nabbing by giving the target site access to the source tab through the window.opener DOM object.</description>
      <guid isPermaLink="false">CVE-2022-2600|2024-08-03T00:46:03.164Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:05:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4676|2024-08-03T01:48:39.653Z -- unknown -- osm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4676</link>
      <description>The OSM WordPress plugin through 6.01 does not validate and escape some of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4676|2024-08-03T01:48:39.653Z</guid>
      <pubDate>Tue, 30 May 2023 07:49:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24762|2024-08-03T19:42:17.219Z -- unknown -- perfect%20survey
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24762</link>
      <description>The Perfect Survey WordPress plugin before 1.5.2 does not validate and escape the question_id GET parameter before using it in a SQL statement in the get_question AJAX action, allowing unauthenticated users to perform SQL injection.</description>
      <guid isPermaLink="false">CVE-2021-24762|2024-08-03T19:42:17.219Z</guid>
      <pubDate>Tue, 01 Feb 2022 12:21:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2376|2024-08-03T00:32:09.699Z -- unknown -- directorist%20%E2%80%93%20wordpress%20business%20directory%20plugin%20with%20classified%20ads%20listings
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2376</link>
      <description>The Directorist WordPress plugin before 7.3.1 discloses the email address of all users in an AJAX action available to both unauthenticated and any authenticated users</description>
      <guid isPermaLink="false">CVE-2022-2376|2024-08-03T00:32:09.699Z</guid>
      <pubDate>Mon, 05 Sep 2022 12:35:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24684|2024-08-03T19:42:16.127Z -- unknown -- wordpress%20pdf%20light%20viewer%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24684</link>
      <description>The WordPress PDF Light Viewer Plugin WordPress plugin before 1.4.12 allows users with Author roles to execute arbitrary OS command on the server via OS Command Injection when invoking Ghostscript.</description>
      <guid isPermaLink="false">CVE-2021-24684|2024-08-03T19:42:16.127Z</guid>
      <pubDate>Mon, 18 Oct 2021 13:45:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3206|2024-08-03T01:00:10.811Z -- unknown -- passster
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3206</link>
      <description>The Passster WordPress plugin before 3.5.5.5.2 stores the password inside a cookie named "passster" using base64 encoding method which is easy to decode. This puts the password at risk in case the cookies get leaked.</description>
      <guid isPermaLink="false">CVE-2022-3206|2024-08-03T01:00:10.811Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24356|2024-08-03T19:28:23.784Z -- unknown -- simple%20301%20redirects%20by%20betterlinks
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24356</link>
      <description>In the Simple 301 Redirects by BetterLinks WordPress plugin before 2.0.4, a lack of capability checks and insufficient nonce check on the AJAX action, simple301redirects/admin/activate_plugin, made it possible for authenticated users to activate arbitrary plugins installed on vulnerable sites.</description>
      <guid isPermaLink="false">CVE-2021-24356|2024-08-03T19:28:23.784Z</guid>
      <pubDate>Mon, 14 Jun 2021 13:37:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24582|2024-08-03T19:35:20.254Z -- unknown -- thinktwit
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24582</link>
      <description>The ThinkTwit WordPress plugin before 1.7.1 did not sanitise or escape its "Consumer key" setting before outputting it its settings page, leading to a Stored Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-24582|2024-08-03T19:35:20.254Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24838|2024-08-03T19:42:17.311Z -- unknown -- anycomment
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24838</link>
      <description>The AnyComment WordPress plugin before 0.3.5 has an API endpoint which passes user input via the redirect parameter to the wp_redirect() function without being validated first, leading to an Open Redirect issue, which according to the vendor, is a feature.</description>
      <guid isPermaLink="false">CVE-2021-24838|2024-08-03T19:42:17.311Z</guid>
      <pubDate>Mon, 17 Jan 2022 13:00:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1910|2024-08-03T00:17:00.886Z -- unknown -- shortcodes%20and%20extra%20features%20for%20phlox%20theme
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1910</link>
      <description>The Shortcodes and extra features for Phlox WordPress plugin before 2.9.8 does not sanitise and escape a parameter before outputting it back in the response, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-1910|2024-08-03T00:17:00.886Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:56:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1577|2024-08-03T00:10:03.450Z -- unknown -- database%20backup%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1577</link>
      <description>The Database Backup for WordPress plugin before 2.5.2 does not have CSRF check in place when updating the schedule backup settings, which could allow an attacker to make a logged in admin change them via a CSRF attack. This could lead to cases where attackers can send backup notification emails to themselves, which contain more details. Or disable the automatic backup schedule</description>
      <guid isPermaLink="false">CVE-2022-1577|2024-08-03T00:10:03.450Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1646|2024-08-03T00:10:03.715Z -- unknown -- simple%20real%20estate%20pack
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1646</link>
      <description>The Simple Real Estate Pack WordPress plugin through 1.4.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1646|2024-08-03T00:10:03.715Z</guid>
      <pubDate>Mon, 30 May 2022 08:36:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24334|2024-08-03T19:28:23.432Z -- unknown -- instant%20images%20%E2%80%93%20one%20click%20unsplash%20uploads
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24334</link>
      <description>The Instant Images – One Click Unsplash Uploads WordPress plugin before 4.4.0.1 did not properly validate and sanitise its unsplash_download_w and unsplash_download_h parameter settings (/wp-admin/upload.php?page=instant-images), only validating them client side before saving them, leading to a Stored Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-24334|2024-08-03T19:28:23.432Z</guid>
      <pubDate>Tue, 01 Jun 2021 11:33:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2391|2024-08-03T00:39:06.371Z -- unknown -- inspiro%20pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2391</link>
      <description>The Inspiro PRO WordPress plugin does not sanitize the portfolio slider description, allowing users with privileges as low as Contributor to inject JavaScript into the description.</description>
      <guid isPermaLink="false">CVE-2022-2391|2024-08-03T00:39:06.371Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:48:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4775|2024-08-03T01:48:40.398Z -- unknown -- geodirectory
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4775</link>
      <description>The GeoDirectory WordPress plugin before 2.2.22 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4775|2024-08-03T01:48:40.398Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:32:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4371|2024-08-03T01:34:50.156Z -- unknown -- web%20invoice
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4371</link>
      <description>The Web Invoice WordPress plugin through 2.1.3 does not properly sanitize and escape a parameter before using it in a SQL statement, leading to a SQL Injection exploitable by high privilege users such as admin by default. However, depending on the plugin configuration, other users, such as subscriber could exploit this as well</description>
      <guid isPermaLink="false">CVE-2022-4371|2024-08-03T01:34:50.156Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4475|2024-08-03T01:41:44.940Z -- unknown -- collapse-o-matic
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4475</link>
      <description>The Collapse-O-Matic WordPress plugin before 1.8.3 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2022-4475|2024-08-03T01:41:44.940Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24599|2024-08-03T19:35:20.312Z -- unknown -- email%20encoder%20%E2%80%93%20protect%20email%20addresses
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24599</link>
      <description>The Email Encoder – Protect Email Addresses WordPress plugin before 2.1.2 has an endpoint that requires no authentication and will render a user supplied value in the HTML response without escaping or sanitizing the data.</description>
      <guid isPermaLink="false">CVE-2021-24599|2024-08-03T19:35:20.312Z</guid>
      <pubDate>Mon, 06 Sep 2021 11:09:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4050|2024-08-03T01:27:54.503Z -- unknown -- joomsport
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4050</link>
      <description>The JoomSport WordPress plugin before 5.2.8 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by unauthenticated users</description>
      <guid isPermaLink="false">CVE-2022-4050|2024-08-03T01:27:54.503Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24786|2024-08-03T19:42:17.204Z -- unknown -- download%20monitor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24786</link>
      <description>The Download Monitor WordPress plugin before 4.4.5 does not properly validate and escape the "orderby" GET parameter before using it in a SQL statement when viewing the logs, leading to an SQL Injection issue</description>
      <guid isPermaLink="false">CVE-2021-24786|2024-08-03T19:42:17.204Z</guid>
      <pubDate>Mon, 03 Jan 2022 12:49:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25106|2024-08-03T19:56:09.976Z -- unknown -- privacy%20policy%20generator%2C%20terms%20%26%20conditions%20generator%20wordpress%20plugin%20%3A%20wplegalpages
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25106</link>
      <description>The Privacy Policy Generator, Terms &amp; Conditions Generator WordPress Plugin : WPLegalPages WordPress plugin before 2.7.1 does not check for authorisation and has a flawed CSRF logic when saving its settings, allowing any authenticated users, such as subscriber, to update them. Furthermore, due to the lack of sanitisation and escaping, it could lead to Stored Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-25106|2024-08-03T19:56:09.976Z</guid>
      <pubDate>Mon, 07 Feb 2022 15:47:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3832|2024-08-03T01:20:58.300Z -- unknown -- external%20media
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3832</link>
      <description>The External Media WordPress plugin before 1.0.36 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3832|2024-08-03T01:20:58.300Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24148|2024-08-03T19:21:18.542Z -- unknown -- mstore%20api
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24148</link>
      <description>A business logic issue in the MStore API WordPress plugin, versions before 3.2.0, had an authentication bypass with Sign In With Apple allowing unauthenticated users to recover an authentication cookie with only an email address.</description>
      <guid isPermaLink="false">CVE-2021-24148|2024-08-03T19:21:18.542Z</guid>
      <pubDate>Thu, 18 Mar 2021 14:57:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4794|2024-08-03T01:48:40.613Z -- unknown -- aawp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4794</link>
      <description>The AAWP WordPress plugin before 3.12.3 can be used to abuse trusted domains to load malware or other files through it (Reflected File Download) to bypass firewall rules in companies.</description>
      <guid isPermaLink="false">CVE-2022-4794|2024-08-03T01:48:40.613Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24920|2024-08-03T19:49:14.031Z -- unknown -- statcounter%20%E2%80%93%20free%20real%20time%20visitor%20stats
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24920</link>
      <description>The StatCounter WordPress plugin before 2.0.7 does not sanitise and escape the Project ID and Secure Code settings, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24920|2024-08-03T19:49:14.031Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1576|2024-08-03T00:10:03.924Z -- unknown -- wp%20maintenance%20mode%20%26%20coming%20soon
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1576</link>
      <description>The WP Maintenance Mode &amp; Coming Soon WordPress plugin before 2.4.5 is lacking CSRF when emptying the subscribed users list, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1576|2024-08-03T00:10:03.924Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:55:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24140|2024-08-03T19:21:18.284Z -- unknown -- ajax%20load%20more
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24140</link>
      <description>Unvalidated input in the Ajax Load More WordPress plugin, versions before 5.3.2, lead to SQL Injection in POST /wp-admin/admin-ajax.php with param repeater=' or sleep(5)#&amp;type=test.</description>
      <guid isPermaLink="false">CVE-2021-24140|2024-08-03T19:21:18.284Z</guid>
      <pubDate>Thu, 18 Mar 2021 14:57:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1764|2024-08-03T00:17:00.538Z -- unknown -- wp-chgfontsize
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1764</link>
      <description>The WP-chgFontSize WordPress plugin through 1.8 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping</description>
      <guid isPermaLink="false">CVE-2022-1764|2024-08-03T00:17:00.538Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4442|2024-08-03T01:41:44.606Z -- unknown -- custom%20post%20types%20and%20custom%20fields%20creator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4442</link>
      <description>The Custom Post Types and Custom Fields creator WordPress plugin before 2.3.3 does not sanitize and escape some of its settings, which could allow high-privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example, in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4442|2024-08-03T01:41:44.606Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4417|2024-08-03T01:41:44.631Z -- unknown -- wp%20cerber%20security%2C%20anti-spam%20%26%20malware%20scan
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4417</link>
      <description>The WP Cerber Security, Anti-spam &amp; Malware Scan WordPress plugin before 9.3.3 does not properly block access to the REST API users endpoint when the blog is in a subdirectory, which could allow attackers to bypass the restriction in place and list users</description>
      <guid isPermaLink="false">CVE-2022-4417|2024-08-03T01:41:44.631Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1905|2024-08-03T00:17:00.944Z -- unknown -- events%20made%20easy
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1905</link>
      <description>The Events Made Easy WordPress plugin before 2.2.81 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2022-1905|2024-08-03T00:17:00.944Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24621|2024-08-03T19:35:20.357Z -- unknown -- wp%20courses%20lms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24621</link>
      <description>The WP Courses LMS WordPress plugin before 2.0.44 does not sanitise its Video Embed Code, allowing malicious code to be injected in it by high privilege users, even when the unfiltered_html capability is disallowed, which could lead to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-24621|2024-08-03T19:35:20.357Z</guid>
      <pubDate>Mon, 13 Sep 2021 17:56:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24503|2024-08-03T19:35:19.753Z -- unknown -- popular%20brand%20icons%20%E2%80%93%20simple%20icons
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24503</link>
      <description>The Popular Brand Icons – Simple Icons WordPress plugin before 2.7.8 does not sanitise or validate some of its shortcode parameters, such as "color", "size" or "class", allowing users with a role as low as Contributor to set Cross-Site payload in them. A post made by a contributor would still have to be approved by an admin to have the XSS triggered in the frontend, however, higher privilege users, such as editor could exploit this without the need of approval, and even when the blog disallows the unfiltered_html capability.</description>
      <guid isPermaLink="false">CVE-2021-24503|2024-08-03T19:35:19.753Z</guid>
      <pubDate>Mon, 02 Aug 2021 10:32:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2763|2024-08-03T00:46:04.506Z -- unknown -- wp%20socializer%20%E2%80%93%20simple%20%26%20easy%20social%20media%20share%20icons
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2763</link>
      <description>The WP Socializer WordPress plugin before 7.3 does not sanitise and escape some of its Icons settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2763|2024-08-03T00:46:04.506Z</guid>
      <pubDate>Mon, 03 Oct 2022 13:45:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3848|2024-08-03T01:20:58.449Z -- unknown -- wp%20user%20merger
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3848</link>
      <description>The WP User Merger WordPress plugin before 1.5.3 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as admin</description>
      <guid isPermaLink="false">CVE-2022-3848|2024-08-03T01:20:58.449Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1643|2024-08-03T00:10:03.791Z -- unknown -- birthdays%20widget
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1643</link>
      <description>The Birthdays Widget WordPress plugin through 1.7.18 does not sanitise and escape some of its fields, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1643|2024-08-03T00:10:03.791Z</guid>
      <pubDate>Mon, 30 May 2022 08:36:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1593|2024-08-03T00:10:03.565Z -- unknown -- site%20offline%20or%20coming%20soon
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1593</link>
      <description>The Site Offline or Coming Soon WordPress plugin through 1.6.6 does not have CSRF check in place when updating its settings, and it also lacking sanitisation as well as escaping in some of them. As a result, attackers could make a logged in admin change them and put Cross-Site Scripting payloads in them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1593|2024-08-03T00:10:03.565Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:57:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2148|2024-08-03T00:24:44.311Z -- unknown -- linkedin%20company%20updates
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2148</link>
      <description>The LinkedIn Company Updates WordPress plugin through 1.5.3 does not sanitise and escape its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2148|2024-08-03T00:24:44.311Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:36:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24801|2024-08-03T19:42:17.191Z -- unknown -- wp%20survey%20plus
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24801</link>
      <description>The WP Survey Plus WordPress plugin through 1.0 does not have any authorisation and CSRF checks in place in its AJAX actions, allowing any user to call them and add/edit/delete Surveys. Furthermore, due to the lack of sanitization in the Surveys' Title, this could also lead to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-24801|2024-08-03T19:42:17.191Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:35:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24381|2024-08-03T19:28:23.777Z -- unknown -- ninja%20forms%20contact%20form%20%E2%80%93%20the%20drag%20and%20drop%20form%20builder%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24381</link>
      <description>The Ninja Forms Contact Form WordPress plugin before 3.5.8.2 does not sanitise and escape the custom class name of the form field created, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24381|2024-08-03T19:28:23.777Z</guid>
      <pubDate>Mon, 25 Oct 2021 13:20:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4664|2024-08-03T01:48:39.689Z -- unknown -- logo%20slider
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4664</link>
      <description>The Logo Slider WordPress plugin before 3.6.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4664|2024-08-03T01:48:39.689Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4324|2024-08-03T01:34:50.061Z -- unknown -- custom%20field%20template
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4324</link>
      <description>The Custom Field Template WordPress plugin before 2.5.8 unserialises the content of an imported file, which could lead to PHP object injections issues when a high privilege user import (intentionally or not) a malicious Customizer Styling file and a suitable gadget chain is present on the blog.</description>
      <guid isPermaLink="false">CVE-2022-4324|2024-08-03T01:34:50.061Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3419|2024-08-03T01:07:06.705Z -- unknown -- automatic%20user%20roles%20switcher
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3419</link>
      <description>The Automatic User Roles Switcher WordPress plugin before 1.1.2 does not have authorisation and proper CSRF checks, allowing any authenticated users like subscriber to add any role to themselves, such as administrator</description>
      <guid isPermaLink="false">CVE-2022-3419|2024-08-03T01:07:06.705Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4359|2024-08-03T01:34:50.174Z -- unknown -- wp%20rss%20by%20publishers
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4359</link>
      <description>The WP RSS By Publishers WordPress plugin through 0.1 does not properly sanitize and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2022-4359|2024-08-03T01:34:50.174Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24999|2024-08-03T19:49:14.549Z -- unknown -- booster%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24999</link>
      <description>The Booster for WooCommerce WordPress plugin before 5.4.9 does not sanitise and escape the wcj_notice parameter before outputting it back in the admin dashboard when the Pdf Invoicing module is enabled, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-24999|2024-08-03T19:49:14.549Z</guid>
      <pubDate>Mon, 03 Jan 2022 12:49:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1843|2024-08-03T00:17:00.824Z -- unknown -- mailpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1843</link>
      <description>The MailPress WordPress plugin through 7.2.1 does not have CSRF checks in various places, which could allow attackers to make a logged in admin change the settings, purge log files and more via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2022-1843|2024-08-03T00:17:00.824Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:57:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24598|2024-08-03T19:35:20.152Z -- unknown -- testimonial
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24598</link>
      <description>The Testimonial WordPress plugin before 1.6.0 does not escape some testimonial fields which could allow high privilege users to perform Cross Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24598|2024-08-03T19:35:20.152Z</guid>
      <pubDate>Wed, 17 Nov 2021 10:15:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3923|2024-08-03T01:20:59.111Z -- unknown -- activecampaign%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3923</link>
      <description>The ActiveCampaign for WooCommerce WordPress plugin before 1.9.8 does not have authorisation check when cleaning up its error logs via an AJAX action, which could allow any authenticated users, such as subscriber to call it and remove error logs.</description>
      <guid isPermaLink="false">CVE-2022-3923|2024-08-03T01:20:59.111Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2409|2024-08-03T00:39:07.672Z -- unknown -- rough%20chart
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2409</link>
      <description>The Rough Chart WordPress plugin through 1.0.0 does not properly escape chart data label, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2409|2024-08-03T00:39:07.672Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:49:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4827|2024-08-03T01:55:45.347Z -- unknown -- wp%20tiles
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4827</link>
      <description>The WP Tiles WordPress plugin through 1.1.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4827|2024-08-03T01:55:45.347Z</guid>
      <pubDate>Mon, 10 Apr 2023 13:18:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2190|2024-08-03T00:32:08.736Z -- unknown -- gallery%20plugin%20for%20wordpress%20%E2%80%93%20envira%20photo%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2190</link>
      <description>The Gallery Plugin for WordPress plugin before 1.8.4.7 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2022-2190|2024-08-03T00:32:08.736Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1801|2024-08-03T00:16:59.881Z -- unknown -- very%20simple%20contact%20form
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1801</link>
      <description>The Very Simple Contact Form WordPress plugin before 11.6 exposes the solution to the captcha in the rendered contact form, both as hidden input fields and as plain text in the page, making it very easy for bots to bypass the captcha check, rendering the page a likely target for spam bots.</description>
      <guid isPermaLink="false">CVE-2022-1801|2024-08-03T00:16:59.881Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:25:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2375|2024-08-03T00:32:09.626Z -- unknown -- wp%20sticky%20button%20%E2%80%93%20click%20to%20chat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2375</link>
      <description>The WP Sticky Button WordPress plugin before 1.4.1 does not have authorisation and CSRF checks when saving its settings, allowing unauthenticated users to update them. Furthermore, due to the lack of escaping in some of them, it could lead to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2022-2375|2024-08-03T00:32:09.626Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:01:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4466|2024-08-03T01:41:45.000Z -- unknown -- wordpress%20infinite%20scroll
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4466</link>
      <description>The WordPress Infinite Scroll WordPress plugin before 5.6.0.3 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-4466|2024-08-03T01:41:45.000Z</guid>
      <pubDate>Mon, 13 Mar 2023 16:03:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25032|2024-08-03T19:49:14.582Z -- unknown -- publishpress%20capabilities%20%E2%80%93%20user%20role%20access%2C%20editor%20permissions%2C%20admin%20menus
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25032</link>
      <description>The PublishPress Capabilities WordPress plugin before 2.3.1, PublishPress Capabilities Pro WordPress plugin before 2.3.1 does not have authorisation and CSRF checks when updating the plugin's settings via the init hook, and does not ensure that the options to be updated belong to the plugin. As a result, unauthenticated attackers could update arbitrary blog options, such as the default role and make any new registered user with an administrator role.</description>
      <guid isPermaLink="false">CVE-2021-25032|2024-08-03T19:49:14.582Z</guid>
      <pubDate>Mon, 10 Jan 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1574|2024-08-03T00:10:03.721Z -- unknown -- html2wp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1574</link>
      <description>The HTML2WP WordPress plugin through 1.0.0 does not have authorisation and CSRF checks when importing files, and does not validate them, as a result, unauthenticated attackers can upload arbitrary files (such as PHP) on the remote server</description>
      <guid isPermaLink="false">CVE-2022-1574|2024-08-03T00:10:03.721Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:57:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24891|2024-08-03T19:49:14.369Z -- unknown -- elementor%20website%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24891</link>
      <description>The Elementor Website Builder WordPress plugin before 3.4.8 does not sanitise or escape user input appended to the DOM via a malicious hash, resulting in a DOM Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-24891|2024-08-03T19:49:14.369Z</guid>
      <pubDate>Tue, 23 Nov 2021 19:16:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24481|2024-08-03T19:35:20.126Z -- unknown -- any%20hostname
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24481</link>
      <description>The Any Hostname WordPress plugin through 1.0.6 does not sanitise or escape its "Allowed hosts" setting, leading to an authenticated stored XSS issue as high privilege users are able to set XSS payloads in it</description>
      <guid isPermaLink="false">CVE-2021-24481|2024-08-03T19:35:20.126Z</guid>
      <pubDate>Mon, 02 Aug 2021 10:32:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24515|2024-08-03T19:35:20.135Z -- unknown -- video%20gallery%20-%20vimeo%20and%20youtube%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24515</link>
      <description>The Video Gallery WordPress plugin before 1.1.5 does not escape the Title and Description of the videos in a gallery before outputting them in attributes, leading to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-24515|2024-08-03T19:35:20.135Z</guid>
      <pubDate>Mon, 25 Oct 2021 13:20:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2355|2024-08-03T00:32:09.598Z -- unknown -- easy%20username%20updater
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2355</link>
      <description>The Easy Username Updater WordPress plugin before 1.0.5 does not implement CSRF checks, which could allow attackers to make a logged in admin change any user's username includes the admin</description>
      <guid isPermaLink="false">CVE-2022-2355|2024-08-03T00:32:09.598Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:46:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1762|2024-08-03T00:16:59.806Z -- unknown -- iq%20block%20country
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1762</link>
      <description>The iQ Block Country WordPress plugin before 1.2.20 does not properly checks HTTP headers in order to validate the origin IP address, allowing threat actors to bypass it's block feature by spoofing the headers.</description>
      <guid isPermaLink="false">CVE-2022-1762|2024-08-03T00:16:59.806Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24942|2024-08-03T19:49:13.528Z -- unknown -- menu%20item%20visibility%20control
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24942</link>
      <description>The Menu Item Visibility Control WordPress plugin through 0.5 doesn't sanitize and validate the "Visibility logic" option for WordPress menu items, which could allow highly privileged users to execute arbitrary PHP code even in a hardened environment.</description>
      <guid isPermaLink="false">CVE-2021-24942|2024-08-03T19:49:13.528Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24222|2024-08-03T19:21:18.724Z -- unknown -- wp-curriculo%20vitae%20free
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24222</link>
      <description>The WP-Curriculo Vitae Free WordPress plugin through 6.3 suffers from an arbitrary file upload issue in page where the [formCadastro] is embed. The form allows unauthenticated user to register and submit files for their profile picture as well as resume, without any file extension restriction, leading to RCE.</description>
      <guid isPermaLink="false">CVE-2021-24222|2024-08-03T19:21:18.724Z</guid>
      <pubDate>Mon, 12 Apr 2021 14:03:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4763|2024-08-03T01:48:40.363Z -- unknown -- icon%20widget
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4763</link>
      <description>The Icon Widget WordPress plugin before 1.3.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4763|2024-08-03T01:48:40.363Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2370|2024-08-03T00:32:09.695Z -- unknown -- yaysmtp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2370</link>
      <description>The YaySMTP WordPress plugin before 2.2.1 does not have capability check before displaying the Mailer Credentials in JS code for the settings, allowing any authenticated users, such as subscriber to retrieve them</description>
      <guid isPermaLink="false">CVE-2022-2370|2024-08-03T00:32:09.695Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:52:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3850|2024-08-03T01:20:58.384Z -- unknown -- find%20and%20replace%20all
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3850</link>
      <description>The Find and Replace All WordPress plugin before 1.3 does not have CSRF check when replacing string, which could allow attackers to make a logged admin replace arbitrary string in database tables via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-3850|2024-08-03T01:20:58.384Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24144|2024-08-03T19:21:18.287Z -- unknown -- contact%20form%207%20database%20addon
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24144</link>
      <description>Unvalidated input in the Contact Form 7 Database Addon plugin, versions before 1.2.5.6, was prone to a vulnerability that lets remote attackers inject arbitrary formulas into CSV files.</description>
      <guid isPermaLink="false">CVE-2021-24144|2024-08-03T19:21:18.287Z</guid>
      <pubDate>Thu, 18 Mar 2021 14:57:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24616|2024-08-03T19:35:20.230Z -- unknown -- addtoany%20share%20buttons
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24616</link>
      <description>The AddToAny Share Buttons WordPress plugin before 1.7.48 does not escape its Image URL button setting, which could lead allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24616|2024-08-03T19:35:20.230Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:34:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2100|2024-08-03T00:24:44.173Z -- unknown -- page%20generator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2100</link>
      <description>The Page Generator WordPress plugin before 1.6.5 does not sanitise and escape its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2100|2024-08-03T00:24:44.173Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:35:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24362|2024-08-03T19:28:23.722Z -- unknown -- photo%20gallery%20by%2010web%20%E2%80%93%20mobile-friendly%20image%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24362</link>
      <description>The Photo Gallery by 10Web – Mobile-Friendly Image Gallery WordPress plugin before 1.5.75 did not ensure that uploaded SVG files added to a gallery do not contain malicious content. As a result, users allowed to add images to gallery can upload an SVG file containing JavaScript code, which will be executed when accessing the image directly (ie in the /wp-content/uploads/photo-gallery/ folder), leading to a Cross-Site Scripting (XSS) issue</description>
      <guid isPermaLink="false">CVE-2021-24362|2024-08-03T19:28:23.722Z</guid>
      <pubDate>Mon, 16 Aug 2021 10:48:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3374|2024-08-03T01:07:06.519Z -- unknown -- ocean%20extra
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3374</link>
      <description>The Ocean Extra WordPress plugin before 2.0.5 unserialises the content of an imported file, which could lead to PHP object injections issues when a high privilege user import (intentionally or not) a malicious Customizer Styling file and a suitable gadget chain is present on the blog.</description>
      <guid isPermaLink="false">CVE-2022-3374|2024-08-03T01:07:06.519Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4115|2024-08-03T01:27:54.445Z -- unknown -- editorial%20calendar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4115</link>
      <description>The Editorial Calendar WordPress plugin before 3.8.3 does not sanitise and escape its settings, allowing users with roles as low as contributor to inject arbitrary web scripts in the plugin admin panel, enabling a Stored Cross-Site Scripting vulnerability targeting higher privileged users.</description>
      <guid isPermaLink="false">CVE-2022-4115|2024-08-03T01:27:54.445Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24164|2024-08-03T19:21:18.626Z -- unknown -- ninja%20forms%20contact%20form%20%E2%80%93%20the%20drag%20and%20drop%20form%20builder%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24164</link>
      <description>In the Ninja Forms Contact Form WordPress plugin before 3.4.34.1, low-level users, such as subscribers, were able to trigger the action, wp_ajax_nf_oauth, and retrieve the connection url needed to establish a connection. They could also retrieve the client_id for an already established OAuth connection.</description>
      <guid isPermaLink="false">CVE-2021-24164|2024-08-03T19:21:18.626Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24933|2024-08-03T19:49:13.872Z -- unknown -- dynamic%20widgets
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24933</link>
      <description>The Dynamic Widgets WordPress plugin through 1.5.16 does not escape the prefix parameter before outputting it back in an attribute when using the term_tree AJAX action (available to any authenticated users), leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24933|2024-08-03T19:49:13.872Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1990|2024-08-03T00:24:44.129Z -- unknown -- nested%20pages
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1990</link>
      <description>The Nested Pages WordPress plugin before 3.1.21 does not escape and sanitize the some of its settings, which could allow high privilege users to perform Stored Cross-Site Scripting attacks when the unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1990|2024-08-03T00:24:44.129Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:59:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24959|2024-08-03T19:49:13.934Z -- unknown -- wp%20email%20users
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24959</link>
      <description>The WP Email Users WordPress plugin through 1.7.6 does not escape the data_raw parameter in the weu_selected_users_1 AJAX action, available to any authenticated users, allowing them to perform SQL injection attacks.</description>
      <guid isPermaLink="false">CVE-2021-24959|2024-08-03T19:49:13.934Z</guid>
      <pubDate>Mon, 14 Mar 2022 14:41:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1977|2024-08-03T00:24:44.033Z -- unknown -- import%20export%20all%20wordpress%20images%2C%20users%20%26%20post%20types
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1977</link>
      <description>The Import Export All WordPress Images, Users &amp; Post Types WordPress plugin before 6.5.3 does not fully validate the file to be imported via an URL before making an HTTP request to it, which could allow high privilege users such as admin to perform Blind SSRF attacks</description>
      <guid isPermaLink="false">CVE-2022-1977|2024-08-03T00:24:44.033Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:59:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4458|2024-08-03T01:41:44.608Z -- unknown -- amr%20shortcode%20any%20widget
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4458</link>
      <description>The amr shortcode any widget WordPress plugin through 4.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4458|2024-08-03T01:41:44.608Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24561|2024-08-03T19:35:20.197Z -- unknown -- wp%20sms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24561</link>
      <description>The WP SMS WordPress plugin before 5.4.13 does not sanitise the "wp_group_name" parameter before outputting it back in the "Groups" page, leading to an Authenticated Stored Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24561|2024-08-03T19:35:20.197Z</guid>
      <pubDate>Mon, 23 Aug 2021 11:10:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24737|2024-08-03T19:42:16.541Z -- unknown -- comments%20%E2%80%93%20wpdiscuz
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24737</link>
      <description>The Comments – wpDiscuz WordPress plugin through 7.3.0 does not properly sanitise or escape the Follow and Unfollow messages before outputting them in the page, which could allow high privilege users to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24737|2024-08-03T19:42:16.541Z</guid>
      <pubDate>Mon, 11 Oct 2021 10:45:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24354|2024-08-03T19:28:23.447Z -- unknown -- simple%20301%20redirects%20by%20betterlinks
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24354</link>
      <description>A lack of capability checks and insufficient nonce check on the AJAX action in the Simple 301 Redirects by BetterLinks WordPress plugin before 2.0.4, made it possible for authenticated users to install arbitrary plugins on vulnerable sites.</description>
      <guid isPermaLink="false">CVE-2021-24354|2024-08-03T19:28:23.447Z</guid>
      <pubDate>Mon, 14 Jun 2021 13:37:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3359|2024-08-03T01:07:06.571Z -- unknown -- shortcodes%20and%20extra%20features%20for%20phlox%20theme
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3359</link>
      <description>The Shortcodes and extra features for Phlox theme WordPress plugin before 2.10.7 unserializes the content of an imported file, which could lead to PHP object injection when a user imports (intentionally or not) a malicious file and a suitable gadget chain is present on the blog.</description>
      <guid isPermaLink="false">CVE-2022-3359|2024-08-03T01:07:06.571Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2628|2024-08-03T00:46:03.288Z -- unknown -- dsgvo%20all%20in%20one%20for%20wp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2628</link>
      <description>The DSGVO All in one for WP WordPress plugin before 4.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2628|2024-08-03T00:46:03.288Z</guid>
      <pubDate>Mon, 03 Oct 2022 13:45:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24347|2024-08-03T19:28:23.833Z -- unknown -- sp%20project%20%26%20document%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24347</link>
      <description>The SP Project &amp; Document Manager WordPress plugin before 4.22 allows users to upload files, however, the plugin attempts to prevent php and other similar files that could be executed on the server from being uploaded by checking the file extension. It was discovered that php files could still be uploaded by changing the file extension's case, for example, from "php" to "pHP".</description>
      <guid isPermaLink="false">CVE-2021-24347|2024-08-03T19:28:23.833Z</guid>
      <pubDate>Mon, 14 Jun 2021 13:37:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4833|2024-08-03T01:55:46.192Z -- unknown -- yourchannel%3A%20everything%20you%20want%20in%20a%20youtube%20plugin.
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4833</link>
      <description>The YourChannel: Everything you want in a YouTube plugin WordPress plugin before 1.2.3 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4833|2024-08-03T01:55:46.192Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2034|2024-08-03T00:24:43.797Z -- unknown -- sensei%20lms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2034</link>
      <description>The Sensei LMS WordPress plugin before 4.5.0 does not have proper permissions set in one of its REST endpoint, allowing unauthenticated users to access private messages sent to teachers</description>
      <guid isPermaLink="false">CVE-2022-2034|2024-08-03T00:24:43.797Z</guid>
      <pubDate>Mon, 29 Aug 2022 14:40:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3380|2024-08-03T01:07:06.554Z -- unknown -- customizer%20export%2Fimport
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3380</link>
      <description>The Customizer Export/Import WordPress plugin before 0.9.5 unserializes the content of an imported file, which could lead to PHP object injection issues when an admin imports (intentionally or not) a malicious file and a suitable gadget chain is present on the blog.</description>
      <guid isPermaLink="false">CVE-2022-3380|2024-08-03T01:07:06.554Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4148|2024-08-03T01:27:54.502Z -- unknown -- wp%20oauth%20server%20%28oauth%20authentication%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4148</link>
      <description>The WP OAuth Server (OAuth Authentication) WordPress plugin before 4.3.0 has a flawed CSRF and authorisation check when deleting a client, which could allow any authenticated users, such as subscriber to delete arbitrary client.</description>
      <guid isPermaLink="false">CVE-2022-4148|2024-08-03T01:27:54.502Z</guid>
      <pubDate>Mon, 20 Mar 2023 15:52:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3610|2024-08-03T01:14:02.540Z -- unknown -- jeeng%20push%20notifications
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3610</link>
      <description>The Jeeng Push Notifications WordPress plugin before 2.0.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3610|2024-08-03T01:14:02.540Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3906|2024-08-03T01:20:58.477Z -- unknown -- easy%20form%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3906</link>
      <description>The Easy Form Builder WordPress plugin before 3.4.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3906|2024-08-03T01:20:58.477Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25013|2024-08-03T19:49:14.630Z -- unknown -- qubely%20%E2%80%93%20advanced%20gutenberg%20blocks
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25013</link>
      <description>The Qubely WordPress plugin before 1.7.8 does not have authorisation and CSRF check on the qubely_delete_saved_block AJAX action, and does not ensure that the block to be deleted belong to the plugin, as a result, any authenticated users, such as subscriber can delete arbitrary posts</description>
      <guid isPermaLink="false">CVE-2021-25013|2024-08-03T19:49:14.630Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:01:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1845|2024-08-03T00:17:00.813Z -- unknown -- wp%20post%20styling
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1845</link>
      <description>The WP Post Styling WordPress plugin before 1.3.1 does not have CSRF checks in various actions, which could allow attackers to make a logged in admin delete plugin's data, update the settings, add new entries and more via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2022-1845|2024-08-03T00:17:00.813Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:57:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24588|2024-08-03T19:35:20.254Z -- unknown -- sms%20alert%20order%20notifications%20%E2%80%93%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24588</link>
      <description>The SMS Alert Order Notifications WordPress plugin before 3.4.7 is affected by a cross site scripting (XSS) vulnerability in the plugin's setting page.</description>
      <guid isPermaLink="false">CVE-2021-24588|2024-08-03T19:35:20.254Z</guid>
      <pubDate>Mon, 06 Sep 2021 11:09:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24832|2024-08-03T19:42:17.371Z -- unknown -- wp%20seo%20redirect%20301
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24832</link>
      <description>The WP SEO Redirect 301 WordPress plugin before 2.3.2 does not have CSRF in place when deleting redirects, which could allow attackers to make a logged in admin delete them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2021-24832|2024-08-03T19:42:17.371Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:35:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4305|2024-08-03T01:34:50.042Z -- unknown -- login%20as%20user%20or%20customer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4305</link>
      <description>The Login as User or Customer WordPress plugin before 3.3 lacks authorization checks to ensure that users are allowed to log in as another one, which could allow unauthenticated attackers to obtain a valid admin session.</description>
      <guid isPermaLink="false">CVE-2022-4305|2024-08-03T01:34:50.042Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24537|2024-08-03T19:35:20.024Z -- unknown -- similar%20posts%20%E2%80%93%20best%20related%20posts%20plugin%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24537</link>
      <description>The Similar Posts WordPress plugin through 3.1.5 allow high privilege users to execute arbitrary PHP code in an hardened environment (ie with DISALLOW_FILE_EDIT, DISALLOW_FILE_MODS and DISALLOW_UNFILTERED_HTML set to true) via the 'widget_rrm_similar_posts_condition' widget setting of the plugin.</description>
      <guid isPermaLink="false">CVE-2021-24537|2024-08-03T19:35:20.024Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:34:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4057|2024-08-03T01:27:54.476Z -- unknown -- autoptimize
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4057</link>
      <description>The Autoptimize WordPress plugin before 3.1.0 uses an easily guessable path to store plugin's exported settings and logs.</description>
      <guid isPermaLink="false">CVE-2022-4057|2024-08-03T01:27:54.476Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24446|2024-08-03T19:28:23.968Z -- unknown -- remove%20footer%20credit
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24446</link>
      <description>The Remove Footer Credit WordPress plugin before 1.0.6 does not have CSRF check in place when saving its settings, which could allow attacker to make logged in admins change them and lead to Stored XSS issue as well due to the lack of sanitisation</description>
      <guid isPermaLink="false">CVE-2021-24446|2024-08-03T19:28:23.968Z</guid>
      <pubDate>Mon, 14 Feb 2022 09:20:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24187|2024-08-03T19:21:18.704Z -- unknown -- seo%20redirection%20plugin%20-%20301%20redirect%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24187</link>
      <description>The setting page of the SEO Redirection Plugin - 301 Redirect Manager WordPress plugin before 6.4 is vulnerable to reflected Cross-Site Scripting (XSS) as user input is not properly sanitised before being output in an attribute.</description>
      <guid isPermaLink="false">CVE-2021-24187|2024-08-03T19:21:18.704Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2114|2024-08-03T00:24:44.274Z -- unknown -- data%20tables%20generator%20by%20supsystic
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2114</link>
      <description>The Data Tables Generator by Supsystic WordPress plugin before 1.10.20 does not sanitise and escape some of its Table settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2114|2024-08-03T00:24:44.274Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:36:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24855|2024-08-03T19:42:17.468Z -- unknown -- display%20post%20metadata
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24855</link>
      <description>The Display Post Metadata WordPress plugin before 1.5.0 adds a shortcode to print out custom fields, however their content is not sanitised or escaped which could allow users with a role as low as Contributor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2021-24855|2024-08-03T19:42:17.468Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:41:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1625|2024-08-03T00:10:03.782Z -- unknown -- new%20user%20approve
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1625</link>
      <description>The New User Approve WordPress plugin before 2.4 does not have CSRF check in place when updating its settings and adding invitation codes, which could allow attackers to add invitation codes (for bypassing the provided restrictions) and to change plugin settings by tricking admin users into visiting specially crafted websites.</description>
      <guid isPermaLink="false">CVE-2022-1625|2024-08-03T00:10:03.782Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:57:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2151|2024-08-03T00:24:44.266Z -- unknown -- best%20contact%20management%20software%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2151</link>
      <description>The Best Contact Management Software WordPress plugin through 3.7.3 does not sanitise and escape its settings, allowing high privilege users such as admin to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2151|2024-08-03T00:24:44.266Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:36:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24744|2024-08-03T19:42:16.685Z -- unknown -- wordpress%20contact%20forms%20by%20cimatti
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24744</link>
      <description>The WordPress Contact Forms by Cimatti WordPress plugin before 1.4.12 does not sanitise and escape the Form Title before outputting it in some admin pages. which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24744|2024-08-03T19:42:16.685Z</guid>
      <pubDate>Mon, 25 Oct 2021 13:20:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1573|2024-08-03T00:10:03.374Z -- unknown -- html2wp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1573</link>
      <description>The HTML2WP WordPress plugin through 1.0.0 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them</description>
      <guid isPermaLink="false">CVE-2022-1573|2024-08-03T00:10:03.374Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:56:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4383|2024-08-03T01:41:44.402Z -- unknown -- cbx%20petition%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4383</link>
      <description>The CBX Petition for WordPress plugin through 1.0.3 does not properly sanitize and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection.</description>
      <guid isPermaLink="false">CVE-2022-4383|2024-08-03T01:41:44.402Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1580|2024-08-03T00:10:03.579Z -- unknown -- site%20offline%20or%20coming%20soon%20or%20maintenance%20mode
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1580</link>
      <description>The Site Offline Or Coming Soon Or Maintenance Mode WordPress plugin before 1.5.3 prevents users from accessing a website but does not do so if the URL contained certain keywords. Adding those keywords to the URL's query string would bypass the plugin's main feature.</description>
      <guid isPermaLink="false">CVE-2022-1580|2024-08-03T00:10:03.579Z</guid>
      <pubDate>Mon, 19 Sep 2022 14:00:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24132|2024-08-03T19:21:18.202Z -- unknown -- slider%20by%2010web
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24132</link>
      <description>The Slider by 10Web WordPress plugin, versions before 1.2.36, in the bulk_action, export_full and save_slider_db functionalities of the plugin were vulnerable, allowing a high privileged user (Admin), or medium one such as Contributor+ (if "Role Options" is turn on for other users) to perform a SQL Injection attacks.</description>
      <guid isPermaLink="false">CVE-2021-24132|2024-08-03T19:21:18.202Z</guid>
      <pubDate>Thu, 18 Mar 2021 14:57:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24830|2024-08-03T19:42:17.343Z -- unknown -- advanced%20access%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24830</link>
      <description>The Advanced Access Manager WordPress plugin before 6.8.0 does not escape some of its settings when outputting them, allowing high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24830|2024-08-03T19:42:17.343Z</guid>
      <pubDate>Tue, 23 Nov 2021 19:16:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24673|2024-08-03T19:42:16.089Z -- unknown -- appointment%20hour%20booking%20%E2%80%93%20wordpress%20booking%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24673</link>
      <description>The Appointment Hour Booking WordPress plugin before 1.3.16 does not escape some of the Calendar Form settings, allowing high privilege users to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24673|2024-08-03T19:42:16.089Z</guid>
      <pubDate>Mon, 04 Oct 2021 11:20:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2369|2024-08-03T00:32:09.470Z -- unknown -- yaysmtp%20%E2%80%93%20simple%20wp%20smtp%20mail
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2369</link>
      <description>The YaySMTP WordPress plugin before 2.2.1 does not have capability check in an AJAX action, allowing any logged in users, such as subscriber to view the Logs of the plugin</description>
      <guid isPermaLink="false">CVE-2022-2369|2024-08-03T00:32:09.470Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:52:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24917|2024-08-03T19:49:13.491Z -- unknown -- wps%20hide%20login
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24917</link>
      <description>The WPS Hide Login WordPress plugin before 1.9.1 has a bug which allows to get the secret login page by setting a random referer string and making a request to /wp-admin/options.php as an unauthenticated user.</description>
      <guid isPermaLink="false">CVE-2021-24917|2024-08-03T19:49:13.491Z</guid>
      <pubDate>Mon, 06 Dec 2021 15:55:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24175|2024-08-03T19:21:18.637Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24175</link>
      <description>The Plus Addons for Elementor Page Builder WordPress plugin before 4.1.7 was being actively exploited to by malicious actors to bypass authentication, allowing unauthenticated users to log in as any user (including admin) by just providing the related username, as well as create accounts with arbitrary roles, such as admin. These issues can be exploited even if registration is disabled, and the Login widget is not active.</description>
      <guid isPermaLink="false">CVE-2021-24175|2024-08-03T19:21:18.637Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1757|2024-08-03T00:16:59.901Z -- unknown -- pagebar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1757</link>
      <description>The pagebar WordPress plugin before 2.70 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack. Furthermore, due to the lack of sanitisation in some of them, it could also lead to Stored XSS issues</description>
      <guid isPermaLink="false">CVE-2022-1757|2024-08-03T00:16:59.901Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:56:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1672|2024-08-03T00:10:03.792Z -- unknown -- insights%20from%20google%20pagespeed
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1672</link>
      <description>The Insights from Google PageSpeed WordPress plugin before 4.0.7 does not verify for CSRF before doing various actions such as deleting Custom URLs, which could allow attackers to make a logged in admin perform such actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2022-1672|2024-08-03T00:10:03.792Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:35:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4757|2024-08-03T01:48:40.187Z -- unknown -- list%20pages%20shortcode
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4757</link>
      <description>The List Pages Shortcode WordPress plugin before 1.7.6 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4757|2024-08-03T01:48:40.187Z</guid>
      <pubDate>Mon, 27 Feb 2023 15:24:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24916|2024-08-03T19:49:13.911Z -- unknown -- qubely
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24916</link>
      <description>The Qubely WordPress plugin before 1.8.6 allows unauthenticated user to send arbitrary e-mails to arbitrary addresses via the qubely_send_form_data AJAX action.</description>
      <guid isPermaLink="false">CVE-2021-24916|2024-08-03T19:49:13.911Z</guid>
      <pubDate>Mon, 07 Aug 2023 14:31:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24708|2024-08-03T19:42:16.872Z -- unknown -- export%20any%20wordpress%20data%20to%20xml%2Fcsv
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24708</link>
      <description>The Export any WordPress data to XML/CSV WordPress plugin before 1.3.1 does not escape its Export's Name before outputting it in Manage Exports settings, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24708|2024-08-03T19:42:16.872Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:35:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2775|2024-08-03T00:46:04.434Z -- unknown -- fast%20flow
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2775</link>
      <description>The Fast Flow WordPress plugin before 1.2.13 does not sanitise and escape some of its Widget settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2775|2024-08-03T00:46:04.434Z</guid>
      <pubDate>Mon, 05 Sep 2022 12:35:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25094|2024-08-03T19:56:09.980Z -- unknown -- tatsu
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25094</link>
      <description>The Tatsu WordPress plugin before 3.3.12 add_custom_font action can be used without prior authentication to upload a rogue zip file which is uncompressed under the WordPress's upload directory. By adding a PHP shell with a filename starting with a dot ".", this can bypass extension control implemented in the plugin. Moreover, there is a race condition in the zip extraction process which makes the shell file live long enough on the filesystem to be callable by an attacker.</description>
      <guid isPermaLink="false">CVE-2021-25094|2024-08-03T19:56:09.980Z</guid>
      <pubDate>Mon, 25 Apr 2022 15:50:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24883|2024-08-03T19:49:12.675Z -- unknown -- popup%20anything%20%E2%80%93%20a%20marketing%20popup
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24883</link>
      <description>The Popup Anything WordPress plugin before 2.0.4 does not escape the Link Text and Button Text fields of Popup, which could allow users with a role as low as Contributor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2021-24883|2024-08-03T19:49:12.675Z</guid>
      <pubDate>Mon, 29 Nov 2021 08:25:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2398|2024-08-03T00:39:06.414Z -- unknown -- wordpress%20comments%20fields
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2398</link>
      <description>The WordPress Comments Fields WordPress plugin before 4.1 does not escape Field Error Message, which could allow high-privileged users to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2022-2398|2024-08-03T00:39:06.414Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:48:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24727|2024-08-03T19:42:16.852Z -- unknown -- wp%20block%20and%20stop%20bad%20bots%20crawlers%20and%20spiders%20and%20anti%20spam%20protection%20plugin%20stopbadbots
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24727</link>
      <description>The StopBadBots WordPress plugin before 6.60 did not validate or escape the order and orderby GET parameter in some of its admin dashboard pages, leading to Authenticated SQL Injections</description>
      <guid isPermaLink="false">CVE-2021-24727|2024-08-03T19:42:16.852Z</guid>
      <pubDate>Mon, 13 Sep 2021 17:56:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24153|2024-08-03T19:21:18.410Z -- unknown -- yoast%20seo
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24153</link>
      <description>A Stored Cross-Site Scripting vulnerability was discovered in the Yoast SEO WordPress plugin before 3.4.1, which had built-in blacklist filters which were blacklisting Parenthesis as well as several functions such as alert but bypasses were found.</description>
      <guid isPermaLink="false">CVE-2021-24153|2024-08-03T19:21:18.410Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24355|2024-08-03T19:28:23.655Z -- unknown -- simple%20301%20redirects%20by%20betterlinks
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24355</link>
      <description>In the Simple 301 Redirects by BetterLinks WordPress plugin before 2.0.4, the lack of capability checks and insufficient nonce check on the AJAX actions, simple301redirects/admin/get_wildcard and simple301redirects/admin/wildcard, made it possible for authenticated users to retrieve and update the wildcard value for redirects.</description>
      <guid isPermaLink="false">CVE-2021-24355|2024-08-03T19:28:23.655Z</guid>
      <pubDate>Mon, 14 Jun 2021 13:37:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24639|2024-08-03T19:35:20.417Z -- unknown -- omgf%20%7C%20host%20google%20fonts%20locally
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24639</link>
      <description>The OMGF WordPress plugin before 4.5.4 does not enforce path validation, authorisation and CSRF checks in the omgf_ajax_empty_dir AJAX action, which allows any authenticated users to delete arbitrary files or folders on the server.</description>
      <guid isPermaLink="false">CVE-2021-24639|2024-08-03T19:35:20.417Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24501|2024-08-03T19:35:19.963Z -- unknown -- workreap
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24501</link>
      <description>The Workreap WordPress theme before 2.2.2 had several AJAX actions missing authorization checks to verify that a user was authorized to perform critical operations such as modifying or deleting objects. This allowed a logged in user to modify or delete objects belonging to other users on the site.</description>
      <guid isPermaLink="false">CVE-2021-24501|2024-08-03T19:35:19.963Z</guid>
      <pubDate>Mon, 09 Aug 2021 10:04:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24748|2024-08-03T19:42:16.642Z -- unknown -- email%20before%20download
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24748</link>
      <description>The Email Before Download WordPress plugin before 6.8 does not properly validate and escape the order and orderby GET parameters before using them in SQL statements, leading to authenticated SQL injection issues</description>
      <guid isPermaLink="false">CVE-2021-24748|2024-08-03T19:42:16.642Z</guid>
      <pubDate>Mon, 29 Nov 2021 08:25:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24579|2024-08-03T19:35:20.209Z -- unknown -- bold%20page%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24579</link>
      <description>The bt_bb_get_grid AJAX action of the Bold Page Builder WordPress plugin before 3.1.6 passes user input into the unserialize() function without any validation or sanitisation, which could lead to a PHP Object Injection. Even though the plugin did not contain a suitable gadget to fully exploit the issue, other installed plugins on the blog could allow such issue to be exploited and lead to RCE in some cases.</description>
      <guid isPermaLink="false">CVE-2021-24579|2024-08-03T19:35:20.209Z</guid>
      <pubDate>Mon, 30 Aug 2021 14:11:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24211|2024-08-03T19:21:18.808Z -- unknown -- wordpress%20related%20posts
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24211</link>
      <description>The WordPress Related Posts plugin through 3.6.4 contains an authenticated (admin+) stored XSS vulnerability in the title field on the settings page. By exploiting that an attacker will be able to execute JavaScript code in the user's browser.</description>
      <guid isPermaLink="false">CVE-2021-24211|2024-08-03T19:21:18.808Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24224|2024-08-03T19:21:18.637Z -- unknown -- easy%20form%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24224</link>
      <description>The EFBP_verify_upload_file AJAX action of the Easy Form Builder WordPress plugin through 1.0, available to authenticated users, does not have any security in place to verify uploaded files, allowing low privilege users to upload arbitrary files, leading to RCE.</description>
      <guid isPermaLink="false">CVE-2021-24224|2024-08-03T19:21:18.637Z</guid>
      <pubDate>Mon, 12 Apr 2021 14:04:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24180|2024-08-03T19:21:18.675Z -- unknown -- related%20posts%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24180</link>
      <description>Unvalidated input and lack of output encoding within the Related Posts for WordPress plugin before 2.0.4 lead to a Reflected Cross-Site Scripting (XSS) vulnerability within the 'lang' GET parameter while editing a post, triggered when users with the capability of editing posts access a malicious URL.</description>
      <guid isPermaLink="false">CVE-2021-24180|2024-08-03T19:21:18.675Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1684|2024-08-03T00:10:03.810Z -- unknown -- cube%20slider
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1684</link>
      <description>The Cube Slider WordPress plugin through 1.2 does not sanitise and escape the idslider parameter before using it in various SQL queries, leading to SQL Injections exploitable by high privileged users such as admin</description>
      <guid isPermaLink="false">CVE-2022-1684|2024-08-03T00:10:03.810Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24969|2024-08-03T19:49:14.022Z -- unknown -- wordpress%20download%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24969</link>
      <description>The WordPress Download Manager WordPress plugin before 3.2.22 does not sanitise and escape Template data before outputting it in various pages (such as admin dashboard and frontend). Due to the lack of authorisation and CSRF checks in the wpdm_save_template AJAX action, any authenticated users such as subscriber is able to call it and perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2021-24969|2024-08-03T19:49:14.022Z</guid>
      <pubDate>Mon, 27 Dec 2021 10:33:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24431|2024-08-03T19:28:23.955Z -- unknown -- language%20bar%20flags
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24431</link>
      <description>The Language Bar Flags WordPress plugin through 1.0.8 does not have any CSRF in place when saving its settings and did not sanitise or escape them when generating the flag bar in the frontend. This could allow attackers to make a logged in admin change the settings, and set Cross-Site Scripting payload in them, which will be executed in the frontend for all users</description>
      <guid isPermaLink="false">CVE-2021-24431|2024-08-03T19:28:23.955Z</guid>
      <pubDate>Mon, 13 Sep 2021 17:56:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1889|2024-08-03T00:17:00.922Z -- unknown -- newsletter%20%E2%80%93%20send%20awesome%20emails%20from%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1889</link>
      <description>The Newsletter WordPress plugin before 7.4.6 does not escape and sanitise the preheader_text setting, which could allow high privilege users to perform Stored Cross-Site Scripting attacks when the unfilteredhtml is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1889|2024-08-03T00:17:00.922Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24184|2024-08-03T19:21:18.926Z -- unknown -- tutor%20lms%20%E2%80%93%20elearning%20and%20online%20course%20solution
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24184</link>
      <description>Several AJAX endpoints in the Tutor LMS – eLearning and online course solution WordPress plugin before 1.7.7 were unprotected, allowing students to modify course information and elevate their privileges among many other actions.</description>
      <guid isPermaLink="false">CVE-2021-24184|2024-08-03T19:21:18.926Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24447|2024-08-03T19:28:23.826Z -- unknown -- wp%20image%20zoom
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24447</link>
      <description>The WP Image Zoom WordPress plugin before 1.47 did not validate its tab parameter before using it in the include_once() function, leading to a local file inclusion issue in the admin dashboard</description>
      <guid isPermaLink="false">CVE-2021-24447|2024-08-03T19:28:23.826Z</guid>
      <pubDate>Mon, 19 Jul 2021 10:53:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4470|2024-08-03T01:41:44.708Z -- unknown -- widgets%20for%20google%20reviews
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4470</link>
      <description>The Widgets for Google Reviews WordPress plugin before 9.8 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4470|2024-08-03T01:41:44.708Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24670|2024-08-03T19:42:15.982Z -- unknown -- coolclock%20%E2%80%93%20a%20javascript%20analog%20clock
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24670</link>
      <description>The CoolClock WordPress plugin before 4.3.5 does not escape some shortcode attributes, allowing users with a role as low as Contributor toperform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2021-24670|2024-08-03T19:42:15.982Z</guid>
      <pubDate>Mon, 27 Sep 2021 15:25:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3024|2024-08-03T00:53:00.695Z -- unknown -- bitcoin%20satoshi%20tools%20%3A%20%20faucets%2C%20visitor%20rewarder%2C%20satoshi%20games%2C%20referral%20program
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3024</link>
      <description>The Simple Bitcoin Faucets WordPress plugin through 1.7.0 does not have any authorisation and CSRF in an AJAX action, allowing any authenticated users, such as subscribers to call it and add/delete/edit Bonds. Furthermore, due to the lack of sanitisation and escaping, it could also lead to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2022-3024|2024-08-03T00:53:00.695Z</guid>
      <pubDate>Mon, 26 Sep 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24506|2024-08-03T19:35:19.850Z -- unknown -- slider%20hero%20with%20animation%2C%20video%20background%20%26%20intro%20maker
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24506</link>
      <description>The Slider Hero with Animation, Video Background &amp; Intro Maker WordPress plugin before 8.2.7 does not sanitise or escape the id attribute of its hero-button shortcode before using it in a SQL statement, allowing users with a role as low as Contributor to perform SQL injection.</description>
      <guid isPermaLink="false">CVE-2021-24506|2024-08-03T19:35:19.850Z</guid>
      <pubDate>Mon, 23 Aug 2021 11:09:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24980|2024-08-03T19:49:14.367Z -- unknown -- gwolle%20guestbook
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24980</link>
      <description>The Gwolle Guestbook WordPress plugin before 4.2.0 does not sanitise and escape the gwolle_gb_user_email parameter before outputting it back in an attribute, leading to a Reflected Cross-Site Scripting issue in an admin page</description>
      <guid isPermaLink="false">CVE-2021-24980|2024-08-03T19:49:14.367Z</guid>
      <pubDate>Mon, 27 Dec 2021 10:33:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3350|2024-08-03T01:07:06.697Z -- unknown -- contact%20bank%20%E2%80%93%20contact%20form%20builder%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3350</link>
      <description>The Contact Bank WordPress plugin through 3.0.30 does not sanitise and escape some of its Form settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3350|2024-08-03T01:07:06.697Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24950|2024-08-03T19:49:13.971Z -- unknown -- insight%20core
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24950</link>
      <description>The Insight Core WordPress plugin through 1.0 does not have any authorisation and CSRF checks in the insight_customizer_options_import (available to any authenticated user), does not validate user input before passing it to unserialize(), nor sanitise and escape it before outputting it in the response. As a result, it could allow users with a role as low as Subscriber to perform PHP Object Injection, as well as Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2021-24950|2024-08-03T19:49:13.971Z</guid>
      <pubDate>Mon, 14 Mar 2022 14:41:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4155|2024-08-03T01:27:54.493Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4155</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the wp_user_id GET parameter before concatenating it to an SQL query in management-show-user.php. This may allow malicious users with administrator privileges (i.e. on multisite WordPress configurations) to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4155|2024-08-03T01:27:54.493Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:27:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3907|2024-08-03T01:20:58.790Z -- unknown -- clerk
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3907</link>
      <description>The Clerk WordPress plugin before 4.0.0 is affected by time-based attacks in the validation function for all API requests due to the usage of comparison operators to verify API keys against the ones stored in the site options.</description>
      <guid isPermaLink="false">CVE-2022-3907|2024-08-03T01:20:58.790Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4577|2024-08-03T01:41:45.642Z -- unknown -- easy%20testimonials
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4577</link>
      <description>The Easy Testimonials WordPress plugin before 3.9.3 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4577|2024-08-03T01:41:45.642Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2219|2024-08-03T00:32:08.902Z -- unknown -- unyson
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2219</link>
      <description>The Unyson WordPress plugin before 2.7.27 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2219|2024-08-03T00:32:08.902Z</guid>
      <pubDate>Mon, 25 Jul 2022 12:47:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3343|2024-08-03T01:07:06.532Z -- unknown -- wpqa%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3343</link>
      <description>The WPQA Builder WordPress plugin before 5.9.3 (which is a companion plugin used with Discy and Himer Discy WordPress themes) incorrectly tries to validate that a user already follows another in the wpqa_following_you_ajax action, allowing a user to inflate their score on the site by having another user send repeated follow actions to them.</description>
      <guid isPermaLink="false">CVE-2022-3343|2024-08-03T01:07:06.532Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2388|2024-08-03T00:39:06.410Z -- unknown -- wp%20coder%20%E2%80%93%20add%20custom%20html%2C%20css%20and%20js%20code
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2388</link>
      <description>The WP Coder WordPress plugin before 2.5.3 does not have CSRF check in place when deleting code created by the plugin, which could allow attackers to make a logged in admin delete arbitrary ones via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-2388|2024-08-03T00:39:06.410Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:02:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24567|2024-08-03T19:35:20.162Z -- unknown -- simple%20post
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24567</link>
      <description>The Simple Post WordPress plugin through 1.1 does not sanitize user input when an authenticated user Text value, then it does not escape these values when outputting to the browser leading to an Authenticated Stored XSS Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-24567|2024-08-03T19:35:20.162Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:48:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24797|2024-08-03T19:42:17.174Z -- unknown -- tickera%20%E2%80%93%20wordpress%20event%20ticketing
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24797</link>
      <description>The Tickera WordPress plugin before 3.4.8.3 does not properly sanitise and escape the Name fields of booked Events before outputting them in the Orders admin dashboard, which could allow unauthenticated users to perform Cross-Site Scripting attacks against admins.</description>
      <guid isPermaLink="false">CVE-2021-24797|2024-08-03T19:42:17.174Z</guid>
      <pubDate>Mon, 27 Dec 2021 10:33:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24726|2024-08-03T19:42:16.643Z -- unknown -- wp%20simple%20booking%20calendar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24726</link>
      <description>The WP Simple Booking Calendar WordPress plugin before 2.0.6 did not escape, validate or sanitise the orderby parameter in its Search Calendars action, before using it in a SQL statement, leading to an authenticated SQL injection issue</description>
      <guid isPermaLink="false">CVE-2021-24726|2024-08-03T19:42:16.643Z</guid>
      <pubDate>Mon, 13 Sep 2021 17:56:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4464|2024-08-03T01:41:44.633Z -- unknown -- themify%20portfolio%20post
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4464</link>
      <description>Themify Portfolio Post WordPress plugin before 1.2.1 does not validate and escapes some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as a contributor to perform Stored Cross-Site Scripting attacks, which could be used against high privileged users such as admin.</description>
      <guid isPermaLink="false">CVE-2022-4464|2024-08-03T01:41:44.633Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25089|2024-08-03T19:56:10.476Z -- unknown -- updraftplus%20wordpress%20backup%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25089</link>
      <description>The UpdraftPlus WordPress Backup Plugin WordPress plugin before 1.16.69 does not sanitise and escape the updraft_restore parameter before outputting it back in the Restore page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-25089|2024-08-03T19:56:10.476Z</guid>
      <pubDate>Tue, 01 Feb 2022 12:21:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24826|2024-08-03T19:42:17.327Z -- unknown -- custom%20content%20shortcode
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24826</link>
      <description>The Custom Content Shortcode WordPress plugin before 4.0.2 does not escape custom fields before outputting them, which could allow Contributor+ (v &lt; 4.0.1) or Admin+ (v &lt; 4.0.2) users to perform Cross-Site Scripting attacks even when the unfiltered_html is disallowed. Please note that such attack is still possible by admin+ in single site blogs by default (but won't be when the unfiltered_html is disallowed)</description>
      <guid isPermaLink="false">CVE-2021-24826|2024-08-03T19:42:17.327Z</guid>
      <pubDate>Mon, 07 Mar 2022 08:16:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25095|2024-08-03T19:56:09.905Z -- unknown -- ip2location%20country%20blocker
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25095</link>
      <description>The IP2Location Country Blocker WordPress plugin before 2.26.5 does not have authorisation and CSRF checks in the ip2location_country_blocker_save_rules AJAX action, allowing any authenticated users, such as subscriber to call it and block arbitrary country, or block all of them at once, preventing users from accessing the frontend.</description>
      <guid isPermaLink="false">CVE-2021-25095|2024-08-03T19:56:09.905Z</guid>
      <pubDate>Mon, 07 Feb 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3856|2024-08-03T01:20:58.384Z -- unknown -- comic%20book%20management%20system
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3856</link>
      <description>The Comic Book Management System WordPress plugin before 2.2.0 does not sanitize and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as Admin.</description>
      <guid isPermaLink="false">CVE-2022-3856|2024-08-03T01:20:58.384Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25060|2024-08-03T19:49:14.632Z -- unknown -- five%20star%20business%20profile%20and%20schema
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25060</link>
      <description>The Five Star Business Profile and Schema WordPress plugin before 2.1.7 does not have any authorisation and CSRF in its bpfwp_welcome_add_contact_page and bpfwp_welcome_set_contact_information AJAX action, allowing any authenticated users, such as subscribers, to call them. Furthermore, due to the lack of sanitisation, it also lead to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-25060|2024-08-03T19:49:14.632Z</guid>
      <pubDate>Mon, 21 Feb 2022 10:45:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3490|2024-08-03T01:14:01.484Z -- unknown -- checkout%20field%20editor%20%28checkout%20manager%29%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3490</link>
      <description>The Checkout Field Editor (Checkout Manager) for WooCommerce WordPress plugin before 1.8.0 unserializes user input provided via the settings, which could allow high privilege users such as admin to perform PHP Object Injection when a suitable gadget is present</description>
      <guid isPermaLink="false">CVE-2022-3490|2024-08-03T01:14:01.484Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2198|2024-08-03T00:32:08.752Z -- unknown -- wpqa%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2198</link>
      <description>The WPQA Builder WordPress plugin before 5.7 which is a companion plugin to the Hilmer and Discy , does not check authorization before displaying private messages, allowing any logged in user to read other users private message using the message id, which can easily be brute forced.</description>
      <guid isPermaLink="false">CVE-2022-2198|2024-08-03T00:32:08.752Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:00:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25052|2024-08-03T19:49:14.549Z -- unknown -- button%20generator%20%E2%80%93%20easily%20button%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25052</link>
      <description>The Button Generator WordPress plugin before 2.3.3 within the wow-company admin menu page allows to include() arbitrary file with PHP extension (as well as with data:// or http:// protocols), thus leading to CSRF RCE.</description>
      <guid isPermaLink="false">CVE-2021-25052|2024-08-03T19:49:14.549Z</guid>
      <pubDate>Mon, 10 Jan 2022 15:30:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24759|2024-08-03T19:42:16.873Z -- unknown -- pdf.js%20viewer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24759</link>
      <description>The PDF.js Viewer WordPress plugin before 2.0.2 does not escape some of its shortcode and Gutenberg Block attributes, which could allow users with a role as low as Contributor to to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2021-24759|2024-08-03T19:42:16.873Z</guid>
      <pubDate>Mon, 06 Dec 2021 15:55:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24825|2024-08-03T19:42:17.342Z -- unknown -- custom%20content%20shortcode
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24825</link>
      <description>The Custom Content Shortcode WordPress plugin before 4.0.2 does not validate the data passed to its load shortcode, which could allow Contributor+ (v &lt; 4.0.1) or Admin+ (v &lt; 4.0.2) users to display arbitrary files from the filesystem (such as logs, .htaccess etc), as well as perform Local File Inclusion attacks as PHP files will be executed. Please note that such attack is still possible by admin+ in single site blogs by default (but won't be when either the unfiltered_html or file_edit is disallowed)</description>
      <guid isPermaLink="false">CVE-2021-24825|2024-08-03T19:42:17.342Z</guid>
      <pubDate>Mon, 07 Mar 2022 08:16:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4678|2024-08-03T01:48:39.494Z -- unknown -- templatesnext%20toolkit
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4678</link>
      <description>The TemplatesNext ToolKit WordPress plugin before 3.2.8 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-4678|2024-08-03T01:48:39.494Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2341|2024-08-03T00:32:09.764Z -- unknown -- simple%20page%20transition
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2341</link>
      <description>The Simple Page Transition WordPress plugin through 1.4.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2341|2024-08-03T00:32:09.764Z</guid>
      <pubDate>Mon, 25 Jul 2022 12:48:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24376|2024-08-03T19:28:23.812Z -- unknown -- autoptimize
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24376</link>
      <description>The Autoptimize WordPress plugin before 2.7.8 attempts to delete malicious files (such as .php) form the uploaded archive via the "Import Settings" feature, after its extraction. However, the extracted folders are not checked and it is possible to upload a zip which contained a directory with PHP file in it and then it is not removed from the disk. It is a bypass of CVE-2020-24948 which allows sending a PHP file via the "Import Settings" functionality to achieve Remote Code Execution.</description>
      <guid isPermaLink="false">CVE-2021-24376|2024-08-03T19:28:23.812Z</guid>
      <pubDate>Mon, 21 Jun 2021 19:18:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24206|2024-08-03T19:21:18.814Z -- unknown -- elementor%20website%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24206</link>
      <description>In the Elementor Website Builder WordPress plugin before 3.1.4, the image box widget (includes/widgets/image-box.php) accepts a ‘title_size’ parameter. Although the element control lists a fixed set of possible html tags, it is possible for a user with Contributor or above permissions to send a modified ‘save_builder’ request containing JavaScript in the ‘title_size’ parameter, which is not filtered and is output without escaping. This JavaScript will then be executed when the saved page is viewed or previewed.</description>
      <guid isPermaLink="false">CVE-2021-24206|2024-08-03T19:21:18.814Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4443|2024-08-03T01:41:44.426Z -- unknown -- brutebank
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4443</link>
      <description>The BruteBank WordPress plugin before 1.9 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged-in admin change them via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2022-4443|2024-08-03T01:41:44.426Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4491|2024-08-03T01:41:45.144Z -- unknown -- wp-table%20reloaded
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4491</link>
      <description>The WP-Table Reloaded WordPress plugin through 1.9.4 does not validate and escapes some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as a contributor to perform Stored Cross-Site Scripting attacks, which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4491|2024-08-03T01:41:45.144Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2424|2024-08-03T00:39:07.557Z -- unknown -- google%20maps%20anywhere
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2424</link>
      <description>The Google Maps Anywhere WordPress plugin through 1.2.6.3 does not sanitise and escape any of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2424|2024-08-03T00:39:07.557Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:50:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24840|2024-08-03T19:42:17.205Z -- unknown -- squaretype
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24840</link>
      <description>The Squaretype WordPress theme before 3.0.4 allows unauthenticated users to manipulate the query_vars used to retrieve the posts to display in one of its REST endpoint, without any validation. As a result, private and scheduled posts could be retrieved via a crafted request.</description>
      <guid isPermaLink="false">CVE-2021-24840|2024-08-03T19:42:17.205Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:35:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24802|2024-08-03T19:42:17.223Z -- unknown -- colorful%20categories
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24802</link>
      <description>The Colorful Categories WordPress plugin before 2.0.15 does not enforce nonce checks which could allow attackers to make a logged in admin or editor change taxonomy colors via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2021-24802|2024-08-03T19:42:17.223Z</guid>
      <pubDate>Wed, 17 Nov 2021 10:15:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24372|2024-08-03T19:28:23.783Z -- unknown -- wp%20hardening%20%E2%80%93%20fix%20your%20wordpress%20security
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24372</link>
      <description>The WP Hardening – Fix Your WordPress Security WordPress plugin before 1.2.2 did not sanitise or escape the $_SERVER['REQUEST_URI'] before outputting it in an attribute, leading to a reflected Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-24372|2024-08-03T19:28:23.783Z</guid>
      <pubDate>Mon, 21 Jun 2021 19:18:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3208|2024-08-03T01:00:10.619Z -- unknown -- simple%20file%20list
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3208</link>
      <description>The Simple File List WordPress plugin before 4.4.12 does not implement nonce checks, which could allow attackers to make a logged in admin create new page and change it's content via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2022-3208|2024-08-03T01:00:10.619Z</guid>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24849|2024-08-03T19:42:17.219Z -- unknown -- wcfm%20marketplace%20%E2%80%93%20best%20multivendor%20marketplace%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24849</link>
      <description>The wcfm_ajax_controller AJAX action of the WCFM Marketplace WordPress plugin before 3.4.12, available to unauthenticated and authenticated user, does not properly sanitise multiple parameters before using them in SQL statements, leading to SQL injections</description>
      <guid isPermaLink="false">CVE-2021-24849|2024-08-03T19:42:17.219Z</guid>
      <pubDate>Tue, 21 Dec 2021 08:45:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2167|2024-08-03T00:32:07.967Z -- unknown -- newspaper
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2167</link>
      <description>The Newspaper WordPress theme before 12 does not sanitise a parameter before outputting it back in an HTML attribute via an AJAX action, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2167|2024-08-03T00:32:07.967Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25027|2024-08-03T19:49:14.593Z -- unknown -- powerpack%20addons%20for%20elementor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25027</link>
      <description>The PowerPack Addons for Elementor WordPress plugin before 2.6.2 does not escape the tab parameter before outputting it back in an attribute in the admin dashboard, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-25027|2024-08-03T19:49:14.593Z</guid>
      <pubDate>Mon, 03 Jan 2022 12:49:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4487|2024-08-03T01:41:45.425Z -- unknown -- easy%20accordion
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4487</link>
      <description>The Easy Accordion WordPress plugin before 2.2.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4487|2024-08-03T01:41:45.425Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4099|2024-08-03T01:27:54.387Z -- unknown -- joy%20of%20text%20lite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4099</link>
      <description>The Joy Of Text Lite WordPress plugin before 2.3.1 does not properly sanitise and escape some parameters before using them in SQL statements accessible to unauthenticated users, leading to unauthenticated SQL injection</description>
      <guid isPermaLink="false">CVE-2022-4099|2024-08-03T01:27:54.387Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2554|2024-08-03T00:39:08.043Z -- unknown -- enable%20media%20replace
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2554</link>
      <description>The Enable Media Replace WordPress plugin before 4.0.0 does not ensure that renamed files are moved to the Upload folder, which could allow high privilege users such as admin to move them outside to the web root directory via a path traversal attack for example</description>
      <guid isPermaLink="false">CVE-2022-2554|2024-08-03T00:39:08.043Z</guid>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3634|2024-08-03T01:14:03.303Z -- unknown -- contact%20form%207%20database%20addon
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3634</link>
      <description>The Contact Form 7 Database Addon WordPress plugin before 1.2.6.5 does not validate data when output it back in a CSV file, which could lead to CSV injection</description>
      <guid isPermaLink="false">CVE-2022-3634|2024-08-03T01:14:03.303Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24914|2024-08-03T19:49:13.922Z -- unknown -- tawk.to%20live%20chat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24914</link>
      <description>The Tawk.To Live Chat WordPress plugin before 0.6.0 does not have capability and CSRF checks in the tawkto_setwidget and tawkto_removewidget AJAX actions, available to any authenticated user. The first one allows low-privileged users (including simple subscribers) to change the 'tawkto-embed-widget-page-id' and 'tawkto-embed-widget-widget-id' parameters. Any authenticated user can thus link the vulnerable website to their own Tawk.to instance. Consequently, they will be able to monitor the vulnerable website and interact with its visitors (receive contact messages, answer, ...). They will also be able to display an arbitrary Knowledge Base. The second one will remove the live chat widget from pages.</description>
      <guid isPermaLink="false">CVE-2021-24914|2024-08-03T19:49:13.922Z</guid>
      <pubDate>Mon, 06 Dec 2021 15:55:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24697|2024-08-03T19:42:16.653Z -- unknown -- simple%20download%20monitor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24697</link>
      <description>The Simple Download Monitor WordPress plugin before 3.9.5 does not escape the 1) sdm_active_tab GET parameter and 2) sdm_stats_start_date/sdm_stats_end_date POST parameters before outputting them back in attributes, leading to Reflected Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-24697|2024-08-03T19:42:16.653Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:35:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4395|2024-08-03T01:41:44.387Z -- unknown -- membership%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4395</link>
      <description>The Membership For WooCommerce WordPress plugin before 2.1.7 does not validate uploaded files, which could allow unauthenticated users to upload arbitrary files, such as malicious PHP code, and achieve RCE.</description>
      <guid isPermaLink="false">CVE-2022-4395|2024-08-03T01:41:44.387Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24715|2024-08-03T19:42:16.609Z -- unknown -- wp%20sitemap%20page
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24715</link>
      <description>The WP Sitemap Page WordPress plugin before 1.7.0 does not properly sanitise and escape some of its settings, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24715|2024-08-03T19:42:16.609Z</guid>
      <pubDate>Mon, 01 Nov 2021 08:46:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2362|2024-08-03T00:32:09.513Z -- unknown -- download%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2362</link>
      <description>The Download Manager WordPress plugin before 3.2.50 prioritizes getting a visitor's IP from certain HTTP headers over PHP's REMOTE_ADDR, which makes it possible to bypass IP-based download blocking restrictions.</description>
      <guid isPermaLink="false">CVE-2022-2362|2024-08-03T00:32:09.513Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:01:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4445|2024-08-03T01:41:44.481Z -- unknown -- fl3r%20feelbox
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4445</link>
      <description>The FL3R FeelBox WordPress plugin through 8.1 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection.</description>
      <guid isPermaLink="false">CVE-2022-4445|2024-08-03T01:41:44.481Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4552|2024-08-03T01:41:45.631Z -- unknown -- fl3r%20feelbox
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4552</link>
      <description>The FL3R FeelBox WordPress plugin through 8.1 does not have CSRF check when updating its settings, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-4552|2024-08-03T01:41:45.631Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3417|2024-08-03T01:07:06.583Z -- unknown -- wptouch
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3417</link>
      <description>The WPtouch WordPress plugin before 4.3.45 unserialises the content of an imported settings file, which could lead to PHP object injections issues when an user import (intentionally or not) a malicious settings file and a suitable gadget chain is present on the blog.</description>
      <guid isPermaLink="false">CVE-2022-3417|2024-08-03T01:07:06.583Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24438|2024-08-03T19:28:24.005Z -- unknown -- sharethis%20dashboard%20for%20google%20analytics
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24438</link>
      <description>The ShareThis Dashboard for Google Analytics WordPress plugin before 2.5.2 does not sanitise or escape the 'ga_action' parameter in the stats view before outputting it back in an attribute when the plugin is connected to a Google Analytics account, leading to a reflected Cross-Site Scripting issue which will be executed in the context of a logged in administrator</description>
      <guid isPermaLink="false">CVE-2021-24438|2024-08-03T19:28:24.005Z</guid>
      <pubDate>Mon, 30 Aug 2021 14:11:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1953|2024-08-03T00:24:42.631Z -- unknown -- product%20configurator%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1953</link>
      <description>The Product Configurator for WooCommerce WordPress plugin before 1.2.32 suffers from an arbitrary file deletion vulnerability via an AJAX action, accessible to unauthenticated users, which accepts user input that is being used in a path and passed to unlink() without validation first</description>
      <guid isPermaLink="false">CVE-2022-1953|2024-08-03T00:24:42.631Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:58:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3036|2024-08-03T01:00:08.564Z -- unknown -- gettext%20override%20translations
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3036</link>
      <description>The Gettext override translations WordPress plugin before 2.0.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3036|2024-08-03T01:00:08.564Z</guid>
      <pubDate>Mon, 19 Sep 2022 14:01:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24895|2024-08-03T19:49:13.896Z -- unknown -- cybersoldier
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24895</link>
      <description>The Cybersoldier WordPress plugin before 1.7.0 does not sanitise and escape the URL settings before outputting it in an attribute, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24895|2024-08-03T19:49:13.896Z</guid>
      <pubDate>Mon, 14 Mar 2022 14:40:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3934|2024-08-03T01:27:53.042Z -- unknown -- flatpm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3934</link>
      <description>The FlatPM WordPress plugin before 3.0.13 does not sanitise and escape some parameters before outputting them back in pages, leading to Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2022-3934|2024-08-03T01:27:53.042Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24741|2024-08-03T19:42:16.654Z -- unknown -- support%20board
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24741</link>
      <description>The Support Board WordPress plugin before 3.3.4 does not escape multiple POST parameters (such as status_code, department, user_id, conversation_id, conversation_status_code, and recipient_id) before using them in SQL statements, leading to SQL injections which are exploitable by unauthenticated users.</description>
      <guid isPermaLink="false">CVE-2021-24741|2024-08-03T19:42:16.654Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4297|2024-08-03T01:34:49.994Z -- unknown -- wp%20autocomplete%20search
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4297</link>
      <description>The WP AutoComplete Search WordPress plugin through 1.0.4 does not sanitise and escape a parameter before using it in a SQL statement via an AJAX available to unauthenticated users, leading to an unauthenticated SQL injection</description>
      <guid isPermaLink="false">CVE-2022-4297|2024-08-03T01:34:49.994Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4017|2024-08-03T01:27:54.119Z -- unknown -- booster%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4017</link>
      <description>The Booster for WooCommerce WordPress plugin before 6.0.1, Booster Plus for WooCommerce WordPress plugin before 6.0.1, Booster Elite for WooCommerce WordPress plugin before 6.0.1 have either flawed CSRF checks or are missing them completely in numerous places, allowing attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2022-4017|2024-08-03T01:27:54.119Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24729|2024-08-03T19:42:16.637Z -- unknown -- logo%20showcase%20with%20slick%20slider%20%E2%80%93%20logo%20carousel%2C%20logo%20slider%20%26%20logo%20grid
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24729</link>
      <description>The Logo Showcase with Slick Slider WordPress plugin before 1.2.4 does not sanitise the Grid Settings, which could allow users with a role as low as Author to perform stored Cross-Site Scripting attacks via post metadata of Grid logo showcase.</description>
      <guid isPermaLink="false">CVE-2021-24729|2024-08-03T19:42:16.637Z</guid>
      <pubDate>Tue, 23 Nov 2021 19:16:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24629|2024-08-03T19:35:20.301Z -- unknown -- post%20content%20xmlrpc
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24629</link>
      <description>The Post Content XMLRPC WordPress plugin through 1.0 does not sanitise or escape multiple GET/POST parameters before using them in SQL statements in the admin dashboard, leading to an authenticated SQL Injections</description>
      <guid isPermaLink="false">CVE-2021-24629|2024-08-03T19:35:20.301Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:34:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24967|2024-08-03T19:49:14.104Z -- unknown -- contact%20form%20%26%20lead%20form%20elementor%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24967</link>
      <description>The Contact Form &amp; Lead Form Elementor Builder WordPress plugin before 1.6.4 does not sanitise and escape some lead values, which could allow unauthenticated users to perform Cross-Site Scripting attacks against logged in admin viewing the inserted Leads</description>
      <guid isPermaLink="false">CVE-2021-24967|2024-08-03T19:49:14.104Z</guid>
      <pubDate>Mon, 27 Dec 2021 10:33:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4063|2024-08-03T01:27:54.195Z -- unknown -- inpost%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4063</link>
      <description>The InPost Gallery WordPress plugin before 2.1.4.1 insecurely uses PHP's extract() function when rendering HTML views, allowing attackers to force the inclusion of malicious files &amp; URLs, which may enable them to run code on servers.</description>
      <guid isPermaLink="false">CVE-2022-4063|2024-08-03T01:27:54.195Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1618|2024-08-03T00:10:03.797Z -- unknown -- coru%20lfmember
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1618</link>
      <description>The Coru LFMember WordPress plugin through 1.0.2 does not have CSRF check in place when adding a new game, and is lacking sanitisation as well as escaping in their settings, allowing attacker to make a logged in admin add an arbitrary game with XSS payloads</description>
      <guid isPermaLink="false">CVE-2022-1618|2024-08-03T00:10:03.797Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:52:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4625|2024-08-03T01:48:39.505Z -- unknown -- login%20logout%20menu
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4625</link>
      <description>The Login Logout Menu WordPress plugin before 1.4.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4625|2024-08-03T01:48:39.505Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24349|2024-08-03T19:28:23.787Z -- unknown -- gallery%20from%20files
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24349</link>
      <description>This Gallery from files WordPress plugin through 1.6.0 gives the functionality of uploading images to the server. But filenames are not properly sanitized before being output in an error message when they have an invalid extension, leading to a reflected Cross-Site Scripting issue. Due to the lack of CSRF check, the attack could also be performed via such vector.</description>
      <guid isPermaLink="false">CVE-2021-24349|2024-08-03T19:28:23.787Z</guid>
      <pubDate>Mon, 14 Jun 2021 13:37:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24869|2024-08-03T19:49:13.416Z -- unknown -- wp%20fastest%20cache
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24869</link>
      <description>The WP Fastest Cache WordPress plugin before 0.9.5 does not escape user input in the set_urls_with_terms method before using it in a SQL statement, leading to an SQL injection exploitable by low privilege users such as subscriber</description>
      <guid isPermaLink="false">CVE-2021-24869|2024-08-03T19:49:13.416Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:49:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24654|2024-08-03T19:35:20.367Z -- unknown -- user%20registration%20%E2%80%93%20custom%20registration%20form%2C%20login%20and%20user%20profile%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24654</link>
      <description>The User Registration WordPress plugin before 2.0.2 does not properly sanitise the user_registration_profile_pic_url value when submitted directly via the user_registration_update_profile_details AJAX action. This could allow any authenticated user, such as subscriber, to perform Stored Cross-Site attacks when their profile is viewed</description>
      <guid isPermaLink="false">CVE-2021-24654|2024-08-03T19:35:20.367Z</guid>
      <pubDate>Mon, 04 Oct 2021 11:20:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3855|2024-08-03T01:20:58.657Z -- unknown -- 404%20to%20start
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3855</link>
      <description>The 404 to Start WordPress plugin through 1.6.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3855|2024-08-03T01:20:58.657Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4381|2024-08-03T01:41:44.631Z -- unknown -- popup%20maker
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4381</link>
      <description>The Popup Maker WordPress plugin before 1.16.9 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4381|2024-08-03T01:41:44.631Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25008|2024-08-03T19:49:14.599Z -- unknown -- code%20snippets
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25008</link>
      <description>The Code Snippets WordPress plugin before 2.14.3 does not escape the snippets-safe-mode parameter before outputting it back in attributes, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-25008|2024-08-03T19:49:14.599Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:01:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24644|2024-08-03T19:35:20.316Z -- unknown -- images%20to%20webp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24644</link>
      <description>The Images to WebP WordPress plugin before 1.9 does not validate or sanitise the tab parameter before passing it to the include() function, which could lead to a Local File Inclusion issue</description>
      <guid isPermaLink="false">CVE-2021-24644|2024-08-03T19:35:20.316Z</guid>
      <pubDate>Tue, 23 Nov 2021 19:16:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4268|2024-08-03T01:34:49.939Z -- unknown -- plugin%20logic
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4268</link>
      <description>The Plugin Logic WordPress plugin before 1.0.8 does not sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2022-4268|2024-08-03T01:34:49.939Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:27:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1939|2024-08-03T00:24:42.623Z -- unknown -- allow%20svg%20files
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1939</link>
      <description>The Allow svg files WordPress plugin before 1.1 does not properly validate uploaded files, which could allow high privilege users such as admin to upload PHP files even when they are not allowed to</description>
      <guid isPermaLink="false">CVE-2022-1939|2024-08-03T00:24:42.623Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2173|2024-08-03T00:32:08.615Z -- unknown -- advanced%20database%20cleaner
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2173</link>
      <description>The Advanced Database Cleaner WordPress plugin before 3.1.1 does not escape numerous generated URLs before outputting them back in href attributes of admin dashboard pages, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2173|2024-08-03T00:32:08.615Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:36:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25114|2024-08-03T19:56:10.572Z -- unknown -- paid%20memberships%20pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25114</link>
      <description>The Paid Memberships Pro WordPress plugin before 2.6.7 does not escape the discount_code in one of its REST route (available to unauthenticated users) before using it in a SQL statement, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2021-25114|2024-08-03T19:56:10.572Z</guid>
      <pubDate>Mon, 07 Feb 2022 15:47:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24790|2024-08-03T19:42:17.185Z -- unknown -- contact%20form%20advanced%20database
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24790</link>
      <description>The Contact Form Advanced Database WordPress plugin through 1.0.8 does not have any authorisation as well as CSRF checks in its delete_cf7_data and export_cf7_data AJAX actions, available to any authenticated users, which could allow users with a role as low as subscriber to call them. The delete_cf7_data would lead to arbitrary metadata deletion, as well as PHP Object Injection if a suitable gadget chain is present in another plugin, as user data is passed to the maybe_unserialize() function without being first validated.</description>
      <guid isPermaLink="false">CVE-2021-24790|2024-08-03T19:42:17.185Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:40:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1763|2024-08-03T00:16:59.872Z -- unknown -- static%20page%20extended
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1763</link>
      <description>Due to missing checks the Static Page eXtended WordPress plugin through 2.1 is vulnerable to CSRF attacks which allows changing the plugin settings, including required user levels for specific features. This could also lead to Stored Cross-Site Scripting due to the lack of escaping in some of the settings</description>
      <guid isPermaLink="false">CVE-2022-1763|2024-08-03T00:16:59.872Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4509|2024-08-03T01:41:45.020Z -- unknown -- content%20control
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4509</link>
      <description>The Content Control WordPress plugin before 1.1.10 does not validate and escapes some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as a contributor to perform Stored Cross-Site Scripting attacks, which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4509|2024-08-03T01:41:45.020Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4668|2024-08-03T01:48:39.789Z -- unknown -- easy%20appointments
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4668</link>
      <description>The Easy Appointments WordPress plugin before 3.11.2 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4668|2024-08-03T01:48:39.789Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24159|2024-08-03T19:21:18.633Z -- unknown -- contact%20form%207%20style
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24159</link>
      <description>Due to the lack of sanitization and lack of nonce protection on the custom CSS feature, an attacker could craft a request to inject malicious JavaScript on a site using the Contact Form 7 Style WordPress plugin through 3.1.9. If an attacker successfully tricked a site’s administrator into clicking a link or attachment, then the request could be sent and the CSS settings would be successfully updated to include malicious JavaScript.</description>
      <guid isPermaLink="false">CVE-2021-24159|2024-08-03T19:21:18.633Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3603|2024-08-03T01:14:03.251Z -- unknown -- export%20customers%20list%20csv%20for%20woocommerce%2C%20wordpress%20users%20csv%2C%20export%20guest%20customer%20list
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3603</link>
      <description>The Export customers list csv for WooCommerce, WordPress users csv, export Guest customer list WordPress plugin before 2.0.69 does not validate data when outputting it back in a CSV file, which could lead to CSV injection.</description>
      <guid isPermaLink="false">CVE-2022-3603|2024-08-03T01:14:03.251Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1630|2024-08-03T00:10:03.946Z -- unknown -- wp-email
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1630</link>
      <description>The WP-EMail WordPress plugin before 2.69.0 does not protect its log deletion functionality with nonce checks, allowing attacker to make a logged in admin delete logs via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1630|2024-08-03T00:10:03.946Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:25:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24725|2024-08-03T19:42:16.624Z -- unknown -- comment%20link%20remove%20and%20other%20comment%20tools
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24725</link>
      <description>The Comment Link Remove and Other Comment Tools WordPress plugin before 2.1.6 does not have CSRF check in its 'Delete comments easily', which could allow attackers to make logged in admin delete arbitrary comments</description>
      <guid isPermaLink="false">CVE-2021-24725|2024-08-03T19:42:16.624Z</guid>
      <pubDate>Mon, 13 Sep 2021 17:56:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1933|2024-08-03T00:17:01.043Z -- unknown -- cdi%20%E2%80%93%20collect%20and%20deliver%20interface%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1933</link>
      <description>The CDI WordPress plugin before 5.1.9 does not sanitise and escape a parameter before outputting it back in the response of an AJAX action (available to both unauthenticated and authenticated users), leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-1933|2024-08-03T00:17:01.043Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:35:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25066|2024-08-03T19:56:09.479Z -- unknown -- ninja%20forms%20contact%20form%20%E2%80%93%20the%20drag%20and%20drop%20form%20builder%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25066</link>
      <description>The Ninja Forms Contact Form WordPress plugin before 3.6.10 does not sanitize and escape some imported data, allowing high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-25066|2024-08-03T19:56:09.479Z</guid>
      <pubDate>Mon, 04 Jul 2022 13:05:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24557|2024-08-03T19:35:20.133Z -- unknown -- m-vslider
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24557</link>
      <description>The update functionality in the rslider_page uses an rs_id POST parameter which is not validated, sanitised or escaped before being inserted in sql query, therefore leading to SQL injection for users having Administrator role.</description>
      <guid isPermaLink="false">CVE-2021-24557|2024-08-03T19:35:20.133Z</guid>
      <pubDate>Mon, 23 Aug 2021 11:10:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1903|2024-08-03T00:17:00.971Z -- unknown -- armember%20%E2%80%93%20membership%20plugin%2C%20content%20restriction%2C%20member%20levels%2C%20user%20profile%20%26%20user%20signup
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1903</link>
      <description>The ARMember WordPress plugin before 3.4.8 is vulnerable to account takeover (even the administrator) due to missing nonce and authorization checks in an AJAX action available to unauthenticated users, allowing them to change the password of arbitrary users by knowing their username</description>
      <guid isPermaLink="false">CVE-2022-1903|2024-08-03T00:17:00.971Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:58:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24695|2024-08-03T19:42:16.114Z -- unknown -- simple%20download%20monitor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24695</link>
      <description>The Simple Download Monitor WordPress plugin before 3.9.6 saves logs in a predictable location, and does not have any authentication or authorisation in place to prevent unauthenticated users to download and read the logs containing Sensitive Information such as IP Addresses and Usernames</description>
      <guid isPermaLink="false">CVE-2021-24695|2024-08-03T19:42:16.114Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:35:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25110|2024-08-03T19:56:10.540Z -- unknown -- futurio%20extra
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25110</link>
      <description>The Futurio Extra WordPress plugin before 1.6.3 allows any logged in user, such as subscriber, to extract any other user's email address.</description>
      <guid isPermaLink="false">CVE-2021-25110|2024-08-03T19:56:10.540Z</guid>
      <pubDate>Mon, 14 Feb 2022 09:20:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4838|2024-08-03T01:55:45.769Z -- unknown -- clean%20login
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4838</link>
      <description>The Clean Login WordPress plugin before 1.13.7 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4838|2024-08-03T01:55:45.769Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3600|2024-08-03T01:14:02.102Z -- unknown -- easy%20digital%20downloads
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3600</link>
      <description>The Easy Digital Downloads WordPress plugin before 3.1.0.2 does not validate data when its output in a CSV file, which could lead to CSV injection.</description>
      <guid isPermaLink="false">CVE-2022-3600|2024-08-03T01:14:02.102Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4102|2024-08-03T01:27:54.498Z -- unknown -- royal%20elementor%20addons%20%28elementor%20templates%2C%20post%20grid%2C%20mega%20menu%20%26%20header%20footer%20builder%2C%20woocommerce%20builder%2C%20product%20grid%2C%20slider%2C%20parallax%20image%20%26%20other%20free%20elementor%20widgets%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4102</link>
      <description>The Royal Elementor Addons WordPress plugin before 1.3.56 does not have authorization and CSRF checks when deleting a template and does not ensure that the post to be deleted is a template. This could allow any authenticated users, such as subscribers, to delete arbitrary posts assuming they know the related slug.</description>
      <guid isPermaLink="false">CVE-2022-4102|2024-08-03T01:27:54.498Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24331|2024-08-03T19:28:23.411Z -- unknown -- smooth%20scroll%20page%20up%2Fdown%20buttons
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24331</link>
      <description>The Smooth Scroll Page Up/Down Buttons WordPress plugin before 1.4 did not properly sanitise and validate its settings, such as psb_distance, psb_buttonsize, psb_speed, only validating them client side. This could allow high privilege users (such as admin) to set XSS payloads in them</description>
      <guid isPermaLink="false">CVE-2021-24331|2024-08-03T19:28:23.411Z</guid>
      <pubDate>Tue, 01 Jun 2021 11:33:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25040|2024-08-03T19:49:14.581Z -- unknown -- booking%20calendar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25040</link>
      <description>The Booking Calendar WordPress plugin before 8.9.2 does not sanitise and escape the booking_type parameter before outputting it back in an admin page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-25040|2024-08-03T19:49:14.581Z</guid>
      <pubDate>Mon, 03 Jan 2022 12:49:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24172|2024-08-03T19:21:18.693Z -- unknown -- vm%20backups
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24172</link>
      <description>The VM Backups WordPress plugin through 1.0 does not have CSRF checks, allowing attackers to make a logged in user unwanted actions, such as generate backups of the DB, plugins, and current .</description>
      <guid isPermaLink="false">CVE-2021-24172|2024-08-03T19:21:18.693Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25073|2024-08-03T19:56:09.922Z -- unknown -- wp125
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25073</link>
      <description>The WP125 WordPress plugin before 1.5.5 does not have CSRF checks in various action, for example when deleting an ad, allowing attackers to make a logged in admin delete them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2021-25073|2024-08-03T19:56:09.922Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:01:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24207|2024-08-03T19:21:18.845Z -- unknown -- wp%20page%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24207</link>
      <description>By default, the WP Page Builder WordPress plugin before 1.2.4 allows subscriber-level users to edit and make changes to any and all posts pages - user roles must be specifically blocked from editing posts and pages.</description>
      <guid isPermaLink="false">CVE-2021-24207|2024-08-03T19:21:18.845Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4783|2024-08-03T01:48:40.579Z -- unknown -- youtube%20channel%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4783</link>
      <description>The Youtube Channel Gallery WordPress plugin through 2.4 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4783|2024-08-03T01:48:40.579Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24394|2024-08-03T19:28:23.853Z -- unknown -- easy%20testimonial%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24394</link>
      <description>An id GET parameter of the Easy Testimonial Manager WordPress plugin through 1.2.0 is not sanitised, escaped or validated before inserting to a SQL statement, leading to SQL injection</description>
      <guid isPermaLink="false">CVE-2021-24394|2024-08-03T19:28:23.853Z</guid>
      <pubDate>Mon, 06 Sep 2021 11:09:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25007|2024-08-03T19:49:14.552Z -- unknown -- molie%20%E2%80%93%20instructure%20canvas%20linking%20tool
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25007</link>
      <description>The MOLIE WordPress plugin through 0.5 does not validate and escape a post parameter before using in a SQL statement, leading to an SQL Injection</description>
      <guid isPermaLink="false">CVE-2021-25007|2024-08-03T19:49:14.552Z</guid>
      <pubDate>Mon, 14 Mar 2022 14:41:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3860|2024-08-03T01:20:58.327Z -- unknown -- visual%20email%20designer%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3860</link>
      <description>The Visual Email Designer for WooCommerce WordPress plugin before 1.7.2 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as author.</description>
      <guid isPermaLink="false">CVE-2022-3860|2024-08-03T01:20:58.327Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:53:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4623|2024-08-03T01:48:40.387Z -- unknown -- nd%20shortcodes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4623</link>
      <description>The ND Shortcodes WordPress plugin before 7.0 does not validate and escape numerous of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4623|2024-08-03T01:48:40.387Z</guid>
      <pubDate>Tue, 04 Jul 2023 07:23:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24154|2024-08-03T19:21:18.397Z -- unknown -- theme%20editor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24154</link>
      <description>The Theme Editor WordPress plugin before 2.6 did not validate the GET file parameter before passing it to the download_file() function, allowing administrators to download arbitrary files on the web server, such as /etc/passwd</description>
      <guid isPermaLink="false">CVE-2021-24154|2024-08-03T19:21:18.397Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3128|2024-08-03T01:00:10.523Z -- unknown -- donation%20thermometer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3128</link>
      <description>The Donation Thermometer WordPress plugin before 2.1.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3128|2024-08-03T01:00:10.523Z</guid>
      <pubDate>Mon, 03 Oct 2022 13:45:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2260|2024-08-03T00:32:09.543Z -- unknown -- givewp%20%E2%80%93%20donation%20plugin%20and%20fundraising%20platform
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2260</link>
      <description>The GiveWP WordPress plugin before 2.21.3 does not have CSRF in place when exporting data, and does not validate the exporting parameters such as dates, which could allow attackers to make a logged in admin DoS the web server via a CSRF attack as the plugin will try to retrieve data from the database many times which leads to overwhelm the target's CPU.</description>
      <guid isPermaLink="false">CVE-2022-2260|2024-08-03T00:32:09.543Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:50:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25079|2024-08-03T19:56:09.871Z -- unknown -- contact%20form%20entries%20%E2%80%93%20contact%20form%207%2C%20wpforms%20and%20more
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25079</link>
      <description>The Contact Form Entries WordPress plugin before 1.2.4 does not sanitise and escape various parameters, such as form_id, status, end_date, order, orderby and search before outputting them back in the admin page</description>
      <guid isPermaLink="false">CVE-2021-25079|2024-08-03T19:56:09.871Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:01:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24345|2024-08-03T19:28:23.560Z -- unknown -- sendit%20wp%20newsletter
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24345</link>
      <description>The page lists-management feature of the Sendit WP Newsletter WordPress plugin through 2.5.1, available to Administrator users does not sanitise, validate or escape the id_lista POST parameter before using it in SQL statement, therefore leading to Blind SQL Injection.</description>
      <guid isPermaLink="false">CVE-2021-24345|2024-08-03T19:28:23.560Z</guid>
      <pubDate>Mon, 14 Jun 2021 13:37:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24947|2024-08-03T19:49:13.473Z -- unknown -- rvm%20%E2%80%93%20responsive%20vector%20maps
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24947</link>
      <description>The RVM WordPress plugin before 6.4.2 does not have proper authorisation, CSRF checks and validation of the rvm_upload_regions_file_path parameter in the rvm_import_regions AJAX action, allowing any authenticated user, such as subscriber, to read arbitrary files on the web server</description>
      <guid isPermaLink="false">CVE-2021-24947|2024-08-03T19:49:13.473Z</guid>
      <pubDate>Mon, 07 Feb 2022 15:47:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24605|2024-08-03T19:35:20.239Z -- unknown -- custom%20post%20view%20generator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24605</link>
      <description>The create_post_page AJAX action of the Custom Post View Generator WordPress plugin through 0.4.6 (available to authenticated user) does not sanitise or escape user input before outputting it back in the response, leading to a Reflected Cross-Site issue</description>
      <guid isPermaLink="false">CVE-2021-24605|2024-08-03T19:35:20.239Z</guid>
      <pubDate>Mon, 13 Sep 2021 17:56:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3125|2024-08-03T01:00:10.419Z -- unknown -- frontend%20file%20manager%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3125</link>
      <description>The Frontend File Manager Plugin WordPress plugin before 21.3 allows any authenticated users, such as subscriber, to rename a file to an arbitrary extension, like PHP, which could allow them to basically be able to upload arbitrary files on the server and achieve RCE</description>
      <guid isPermaLink="false">CVE-2022-3125|2024-08-03T01:00:10.419Z</guid>
      <pubDate>Mon, 03 Oct 2022 13:45:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24927|2024-08-03T19:49:12.670Z -- unknown -- my%20calendar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24927</link>
      <description>The My Calendar WordPress plugin before 3.2.18 does not sanitise and escape the callback parameter of the mc_post_lookup AJAX action (available to any authenticated user) before outputting it back in the response, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24927|2024-08-03T19:49:12.670Z</guid>
      <pubDate>Mon, 29 Nov 2021 08:25:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1844|2024-08-03T00:17:00.742Z -- unknown -- wp%20sentry
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1844</link>
      <description>The WP Sentry WordPress plugin through 1.0 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping as well</description>
      <guid isPermaLink="false">CVE-2022-1844|2024-08-03T00:17:00.742Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:57:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3142|2024-08-03T01:00:10.258Z -- unknown -- nex-forms%20%E2%80%93%20ultimate%20form%20builder%20%E2%80%93%20contact%20forms%20and%20much%20more
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3142</link>
      <description>The NEX-Forms WordPress plugin before 7.9.7 does not properly sanitise and escape user input before using it in SQL statements, leading to SQL injections. The attack can be executed by anyone who is permitted to view the forms statistics chart, by default administrators, however can be configured otherwise via the plugin settings.</description>
      <guid isPermaLink="false">CVE-2022-3142|2024-08-03T01:00:10.258Z</guid>
      <pubDate>Mon, 19 Sep 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24123|2024-08-03T19:21:18.642Z -- unknown -- powerpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24123</link>
      <description>Arbitrary file upload in the PowerPress WordPress plugin, versions before 8.3.8, did not verify some of the uploaded feed images (such as the ones from Podcast Artwork section), allowing high privilege accounts (admin+) being able to upload arbitrary files, such as php, leading to RCE.</description>
      <guid isPermaLink="false">CVE-2021-24123|2024-08-03T19:21:18.642Z</guid>
      <pubDate>Thu, 18 Mar 2021 14:57:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25012|2024-08-03T19:49:14.598Z -- unknown -- pz-linkcard
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25012</link>
      <description>The Pz-LinkCard WordPress plugin through 2.4.4.4 does not sanitise and escape multiple parameters before outputting them back in admin dashboard pages, leading to Reflected Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-25012|2024-08-03T19:49:14.598Z</guid>
      <pubDate>Mon, 28 Mar 2022 17:21:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25092|2024-08-03T19:56:10.620Z -- unknown -- link%20library
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25092</link>
      <description>The Link Library WordPress plugin before 7.2.8 does not have CSRF check when resetting library settings, allowing attackers to make a logged in admin reset arbitrary settings via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2021-25092|2024-08-03T19:56:10.620Z</guid>
      <pubDate>Tue, 01 Feb 2022 12:21:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4453|2024-08-03T01:41:44.633Z -- unknown -- 3d%20flipbook
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4453</link>
      <description>The 3D FlipBook WordPress plugin through 1.13.2 does not validate or escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as Contributor to perform Stored Cross-Site Scripting attacks against high privilege users like administrators.</description>
      <guid isPermaLink="false">CVE-2022-4453|2024-08-03T01:41:44.633Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24723|2024-08-03T19:42:16.809Z -- unknown -- wp%20reactions%20lite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24723</link>
      <description>The WP Reactions Lite WordPress plugin before 1.3.6 does not properly sanitize inputs within wp-admin pages, allowing users with sufficient access to inject XSS payloads within /wp-admin/ pages.</description>
      <guid isPermaLink="false">CVE-2021-24723|2024-08-03T19:42:16.809Z</guid>
      <pubDate>Mon, 01 Nov 2021 08:46:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24495|2024-08-03T19:35:19.687Z -- unknown -- marmoset%20viewer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24495</link>
      <description>The Marmoset Viewer WordPress plugin before 1.9.3 does not property sanitize, validate or escape the 'id' parameter before outputting back in the page, leading to a reflected Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-24495|2024-08-03T19:35:19.687Z</guid>
      <pubDate>Mon, 09 Aug 2021 10:04:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24392|2024-08-03T19:28:23.803Z -- unknown -- wordpress%20membership%20swiftcloud.io
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24392</link>
      <description>An id GET parameter of the WordPress Membership SwiftCloud.io WordPress plugin through 1.0 is not properly sanitised, escaped or validated before inserting to a SQL statement, leading to SQL injection.</description>
      <guid isPermaLink="false">CVE-2021-24392|2024-08-03T19:28:23.803Z</guid>
      <pubDate>Mon, 06 Sep 2021 11:09:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24603|2024-08-03T19:35:20.266Z -- unknown -- site%20reviews
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24603</link>
      <description>The Site Reviews WordPress plugin before 5.13.1 does not sanitise some of its Review Details when adding a review as an admin, which could allow them to perform Cross-Site Scripting attacks when the unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24603|2024-08-03T19:35:20.266Z</guid>
      <pubDate>Mon, 06 Sep 2021 11:09:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25068|2024-08-03T19:56:09.944Z -- unknown -- sync%20woocommerce%20product%20feed%20to%20google%20shopping
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25068</link>
      <description>The Sync WooCommerce Product feed to Google Shopping WordPress plugin through 1.2.4 uses the 'feed_id' POST parameter which is not properly sanitized for use in a SQL statement, leading to a SQL injection vulnerability in the admin dashboard</description>
      <guid isPermaLink="false">CVE-2021-25068|2024-08-03T19:56:09.944Z</guid>
      <pubDate>Mon, 28 Mar 2022 17:21:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24788|2024-08-03T19:42:17.335Z -- unknown -- batch%20cat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24788</link>
      <description>The Batch Cat WordPress plugin through 0.3 defines 3 custom AJAX actions, which both require authentication but are available for all roles. As a result, any authenticated user (including simple subscribers) can add/set/delete arbitrary categories to posts.</description>
      <guid isPermaLink="false">CVE-2021-24788|2024-08-03T19:42:17.335Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:35:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24414|2024-08-03T19:28:23.832Z -- unknown -- video%20player%20for%20youtube
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24414</link>
      <description>The Video Player for YouTube WordPress plugin before 1.4 does not sanitise or validate the parameters from its shortcode, allowing users with a role as low as contributor to set Cross-Site Scripting payload in them which will be triggered in the page/s with the embed malicious shortcode</description>
      <guid isPermaLink="false">CVE-2021-24414|2024-08-03T19:28:23.832Z</guid>
      <pubDate>Mon, 25 Oct 2021 13:20:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3511|2024-08-03T01:14:02.488Z -- unknown -- awesome%20support
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3511</link>
      <description>The Awesome Support WordPress plugin before 6.1.2 does not ensure that the exported tickets archive to be downloaded belongs to the user making the request, allowing a low privileged user, such as subscriber to download arbitrary exported tickets via an IDOR vector</description>
      <guid isPermaLink="false">CVE-2022-3511|2024-08-03T01:14:02.488Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3830|2024-08-03T01:20:58.335Z -- unknown -- wp%20page%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3830</link>
      <description>The WP Page Builder WordPress plugin through 1.2.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3830|2024-08-03T01:20:58.335Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24734|2024-08-03T19:42:16.654Z -- unknown -- compact%20wp%20audio%20player
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24734</link>
      <description>The Compact WP Audio Player WordPress plugin before 1.9.7 does not escape some of its shortcodes attributes, which could allow users with a role as low as Contributor to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2021-24734|2024-08-03T19:42:16.654Z</guid>
      <pubDate>Mon, 18 Oct 2021 13:46:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3679|2024-08-03T01:14:03.236Z -- unknown -- starter%20templates%20by%20kadence%20wp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3679</link>
      <description>The Starter Templates by Kadence WP WordPress plugin before 1.2.17 unserialises the content of an imported file, which could lead to PHP object injection issues when an admin import (intentionally or not) a malicious file and a suitable gadget chain is present on the blog.</description>
      <guid isPermaLink="false">CVE-2022-3679|2024-08-03T01:14:03.236Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2180|2024-08-03T00:32:08.913Z -- unknown -- greyd_suite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2180</link>
      <description>The GREYD.SUITE WordPress theme does not properly validate uploaded custom font packages, and does not perform any authorization or csrf checks, allowing an unauthenticated attacker to upload arbitrary files including php source files, leading to possible remote code execution (RCE).</description>
      <guid isPermaLink="false">CVE-2022-2180|2024-08-03T00:32:08.913Z</guid>
      <pubDate>Mon, 15 Aug 2022 08:36:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24232|2024-08-03T19:21:19.041Z -- unknown -- advanced%20booking%20calendar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24232</link>
      <description>The Advanced Booking Calendar WordPress plugin before 1.6.8 does not sanitise the license error message when output in the settings page, leading to an authenticated reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24232|2024-08-03T19:21:19.041Z</guid>
      <pubDate>Thu, 22 Apr 2021 21:00:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24735|2024-08-03T19:42:16.608Z -- unknown -- compact%20wp%20audio%20player
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24735</link>
      <description>The Compact WP Audio Player WordPress plugin before 1.9.7 does not implement nonce checks, which could allow attackers to make a logged in admin change the "Disable Simultaneous Play" setting via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2021-24735|2024-08-03T19:42:16.608Z</guid>
      <pubDate>Mon, 18 Oct 2021 13:46:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24556|2024-08-03T19:35:20.064Z -- unknown -- email%20subscriber
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24556</link>
      <description>The kento_email_subscriber_ajax AJAX action of the Email Subscriber WordPress plugin through 1.1, does not properly sanitise, validate and escape the submitted subscribe_email and subscribe_name POST parameters, inserting them in the DB and then outputting them back in the Subscriber list (/wp-admin/edit.php?post_type=kes_campaign&amp;page=kento_email_subscriber_list_settings), leading a Stored XSS issue.</description>
      <guid isPermaLink="false">CVE-2021-24556|2024-08-03T19:35:20.064Z</guid>
      <pubDate>Mon, 23 Aug 2021 11:10:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24625|2024-08-03T19:35:20.214Z -- unknown -- spidercatalog
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24625</link>
      <description>The SpiderCatalog WordPress plugin through 1.7.3 does not sanitise or escape the 'parent' and 'ordering' parameters from the admin dashboard before using them in a SQL statement, leading to a SQL injection when adding a category</description>
      <guid isPermaLink="false">CVE-2021-24625|2024-08-03T19:35:20.214Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:34:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3909|2024-08-03T01:20:58.777Z -- unknown -- add%20comments
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3909</link>
      <description>The Add Comments WordPress plugin through 1.0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3909|2024-08-03T01:20:58.777Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1814|2024-08-03T00:17:00.389Z -- unknown -- wp%20admin%20style
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1814</link>
      <description>The WP Admin Style WordPress plugin through 0.1.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1814|2024-08-03T00:17:00.389Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:43:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2123|2024-08-03T00:24:44.249Z -- unknown -- wp%20opt-in
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2123</link>
      <description>The WP Opt-in WordPress plugin through 1.4.1 is vulnerable to CSRF which allows changed plugin settings and can be used for sending spam emails.</description>
      <guid isPermaLink="false">CVE-2022-2123|2024-08-03T00:24:44.249Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:57:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1828|2024-08-03T00:17:00.745Z -- unknown -- pdf24%20articles%20to%20pdf
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1828</link>
      <description>The PDF24 Articles To PDF WordPress plugin through 4.2.2 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1828|2024-08-03T00:17:00.745Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4656|2024-08-03T01:48:38.893Z -- unknown -- wp%20visitor%20statistics%20%28real%20time%20traffic%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4656</link>
      <description>The WP Visitor Statistics (Real Time Traffic) WordPress plugin before 6.5 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4656|2024-08-03T01:48:38.893Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2146|2024-08-03T00:24:44.217Z -- unknown -- import%20csv%20files
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2146</link>
      <description>The Import CSV Files WordPress plugin through 1.0 does not sanitise and escaped imported data before outputting them back in a page, and is lacking CSRF check when performing such action as well, resulting in a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2146|2024-08-03T00:24:44.217Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:36:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24690|2024-08-03T19:42:16.133Z -- unknown -- chained%20quiz
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24690</link>
      <description>The Chained Quiz WordPress plugin before 1.2.7.2 does not properly sanitize or escape inputs in the plugin's settings.</description>
      <guid isPermaLink="false">CVE-2021-24690|2024-08-03T19:42:16.133Z</guid>
      <pubDate>Mon, 11 Oct 2021 10:45:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4747|2024-08-03T01:48:40.186Z -- unknown -- post%20category%20image%20with%20grid%20and%20slider
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4747</link>
      <description>The Post Category Image With Grid and Slider WordPress plugin before 1.4.8 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4747|2024-08-03T01:48:40.186Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2599|2024-08-03T00:46:03.068Z -- unknown -- anti-malware%20security%20and%20brute-force%20firewall
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2599</link>
      <description>The Anti-Malware Security and Brute-Force Firewall WordPress plugin before 4.21.83 does not sanitise and escape some parameters before outputting them back in an admin dashboard, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2599|2024-08-03T00:46:03.068Z</guid>
      <pubDate>Mon, 29 Aug 2022 17:15:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24940|2024-08-03T19:49:14.052Z -- unknown -- %D9%88%D9%88%DA%A9%D8%A7%D9%85%D8%B1%D8%B3%20%D9%81%D8%A7%D8%B1%D8%B3%DB%8C
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24940</link>
      <description>The Persian Woocommerce WordPress plugin through 5.8.0 does not escape the s parameter before outputting it back in an attribute in the admin dashboard, which could lead to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24940|2024-08-03T19:49:14.052Z</guid>
      <pubDate>Mon, 14 Mar 2022 14:40:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4657|2024-08-03T01:48:39.494Z -- unknown -- restaurant%20menu
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4657</link>
      <description>The Restaurant Menu WordPress plugin before 2.3.6 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4657|2024-08-03T01:48:39.494Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1896|2024-08-03T00:17:00.962Z -- unknown -- underconstruction
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1896</link>
      <description>The underConstruction WordPress plugin before 1.21 does not sanitise or escape the "Display a custom page using your own HTML" setting before outputting it, allowing high privilege users to perform Cross-Site Scripting attacks even when the unfiletred_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-1896|2024-08-03T00:17:00.962Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4242|2024-08-03T01:34:49.867Z -- unknown -- wp%20google%20review%20slider
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4242</link>
      <description>The WP Google Review Slider WordPress plugin before 11.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4242|2024-08-03T01:34:49.867Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24124|2024-08-03T19:21:18.238Z -- unknown -- wp%20shieldon
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24124</link>
      <description>Unvalidated input and lack of output encoding in the WP Shieldon WordPress plugin, version 1.6.3 and below, leads to Unauthenticated Reflected Cross-Site Scripting (XSS) when the CAPTCHA page is shown could lead to privileged escalation.</description>
      <guid isPermaLink="false">CVE-2021-24124|2024-08-03T19:21:18.238Z</guid>
      <pubDate>Thu, 18 Mar 2021 14:57:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2152|2024-08-03T00:24:44.254Z -- unknown -- duplicate%20page%20and%20post
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2152</link>
      <description>The Duplicate Page and Post WordPress plugin before 2.8 does not sanitise and escape its settings, allowing high privilege users such as admin to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2152|2024-08-03T00:24:44.254Z</guid>
      <pubDate>Mon, 15 Aug 2022 08:36:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24647|2024-08-03T19:35:20.362Z -- unknown -- registration%20forms%20%E2%80%93%20user%20profile%2C%20content%20restriction%2C%20spam%20protection%2C%20payment%20gateways%2C%20invitation%20codes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24647</link>
      <description>The Registration Forms – User profile, Content Restriction, Spam Protection, Payment Gateways, Invitation Codes WordPress plugin before 3.1.7.6 has a flaw in the social login implementation, allowing unauthenticated attacker to login as any user on the site by only knowing their user ID or username</description>
      <guid isPermaLink="false">CVE-2021-24647|2024-08-03T19:35:20.362Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:34:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24363|2024-08-03T19:28:23.794Z -- unknown -- photo%20gallery%20by%2010web%20%E2%80%93%20mobile-friendly%20image%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24363</link>
      <description>The Photo Gallery by 10Web – Mobile-Friendly Image Gallery WordPress plugin before 1.5.75 did not ensure that uploaded files are kept inside its uploads folder, allowing high privilege users to put images/SVG anywhere in the filesystem via a path traversal vector</description>
      <guid isPermaLink="false">CVE-2021-24363|2024-08-03T19:28:23.794Z</guid>
      <pubDate>Mon, 16 Aug 2021 10:48:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24850|2024-08-03T19:42:17.195Z -- unknown -- insert%20pages
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24850</link>
      <description>The Insert Pages WordPress plugin before 3.7.0 adds a shortcode that prints out other pages' content and custom fields. It can be used by users with a role as low as Contributor to perform Cross-Site Scripting attacks by storing the payload/s in another post's custom fields.</description>
      <guid isPermaLink="false">CVE-2021-24850|2024-08-03T19:42:17.195Z</guid>
      <pubDate>Wed, 17 Nov 2021 10:15:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24699|2024-08-03T19:42:16.085Z -- unknown -- easy%20media%20download
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24699</link>
      <description>The Easy Media Download WordPress plugin before 1.1.7 does not escape the text argument of its shortcode, which could allow users with a role as low as Contributor to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2021-24699|2024-08-03T19:42:16.085Z</guid>
      <pubDate>Mon, 25 Oct 2021 13:20:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4872|2024-08-03T01:55:46.089Z -- unknown -- chained%20products
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4872</link>
      <description>The Chained Products WordPress plugin before 2.12.0 does not have authorisation and CSRF checks, as well as does not ensure that the option to be updated belong to the plugin, allowing unauthenticated attackers to set arbitrary options to 'no'</description>
      <guid isPermaLink="false">CVE-2022-4872|2024-08-03T01:55:46.089Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24972|2024-08-03T19:49:14.378Z -- unknown -- pixel%20cat%20%E2%80%93%20conversion%20pixel%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24972</link>
      <description>The Pixel Cat WordPress plugin before 2.6.3 does not escape some of its settings, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24972|2024-08-03T19:49:14.378Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:41:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3837|2024-08-03T01:20:58.405Z -- unknown -- uji%20countdown
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3837</link>
      <description>The Uji Countdown WordPress plugin before 2.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3837|2024-08-03T01:20:58.405Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4777|2024-08-03T01:48:40.437Z -- unknown -- bootstrap%20shortcodes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4777</link>
      <description>The Bootstrap Shortcodes WordPress plugin through 3.4.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4777|2024-08-03T01:48:40.437Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24976|2024-08-03T19:49:14.366Z -- unknown -- smart%20seo%20tool%20%E2%80%93%20seo%E4%BC%98%E5%8C%96%E6%8F%92%E4%BB%B6
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24976</link>
      <description>The Smart SEO Tool WordPress plugin before 3.0.6 does not sanitise and escape the search parameter before outputting it back in an attribute when the TDK optimisation setting is enabled, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-24976|2024-08-03T19:49:14.366Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:01:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24930|2024-08-03T19:49:14.020Z -- unknown -- wordpress%20online%20booking%20and%20scheduling%20plugin%20%E2%80%93%20bookly
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24930</link>
      <description>The WordPress Online Booking and Scheduling Plugin WordPress plugin before 20.3.1 does not escape the Staff Full Name field before outputting it back in a page, which could lead to a Stored Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24930|2024-08-03T19:49:14.020Z</guid>
      <pubDate>Mon, 06 Dec 2021 15:55:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24304|2024-08-03T19:28:23.440Z -- unknown -- newsmag
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24304</link>
      <description>The Newsmag WordPress theme before 5.0 does not sanitise the td_block_id parameter in its td_ajax_block AJAX action, leading to an unauthenticated Reflected Cross-site Scripting (XSS) vulnerability.</description>
      <guid isPermaLink="false">CVE-2021-24304|2024-08-03T19:28:23.440Z</guid>
      <pubDate>Mon, 09 Aug 2021 10:04:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2823|2024-08-03T00:52:59.620Z -- unknown -- slider%2C%20gallery%2C%20and%20carousel%20by%20metaslider%20%E2%80%93%20responsive%20wordpress%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2823</link>
      <description>The Slider, Gallery, and Carousel by MetaSlider WordPress plugin before 3.27.9 does not sanitise and escape some of its Gallery Image parameters, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2823|2024-08-03T00:52:59.620Z</guid>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25034|2024-08-03T19:49:14.550Z -- unknown -- wp%20user%20%E2%80%93%20custom%20registration%20forms%2C%20login%20and%20user%20profile
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25034</link>
      <description>The WP User WordPress plugin before 7.0 does not sanitise and escape some parameters in pages where the [wp_user] shortcode is used, leading to Reflected Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-25034|2024-08-03T19:49:14.550Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24485|2024-08-03T19:35:19.796Z -- unknown -- special%20text%20boxes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24485</link>
      <description>The Special Text Boxes WordPress plugin before 5.9.110 does not sanitise or escape some of its settings, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24485|2024-08-03T19:35:19.796Z</guid>
      <pubDate>Mon, 25 Oct 2021 13:20:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4302|2024-08-03T01:34:50.153Z -- unknown -- white%20label%20cms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4302</link>
      <description>The White Label CMS WordPress plugin before 2.5 unserializes user input provided via the settings, which could allow high-privilege users such as admin to perform PHP Object Injection when a suitable gadget is present.</description>
      <guid isPermaLink="false">CVE-2022-4302|2024-08-03T01:34:50.153Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4460|2024-08-03T01:41:44.570Z -- unknown -- sidebar%20widgets%20by%20codelights
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4460</link>
      <description>The Sidebar Widgets by CodeLights WordPress plugin through 1.4 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as a contributor to perform Stored Cross-Site Scripting attacks, which could be used against high-privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4460|2024-08-03T01:41:44.570Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24836|2024-08-03T19:42:17.472Z -- unknown -- temporary%20login%20without%20password
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24836</link>
      <description>The Temporary Login Without Password WordPress plugin before 1.7.1 does not have authorisation and CSRF checks when updating its settings, which could allows any logged-in users, such as subscribers to update them</description>
      <guid isPermaLink="false">CVE-2021-24836|2024-08-03T19:42:17.472Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:41:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2887|2024-08-03T00:52:59.877Z -- unknown -- wp%20server%20health%20stats
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2887</link>
      <description>The WP Server Health Stats WordPress plugin before 1.7.0 does not escape some of its settings, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2887|2024-08-03T00:52:59.877Z</guid>
      <pubDate>Fri, 16 Sep 2022 08:40:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2312|2024-08-03T00:32:09.589Z -- unknown -- student%20result%20or%20employee%20database
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2312</link>
      <description>The Student Result or Employee Database WordPress plugin before 1.7.5 does not have CSRF in its AJAX actions, allowing attackers to make logged in user with a role as low as contributor to add/edit and delete students via CSRF attacks. Furthermore, due to the lack of sanitisation and escaping, it could also lead to Stored Cross-Site scripting</description>
      <guid isPermaLink="false">CVE-2022-2312|2024-08-03T00:32:09.589Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:01:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1547|2024-08-03T00:10:03.549Z -- unknown -- check%20%26%20log%20email
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1547</link>
      <description>The Check &amp; Log Email WordPress plugin before 1.0.6 does not sanitise and escape a parameter before outputting it back in an attribute in an admin page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-1547|2024-08-03T00:10:03.549Z</guid>
      <pubDate>Mon, 23 May 2022 07:15:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3753|2024-08-03T01:20:57.583Z -- unknown -- evaluate
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3753</link>
      <description>The Evaluate WordPress plugin through 1.0 does not sanitize and escapes some of its settings, which could allow high-privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example, in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3753|2024-08-03T01:20:57.583Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24970|2024-08-03T19:49:14.106Z -- unknown -- all-in-one%20video%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24970</link>
      <description>The All-in-One Video Gallery WordPress plugin before 2.5.0 does not sanitise and validate the tab parameter before using it in a require statement in the admin dashboard, leading to a Local File Inclusion issue</description>
      <guid isPermaLink="false">CVE-2021-24970|2024-08-03T19:49:14.106Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:41:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4431|2024-08-03T01:41:44.449Z -- unknown -- woocs
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4431</link>
      <description>The WOOCS WordPress plugin before 1.3.9.4 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4431|2024-08-03T01:41:44.449Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3097|2024-08-03T01:00:10.709Z -- unknown -- plugin%20lbstopattack
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3097</link>
      <description>The Plugin LBstopattack WordPress plugin before 1.1.3 does not use nonces when saving its settings, making it possible for attackers to conduct CSRF attacks. This could allow attackers to disable the plugin's protections.</description>
      <guid isPermaLink="false">CVE-2022-3097|2024-08-03T01:00:10.709Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24568|2024-08-03T19:35:20.211Z -- unknown -- addtoany%20share%20buttons
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24568</link>
      <description>The AddToAny Share Buttons WordPress plugin before 1.7.46 does not sanitise its Sharing Header setting when outputting it in frontend pages, allowing high privilege users such as admin to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24568|2024-08-03T19:35:20.211Z</guid>
      <pubDate>Mon, 06 Sep 2021 11:09:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3677|2024-08-03T01:14:03.297Z -- unknown -- advanced%20import%20%3A%20one%20click%20import%20for%20wordpress%20or%20theme%20demo%20data
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3677</link>
      <description>The Advanced Import WordPress plugin before 1.3.8 does not have CSRF check when installing and activating plugins, which could allow attackers to make a logged in admin install arbitrary plugins from WordPress.org, and activate arbitrary ones from the blog via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2022-3677|2024-08-03T01:14:03.297Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2356|2024-08-03T00:32:09.645Z -- unknown -- frontend%20file%20manager%20%26%20sharing%20%E2%80%93%20user%20private%20files
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2356</link>
      <description>The Frontend File Manager &amp; Sharing WordPress plugin before 1.1.3 does not filter file extensions when letting users upload files on the server, which may lead to malicious code being uploaded.</description>
      <guid isPermaLink="false">CVE-2022-2356|2024-08-03T00:32:09.645Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:46:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24477|2024-08-03T19:35:20.095Z -- unknown -- migrate%20users
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24477</link>
      <description>The Migrate Users WordPress plugin through 1.0.1 does not sanitise or escape its Delimiter option before outputting in a page, leading to a Stored Cross-Site Scripting issue. Furthermore, the plugin does not have CSRF check in place when saving its options, allowing the issue to be exploited via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2021-24477|2024-08-03T19:35:20.095Z</guid>
      <pubDate>Mon, 02 Aug 2021 10:32:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2169|2024-08-03T00:32:08.553Z -- unknown -- loading%20page%20with%20loading%20screen
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2169</link>
      <description>The Loading Page with Loading Screen WordPress plugin before 1.0.83 does not escape its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2169|2024-08-03T00:32:08.553Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:36:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24545|2024-08-03T19:35:20.073Z -- unknown -- wp%20html%20author%20bio
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24545</link>
      <description>The WP HTML Author Bio WordPress plugin through 1.2.0 does not sanitise the HTML allowed in the Bio of users, allowing them to use malicious JavaScript code, which will be executed when anyone visit a post in the frontend made by such user. As a result, user with a role as low as author could perform Cross-Site Scripting attacks against users, which could potentially lead to privilege escalation when an admin view the related post/s.</description>
      <guid isPermaLink="false">CVE-2021-24545|2024-08-03T19:35:20.073Z</guid>
      <pubDate>Mon, 11 Oct 2021 10:45:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2404|2024-08-03T00:39:07.581Z -- unknown -- wp%20popup%20builder%20%E2%80%93%20popup%20forms%20%2C%20marketing%20popup%20%26%20%20newsletter
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2404</link>
      <description>The WP Popup Builder WordPress plugin before 1.2.9 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2404|2024-08-03T00:39:07.581Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25017|2024-08-03T19:49:14.592Z -- unknown -- tutor%20lms%20%E2%80%93%20elearning%20and%20online%20course%20solution
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25017</link>
      <description>The Tutor LMS WordPress plugin before 1.9.12 does not escape the search parameter before outputting it back in an attribute in an admin page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-25017|2024-08-03T19:49:14.592Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:01:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3984|2024-08-03T01:27:54.384Z -- unknown -- flowplayer%20video%20player
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3984</link>
      <description>The Flowplayer Video Player WordPress plugin before 1.0.5 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-3984|2024-08-03T01:27:54.384Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3241|2024-08-03T01:00:10.547Z -- unknown -- build%20app%20online
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3241</link>
      <description>The Build App Online WordPress plugin before 1.0.19 does not properly sanitise and escape some parameters before using them in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2022-3241|2024-08-03T01:00:10.547Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4652|2024-08-03T01:48:39.560Z -- unknown -- video%20background
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4652</link>
      <description>The Video Background WordPress plugin before 2.7.5 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4652|2024-08-03T01:48:39.560Z</guid>
      <pubDate>Mon, 13 Mar 2023 16:03:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24922|2024-08-03T19:49:13.810Z -- unknown -- pixel%20cat%20%E2%80%93%20conversion%20pixel%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24922</link>
      <description>The Pixel Cat WordPress plugin before 2.6.2 does not have CSRF check when saving its settings, and did not sanitise as well as escape some of them, which could allow attacker to make a logged in admin change them and perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2021-24922|2024-08-03T19:49:13.810Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:41:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3394|2024-08-03T01:07:06.598Z -- unknown -- wp%20all%20export%20pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3394</link>
      <description>The WP All Export Pro WordPress plugin before 1.7.9 does not limit some functionality during exports only to users with the Administrator role, allowing any logged in user which has been given privileges to perform exports to execute arbitrary code on the site. By default only administrators can run exports, but the privilege can be delegated to lower privileged users.</description>
      <guid isPermaLink="false">CVE-2022-3394|2024-08-03T01:07:06.598Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25101|2024-08-03T19:56:10.539Z -- unknown -- anti-malware%20security%20and%20brute-force%20firewall
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25101</link>
      <description>The Anti-Malware Security and Brute-Force Firewall WordPress plugin before 4.20.94 does not sanitise and escape the POST data before outputting it back in attributes of an admin page, leading to a Reflected Cross-Site scripting. Due to the presence of specific parameter value, available to admin users, this can only be exploited by an admin against another admin user.</description>
      <guid isPermaLink="false">CVE-2021-25101|2024-08-03T19:56:10.539Z</guid>
      <pubDate>Mon, 21 Feb 2022 10:45:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25047|2024-08-03T19:49:14.583Z -- unknown -- 10web%20social%20photo%20feed
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25047</link>
      <description>The 10Web Social Photo Feed WordPress plugin before 1.4.29 was affected by a reflected Cross-Site Scripting (XSS) vulnerability in the wdi_apply_changes admin page, allowing an attacker to perform such attack against any logged in users</description>
      <guid isPermaLink="false">CVE-2021-25047|2024-08-03T19:49:14.583Z</guid>
      <pubDate>Mon, 10 Jan 2022 15:30:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24993|2024-08-03T19:49:14.524Z -- unknown -- ultimate%20product%20catalog%20%E2%80%93%20wordpress%20catalog%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24993</link>
      <description>The Ultimate Product Catalog WordPress plugin before 5.0.26 does not have authorisation and CSRF checks in some AJAX actions, which could allow any authenticated users, such as subscriber to call them and add arbitrary products, or change the plugin's settings for example</description>
      <guid isPermaLink="false">CVE-2021-24993|2024-08-03T19:49:14.524Z</guid>
      <pubDate>Mon, 07 Feb 2022 15:47:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4426|2024-08-03T01:41:44.630Z -- unknown -- mautic%20integration%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4426</link>
      <description>The Mautic Integration for WooCommerce WordPress plugin before 1.0.3 does not have proper CSRF check when updating settings, and does not ensure that the options to be updated belong to the plugin, allowing attackers to make a logged in admin change arbitrary blog options via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2022-4426|2024-08-03T01:41:44.630Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1611|2024-08-03T00:10:03.748Z -- unknown -- bulk%20page%20creator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1611</link>
      <description>The Bulk Page Creator WordPress plugin before 1.1.4 does not protect its page creation functionalities with nonce checks, which makes them vulnerable to CSRF.</description>
      <guid isPermaLink="false">CVE-2022-1611|2024-08-03T00:10:03.748Z</guid>
      <pubDate>Mon, 30 May 2022 08:36:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1826|2024-08-03T00:17:00.594Z -- unknown -- cross-linker
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1826</link>
      <description>The Cross-Linker WordPress plugin through 3.0.1.9 does not have CSRF check in place when creating Cross-Links, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1826|2024-08-03T00:17:00.594Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24226|2024-08-03T19:21:18.651Z -- unknown -- accessally
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24226</link>
      <description>In the AccessAlly WordPress plugin before 3.5.7, the file "resource/frontend/product/product-shortcode.php" responsible for the [accessally_order_form] shortcode is dumping serialize($_SERVER), which contains all environment variables. The leakage occurs on all public facing pages containing the [accessally_order_form] shortcode, no login or administrator role is required.</description>
      <guid isPermaLink="false">CVE-2021-24226|2024-08-03T19:21:18.651Z</guid>
      <pubDate>Mon, 12 Apr 2021 14:04:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4325|2024-08-03T01:34:50.167Z -- unknown -- post%20status%20notifier%20lite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4325</link>
      <description>The Post Status Notifier Lite WordPress plugin before 1.10.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which can be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2022-4325|2024-08-03T01:34:50.167Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24709|2024-08-03T19:42:16.196Z -- unknown -- weather%20effect%20%E2%80%93%20christmas%20santa%20snow%20falling
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24709</link>
      <description>The Weather Effect WordPress plugin before 1.3.6 does not properly validate and escape some of its settings (like *_size_leaf, *_flakes_leaf, *_speed) which could lead to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-24709|2024-08-03T19:42:16.196Z</guid>
      <pubDate>Mon, 11 Oct 2021 10:45:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24400|2024-08-03T19:28:23.893Z -- unknown -- display%20users
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24400</link>
      <description>The Edit Role functionality in the Display Users WordPress plugin through 2.0.0 had an `id` parameter which is not sanitised, escaped or validated before inserting to a SQL statement, leading to SQL injection.</description>
      <guid isPermaLink="false">CVE-2021-24400|2024-08-03T19:28:23.893Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24149|2024-08-03T19:21:18.591Z -- unknown -- modern%20events%20calendar%20lite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24149</link>
      <description>Unvalidated input in the Modern Events Calendar Lite WordPress plugin, versions before 5.16.6, did not sanitise the mec[post_id] POST parameter in the mec_fes_form AJAX action when logged in as an author+, leading to an authenticated SQL Injection issue.</description>
      <guid isPermaLink="false">CVE-2021-24149|2024-08-03T19:21:18.591Z</guid>
      <pubDate>Thu, 18 Mar 2021 14:57:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4790|2024-08-03T01:48:40.412Z -- unknown -- wp%20google%20my%20business%20auto%20publish
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4790</link>
      <description>The WP Google My Business Auto Publish WordPress plugin before 3.4 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4790|2024-08-03T01:48:40.412Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4765|2024-08-03T01:48:40.395Z -- unknown -- portfolio%20for%20elementor%2C%20image%20gallery%20%26%20post%20grid%20%20%7C%20powerfolio
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4765</link>
      <description>The Portfolio for Elementor WordPress plugin before 2.3.1 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4765|2024-08-03T01:48:40.395Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24497|2024-08-03T19:35:19.784Z -- unknown -- giveaway
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24497</link>
      <description>The Giveaway WordPress plugin through 1.2.2 is vulnerable to an SQL Injection issue which allows an administrative user to execute arbitrary SQL commands via the $post_id on the options.php page.</description>
      <guid isPermaLink="false">CVE-2021-24497|2024-08-03T19:35:19.784Z</guid>
      <pubDate>Mon, 23 Aug 2021 11:09:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3811|2024-08-03T01:20:58.446Z -- unknown -- eu%20cookie%20law%20for%20gdpr%2Fccpa
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3811</link>
      <description>The EU Cookie Law for GDPR/CCPA WordPress plugin through 3.1.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3811|2024-08-03T01:20:58.446Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1937|2024-08-03T00:24:42.589Z -- unknown -- awin%20data%20feed
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1937</link>
      <description>The Awin Data Feed WordPress plugin before 1.8 does not sanitise and escape a parameter before outputting it back via an AJAX action (available to both unauthenticated and authenticated users), leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-1937|2024-08-03T00:24:42.589Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:56:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24833|2024-08-03T19:42:17.229Z -- unknown -- yop%20poll
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24833</link>
      <description>The YOP Poll WordPress plugin before 6.3.1 is affected by a stored Cross-Site Scripting vulnerability, which exists in the Admin preview module where a user with a role as low as author is allowed to execute arbitrary script code within the context of the application. This vulnerability is due to insufficient validation of question and answer text parameters in Create Poll module.</description>
      <guid isPermaLink="false">CVE-2021-24833|2024-08-03T19:42:17.229Z</guid>
      <pubDate>Wed, 17 Nov 2021 10:15:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1950|2024-08-03T00:24:43.422Z -- unknown -- youzify%20%E2%80%93%20buddypress%20community%2C%20user%20profile%2C%20social%20network%20%26%20membership%20plugin%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1950</link>
      <description>The Youzify WordPress plugin before 1.2.0 does not sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to an unauthenticated SQL injection</description>
      <guid isPermaLink="false">CVE-2022-1950|2024-08-03T00:24:43.422Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:49:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25109|2024-08-03T19:56:10.564Z -- unknown -- futurio%20extra
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25109</link>
      <description>The Futurio Extra WordPress plugin before 1.6.3 is affected by a SQL Injection vulnerability that could be used by high privilege users to extract data from the database as well as used to perform Cross-Site Scripting (XSS) against logged in admins by making send open a malicious link.</description>
      <guid isPermaLink="false">CVE-2021-25109|2024-08-03T19:56:10.564Z</guid>
      <pubDate>Mon, 14 Feb 2022 09:20:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24466|2024-08-03T19:35:19.451Z -- unknown -- verse-o-matic
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24466</link>
      <description>The Verse-O-Matic WordPress plugin through 4.1.1 does not have any CSRF checks in place, allowing attackers to make logged in administrators do unwanted actions, such as add/edit/delete arbitrary verses and change the settings. Due to the lack of sanitisation in the settings and verses, this could also lead to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-24466|2024-08-03T19:35:19.451Z</guid>
      <pubDate>Mon, 16 Aug 2021 10:48:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3426|2024-08-03T01:07:06.546Z -- unknown -- advanced%20wp%20columns
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3426</link>
      <description>The Advanced WP Columns WordPress plugin through 2.0.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3426|2024-08-03T01:07:06.546Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4199|2024-08-03T01:34:49.944Z -- unknown -- link%20library
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4199</link>
      <description>The Link Library WordPress plugin before 7.4.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4199|2024-08-03T01:34:49.944Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24931|2024-08-03T19:49:14.241Z -- unknown -- secure%20copy%20content%20protection%20and%20content%20locking
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24931</link>
      <description>The Secure Copy Content Protection and Content Locking WordPress plugin before 2.8.2 does not escape the sccp_id parameter of the ays_sccp_results_export_file AJAX action (available to both unauthenticated and authenticated users) before using it in a SQL statement, leading to an SQL injection.</description>
      <guid isPermaLink="false">CVE-2021-24931|2024-08-03T19:49:14.241Z</guid>
      <pubDate>Mon, 06 Dec 2021 15:55:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2171|2024-08-03T00:32:07.973Z -- unknown -- progressive%20license
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2171</link>
      <description>The Progressive License WordPress plugin through 1.1.0 is lacking any CSRF check when saving its settings, which could allow attackers to make a logged in admin change them. Furthermore, as the plugin allows arbitrary HTML to be inserted in one of the settings, this could lead to Stored XSS issue which will be triggered in the frontend as well.</description>
      <guid isPermaLink="false">CVE-2022-2171|2024-08-03T00:32:07.973Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:49:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4836|2024-08-03T01:55:45.699Z -- unknown -- breadcrumb
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4836</link>
      <description>The Breadcrumb WordPress plugin before 1.5.33 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4836|2024-08-03T01:55:45.699Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4386|2024-08-03T01:41:44.404Z -- unknown -- intuitive%20custom%20post%20order
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4386</link>
      <description>The Intuitive Custom Post Order WordPress plugin before 3.1.4 lacks CSRF protection in its update-menu-order ajax action, allowing an attacker to trick any user to change the menu order via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-4386|2024-08-03T01:41:44.404Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:51:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25062|2024-08-03T19:49:14.549Z -- unknown -- orders%20tracking%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25062</link>
      <description>The Orders Tracking for WooCommerce WordPress plugin before 1.1.10 does not sanitise and escape the file_url before outputting it back in an admin page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-25062|2024-08-03T19:49:14.549Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:01:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24694|2024-08-03T19:42:16.203Z -- unknown -- simple%20download%20monitor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24694</link>
      <description>The Simple Download Monitor WordPress plugin before 3.9.11 could allow users with a role as low as Contributor to perform Stored Cross-Site Scripting attack via 1) "color" or "css_class" argument of sdm_download shortcode, 2) "class" or "placeholder" argument of sdm_search_form shortcode.</description>
      <guid isPermaLink="false">CVE-2021-24694|2024-08-03T19:42:16.203Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:00:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3911|2024-08-03T01:20:58.806Z -- unknown -- iubenda%20%7C%20all-in-one%20compliance%20for%20gdpr%20%2F%20ccpa%20cookie%20consent%20%2B%20more
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3911</link>
      <description>The iubenda WordPress plugin before 3.3.3 does does not have authorisation and CSRF in an AJAX action, and does not ensure that the options to be updated belong to the plugin as long as they are arrays. As a result, any authenticated users, such as subscriber can grant themselves any privileges, such as edit_plugins etc</description>
      <guid isPermaLink="false">CVE-2022-3911|2024-08-03T01:20:58.806Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4200|2024-08-03T01:34:49.549Z -- unknown -- login%20with%20cognito
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4200</link>
      <description>The Login with Cognito WordPress plugin through 1.4.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4200|2024-08-03T01:34:49.549Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4629|2024-08-03T01:48:39.058Z -- unknown -- product%20slider%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4629</link>
      <description>The Product Slider for WooCommerce WordPress plugin before 2.6.4 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4629|2024-08-03T01:48:39.058Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3900|2024-08-03T01:20:58.476Z -- unknown -- cooked%20pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3900</link>
      <description>The Cooked Pro WordPress plugin before 1.7.5.7 does not properly validate or sanitize the recipe_args parameter before unserializing it in the cooked_loadmore action, allowing an unauthenticated attacker to trigger a PHP Object injection vulnerability.</description>
      <guid isPermaLink="false">CVE-2022-3900|2024-08-03T01:20:58.476Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:57:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1695|2024-08-03T00:10:03.866Z -- unknown -- wp%20simple%20adsense%20insertion
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1695</link>
      <description>The WP Simple Adsense Insertion WordPress plugin before 2.1 does not perform CSRF checks on updates to its admin page, allowing an attacker to trick a logged in user to manipulate ads and inject arbitrary javascript via submitting a form.</description>
      <guid isPermaLink="false">CVE-2022-1695|2024-08-03T00:10:03.866Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24555|2024-08-03T19:35:20.187Z -- unknown -- diary%20%26%20availability%20calendar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24555</link>
      <description>The daac_delete_booking_callback function, hooked to the daac_delete_booking AJAX action, takes the id POST parameter which is passed into the SQL statement without proper sanitisation, validation or escaping, leading to a SQL Injection issue. Furthermore, the ajax action is lacking any CSRF and capability check, making it available to any authenticated user.</description>
      <guid isPermaLink="false">CVE-2021-24555|2024-08-03T19:35:20.187Z</guid>
      <pubDate>Mon, 23 Aug 2021 11:10:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24653|2024-08-03T19:35:20.316Z -- unknown -- cookie%20bar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24653</link>
      <description>The Cookie Bar WordPress plugin before 1.8.9 doesn't properly sanitise the Cookie Bar Message setting, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24653|2024-08-03T19:35:20.316Z</guid>
      <pubDate>Mon, 25 Oct 2021 13:20:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2552|2024-08-03T00:39:08.064Z -- unknown -- duplicator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2552</link>
      <description>The Duplicator WordPress plugin before 1.4.7 does not authenticate or authorize visitors before displaying information about the system such as server software, php version and full file system path to the site.</description>
      <guid isPermaLink="false">CVE-2022-2552|2024-08-03T00:39:08.064Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:04:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24755|2024-08-03T19:42:16.590Z -- unknown -- mycred%20%E2%80%93%20points%2C%20rewards%2C%20gamification%2C%20ranks%2C%20badges%20%26%20loyalty%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24755</link>
      <description>The myCred WordPress plugin before 2.3 does not validate or escape the fields parameter before using it in a SQL statement, leading to an SQL injection exploitable by any authenticated user</description>
      <guid isPermaLink="false">CVE-2021-24755|2024-08-03T19:42:16.590Z</guid>
      <pubDate>Mon, 29 Nov 2021 08:25:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-4222|2024-08-03T17:16:04.262Z -- unknown -- wp-paginate
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-4222</link>
      <description>The WP-Paginate WordPress plugin before 2.1.4 does not sanitise and escape its preset settings, allowing high privilege users such as admin to perform Cross-Site Scripting attacks even when the unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2021-4222|2024-08-03T17:16:04.262Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3392|2024-08-03T01:07:06.511Z -- unknown -- wp%20humans.txt
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3392</link>
      <description>The WP Humans.txt WordPress plugin through 1.0.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3392|2024-08-03T01:07:06.511Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24265|2024-08-03T19:28:22.801Z -- unknown -- rife%20elementor%20extensions%20%26%20templates
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24265</link>
      <description>The “Rife Elementor Extensions &amp; Templates” WordPress Plugin before 1.1.6 has a widget that is vulnerable to stored Cross-Site Scripting(XSS) by lower-privileged users such as contributors, all via a similar method.</description>
      <guid isPermaLink="false">CVE-2021-24265|2024-08-03T19:28:22.801Z</guid>
      <pubDate>Wed, 05 May 2021 18:28:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2575|2024-08-03T00:39:08.118Z -- unknown -- wbw%20currency%20switcher%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2575</link>
      <description>The WBW Currency Switcher for WooCommerce WordPress plugin before 1.6.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2575|2024-08-03T00:39:08.118Z</guid>
      <pubDate>Fri, 16 Sep 2022 08:40:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24953|2024-08-03T19:49:14.537Z -- unknown -- advanced%20iframe
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24953</link>
      <description>The Advanced iFrame WordPress plugin before 2022 does not sanitise and escape the ai_config_id parameter before outputting it back in an admin page, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24953|2024-08-03T19:49:14.537Z</guid>
      <pubDate>Mon, 07 Mar 2022 08:16:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3391|2024-08-03T01:07:06.531Z -- unknown -- retain%20live%20chat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3391</link>
      <description>The Retain Live Chat WordPress plugin through 0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3391|2024-08-03T01:07:06.531Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24218|2024-08-03T19:21:18.784Z -- unknown -- facebook%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24218</link>
      <description>The wp_ajax_save_fbe_settings and wp_ajax_delete_fbe_settings AJAX actions of the Facebook for WordPress plugin before 3.0.4 were vulnerable to CSRF due to a lack of nonce protection. The settings in the saveFbeSettings function had no sanitization allowing for script tags to be saved.</description>
      <guid isPermaLink="false">CVE-2021-24218|2024-08-03T19:21:18.784Z</guid>
      <pubDate>Mon, 12 Apr 2021 14:01:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1790|2024-08-03T00:16:59.968Z -- unknown -- new%20user%20email%20set%20up
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1790</link>
      <description>The New User Email Set Up WordPress plugin through 0.5.2 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1790|2024-08-03T00:16:59.968Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24416|2024-08-03T19:28:23.956Z -- unknown -- streamcast%20%E2%80%93%20radio%20player%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24416</link>
      <description>The StreamCast – Radio Player for WordPress plugin before 2.1.1 does not sanitise or validate the parameters from its shortcode, allowing users with a role as low as contributor to set Cross-Site Scripting payload in them which will be triggered in the page/s with the embed malicious shortcode</description>
      <guid isPermaLink="false">CVE-2021-24416|2024-08-03T19:28:23.956Z</guid>
      <pubDate>Mon, 18 Oct 2021 13:45:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24509|2024-08-03T19:35:20.036Z -- unknown -- page%20view%20count
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24509</link>
      <description>The Page View Count WordPress plugin before 2.4.9 does not escape the postid parameter of pvc_stats shortcode, allowing users with a role as low as Contributor to perform Stored XSS attacks. A post made by a contributor would still have to be approved by an admin to have the XSS triggered in the frontend, however, higher privilege users, such as editor could exploit this without the need of approval, and even when the blog disallows the unfiltered_html capability.</description>
      <guid isPermaLink="false">CVE-2021-24509|2024-08-03T19:35:20.036Z</guid>
      <pubDate>Mon, 09 Aug 2021 10:04:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1673|2024-08-03T00:10:03.856Z -- unknown -- woocommerce%20green%20wallet%20gateway
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1673</link>
      <description>The WooCommerce Green Wallet Gateway WordPress plugin before 1.0.2 does not escape the error_envision query parameter before outputting it to the page, leading to a Reflected Cross-Site Scripting vulnerability.</description>
      <guid isPermaLink="false">CVE-2022-1673|2024-08-03T00:10:03.856Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4824|2024-08-03T01:55:44.216Z -- unknown -- wp%20blog%20and%20widgets
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4824</link>
      <description>The WP Blog and Widgets WordPress plugin before 2.3.1 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4824|2024-08-03T01:55:44.216Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24591|2024-08-03T19:35:20.273Z -- unknown -- highlight
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24591</link>
      <description>The Highlight WordPress plugin before 0.9.3 does not sanitise its CustomCSS setting, allowing high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24591|2024-08-03T19:35:20.273Z</guid>
      <pubDate>Mon, 06 Sep 2021 11:09:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4677|2024-08-03T01:48:39.574Z -- unknown -- leaflet%20maps%20marker%20%28google%20maps%2C%20openstreetmap%2C%20bing%20maps%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4677</link>
      <description>The Leaflet Maps Marker WordPress plugin before 3.12.7 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4677|2024-08-03T01:48:39.574Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24710|2024-08-03T19:42:16.503Z -- unknown -- print-o-matic
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24710</link>
      <description>The Print-O-Matic WordPress plugin before 2.0.3 does not escape some of its settings before outputting them in attribute, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24710|2024-08-03T19:42:16.503Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:35:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24366|2024-08-03T19:28:23.916Z -- unknown -- admin%20columns
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24366</link>
      <description>The Admin Columns WordPress plugin before 4.3 and Admin Columns Pro WordPress plugin before 5.5.1 do not sanitise and escape its Label settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2021-24366|2024-08-03T19:28:23.916Z</guid>
      <pubDate>Mon, 21 Jun 2021 19:18:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2377|2024-08-03T00:32:09.474Z -- unknown -- directorist%20%E2%80%93%20wordpress%20business%20directory%20plugin%20with%20classified%20ads%20listings
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2377</link>
      <description>The Directorist WordPress plugin before 7.3.0 does not have authorisation and CSRF checks in an AJAX action, allowing any authenticated users to send arbitrary emails on behalf of the blog</description>
      <guid isPermaLink="false">CVE-2022-2377|2024-08-03T00:32:09.474Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:02:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4393|2024-08-03T01:41:44.361Z -- unknown -- imagelinks%20interactive%20image%20builder%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4393</link>
      <description>The ImageLinks Interactive Image Builder for WordPress plugin through 1.5.3 does not sanitise and escape some of its settings, which could allow users such as contributor+ to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-4393|2024-08-03T01:41:44.361Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24125|2024-08-03T19:21:18.649Z -- unknown -- contact%20form%20submissions
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24125</link>
      <description>Unvalidated input in the Contact Form Submissions WordPress plugin before 1.7.1, could lead to SQL injection in the wpcf7_contact_form GET parameter when submitting a filter request as a high privilege user (admin+)</description>
      <guid isPermaLink="false">CVE-2021-24125|2024-08-03T19:21:18.649Z</guid>
      <pubDate>Thu, 18 Mar 2021 14:57:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24329|2024-08-03T19:28:23.520Z -- unknown -- wp%20super%20cache
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24329</link>
      <description>The WP Super Cache WordPress plugin before 1.7.3 did not properly sanitise its wp_cache_location parameter in its settings, which could lead to a Stored Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-24329|2024-08-03T19:28:23.520Z</guid>
      <pubDate>Tue, 01 Jun 2021 11:33:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2245|2024-08-03T00:32:09.532Z -- unknown -- counter%20box%20%E2%80%93%20wordpress%20%20plugin%20for%20countdown%2C%20timer%2C%20counter
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2245</link>
      <description>The Counter Box WordPress plugin before 1.2.1 is lacking CSRF check when activating and deactivating counters, which could allow attackers to make a logged in admin perform such actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2022-2245|2024-08-03T00:32:09.532Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:50:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24778|2024-08-03T19:42:17.197Z -- unknown -- tradetracker-store
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24778</link>
      <description>The test parameter of the xmlfeed in the Tradetracker-Store WordPress plugin before 4.6.60 is not sanitised, escaped or validated before inserting to a SQL statement, leading to SQL injection.</description>
      <guid isPermaLink="false">CVE-2021-24778|2024-08-03T19:42:17.197Z</guid>
      <pubDate>Mon, 07 Mar 2022 08:15:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4706|2024-08-03T01:48:40.372Z -- unknown -- genesis%20columns%20advanced
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4706</link>
      <description>The Genesis Columns Advanced WordPress plugin before 2.0.4 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as a contributor to perform Stored Cross-Site Scripting attacks which could be used against high-privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4706|2024-08-03T01:48:40.372Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24215|2024-08-03T19:21:18.820Z -- unknown -- controlled%20admin%20access
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24215</link>
      <description>An Improper Access Control vulnerability was discovered in the Controlled Admin Access WordPress plugin before 1.5.2. Uncontrolled access to the website customization functionality and global CMS settings, like /wp-admin/customization.php and /wp-admin/options.php, can lead to a complete compromise of the target resource.</description>
      <guid isPermaLink="false">CVE-2021-24215|2024-08-03T19:21:18.820Z</guid>
      <pubDate>Mon, 12 Apr 2021 14:00:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24492|2024-08-03T19:35:19.759Z -- unknown -- handsome%20testimonials%20%26%20reviews
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24492</link>
      <description>The hndtst_action_instance_callback AJAX call of the Handsome Testimonials &amp; Reviews WordPress plugin before 2.1.1, available to any authenticated users, does not sanitise, validate or escape the hndtst_previewShortcodeInstanceId POST parameter before using it in a SQL statement, leading to an SQL Injection issue.</description>
      <guid isPermaLink="false">CVE-2021-24492|2024-08-03T19:35:19.759Z</guid>
      <pubDate>Mon, 02 Aug 2021 10:32:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4550|2024-08-03T01:41:45.692Z -- unknown -- user%20activity
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4550</link>
      <description>The User Activity WordPress plugin through 1.0.1 checks headers such as the X-Forwarded-For to retrieve the IP address of the request, which could lead to IP spoofing</description>
      <guid isPermaLink="false">CVE-2022-4550|2024-08-03T01:41:45.692Z</guid>
      <pubDate>Mon, 27 Feb 2023 15:24:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25104|2024-08-03T19:56:10.562Z -- unknown -- ocean%20extra
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25104</link>
      <description>The Ocean Extra WordPress plugin before 1.9.5 does not escape generated links which are then used when the OceanWP is active, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-25104|2024-08-03T19:56:10.562Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:25:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24646|2024-08-03T19:35:20.368Z -- unknown -- booking.com%20banner%20creator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24646</link>
      <description>The Booking.com Banner Creator WordPress plugin before 1.4.3 does not properly sanitize inputs when creating banners, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24646|2024-08-03T19:35:20.368Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:34:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1570|2024-08-03T00:10:03.619Z -- unknown -- files%20download%20delay
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1570</link>
      <description>The Files Download Delay WordPress plugin before 1.0.7 does not have authorisation and CSRF checks when reseting its settings, which could allow any authenticated users, such as subscriber to perform such action.</description>
      <guid isPermaLink="false">CVE-2022-1570|2024-08-03T00:10:03.619Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-4226|2024-08-03T17:16:04.258Z -- unknown -- rsfirewall%21
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-4226</link>
      <description>RSFirewall tries to identify the original IP address by looking at different HTTP headers. A bypass is possible due to the way it is implemented.</description>
      <guid isPermaLink="false">CVE-2021-4226|2024-08-03T17:16:04.258Z</guid>
      <pubDate>Thu, 15 Dec 2022 17:14:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24450|2024-08-03T19:28:23.962Z -- unknown -- user%20registration%2C%20user%20profiles%2C%20login%20%26%20membership%20%E2%80%93%20profilepress%20%28formerly%20wp%20user%20avatar%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24450</link>
      <description>The User Registration, User Profiles, Login &amp; Membership – ProfilePress (Formerly WP User Avatar) WordPress plugin before 3.1.8 did not sanitise or escape some of its settings before saving them and outputting them back in the page, allowing high privilege users such as admin to set JavaScript payloads in them even when the unfiltered_html capability is disallowed, leading to an authenticated Stored Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24450|2024-08-03T19:28:23.962Z</guid>
      <pubDate>Mon, 02 Aug 2021 10:32:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24216|2024-08-03T19:21:18.671Z -- unknown -- all-in-one%20wp%20migration
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24216</link>
      <description>The All-in-One WP Migration WordPress plugin before 7.41 does not validate uploaded files' extension, which allows administrators to upload PHP files on their site, even on multisite installations.</description>
      <guid isPermaLink="false">CVE-2021-24216|2024-08-03T19:21:18.671Z</guid>
      <pubDate>Mon, 07 Mar 2022 08:15:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24772|2024-08-03T19:42:17.013Z -- unknown -- stream
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24772</link>
      <description>The Stream WordPress plugin before 3.8.2 does not sanitise and validate the order GET parameter from the Stream Records admin dashboard before using it in a SQL statement, leading to an SQL injection issue.</description>
      <guid isPermaLink="false">CVE-2021-24772|2024-08-03T19:42:17.013Z</guid>
      <pubDate>Wed, 17 Nov 2021 10:15:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24720|2024-08-03T19:42:16.664Z -- unknown -- business%20directory%20plugin%20%7C%20geodirectory
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24720</link>
      <description>The GeoDirectory Business Directory WordPress plugin before 2.1.1.3 was vulnerable to Authenticated Stored Cross-Site Scripting (XSS).</description>
      <guid isPermaLink="false">CVE-2021-24720|2024-08-03T19:42:16.664Z</guid>
      <pubDate>Mon, 11 Oct 2021 10:45:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24131|2024-08-03T19:21:18.274Z -- unknown -- anti-spam%20by%20cleantalk
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24131</link>
      <description>Unvalidated input in the Anti-Spam by CleanTalk WordPress plugin, versions before 5.149, lead to multiple authenticated SQL injection vulnerabilities, however, it requires high privilege user (admin+).</description>
      <guid isPermaLink="false">CVE-2021-24131|2024-08-03T19:21:18.274Z</guid>
      <pubDate>Thu, 18 Mar 2021 14:57:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24803|2024-08-03T19:42:17.331Z -- unknown -- core%20tweaks%20wp%20setup
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24803</link>
      <description>The Core Tweaks WP Setup WordPress plugin through 4.1 allows to bulk-set many settings in WordPress, including the admin email, as well as creating a new admin account. There is no CSRF protection in place, allowing an attacker to arbitrary change the admin email or create another admin account and takeover the website via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2021-24803|2024-08-03T19:42:17.331Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24267|2024-08-03T19:28:22.699Z -- unknown -- all-in-one%20addons%20for%20elementor%20%E2%80%93%20widgetkit
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24267</link>
      <description>The “All-in-One Addons for Elementor – WidgetKit” WordPress Plugin before 2.3.10 has several widgets that are vulnerable to stored Cross-Site Scripting (XSS) by lower-privileged users such as contributors, all via a similar method.</description>
      <guid isPermaLink="false">CVE-2021-24267|2024-08-03T19:28:22.699Z</guid>
      <pubDate>Wed, 05 May 2021 18:28:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24328|2024-08-03T19:28:23.829Z -- unknown -- wp%20login%20security%20and%20history
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24328</link>
      <description>The WP Login Security and History WordPress plugin through 1.0 did not have CSRF check when saving its settings, not any sanitisation or validation on them. This could allow attackers to make logged in administrators change the plugin's settings to arbitrary values, and set XSS payloads on them as well</description>
      <guid isPermaLink="false">CVE-2021-24328|2024-08-03T19:28:23.829Z</guid>
      <pubDate>Tue, 01 Jun 2021 11:33:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3764|2024-08-03T01:20:58.326Z -- unknown -- form%20vibes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3764</link>
      <description>The plugin does not filter the "delete_entries" parameter from user requests, leading to an SQL Injection vulnerability.</description>
      <guid isPermaLink="false">CVE-2022-3764|2024-08-03T01:20:58.326Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:50:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2448|2024-08-03T00:39:07.739Z -- unknown -- resmush.it%20%3A%20the%20only%20free%20image%20optimizer%20%26%20compress%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2448</link>
      <description>The reSmush.it WordPress plugin before 0.4.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2448|2024-08-03T00:39:07.739Z</guid>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24888|2024-08-03T19:49:13.475Z -- unknown -- imageboss%20%E2%80%93%20images%20up%20to%2060%25%20smaller%20%26%20cdn
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24888</link>
      <description>The ImageBoss WordPress plugin before 3.0.6 does not sanitise and escape its Source Name setting, which could allow high privilege users to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2021-24888|2024-08-03T19:49:13.475Z</guid>
      <pubDate>Tue, 23 Nov 2021 19:16:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4328|2024-08-03T01:34:50.063Z -- unknown -- woocommerce%20checkout%20field%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4328</link>
      <description>The WooCommerce Checkout Field Manager WordPress plugin before 18.0 does not validate files to be uploaded, which could allow unauthenticated attackers to upload arbitrary files such as PHP on the server</description>
      <guid isPermaLink="false">CVE-2022-4328|2024-08-03T01:34:50.063Z</guid>
      <pubDate>Mon, 06 Mar 2023 13:34:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25031|2024-08-03T19:49:14.592Z -- unknown -- image%20hover%20effects%20ultimate%20%28image%20gallery%2C%20effects%2C%20lightbox%2C%20comparison%20or%20magnifier%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25031</link>
      <description>The Image Hover Effects Ultimate (Image Gallery, Effects, Lightbox, Comparison or Magnifier) WordPress plugin before 9.7.1 does not escape the effects parameter before outputting it back in an attribute in an admin page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-25031|2024-08-03T19:49:14.592Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:01:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4047|2024-08-03T01:27:54.233Z -- unknown -- return%20refund%20and%20exchange%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4047</link>
      <description>The Return Refund and Exchange For WooCommerce WordPress plugin before 4.0.9 does not validate attachment files to be uploaded via an AJAX action available to unauthenticated users, which could allow them to upload arbitrary files such as PHP and lead to RCE</description>
      <guid isPermaLink="false">CVE-2022-4047|2024-08-03T01:27:54.233Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24805|2024-08-03T19:42:17.212Z -- unknown -- dw%20question%20answer%20pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24805</link>
      <description>The DW Question &amp; Answer Pro WordPress plugin through 1.3.4 does not properly check for CSRF in some of its functions, allowing attackers to make logged in users perform unwanted actions, such as update a comment or a question status.</description>
      <guid isPermaLink="false">CVE-2021-24805|2024-08-03T19:42:17.212Z</guid>
      <pubDate>Mon, 25 Apr 2022 15:50:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24780|2024-08-03T19:42:17.177Z -- unknown -- single%20post%20exporter
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24780</link>
      <description>The Single Post Exporter WordPress plugin through 1.1.1 does not have CSRF checks when saving its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and give access to the export feature to any role such as subscriber. Subscriber users would then be able to export an arbitrary post/page (such as private and password protected) via a direct URL</description>
      <guid isPermaLink="false">CVE-2021-24780|2024-08-03T19:42:17.177Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:40:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4750|2024-08-03T01:48:40.492Z -- unknown -- wp%20responsive%20testimonials%20slider%20and%20widget
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4750</link>
      <description>The WP Responsive Testimonials Slider And Widget WordPress plugin through 1.5 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4750|2024-08-03T01:48:40.492Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24649|2024-08-03T19:35:20.359Z -- unknown -- wp%20user%20frontend
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24649</link>
      <description>The WP User Frontend WordPress plugin before 3.5.29 uses a user supplied argument called urhidden in its registration form, which contains the role for the account to be created with, encrypted via wpuf_encryption(). This could allow an attacker having access to the AUTH_KEY and AUTH_SALT constant (via an arbitrary file access issue for example, or if the blog is using the default keys) to create an account with any role they want, such as admin</description>
      <guid isPermaLink="false">CVE-2021-24649|2024-08-03T19:35:20.359Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3249|2024-08-03T01:07:05.559Z -- unknown -- wp%20csv%20exporter
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3249</link>
      <description>The WP CSV Exporter WordPress plugin before 1.3.7 does not properly sanitise and escape some parameters before using them in a SQL statement, allowing high privilege users such as admin to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2022-3249|2024-08-03T01:07:05.559Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4059|2024-08-03T01:27:54.184Z -- unknown -- cryptocurrency%20widgets%20pack
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4059</link>
      <description>The Cryptocurrency Widgets Pack WordPress plugin before 2.0 does not sanitise and escape some parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection.</description>
      <guid isPermaLink="false">CVE-2022-4059|2024-08-03T01:27:54.184Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24700|2024-08-03T19:42:16.968Z -- unknown -- forminator%20%E2%80%93%20contact%20form%2C%20payment%20form%20%26%20custom%20form%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24700</link>
      <description>The Forminator WordPress plugin before 1.15.4 does not sanitize and escape the email field label, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24700|2024-08-03T19:42:16.968Z</guid>
      <pubDate>Tue, 23 Nov 2021 19:16:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2657|2024-08-03T00:46:03.260Z -- unknown -- multivendor%20marketplace%20solution%20for%20woocommerce%20%E2%80%93%20wc%20marketplace
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2657</link>
      <description>The Multivendor Marketplace Solution for WooCommerce WordPress plugin before 3.8.12 is lacking authorisation and CSRF in multiple AJAX actions, which could allow any authenticated users, such as subscriber to call them and suspend vendors (reporter by the submitter) or update arbitrary order status (identified by WPScan when verifying the issue) for example. Other unauthenticated attacks are also possible, either directly or via CSRF</description>
      <guid isPermaLink="false">CVE-2022-2657|2024-08-03T00:46:03.260Z</guid>
      <pubDate>Mon, 05 Sep 2022 12:35:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24476|2024-08-03T19:35:19.539Z -- unknown -- steam%20group%20viewer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24476</link>
      <description>The Steam Group Viewer WordPress plugin through 2.1 does not sanitise or escape its "Steam Group Address" settings before outputting it in the page, leading to an authenticated Stored Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24476|2024-08-03T19:35:19.539Z</guid>
      <pubDate>Mon, 02 Aug 2021 10:32:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24473|2024-08-03T19:35:19.539Z -- unknown -- user%20profile%20picture
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24473</link>
      <description>The User Profile Picture WordPress plugin before 2.6.0 was affected by an IDOR issue, allowing users with the upload_image capability (by default author and above) to change and delete the profile pictures of other users (including those with higher roles).</description>
      <guid isPermaLink="false">CVE-2021-24473|2024-08-03T19:35:19.539Z</guid>
      <pubDate>Mon, 02 Aug 2021 10:32:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2840|2024-08-03T00:52:59.448Z -- unknown -- zephyr%20project%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2840</link>
      <description>The Zephyr Project Manager WordPress plugin before 3.2.5 does not sanitise and escape various parameters before using them in SQL statements via various AJAX actions available to both unauthenticated and authenticated users, leading to SQL injections</description>
      <guid isPermaLink="false">CVE-2022-2840|2024-08-03T00:52:59.448Z</guid>
      <pubDate>Mon, 19 Sep 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3908|2024-08-03T01:20:58.795Z -- unknown -- plug%20your%20woocommerce%20into%20the%20largest%20catalog%20of%20customized%20print%20products%20from%20helloprint
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3908</link>
      <description>The Helloprint WordPress plugin before 1.4.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-3908|2024-08-03T01:20:58.795Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3881|2024-08-03T01:20:58.659Z -- unknown -- wp%20tools%20increase%20maximum%20limits%2C%20repair%2C%20server%20php%20info%2C%20javascript%20errors%2C%20file%20permissions%2C%20transients%2C%20error%20log
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3881</link>
      <description>The WP Tools Increase Maximum Limits, Repair, Server PHP Info, Javascript errors, File Permissions, Transients, Error Log WordPress plugin before 3.43 does not have proper authorisation and CSRF in an AJAX action, allowing any authenticated users, such as subscriber to call it and install and activate arbitrary plugins from wordpress.org</description>
      <guid isPermaLink="false">CVE-2022-3881|2024-08-03T01:20:58.659Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-4335|2024-08-03T17:23:10.681Z -- unknown -- fancy%20product%20designer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-4335</link>
      <description>The Fancy Product Designer plugin for WordPress is vulnerable to unauthorized access to data and modification of plugin settings due to a missing capability check on multiple AJAX functions in versions up to, and including, 4.6.9. This makes it possible for authenticated attackers with subscriber-level permissions to modify plugin settings, including retrieving arbitrary order information or creating/updating/deleting products, orders, or other sensitive information not associated with their own account.</description>
      <guid isPermaLink="false">CVE-2021-4335|2024-08-03T17:23:10.681Z</guid>
      <pubDate>Fri, 20 Oct 2023 06:35:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24570|2024-08-03T19:35:20.193Z -- unknown -- accept%20donations%20with%20paypal
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24570</link>
      <description>The Accept Donations with PayPal WordPress plugin before 1.3.1 offers a function to create donation buttons, which internally are posts. The process to create a new button is lacking a CSRF check. An attacker could use this to make an authenticated admin create a new button. Furthermore, one of the Button field is not escaped before being output in an attribute when editing a Button, leading to a Stored Cross-Site Scripting issue as well.</description>
      <guid isPermaLink="false">CVE-2021-24570|2024-08-03T19:35:20.193Z</guid>
      <pubDate>Mon, 01 Nov 2021 08:46:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24553|2024-08-03T19:35:20.133Z -- unknown -- timeline%20calendar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24553</link>
      <description>The Timeline Calendar WordPress plugin through 1.2 does not sanitise, validate or escape the edit GET parameter before using it in a SQL statement when editing events, leading to an authenticated SQL injection issue. Other SQL Injections are also present in the plugin</description>
      <guid isPermaLink="false">CVE-2021-24553|2024-08-03T19:35:20.133Z</guid>
      <pubDate>Mon, 23 Aug 2021 11:10:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4394|2024-08-03T01:41:44.467Z -- unknown -- ipages%20flipbook%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4394</link>
      <description>The iPages Flipbook For WordPress plugin through 1.4.6 does not sanitise and escape some of its settings, which could allow users such as contributor+ to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-4394|2024-08-03T01:41:44.467Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24425|2024-08-03T19:28:23.900Z -- unknown -- floating%20notification%20bar%2C%20sticky%20menu%20on%20scroll%2C%20and%20sticky%20header%20for%20any%20theme%20%E2%80%93%20mystickymenu
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24425</link>
      <description>The Floating Notification Bar, Sticky Menu on Scroll, and Sticky Header for Any Theme – myStickymenu WordPress plugin before 2.5.2 does not sanitise or escape its Bar Text settings, allowing hight privilege users to use malicious JavaScript in it, leading to a Stored Cross-Site Scripting issue, which will be triggered in the plugin's setting, as well as all front-page of the blog (when the Welcome bar is active)</description>
      <guid isPermaLink="false">CVE-2021-24425|2024-08-03T19:28:23.900Z</guid>
      <pubDate>Mon, 02 Aug 2021 10:31:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24848|2024-08-03T19:42:17.251Z -- unknown -- mediamatic%20%E2%80%93%20media%20library%20folders
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24848</link>
      <description>The mediamaticAjaxRenameCategory AJAX action of the Mediamatic WordPress plugin before 2.8.1, available to any authenticated user, does not sanitise the categoryID parameter before using it in a SQL statement, leading to an SQL injection</description>
      <guid isPermaLink="false">CVE-2021-24848|2024-08-03T19:42:17.251Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:41:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24487|2024-08-03T19:35:20.144Z -- unknown -- st-daily-tip
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24487</link>
      <description>The St-Daily-Tip WordPress plugin through 4.7 does not have any CSRF check in place when saving its 'Default Text to Display if no tips' setting, and was also lacking sanitisation as well as escaping before outputting it the page. This could allow attacker to make logged in administrators set a malicious payload in it, leading to a Stored Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24487|2024-08-03T19:35:20.144Z</guid>
      <pubDate>Mon, 25 Oct 2021 13:20:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3833|2024-08-03T01:20:58.600Z -- unknown -- fancier%20author%20box%20by%20thematosoup
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3833</link>
      <description>The Fancier Author Box by ThematoSoup WordPress plugin through 1.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3833|2024-08-03T01:20:58.600Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25022|2024-08-03T19:49:14.585Z -- unknown -- updraftplus%20wordpress%20backup%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25022</link>
      <description>The UpdraftPlus WordPress Backup Plugin WordPress plugin before 1.16.66 does not sanitise and escape the backup_timestamp and job_id parameter before outputting then back in admin pages, leading to Reflected Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-25022|2024-08-03T19:49:14.585Z</guid>
      <pubDate>Mon, 03 Jan 2022 12:49:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4508|2024-08-03T01:41:45.515Z -- unknown -- convertkit
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4508</link>
      <description>The ConvertKit WordPress plugin before 2.0.5 does not validate and escapes some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as a contributor to perform Stored Cross-Site Scripting attacks, which could be used against high-privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4508|2024-08-03T01:41:45.515Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2374|2024-08-03T00:32:09.669Z -- unknown -- simply%20schedule%20appointments%20%E2%80%93%20wordpress%20booking%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2374</link>
      <description>The Simply Schedule Appointments WordPress plugin before 1.5.7.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2374|2024-08-03T00:32:09.669Z</guid>
      <pubDate>Mon, 29 Aug 2022 17:15:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24945|2024-08-03T19:49:14.290Z -- unknown -- like%20button%20rating%20%E2%99%A5%20likebtn
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24945</link>
      <description>The Like Button Rating ♥ LikeBtn WordPress plugin before 2.6.38 does not have any authorisation and CSRF checks in the likebtn_export_votes AJAX action, which could allow any authenticated user, such as subscriber, to get a list of email and IP addresses of people who liked content from the blog.</description>
      <guid isPermaLink="false">CVE-2021-24945|2024-08-03T19:49:14.290Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:41:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24377|2024-08-03T19:28:23.923Z -- unknown -- autoptimize
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24377</link>
      <description>The Autoptimize WordPress plugin before 2.7.8 attempts to remove potential malicious files from the extracted archive uploaded via the 'Import Settings' feature, however this is not sufficient to protect against RCE as a race condition can be achieved in between the moment the file is extracted on the disk but not yet removed. It is a bypass of CVE-2020-24948.</description>
      <guid isPermaLink="false">CVE-2021-24377|2024-08-03T19:28:23.923Z</guid>
      <pubDate>Mon, 21 Jun 2021 19:18:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24936|2024-08-03T19:49:13.407Z -- unknown -- wp%20extra%20file%20types
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24936</link>
      <description>The WP Extra File Types WordPress plugin before 0.5.1 does not have CSRF check when saving its settings, nor sanitise and escape some of them, which could allow attackers to make a logged in admin change them and perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2021-24936|2024-08-03T19:49:13.407Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:00:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24602|2024-08-03T19:35:20.273Z -- unknown -- hm%20multiple%20roles
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24602</link>
      <description>The HM Multiple Roles WordPress plugin before 1.3 does not have any access control to prevent low privilege users to set themselves as admin via their profile page</description>
      <guid isPermaLink="false">CVE-2021-24602|2024-08-03T19:35:20.273Z</guid>
      <pubDate>Mon, 23 Aug 2021 11:10:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1579|2024-08-03T00:10:03.558Z -- unknown -- login%20block%20ips
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1579</link>
      <description>The function check_is_login_page() uses headers for the IP check, which can be easily spoofed.</description>
      <guid isPermaLink="false">CVE-2022-1579|2024-08-03T00:10:03.558Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25003|2024-08-03T19:49:14.534Z -- unknown -- wpcargo%20track%20%26%20trace
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25003</link>
      <description>The WPCargo Track &amp; Trace WordPress plugin before 6.9.0 contains a file which could allow unauthenticated attackers to write a PHP file anywhere on the web server, leading to RCE</description>
      <guid isPermaLink="false">CVE-2021-25003|2024-08-03T19:49:14.534Z</guid>
      <pubDate>Mon, 14 Mar 2022 14:41:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24465|2024-08-03T19:35:20.058Z -- unknown -- meow%20gallery%20%28%2B%20gallery%20block%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24465</link>
      <description>The Meow Gallery WordPress plugin before 4.1.9 does not sanitise, validate or escape the ids attribute of its gallery shortcode (available for users as low as Contributor) before using it in an SQL statement, leading to an authenticated SQL Injection issue. The injection also allows the returned values to be manipulated in a way that could lead to data disclosure and arbitrary objects to be deserialized.</description>
      <guid isPermaLink="false">CVE-2021-24465|2024-08-03T19:35:20.058Z</guid>
      <pubDate>Mon, 04 Oct 2021 11:20:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4628|2024-08-03T01:48:39.056Z -- unknown -- easy%20paypal%20buy%20now%20button
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4628</link>
      <description>The Easy PayPal Buy Now Button WordPress plugin before 1.7.4 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4628|2024-08-03T01:48:39.056Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1582|2024-08-03T00:10:03.636Z -- unknown -- external%20links%20in%20new%20window%20%2F%20new%20tab
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1582</link>
      <description>The External Links in New Window / New Tab WordPress plugin before 1.43 does not properly escape URLs it concatenates to onclick event handlers, which makes Stored Cross-Site Scripting attacks possible.</description>
      <guid isPermaLink="false">CVE-2022-1582|2024-08-03T00:10:03.636Z</guid>
      <pubDate>Mon, 30 May 2022 08:36:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24906|2024-08-03T19:49:14.366Z -- unknown -- protect%20wp%20admin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24906</link>
      <description>The Protect WP Admin WordPress plugin before 3.6.2 does not check for authorisation in the lib/pwa-deactivate.php file, which could allow unauthenticated users to disable the plugin (and therefore the protection offered) via a crafted request</description>
      <guid isPermaLink="false">CVE-2021-24906|2024-08-03T19:49:14.366Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:00:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4654|2024-08-03T01:48:39.735Z -- unknown -- pricing%20tables%20wordpress%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4654</link>
      <description>The Pricing Tables WordPress Plugin WordPress plugin before 3.2.3 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4654|2024-08-03T01:48:39.735Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24358|2024-08-03T19:28:23.441Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24358</link>
      <description>The Plus Addons for Elementor Page Builder WordPress plugin before 4.1.10 did not validate a redirect parameter on a specifically crafted URL before redirecting the user to it, leading to an Open Redirect issue.</description>
      <guid isPermaLink="false">CVE-2021-24358|2024-08-03T19:28:23.441Z</guid>
      <pubDate>Mon, 14 Jun 2021 13:37:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24962|2024-08-03T19:49:14.540Z -- unknown -- wordpress%20file%20upload
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24962</link>
      <description>The WordPress File Upload Free and Pro WordPress plugins before 4.16.3 allow users with a role as low as Contributor to perform path traversal via a shortcode argument, which can then be used to upload a PHP code disguised as an image inside the auto-loaded directory of the plugin, resulting in arbitrary code execution.</description>
      <guid isPermaLink="false">CVE-2021-24962|2024-08-03T19:49:14.540Z</guid>
      <pubDate>Mon, 28 Mar 2022 17:21:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25051|2024-08-03T19:49:14.554Z -- unknown -- modal%20window%20%E2%80%93%20create%20popup%20modal%20window
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25051</link>
      <description>The Modal Window WordPress plugin before 5.2.2 within the wow-company admin menu page allows to include() arbitrary file with PHP extension (as well as with data:// or http:// protocols), thus leading to CSRF RCE.</description>
      <guid isPermaLink="false">CVE-2021-25051|2024-08-03T19:49:14.554Z</guid>
      <pubDate>Mon, 10 Jan 2022 15:30:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24635|2024-08-03T19:35:20.300Z -- unknown -- visual%20link%20preview
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24635</link>
      <description>The Visual Link Preview WordPress plugin before 2.2.3 does not enforce authorisation on several AJAX actions and has the CSRF nonce displayed for all authenticated users, allowing any authenticated user (such as subscriber) to call them and 1) Get and search through title and content of Draft post, 2) Get title of a password-protected post as well as 3) Upload an image from an URL</description>
      <guid isPermaLink="false">CVE-2021-24635|2024-08-03T19:35:20.300Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4477|2024-08-03T01:41:44.829Z -- unknown -- smash%20balloon%20social%20post%20feed
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4477</link>
      <description>The Smash Balloon Social Post Feed WordPress plugin before 4.1.6 does not validate and escapes some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as a contributor to perform Stored Cross-Site Scripting attacks against logged-in admins.</description>
      <guid isPermaLink="false">CVE-2022-4477|2024-08-03T01:41:44.829Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25077|2024-08-03T19:56:10.226Z -- unknown -- store%20toolkit%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25077</link>
      <description>The Store Toolkit for WooCommerce WordPress plugin before 2.3.2 does not sanitise and escape the tab parameter before outputting it back in an admin page in an error message, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-25077|2024-08-03T19:56:10.226Z</guid>
      <pubDate>Mon, 07 Feb 2022 15:47:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1885|2024-08-03T00:17:00.942Z -- unknown -- cimy%20header%20image%20rotator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1885</link>
      <description>The Cimy Header Image Rotator WordPress plugin through 6.1.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1885|2024-08-03T00:17:00.942Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:58:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1932|2024-08-03T00:17:00.977Z -- unknown -- rezgo%20online%20booking
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1932</link>
      <description>The Rezgo Online Booking WordPress plugin before 4.1.8 does not sanitise and escape some parameters before outputting them back in a page, leading to a Reflected Cross-Site Scripting, which can be exploited either via a LFI in an AJAX action, or direct call to the affected file</description>
      <guid isPermaLink="false">CVE-2022-1932|2024-08-03T00:17:00.977Z</guid>
      <pubDate>Mon, 22 Aug 2022 14:58:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24205|2024-08-03T19:21:18.691Z -- unknown -- elementor%20website%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24205</link>
      <description>In the Elementor Website Builder WordPress plugin before 3.1.4, the icon box widget (includes/widgets/icon-box.php) accepts a ‘title_size’ parameter. Although the element control lists a fixed set of possible html tags, it is possible for a user with Contributor or above permissions to send a modified ‘save_builder’ request containing JavaScript in the ‘title_size’ parameter, which is not filtered and is output without escaping. This JavaScript will then be executed when the saved page is viewed or previewed.</description>
      <guid isPermaLink="false">CVE-2021-24205|2024-08-03T19:21:18.691Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24995|2024-08-03T19:49:14.586Z -- unknown -- html5%20responsive%20faq
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24995</link>
      <description>The HTML5 Responsive FAQ WordPress plugin through 2.8.5 does not properly sanitise and escape some of its settings, which could allow a high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24995|2024-08-03T19:49:14.586Z</guid>
      <pubDate>Mon, 14 Mar 2022 14:41:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25107|2024-08-03T19:56:10.990Z -- unknown -- form%20store%20to%20db
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25107</link>
      <description>The Form Store to DB WordPress plugin before 1.1.1 does not sanitise and escape parameter keys before outputting it back in the created entry, allowing unauthenticated attacker to perform Cross-Site Scripting attacks against admin</description>
      <guid isPermaLink="false">CVE-2021-25107|2024-08-03T19:56:10.990Z</guid>
      <pubDate>Mon, 14 Feb 2022 09:20:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24706|2024-08-03T19:42:16.193Z -- unknown -- qwizcards%20%E2%80%93%20online%20quizzes%20and%20flashcards
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24706</link>
      <description>The Qwizcards – online quizzes and flashcards WordPress plugin before 3.62 does not properly sanitize and escape some of its settings, allowing high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24706|2024-08-03T19:42:16.193Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:35:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25088|2024-08-03T19:56:09.909Z -- unknown -- xml%20sitemaps
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25088</link>
      <description>The XML Sitemaps WordPress plugin before 4.1.3 does not sanitise and escape a settings before outputting it in the Debug page, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2021-25088|2024-08-03T19:56:09.909Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:25:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4004|2024-08-03T01:27:54.056Z -- unknown -- donation%20button
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4004</link>
      <description>The Donation Button WordPress plugin through 4.0.0 does not properly check for privileges and nonce tokens in its "donation_button_twilio_send_test_sms" AJAX action, which may allow any users with an account on the affected site, like subscribers, to use the plugin's Twilio integration to send SMSes to arbitrary phone numbers.</description>
      <guid isPermaLink="false">CVE-2022-4004|2024-08-03T01:27:54.056Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24997|2024-08-03T19:49:14.595Z -- unknown -- wp%20guppy
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24997</link>
      <description>The WP Guppy WordPress plugin before 1.3 does not have any authorisation in some of the REST API endpoints, allowing any user to call them and could lead to sensitive information disclosure, such as usernames and chats between users, as well as be able to send messages as an arbitrary user</description>
      <guid isPermaLink="false">CVE-2021-24997|2024-08-03T19:49:14.595Z</guid>
      <pubDate>Mon, 27 Dec 2021 10:33:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4715|2024-08-03T01:48:39.613Z -- unknown -- structured%20content%20%28json-ld%29%20%23wpsc
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4715</link>
      <description>The Structured Content WordPress plugin before 1.5.1 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4715|2024-08-03T01:48:39.613Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2535|2024-08-03T00:39:08.017Z -- unknown -- searchwp%20live%20ajax%20search
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2535</link>
      <description>The SearchWP Live Ajax Search WordPress plugin before 1.6.2 does not ensure that users making a live search are limited to published posts only, allowing unauthenticated users to make a crafted query disclosing private/draft/pending post titles along with their permalink</description>
      <guid isPermaLink="false">CVE-2022-2535|2024-08-03T00:39:08.017Z</guid>
      <pubDate>Mon, 15 Aug 2022 08:38:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4042|2024-08-03T01:27:54.086Z -- unknown -- paytium%3A%20mollie%20payment%20forms%20%26%20donations
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4042</link>
      <description>The Paytium: Mollie payment forms &amp; donations WordPress plugin before 4.3.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4042|2024-08-03T01:27:54.086Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:27:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4473|2024-08-03T01:41:44.733Z -- unknown -- widget%20shortcode
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4473</link>
      <description>The Widget Shortcode WordPress plugin through 0.3.5 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4473|2024-08-03T01:41:44.733Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:31:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4310|2024-08-03T01:34:50.117Z -- unknown -- slimstat%20analytics
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4310</link>
      <description>The Slimstat Analytics WordPress plugin before 4.9.3 does not sanitise and escape the URI when logging requests, which could allow unauthenticated attackers to perform Stored Cross-Site Scripting attacks against logged in admin viewing the logs</description>
      <guid isPermaLink="false">CVE-2022-4310|2024-08-03T01:34:50.117Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25086|2024-08-03T19:56:09.909Z -- unknown -- advanced%20page%20visit%20counter%20%E2%80%93%20advanced%20wordpress%20visit%20counter
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25086</link>
      <description>The Advanced Page Visit Counter WordPress plugin before 6.1.2 does not sanitise and escape some input before outputting it in an admin dashboard page, allowing unauthenticated attackers to perform Cross-Site Scripting attacks against admins viewing it</description>
      <guid isPermaLink="false">CVE-2021-25086|2024-08-03T19:56:09.909Z</guid>
      <pubDate>Mon, 02 May 2022 16:05:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24768|2024-08-03T19:42:17.221Z -- unknown -- wp%20rss%20aggregator%20%E2%80%93%20news%20feeds%2C%20autoblogging%2C%20youtube%20video%20feeds%20and%20more
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24768</link>
      <description>The WP RSS Aggregator WordPress plugin before 4.19.2 does not properly sanitise and escape the URL to Blacklist field, allowing malicious HTML to be inserted by high privilege users even when the unfiltered_html capability is disallowed, which could lead to Cross-Site Scripting issues.</description>
      <guid isPermaLink="false">CVE-2021-24768|2024-08-03T19:42:17.221Z</guid>
      <pubDate>Mon, 29 Nov 2021 08:25:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24514|2024-08-03T19:35:19.892Z -- unknown -- visual%20form%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24514</link>
      <description>The Visual Form Builder WordPress plugin before 3.0.4 does not sanitise or escape its Form Name, allowing high privilege users such as admin to set Cross-Site Scripting payload in them, even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24514|2024-08-03T19:35:19.892Z</guid>
      <pubDate>Mon, 25 Oct 2021 13:20:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4267|2024-08-03T01:34:50.000Z -- unknown -- bulk%20delete%20users%20by%20email
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4267</link>
      <description>The Bulk Delete Users by Email WordPress plugin through 1.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-4267|2024-08-03T01:34:50.000Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24757|2024-08-03T19:42:16.595Z -- unknown -- stylish%20price%20list
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24757</link>
      <description>The Stylish Price List WordPress plugin before 6.9.0 does not perform capability checks in its spl_upload_ser_img AJAX action (available to both unauthenticated and authenticated users), which could allow unauthenticated users to upload images.</description>
      <guid isPermaLink="false">CVE-2021-24757|2024-08-03T19:42:16.595Z</guid>
      <pubDate>Mon, 01 Nov 2021 08:46:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24779|2024-08-03T19:42:17.194Z -- unknown -- wp%20debugging
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24779</link>
      <description>The WP Debugging WordPress plugin before 2.11.0 has its update_settings() function hooked to admin_init and is missing any authorisation and CSRF checks, as a result, the settings can be updated by unauthenticated users.</description>
      <guid isPermaLink="false">CVE-2021-24779|2024-08-03T19:42:17.194Z</guid>
      <pubDate>Mon, 25 Oct 2021 13:20:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4791|2024-08-03T01:48:40.418Z -- unknown -- product%20slider%20and%20carousel%20with%20category%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4791</link>
      <description>The Product Slider and Carousel with Category for WooCommerce WordPress plugin before 2.8 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4791|2024-08-03T01:48:40.418Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24821|2024-08-03T19:42:17.192Z -- unknown -- cost%20calculator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24821</link>
      <description>The Cost Calculator WordPress plugin before 1.6 allows users with a role as low as Contributor to perform Stored Cross-Site Scripting attacks via the Description fields of a Cost Calculator &gt; Price Settings (which gets injected on the edit page as well as any page that embeds the calculator using the shortcode), as well as the Text Preview field of a Project (injected on the edit project page)</description>
      <guid isPermaLink="false">CVE-2021-24821|2024-08-03T19:42:17.192Z</guid>
      <pubDate>Mon, 07 Mar 2022 08:16:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24505|2024-08-03T19:35:19.880Z -- unknown -- forms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24505</link>
      <description>The Forms WordPress plugin before 1.12.3 did not sanitise its input fields, leading to Stored Cross-Site scripting issues. The plugin was vulnerable to an Authenticated Stored Cross-Site Scripting (XSS) vulnerability within the Forms "Add new" field.</description>
      <guid isPermaLink="false">CVE-2021-24505|2024-08-03T19:35:19.880Z</guid>
      <pubDate>Mon, 09 Aug 2021 10:04:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24155|2024-08-03T19:21:18.269Z -- unknown -- wordpress%20backup%20and%20migrate%20plugin%20%E2%80%93%20backup%20guard
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24155</link>
      <description>The WordPress Backup and Migrate Plugin – Backup Guard WordPress plugin before 1.6.0 did not ensure that the imported files are of the SGBP format and extension, allowing high privilege users (admin+) to upload arbitrary files, including PHP ones, leading to RCE.</description>
      <guid isPermaLink="false">CVE-2021-24155|2024-08-03T19:21:18.269Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24902|2024-08-03T19:49:13.867Z -- unknown -- typebot%20%7C%20build%20beautiful%20conversational%20forms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24902</link>
      <description>The Typebot | Build beautiful conversational forms WordPress plugin before 1.4.3 does not sanitise and escape the Publish ID setting, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24902|2024-08-03T19:49:13.867Z</guid>
      <pubDate>Mon, 27 Dec 2021 10:33:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2839|2024-08-03T00:52:59.468Z -- unknown -- zephyr%20project%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2839</link>
      <description>The Zephyr Project Manager WordPress plugin before 3.2.55 does not have any authorisation as well as CSRF in all its AJAX actions, allowing unauthenticated users to call them either directly or via CSRF attacks. Furthermore, due to the lack of sanitisation and escaping, it could also allow them to perform Stored Cross-Site Scripting attacks against logged in admins.</description>
      <guid isPermaLink="false">CVE-2022-2839|2024-08-03T00:52:59.468Z</guid>
      <pubDate>Mon, 03 Oct 2022 13:45:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24332|2024-08-03T19:28:23.474Z -- unknown -- autoptimize
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24332</link>
      <description>The Autoptimize WordPress plugin before 2.8.4 was missing proper escaping and sanitisation in some of its settings, allowing high privilege users to set XSS payloads in them, leading to stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-24332|2024-08-03T19:28:23.474Z</guid>
      <pubDate>Mon, 24 May 2021 10:58:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3846|2024-08-03T01:20:58.635Z -- unknown -- workreap
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3846</link>
      <description>The Workreap WordPress theme before 2.6.3 has a vulnerability with the notifications feature as it's possible to read any user's notification (employer or freelancer) as the notification ID is brute-forceable.</description>
      <guid isPermaLink="false">CVE-2022-3846|2024-08-03T01:20:58.635Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:51:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4679|2024-08-03T01:48:39.517Z -- unknown -- wufoo%20shortcode
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4679</link>
      <description>The Wufoo Shortcode WordPress plugin before 1.52 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4679|2024-08-03T01:48:39.517Z</guid>
      <pubDate>Mon, 27 Feb 2023 15:24:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2170|2024-08-03T00:32:08.642Z -- unknown -- microsoft%20advertising%20universal%20event%20tracking%20%28uet%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2170</link>
      <description>The Microsoft Advertising Universal Event Tracking (UET) WordPress plugin before 1.0.4 does not sanitise and escape its settings, allowing high privilege users such as admin to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed. Due to the nature of this plugin, well crafted XSS can also leak into the frontpage.</description>
      <guid isPermaLink="false">CVE-2022-2170|2024-08-03T00:32:08.642Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:49:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3418|2024-08-03T01:07:06.584Z -- unknown -- import%20any%20xml%20or%20csv%20file%20to%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3418</link>
      <description>The Import any XML or CSV File to WordPress plugin before 3.6.9 is not properly filtering which file extensions are allowed to be imported on the server, which could allow administrators in multi-site WordPress installations to upload arbitrary files</description>
      <guid isPermaLink="false">CVE-2022-3418|2024-08-03T01:07:06.584Z</guid>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25046|2024-08-03T19:49:14.633Z -- unknown -- modern%20events%20calendar%20lite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25046</link>
      <description>The Modern Events Calendar Lite WordPress plugin before 6.2.0 alloed any logged-in user, even a subscriber user, may add a category whose parameters are incorrectly escaped in the admin panel, leading to stored XSS.</description>
      <guid isPermaLink="false">CVE-2021-25046|2024-08-03T19:49:14.633Z</guid>
      <pubDate>Mon, 17 Jan 2022 13:00:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24411|2024-08-03T19:28:23.811Z -- unknown -- social%20tape
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24411</link>
      <description>The Social Tape WordPress plugin through 1.0 does not have CSRF checks in place when saving its settings, and do not sanitise or escape them before outputting them back in the page, leading to a stored Cross-Site Scripting issue via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2021-24411|2024-08-03T19:28:23.811Z</guid>
      <pubDate>Mon, 16 Aug 2021 10:48:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2116|2024-08-03T00:24:44.325Z -- unknown -- contact%20form%20db%20%E2%80%93%20elementor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2116</link>
      <description>The Contact Form DB WordPress plugin before 1.8.0 does not sanitise and escape some parameters before outputting them back in attributes, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2116|2024-08-03T00:24:44.325Z</guid>
      <pubDate>Mon, 15 Aug 2022 08:35:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2629|2024-08-03T00:46:03.313Z -- unknown -- top%20bar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2629</link>
      <description>The Top Bar WordPress plugin before 3.0.4 does not sanitise and escape some of its settings before outputting them in frontend pages, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2629|2024-08-03T00:46:03.313Z</guid>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1793|2024-08-03T00:16:59.915Z -- unknown -- private%20files
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1793</link>
      <description>The Private Files WordPress plugin through 0.40 is missing CSRF check when disabling the protection, which could allow attackers to make a logged in admin perform such action via a CSRF attack and make the blog public</description>
      <guid isPermaLink="false">CVE-2022-1793|2024-08-03T00:16:59.915Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:43:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3892|2024-08-03T01:20:58.441Z -- unknown -- wp%20oauth%20server%20%28oauth%20authentication%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3892</link>
      <description>The WP OAuth Server (OAuth Authentication) WordPress plugin before 4.2.2 does not sanitize and escape Client IDs, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3892|2024-08-03T01:20:58.441Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24704|2024-08-03T19:42:16.206Z -- unknown -- orange%20form
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24704</link>
      <description>In the Orange Form WordPress plugin through 1.0, the process_bulk_action() function in "admin/orange-form-email.php" performs an unprepared SQL query with an unsanitized parameter ($id). Only admin can access the page that invokes the function, but because of lack of CSRF protection, it is actually exploitable and could allow attackers to make a logged in admin delete arbitrary posts for example</description>
      <guid isPermaLink="false">CVE-2021-24704|2024-08-03T19:42:16.206Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3840|2024-08-03T01:20:58.778Z -- unknown -- login%20for%20google%20apps
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3840</link>
      <description>The Login for Google Apps WordPress plugin before 3.4.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3840|2024-08-03T01:20:58.778Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4756|2024-08-03T01:48:40.088Z -- unknown -- my%20youtube%20channel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4756</link>
      <description>The My YouTube Channel WordPress plugin before 3.23.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4756|2024-08-03T01:48:40.088Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24434|2024-08-03T19:28:23.978Z -- unknown -- glass
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24434</link>
      <description>The Glass WordPress plugin through 1.3.2 does not sanitise or escape its "Glass Pages" setting before outputting in a page, leading to a Stored Cross-Site Scripting issue. Furthermore, the plugin did not have CSRF check in place when saving its settings, allowing the issue to be exploited via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2021-24434|2024-08-03T19:28:23.978Z</guid>
      <pubDate>Mon, 12 Jul 2021 19:21:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24661|2024-08-03T19:42:16.109Z -- unknown -- postx%20%E2%80%93%20gutenberg%20blocks%20for%20post%20grid
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24661</link>
      <description>The PostX – Gutenberg Blocks for Post Grid WordPress plugin before 2.4.10, with Saved Templates Addon enabled, allows users with Contributor roles or higher to read password-protected or private post contents the user is otherwise unable to read, given the post ID.</description>
      <guid isPermaLink="false">CVE-2021-24661|2024-08-03T19:42:16.109Z</guid>
      <pubDate>Mon, 27 Sep 2021 15:25:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1760|2024-08-03T00:16:59.995Z -- unknown -- core%20control
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1760</link>
      <description>The Core Control WordPress plugin through 1.2.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1760|2024-08-03T00:16:59.995Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:52:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24992|2024-08-03T19:49:14.555Z -- unknown -- smart%20floating%20%2F%20sticky%20buttons%20%E2%80%93%20call%2C%20sharing%2C%20chat%20widgets%20%26%20more%20%E2%80%93%20buttonizer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24992</link>
      <description>The Smart Floating / Sticky Buttons WordPress plugin before 2.5.5 does not sanitise and escape some parameter before outputting them in attributes and page, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24992|2024-08-03T19:49:14.555Z</guid>
      <pubDate>Mon, 27 Dec 2021 10:33:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25038|2024-08-03T19:49:14.542Z -- unknown -- wordpress%20multisite%20user%20sync%2Funsync
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25038</link>
      <description>The WordPress Multisite User Sync/Unsync WordPress plugin before 2.1.2 does not sanitise and escape the wmus_source_blog and wmus_record_per_page parameters before outputting them back in attributes, leading to Reflected Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-25038|2024-08-03T19:49:14.542Z</guid>
      <pubDate>Mon, 07 Mar 2022 08:16:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25103|2024-08-03T19:56:10.614Z -- unknown -- translate%20wordpress%20with%20gtranslate
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25103</link>
      <description>The Translate WordPress with GTranslate WordPress plugin before 2.9.7 does not sanitise and escape the body parameter in the url_addon/gtranslate-email.php file before outputting it back in the page, leading to a Reflected Cross-Site Scripting issue. Note: exploitation of the issue requires knowledge of the NONCE_SALT and NONCE_KEY</description>
      <guid isPermaLink="false">CVE-2021-25103|2024-08-03T19:56:10.614Z</guid>
      <pubDate>Mon, 07 Feb 2022 15:47:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3538|2024-08-03T01:14:02.359Z -- unknown -- webmaster%20tools%20verification
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3538</link>
      <description>The Webmaster Tools Verification WordPress plugin through 1.2 does not have authorisation and CSRF checks when disabling plugins, allowing unauthenticated users to disable arbitrary plugins</description>
      <guid isPermaLink="false">CVE-2022-3538|2024-08-03T01:14:02.359Z</guid>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4152|2024-08-03T01:27:54.519Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4152</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5, Contest Gallery Pro WordPress plugin before 19.1.5 do not escape the option_id POST parameter before concatenating it to an SQL query in edit-options.php. This may allow malicious users with at least author privilege to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4152|2024-08-03T01:27:54.519Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24730|2024-08-03T19:42:16.860Z -- unknown -- logo%20showcase%20with%20slick%20slider%20%E2%80%93%20logo%20carousel%2C%20logo%20slider%20%26%20logo%20grid
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24730</link>
      <description>The Logo Showcase with Slick Slider WordPress plugin before 1.2.5 does not have CSRF and authorisation checks in the lswss_save_attachment_data AJAX action, allowing any authenticated users, such as Subscriber, to change title, description, alt text, and URL of arbitrary uploaded media.</description>
      <guid isPermaLink="false">CVE-2021-24730|2024-08-03T19:42:16.860Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25119|2024-08-03T19:56:09.988Z -- unknown -- agil%28automatic%20grid%20image%20listing%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25119</link>
      <description>The AGIL WordPress plugin through 1.0 accepts all zip files and automatically extracts the zip file without validating the extracted file type. Allowing high privilege users such as admin to upload an arbitrary file like PHP, leading to RCE</description>
      <guid isPermaLink="false">CVE-2021-25119|2024-08-03T19:56:09.988Z</guid>
      <pubDate>Mon, 16 May 2022 14:30:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24594|2024-08-03T19:35:20.271Z -- unknown -- translate%20wordpress%20%E2%80%93%20google%20language%20translator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24594</link>
      <description>The Translate WordPress – Google Language Translator WordPress plugin before 6.0.12 does not sanitise and escape some of its settings before outputting it in various pages, allowing high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24594|2024-08-03T19:35:20.271Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:34:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1612|2024-08-03T00:10:03.626Z -- unknown -- webriti%20smtp%20mail
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1612</link>
      <description>The Webriti SMTP Mail WordPress plugin through 1.0 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1612|2024-08-03T00:10:03.626Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-4225|2024-08-03T17:16:04.292Z -- unknown -- sp%20project%20%26%20document%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-4225</link>
      <description>The SP Project &amp; Document Manager WordPress plugin before 4.24 allows any authenticated users, such as subscribers, to upload files. The plugin attempts to prevent PHP and other similar files that could be executed on the server from being uploaded by checking the file extension. It was discovered that on Windows servers, the security checks in place were insufficient, enabling bad actors to potentially upload backdoors on vulnerable sites.</description>
      <guid isPermaLink="false">CVE-2021-4225|2024-08-03T17:16:04.292Z</guid>
      <pubDate>Mon, 25 Apr 2022 15:50:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3151|2024-08-03T01:00:10.529Z -- unknown -- wp%20custom%20cursors
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3151</link>
      <description>The WP Custom Cursors WordPress plugin before 3.0.1 does not have CSRF check in place when deleting cursors, which could allow attackers to made a logged in admin delete arbitrary cursors via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2022-3151|2024-08-03T01:00:10.529Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25037|2024-08-03T19:49:14.558Z -- unknown -- all%20in%20one%20seo%20%E2%80%93%20best%20wordpress%20seo%20plugin%20%E2%80%93%20easily%20improve%20seo%20rankings%20%26%20increase%20traffic
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25037</link>
      <description>The All in One SEO WordPress plugin before 4.1.5.3 is affected by an authenticated SQL injection issue, which was discovered during an internal audit by the Jetpack Scan team, and could grant attackers access to privileged information from the affected site’s database (e.g., usernames and hashed passwords).</description>
      <guid isPermaLink="false">CVE-2021-25037|2024-08-03T19:49:14.558Z</guid>
      <pubDate>Mon, 17 Jan 2022 13:00:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4542|2024-08-03T01:41:45.623Z -- unknown -- compact%20wp%20audio%20player
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4542</link>
      <description>The Compact WP Audio Player WordPress plugin before 1.9.8 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4542|2024-08-03T01:41:45.623Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24628|2024-08-03T19:35:20.319Z -- unknown -- wow%20forms%20%E2%80%93%20create%20any%20form%20with%20custom%20style
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24628</link>
      <description>The Wow Forms WordPress plugin through 3.1.3 does not sanitise or escape a 'did' GET parameter before using it in a SQL statement, when deleting a form in the admin dashboard, leading to an authenticated SQL injection</description>
      <guid isPermaLink="false">CVE-2021-24628|2024-08-03T19:35:20.319Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:34:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2987|2024-08-03T00:53:00.514Z -- unknown -- ldap%20wp%20login%20%2F%20active%20directory%20integration
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2987</link>
      <description>The Ldap WP Login / Active Directory Integration WordPress plugin before 3.0.2 does not have any authorisation and CSRF checks when updating it's settings (which are hooked to the init action), allowing unauthenticated attackers to update them. Attackers could set their own LDAP server to be used to authenticated users, therefore bypassing the current authentication</description>
      <guid isPermaLink="false">CVE-2022-2987|2024-08-03T00:53:00.514Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4489|2024-08-03T01:41:45.022Z -- unknown -- husky
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4489</link>
      <description>The HUSKY WordPress plugin before 1.3.2 unserializes user input provided via the settings, which could allow high privilege users such as admin to perform PHP Object Injection when a suitable gadget is present.</description>
      <guid isPermaLink="false">CVE-2022-4489|2024-08-03T01:41:45.022Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24165|2024-08-03T19:21:18.626Z -- unknown -- ninja%20forms%20contact%20form%20%E2%80%93%20the%20drag%20and%20drop%20form%20builder%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24165</link>
      <description>In the Ninja Forms Contact Form WordPress plugin before 3.4.34, the wp_ajax_nf_oauth_connect AJAX action was vulnerable to open redirect due to the use of a user supplied redirect parameter and no protection in place.</description>
      <guid isPermaLink="false">CVE-2021-24165|2024-08-03T19:21:18.626Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1604|2024-08-03T00:10:03.757Z -- unknown -- mailerlite%20%E2%80%93%20signup%20forms%20%28official%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1604</link>
      <description>The MailerLite WordPress plugin before 1.5.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-1604|2024-08-03T00:10:03.757Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24208|2024-08-03T19:21:18.776Z -- unknown -- wp%20page%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24208</link>
      <description>The editor of the WP Page Builder WordPress plugin before 1.2.4 allows lower-privileged users to insert unfiltered HTML, including JavaScript, into pages via the “Raw HTML” widget and the “Custom HTML” widgets (though the custom HTML widget requires sending a crafted request - it appears that this widget uses some form of client side validation but not server side validation), all of which are added via the “page_builder_data” parameter when performing the “wppb_page_save” AJAX action. It is also possible to insert malicious JavaScript via the “wppb_page_css” parameter (this can be done by closing out the style tag and opening a script tag) when performing the “wppb_page_save” AJAX action.</description>
      <guid isPermaLink="false">CVE-2021-24208|2024-08-03T19:21:18.776Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24987|2024-08-03T19:49:14.556Z -- unknown -- social%20share%2C%20social%20login%20and%20social%20comments%20plugin%20%E2%80%93%20super%20socializer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24987</link>
      <description>The Social Share, Social Login and Social Comments Plugin WordPress plugin before 7.13.30 does not sanitise and escape the urls parameter in its the_champ_sharing_count AJAX action (available to both unauthenticated and authenticated users) before outputting it back in the response, leading to a Reflected Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-24987|2024-08-03T19:49:14.556Z</guid>
      <pubDate>Mon, 11 Apr 2022 14:40:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24851|2024-08-03T19:42:17.425Z -- unknown -- insert%20pages
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24851</link>
      <description>The Insert Pages WordPress plugin before 3.7.0 allows users with a role as low as Contributor to access content and metadata from arbitrary posts/pages regardless of their author and status (ie private), using a shortcode. Password protected posts/pages are not affected by such issue.</description>
      <guid isPermaLink="false">CVE-2021-24851|2024-08-03T19:42:17.425Z</guid>
      <pubDate>Wed, 17 Nov 2021 10:15:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24156|2024-08-03T19:21:18.620Z -- unknown -- testimonial%20rotator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24156</link>
      <description>Stored Cross-Site Scripting vulnerabilities in Testimonial Rotator 3.0.3 allow low privileged users (Contributor) to inject arbitrary JavaScript code or HTML without approval. This could lead to privilege escalation</description>
      <guid isPermaLink="false">CVE-2021-24156|2024-08-03T19:21:18.620Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24626|2024-08-03T19:35:20.305Z -- unknown -- chameleon%20css
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24626</link>
      <description>The Chameleon CSS WordPress plugin through 1.2 does not have any CSRF and capability checks in all its AJAX calls, allowing any authenticated user, such as subscriber to call them and perform unauthorised actions. One of AJAX call, remove_css, also does not sanitise or escape the css_id POST parameter before using it in a SQL statement, leading to a SQL Injection</description>
      <guid isPermaLink="false">CVE-2021-24626|2024-08-03T19:35:20.305Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:34:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24641|2024-08-03T19:35:20.367Z -- unknown -- images%20to%20webp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24641</link>
      <description>The Images to WebP WordPress plugin before 1.9 does not have CSRF checks in place when performing some administrative actions, which could result in modification of plugin settings, Denial-of-Service, as well as arbitrary image conversion</description>
      <guid isPermaLink="false">CVE-2021-24641|2024-08-03T19:35:20.367Z</guid>
      <pubDate>Tue, 23 Nov 2021 19:16:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2273|2024-08-03T00:32:09.608Z -- unknown -- simple%20membership
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2273</link>
      <description>The Simple Membership WordPress plugin before 4.1.3 does not properly validate the membership_level parameter when editing a profile, allowing members to escalate to a higher membership level by using a crafted POST request.</description>
      <guid isPermaLink="false">CVE-2022-2273|2024-08-03T00:32:09.608Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:51:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4140|2024-08-03T01:27:54.492Z -- unknown -- welcart%20e-commerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4140</link>
      <description>The Welcart e-Commerce WordPress plugin before 2.8.5 does not validate user input before using it to output the content of a file, which could allow unauthenticated attacker to read arbitrary files on the server</description>
      <guid isPermaLink="false">CVE-2022-4140|2024-08-03T01:27:54.492Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24348|2024-08-03T19:28:23.690Z -- unknown -- side%20menu%20%E2%80%93%20add%20fixed%20side%20buttons
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24348</link>
      <description>The menu delete functionality of the Side Menu – add fixed side buttons WordPress plugin before 3.1.5, available to Administrator users takes the did GET parameter and uses it into an SQL statement without proper sanitisation, validation or escaping, therefore leading to a SQL Injection issue</description>
      <guid isPermaLink="false">CVE-2021-24348|2024-08-03T19:28:23.690Z</guid>
      <pubDate>Mon, 14 Jun 2021 13:37:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24989|2024-08-03T19:49:14.541Z -- unknown -- accept%20donations%20with%20paypal
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24989</link>
      <description>The Accept Donations with PayPal WordPress plugin before 1.3.4 does not have CSRF check in place and does not ensure that the post to be deleted belongs to the plugin, allowing attackers to make a logged in admin delete arbitrary posts from the blog</description>
      <guid isPermaLink="false">CVE-2021-24989|2024-08-03T19:49:14.541Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:01:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2092|2024-08-03T00:24:44.204Z -- unknown -- woocommerce%20pdf%20invoices%20%26%20packing%20slips
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2092</link>
      <description>The WooCommerce PDF Invoices &amp; Packing Slips WordPress plugin before 2.16.0 doesn't escape a parameter on its setting page, making it possible for attackers to conduct reflected cross-site scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-2092|2024-08-03T00:24:44.204Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:57:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2372|2024-08-03T00:32:09.568Z -- unknown -- yaysmtp%20%E2%80%93%20simple%20wp%20smtp%20mail
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2372</link>
      <description>The YaySMTP WordPress plugin before 2.2.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2372|2024-08-03T00:32:09.568Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:47:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24440|2024-08-03T19:28:24.002Z -- unknown -- sign-up%20sheets
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24440</link>
      <description>The Sign-up Sheets WordPress plugin before 1.0.14 did not sanitise or escape some of its fields when creating a new sheet, allowing high privilege users to add JavaScript in them, leading to a Stored Cross-Site Scripting issue. The payloads will be triggered when viewing the 'All Sheets' page in the admin dashboard</description>
      <guid isPermaLink="false">CVE-2021-24440|2024-08-03T19:28:24.002Z</guid>
      <pubDate>Mon, 12 Jul 2021 19:21:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2041|2024-08-03T00:24:44.273Z -- unknown -- brizy%20%E2%80%93%20page%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2041</link>
      <description>The Brizy WordPress plugin before 2.4.2 does not sanitise and escape some element content, which could allow users with a role as low as Contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-2041|2024-08-03T00:24:44.273Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:59:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1595|2024-08-03T00:10:03.550Z -- unknown -- hc%20custom%20wp-admin%20url
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1595</link>
      <description>The HC Custom WP-Admin URL WordPress plugin through 1.4 leaks the secret login URL when sending a specific crafted request</description>
      <guid isPermaLink="false">CVE-2022-1595|2024-08-03T00:10:03.550Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24964|2024-08-03T19:49:14.371Z -- unknown -- litespeed%20cache
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24964</link>
      <description>The LiteSpeed Cache WordPress plugin before 4.4.4 does not properly verify that requests are coming from QUIC.cloud servers, allowing attackers to make requests to certain endpoints by using a specific X-Forwarded-For header value. In addition, one of the endpoint could be used to set CSS code if a setting is enabled, which will then be output in some pages without being sanitised and escaped. Combining those two issues, an unauthenticated attacker could put Cross-Site Scripting payloads in pages visited by users.</description>
      <guid isPermaLink="false">CVE-2021-24964|2024-08-03T19:49:14.371Z</guid>
      <pubDate>Mon, 03 Jan 2022 12:49:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1914|2024-08-03T00:17:00.972Z -- unknown -- clean-contact
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1914</link>
      <description>The Clean-Contact WordPress plugin through 1.6 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and lead to Stored XSS due to the lack of sanitisation and escaping as well</description>
      <guid isPermaLink="false">CVE-2022-1914|2024-08-03T00:17:00.972Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:58:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24692|2024-08-03T19:42:16.158Z -- unknown -- simple%20download%20monitor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24692</link>
      <description>The Simple Download Monitor WordPress plugin before 3.9.5 allows users with a role as low as Contributor to download any file on the web server (such as wp-config.php) via a path traversal vector.</description>
      <guid isPermaLink="false">CVE-2021-24692|2024-08-03T19:42:16.158Z</guid>
      <pubDate>Mon, 14 Mar 2022 14:40:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2412|2024-08-03T00:39:06.990Z -- unknown -- better%20tag%20cloud
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2412</link>
      <description>The Better Tag Cloud WordPress plugin through 0.99.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2412|2024-08-03T00:39:06.990Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:50:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1687|2024-08-03T00:10:03.810Z -- unknown -- logo%20slider
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1687</link>
      <description>The Logo Slider WordPress plugin through 1.4.8 does not sanitise and escape the lsp_slider_id parameter before using it in a SQL statement via the Manage Slider Images admin page, leading to an SQL Injection</description>
      <guid isPermaLink="false">CVE-2022-1687|2024-08-03T00:10:03.810Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3069|2024-08-03T01:00:10.349Z -- unknown -- wordlift%20%E2%80%93%20ai%20powered%20seo%20%E2%80%93%20schema
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3069</link>
      <description>The WordLift WordPress plugin before 3.37.2 does not sanitise and escape its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-3069|2024-08-03T01:00:10.349Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3946|2024-08-03T01:27:53.116Z -- unknown -- welcart%20e-commerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3946</link>
      <description>The Welcart e-Commerce WordPress plugin before 2.8.4 does not have authorisation and CSRF in an AJAX action, allowing any logged-in user to create, update and delete shipping methods.</description>
      <guid isPermaLink="false">CVE-2022-3946|2024-08-03T01:27:53.116Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1788|2024-08-03T00:16:59.905Z -- unknown -- change%20uploaded%20file%20permissions
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1788</link>
      <description>Due to missing checks the Change Uploaded File Permissions WordPress plugin through 4.0.0 is vulnerable to CSRF attacks. This can be used to change the file and folder permissions of any folder. This could be problematic when specific files like ini files are made readable for everyone due to this.</description>
      <guid isPermaLink="false">CVE-2022-1788|2024-08-03T00:16:59.905Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1692|2024-08-03T00:10:03.848Z -- unknown -- cp%20image%20store%20with%20slideshow
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1692</link>
      <description>The CP Image Store with Slideshow WordPress plugin before 1.0.68 does not sanitise and escape the ordering_by query parameter before using it in a SQL statement in pages where the [codepeople-image-store] is embed, allowing unauthenticated users to perform an SQL injection attack</description>
      <guid isPermaLink="false">CVE-2022-1692|2024-08-03T00:10:03.848Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24874|2024-08-03T19:49:14.383Z -- unknown -- newsletter%2C%20smtp%2C%20email%20marketing%20and%20subscribe%20forms%20by%20sendinblue
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24874</link>
      <description>The Newsletter, SMTP, Email marketing and Subscribe forms by Sendinblue WordPress plugin before 3.1.31 does not escape the lang and pid parameter before outputting them back in attributes, leading to Reflected Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-24874|2024-08-03T19:49:14.383Z</guid>
      <pubDate>Mon, 14 Feb 2022 09:20:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2311|2024-08-03T00:32:09.387Z -- unknown -- find%20and%20replace%20all
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2311</link>
      <description>The Find and Replace All WordPress plugin before 1.3 does not sanitize and escape some parameters from its setting page before outputting them back to the user, leading to a Reflected Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2022-2311|2024-08-03T00:32:09.387Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3132|2024-08-03T01:00:10.506Z -- unknown -- goolytics%20%E2%80%93%20simple%20google%20analytics
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3132</link>
      <description>The Goolytics WordPress plugin before 1.1.2 does not sanitise and escape some of its settings, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-3132|2024-08-03T01:00:10.506Z</guid>
      <pubDate>Mon, 03 Oct 2022 13:45:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3150|2024-08-03T01:00:10.464Z -- unknown -- wp%20custom%20cursors%20%7C%20wordpress%20cursor%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3150</link>
      <description>The WP Custom Cursors WordPress plugin before 3.2 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privileged users such as admin</description>
      <guid isPermaLink="false">CVE-2022-3150|2024-08-03T01:00:10.464Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4888|2024-08-03T01:55:45.935Z -- unknown -- checkout%20fields%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4888</link>
      <description>The Checkout Fields Manager WordPress plugin before 1.0.2, Abandoned Cart Recovery WordPress plugin before 1.2.5, Custom Fields for WooCommerce WordPress plugin before 1.0.4, Custom Order Number WordPress plugin through 1.0.1, Custom Registration Forms Builder WordPress plugin before 1.0.2, Advanced Free Gifts WordPress plugin before 1.0.2, Gift Registry for WooCommerce WordPress plugin through 1.0.1, Image Watermark for WooCommerce WordPress plugin before 1.0.1, Order Approval for WooCommerce WordPress plugin before 1.1.0, Order Tracking for WooCommerce WordPress plugin before 1.0.2, Price Calculator for WooCommerce WordPress plugin through 1.0.3, Product Dynamic Pricing and Discounts WordPress plugin through 1.0.6, Product Labels and Stickers WordPress plugin through 1.0.1 have flawed CSRF checks in various places, which could allow attackers to make logged in users perform unwanted actions</description>
      <guid isPermaLink="false">CVE-2022-4888|2024-08-03T01:55:45.935Z</guid>
      <pubDate>Mon, 31 Jul 2023 09:37:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24846|2024-08-03T19:42:17.360Z -- unknown -- ni%20woocommerce%20custom%20order%20status
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24846</link>
      <description>The get_query() function of the Ni WooCommerce Custom Order Status WordPress plugin before 1.9.7, used by the niwoocos_ajax AJAX action, available to all authenticated users, does not properly sanitise the sort parameter before using it in a SQL statement, leading to an SQL injection, exploitable by any authenticated users, such as subscriber</description>
      <guid isPermaLink="false">CVE-2021-24846|2024-08-03T19:42:17.360Z</guid>
      <pubDate>Tue, 21 Dec 2021 08:45:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1773|2024-08-03T00:16:59.886Z -- unknown -- wp%20athletics
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1773</link>
      <description>The WP Athletics WordPress plugin through 1.1.7 does not sanitise and escape a parameter before outputting back in an admin page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-1773|2024-08-03T00:16:59.886Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24520|2024-08-03T19:35:19.820Z -- unknown -- stock%20in%20%26%20out
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24520</link>
      <description>The Stock in &amp; out WordPress plugin through 1.0.4 lacks proper sanitization before passing variables to an SQL request, making it vulnerable to SQL Injection attacks. Users with a role of contributor or higher can exploit this vulnerability.</description>
      <guid isPermaLink="false">CVE-2021-24520|2024-08-03T19:35:19.820Z</guid>
      <pubDate>Mon, 09 Aug 2021 10:04:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24502|2024-08-03T19:35:19.913Z -- unknown -- maps%20plugin%20using%20google%20maps%20for%20wordpress%20%E2%80%93%20wp%20google%20map
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24502</link>
      <description>The WP Google Map WordPress plugin before 1.7.7 did not sanitise or escape the Map Title before outputting them in the page, leading to a Stored Cross-Site Scripting issue by high privilege users, even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24502|2024-08-03T19:35:19.913Z</guid>
      <pubDate>Mon, 09 Aug 2021 10:04:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24259|2024-08-03T19:28:22.703Z -- unknown -- elementor%20addon%20elements
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24259</link>
      <description>The “Elementor Addon Elements” WordPress Plugin before 1.11.2 has several widgets that are vulnerable to stored Cross-Site Scripting (XSS) by lower-privileged users such as contributors, all via a similar method.</description>
      <guid isPermaLink="false">CVE-2021-24259|2024-08-03T19:28:22.703Z</guid>
      <pubDate>Wed, 05 May 2021 18:28:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24693|2024-08-03T19:42:16.204Z -- unknown -- simple%20download%20monitor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24693</link>
      <description>The Simple Download Monitor WordPress plugin before 3.9.5 does not escape the "File Thumbnail" post meta before outputting it in some pages, which could allow users with a role as low as Contributor to perform Stored Cross-Site Scripting attacks. Given the that XSS is triggered even when the Download is in a review state, contributor could make JavaScript code execute in a context of a reviewer such as admin and make them create a rogue admin account, or install a malicious plugin</description>
      <guid isPermaLink="false">CVE-2021-24693|2024-08-03T19:42:16.204Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:35:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24631|2024-08-03T19:35:20.314Z -- unknown -- unlimited%20popups
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24631</link>
      <description>The Unlimited PopUps WordPress plugin through 4.5.3 does not sanitise or escape the did GET parameter before using it in a SQL statement, available to users as low as editor, leading to an authenticated SQL Injection</description>
      <guid isPermaLink="false">CVE-2021-24631|2024-08-03T19:35:20.314Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:34:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4666|2024-08-03T01:48:39.613Z -- unknown -- markup%20%28json-ld%29%20structured%20in%20schema.org
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4666</link>
      <description>The Markup (JSON-LD) structured in schema.org WordPress plugin through 4.8.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-4666|2024-08-03T01:48:39.613Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:51:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25117|2024-08-03T19:56:10.858Z -- unknown -- wp-postratings
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25117</link>
      <description>The WP-PostRatings WordPress plugin before 1.86.1 does not sanitise the postratings_image parameter from its options page (wp-admin/admin.php?page=wp-postratings/postratings-options.php). Even though the page is only accessible to administrators, and protected against CSRF attacks, the issue is still exploitable when the unfiltered_html capability is disabled.</description>
      <guid isPermaLink="false">CVE-2021-25117|2024-08-03T19:56:10.858Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:49:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25085|2024-08-03T19:56:09.874Z -- unknown -- woof%20%E2%80%93%20products%20filter%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25085</link>
      <description>The WOOF WordPress plugin before 1.2.6.3 does not sanitise and escape the woof_redraw_elements before outputing back in an admin page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-25085|2024-08-03T19:56:09.874Z</guid>
      <pubDate>Tue, 01 Feb 2022 12:21:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1568|2024-08-03T00:10:03.533Z -- unknown -- team%20members
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1568</link>
      <description>The Team Members WordPress plugin before 5.1.1 does not escape some of its Team settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1568|2024-08-03T00:10:03.533Z</guid>
      <pubDate>Mon, 30 May 2022 08:36:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24581|2024-08-03T19:35:20.193Z -- unknown -- blue%20admin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24581</link>
      <description>The Blue Admin WordPress plugin through 21.06.01 does not sanitise or escape its "Logo Title" setting before outputting in a page, leading to a Stored Cross-Site Scripting issue. Furthermore, the plugin does not have CSRF check in place when saving its settings, allowing the issue to be exploited via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2021-24581|2024-08-03T19:35:20.193Z</guid>
      <pubDate>Mon, 30 Aug 2021 14:11:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24168|2024-08-03T19:21:18.620Z -- unknown -- easy%20contact%20form%20pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24168</link>
      <description>The Easy Contact Form Pro WordPress plugin before 1.1.1.9 did not properly sanitise the text fields (such as Email Subject, Email Recipient, etc) when creating or editing a form, leading to an authenticated (author+) stored cross-site scripting issue. This could allow medium privilege accounts (such as author and editor) to perform XSS attacks against high privilege ones like administrator.</description>
      <guid isPermaLink="false">CVE-2021-24168|2024-08-03T19:21:18.620Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1710|2024-08-03T00:10:03.840Z -- unknown -- appointment%20hour%20booking%20%E2%80%93%20wordpress%20booking%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1710</link>
      <description>The Appointment Hour Booking WordPress plugin before 1.3.56 does not sanitise and escape a settings of its Calendar fields, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-1710|2024-08-03T00:10:03.840Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3141|2024-08-03T01:00:10.566Z -- unknown -- translate%20multilingual%20sites%20%E2%80%93%20translatepress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3141</link>
      <description>The Translate Multilingual sites WordPress plugin before 2.3.3 is vulnerable to an authenticated SQL injection. By adding a new language (via the settings page) containing specific special characters, the backticks in the SQL query can be surpassed and a time-based blind payload can be injected.</description>
      <guid isPermaLink="false">CVE-2022-3141|2024-08-03T01:00:10.566Z</guid>
      <pubDate>Mon, 19 Sep 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4164|2024-08-03T01:34:48.802Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4164</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the cg_multiple_files_for_post POST parameter before concatenating it to an SQL query in 0_change-gallery.php. This may allow malicious users with at least author privilege to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4164|2024-08-03T01:34:48.802Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24326|2024-08-03T19:28:23.408Z -- unknown -- all%20404%20redirect%20to%20homepage
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24326</link>
      <description>The tab parameter of the settings page of the All 404 Redirect to Homepage WordPress plugin before 1.21 was vulnerable to an authenticated reflected Cross-Site Scripting (XSS) issue as user input was not properly sanitised before being output in an attribute.</description>
      <guid isPermaLink="false">CVE-2021-24326|2024-08-03T19:28:23.408Z</guid>
      <pubDate>Mon, 17 May 2021 16:48:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25033|2024-08-03T19:49:14.591Z -- unknown -- wordpress%20newsletter%20plugin%20%E2%80%93%20noptin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25033</link>
      <description>The WordPress Newsletter Plugin WordPress plugin before 1.6.5 does not validate the to parameter before redirecting the user to its given value, leading to an open redirect issue</description>
      <guid isPermaLink="false">CVE-2021-25033|2024-08-03T19:49:14.591Z</guid>
      <pubDate>Mon, 14 Feb 2022 09:20:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3415|2024-08-03T01:07:06.696Z -- unknown -- chat%20bubble%20%E2%80%93%20floating%20chat%20with%20contact%20chat%20icons%2C%20messages%2C%20telegram%2C%20email%2C%20sms%2C%20call%20me%20back
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3415</link>
      <description>The Chat Bubble WordPress plugin before 2.3 does not sanitise and escape some contact parameters, which could allow unauthenticated attackers to set Stored Cross-Site Scripting payloads in them, which will trigger when an admin view the related contact message</description>
      <guid isPermaLink="false">CVE-2022-3415|2024-08-03T01:07:06.696Z</guid>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24464|2024-08-03T19:35:19.608Z -- unknown -- youtube%20embed%2C%20playlist%20and%20popup%20by%20wpdevart
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24464</link>
      <description>The YouTube Embed, Playlist and Popup by WpDevArt WordPress plugin before 2.3.9 did not escape, validate or sanitise some of its shortcode options, available to users with a role as low as Contributor, leading to an authenticated Stored Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-24464|2024-08-03T19:35:19.608Z</guid>
      <pubDate>Mon, 02 Aug 2021 10:32:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3139|2024-08-03T01:00:10.637Z -- unknown -- we%E2%80%99re%20open%21
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3139</link>
      <description>The We’re Open! WordPress plugin before 1.42 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3139|2024-08-03T01:00:10.637Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24859|2024-08-03T19:42:17.307Z -- unknown -- user%20meta%20shortcodes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24859</link>
      <description>The User Meta Shortcodes WordPress plugin through 0.5 registers a shortcode that allows any user with a role as low as contributor to access other users metadata by specifying the user login as a parameter. This makes the WP instance vulnerable to data extrafiltration, including password hashes</description>
      <guid isPermaLink="false">CVE-2021-24859|2024-08-03T19:42:17.307Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:41:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25069|2024-08-03T19:56:09.477Z -- unknown -- download%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25069</link>
      <description>The Download Manager WordPress plugin before 3.2.34 does not sanitise and escape the package_ids parameter before using it in a SQL statement, leading to a SQL injection, which can also be exploited to cause a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-25069|2024-08-03T19:56:09.477Z</guid>
      <pubDate>Mon, 21 Feb 2022 10:45:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24530|2024-08-03T19:35:19.983Z -- unknown -- alojapro%20widget
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24530</link>
      <description>The Alojapro Widget WordPress plugin through 1.1.15 doesn't properly sanitise its Custom CSS settings, allowing high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24530|2024-08-03T19:35:19.983Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1689|2024-08-03T00:10:03.847Z -- unknown -- note%20press
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1689</link>
      <description>The Note Press WordPress plugin through 0.1.10 does not sanitise and escape the Update parameter before using it in a SQL statement when updating a note via the admin dashboard, leading to an SQL injection</description>
      <guid isPermaLink="false">CVE-2022-1689|2024-08-03T00:10:03.847Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24746|2024-08-03T19:42:16.645Z -- unknown -- social%20sharing%20plugin%20%E2%80%93%20sassy%20social%20share
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24746</link>
      <description>The Social Sharing Plugin WordPress plugin before 3.3.40 does not escape the viewed post URL before outputting it back in onclick attributes when the "Enable 'More' icon" option is enabled (which is the default setting), leading to a Reflected Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-24746|2024-08-03T19:42:16.645Z</guid>
      <pubDate>Mon, 28 Mar 2022 17:20:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24663|2024-08-03T19:42:16.028Z -- unknown -- simple%20schools%20staff%20directory
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24663</link>
      <description>The Simple Schools Staff Directory WordPress plugin through 1.1 does not validate uploaded logo pictures to ensure that are indeed images, allowing high privilege users such as admin to upload arbitrary file like PHP, leading to RCE</description>
      <guid isPermaLink="false">CVE-2021-24663|2024-08-03T19:42:16.028Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24722|2024-08-03T19:42:16.659Z -- unknown -- restaurant%20menu%20by%20motopress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24722</link>
      <description>The Restaurant Menu by MotoPress WordPress plugin before 2.4.2 does not properly sanitize or escape inputs when creating new menu items, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24722|2024-08-03T19:42:16.659Z</guid>
      <pubDate>Mon, 01 Nov 2021 08:46:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24129|2024-08-03T19:21:18.611Z -- unknown -- themify%20portfolio%20post
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24129</link>
      <description>Unvalidated input and lack of output encoding in the Themify Portfolio Post WordPress plugin, versions before 1.1.6, lead to Stored Cross-Site Scripting (XSS) vulnerabilities allowing low-privileged users (Contributor+) to inject arbitrary JavaScript code or HTML in posts where the Themify Custom Panel is embedded, which could lead to privilege escalation.</description>
      <guid isPermaLink="false">CVE-2021-24129|2024-08-03T19:21:18.611Z</guid>
      <pubDate>Thu, 18 Mar 2021 14:57:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2958|2024-08-03T00:52:59.878Z -- unknown -- badgeos
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2958</link>
      <description>The BadgeOS WordPress plugin before 3.7.1.3 does not sanitise and escape parameters before using them in SQL statements via AJAX actions available to any authenticated users, leading to SQL Injections</description>
      <guid isPermaLink="false">CVE-2022-2958|2024-08-03T00:52:59.878Z</guid>
      <pubDate>Mon, 19 Sep 2022 14:01:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25063|2024-08-03T19:49:14.629Z -- unknown -- skins%20for%20contact%20form%207
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25063</link>
      <description>The Skins for Contact Form 7 WordPress plugin before 2.5.1 does not sanitise and escape the tab parameter before outputting it back in an admin page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-25063|2024-08-03T19:49:14.629Z</guid>
      <pubDate>Tue, 01 Feb 2022 12:21:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4016|2024-08-03T01:27:54.122Z -- unknown -- booster%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4016</link>
      <description>The Booster for WooCommerce WordPress plugin before 5.6.7, Booster Plus for WooCommerce WordPress plugin before 5.6.6, Booster Elite for WooCommerce WordPress plugin before 1.1.8 does not properly check for CSRF when creating and deleting Customer roles, allowing attackers to make logged admins create and delete arbitrary custom roles via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2022-4016|2024-08-03T01:27:54.122Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:57:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2565|2024-08-03T00:39:08.081Z -- unknown -- simple%20payment%20donations%20%26%20subscriptions%20plugin%20by%20paymattic%20%E2%80%93%20best%20payments%20plugin%20for%20wp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2565</link>
      <description>The Simple Payment Donations &amp; Subscriptions WordPress plugin before 4.2.1 does not sanitise and escape user input given in its forms, which could allow unauthenticated attackers to perform Cross-Site Scripting attacks against admins</description>
      <guid isPermaLink="false">CVE-2022-2565|2024-08-03T00:39:08.081Z</guid>
      <pubDate>Mon, 05 Sep 2022 12:35:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24454|2024-08-03T19:35:18.675Z -- unknown -- yop%20poll
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24454</link>
      <description>In the YOP Poll WordPress plugin before 6.2.8, when a pool is created with the options "Allow other answers", "Display other answers in the result list" and "Show results", it can lead to Stored Cross-Site Scripting issues as the 'Other' answer is not sanitised before being output in the page. The execution of the XSS payload depends on the 'Show results' option selected, which could be before or after sending the vote for example.</description>
      <guid isPermaLink="false">CVE-2021-24454|2024-08-03T19:35:18.675Z</guid>
      <pubDate>Mon, 12 Jul 2021 19:21:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3999|2024-08-03T01:27:54.067Z -- unknown -- dpd%20baltic%20shipping
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3999</link>
      <description>The DPD Baltic Shipping WordPress plugin before 1.2.57 does not have authorisation and CSRF in an AJAX action, which could allow any authenticated users, such as subscriber to delete arbitrary options from the blog, which could make the blog unavailable.</description>
      <guid isPermaLink="false">CVE-2022-3999|2024-08-03T01:27:54.067Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2118|2024-08-03T00:24:44.265Z -- unknown -- 404s
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2118</link>
      <description>The 404s WordPress plugin before 3.5.1 does not sanitise and escape its fields, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2118|2024-08-03T00:24:44.265Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:36:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-4227|2024-08-03T17:23:08.904Z -- unknown -- ark-commenteditor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-4227</link>
      <description>The ark-commenteditor WordPress plugin through 2.15.6 does not properly sanitise or encode the comments when in Source editor, allowing attackers to inject an iFrame in the page and thus load arbitrary content from any page to the comment section</description>
      <guid isPermaLink="false">CVE-2021-4227|2024-08-03T17:23:08.904Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:52:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24470|2024-08-03T19:35:19.372Z -- unknown -- yada%20wiki
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24470</link>
      <description>The Yada Wiki WordPress plugin before 3.4.1 did not sanitise, validate or escape the anchor attribute of its shortcode, leading to a Stored Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24470|2024-08-03T19:35:19.372Z</guid>
      <pubDate>Mon, 02 Aug 2021 10:32:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3926|2024-08-03T01:27:53.908Z -- unknown -- wp%20oauth%20server%20%28oauth%20authentication%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3926</link>
      <description>The WP OAuth Server (OAuth Authentication) WordPress plugin before 3.4.2 does not have CSRF check when regenerating secrets, which could allow attackers to make logged in admins regenerate the secret of an arbitrary client given they know the client ID</description>
      <guid isPermaLink="false">CVE-2022-3926|2024-08-03T01:27:53.908Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24910|2024-08-03T19:49:13.860Z -- unknown -- transposh%20wordpress%20translation
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24910</link>
      <description>The Transposh WordPress Translation WordPress plugin before 1.0.8 does not sanitise and escape the a parameter via an AJAX action (available to both unauthenticated and authenticated users when the curl library is installed) before outputting it back in the response, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24910|2024-08-03T19:49:13.860Z</guid>
      <pubDate>Mon, 22 Aug 2022 14:55:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2567|2024-08-03T00:39:08.088Z -- unknown -- form%20builder%20cp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2567</link>
      <description>The Form Builder CP WordPress plugin before 1.2.32 does not sanitise and escape some of its form settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2567|2024-08-03T00:39:08.088Z</guid>
      <pubDate>Mon, 19 Sep 2022 14:00:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4198|2024-08-03T01:34:49.637Z -- unknown -- wp%20social%20sharing
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4198</link>
      <description>The WP Social Sharing WordPress plugin through 2.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4198|2024-08-03T01:34:49.637Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3062|2024-08-03T01:00:10.359Z -- unknown -- simple%20file%20list
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3062</link>
      <description>The Simple File List WordPress plugin before 4.4.12 does not escape parameters before outputting them back in attributes, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-3062|2024-08-03T01:00:10.359Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1585|2024-08-03T00:10:03.753Z -- unknown -- wordpress%20project%20source%20code%20download
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1585</link>
      <description>The Project Source Code Download WordPress plugin through 1.0.0 does not protect its backup generation and download functionalities, which may allow any visitors on the site to download the entire site, including sensitive files like wp-config.php.</description>
      <guid isPermaLink="false">CVE-2022-1585|2024-08-03T00:10:03.753Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:48:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3237|2024-08-03T01:00:10.771Z -- unknown -- wp%20contact%20slider
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3237</link>
      <description>The WP Contact Slider WordPress plugin before 2.4.8 does not sanitize and escape its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-3237|2024-08-03T01:00:10.771Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24952|2024-08-03T19:49:14.363Z -- unknown -- conversios.io%20%E2%80%93%20google%20analytics%20and%20google%20shopping%20plugin%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24952</link>
      <description>The Conversios.io WordPress plugin before 4.6.2 does not sanitise, validate and escape the sync_progressive_data parameter for the tvcajax_product_sync_bantch_wise AJAX action before using it in a SQL statement, allowing any authenticated user to perform SQL injection attacks.</description>
      <guid isPermaLink="false">CVE-2021-24952|2024-08-03T19:49:14.363Z</guid>
      <pubDate>Mon, 07 Mar 2022 08:16:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3891|2024-08-03T01:20:58.483Z -- unknown -- wp%20fullcalendar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3891</link>
      <description>The WP FullCalendar WordPress plugin before 1.5 does not ensure that the post retrieved via an AJAX action is public and can be accessed by the user making the request, allowing unauthenticated attackers to get the content of arbitrary posts, including draft/private as well as password-protected ones.</description>
      <guid isPermaLink="false">CVE-2022-3891|2024-08-03T01:20:58.483Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25010|2024-08-03T19:49:14.589Z -- unknown -- post%20snippets
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25010</link>
      <description>The Post Snippets WordPress plugin before 3.1.4 does not have CSRF check when importing files, allowing attacker to make a logged In admin import arbitrary snippets. Furthermore, imported snippers are not sanitised and escaped, which could lead to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-25010|2024-08-03T19:49:14.589Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1756|2024-08-03T00:16:59.701Z -- unknown -- newsletter%20%E2%80%93%20send%20awesome%20emails%20from%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1756</link>
      <description>The Newsletter WordPress plugin before 7.4.5 does not sanitize and escape the $_SERVER['REQUEST_URI'] before echoing it back in admin pages. Although this uses addslashes, and most modern browsers automatically URLEncode requests, this is still vulnerable to Reflected XSS in older browsers such as Internet Explorer 9 or below.</description>
      <guid isPermaLink="false">CVE-2022-1756|2024-08-03T00:16:59.701Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4792|2024-08-03T01:48:40.438Z -- unknown -- news%20%26%20blog%20designer%20pack
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4792</link>
      <description>The News &amp; Blog Designer Pack WordPress plugin before 3.3 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4792|2024-08-03T01:48:40.438Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3254|2024-08-03T01:07:05.871Z -- unknown -- wordpress%20classifieds%20plugin%20%E2%80%93%20ad%20directory%20%26%20listings%20by%20awp%20classifieds
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3254</link>
      <description>The WordPress Classifieds Plugin WordPress plugin before 4.3 does not properly sanitise and escape some parameters before using them in a SQL statement via an AJAX action available to unauthenticated users and when a specific premium module is active, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2022-3254|2024-08-03T01:07:05.871Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1569|2024-08-03T00:10:03.277Z -- unknown -- drag%20%26%20drop%20builder%2C%20human%20face%20detector%2C%20pre-built%20templates%2C%20spam%20protection%2C%20user%20email%20notifications%20%26%20more%21
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1569</link>
      <description>The Drag &amp; Drop Builder, Human Face Detector, Pre-built Templates, Spam Protection, User Email Notifications &amp; more! WordPress plugin before 1.4.9.4 does not sanitise and escape some of its form fields, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1569|2024-08-03T00:10:03.277Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4360|2024-08-03T01:34:50.189Z -- unknown -- wp%20rss%20by%20publishers
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4360</link>
      <description>The WP RSS By Publishers WordPress plugin through 0.1 does not properly sanitize and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2022-4360|2024-08-03T01:34:50.189Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24845|2024-08-03T19:42:17.220Z -- unknown -- improved%20include%20page
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24845</link>
      <description>The Improved Include Page WordPress plugin through 1.2 allows passing shortcode attributes with post_type &amp; post_status which can be used to retrieve arbitrary content. This way, users with a role as low as Contributor can gain access to content they are not supposed to.</description>
      <guid isPermaLink="false">CVE-2021-24845|2024-08-03T19:42:17.220Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:41:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24353|2024-08-03T19:28:23.449Z -- unknown -- simple%20301%20redirects%20by%20betterlinks
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24353</link>
      <description>The import_data function of the Simple 301 Redirects by BetterLinks WordPress plugin before 2.0.4 had no capability or nonce checks making it possible for unauthenticated users to import a set of site redirects.</description>
      <guid isPermaLink="false">CVE-2021-24353|2024-08-03T19:28:23.449Z</guid>
      <pubDate>Mon, 14 Jun 2021 13:37:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2189|2024-08-03T00:32:08.665Z -- unknown -- wp%20video%20lightbox
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2189</link>
      <description>The WP Video Lightbox WordPress plugin before 1.9.5 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2022-2189|2024-08-03T00:32:08.665Z</guid>
      <pubDate>Mon, 25 Jul 2022 12:47:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3334|2024-08-03T01:07:06.431Z -- unknown -- easy%20wp%20smtp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3334</link>
      <description>The Easy WP SMTP WordPress plugin before 1.5.0 unserialises the content of an imported file, which could lead to PHP object injection issue when an admin import (intentionally or not) a malicious file and a suitable gadget chain is present on the blog.</description>
      <guid isPermaLink="false">CVE-2022-3334|2024-08-03T01:07:06.431Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1528|2024-08-03T00:10:03.230Z -- unknown -- vikbooking%20hotel%20booking%20engine%20%26%20pms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1528</link>
      <description>The VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.5.9 does not escape the current URL before putting it back in a JavaScript context, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-1528|2024-08-03T00:10:03.230Z</guid>
      <pubDate>Mon, 30 May 2022 08:35:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24399|2024-08-03T19:28:23.861Z -- unknown -- the%20sorter
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24399</link>
      <description>The check_order function of The Sorter WordPress plugin through 1.0 uses an `area_id` parameter which is not sanitised, escaped or validated before inserting to a SQL statement, leading to SQL injection.</description>
      <guid isPermaLink="false">CVE-2021-24399|2024-08-03T19:28:23.861Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4571|2024-08-03T01:41:45.796Z -- unknown -- seriously%20simple%20podcasting
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4571</link>
      <description>The Seriously Simple Podcasting WordPress plugin before 2.19.1 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4571|2024-08-03T01:41:45.796Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24875|2024-08-03T19:49:12.695Z -- unknown -- ecommerce%20product%20catalog%20plugin%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24875</link>
      <description>The eCommerce Product Catalog Plugin for WordPress plugin before 3.0.39 does not escape the ic-settings-search parameter before outputting it back in the page in an attribute, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24875|2024-08-03T19:49:12.695Z</guid>
      <pubDate>Tue, 23 Nov 2021 19:16:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2799|2024-08-03T00:46:04.581Z -- unknown -- affiliates%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2799</link>
      <description>The Affiliates Manager WordPress plugin before 2.9.14 does not sanitise and escape some of its settings, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2799|2024-08-03T00:46:04.581Z</guid>
      <pubDate>Fri, 16 Sep 2022 08:40:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24799|2024-08-03T19:42:17.210Z -- unknown -- far%20future%20expiry%20header
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24799</link>
      <description>The Far Future Expiry Header WordPress plugin before 1.5 does not have CSRF check when saving its settings, which could allow attackers to make a logged in admin change them via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2021-24799|2024-08-03T19:42:17.210Z</guid>
      <pubDate>Mon, 01 Nov 2021 08:46:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4469|2024-08-03T01:41:44.709Z -- unknown -- simple%20membership
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4469</link>
      <description>The Simple Membership WordPress plugin before 4.2.2 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2022-4469|2024-08-03T01:41:44.709Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2373|2024-08-03T00:32:09.698Z -- unknown -- simply%20schedule%20appointments%20%E2%80%93%20wordpress%20booking%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2373</link>
      <description>The Simply Schedule Appointments WordPress plugin before 1.5.7.7 is missing authorisation in a REST endpoint, allowing unauthenticated users to retrieve WordPress users details such as name and email address</description>
      <guid isPermaLink="false">CVE-2022-2373|2024-08-03T00:32:09.698Z</guid>
      <pubDate>Mon, 29 Aug 2022 17:15:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3986|2024-08-03T01:27:53.979Z -- unknown -- wp%20stripe%20checkout
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3986</link>
      <description>The WP Stripe Checkout WordPress plugin before 1.2.2.21 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-3986|2024-08-03T01:27:53.979Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2877|2024-08-03T00:52:59.794Z -- unknown -- titan%20anti-spam%20%26%20security
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2877</link>
      <description>The Titan Anti-spam &amp; Security WordPress plugin before 7.3.1 does not properly checks HTTP headers in order to validate the origin IP address, allowing threat actors to bypass it's block feature by spoofing the headers.</description>
      <guid isPermaLink="false">CVE-2022-2877|2024-08-03T00:52:59.794Z</guid>
      <pubDate>Fri, 16 Sep 2022 08:40:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24127|2024-08-03T19:21:18.298Z -- unknown -- thirstyaffiliates
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24127</link>
      <description>Unvalidated input and lack of output encoding in the ThirstyAffiliates Affiliate Link Manager WordPress plugin, versions before 3.9.3, was vulnerable to authenticated Stored Cross-Site Scripting (XSS), which could lead to privilege escalation.</description>
      <guid isPermaLink="false">CVE-2021-24127|2024-08-03T19:21:18.298Z</guid>
      <pubDate>Thu, 18 Mar 2021 14:57:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24333|2024-08-03T19:28:23.400Z -- unknown -- content%20copy%20protection%20%26%20prevent%20image%20save
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24333</link>
      <description>The Content Copy Protection &amp; Prevent Image Save WordPress plugin through 1.3 does not check for CSRF when saving its settings, not perform any validation and sanitisation on them, allowing attackers to make a logged in administrator set arbitrary XSS payloads in them.</description>
      <guid isPermaLink="false">CVE-2021-24333|2024-08-03T19:28:23.400Z</guid>
      <pubDate>Tue, 01 Jun 2021 11:33:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24346|2024-08-03T19:28:23.463Z -- unknown -- stock%20in%20%26%20out
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24346</link>
      <description>The Stock in &amp; out WordPress plugin through 1.0.4 has a search functionality, the lowest accessible level to it being contributor. The srch POST parameter is not validated, sanitised or escaped before using it in the echo statement, leading to a reflected XSS issue</description>
      <guid isPermaLink="false">CVE-2021-24346|2024-08-03T19:28:23.463Z</guid>
      <pubDate>Mon, 14 Jun 2021 13:37:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24705|2024-08-03T19:42:16.117Z -- unknown -- nex-forms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24705</link>
      <description>The NEX-Forms WordPress plugin before 8.4.3 does not have CSRF checks in place when editing a form, and does not escape some of its settings as well as form fields before outputting them in attributes. This could allow attackers to make a logged in admin edit arbitrary forms with Cross-Site Scripting payloads in them</description>
      <guid isPermaLink="false">CVE-2021-24705|2024-08-03T19:42:16.117Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:40:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25056|2024-08-03T19:49:14.590Z -- unknown -- ninja%20forms%20contact%20form%20%E2%80%93%20the%20drag%20and%20drop%20form%20builder%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25056</link>
      <description>The Ninja Forms Contact Form WordPress plugin before 3.6.10 does not sanitise and escape field labels, allowing high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-25056|2024-08-03T19:49:14.590Z</guid>
      <pubDate>Mon, 04 Jul 2022 13:05:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24789|2024-08-03T19:42:17.177Z -- unknown -- flat%20preloader
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24789</link>
      <description>The Flat Preloader WordPress plugin before 1.5.5 does not escape some of its settings when outputting them in attribute in the frontend, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24789|2024-08-03T19:42:17.177Z</guid>
      <pubDate>Mon, 01 Nov 2021 08:46:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2299|2024-08-03T00:32:09.608Z -- unknown -- allow%20svg%20files
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2299</link>
      <description>The Allow SVG Files WordPress plugin through 1.1 does not sanitise uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads</description>
      <guid isPermaLink="false">CVE-2022-2299|2024-08-03T00:32:09.608Z</guid>
      <pubDate>Mon, 25 Jul 2022 12:48:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25041|2024-08-03T19:49:14.594Z -- unknown -- photo%20gallery%20by%2010web%20%E2%80%93%20mobile-friendly%20image%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25041</link>
      <description>The Photo Gallery by 10Web WordPress plugin before 1.5.68 is vulnerable to Reflected Cross-Site Scripting (XSS) issues via the bwg_album_breadcrumb_0 and shortcode_id GET parameters passed to the bwg_frontend_data AJAX action</description>
      <guid isPermaLink="false">CVE-2021-25041|2024-08-03T19:49:14.594Z</guid>
      <pubDate>Mon, 06 Dec 2021 15:55:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4000|2024-08-03T01:27:54.040Z -- unknown -- woocommerce%20shipping
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4000</link>
      <description>The WooCommerce Shipping WordPress plugin through 1.2.11 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4000|2024-08-03T01:27:54.040Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24960|2024-08-03T19:49:13.982Z -- unknown -- wordpress%20file%20upload
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24960</link>
      <description>The WordPress File Upload WordPress plugin before 4.16.3, wordpress-file-upload-pro WordPress plugin before 4.16.3 allows users with a role as low as Contributor to configure the upload form in a way that allows uploading of SVG files, which could be then be used for Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2021-24960|2024-08-03T19:49:13.982Z</guid>
      <pubDate>Mon, 07 Mar 2022 08:16:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3829|2024-08-03T01:20:58.480Z -- unknown -- font%20awesome%204%20menus
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3829</link>
      <description>The Font Awesome 4 Menus WordPress plugin through 4.7.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3829|2024-08-03T01:20:58.480Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:53:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4681|2024-08-03T01:48:39.655Z -- unknown -- hide%20my%20wp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4681</link>
      <description>The Hide My WP WordPress plugin before 6.2.9 does not properly sanitize and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection.</description>
      <guid isPermaLink="false">CVE-2022-4681|2024-08-03T01:48:39.655Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24612|2024-08-03T19:35:20.204Z -- unknown -- sociable
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24612</link>
      <description>The Sociable WordPress plugin through 4.3.4.1 does not sanitise or escape some of its settings before outputting them in the admins dashboard, allowing high privilege users to perform Cross-Site Scripting attacks against other users even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24612|2024-08-03T19:35:20.204Z</guid>
      <pubDate>Mon, 18 Oct 2021 13:45:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4384|2024-08-03T01:41:44.451Z -- unknown -- stream
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4384</link>
      <description>The Stream WordPress plugin before 3.9.2 does not prevent users with little privileges on the site (like subscribers) from using its alert creation functionality, which may enable them to leak sensitive information.</description>
      <guid isPermaLink="false">CVE-2022-4384|2024-08-03T01:41:44.451Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24566|2024-08-03T19:35:20.209Z -- unknown -- fox
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24566</link>
      <description>The WooCommerce Currency Switcher FOX WordPress plugin before 1.3.7 was vulnerable to LFI attacks via the "woocs" shortcode.</description>
      <guid isPermaLink="false">CVE-2021-24566|2024-08-03T19:35:20.209Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:48:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2305|2024-08-03T00:32:09.697Z -- unknown -- popups%20%E2%80%93%20wordpress%20popup
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2305</link>
      <description>The WordPress Popup WordPress plugin through 1.9.3.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2305|2024-08-03T00:32:09.697Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:51:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24739|2024-08-03T19:42:16.595Z -- unknown -- logo%20carousel%20%E2%80%93%20logo%20slider%2C%20logo%20showcase%2C%20and%20clients%20logo%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24739</link>
      <description>The Logo Carousel WordPress plugin before 3.4.2 allows users with a role as low as Contributor to duplicate and view arbitrary private posts made by other users via the Carousel Duplication feature</description>
      <guid isPermaLink="false">CVE-2021-24739|2024-08-03T19:42:16.595Z</guid>
      <pubDate>Tue, 21 Dec 2021 08:45:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4667|2024-08-03T01:48:39.430Z -- unknown -- rss%20aggregator%20by%20feedzy
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4667</link>
      <description>The RSS Aggregator by Feedzy WordPress plugin before 4.1.1 does not validate and escape some of its block options before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4667|2024-08-03T01:48:39.430Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4197|2024-08-03T01:34:49.676Z -- unknown -- sliderby10web
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4197</link>
      <description>The Sliderby10Web WordPress plugin before 1.2.53 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4197|2024-08-03T01:34:49.676Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24230|2024-08-03T19:21:18.743Z -- unknown -- patreon%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24230</link>
      <description>The Jetpack Scan team identified a Cross-Site Request Forgery vulnerability in the Patreon WordPress plugin before 1.7.0, allowing attackers to make a logged in user overwrite or create arbitrary user metadata on the victim’s account once visited. If exploited, this bug can be used to overwrite the “wp_capabilities” meta, which contains the affected user account’s roles and privileges. Doing this would essentially lock them out of the site, blocking them from accessing paid content.</description>
      <guid isPermaLink="false">CVE-2021-24230|2024-08-03T19:21:18.743Z</guid>
      <pubDate>Mon, 12 Apr 2021 14:06:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25054|2024-08-03T19:49:14.539Z -- unknown -- wpcalc%20%E2%80%93%20create%20any%20online%20calculators
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25054</link>
      <description>The WPcalc WordPress plugin through 2.1 does not sanitize user input into the 'did' parameter and uses it in a SQL statement, leading to an authenticated SQL Injection vulnerability.</description>
      <guid isPermaLink="false">CVE-2021-25054|2024-08-03T19:49:14.539Z</guid>
      <pubDate>Mon, 10 Jan 2022 15:30:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2658|2024-08-03T00:46:03.605Z -- unknown -- wp%20spell%20check
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2658</link>
      <description>The WP Spell Check WordPress plugin before 9.13 does not escape ignored words, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2658|2024-08-03T00:46:03.605Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3604|2024-08-03T01:14:02.663Z -- unknown -- contact%20form%20entries
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3604</link>
      <description>The Contact Form Entries WordPress plugin before 1.3.0 does not validate data when its output in a CSV file, which could lead to CSV injection.</description>
      <guid isPermaLink="false">CVE-2022-3604|2024-08-03T01:14:02.663Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:52:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3631|2024-08-03T01:14:03.205Z -- unknown -- oauth%20client%20by%20digitialpixies
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3631</link>
      <description>The OAuth Client by DigitialPixies WordPress plugin through 1.1.0 does not sanitize and escapes some of its settings, which could allow high-privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example, in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3631|2024-08-03T01:14:03.205Z</guid>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3558|2024-08-03T01:14:01.544Z -- unknown -- import%20and%20export%20users%20and%20customers
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3558</link>
      <description>The Import and export users and customers WordPress plugin before 1.20.5 does not properly escape data when exporting it via CSV files.</description>
      <guid isPermaLink="false">CVE-2022-3558|2024-08-03T01:14:01.544Z</guid>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-25811|2024-08-03T04:49:44.141Z -- unknown -- transposh%20wordpress%20translation
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-25811</link>
      <description>The Transposh WordPress Translation WordPress plugin through 1.0.8 does not sanitise and escape the order and orderby parameters before using them in a SQL statement, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2022-25811|2024-08-03T04:49:44.141Z</guid>
      <pubDate>Mon, 22 Aug 2022 14:58:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24901|2024-08-03T19:49:13.923Z -- unknown -- security%20audit
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24901</link>
      <description>The Security Audit WordPress plugin through 1.0.0 does not sanitise and escape the Data Id setting, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24901|2024-08-03T19:49:13.923Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24519|2024-08-03T19:35:20.093Z -- unknown -- vikrentcar%20car%20rental%20management%20system
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24519</link>
      <description>The VikRentCar Car Rental Management System WordPress plugin before 1.1.10 does not sanitise the 'Text Next to Icon' field when adding or editing a Characteristic, allowing high privilege users such as admin to use XSS payload in it, leading to an authenticated Stored Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24519|2024-08-03T19:35:20.093Z</guid>
      <pubDate>Mon, 16 Aug 2021 10:48:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24876|2024-08-03T19:49:13.511Z -- unknown -- registrations%20for%20the%20events%20calendar%20%E2%80%93%20event%20registration%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24876</link>
      <description>The Registrations for the Events Calendar WordPress plugin before 2.7.5 does not escape the v parameter before outputting it back in an attribute, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-24876|2024-08-03T19:49:13.511Z</guid>
      <pubDate>Mon, 29 Nov 2021 08:25:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24528|2024-08-03T19:35:20.114Z -- unknown -- fluentsmtp%20%E2%80%93%20wordpress%20mail%20smtp%2C%20ses%2C%20sendgrid%2C%20mailgun%20and%20any%20smtp%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24528</link>
      <description>The FluentSMTP WordPress plugin before 2.0.1 does not sanitize parameters before storing the settings in the database, nor does the plugin escape the values before outputting them when viewing the SMTP settings set by this plugin, leading to a stored cross site scripting (XSS) vulnerability. Only users with roles capable of managing plugins can modify the plugin's settings.</description>
      <guid isPermaLink="false">CVE-2021-24528|2024-08-03T19:35:20.114Z</guid>
      <pubDate>Mon, 30 Aug 2021 14:11:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1539|2024-08-03T00:10:03.492Z -- unknown -- exports%20and%20reports
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1539</link>
      <description>The Exports and Reports WordPress plugin before 0.9.2 does not sanitize and validate data when generating the CSV to export, which could lead to a CSV injection, by the use of Microsoft Excel DDE function, or to leak data via maliciously injected hyperlinks.</description>
      <guid isPermaLink="false">CVE-2022-1539|2024-08-03T00:10:03.492Z</guid>
      <pubDate>Mon, 25 Jul 2022 12:46:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4472|2024-08-03T01:41:44.879Z -- unknown -- simple%20sitemap
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4472</link>
      <description>The Simple Sitemap WordPress plugin before 3.5.8 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4472|2024-08-03T01:41:44.879Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24841|2024-08-03T19:42:17.215Z -- unknown -- helpful
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24841</link>
      <description>The Helpful WordPress plugin before 4.4.59 does not sanitise and escape some of its settings, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24841|2024-08-03T19:42:17.215Z</guid>
      <pubDate>Wed, 17 Nov 2021 10:15:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25090|2024-08-03T19:56:10.579Z -- unknown -- portfolio%20gallery%2C%20product%20catalog%20%E2%80%93%20grid%20kit%20portfolio
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25090</link>
      <description>The Portfolio Gallery, Product Catalog WordPress plugin before 2.1.0 does not have authorisation and CSRF checks in various functions related to AJAX actions, allowing any authenticated users, such as subscriber, to call them. Due to the lack of sanitisation and escaping, it could also allows attackers to perform Cross-Site Scripting attacks on pages where a Portfolio is embed</description>
      <guid isPermaLink="false">CVE-2021-25090|2024-08-03T19:56:10.579Z</guid>
      <pubDate>Mon, 11 Apr 2022 14:40:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1946|2024-08-03T00:24:43.005Z -- unknown -- gallery%20%E2%80%93%20image%20and%20video%20gallery%20with%20thumbnails
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1946</link>
      <description>The Gallery WordPress plugin before 2.0.0 does not sanitise and escape a parameter before outputting it back in the response of an AJAX action (available to both unauthenticated and authenticated users), leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2022-1946|2024-08-03T00:24:43.005Z</guid>
      <pubDate>Mon, 04 Jul 2022 13:05:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2537|2024-08-03T00:39:08.074Z -- unknown -- woocommerce%20pdf%20invoices%20%26%20packing%20slips
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2537</link>
      <description>The WooCommerce PDF Invoices &amp; Packing Slips WordPress plugin before 3.0.1 does not sanitise and escape some parameters before outputting them back in an attributes of an admin page, leading to Reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2022-2537|2024-08-03T00:39:08.074Z</guid>
      <pubDate>Mon, 29 Aug 2022 17:15:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24467|2024-08-03T19:35:19.195Z -- unknown -- leaflet%20map
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24467</link>
      <description>The Leaflet Map WordPress plugin before 3.0.0 does not verify the CSRF nonce when saving its settings, which allows attackers to make a logged in admin update the settings via a Cross-Site Request Forgery attack. This could lead to Cross-Site Scripting issues by either changing the URL of the JavaScript library being used, or using malicious attributions which will be executed in all page with an embed map from the plugin</description>
      <guid isPermaLink="false">CVE-2021-24467|2024-08-03T19:35:19.195Z</guid>
      <pubDate>Mon, 09 Aug 2021 10:04:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3416|2024-08-03T01:07:06.515Z -- unknown -- wptouch
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3416</link>
      <description>The WPtouch WordPress plugin before 4.3.45 does not properly validate images to be uploaded, allowing high privilege users such as admin to upload arbitrary files on the server even when they should not be allowed to (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3416|2024-08-03T01:07:06.515Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24750|2024-08-03T19:42:16.622Z -- unknown -- wp%20visitor%20statistics%20%28real%20time%20traffic%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24750</link>
      <description>The WP Visitor Statistics (Real Time Traffic) WordPress plugin before 4.8 does not properly sanitise and escape the refUrl in the refDetails AJAX action, available to any authenticated user, which could allow users with a role as low as subscriber to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2021-24750|2024-08-03T19:42:16.622Z</guid>
      <pubDate>Tue, 21 Dec 2021 08:45:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24499|2024-08-03T19:35:19.868Z -- unknown -- workreap
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24499</link>
      <description>The Workreap WordPress theme before 2.2.2 AJAX actions workreap_award_temp_file_uploader and workreap_temp_file_uploader did not perform nonce checks, or validate that the request is from a valid user in any other way. The endpoints allowed for uploading arbitrary files to the uploads/workreap-temp directory. Uploaded files were neither sanitized nor validated, allowing an unauthenticated visitor to upload executable code such as php scripts.</description>
      <guid isPermaLink="false">CVE-2021-24499|2024-08-03T19:35:19.868Z</guid>
      <pubDate>Mon, 09 Aug 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24996|2024-08-03T19:49:14.589Z -- unknown -- idpay%20for%20contact%20form%207
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24996</link>
      <description>The IDPay for Contact Form 7 WordPress plugin through 2.1.2 does not sanitise and escape the idpay_error parameter before outputting it back in the page leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-24996|2024-08-03T19:49:14.589Z</guid>
      <pubDate>Mon, 14 Mar 2022 14:41:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24569|2024-08-03T19:35:20.186Z -- unknown -- cookie%20notice%20%26%20compliance%20for%20gdpr%20%2F%20ccpa
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24569</link>
      <description>The Cookie Notice &amp; Compliance for GDPR / CCPA WordPress plugin before 2.1.2 does not escape the value of its Button Text setting when outputting it in an attribute in the frontend, allowing high privilege users such as admin to perform Cross-Site Scripting even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24569|2024-08-03T19:35:20.186Z</guid>
      <pubDate>Mon, 27 Sep 2021 15:25:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4832|2024-08-03T01:55:45.578Z -- unknown -- store%20locator%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4832</link>
      <description>The Store Locator WordPress plugin before 1.4.9 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4832|2024-08-03T01:55:45.578Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4828|2024-08-03T01:55:45.184Z -- unknown -- bold%20timeline%20lite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4828</link>
      <description>The Bold Timeline Lite WordPress plugin before 1.1.5 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4828|2024-08-03T01:55:45.184Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24367|2024-08-03T19:28:23.785Z -- unknown -- wp%20config%20file%20editor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24367</link>
      <description>The WP Config File Editor WordPress plugin through 1.7.1 was affected by an Authenticated Stored Cross-Site Scripting (XSS) vulnerability.</description>
      <guid isPermaLink="false">CVE-2021-24367|2024-08-03T19:28:23.785Z</guid>
      <pubDate>Mon, 21 Jun 2021 19:18:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24522|2024-08-03T19:35:20.107Z -- unknown -- user%20registration%2C%20user%20profile%2C%20login%20%26%20membership%20%E2%80%93%20profilepress%20%28formerly%20wp%20user%20avatar%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24522</link>
      <description>The User Registration, User Profile, Login &amp; Membership – ProfilePress (Formerly WP User Avatar) WordPress plugin before 3.1.11's widget for tabbed login/register was not properly escaped and could be used in an XSS attack which could lead to wp-admin access. Further, the plugin in several places assigned $_POST as $_GET which meant that in some cases this could be replicated with just $_GET parameters and no need for $_POST values.</description>
      <guid isPermaLink="false">CVE-2021-24522|2024-08-03T19:35:20.107Z</guid>
      <pubDate>Mon, 09 Aug 2021 10:04:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25080|2024-08-03T19:56:09.996Z -- unknown -- contact%20form%20entries%20%E2%80%93%20contact%20form%207%2C%20wpforms%20and%20more
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25080</link>
      <description>The Contact Form Entries WordPress plugin before 1.1.7 does not validate, sanitise and escape the IP address retrieved via headers such as CLIENT-IP and X-FORWARDED-FOR, allowing unauthenticated attackers to perform Cross-Site Scripting attacks against logged in admins viewing the created entry</description>
      <guid isPermaLink="false">CVE-2021-25080|2024-08-03T19:56:09.996Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:01:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4789|2024-08-03T01:48:40.490Z -- unknown -- wpzoom%20portfolio
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4789</link>
      <description>The WPZOOM Portfolio WordPress plugin before 1.2.2 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4789|2024-08-03T01:48:40.490Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24890|2024-08-03T19:49:14.364Z -- unknown -- scripts-organizer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24890</link>
      <description>The Scripts Organizer WordPress plugin before 3.0 does not have capability and CSRF checks in the saveScript AJAX action, available to both unauthenticated and authenticated users, and does not validate user input in any way, which could allow unauthenticated users to put arbitrary PHP code in a file</description>
      <guid isPermaLink="false">CVE-2021-24890|2024-08-03T19:49:14.364Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4648|2024-08-03T01:48:39.663Z -- unknown -- real%20testimonials
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4648</link>
      <description>The Real Testimonials WordPress plugin before 2.6.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4648|2024-08-03T01:48:39.663Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4661|2024-08-03T01:48:38.951Z -- unknown -- widgets%20for%20woocommerce%20products%20on%20elementor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4661</link>
      <description>The Widgets for WooCommerce Products on Elementor WordPress plugin before 1.0.8 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4661|2024-08-03T01:48:38.951Z</guid>
      <pubDate>Mon, 13 Mar 2023 16:03:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24441|2024-08-03T19:28:23.991Z -- unknown -- sign-up%20sheets
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24441</link>
      <description>The Sign-up Sheets WordPress plugin before 1.0.14 does not not sanitise or validate the Sheet title when generating the CSV to export, which could lead to a CSV injection issue</description>
      <guid isPermaLink="false">CVE-2021-24441|2024-08-03T19:28:23.991Z</guid>
      <pubDate>Mon, 12 Jul 2021 19:21:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24486|2024-08-03T19:35:19.679Z -- unknown -- simple%20social%20media%20share%20buttons%20%E2%80%93%20social%20sharing%20for%20everyone
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24486</link>
      <description>The Simple Social Media Share Buttons – Social Sharing for Everyone WordPress plugin before 3.2.3 did not escape the align and like_button_size parameters of its SSB shortcode, which could allow users with a role as low as Contributor to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2021-24486|2024-08-03T19:35:19.679Z</guid>
      <pubDate>Mon, 23 Aug 2021 11:09:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4351|2024-08-03T01:34:50.133Z -- unknown -- qe%20seo%20handyman
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4351</link>
      <description>The Qe SEO Handyman WordPress plugin through 1.0 does not properly sanitize and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2022-4351|2024-08-03T01:34:50.133Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24943|2024-08-03T19:49:13.882Z -- unknown -- registrations%20for%20the%20events%20calendar%20%E2%80%93%20event%20registration%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24943</link>
      <description>The Registrations for the Events Calendar WordPress plugin before 2.7.6 does not sanitise and escape the event_id in the rtec_send_unregister_link AJAX action (available to both unauthenticated and authenticated users) before using it in a SQL statement, leading to an unauthenticated SQL injection.</description>
      <guid isPermaLink="false">CVE-2021-24943|2024-08-03T19:49:13.882Z</guid>
      <pubDate>Mon, 06 Dec 2021 15:55:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4340|2024-08-03T01:34:50.175Z -- unknown -- bookingpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4340</link>
      <description>The BookingPress WordPress plugin before 1.0.31 suffers from an Insecure Direct Object Reference (IDOR) vulnerability in it's thank you page, allowing any visitor to display information about any booking, including full name, date, time and service booked, by manipulating the appointment_id query parameter.</description>
      <guid isPermaLink="false">CVE-2022-4340|2024-08-03T01:34:50.175Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2410|2024-08-03T00:39:07.785Z -- unknown -- mtouch%20quiz
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2410</link>
      <description>The mTouch Quiz WordPress plugin through 3.1.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2410|2024-08-03T00:39:07.785Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:49:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4793|2024-08-03T01:48:40.465Z -- unknown -- blog%20designer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4793</link>
      <description>The Blog Designer WordPress plugin before 2.4.1 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4793|2024-08-03T01:48:40.465Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2328|2024-08-03T00:32:09.342Z -- unknown -- flexi%20quote%20rotator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2328</link>
      <description>The Flexi Quote Rotator WordPress plugin through 0.9.4 does not sanitise and escape its settings, allowing high privilege users such as admin to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2328|2024-08-03T00:32:09.342Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:52:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24610|2024-08-03T19:35:20.256Z -- unknown -- translate%20multilingual%20sites%20%E2%80%93%20translatepress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24610</link>
      <description>The TranslatePress WordPress plugin before 2.0.9 does not implement a proper sanitisation on the translated strings. The 'trp_sanitize_string' function only removes script tag with a regex, still allowing other HTML tags and attributes to execute javascript, which could lead to authenticated Stored Cross-Site Scripting issues.</description>
      <guid isPermaLink="false">CVE-2021-24610|2024-08-03T19:35:20.256Z</guid>
      <pubDate>Mon, 27 Sep 2021 15:25:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3395|2024-08-03T01:07:06.527Z -- unknown -- wp%20all%20export%20pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3395</link>
      <description>The WP All Export Pro WordPress plugin before 1.7.9 uses the contents of the cc_sql POST parameter directly as a database query, allowing users which has been given permission to run exports to execute arbitrary SQL statements, leading to a SQL Injection vulnerability. By default only users with the Administrator role can perform exports, but this can be delegated to lower privileged users as well.</description>
      <guid isPermaLink="false">CVE-2022-3395|2024-08-03T01:07:06.527Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2669|2024-08-03T00:46:04.080Z -- unknown -- wp%20taxonomy%20import
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2669</link>
      <description>The WP Taxonomy Import WordPress plugin through 1.0.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2669|2024-08-03T00:46:04.080Z</guid>
      <pubDate>Fri, 16 Sep 2022 08:40:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24571|2024-08-03T19:35:20.191Z -- unknown -- hd%20quiz
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24571</link>
      <description>The HD Quiz WordPress plugin before 1.8.4 does not escape some of its Answers before outputting them in attribute when generating the Quiz, which could lead to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-24571|2024-08-03T19:35:20.191Z</guid>
      <pubDate>Mon, 23 Aug 2021 11:10:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24264|2024-08-03T19:28:22.758Z -- unknown -- image%20hover%20effects%20%E2%80%93%20elementor%20addon
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24264</link>
      <description>The “Image Hover Effects – Elementor Addon” WordPress Plugin before 1.3.4 has a widget that is vulnerable to stored Cross-Site Scripting (XSS) by lower-privileged users such as contributors, all via a similar method.</description>
      <guid isPermaLink="false">CVE-2021-24264|2024-08-03T19:28:22.758Z</guid>
      <pubDate>Wed, 05 May 2021 18:28:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24254|2024-08-03T19:28:22.246Z -- unknown -- college%20publisher%20import
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24254</link>
      <description>The College publisher Import WordPress plugin through 0.1 does not check for the uploaded CSV file to import, allowing high privilege users to upload arbitrary files, such as PHP, leading to RCE. Due to the lack of CSRF check, the issue could also be exploited via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2021-24254|2024-08-03T19:28:22.246Z</guid>
      <pubDate>Wed, 05 May 2021 18:39:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24843|2024-08-03T19:42:17.409Z -- unknown -- supportcandy%20%E2%80%93%20helpdesk%20%26%20support%20ticket%20system
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24843</link>
      <description>The SupportCandy WordPress plugin before 2.2.7 does not have CRSF check in its wpsc_tickets AJAX action, which could allow attackers to make a logged in admin call it and delete arbitrary tickets via the set_delete_permanently_bulk_ticket setting_action.</description>
      <guid isPermaLink="false">CVE-2021-24843|2024-08-03T19:42:17.409Z</guid>
      <pubDate>Mon, 07 Feb 2022 15:47:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25043|2024-08-03T19:49:14.600Z -- unknown -- woocs%20%E2%80%93%20currency%20switcher%20for%20woocommerce.%20professional%20and%20free%20multi%20currency%20plugin%20%E2%80%93%20pay%20in%20selected%20currency
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25043</link>
      <description>The WOOCS WordPress plugin before 1.3.7.3 does not sanitise and escape the custom_prices parameter before outputting it back in the response, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-25043|2024-08-03T19:49:14.600Z</guid>
      <pubDate>Mon, 10 Jan 2022 15:30:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4368|2024-08-03T01:34:50.163Z -- unknown -- wp%20csv
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4368</link>
      <description>The WP CSV WordPress plugin through 1.8.0.0 does not sanitize and escape a parameter before outputting it back in the page when importing a CSV, and doe snot have CSRF checks in place as well, leading to a Reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2022-4368|2024-08-03T01:34:50.163Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24671|2024-08-03T19:42:16.127Z -- unknown -- mx%20time%20zone%20clocks
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24671</link>
      <description>The MX Time Zone Clocks WordPress plugin before 3.4.1 does not escape the time_zone attribute of the mxmtzc_time_zone_clocks shortcode, allowing users with a role as low as Contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2021-24671|2024-08-03T19:42:16.127Z</guid>
      <pubDate>Mon, 27 Sep 2021 15:25:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2115|2024-08-03T00:24:44.274Z -- unknown -- popup%20anything%20%E2%80%93%20a%20marketing%20popup%20and%20lead%20generation%20conversions
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2115</link>
      <description>The Popup Anything WordPress plugin before 2.1.7 does not sanitise and escape a parameter before outputting it back in a frontend page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2115|2024-08-03T00:24:44.274Z</guid>
      <pubDate>Mon, 25 Jul 2022 12:46:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24728|2024-08-03T19:42:16.634Z -- unknown -- membership%20%26%20content%20restriction%20%E2%80%93%20paid%20member%20subscriptions
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24728</link>
      <description>The Membership &amp; Content Restriction – Paid Member Subscriptions WordPress plugin before 2.4.2 did not sanitise, validate or escape its order and orderby parameters before using them in SQL statement, leading to Authenticated SQL Injections in the Members and Payments pages.</description>
      <guid isPermaLink="false">CVE-2021-24728|2024-08-03T19:42:16.634Z</guid>
      <pubDate>Mon, 13 Sep 2021 17:56:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24981|2024-08-03T19:49:14.417Z -- unknown -- directorist%20%E2%80%93%20business%20directory%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24981</link>
      <description>The Directorist WordPress plugin before 7.0.6.2 was vulnerable to Cross-Site Request Forgery to Remote File Upload leading to arbitrary PHP shell uploads in the wp-content/plugins directory.</description>
      <guid isPermaLink="false">CVE-2021-24981|2024-08-03T19:49:14.417Z</guid>
      <pubDate>Tue, 21 Dec 2021 08:45:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25026|2024-08-03T19:49:14.659Z -- unknown -- patreon%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25026</link>
      <description>The Patreon WordPress plugin before 1.8.2 does not sanitise and escape the field "Custom Patreon Page name", which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-25026|2024-08-03T19:49:14.659Z</guid>
      <pubDate>Mon, 14 Mar 2022 14:41:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3894|2024-08-03T01:20:58.779Z -- unknown -- wp%20oauth%20server%20%28oauth%20authentication%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3894</link>
      <description>The WP OAuth Server (OAuth Authentication) WordPress plugin before 4.2.5 does not have CSRF check when deleting a client, and does not ensure that the object to be deleted is actually a client, which could allow attackers to make a logged in admin delete arbitrary client and post via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2022-3894|2024-08-03T01:20:58.779Z</guid>
      <pubDate>Mon, 20 Mar 2023 15:52:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25036|2024-08-03T19:49:14.632Z -- unknown -- all%20in%20one%20seo%20%E2%80%93%20best%20wordpress%20seo%20plugin%20%E2%80%93%20easily%20improve%20seo%20rankings%20%26%20increase%20traffic
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25036</link>
      <description>The All in One SEO WordPress plugin before 4.1.5.3 is affected by a Privilege Escalation issue, which was discovered during an internal audit by the Jetpack Scan team, and may grant bad actors access to protected REST API endpoints they shouldn’t have access to. This could ultimately enable users with low-privileged accounts, like subscribers, to perform remote code execution on affected sites.</description>
      <guid isPermaLink="false">CVE-2021-25036|2024-08-03T19:49:14.632Z</guid>
      <pubDate>Mon, 17 Jan 2022 13:00:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24398|2024-08-03T19:28:23.799Z -- unknown -- responsive%203d%20slider
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24398</link>
      <description>The Add new scene functionality in the Responsive 3D Slider WordPress plugin through 1.2 uses an id parameter which is not sanitised, escaped or validated before being inserted to a SQL statement, leading to SQL injection. This is a time based SQLI and in the same function vulnerable parameter is passed twice so if we pass time as 5 seconds it takes 10 seconds to return since the query is ran twice.</description>
      <guid isPermaLink="false">CVE-2021-24398|2024-08-03T19:28:23.799Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1560|2024-08-03T00:10:03.383Z -- unknown -- amministrazione%20aperta
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1560</link>
      <description>The Amministrazione Aperta WordPress plugin before 3.8 does not validate the open parameter before using it in an include statement, leading to a Local File Inclusion issue. The original advisory mentions that unauthenticated users can exploit this, however the affected file generates a fatal error when accessed directly and the affected code is not reached. The issue can be exploited via the dashboard when logged in as an admin, or by making a logged in admin open a malicious link</description>
      <guid isPermaLink="false">CVE-2022-1560|2024-08-03T00:10:03.383Z</guid>
      <pubDate>Mon, 16 May 2022 14:31:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2094|2024-08-03T00:24:44.174Z -- unknown -- yellow%20yard%20searchbar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2094</link>
      <description>The Yellow Yard Searchbar WordPress plugin before 2.8.2 does not escape some URL parameters before outputting them back to the user, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2094|2024-08-03T00:24:44.174Z</guid>
      <pubDate>Wed, 08 Feb 2023 09:27:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-23179|2024-08-03T03:36:20.059Z -- unknown -- contact%20form%20%26%20lead%20form%20elementor%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-23179</link>
      <description>The Contact Form &amp; Lead Form Elementor Builder WordPress plugin before 1.7.0 does not escape some of its form fields before outputting them in attributes, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2022-23179|2024-08-03T03:36:20.059Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:52:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4109|2024-08-03T01:27:54.413Z -- unknown -- wholesale%20market%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4109</link>
      <description>The Wholesale Market for WooCommerce WordPress plugin before 2.0.0 does not validate user input against path traversal attacks, allowing high privilege users such as admin to download arbitrary logs from the server even when they should not be able to (for example in multisite)</description>
      <guid isPermaLink="false">CVE-2022-4109|2024-08-03T01:27:54.413Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24872|2024-08-03T19:49:14.018Z -- unknown -- get%20custom%20field%20values
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24872</link>
      <description>The Get Custom Field Values WordPress plugin before 4.0 allows users with a role as low as Contributor to access other posts metadata without validating the permissions. Eg. contributors can access admin posts metadata.</description>
      <guid isPermaLink="false">CVE-2021-24872|2024-08-03T19:49:14.018Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:41:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24152|2024-08-03T19:21:18.341Z -- unknown -- popup%20builder%20%E2%80%93%20responsive%20wordpress%20pop%20up%20%E2%80%93%20subscription%20%26%20newsletter
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24152</link>
      <description>The "All Subscribers" setting page of Popup Builder was vulnerable to reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2021-24152|2024-08-03T19:21:18.341Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24229|2024-08-03T19:21:18.861Z -- unknown -- patreon%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24229</link>
      <description>The Jetpack Scan team identified a Reflected Cross-Site Scripting via the patreon_save_attachment_patreon_level AJAX action of the Patreon WordPress plugin before 1.7.2. This AJAX hook is used to update the pledge level required by Patreon subscribers to access a given attachment. This action is accessible for user accounts with the ‘manage_options’ privilege (i.e.., only administrators). Unfortunately, one of the parameters used in this AJAX endpoint is not sanitized before being printed back to the user, so the risk it represents is the same as the previous XSS vulnerability.</description>
      <guid isPermaLink="false">CVE-2021-24229|2024-08-03T19:21:18.861Z</guid>
      <pubDate>Mon, 12 Apr 2021 14:05:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4776|2024-08-03T01:48:40.426Z -- unknown -- cc%20child%20pages
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4776</link>
      <description>The CC Child Pages WordPress plugin before 1.43 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4776|2024-08-03T01:48:40.426Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4548|2024-08-03T01:41:45.614Z -- unknown -- optimize%20images%20alt%20text%20%28alt%20tag%29%20%26%20names%20for%20seo%20using%20ai
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4548</link>
      <description>The Optimize images ALT Text &amp; names for SEO using AI WordPress plugin before 2.0.8 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged-in admin change them via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2022-4548|2024-08-03T01:41:45.614Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2354|2024-08-03T00:32:09.812Z -- unknown -- wp-dbmanager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2354</link>
      <description>The WP-DBManager WordPress plugin before 2.80.8 does not prevent administrators from running arbitrary commands on the server in multisite installations, where only super-administrators should.</description>
      <guid isPermaLink="false">CVE-2022-2354|2024-08-03T00:32:09.812Z</guid>
      <pubDate>Mon, 15 Aug 2022 08:36:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24928|2024-08-03T19:49:14.008Z -- unknown -- rearrange%20woocommerce%20products
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24928</link>
      <description>The Rearrange Woocommerce Products WordPress plugin before 3.0.8 does not have proper access controls in the save_all_order AJAX action, nor validation and escaping when inserting user data in SQL statement, leading to an SQL injection, and allowing any authenticated user, such as subscriber, to modify arbitrary post content (for example with an XSS payload), as well as exfiltrate any data by copying it to another post.</description>
      <guid isPermaLink="false">CVE-2021-24928|2024-08-03T19:49:14.008Z</guid>
      <pubDate>Mon, 07 Feb 2022 15:47:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24767|2024-08-03T19:42:17.031Z -- unknown -- redirect%20404%20error%20page%20to%20homepage%20or%20custom%20page%20with%20logs
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24767</link>
      <description>The Redirect 404 Error Page to Homepage or Custom Page with Logs WordPress plugin before 1.7.9 does not check for CSRF when deleting logs, which could allow attacker to make a logged in admin delete them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2021-24767|2024-08-03T19:42:17.031Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:35:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24679|2024-08-03T19:42:16.163Z -- unknown -- bitcoin%20%2F%20altcoin%20payment%20gateway%20for%20woocommerce%20%26%20multivendor%20store%20%2F%20shop
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24679</link>
      <description>The Bitcoin / AltCoin Payment Gateway for WooCommerce WordPress plugin before 1.6.1 does not escape the 's' GET parameter before outputting back in the All Masking Rules page, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24679|2024-08-03T19:42:16.163Z</guid>
      <pubDate>Mon, 04 Oct 2021 11:20:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24547|2024-08-03T19:35:20.141Z -- unknown -- kn%20fix%20your%20title
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24547</link>
      <description>The KN Fix Your Title WordPress plugin through 1.0.1 was vulnerable to Authenticated Stored XSS in the separator field.</description>
      <guid isPermaLink="false">CVE-2021-24547|2024-08-03T19:35:20.141Z</guid>
      <pubDate>Mon, 23 Aug 2021 11:10:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24837|2024-08-03T19:42:17.209Z -- unknown -- passster
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24837</link>
      <description>The Passster WordPress plugin before 3.5.5.8 does not escape the area parameter of its shortcode, which could allow users with a role as low as Contributor to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2021-24837|2024-08-03T19:42:17.209Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3690|2024-08-03T01:14:03.298Z -- unknown -- popup%20maker
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3690</link>
      <description>The Popup Maker WordPress plugin before 1.16.11 does not sanitise and escape some of its Popup options, which could allow users with a role as low as Contributor to perform Stored Cross-Site Scripting attacks, which could be used against admins</description>
      <guid isPermaLink="false">CVE-2022-3690|2024-08-03T01:14:03.298Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4751|2024-08-03T01:48:40.233Z -- unknown -- word%20balloon
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4751</link>
      <description>The Word Balloon WordPress plugin before 4.19.3 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4751|2024-08-03T01:48:40.233Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24271|2024-08-03T19:28:22.719Z -- unknown -- ultimate%20addons%20for%20elementor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24271</link>
      <description>The “Ultimate Addons for Elementor” WordPress Plugin before 1.30.0 has several widgets that are vulnerable to stored Cross-Site Scripting (XSS) by lower-privileged users such as contributors, all via a similar method.</description>
      <guid isPermaLink="false">CVE-2021-24271|2024-08-03T19:28:22.719Z</guid>
      <pubDate>Wed, 05 May 2021 18:28:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2557|2024-08-03T00:39:08.000Z -- unknown -- team%20%E2%80%93%20wordpress%20team%20members%20showcase%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2557</link>
      <description>The Team WordPress plugin before 4.1.2 contains a file which could allow any authenticated users to download arbitrary files from the server via a path traversal vector. Furthermore, the file will also be deleted after its content is returned to the user</description>
      <guid isPermaLink="false">CVE-2022-2557|2024-08-03T00:39:08.000Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:04:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4266|2024-08-03T01:34:49.994Z -- unknown -- bulk%20delete%20users%20by%20email
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4266</link>
      <description>The Bulk Delete Users by Email WordPress plugin through 1.2 does not have CSRF check when deleting users, which could allow attackers to make a logged in admin delete non admin users by knowing their email via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-4266|2024-08-03T01:34:49.994Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24738|2024-08-03T19:42:16.870Z -- unknown -- logo%20carousel%20%E2%80%93%20logo%20slider%2C%20logo%20showcase%2C%20and%20clients%20logo%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24738</link>
      <description>The Logo Carousel WordPress plugin before 3.4.2 does not validate and escape the "Logo Margin" carousel option, which could allow users with a role as low as Contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2021-24738|2024-08-03T19:42:16.870Z</guid>
      <pubDate>Tue, 21 Dec 2021 08:45:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1683|2024-08-03T00:10:03.749Z -- unknown -- amtythumb
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1683</link>
      <description>The amtyThumb WordPress plugin through 4.2.0 does not sanitise and escape a parameter before using it in a SQL statement via its shortcode, leading to an SQL injection and is exploitable by any authenticated user (and not just Author+ like the original advisory mention) due to the fact that they can execute shortcodes via an AJAX action</description>
      <guid isPermaLink="false">CVE-2022-1683|2024-08-03T00:10:03.749Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4106|2024-08-03T01:27:54.544Z -- unknown -- wholesale%20market%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4106</link>
      <description>The Wholesale Market for WooCommerce WordPress plugin before 1.0.7 does not have authorisation check, as well as does not validate user input used to generate system path, allowing unauthenticated attackers to download arbitrary file from the server.</description>
      <guid isPermaLink="false">CVE-2022-4106|2024-08-03T01:27:54.544Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4488|2024-08-03T01:41:45.024Z -- unknown -- widgets%20on%20pages
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4488</link>
      <description>The Widgets on Pages WordPress plugin before 1.8.0 does not validate and escape its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4488|2024-08-03T01:41:45.024Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1847|2024-08-03T00:17:00.404Z -- unknown -- rotating%20posts
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1847</link>
      <description>The Rotating Posts WordPress plugin through 1.11 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1847|2024-08-03T00:17:00.404Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:58:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1624|2024-08-03T00:10:03.893Z -- unknown -- latest%20tweets%20widget
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1624</link>
      <description>The Latest Tweets Widget WordPress plugin through 1.1.4 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1624|2024-08-03T00:10:03.893Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1564|2024-08-03T00:10:03.623Z -- unknown -- form%20maker%20by%2010web%20%E2%80%93%20mobile-friendly%20drag%20%26%20drop%20contact%20form%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1564</link>
      <description>The Form Maker by 10Web WordPress plugin before 1.14.12 does not sanitize and escape the Custom Text settings, which could allow high privilege user such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1564|2024-08-03T00:10:03.623Z</guid>
      <pubDate>Mon, 30 May 2022 08:35:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2834|2024-08-03T00:52:58.931Z -- unknown -- helpful
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2834</link>
      <description>The Helpful WordPress plugin before 4.5.26 puts the exported logs and feedbacks in a publicly accessible location and guessable names, which could allow attackers to download them and retrieve sensitive information such as IP, Names and Email Address depending on the plugin's settings</description>
      <guid isPermaLink="false">CVE-2022-2834|2024-08-03T00:52:58.931Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3919|2024-08-03T01:20:58.778Z -- unknown -- jetpack%20crm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3919</link>
      <description>The Jetpack CRM WordPress plugin before 5.4.3 does not sanitise and escape its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-3919|2024-08-03T01:20:58.778Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4693|2024-08-03T01:48:39.545Z -- unknown -- user%20verification
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4693</link>
      <description>The User Verification WordPress plugin before 1.0.94 was affected by an Auth Bypass security vulnerability. To bypass authentication, we only need to know the user’s username. Depending on whose username we know, which can be easily queried because it is usually public data, we may even be given an administrative role on the website.</description>
      <guid isPermaLink="false">CVE-2022-4693|2024-08-03T01:48:39.545Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3126|2024-08-03T01:00:09.662Z -- unknown -- frontend%20file%20manager%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3126</link>
      <description>The Frontend File Manager Plugin WordPress plugin before 21.4 does not have CSRF check when uploading files, which could allow attackers to make logged in users upload files on their behalf</description>
      <guid isPermaLink="false">CVE-2022-3126|2024-08-03T01:00:09.662Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4151|2024-08-03T01:27:54.463Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4151</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the option_id GET parameter before concatenating it to an SQL query in export-images-data.php. This may allow malicious users with at least author privilege to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4151|2024-08-03T01:27:54.463Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3539|2024-08-03T01:14:02.480Z -- unknown -- testimonials
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3539</link>
      <description>The Testimonials WordPress plugin before 2.7, super-testimonial-pro WordPress plugin before 1.0.8 do not sanitize and escape its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-3539|2024-08-03T01:14:02.480Z</guid>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2314|2024-08-03T00:32:09.676Z -- unknown -- vr%20calendar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2314</link>
      <description>The VR Calendar WordPress plugin through 2.3.2 lets any user execute arbitrary PHP functions on the site.</description>
      <guid isPermaLink="false">CVE-2022-2314|2024-08-03T00:32:09.676Z</guid>
      <pubDate>Mon, 15 Aug 2022 08:36:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1960|2024-08-03T00:24:43.987Z -- unknown -- mycss
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1960</link>
      <description>The MyCSS WordPress plugin through 1.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1960|2024-08-03T00:24:43.987Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:58:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1829|2024-08-03T00:16:59.969Z -- unknown -- inline%20google%20maps
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1829</link>
      <description>The Inline Google Maps WordPress plugin through 5.11 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack, and lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping</description>
      <guid isPermaLink="false">CVE-2022-1829|2024-08-03T00:16:59.969Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2268|2024-08-03T00:32:09.466Z -- unknown -- import%20any%20xml%20or%20csv%20file%20to%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2268</link>
      <description>The Import any XML or CSV File to WordPress plugin before 3.6.8 accepts all zip files and automatically extracts the zip file without validating the extracted file type. Allowing high privilege users such as admin to upload an arbitrary file like PHP, leading to RCE</description>
      <guid isPermaLink="false">CVE-2022-2268|2024-08-03T00:32:09.466Z</guid>
      <pubDate>Mon, 04 Jul 2022 13:06:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24988|2024-08-03T19:49:14.547Z -- unknown -- wp%20rss%20aggregator%20%E2%80%93%20news%20feeds%2C%20autoblogging%2C%20youtube%20video%20feeds%20and%20more
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24988</link>
      <description>The WP RSS Aggregator WordPress plugin before 4.19.3 does not sanitise and escape data before outputting it in the System Info admin dashboard, which could lead to a Stored XSS issue due to the wprss_dismiss_addon_notice AJAX action missing authorisation and CSRF checks, allowing any authenticated users, such as subscriber to call it and set a malicious payload in the addon parameter.</description>
      <guid isPermaLink="false">CVE-2021-24988|2024-08-03T19:49:14.547Z</guid>
      <pubDate>Mon, 27 Dec 2021 10:33:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24390|2024-08-03T19:28:23.974Z -- unknown -- wordpress%E6%94%AF%E4%BB%98%E5%AE%9Dalipay%7C%E8%B4%A2%E4%BB%98%E9%80%9Atenpay%7C%E8%B4%9D%E5%AE%9Dpaypal%E9%9B%86%E6%88%90%E6%8F%92%E4%BB%B6
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24390</link>
      <description>A proid GET parameter of the WordPress支付宝Alipay|财付通Tenpay|贝宝PayPal集成插件 WordPress plugin through 3.7.2 is not sanitised, properly escaped or validated before inserting to a SQL statement not delimited by quotes, leading to SQL injection.</description>
      <guid isPermaLink="false">CVE-2021-24390|2024-08-03T19:28:23.974Z</guid>
      <pubDate>Mon, 06 Sep 2021 11:09:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4049|2024-08-03T01:27:54.126Z -- unknown -- wp%20user
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4049</link>
      <description>The WP User WordPress plugin through 7.0 does not properly sanitize and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by unauthenticated users.</description>
      <guid isPermaLink="false">CVE-2022-4049|2024-08-03T01:27:54.126Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4829|2024-08-03T01:55:45.912Z -- unknown -- show-hide%20%2F%20collapse-expand
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4829</link>
      <description>The Show-Hide / Collapse-Expand WordPress plugin before 1.3.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4829|2024-08-03T01:55:45.912Z</guid>
      <pubDate>Mon, 27 Feb 2023 15:24:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24672|2024-08-03T19:42:15.980Z -- unknown -- one%20user%20avatar%20%7C%20user%20profile%20picture
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24672</link>
      <description>The One User Avatar WordPress plugin before 2.3.7 does not escape the link and target attributes of its shortcode, allowing users with a role as low as Contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2021-24672|2024-08-03T19:42:15.980Z</guid>
      <pubDate>Mon, 18 Oct 2021 13:45:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24712|2024-08-03T19:42:16.117Z -- unknown -- appointment%20hour%20booking%20%E2%80%93%20wordpress%20booking%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24712</link>
      <description>The Appointment Hour Booking WordPress plugin before 1.3.17 does not properly sanitize values used when creating new calendars.</description>
      <guid isPermaLink="false">CVE-2021-24712|2024-08-03T19:42:16.117Z</guid>
      <pubDate>Mon, 11 Oct 2021 10:45:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1915|2024-08-03T00:17:00.931Z -- unknown -- wp%20zillow%20review%20slider
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1915</link>
      <description>The WP Zillow Review Slider WordPress plugin before 2.4 does not escape a settings, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite)</description>
      <guid isPermaLink="false">CVE-2022-1915|2024-08-03T00:17:00.931Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4718|2024-08-03T01:48:39.977Z -- unknown -- landing%20page%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4718</link>
      <description>The Landing Page Builder WordPress plugin before 1.4.9.9 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4718|2024-08-03T01:48:39.977Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:32:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3618|2024-08-03T01:14:02.855Z -- unknown -- spacer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3618</link>
      <description>The Spacer WordPress plugin before 3.0.7 does not sanitize and escapes some of its settings, which could allow high-privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example, in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3618|2024-08-03T01:14:02.855Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2983|2024-08-03T00:52:59.872Z -- unknown -- salat%20times
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2983</link>
      <description>The Salat Times WordPress plugin before 3.2.2 does not sanitize and escapes its settings, allowing high-privilege users such as admin to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2983|2024-08-03T00:52:59.872Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1758|2024-08-03T00:16:59.867Z -- unknown -- genki%20pre-publish%20reminder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1758</link>
      <description>The Genki Pre-Publish Reminder WordPress plugin through 1.4.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and lead to Stored XSS as well as RCE when custom code is added via the plugin settings.</description>
      <guid isPermaLink="false">CVE-2022-1758|2024-08-03T00:16:59.867Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4474|2024-08-03T01:41:44.982Z -- unknown -- easy%20social%20feed
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4474</link>
      <description>The Easy Social Feed WordPress plugin before 6.4.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2022-4474|2024-08-03T01:41:44.982Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24668|2024-08-03T19:42:16.152Z -- unknown -- maz%20loader%20%E2%80%93%20preloader%20builder%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24668</link>
      <description>The MAZ Loader WordPress plugin before 1.4.1 does not enforce nonce checks, which allows attackers to make administrators delete arbitrary loaders via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2021-24668|2024-08-03T19:42:16.152Z</guid>
      <pubDate>Tue, 23 Nov 2021 19:16:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2371|2024-08-03T00:32:09.561Z -- unknown -- yaysmtp%20%E2%80%93%20simple%20wp%20smtp%20mail
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2371</link>
      <description>The YaySMTP WordPress plugin before 2.2.1 does not have proper authorisation when saving its settings, allowing users with a role as low as subscriber to change them, and use that to conduct Stored Cross-Site Scripting attack due to the lack of escaping in them as well.</description>
      <guid isPermaLink="false">CVE-2022-2371|2024-08-03T00:32:09.561Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:47:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2544|2024-08-03T00:39:08.036Z -- unknown -- ninja%20job%20board%20%E2%80%93%20ultimate%20wordpress%20job%20board%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2544</link>
      <description>The Ninja Job Board WordPress plugin before 1.3.3 does not protect the directory where it stores uploaded resumes, making it vulnerable to unauthenticated Directory Listing which allows the download of uploaded resumes.</description>
      <guid isPermaLink="false">CVE-2022-2544|2024-08-03T00:39:08.036Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:03:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4482|2024-08-03T01:41:44.749Z -- unknown -- carousel%2C%20slider%2C%20gallery%20by%20wp%20carousel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4482</link>
      <description>The Carousel, Slider, Gallery by WP Carousel WordPress plugin before 2.5.3 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4482|2024-08-03T01:41:44.749Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25074|2024-08-03T19:56:09.466Z -- unknown -- webp%20converter%20for%20media%20%E2%80%93%20convert%20webp%20and%20avif%20%26%20optimize%20images
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25074</link>
      <description>The WebP Converter for Media WordPress plugin before 4.0.3 contains a file (passthru.php) which does not validate the src parameter before redirecting the user to it, leading to an Open Redirect issue</description>
      <guid isPermaLink="false">CVE-2021-25074|2024-08-03T19:56:09.466Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:01:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2627|2024-08-03T00:46:03.419Z -- unknown -- newspaper
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2627</link>
      <description>The Newspaper WordPress theme before 12 does not sanitise a parameter before outputting it back in an HTML attribute via an AJAX action, leading to a Reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2022-2627|2024-08-03T00:46:03.419Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24676|2024-08-03T19:42:16.023Z -- unknown -- better%20find%20and%20replace
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24676</link>
      <description>The Better Find and Replace WordPress plugin before 1.2.9 does not escape the 's' GET parameter before outputting back in the All Masking Rules page, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24676|2024-08-03T19:42:16.023Z</guid>
      <pubDate>Mon, 04 Oct 2021 11:20:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25115|2024-08-03T19:56:10.439Z -- unknown -- wp%20photo%20album%20plus
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25115</link>
      <description>The WP Photo Album Plus WordPress plugin before 8.0.10 was vulnerable to Stored Cross-Site Scripting (XSS). Error log content was handled improperly, therefore any user, even unauthenticated, could cause arbitrary javascript to be executed in the admin panel.</description>
      <guid isPermaLink="false">CVE-2021-25115|2024-08-03T19:56:10.439Z</guid>
      <pubDate>Mon, 14 Feb 2022 09:20:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24689|2024-08-03T19:42:16.217Z -- unknown -- contact%20forms%20%E2%80%93%20drag%20%26%20drop%20contact%20form%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24689</link>
      <description>The Contact Forms - Drag &amp; Drop Contact Form Builder WordPress plugin through 1.0.5 allows high privilege users to download arbitrary files from the web server via a path traversal attack</description>
      <guid isPermaLink="false">CVE-2021-24689|2024-08-03T19:42:16.217Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24827|2024-08-03T19:42:17.212Z -- unknown -- asgaros%20forum
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24827</link>
      <description>The Asgaros Forum WordPress plugin before 1.15.13 does not validate and escape user input when subscribing to a topic before using it in a SQL statement, leading to an unauthenticated SQL injection issue</description>
      <guid isPermaLink="false">CVE-2021-24827|2024-08-03T19:42:17.212Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:35:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2635|2024-08-03T00:46:03.470Z -- unknown -- autoptimize
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2635</link>
      <description>The Autoptimize WordPress plugin before 3.1.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2635|2024-08-03T00:46:03.470Z</guid>
      <pubDate>Fri, 16 Sep 2022 08:40:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4759|2024-08-03T01:48:40.413Z -- unknown -- gigpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4759</link>
      <description>The GigPress WordPress plugin before 2.3.28 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4759|2024-08-03T01:48:40.413Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24342|2024-08-03T19:28:23.516Z -- unknown -- jnews
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24342</link>
      <description>The JNews WordPress theme before 8.0.6 did not sanitise the cat_id parameter in the POST request /?ajax-request=jnews (with action=jnews_build_mega_category_*), leading to a Reflected Cross-Site Scripting (XSS) issue.</description>
      <guid isPermaLink="false">CVE-2021-24342|2024-08-03T19:28:23.516Z</guid>
      <pubDate>Mon, 07 Jun 2021 10:49:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2926|2024-08-03T00:52:59.919Z -- unknown -- download%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2926</link>
      <description>The Download Manager WordPress plugin before 3.2.55 does not validate one of its settings, which could allow high privilege users such as admin to list and read arbitrary files and folders outside of the blog directory</description>
      <guid isPermaLink="false">CVE-2022-2926|2024-08-03T00:52:59.919Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24678|2024-08-03T19:42:15.975Z -- unknown -- cm%20tooltip%20glossary%20%E2%80%93%20better%20seo%20and%20uex%20for%20your%20wp%20site
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24678</link>
      <description>The CM Tooltip Glossary WordPress plugin before 3.9.21 does not escape some glossary_tooltip shortcode attributes, which could allow users a role as low as Contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2021-24678|2024-08-03T19:42:15.975Z</guid>
      <pubDate>Mon, 04 Oct 2021 11:20:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2762|2024-08-03T00:46:04.494Z -- unknown -- adminpad
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2762</link>
      <description>The AdminPad WordPress plugin before 2.2 does not have CSRF check when updating admin's note, allowing attackers to make a logged in admin update their notes via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-2762|2024-08-03T00:46:04.494Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3074|2024-08-03T01:00:10.538Z -- unknown -- slider%20hero%20with%20animation%2C%20video%20background
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3074</link>
      <description>The Slider Hero WordPress plugin before 8.4.4 does not escape the slider Name, which could allow high-privileged users to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-3074|2024-08-03T01:00:10.538Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4329|2024-08-03T01:34:50.140Z -- unknown -- product%20list%20widget%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4329</link>
      <description>The Product list Widget for Woocommerce WordPress plugin through 1.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against both unauthenticated and authenticated users (such as high privilege one like admin).</description>
      <guid isPermaLink="false">CVE-2022-4329|2024-08-03T01:34:50.140Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24731|2024-08-03T19:42:16.658Z -- unknown -- registration%20forms%20%E2%80%93%20user%20profile%2C%20content%20restriction%2C%20spam%20protection%2C%20payment%20gateways%2C%20invitation%20codes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24731</link>
      <description>The Registration Forms – User profile, Content Restriction, Spam Protection, Payment Gateways, Invitation Codes WordPress plugin before 3.7.1.6 does not properly escape user data before using it in a SQL statement in the wp-json/pie/v1/login REST API endpoint, leading to an SQL injection.</description>
      <guid isPermaLink="false">CVE-2021-24731|2024-08-03T19:42:16.658Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:35:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24817|2024-08-03T19:42:17.351Z -- unknown -- ultimate%20nofollow
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24817</link>
      <description>The Ultimate NoFollow WordPress plugin through 1.4.8 does not sanitise and escape the href attribute of its shortcodes, allowing users with a role as low as contributor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2021-24817|2024-08-03T19:42:17.351Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:40:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2593|2024-08-03T00:39:07.994Z -- unknown -- better%20search%20replace
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2593</link>
      <description>The Better Search Replace WordPress plugin before 1.4.1 does not properly sanitise and escape table data before inserting it into a SQL query, which could allow high privilege users to perform SQL Injection attacks</description>
      <guid isPermaLink="false">CVE-2022-2593|2024-08-03T00:39:07.994Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:04:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4301|2024-08-03T01:34:50.057Z -- unknown -- sunshine%20photo%20cart
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4301</link>
      <description>The Sunshine Photo Cart WordPress plugin before 2.9.15 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2022-4301|2024-08-03T01:34:50.057Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4101|2024-08-03T01:27:54.487Z -- unknown -- images%20optimize%20and%20upload%20cf7
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4101</link>
      <description>The Images Optimize and Upload CF7 WordPress plugin through 2.1.4 does not validate the file to be deleted via an AJAX action available to unauthenticated users, which could allow them to delete arbitrary files on the server via path traversal attack.</description>
      <guid isPermaLink="false">CVE-2022-4101|2024-08-03T01:27:54.487Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3762|2024-08-03T01:20:57.608Z -- unknown -- booster%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3762</link>
      <description>The Booster for WooCommerce WordPress plugin before 5.6.7, Booster Plus for WooCommerce WordPress plugin before 5.6.5, Booster Elite for WooCommerce WordPress plugin before 1.1.7 do not validate files to download in some of its modules, which could allow ShopManager and Admin to download arbitrary files from the server even when they are not supposed to be able to (for example in multisite)</description>
      <guid isPermaLink="false">CVE-2022-3762|2024-08-03T01:20:57.608Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24451|2024-08-03T19:28:23.930Z -- unknown -- export%20users%20with%20meta
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24451</link>
      <description>The Export Users With Meta WordPress plugin before 0.6.5 did not escape the list of roles to export before using them in a SQL statement in the export functionality, available to admins, leading to an authenticated SQL Injection.</description>
      <guid isPermaLink="false">CVE-2021-24451|2024-08-03T19:28:23.930Z</guid>
      <pubDate>Tue, 06 Jul 2021 11:03:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4107|2024-08-03T01:27:54.474Z -- unknown -- smsa%20shipping%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4107</link>
      <description>The SMSA Shipping for WooCommerce WordPress plugin before 1.0.5 does not have authorisation and proper CSRF checks, as well as does not validate the file to be downloaded, allowing any authenticated users, such as subscriber to download arbitrary file from the server</description>
      <guid isPermaLink="false">CVE-2022-4107|2024-08-03T01:27:54.474Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4162|2024-08-03T01:34:48.806Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4162</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the cg_row POST parameter before concatenating it to an SQL query in 3_row-order.php. This may allow malicious users with at least author privilege to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4162|2024-08-03T01:34:48.806Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4161|2024-08-03T01:34:48.791Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4161</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the cg_copy_start POST parameter before concatenating it to an SQL query in copy-gallery-images.php. This may allow malicious users with at least author privilege to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4161|2024-08-03T01:34:48.791Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:27:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24637|2024-08-03T19:35:20.271Z -- unknown -- fonts%20plugin%20%7C%20google%20fonts%20typography
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24637</link>
      <description>The Google Fonts Typography WordPress plugin before 3.0.3 does not escape and sanitise some of its block settings, allowing users with as role as low as Contributor to perform Stored Cross-Site Scripting attacks via blockType (combined with content), align, color, variant and fontID argument of a Gutenberg block.</description>
      <guid isPermaLink="false">CVE-2021-24637|2024-08-03T19:35:20.271Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24657|2024-08-03T19:35:20.431Z -- unknown -- limit%20login%20attempts
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24657</link>
      <description>The Limit Login Attempts WordPress plugin before 4.0.50 does not escape the IP addresses (which can be controlled by attacker via headers such as X-Forwarded-For) of attempted logins before outputting them in the reports table, leading to an Unauthenticated Stored Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-24657|2024-08-03T19:35:20.431Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2378|2024-08-03T00:39:06.235Z -- unknown -- easy%20student%20results
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2378</link>
      <description>The Easy Student Results WordPress plugin through 2.2.8 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2378|2024-08-03T00:39:06.235Z</guid>
      <pubDate>Mon, 15 Aug 2022 08:37:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24435|2024-08-03T19:28:23.965Z -- unknown -- titan%20framework
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24435</link>
      <description>The iframe-font-preview.php file of the titan-framework does not properly escape the font-weight and font-family GET parameters before outputting them back in an href attribute, leading to Reflected Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-24435|2024-08-03T19:28:23.965Z</guid>
      <pubDate>Mon, 06 Sep 2021 11:09:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24297|2024-08-03T19:28:23.925Z -- unknown -- goto
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24297</link>
      <description>The Goto WordPress theme before 2.1 did not properly sanitize the formvalue JSON POST parameter in its tl_filter AJAX action, leading to an unauthenticated Reflected Cross-site Scripting (XSS) vulnerability.</description>
      <guid isPermaLink="false">CVE-2021-24297|2024-08-03T19:28:23.925Z</guid>
      <pubDate>Mon, 24 May 2021 10:58:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2099|2024-08-03T00:24:44.425Z -- unknown -- woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2099</link>
      <description>The WooCommerce WordPress plugin before 6.6.0 is vulnerable to stored HTML injection due to lack of escaping and sanitizing in the payment gateway titles</description>
      <guid isPermaLink="false">CVE-2022-2099|2024-08-03T00:24:44.425Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:35:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2411|2024-08-03T00:39:07.269Z -- unknown -- auto%20more%20tag
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2411</link>
      <description>The Auto More Tag WordPress plugin through 4.0.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2411|2024-08-03T00:39:07.269Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:49:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1827|2024-08-03T00:17:00.867Z -- unknown -- pdf24%20article%20to%20pdf
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1827</link>
      <description>The PDF24 Article To PDF WordPress plugin through 4.2.2 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1827|2024-08-03T00:17:00.867Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24595|2024-08-03T19:35:20.227Z -- unknown -- wp%20cookie%20choice
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24595</link>
      <description>The Wp Cookie Choice WordPress plugin through 1.1.0 is lacking any CSRF check when saving its options, and do not escape them when outputting them in attributes. As a result, an attacker could make a logged in admin change them to arbitrary values including XSS payloads via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2021-24595|2024-08-03T19:35:20.227Z</guid>
      <pubDate>Mon, 18 Oct 2021 13:45:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24903|2024-08-03T19:49:13.972Z -- unknown -- album%20and%20image%20gallery%20with%20lightbox%20%E2%80%93%20flagallery%20photo%20portfolio
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24903</link>
      <description>The GRAND FlaGallery WordPress plugin through 6.1.2 does not sanitise and escape some of its gallery settings, which could allow high privilege users to perform Cross-Site scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24903|2024-08-03T19:49:13.972Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4307|2024-08-03T01:34:50.151Z -- unknown -- %D9%BE%D9%84%D8%A7%DA%AF%DB%8C%D9%86%20%D9%BE%D8%B1%D8%AF%D8%A7%D8%AE%D8%AA%20%D8%AF%D9%84%D8%AE%D9%88%D8%A7%D9%87
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4307</link>
      <description>The پلاگین پرداخت دلخواه WordPress plugin before 2.9.3 does not sanitise and escape some parameters, allowing unauthenticated attackers to send a request with XSS payloads, which will be triggered when a high privilege users such as admin visits a page from the plugin.</description>
      <guid isPermaLink="false">CVE-2022-4307|2024-08-03T01:34:50.151Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24864|2024-08-03T19:49:13.903Z -- unknown -- wp%20cloudy%2C%20weather%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24864</link>
      <description>The WP Cloudy, weather plugin WordPress plugin before 4.4.9 does not escape the post_id parameter before using it in a SQL statement in the admin dashboard, leading to a SQL Injection issue</description>
      <guid isPermaLink="false">CVE-2021-24864|2024-08-03T19:49:13.903Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4787|2024-08-03T01:48:40.469Z -- unknown -- themify%20shortcodes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4787</link>
      <description>Themify Shortcodes WordPress plugin before 2.0.8 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4787|2024-08-03T01:48:40.469Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4622|2024-08-03T01:48:40.411Z -- unknown -- login%20logout%20menu
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4622</link>
      <description>The Login Logout Menu WordPress plugin through 1.3.3 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4622|2024-08-03T01:48:40.411Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24618|2024-08-03T19:35:20.292Z -- unknown -- donate%20with%20qrcode
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24618</link>
      <description>The Donate With QRCode WordPress plugin before 1.4.5 does not sanitise or escape its QRCode Image setting, which result into a Stored Cross-Site Scripting (XSS). Furthermore, the plugin also does not have any CSRF and capability checks in place when saving such setting, allowing any authenticated user (as low as subscriber), or unauthenticated user via a CSRF vector to update them and perform such attack.</description>
      <guid isPermaLink="false">CVE-2021-24618|2024-08-03T19:35:20.292Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4825|2024-08-03T01:55:44.211Z -- unknown -- wp-showhide
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4825</link>
      <description>The WP-ShowHide WordPress plugin before 1.05 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4825|2024-08-03T01:55:44.211Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24944|2024-08-03T19:49:13.514Z -- unknown -- custom%20dashboard%20%26%20login%20page%20%E2%80%93%20agca
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24944</link>
      <description>The Custom Dashboard &amp; Login Page WordPress plugin before 7.0 does not sanitise some of its settings, allowing high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24944|2024-08-03T19:49:13.514Z</guid>
      <pubDate>Tue, 01 Feb 2022 12:21:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-23180|2024-08-03T03:36:19.950Z -- unknown -- contact%20form%20%26%20lead%20form%20elementor%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-23180</link>
      <description>The Contact Form &amp; Lead Form Elementor Builder WordPress plugin before 1.7.4 doesn't have authorisation and nonce checks, which could allow any authenticated users, such as subscriber to update and change various settings</description>
      <guid isPermaLink="false">CVE-2022-23180|2024-08-03T03:36:19.950Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:52:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24344|2024-08-03T19:28:23.440Z -- unknown -- easy%20preloader
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24344</link>
      <description>The Easy Preloader WordPress plugin through 1.0.0 does not sanitise its setting fields, leading to authenticated (admin+) Stored Cross-Site scripting issues</description>
      <guid isPermaLink="false">CVE-2021-24344|2024-08-03T19:28:23.440Z</guid>
      <pubDate>Mon, 07 Jun 2021 10:49:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24504|2024-08-03T19:35:20.022Z -- unknown -- wp%20lms%20%E2%80%93%20best%20wordpress%20lms%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24504</link>
      <description>The WP LMS – Best WordPress LMS Plugin WordPress plugin through 1.1.2 does not properly sanitise or validate its User Field Titles, allowing XSS payload to be used in them. Furthermore, no CSRF and capability checks were in place, allowing such attack to be performed either via CSRF or as any user (including unauthenticated)</description>
      <guid isPermaLink="false">CVE-2021-24504|2024-08-03T19:35:20.022Z</guid>
      <pubDate>Mon, 02 Aug 2021 10:32:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3858|2024-08-03T01:20:58.467Z -- unknown -- floating%20chat%20widget%3A%20contact%20chat%20icons%2C%20telegram%20chat%2C%20line%2C%20wechat%2C%20email%2C%20sms%2C%20call%20button
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3858</link>
      <description>The Floating Chat Widget: Contact Chat Icons, Telegram Chat, Line, WeChat, Email, SMS, Call Button WordPress plugin before 3.0.3 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as admin.</description>
      <guid isPermaLink="false">CVE-2022-3858|2024-08-03T01:20:58.467Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25014|2024-08-03T19:49:14.530Z -- unknown -- ibtana%20%E2%80%93%20wordpress%20website%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25014</link>
      <description>The Ibtana WordPress plugin before 1.1.4.9 does not have authorisation and CSRF checks in the ive_save_general_settings AJAX action, allowing any authenticated users, such as subscriber to call it and change the plugin's settings which could lead to Stored Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-25014|2024-08-03T19:49:14.530Z</guid>
      <pubDate>Mon, 14 Feb 2022 09:20:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24607|2024-08-03T19:35:20.210Z -- unknown -- storefront%20footer%20text
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24607</link>
      <description>The Storefront Footer Text WordPress plugin through 1.0.1 does not sanitize and escape the "Footer Credit Text" added to pages, allowing high privilege users to perform Cross-Site Scripting attacks even when the unfiltered-html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24607|2024-08-03T19:35:20.210Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:34:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25111|2024-08-03T19:56:10.419Z -- unknown -- english%20wordpress%20admin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25111</link>
      <description>The English WordPress Admin WordPress plugin before 1.5.2 does not validate the admin_custom_language_return_url before redirecting users o it, leading to an open redirect issue</description>
      <guid isPermaLink="false">CVE-2021-25111|2024-08-03T19:56:10.419Z</guid>
      <pubDate>Mon, 25 Apr 2022 15:50:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24448|2024-08-03T19:28:23.855Z -- unknown -- user%20registration%20%26%20user%20profile%20%E2%80%93%20profile%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24448</link>
      <description>The User Registration &amp; User Profile – Profile Builder WordPress plugin before 3.4.8 does not sanitise or escape its 'Modify default Redirect Delay timer' setting, allowing high privilege users to use JavaScript code in it, even when the unfiltered_html capability is disallowed, leading to an authenticated Stored Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24448|2024-08-03T19:28:23.855Z</guid>
      <pubDate>Mon, 02 Aug 2021 10:31:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24261|2024-08-03T19:28:23.270Z -- unknown -- ht%20mega%20%E2%80%93%20absolute%20addons%20for%20elementor%20page%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24261</link>
      <description>The “HT Mega – Absolute Addons for Elementor Page Builder” WordPress Plugin before 1.5.7 has several widgets that are vulnerable to stored Cross-Site Scripting (XSS) by lower-privileged users such as contributors, all via a similar method.</description>
      <guid isPermaLink="false">CVE-2021-24261|2024-08-03T19:28:23.270Z</guid>
      <pubDate>Wed, 05 May 2021 18:28:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24807|2024-08-03T19:42:17.186Z -- unknown -- support%20board
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24807</link>
      <description>The Support Board WordPress plugin before 3.3.5 allows Authenticated (Agent+) users to perform Cross-Site Scripting attacks by placing a payload in the notes field, when an administrator or any authenticated user go to the chat the XSS will be automatically executed.</description>
      <guid isPermaLink="false">CVE-2021-24807|2024-08-03T19:42:17.186Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:35:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24908|2024-08-03T19:49:13.522Z -- unknown -- check%20%26%20log%20email
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24908</link>
      <description>The Check &amp; Log Email WordPress plugin before 1.0.4 does not escape the d parameter before outputting it back in an attribute, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-24908|2024-08-03T19:49:13.522Z</guid>
      <pubDate>Mon, 29 Nov 2021 08:25:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24946|2024-08-03T19:49:14.085Z -- unknown -- modern%20events%20calendar%20lite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24946</link>
      <description>The Modern Events Calendar Lite WordPress plugin before 6.1.5 does not sanitise and escape the time parameter before using it in a SQL statement in the mec_load_single_page AJAX action, available to unauthenticated users, leading to an unauthenticated SQL injection issue</description>
      <guid isPermaLink="false">CVE-2021-24946|2024-08-03T19:49:14.085Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:41:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25053|2024-08-03T19:49:14.585Z -- unknown -- wp%20coder%20%E2%80%93%20add%20custom%20html%2C%20css%20and%20js%20code
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25053</link>
      <description>The WP Coder WordPress plugin before 2.5.2 within the wow-company admin menu page allows to include() arbitrary file with PHP extension (as well as with data:// or http:// protocols), thus leading to CSRF RCE.</description>
      <guid isPermaLink="false">CVE-2021-25053|2024-08-03T19:49:14.585Z</guid>
      <pubDate>Mon, 10 Jan 2022 15:30:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24437|2024-08-03T19:28:24.007Z -- unknown -- favicon%20by%20realfavicongenerator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24437</link>
      <description>The Favicon by RealFaviconGenerator WordPress plugin through 1.3.20 does not sanitise or escape one of its parameter before outputting it back in the response, leading to a Reflected Cross-Site Scripting (XSS) which is executed in the context of a logged administrator.</description>
      <guid isPermaLink="false">CVE-2021-24437|2024-08-03T19:28:24.007Z</guid>
      <pubDate>Mon, 30 Aug 2021 14:11:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1791|2024-08-03T00:17:00.794Z -- unknown -- one%20click%20plugin%20updater
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1791</link>
      <description>The One Click Plugin Updater WordPress plugin through 2.4.14 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and disable / hide the badge of the available updates and the related check.</description>
      <guid isPermaLink="false">CVE-2022-1791|2024-08-03T00:17:00.794Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4256|2024-08-03T01:34:49.870Z -- unknown -- all-in-one%20addons%20for%20elementor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4256</link>
      <description>The All-in-One Addons for Elementor WordPress plugin before 2.4.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-4256|2024-08-03T01:34:49.870Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1663|2024-08-03T00:10:03.842Z -- unknown -- stop%20spam%20comments
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1663</link>
      <description>The Stop Spam Comments WordPress plugin through 0.2.1.2 does not properly generate the Javascript access token for preventing abuse of comment section, allowing threat authors to easily collect the value and add it to the request.</description>
      <guid isPermaLink="false">CVE-2022-1663|2024-08-03T00:10:03.842Z</guid>
      <pubDate>Mon, 29 Aug 2022 14:40:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24643|2024-08-03T19:35:20.358Z -- unknown -- wp%20map%20block%20%E2%80%93%20gutenberg%20map%20block%20for%20google%20map%20and%20openstreet%20map
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24643</link>
      <description>The WP Map Block WordPress plugin before 1.2.3 does not escape some attributes of the WP Map Block, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2021-24643|2024-08-03T19:35:20.358Z</guid>
      <pubDate>Mon, 27 Sep 2021 15:25:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4112|2024-08-03T01:27:54.529Z -- unknown -- quizlord
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4112</link>
      <description>The Quizlord WordPress plugin through 2.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4112|2024-08-03T01:27:54.529Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3609|2024-08-03T01:14:02.093Z -- unknown -- getyourguide%20ticketing
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3609</link>
      <description>The GetYourGuide Ticketing WordPress plugin before 1.0.4 does not sanitise and escape some parameters, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3609|2024-08-03T01:14:02.093Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24740|2024-08-03T19:42:16.648Z -- unknown -- tutor%20lms%20%E2%80%93%20elearning%20and%20online%20course%20solution
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24740</link>
      <description>The Tutor LMS WordPress plugin before 1.9.9 does not escape some of its settings before outputting them in attributes, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24740|2024-08-03T19:42:16.648Z</guid>
      <pubDate>Mon, 18 Oct 2021 13:46:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24861|2024-08-03T19:49:12.681Z -- unknown -- quotes%20collection
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24861</link>
      <description>The Quotes Collection WordPress plugin through 2.5.2 does not validate and escape the bulkcheck parameter before using it in a SQL statement, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2021-24861|2024-08-03T19:49:12.681Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:41:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24151|2024-08-03T19:21:18.214Z -- unknown -- wp%20editor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24151</link>
      <description>The WP Editor WordPress plugin before 1.2.7 did not sanitise or validate its setting fields leading to an authenticated (admin+) blind SQL injection issue via an arbitrary parameter when making a request to save the settings.</description>
      <guid isPermaLink="false">CVE-2021-24151|2024-08-03T19:21:18.214Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:48:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24209|2024-08-03T19:21:18.735Z -- unknown -- wp%20super%20cache
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24209</link>
      <description>The WP Super Cache WordPress plugin before 1.7.2 was affected by an authenticated (admin+) RCE in the settings page due to input validation failure and weak $cache_path check in the WP Super Cache Settings -&gt; Cache Location option. Direct access to the wp-cache-config.php file is not prohibited, so this vulnerability can be exploited for a web shell injection.</description>
      <guid isPermaLink="false">CVE-2021-24209|2024-08-03T19:21:18.735Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24171|2024-08-03T19:21:18.699Z -- unknown -- woocommerce%20upload%20files
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24171</link>
      <description>The WooCommerce Upload Files WordPress plugin before 59.4 ran a single sanitization pass to remove blocked extensions such as .php. It was possible to bypass this and upload a file with a PHP extension by embedding a "blocked" extension within another "blocked" extension in the "wcuf_file_name" parameter. It was also possible to perform a double extension attack and upload files to a different location via path traversal using the "wcuf_current_upload_session_id" parameter.</description>
      <guid isPermaLink="false">CVE-2021-24171|2024-08-03T19:21:18.699Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24543|2024-08-03T19:35:19.976Z -- unknown -- jquery%20reply%20to%20comment
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24543</link>
      <description>The jQuery Reply to Comment WordPress plugin through 1.31 does not have any CSRF check when saving its settings, nor sanitise or escape its 'Quote String' and 'Reply String' settings before outputting them in Comments, leading to a Stored Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-24543|2024-08-03T19:35:19.976Z</guid>
      <pubDate>Mon, 25 Oct 2021 13:20:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25050|2024-08-03T19:49:14.629Z -- unknown -- remove%20footer%20credit
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25050</link>
      <description>The Remove Footer Credit WordPress plugin before 1.0.11 does properly sanitise its settings, allowing high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-25050|2024-08-03T19:49:14.629Z</guid>
      <pubDate>Mon, 14 Feb 2022 09:20:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24186|2024-08-03T19:21:18.629Z -- unknown -- tutor%20lms%20%E2%80%93%20elearning%20and%20online%20course%20solution
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24186</link>
      <description>The tutor_answering_quiz_question/get_answer_by_id function pair from the Tutor LMS – eLearning and online course solution WordPress plugin before 1.8.3 was vulnerable to UNION based SQL injection that could be exploited by students.</description>
      <guid isPermaLink="false">CVE-2021-24186|2024-08-03T19:21:18.629Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4546|2024-08-03T01:41:45.607Z -- unknown -- mapwiz
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4546</link>
      <description>The Mapwiz WordPress plugin through 1.0.1 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2022-4546|2024-08-03T01:41:45.607Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25075|2024-08-03T19:56:09.985Z -- unknown -- duplicate%20page%20or%20post
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25075</link>
      <description>The Duplicate Page or Post WordPress plugin before 1.5.1 does not have any authorisation and has a flawed CSRF check in the wpdevart_duplicate_post_parametrs_save_in_db AJAX action, allowing any authenticated users, such as subscriber to call it and change the plugin's settings, or perform such attack via CSRF. Furthermore, due to the lack of escaping, this could lead to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-25075|2024-08-03T19:56:09.985Z</guid>
      <pubDate>Mon, 21 Feb 2022 10:45:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4785|2024-08-03T01:48:40.394Z -- unknown -- video%20sidebar%20widgets
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4785</link>
      <description>The Video Sidebar Widgets WordPress plugin through 6.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4785|2024-08-03T01:48:40.394Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1800|2024-08-03T00:17:00.638Z -- unknown -- export%20any%20wordpress%20data%20to%20xml%2Fcsv
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1800</link>
      <description>The Export any WordPress data to XML/CSV WordPress plugin before 1.3.5 does not sanitize the cpt POST parameter when exporting post data before using it in a database query, leading to an SQL injection vulnerability.</description>
      <guid isPermaLink="false">CVE-2022-1800|2024-08-03T00:17:00.638Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:43:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2278|2024-08-03T00:32:09.669Z -- unknown -- featured%20image%20from%20url%20%28fifu%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2278</link>
      <description>The Featured Image from URL (FIFU) WordPress plugin before 4.0.1 does not validate, sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2278|2024-08-03T00:32:09.669Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:51:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25112|2024-08-03T19:56:09.987Z -- unknown -- whmcs%20bridge
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25112</link>
      <description>The WHMCS Bridge WordPress plugin before 6.4b does not sanitise and escape the error parameter before outputting it back in admin dashboard, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-25112|2024-08-03T19:56:09.987Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24336|2024-08-03T19:28:23.422Z -- unknown -- flightlog
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24336</link>
      <description>The FlightLog WordPress plugin through 3.0.2 does not sanitise, validate or escape various POST parameters before using them a SQL statement, leading to SQL injections exploitable by editor and administrator users</description>
      <guid isPermaLink="false">CVE-2021-24336|2024-08-03T19:28:23.422Z</guid>
      <pubDate>Mon, 07 Jun 2021 10:49:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24714|2024-08-03T19:42:16.660Z -- unknown -- import%20any%20xml%20or%20csv%20file%20to%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24714</link>
      <description>The Import any XML or CSV File to WordPress plugin before 3.6.3 does not escape the Import's Title and Unique Identifier fields before outputting them in admin pages, which could allow high privilege users to perform Cross-Site attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24714|2024-08-03T19:42:16.660Z</guid>
      <pubDate>Mon, 06 Dec 2021 15:55:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24873|2024-08-03T19:49:13.471Z -- unknown -- tutor%20lms%20%E2%80%93%20elearning%20and%20online%20course%20solution
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24873</link>
      <description>The Tutor LMS WordPress plugin before 1.9.11 does not sanitise and escape user input before outputting back in attributes in the Student Registration page, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24873|2024-08-03T19:49:13.471Z</guid>
      <pubDate>Tue, 23 Nov 2021 19:16:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24911|2024-08-03T19:49:14.019Z -- unknown -- transposh%20wordpress%20translation
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24911</link>
      <description>The Transposh WordPress Translation WordPress plugin before 1.0.8 does not sanitise and escape the tk0 parameter from the tp_translation AJAX action, leading to Stored Cross-Site Scripting, which will trigger in the admin dashboard of the plugin. The minimum role needed to perform such attack depends on the plugin "Who can translate ?" setting.</description>
      <guid isPermaLink="false">CVE-2021-24911|2024-08-03T19:49:14.019Z</guid>
      <pubDate>Mon, 22 Aug 2022 14:56:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24585|2024-08-03T19:35:20.312Z -- unknown -- timetable%20and%20event%20schedule%20by%20motopress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24585</link>
      <description>The Timetable and Event Schedule WordPress plugin before 2.4.0 outputs the Hashed Password, Username and Email Address (along other less sensitive data) of the user related to the Even Head of the Timeslot in the response when requesting the event Timeslot data with a user with the edit_posts capability. Combined with the other Unauthorised Event Timeslot Modification issue (https://wpscan.com/reports/submissions/4699/) where an arbitrary user ID can be set, this could allow low privilege users with the edit_posts capability (such as author) to retrieve sensitive User data by iterating over the user_id</description>
      <guid isPermaLink="false">CVE-2021-24585|2024-08-03T19:35:20.312Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24593|2024-08-03T19:35:20.196Z -- unknown -- business%20hours%20indicator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24593</link>
      <description>The Business Hours Indicator WordPress plugin before 2.3.5 does not sanitise or escape its 'Now closed message" setting when outputting it in the backend and frontend, leading to an Authenticated Stored Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24593|2024-08-03T19:35:20.196Z</guid>
      <pubDate>Mon, 30 Aug 2021 14:11:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24126|2024-08-03T19:21:18.224Z -- unknown -- envira%20gallery%20lite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24126</link>
      <description>Unvalidated input and lack of output encoding in the Envira Gallery Lite WordPress plugin, versions before 1.8.3.3, did not properly sanitise the images metadata (namely title) before outputting them in the generated gallery, which could lead to privilege escalation.</description>
      <guid isPermaLink="false">CVE-2021-24126|2024-08-03T19:21:18.224Z</guid>
      <pubDate>Thu, 18 Mar 2021 14:57:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4260|2024-08-03T01:34:49.926Z -- unknown -- wp-ban
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4260</link>
      <description>The WP-Ban WordPress plugin before 1.69.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4260|2024-08-03T01:34:49.926Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4651|2024-08-03T01:48:39.416Z -- unknown -- justified%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4651</link>
      <description>The Justified Gallery WordPress plugin before 1.7.1 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4651|2024-08-03T01:48:39.416Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3985|2024-08-03T01:27:54.278Z -- unknown -- videojs%20html5%20player
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3985</link>
      <description>The Videojs HTML5 Player WordPress plugin before 1.1.9 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-3985|2024-08-03T01:27:54.278Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4468|2024-08-03T01:41:44.735Z -- unknown -- wp%20recipe%20maker
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4468</link>
      <description>The WP Recipe Maker WordPress plugin before 8.6.1 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2022-4468|2024-08-03T01:41:44.735Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4154|2024-08-03T01:27:54.540Z -- unknown -- contest%20gallery%20pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4154</link>
      <description>The Contest Gallery Pro WordPress plugin before 19.1.5 does not escape the wp_user_id GET parameter before concatenating it to an SQL query in management-show-user.php. This may allow malicious users with at administrator privileges (i.e. on multisite WordPress configurations) to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4154|2024-08-03T01:27:54.540Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24146|2024-08-03T19:21:18.297Z -- unknown -- modern%20events%20calendar%20lite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24146</link>
      <description>Lack of authorisation checks in the Modern Events Calendar Lite WordPress plugin, versions before 5.16.5, did not properly restrict access to the export files, allowing unauthenticated users to exports all events data in CSV or XML format for example.</description>
      <guid isPermaLink="false">CVE-2021-24146|2024-08-03T19:21:18.297Z</guid>
      <pubDate>Thu, 18 Mar 2021 14:57:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24371|2024-08-03T19:28:23.827Z -- unknown -- rsvpmaker
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24371</link>
      <description>The Import feature of the RSVPMaker WordPress plugin before 8.7.3 (/wp-admin/tools.php?page=rsvpmaker_export_screen) takes an URL input and calls curl on it, without first validating it to ensure it's a remote one. As a result, a high privilege user could use that feature to scan the internal network via a SSRF attack.</description>
      <guid isPermaLink="false">CVE-2021-24371|2024-08-03T19:28:23.827Z</guid>
      <pubDate>Mon, 02 Aug 2021 10:31:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4058|2024-08-03T01:27:54.541Z -- unknown -- photo%20gallery%20by%2010web
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4058</link>
      <description>The Photo Gallery by 10Web WordPress plugin before 1.8.3 does not validate and escape some parameters before outputting them back in in JS code later on in another page, which could lead to Stored XSS issue when an attacker makes a logged in admin open a malicious URL or page under their control.</description>
      <guid isPermaLink="false">CVE-2022-4058|2024-08-03T01:27:54.541Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3836|2024-08-03T01:20:58.299Z -- unknown -- seed%20social
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3836</link>
      <description>The Seed Social WordPress plugin before 2.0.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3836|2024-08-03T01:20:58.299Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:50:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4369|2024-08-03T01:34:50.166Z -- unknown -- wp-lister%20lite%20for%20amazon
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4369</link>
      <description>The WP-Lister Lite for Amazon WordPress plugin before 2.4.4 does not sanitize and escapes a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which can be used against high-privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2022-4369|2024-08-03T01:34:50.166Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24777|2024-08-03T19:42:17.352Z -- unknown -- hotscot%20contact%20form
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24777</link>
      <description>The view submission functionality in the Hotscot Contact Form WordPress plugin before 1.3 makes a get request with the sub_id parameter which not sanitised, escaped or validated before inserting to a SQL statement, leading to an SQL injection.</description>
      <guid isPermaLink="false">CVE-2021-24777|2024-08-03T19:42:17.352Z</guid>
      <pubDate>Mon, 07 Mar 2022 08:15:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24373|2024-08-03T19:28:23.763Z -- unknown -- wp%20hardening%20%E2%80%93%20fix%20your%20wordpress%20security
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24373</link>
      <description>The WP Hardening – Fix Your WordPress Security WordPress plugin before 1.2.2 did not sanitise or escape the historyvalue GET parameter before outputting it in a Javascript block, leading to a reflected Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-24373|2024-08-03T19:28:23.763Z</guid>
      <pubDate>Mon, 21 Jun 2021 19:18:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24269|2024-08-03T19:28:22.788Z -- unknown -- sina%20extension%20for%20elementor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24269</link>
      <description>The “Sina Extension for Elementor” WordPress Plugin before 3.3.12 has several widgets that are vulnerable to stored Cross-Site Scripting (XSS) by lower-privileged users such as contributors, all via a similar method.</description>
      <guid isPermaLink="false">CVE-2021-24269|2024-08-03T19:28:22.788Z</guid>
      <pubDate>Wed, 05 May 2021 18:28:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24659|2024-08-03T19:35:20.408Z -- unknown -- postx%20%E2%80%93%20gutenberg%20blocks%20for%20post%20grid
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24659</link>
      <description>The PostX – Gutenberg Blocks for Post Grid WordPress plugin before 2.4.10 allows users with a role as low as Contributor to perform Stored Cross-Site Scripting attacks via the plugin's block.</description>
      <guid isPermaLink="false">CVE-2021-24659|2024-08-03T19:35:20.408Z</guid>
      <pubDate>Mon, 27 Sep 2021 15:25:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2425|2024-08-03T00:39:07.629Z -- unknown -- wp%20ds%20blog%20map
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2425</link>
      <description>The WP DS Blog Map WordPress plugin through 3.1.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2425|2024-08-03T00:39:07.629Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:50:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24615|2024-08-03T19:35:20.312Z -- unknown -- %E5%BE%AE%E4%BF%A1%E6%89%93%E8%B5%8F%EF%BC%88wechat%20reward%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24615</link>
      <description>The Wechat Reward WordPress plugin through 1.7 does not sanitise or escape its QR settings, nor has any CSRF check in place, allowing attackers to make a logged in admin change the settings and perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2021-24615|2024-08-03T19:35:20.312Z</guid>
      <pubDate>Mon, 18 Oct 2021 13:45:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24225|2024-08-03T19:21:18.700Z -- unknown -- advanced%20booking%20calendar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24225</link>
      <description>The Advanced Booking Calendar WordPress plugin before 1.6.7 did not sanitise the calId GET parameter in the "Seasons &amp; Calendars" page before outputing it in an A tag, leading to a reflected XSS issue</description>
      <guid isPermaLink="false">CVE-2021-24225|2024-08-03T19:21:18.700Z</guid>
      <pubDate>Mon, 12 Apr 2021 14:04:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4391|2024-08-03T01:41:44.485Z -- unknown -- vision%20interactive%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4391</link>
      <description>The Vision Interactive For WordPress plugin through 1.5.3 does not sanitise and escape some of its settings, which could allow users such as contributor+ to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-4391|2024-08-03T01:41:44.485Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24702|2024-08-03T19:42:16.630Z -- unknown -- learnpress%20%E2%80%93%20wordpress%20lms%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24702</link>
      <description>The LearnPress WordPress plugin before 4.1.3.1 does not properly sanitize or escape various inputs within course settings, which could allow high privilege users to perform Cross-Site Scripting attacks when the unfiltred_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24702|2024-08-03T19:42:16.630Z</guid>
      <pubDate>Mon, 18 Oct 2021 13:46:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24793|2024-08-03T19:42:17.224Z -- unknown -- wpematico%20rss%20feed%20fetcher
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24793</link>
      <description>The WPeMatico RSS Feed Fetcher WordPress plugin before 2.6.12 does not escape the Feed URL added to a campaign before outputting it in an attribute, allowing high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24793|2024-08-03T19:42:17.224Z</guid>
      <pubDate>Mon, 01 Nov 2021 08:46:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24824|2024-08-03T19:42:17.203Z -- unknown -- custom%20content%20shortcode
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24824</link>
      <description>The [field] shortcode included with the Custom Content Shortcode WordPress plugin before 4.0.1, allows authenticated users with a role as low as contributor, to access arbitrary post metadata. This could lead to sensitive data disclosure, for example when used in combination with WooCommerce, the email address of orders can be retrieved</description>
      <guid isPermaLink="false">CVE-2021-24824|2024-08-03T19:42:17.203Z</guid>
      <pubDate>Mon, 07 Mar 2022 08:16:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3922|2024-08-03T01:20:58.803Z -- unknown -- broken%20link%20checker
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3922</link>
      <description>The Broken Link Checker WordPress plugin before 1.11.20 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3922|2024-08-03T01:20:58.803Z</guid>
      <pubDate>Wed, 28 Dec 2022 10:37:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24325|2024-08-03T19:28:23.471Z -- unknown -- 404%20seo%20redirection
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24325</link>
      <description>The tab parameter of the settings page of the 404 SEO Redirection WordPress plugin through 1.3 is vulnerable to a reflected Cross-Site Scripting (XSS) issue as user input is not properly sanitised or escaped before being output in an attribute.</description>
      <guid isPermaLink="false">CVE-2021-24325|2024-08-03T19:28:23.471Z</guid>
      <pubDate>Mon, 17 May 2021 16:48:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24977|2024-08-03T19:49:14.458Z -- unknown -- use%20any%20font%20%7C%20custom%20font%20uploader
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24977</link>
      <description>The Use Any Font | Custom Font Uploader WordPress plugin before 6.2.1 does not have any authorisation checks when assigning a font, allowing unauthenticated users to sent arbitrary CSS which will then be processed by the frontend for all users. Due to the lack of sanitisation and escaping in the backend, it could also lead to Stored XSS issues</description>
      <guid isPermaLink="false">CVE-2021-24977|2024-08-03T19:49:14.458Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24984|2024-08-03T19:49:14.596Z -- unknown -- wpfront%20user%20role%20editor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24984</link>
      <description>The WPFront User Role Editor WordPress plugin before 3.2.1.11184 does not sanitise and escape the changes-saved parameter before outputting it back in the admin dashboard, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-24984|2024-08-03T19:49:14.596Z</guid>
      <pubDate>Mon, 27 Dec 2021 10:33:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24831|2024-08-03T19:42:17.210Z -- unknown -- tab%20%E2%80%93%20accordion%2C%20faq
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24831</link>
      <description>All AJAX actions of the Tab WordPress plugin before 1.3.2 are available to both unauthenticated and authenticated users, allowing unauthenticated attackers to modify various data in the plugin, such as add/edit/delete arbitrary tabs.</description>
      <guid isPermaLink="false">CVE-2021-24831|2024-08-03T19:42:17.210Z</guid>
      <pubDate>Mon, 03 Jan 2022 12:49:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24683|2024-08-03T19:42:16.085Z -- unknown -- weather%20effect%20%E2%80%93%20christmas%20santa%20snow%20falling
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24683</link>
      <description>The Weather Effect WordPress plugin before 1.3.4 does not have any CSRF checks in place when saving its settings, and do not validate or escape them, which could lead to Stored Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-24683|2024-08-03T19:42:16.085Z</guid>
      <pubDate>Mon, 11 Oct 2021 10:45:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2187|2024-08-03T00:32:08.696Z -- unknown -- contact%20form%207%20captcha
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2187</link>
      <description>The Contact Form 7 Captcha WordPress plugin before 0.1.2 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2022-2187|2024-08-03T00:32:08.696Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:37:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4483|2024-08-03T01:41:45.237Z -- unknown -- insert%20pages
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4483</link>
      <description>The Insert Pages WordPress plugin before 3.7.5 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4483|2024-08-03T01:41:45.237Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1540|2024-08-03T00:10:03.363Z -- unknown -- postmagthemes%20demo%20import
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1540</link>
      <description>The PostmagThemes Demo Import WordPress plugin through 1.0.7 does not validate the imported file, allowing high-privilege users such as admin to upload arbitrary files (such as PHP) leading to RCE.</description>
      <guid isPermaLink="false">CVE-2022-1540|2024-08-03T00:10:03.363Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24443|2024-08-03T19:28:23.962Z -- unknown -- youzify%20%E2%80%93%20buddypress%20community%2C%20user%20profile%2C%20social%20network%20%26%20membership%20plugin%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24443</link>
      <description>The About Me widget of the Youzify – BuddyPress Community, User Profile, Social Network &amp; Membership WordPress plugin before 1.0.7 does not properly sanitise its Biography field, allowing any authenticated user to set Cross-Site Scripting payloads in it, which will be executed when viewing the affected user profile. This could allow a low privilege user to gain unauthorised access to the admin side of the blog by targeting an admin, inducing them to view their profile with a malicious payload adding a rogue account for example.</description>
      <guid isPermaLink="false">CVE-2021-24443|2024-08-03T19:28:23.962Z</guid>
      <pubDate>Mon, 02 Aug 2021 10:31:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4005|2024-08-03T01:27:54.146Z -- unknown -- donation%20button
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4005</link>
      <description>The Donation Button WordPress plugin through 4.0.0 does not sanitize and escapes some parameters, which could allow users with a role as low as Contributor to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-4005|2024-08-03T01:27:54.146Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24645|2024-08-03T19:35:20.320Z -- unknown -- booking.com%20product%20helper
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24645</link>
      <description>The Booking.com Product Helper WordPress plugin before 1.0.2 does not sanitize and escape Product Code when creating Product Shortcode, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24645|2024-08-03T19:35:20.320Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:34:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24548|2024-08-03T19:35:20.155Z -- unknown -- mimetic%20books
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24548</link>
      <description>The Mimetic Books WordPress plugin through 0.2.13 was vulnerable to Authenticated Stored Cross-Site Scripting (XSS) in the "Default Publisher ID" field on the plugin's settings page.</description>
      <guid isPermaLink="false">CVE-2021-24548|2024-08-03T19:35:20.155Z</guid>
      <pubDate>Mon, 16 Aug 2021 10:48:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3484|2024-08-03T01:14:01.486Z -- unknown -- wpb-show-core
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3484</link>
      <description>The WPB Show Core WordPress plugin does not sanitize and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2022-3484|2024-08-03T01:14:01.486Z</guid>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4761|2024-08-03T01:48:40.403Z -- unknown -- post%20views%20count%20%28support%20caching%20plugins%21%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4761</link>
      <description>The Post Views Count WordPress plugin through 3.0.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4761|2024-08-03T01:48:40.403Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24204|2024-08-03T19:21:18.718Z -- unknown -- elementor%20website%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24204</link>
      <description>In the Elementor Website Builder WordPress plugin before 3.1.4, the accordion widget (includes/widgets/accordion.php) accepts a ‘title_html_tag’ parameter. Although the element control lists a fixed set of possible html tags, it is possible for a user with Contributor or above permissions to send a modified ‘save_builder’ request containing JavaScript in the ‘title_html_tag’ parameter, which is not filtered and is output without escaping. This JavaScript will then be executed when the saved page is viewed or previewed.</description>
      <guid isPermaLink="false">CVE-2021-24204|2024-08-03T19:21:18.718Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3983|2024-08-03T01:27:54.098Z -- unknown -- checkout%20for%20paypal
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3983</link>
      <description>The Checkout for PayPal WordPress plugin before 1.0.14 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-3983|2024-08-03T01:27:54.098Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24343|2024-08-03T19:28:23.568Z -- unknown -- iflychat%20%E2%80%93%20wordpress%20chat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24343</link>
      <description>The iFlyChat WordPress plugin before 4.7.0 does not sanitise its APP ID setting before outputting it back in the page, leading to an authenticated Stored Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24343|2024-08-03T19:28:23.568Z</guid>
      <pubDate>Mon, 07 Jun 2021 10:49:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2753|2024-08-03T00:46:04.516Z -- unknown -- ketchup%20restaurant%20reservations
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2753</link>
      <description>The Ketchup Restaurant Reservations WordPress plugin through 1.0.0 does not sanitise and escape some of the reservation user inputs, allowing unauthenticated attackers to perform Cross-Site Scripting attacks logged in admin viewing the malicious reservation made</description>
      <guid isPermaLink="false">CVE-2022-2753|2024-08-03T00:46:04.516Z</guid>
      <pubDate>Mon, 19 Sep 2022 14:01:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24549|2024-08-03T19:35:20.123Z -- unknown -- aceide
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24549</link>
      <description>The AceIDE WordPress plugin through 2.6.2 does not sanitise or validate the user input which is appended to system paths before using it in various actions, such as to read arbitrary files from the server. This allows high privilege users such as administrator to access any file on the web server outside of the blog directory via a path traversal attack.</description>
      <guid isPermaLink="false">CVE-2021-24549|2024-08-03T19:35:20.123Z</guid>
      <pubDate>Mon, 23 Aug 2021 11:10:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4237|2024-08-03T01:34:49.984Z -- unknown -- welcart%20e-commerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4237</link>
      <description>The Welcart e-Commerce WordPress plugin before 2.8.6 does not validate user input before using it in file_exist() functions via various AJAX actions available to any authenticated users, which could allow users with a role as low as subscriber to perform PHAR deserialisation when they can upload a file and a suitable gadget chain is present on the blog</description>
      <guid isPermaLink="false">CVE-2022-4237|2024-08-03T01:34:49.984Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3336|2024-08-03T01:07:06.547Z -- unknown -- event%20monster
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3336</link>
      <description>The Event Monster WordPress plugin before 1.2.0 does not have CSRF check when deleting visitors, which could allow attackers to make logged in admin delete arbitrary visitors via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-3336|2024-08-03T01:07:06.547Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2083|2024-08-03T00:24:44.125Z -- unknown -- simple%20single%20sign%20on
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2083</link>
      <description>The Simple Single Sign On WordPress plugin through 4.1.0 leaks its OAuth client_secret, which could be used by attackers to gain unauthorized access to the site.</description>
      <guid isPermaLink="false">CVE-2022-2083|2024-08-03T00:24:44.125Z</guid>
      <pubDate>Mon, 05 Sep 2022 12:35:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24688|2024-08-03T19:42:16.089Z -- unknown -- orange%20form
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24688</link>
      <description>The Orange Form WordPress plugin through 1.0.1 does not have any authorisation and CSRF checks in all of its AJAX calls, for example the or_delete_filed one which is available to both unauthenticated and authenticated users could allow attackers to delete arbitrary posts.The AJAX calls performing actions on posts also do not ensure that the post belong to them (or that they are allowed to perform such action on it)</description>
      <guid isPermaLink="false">CVE-2021-24688|2024-08-03T19:42:16.089Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25096|2024-08-03T19:56:10.854Z -- unknown -- ip2location%20country%20blocker
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25096</link>
      <description>The IP2Location Country Blocker WordPress plugin before 2.26.5 bans can be bypassed by using a specific parameter in the URL</description>
      <guid isPermaLink="false">CVE-2021-25096|2024-08-03T19:56:10.854Z</guid>
      <pubDate>Mon, 07 Feb 2022 15:47:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24565|2024-08-03T19:35:20.219Z -- unknown -- contact%20form%207%20captcha
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24565</link>
      <description>The Contact Form 7 Captcha WordPress plugin before 0.0.9 does not have any CSRF check in place when saving its settings, allowing attacker to make a logged in user with the manage_options change them. Furthermore, the settings are not escaped when output in attributes, leading to a Stored Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-24565|2024-08-03T19:35:20.219Z</guid>
      <pubDate>Mon, 23 Aug 2021 11:10:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2194|2024-08-03T00:32:08.626Z -- unknown -- accept%20stripe%20payments
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2194</link>
      <description>The Accept Stripe Payments WordPress plugin before 2.0.64 does not sanitize and escape some of its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2194|2024-08-03T00:32:08.626Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:37:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24844|2024-08-03T19:42:17.420Z -- unknown -- affiliates%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24844</link>
      <description>The Affiliates Manager WordPress plugin before 2.8.7 does not validate the orderby parameter before using it in an SQL statement in the admin dashboard, leading to an SQL Injection issue</description>
      <guid isPermaLink="false">CVE-2021-24844|2024-08-03T19:42:17.420Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:35:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24808|2024-08-03T19:42:17.339Z -- unknown -- bp%20better%20messages
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24808</link>
      <description>The BP Better Messages WordPress plugin before 1.9.9.41 sanitise (with sanitize_text_field) but does not escape the 'subject' parameter before outputting it back in an attribute, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24808|2024-08-03T19:42:17.339Z</guid>
      <pubDate>Mon, 01 Nov 2021 08:46:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24142|2024-08-03T19:21:18.295Z -- unknown -- 301%20redirects%20-%20easy%20redirect%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24142</link>
      <description>Unvaludated input in the 301 Redirects - Easy Redirect Manager WordPress plugin, versions before 2.51, did not sanitise its "Redirect From" column when importing a CSV file, allowing high privilege users to perform SQL injections.</description>
      <guid isPermaLink="false">CVE-2021-24142|2024-08-03T19:21:18.295Z</guid>
      <pubDate>Thu, 18 Mar 2021 14:57:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24412|2024-08-03T19:28:23.811Z -- unknown -- html5%20audio%20player%20%E2%80%93%20audio%20player%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24412</link>
      <description>The Html5 Audio Player – Audio Player for WordPress plugin before 2.1.3 does not sanitise or validate the parameters from its shortcode, allowing users with a role as low as contributor to set Cross-Site Scripting payload in them which will be triggered in the page/s with the embed malicious shortcode</description>
      <guid isPermaLink="false">CVE-2021-24412|2024-08-03T19:28:23.811Z</guid>
      <pubDate>Mon, 18 Oct 2021 13:45:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4117|2024-08-03T01:27:54.505Z -- unknown -- iws
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4117</link>
      <description>The IWS WordPress plugin through 1.0 does not properly escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to an unauthenticated SQL injection.</description>
      <guid isPermaLink="false">CVE-2022-4117|2024-08-03T01:27:54.505Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2407|2024-08-03T00:39:07.097Z -- unknown -- wp%20phpmyadmin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2407</link>
      <description>The WP phpMyAdmin WordPress plugin before 5.2.0.4 does not escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2407|2024-08-03T00:39:07.097Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:03:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2271|2024-08-03T00:32:09.545Z -- unknown -- wp%20database%20backup
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2271</link>
      <description>The WP Database Backup WordPress plugin before 5.9 does not escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2271|2024-08-03T00:32:09.545Z</guid>
      <pubDate>Mon, 05 Sep 2022 12:35:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24951|2024-08-03T19:49:14.225Z -- unknown -- learnpress%20%E2%80%93%20wordpress%20lms%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24951</link>
      <description>The LearnPress WordPress plugin before 4.1.4 does not sanitise, validate and escape the id parameter before using it in SQL statements when duplicating course/lesson/quiz/question, leading to SQL Injections issues</description>
      <guid isPermaLink="false">CVE-2021-24951|2024-08-03T19:49:14.225Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:41:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25093|2024-08-03T19:56:09.879Z -- unknown -- link%20library
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25093</link>
      <description>The Link Library WordPress plugin before 7.2.8 does not have authorisation in place when deleting links, allowing unauthenticated users to delete arbitrary links via a crafted request</description>
      <guid isPermaLink="false">CVE-2021-25093|2024-08-03T19:56:09.879Z</guid>
      <pubDate>Tue, 01 Feb 2022 12:21:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25091|2024-08-03T19:56:09.858Z -- unknown -- link%20library
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25091</link>
      <description>The Link Library WordPress plugin before 7.2.9 does not sanitise and escape the settingscopy parameter before outputting it back in an admin page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-25091|2024-08-03T19:56:09.858Z</guid>
      <pubDate>Tue, 01 Feb 2022 12:21:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24732|2024-08-03T19:42:16.680Z -- unknown -- pdf%20flipbook%2C%203d%20flipbook%20wordpress%20%E2%80%93%20dearflip
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24732</link>
      <description>The PDF Flipbook, 3D Flipbook WordPress – DearFlip WordPress plugin before 1.7.10 does not escape the class attribute of its shortcode before outputting it back in an attribute, which could allow users with a role as low as Contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2021-24732|2024-08-03T19:42:16.680Z</guid>
      <pubDate>Mon, 18 Oct 2021 13:46:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4108|2024-08-03T01:27:54.475Z -- unknown -- wholesale%20market%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4108</link>
      <description>The Wholesale Market for WooCommerce WordPress plugin before 1.0.8 does not validate user input used to generate system path, allowing high privilege users such as admin to download arbitrary file from the server even when they should not be able to (for example in multisite)</description>
      <guid isPermaLink="false">CVE-2022-4108|2024-08-03T01:27:54.475Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24576|2024-08-03T19:35:20.206Z -- unknown -- easy%20accordion%20%E2%80%93%20best%20accordion%20faq%20plugin%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24576</link>
      <description>The Easy Accordion WordPress plugin before 2.0.22 does not properly sanitize inputs when adding new items to an accordion.</description>
      <guid isPermaLink="false">CVE-2021-24576|2024-08-03T19:35:20.206Z</guid>
      <pubDate>Mon, 11 Oct 2021 10:45:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4649|2024-08-03T01:48:39.617Z -- unknown -- wp%20extended%20search
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4649</link>
      <description>The WP Extended Search WordPress plugin before 2.1.2 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4649|2024-08-03T01:48:39.617Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24181|2024-08-03T19:21:18.715Z -- unknown -- tutor%20lms%20%E2%80%93%20elearning%20and%20online%20course%20solution
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24181</link>
      <description>The tutor_mark_answer_as_correct AJAX action from the Tutor LMS – eLearning and online course solution WordPress plugin before 1.7.7 was vulnerable to blind and time based SQL injections that could be exploited by students.</description>
      <guid isPermaLink="false">CVE-2021-24181|2024-08-03T19:21:18.715Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24785|2024-08-03T19:42:17.191Z -- unknown -- great%20quotes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24785</link>
      <description>The Great Quotes WordPress plugin through 1.0.0 does not sanitise and escape the Quote and Author fields of its Quotes, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24785|2024-08-03T19:42:17.191Z</guid>
      <pubDate>Mon, 25 Oct 2021 13:20:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24590|2024-08-03T19:35:20.251Z -- unknown -- cookie%20notice%20%26%20consent%20banner%20for%C2%A0gdpr%20%26%20ccpa%20compliance
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24590</link>
      <description>The Cookie Notice &amp; Consent Banner for GDPR &amp; CCPA Compliance WordPress plugin before 1.7.2 does not properly sanitize inputs to prevent injection of arbitrary HTML within the plugin's design customization options.</description>
      <guid isPermaLink="false">CVE-2021-24590|2024-08-03T19:35:20.251Z</guid>
      <pubDate>Mon, 06 Sep 2021 11:09:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24330|2024-08-03T19:28:23.352Z -- unknown -- funnel%20builder%20by%20cartflows%20%E2%80%93%20create%20high%20converting%20sales%20funnels%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24330</link>
      <description>The Funnel Builder by CartFlows – Create High Converting Sales Funnels For WordPress plugin before 1.6.13 did not sanitise its facebook_pixel_id and google_analytics_id settings, allowing high privilege users to set XSS payload in them, which will either be executed on pages generated by the plugin, or the whole website depending on the settings used.</description>
      <guid isPermaLink="false">CVE-2021-24330|2024-08-03T19:28:23.352Z</guid>
      <pubDate>Tue, 01 Jun 2021 11:33:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24600|2024-08-03T19:35:20.289Z -- unknown -- wp%20dialog
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24600</link>
      <description>The WP Dialog WordPress plugin through 1.2.5.5 does not sanitise and escape some of its settings before outputting them in pages, allowing high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24600|2024-08-03T19:35:20.289Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3937|2024-08-03T01:27:53.880Z -- unknown -- easy%20video%20player
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3937</link>
      <description>The Easy Video Player WordPress plugin before 1.2.2.3 does not sanitize and escapes some parameters, which could allow users with a role as low as Contributor to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-3937|2024-08-03T01:27:53.880Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24754|2024-08-03T19:42:16.729Z -- unknown -- mainwp%20child%20reports
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24754</link>
      <description>The MainWP Child Reports WordPress plugin before 2.0.8 does not validate or sanitise the order parameter before using it in a SQL statement in the admin dashboard, leading to an SQL injection issue</description>
      <guid isPermaLink="false">CVE-2021-24754|2024-08-03T19:42:16.729Z</guid>
      <pubDate>Mon, 18 Oct 2021 13:46:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2754|2024-08-03T00:46:04.319Z -- unknown -- ketchup%20restaurant%20reservations
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2754</link>
      <description>The Ketchup Restaurant Reservations WordPress plugin through 1.0.0 does not validate and escape some reservation parameters before using them in SQL statements, which could allow unauthenticated attackers to perform SQL Injection attacks</description>
      <guid isPermaLink="false">CVE-2022-2754|2024-08-03T00:46:04.319Z</guid>
      <pubDate>Mon, 19 Sep 2022 14:01:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25000|2024-08-03T19:49:14.547Z -- unknown -- booster%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25000</link>
      <description>The Booster for WooCommerce WordPress plugin before 5.4.9 does not sanitise and escape the wcj_delete_role parameter before outputting back in the admin dashboard when the General module is enabled, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-25000|2024-08-03T19:49:14.547Z</guid>
      <pubDate>Mon, 03 Jan 2022 12:49:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24560|2024-08-03T19:35:20.180Z -- unknown -- software%20license%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24560</link>
      <description>The Software License Manager WordPress plugin before 4.4.8 does not sanitise or escape the edit_record parameter before outputting it back in the page in the admin dashboard, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24560|2024-08-03T19:35:20.180Z</guid>
      <pubDate>Mon, 13 Sep 2021 17:56:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3982|2024-08-03T01:27:54.241Z -- unknown -- booking%20calendar%2C%20appointment%20booking%20system
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3982</link>
      <description>The Booking calendar, Appointment Booking System WordPress plugin before 3.2.2 does not validate uploaded files, which could allow unauthenticated users to upload arbitrary files, such as PHP and achieve RCE</description>
      <guid isPermaLink="false">CVE-2022-3982|2024-08-03T01:27:54.241Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24141|2024-08-03T19:21:18.793Z -- unknown -- advanced%20database%20cleaner
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24141</link>
      <description>Unvaludated input in the Advanced Database Cleaner plugin, versions before 3.0.2, lead to SQL injection allowing high privilege users (admin+) to perform SQL attacks.</description>
      <guid isPermaLink="false">CVE-2021-24141|2024-08-03T19:21:18.793Z</guid>
      <pubDate>Thu, 18 Mar 2021 14:57:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24539|2024-08-03T19:35:19.989Z -- unknown -- coming%20soon%2C%20under%20construction%20%26%20maintenance%20mode%20by%20dazzler
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24539</link>
      <description>The Coming Soon, Under Construction &amp; Maintenance Mode By Dazzler WordPress plugin before 1.6.7 does not sanitise or escape its description setting when outputting it in the frontend when the Coming Soon mode is enabled, even when the unfiltered_html capability is disallowed, leading to an authenticated Stored Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24539|2024-08-03T19:35:19.989Z</guid>
      <pubDate>Mon, 01 Nov 2021 08:45:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4551|2024-08-03T01:41:45.582Z -- unknown -- rich%20table%20of%20contents
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4551</link>
      <description>The Rich Table of Contents WordPress plugin before 1.3.9 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4551|2024-08-03T01:41:45.582Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3838|2024-08-03T01:20:58.762Z -- unknown -- wpupper%20share%20buttons
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3838</link>
      <description>The WPUpper Share Buttons WordPress plugin through 3.42 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3838|2024-08-03T01:20:58.762Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3098|2024-08-03T01:00:10.522Z -- unknown -- login%20block%20ips
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3098</link>
      <description>The Login Block IPs WordPress plugin through 1.0.0 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-3098|2024-08-03T01:00:10.522Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4746|2024-08-03T01:48:40.395Z -- unknown -- fluentauth
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4746</link>
      <description>The FluentAuth WordPress plugin before 1.0.2 prioritizes getting a visitor's IP address from certain HTTP headers over PHP's REMOTE_ADDR, which makes it possible to bypass the IP-based blocks set by the plugin.</description>
      <guid isPermaLink="false">CVE-2022-4746|2024-08-03T01:48:40.395Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4163|2024-08-03T01:34:48.814Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4163</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the cg_deactivate and cg_activate POST parameters before concatenating it to an SQL query in  2_deactivate.php and 4_activate.php, respectively. This may allow malicious users with at least author privilege to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4163|2024-08-03T01:34:48.814Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24898|2024-08-03T19:49:14.027Z -- unknown -- editable%20table%20simple%20fast%20frontend%20from%20sql%20tables
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24898</link>
      <description>The EditableTable WordPress plugin through 0.1.4 does not sanitise and escape any of the Table and Column fields, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24898|2024-08-03T19:49:14.027Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4125|2024-08-03T01:27:54.511Z -- unknown -- popup%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4125</link>
      <description>The Popup Manager WordPress plugin through 1.6.6 does not have authorisation and CSRF check when creating/updating popups, and is missing sanitisation as well as escaping, which could allow unauthenticated attackers to create arbitrary popups and add Stored XSS payloads as well</description>
      <guid isPermaLink="false">CVE-2022-4125|2024-08-03T01:27:54.511Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24482|2024-08-03T19:35:19.579Z -- unknown -- related%20posts%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24482</link>
      <description>The Related Posts for WordPress plugin through 2.0.4 does not sanitise its heading_text and CSS settings, allowing high privilege users (admin) to set XSS payloads in them, leading to Stored Cross-Site Scripting issues.</description>
      <guid isPermaLink="false">CVE-2021-24482|2024-08-03T19:35:19.579Z</guid>
      <pubDate>Mon, 19 Jul 2021 10:53:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2379|2024-08-03T00:39:06.362Z -- unknown -- easy%20student%20results
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2379</link>
      <description>The Easy Student Results WordPress plugin through 2.2.8 lacks authorisation in its REST API, allowing unauthenticated users to retrieve information related to the courses, exams, departments as well as student's grades and PII such as email address, physical address, phone number etc</description>
      <guid isPermaLink="false">CVE-2022-2379|2024-08-03T00:39:06.362Z</guid>
      <pubDate>Mon, 15 Aug 2022 08:37:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1549|2024-08-03T00:10:03.671Z -- unknown -- wp%20athletics
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1549</link>
      <description>The WP Athletics WordPress plugin through 1.1.7 does not sanitize parameters before storing them in the database, nor does it escape the values when outputting them back in the admin dashboard, leading to a Stored Cross-Site Scripting vulnerability.</description>
      <guid isPermaLink="false">CVE-2022-1549|2024-08-03T00:10:03.671Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:41:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2267|2024-08-03T00:32:09.262Z -- unknown -- mailchimp%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2267</link>
      <description>The Mailchimp for WooCommerce WordPress plugin before 2.7.1 has an AJAX action that allows any logged in users (such as subscriber) to perform a POST request on behalf of the server to the internal network/LAN, the body of the request is also appended to the response so it can be used to scan private network for example</description>
      <guid isPermaLink="false">CVE-2022-2267|2024-08-03T00:32:09.262Z</guid>
      <pubDate>Mon, 29 Aug 2022 17:15:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1653|2024-08-03T00:10:03.754Z -- unknown -- social%20share%20buttons%20by%20supsystic
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1653</link>
      <description>The Social Share Buttons by Supsystic WordPress plugin before 2.2.4 does not perform CSRF checks in it's ajax endpoints and admin pages, allowing an attacker to trick any logged in user to manipulate or change the plugin settings, as well as create, delete and rename projects and networks.</description>
      <guid isPermaLink="false">CVE-2022-1653|2024-08-03T00:10:03.754Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:57:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24524|2024-08-03T19:35:20.023Z -- unknown -- givewp%20%E2%80%93%20donation%20plugin%20and%20fundraising%20platform
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24524</link>
      <description>The GiveWP – Donation Plugin and Fundraising Platform WordPress plugin before 2.12.0 did not escape the Donation Level setting of its Donation Forms, allowing high privilege users to use Cross-Site Scripting payloads in them.</description>
      <guid isPermaLink="false">CVE-2021-24524|2024-08-03T19:35:20.023Z</guid>
      <pubDate>Mon, 23 Aug 2021 11:09:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24923|2024-08-03T19:49:13.481Z -- unknown -- newsletter%2C%20smtp%2C%20email%20marketing%20and%20subscribe%20forms%20by%20sendinblue
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24923</link>
      <description>The Newsletter, SMTP, Email marketing and Subscribe forms by Sendinblue WordPress plugin before 3.1.25 does not escape the sib-statistics-date parameter before outputting it back in an attribute, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24923|2024-08-03T19:49:13.481Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:00:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3899|2024-08-03T01:20:58.555Z -- unknown -- 3dprint
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3899</link>
      <description>The 3dprint WordPress plugin before 3.5.6.9 does not protect against CSRF attacks in the modified version of Tiny File Manager included with the plugin, allowing an attacker to craft a malicious request that will delete any number of files or directories on the target server by tricking a logged in admin into submitting a form.</description>
      <guid isPermaLink="false">CVE-2022-3899|2024-08-03T01:20:58.555Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:50:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2269|2024-08-03T00:32:09.316Z -- unknown -- website%20file%20changes%20monitor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2269</link>
      <description>The Website File Changes Monitor WordPress plugin before 1.8.3 does not sanitise and escape user input before using it in a SQL statement via an action available to users with the manage_options capability (by default admins), leading to an SQL injection</description>
      <guid isPermaLink="false">CVE-2022-2269|2024-08-03T00:32:09.316Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:46:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1945|2024-08-03T00:24:42.604Z -- unknown -- coming%20soon%20%26%20maintenance%20mode%20by%20colorlib
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1945</link>
      <description>The Coming Soon &amp; Maintenance Mode by Colorlib WordPress plugin before 1.0.99 does not sanitize and escape some settings, allowing high privilege users such as admin to perform Stored Cross-Site Scripting when unfiltered_html is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-1945|2024-08-03T00:24:42.604Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3763|2024-08-03T01:20:58.275Z -- unknown -- booster%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3763</link>
      <description>The Booster for WooCommerce WordPress plugin before 5.6.7, Booster Plus for WooCommerce WordPress plugin before 5.6.5, Booster Elite for WooCommerce WordPress plugin before 1.1.7 do not have CSRF check in place when deleting files uploaded at the checkout, allowing attackers to make a logged in shop manager or admin delete them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-3763|2024-08-03T01:20:58.275Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2392|2024-08-03T00:39:06.383Z -- unknown -- lana%20downloads%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2392</link>
      <description>The Lana Downloads Manager WordPress plugin before 1.8.0 is affected by an arbitrary file download vulnerability that can be exploited by users with "Contributor" permissions or higher.</description>
      <guid isPermaLink="false">CVE-2022-2392|2024-08-03T00:39:06.383Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:03:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24512|2024-08-03T19:35:19.773Z -- unknown -- video%20posts%20webcam%20recorder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24512</link>
      <description>The Video Posts Webcam Recorder WordPress plugin before 3.2.4 has an authenticated reflected cross site scripting (XSS) vulnerability in one of the administrative functions for handling deletion of videos.</description>
      <guid isPermaLink="false">CVE-2021-24512|2024-08-03T19:35:19.773Z</guid>
      <pubDate>Mon, 16 Aug 2021 10:48:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25004|2024-08-03T19:49:14.557Z -- unknown -- seur%20oficial
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25004</link>
      <description>The SEUR Oficial WordPress plugin before 1.7.2 creates a PHP file with a random name when installed, even though it is used for support purposes, it allows to download any file from the web server without restriction after knowing the URL and a password than an administrator can see in the plugin settings page.</description>
      <guid isPermaLink="false">CVE-2021-25004|2024-08-03T19:49:14.557Z</guid>
      <pubDate>Mon, 07 Feb 2022 15:47:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24834|2024-08-03T19:42:17.214Z -- unknown -- yop%20poll
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24834</link>
      <description>The YOP Poll WordPress plugin before 6.3.1 is affected by a stored Cross-Site Scripting vulnerability which exists in the Create Poll - Options module where a user with a role as low as author is allowed to execute arbitrary script code within the context of the application. This vulnerability is due to insufficient validation of custom label parameters - vote button label , results link label and back to vote caption label.</description>
      <guid isPermaLink="false">CVE-2021-24834|2024-08-03T19:42:17.214Z</guid>
      <pubDate>Wed, 17 Nov 2021 10:15:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2556|2024-08-03T00:39:07.985Z -- unknown -- mailchimp%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2556</link>
      <description>The Mailchimp for WooCommerce WordPress plugin before 2.7.2 has an AJAX action that allows high privilege users to perform a POST request on behalf of the server to the internal network/LAN, the body of the request is also appended to the response so it can be used to scan private network for example</description>
      <guid isPermaLink="false">CVE-2022-2556|2024-08-03T00:39:07.985Z</guid>
      <pubDate>Mon, 29 Aug 2022 17:15:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24262|2024-08-03T19:28:22.703Z -- unknown -- woolentor%20%E2%80%93%20woocommerce%20elementor%20addons%20%2B%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24262</link>
      <description>The “WooLentor – WooCommerce Elementor Addons + Builder” WordPress Plugin before 1.8.6 has a widget that is vulnerable to stored Cross-Site Scripting (XSS) by lower-privileged users such as contributors, all via a similar method.</description>
      <guid isPermaLink="false">CVE-2021-24262|2024-08-03T19:28:22.703Z</guid>
      <pubDate>Wed, 05 May 2021 18:28:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3135|2024-08-03T01:00:10.561Z -- unknown -- seo%20smart%20links
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3135</link>
      <description>The SEO Smart Links WordPress plugin through 3.0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3135|2024-08-03T01:00:10.561Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3536|2024-08-03T01:14:02.420Z -- unknown -- role%20based%20pricing%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3536</link>
      <description>The Role Based Pricing for WooCommerce WordPress plugin before 1.6.3 does not have authorisation and proper CSRF checks, as well as does not validate path given via user input, allowing any authenticated users like subscriber to perform PHAR deserialization attacks when they can upload a file, and a suitable gadget chain is present on the blog</description>
      <guid isPermaLink="false">CVE-2022-3536|2024-08-03T01:14:02.420Z</guid>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24554|2024-08-03T19:35:20.133Z -- unknown -- paytm%20%E2%80%93%20donation%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24554</link>
      <description>The Paytm – Donation Plugin WordPress plugin through 1.3.2 does not sanitise, validate or escape the id GET parameter before using it in a SQL statement when deleting donations, leading to an authenticated SQL injection issue</description>
      <guid isPermaLink="false">CVE-2021-24554|2024-08-03T19:35:20.133Z</guid>
      <pubDate>Mon, 23 Aug 2021 11:10:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1952|2024-08-03T00:24:43.675Z -- unknown -- free%20booking%20plugin%20for%20hotels%2C%20restaurant%20and%20car%20rental%20%E2%80%93%20easync
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1952</link>
      <description>The Free Booking Plugin for Hotels, Restaurant and Car Rental WordPress plugin before 1.1.16 suffers from insufficient input validation which leads to arbitrary file upload and subsequently to remote code execution. An AJAX action accessible to unauthenticated users is affected by this issue. An allowlist of valid file extensions is defined but is not used during the validation steps.</description>
      <guid isPermaLink="false">CVE-2022-1952|2024-08-03T00:24:43.675Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:56:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24166|2024-08-03T19:21:18.612Z -- unknown -- ninja%20forms%20contact%20form%20%E2%80%93%20the%20drag%20and%20drop%20form%20builder%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24166</link>
      <description>The wp_ajax_nf_oauth_disconnect from the Ninja Forms Contact Form – The Drag and Drop Form Builder for WordPress WordPress plugin before 3.4.34 had no nonce protection making it possible for attackers to craft a request to disconnect a site's OAuth connection.</description>
      <guid isPermaLink="false">CVE-2021-24166|2024-08-03T19:21:18.612Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-23911|2024-08-03T03:59:22.478Z -- unknown -- testimonial%20wordpress%20plugin%20%E2%80%93%20ap%20custom%20testimonial
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-23911</link>
      <description>The Testimonial WordPress Plugin WordPress plugin before 1.4.7 does not validate and escape the id parameter before using it in a SQL statement when retrieving a testimonial to edit, leading to a SQL Injection</description>
      <guid isPermaLink="false">CVE-2022-23911|2024-08-03T03:59:22.478Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24185|2024-08-03T19:21:18.658Z -- unknown -- tutor%20lms%20%E2%80%93%20elearning%20and%20online%20course%20solution
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24185</link>
      <description>The tutor_place_rating AJAX action from the Tutor LMS – eLearning and online course solution WordPress plugin before 1.7.7 was vulnerable to blind and time based SQL injections that could be exploited by students.</description>
      <guid isPermaLink="false">CVE-2021-24185|2024-08-03T19:21:18.658Z</guid>
      <pubDate>Mon, 05 Apr 2021 18:27:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4795|2024-08-03T01:48:40.414Z -- unknown -- galleries%20by%20angie%20makes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4795</link>
      <description>The Galleries by Angie Makes WordPress plugin through 1.67 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4795|2024-08-03T01:48:40.414Z</guid>
      <pubDate>Mon, 27 Feb 2023 15:24:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24488|2024-08-03T19:35:19.741Z -- unknown -- post%20grid
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24488</link>
      <description>The slider import search feature and tab parameter of the Post Grid WordPress plugin before 2.1.8 settings are not properly sanitised before being output back in the pages, leading to Reflected Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-24488|2024-08-03T19:35:19.741Z</guid>
      <pubDate>Mon, 02 Aug 2021 10:32:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24413|2024-08-03T19:28:23.838Z -- unknown -- easy%20twitter%20feed
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24413</link>
      <description>The Easy Twitter Feed WordPress plugin before 1.2 does not sanitise or validate the parameters from its shortcode, allowing users with a role as low as contributor to set Cross-Site Scripting payload in them which will be triggered in the page/s with the embed malicious shortcode</description>
      <guid isPermaLink="false">CVE-2021-24413|2024-08-03T19:28:23.838Z</guid>
      <pubDate>Mon, 18 Oct 2021 13:45:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24270|2024-08-03T19:28:22.694Z -- unknown -- dethemekit%20for%20elementor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24270</link>
      <description>The “DeTheme Kit for Elementor” WordPress Plugin before 1.5.5.5 has a widget that is vulnerable to stored Cross-Site Scripting (XSS) by lower-privileged users such as contributors, all via a similar method.</description>
      <guid isPermaLink="false">CVE-2021-24270|2024-08-03T19:28:22.694Z</guid>
      <pubDate>Wed, 05 May 2021 18:28:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24239|2024-08-03T19:21:18.853Z -- unknown -- pie%20register%20%E2%80%93%20user%20registration%20forms.%20invitation%20based%20registrations%2C%20custom%20login%2C%20payments
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24239</link>
      <description>The Pie Register – User Registration Forms. Invitation based registrations, Custom Login, Payments WordPress plugin before 3.7.0.1 does not sanitise the invitaion_code GET parameter when outputting it in the Activation Code page, leading to a reflected Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2021-24239|2024-08-03T19:21:18.853Z</guid>
      <pubDate>Thu, 22 Apr 2021 21:00:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24128|2024-08-03T19:21:18.315Z -- unknown -- team%20members
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24128</link>
      <description>Unvalidated input and lack of output encoding in the Team Members WordPress plugin, versions before 5.0.4, lead to Cross-site scripting vulnerabilities allowing medium-privileged authenticated attacker (contributor+) to inject arbitrary web script or HTML via the 'Description/biography' of a member.</description>
      <guid isPermaLink="false">CVE-2021-24128|2024-08-03T19:21:18.315Z</guid>
      <pubDate>Thu, 18 Mar 2021 14:57:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3862|2024-08-03T01:20:58.779Z -- unknown -- livemesh%20addons%20for%20elementor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3862</link>
      <description>The Livemesh Addons for Elementor WordPress plugin before 7.2.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3862|2024-08-03T01:20:58.779Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1913|2024-08-03T00:17:00.938Z -- unknown -- add%20post%20url
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1913</link>
      <description>The Add Post URL WordPress plugin through 2.1.0 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping</description>
      <guid isPermaLink="false">CVE-2022-1913|2024-08-03T00:17:00.938Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:58:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4671|2024-08-03T01:48:39.499Z -- unknown -- pixcodes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4671</link>
      <description>The PixCodes WordPress plugin before 2.3.7 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4671|2024-08-03T01:48:39.499Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24241|2024-08-03T19:21:18.775Z -- unknown -- advanced%20custom%20fields%20pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24241</link>
      <description>The Advanced Custom Fields Pro WordPress plugin before 5.9.1 did not properly escape the generated update URL when outputting it in an attribute, leading to a reflected Cross-Site Scripting issue in the update settings page.</description>
      <guid isPermaLink="false">CVE-2021-24241|2024-08-03T19:21:18.775Z</guid>
      <pubDate>Thu, 22 Apr 2021 21:00:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25102|2024-08-03T19:56:10.670Z -- unknown -- all%20in%20one%20wp%20security%20%26%20firewall
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25102</link>
      <description>The All In One WP Security &amp; Firewall WordPress plugin before 4.4.11 does not validate, sanitise and escape the redirect_to parameter before using it to redirect user, either via a Location header, or meta url attribute, when the Rename Login Page is active, which could lead to an Arbitrary Redirect as well as Cross-Site Scripting issue. Exploitation of this issue requires the Login Page URL value to be known, which should be hard to guess, reducing the risk</description>
      <guid isPermaLink="false">CVE-2021-25102|2024-08-03T19:56:10.670Z</guid>
      <pubDate>Mon, 02 May 2022 16:05:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2215|2024-08-03T00:32:09.421Z -- unknown -- givewp%20%E2%80%93%20donation%20plugin%20and%20fundraising%20platform
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2215</link>
      <description>The GiveWP WordPress plugin before 2.21.3 does not properly sanitise and escape the currency settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2215|2024-08-03T00:32:09.421Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:50:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24350|2024-08-03T19:28:23.777Z -- unknown -- visitors
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24350</link>
      <description>The Visitors WordPress plugin through 0.3 is affected by an Unauthenticated Stored Cross-Site Scripting (XSS) vulnerability. The plugin would display the user's user agent string without validation or encoding within the WordPress admin panel.</description>
      <guid isPermaLink="false">CVE-2021-24350|2024-08-03T19:28:23.777Z</guid>
      <pubDate>Mon, 14 Jun 2021 13:37:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24860|2024-08-03T19:42:17.473Z -- unknown -- bsk%20pdf%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24860</link>
      <description>The BSK PDF Manager WordPress plugin before 3.1.2 does not validate and escape the orderby and order parameters before using them in a SQL statement, leading to a SQL injection issue</description>
      <guid isPermaLink="false">CVE-2021-24860|2024-08-03T19:42:17.473Z</guid>
      <pubDate>Mon, 29 Nov 2021 08:25:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24809|2024-08-03T19:42:17.375Z -- unknown -- bp%20better%20messages
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24809</link>
      <description>The BP Better Messages WordPress plugin before 1.9.9.41 does not check for CSRF in multiple of its AJAX actions: bp_better_messages_leave_chat, bp_better_messages_join_chat, bp_messages_leave_thread, bp_messages_mute_thread, bp_messages_unmute_thread, bp_better_messages_add_user_to_thread, bp_better_messages_exclude_user_from_thread. This could allow attackers to make logged in users do unwanted actions</description>
      <guid isPermaLink="false">CVE-2021-24809|2024-08-03T19:42:17.375Z</guid>
      <pubDate>Mon, 01 Nov 2021 08:46:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24792|2024-08-03T19:42:17.349Z -- unknown -- shiny%20buttons%20%E2%80%93%20css3%20button%20generator%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24792</link>
      <description>The Shiny Buttons WordPress plugin through 1.1.0 does not have any authorisation and CSRF in place when saving a template (wpbtn_save_template function hooked to the init action), nor sanitise and escape them before outputting them in the admin dashboard, which allow unauthenticated users to add a malicious template and lead to Stored Cross-Site Scripting issues.</description>
      <guid isPermaLink="false">CVE-2021-24792|2024-08-03T19:42:17.349Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:40:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3835|2024-08-03T01:20:58.762Z -- unknown -- kwayy%20html%20sitemap
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3835</link>
      <description>The Kwayy HTML Sitemap WordPress plugin before 4.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3835|2024-08-03T01:20:58.762Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1916|2024-08-03T00:17:00.927Z -- unknown -- active%20products%20tables%20for%20woocommerce.%20professional%20products%20tables%20for%20woocommerce%20store
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1916</link>
      <description>The Active Products Tables for WooCommerce. Professional products tables for WooCommerce store WordPress plugin before 1.0.5 does not sanitise and escape a parameter before outputting it back in the response of an AJAX action (available to both unauthenticated and authenticated users), leading to a Reflected cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-1916|2024-08-03T00:17:00.927Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:58:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24665|2024-08-03T19:42:16.082Z -- unknown -- wp%20video%20lightbox
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24665</link>
      <description>The WP Video Lightbox WordPress plugin before 1.9.3 does not escape the attributes of its shortcodes, allowing users with a role as low as contributor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2021-24665|2024-08-03T19:42:16.082Z</guid>
      <pubDate>Mon, 30 Aug 2021 14:11:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24721|2024-08-03T19:42:16.687Z -- unknown -- loco%20translate
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24721</link>
      <description>The Loco Translate WordPress plugin before 2.5.4 mishandles data inputs which get saved to a file, which can be renamed to an extension ending in .php, resulting in authenticated "translator" users being able to inject PHP code into files ending with .php in web accessible locations.</description>
      <guid isPermaLink="false">CVE-2021-24721|2024-08-03T19:42:16.687Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:35:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1626|2024-08-03T00:10:03.787Z -- unknown -- sharebar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1626</link>
      <description>The Sharebar WordPress plugin through 1.4.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and also lead to Stored Cross-Site Scripting issue due to the lack of sanitisation and escaping in some of them</description>
      <guid isPermaLink="false">CVE-2022-1626|2024-08-03T00:10:03.787Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:56:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25072|2024-08-03T19:56:09.925Z -- unknown -- nextscripts%3A%20social%20networks%20auto-poster
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25072</link>
      <description>The NextScripts: Social Networks Auto-Poster WordPress plugin before 4.3.25 does not have CSRF check in place when deleting items, allowing attacker to make a logged in admin delete arbitrary posts via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2021-25072|2024-08-03T19:56:09.925Z</guid>
      <pubDate>Tue, 01 Feb 2022 12:21:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4239|2024-08-03T01:34:49.603Z -- unknown -- workreap
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4239</link>
      <description>The Workreap WordPress theme before 2.6.4 does not verify that an addon service belongs to the user issuing the request, or indeed that it is an addon service, when processing the workreap_addons_service_remove action, allowing any user to delete any post by knowing or guessing the id.</description>
      <guid isPermaLink="false">CVE-2022-4239|2024-08-03T01:34:49.603Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3883|2024-08-03T01:20:58.630Z -- unknown -- block%20bad%20bots%20and%20stop%20bad%20bots%20crawlers%20and%20spiders%20and%20anti%20spam%20protection
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3883</link>
      <description>The Block Bad Bots and Stop Bad Bots Crawlers and Spiders and Anti Spam Protection WordPress plugin before 7.24 does not have proper authorisation and CSRF in an AJAX action, allowing any authenticated users, such as subscriber to call it and install and activate arbitrary plugins from wordpress.org</description>
      <guid isPermaLink="false">CVE-2022-3883|2024-08-03T01:20:58.630Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3768|2024-08-03T01:20:57.687Z -- unknown -- wpsmartcontracts
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3768</link>
      <description>The WPSmartContracts WordPress plugin before 1.3.12 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as author</description>
      <guid isPermaLink="false">CVE-2022-3768|2024-08-03T01:20:57.687Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24510|2024-08-03T19:35:20.087Z -- unknown -- mf%20gig%20calendar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24510</link>
      <description>The MF Gig Calendar WordPress plugin before 1.2 does not sanitise and escape the id GET parameter before outputting back in the admin dashboard when editing an Event, leading to a reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24510|2024-08-03T19:35:20.087Z</guid>
      <pubDate>Mon, 13 Sep 2021 17:56:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3463|2024-08-03T01:07:06.641Z -- unknown -- contact%20form%20plugin%20%E2%80%93%20fastest%20contact%20form%20builder%20plugin%20for%20wordpress%20by%20fluent%20forms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3463</link>
      <description>The Contact Form Plugin WordPress plugin before 4.3.13 does not validate and escape fields when exporting form entries as CSV, leading to a CSV injection</description>
      <guid isPermaLink="false">CVE-2022-3463|2024-08-03T01:07:06.641Z</guid>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1610|2024-08-03T00:10:03.683Z -- unknown -- seamless%20donations%3A%20a%20platform%20for%20global%20fundraising%20and%20rebuilding%20using%20stripe%20and%20paypal
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1610</link>
      <description>The Seamless Donations WordPress plugin before 5.1.9 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1610|2024-08-03T00:10:03.683Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:25:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3904|2024-08-03T01:20:58.788Z -- unknown -- monsterinsights
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3904</link>
      <description>The MonsterInsights WordPress plugin before 8.9.1 does not sanitize or escape page titles in the top posts/pages section, allowing an unauthenticated attacker to inject arbitrary web scripts into the titles by spoofing requests to google analytics.</description>
      <guid isPermaLink="false">CVE-2022-3904|2024-08-03T01:20:58.788Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24662|2024-08-03T19:42:16.041Z -- unknown -- game%20server%20status
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24662</link>
      <description>The Game Server Status WordPress plugin through 1.0 does not validate or escape the server_id parameter before using it in SQL statement, leading to an Authenticated SQL Injection in an admin page</description>
      <guid isPermaLink="false">CVE-2021-24662|2024-08-03T19:42:16.041Z</guid>
      <pubDate>Mon, 25 Oct 2021 13:20:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24380|2024-08-03T19:28:23.765Z -- unknown -- shantz%20wordpress%20qotd
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24380</link>
      <description>The Shantz WordPress QOTD WordPress plugin through 1.2.2 is lacking any CSRF check when updating its settings, allowing attackers to make logged in administrators change them to arbitrary values.</description>
      <guid isPermaLink="false">CVE-2021-24380|2024-08-03T19:28:23.765Z</guid>
      <pubDate>Mon, 16 Aug 2021 10:48:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24766|2024-08-03T19:42:16.949Z -- unknown -- 404%20to%20301%20%E2%80%93%20redirect%2C%20log%20and%20notify%20404%20errors
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24766</link>
      <description>The 404 to 301 – Redirect, Log and Notify 404 Errors WordPress plugin before 3.0.9 does not have CSRF check in place when cleaning the logs, which could allow attacker to make a logged in admin delete all of them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2021-24766|2024-08-03T19:42:16.949Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:35:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4624|2024-08-03T01:48:38.946Z -- unknown -- gs%20logo%20slider
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4624</link>
      <description>The GS Logo Slider WordPress plugin before 3.3.8 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4624|2024-08-03T01:48:38.946Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4303|2024-08-03T01:34:50.145Z -- unknown -- wp%20limit%20login%20attempts
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4303</link>
      <description>The WP Limit Login Attempts WordPress plugin through 2.6.4 prioritizes getting a visitor's IP from certain HTTP headers over PHP's REMOTE_ADDR, which makes it possible to bypass IP-based restrictions on login forms.</description>
      <guid isPermaLink="false">CVE-2022-4303|2024-08-03T01:34:50.145Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24601|2024-08-03T19:35:20.227Z -- unknown -- wpfront%20notification%20bar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24601</link>
      <description>The WPFront Notification Bar WordPress plugin before 2.1.0.08087 does not properly sanitise and escape its settings, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24601|2024-08-03T19:35:20.227Z</guid>
      <pubDate>Mon, 06 Sep 2021 11:09:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25076|2024-08-03T19:56:09.883Z -- unknown -- wp%20user%20frontend%20%E2%80%93%20membership%2C%20profile%2C%20registration%20%26%20post%20submission%20plugin%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25076</link>
      <description>The WP User Frontend WordPress plugin before 3.5.26 does not validate and escape the status parameter before using it in a SQL statement in the Subscribers dashboard, leading to an SQL injection. Due to the lack of sanitisation and escaping, this could also lead to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-25076|2024-08-03T19:56:09.883Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:01:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25009|2024-08-03T19:49:14.540Z -- unknown -- correosexpress%20%E2%80%93%20shipping%20management%20%E2%80%93%20tags
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25009</link>
      <description>The CorreosExpress WordPress plugin through 2.6.0 generates log files which are publicly accessible, and contain sensitive information such as sender/receiver names, phone numbers, physical and email addresses</description>
      <guid isPermaLink="false">CVE-2021-25009|2024-08-03T19:49:14.540Z</guid>
      <pubDate>Mon, 07 Mar 2022 08:16:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24769|2024-08-03T19:42:17.292Z -- unknown -- permalink%20manager%20lite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24769</link>
      <description>The Permalink Manager Lite WordPress plugin before 2.2.13.1 does not validate and escape the orderby parameter before using it in a SQL statement in the Permalink Manager page, leading to a SQL Injection</description>
      <guid isPermaLink="false">CVE-2021-24769|2024-08-03T19:42:17.292Z</guid>
      <pubDate>Mon, 25 Oct 2021 13:20:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24419|2024-08-03T19:28:23.802Z -- unknown -- wp%20youtube%20lyte
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24419</link>
      <description>The WP YouTube Lyte WordPress plugin before 1.7.16 did not sanitise or escape its lyte_yt_api_key and lyte_notification settings before outputting them back in the page, allowing high privilege users to set XSS payload on them and leading to stored Cross-Site Scripting issues.</description>
      <guid isPermaLink="false">CVE-2021-24419|2024-08-03T19:28:23.802Z</guid>
      <pubDate>Mon, 12 Jul 2021 19:20:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1842|2024-08-03T00:17:00.917Z -- unknown -- openbook%20book%20data
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1842</link>
      <description>The OpenBook Book Data WordPress plugin through 3.5.2 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping as well</description>
      <guid isPermaLink="false">CVE-2022-1842|2024-08-03T00:17:00.917Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:57:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1613|2024-08-03T00:10:03.795Z -- unknown -- restricted%20site%20access
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1613</link>
      <description>The Restricted Site Access WordPress plugin before 7.3.2 prioritizes getting a visitor's IP from certain HTTP headers over PHP's REMOTE_ADDR, which makes it possible to bypass IP-based limitations in certain situations.</description>
      <guid isPermaLink="false">CVE-2022-1613|2024-08-03T00:10:03.795Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24493|2024-08-03T19:35:20.019Z -- unknown -- shopp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24493</link>
      <description>The shopp_upload_file AJAX action of the Shopp WordPress plugin through 1.4, available to both unauthenticated and authenticated user does not have any security measure in place to prevent upload of malicious files, such as PHP, allowing unauthenticated users to upload arbitrary files and leading to RCE</description>
      <guid isPermaLink="false">CVE-2021-24493|2024-08-03T19:35:20.019Z</guid>
      <pubDate>Mon, 13 Sep 2021 17:56:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4576|2024-08-03T01:41:45.877Z -- unknown -- easy%20bootstrap%20shortcode
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4576</link>
      <description>The Easy Bootstrap Shortcode WordPress plugin through 4.5.4 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4576|2024-08-03T01:41:45.877Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24718|2024-08-03T19:42:16.633Z -- unknown -- contact%20form%2C%20survey%20%26%20popup%20form%20plugin%20for%20wordpress%20%E2%80%93%20%20arforms%20form%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24718</link>
      <description>The Contact Form, Survey &amp; Popup Form Plugin for WordPress plugin before 1.5 does not properly sanitize some of its settings allowing high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24718|2024-08-03T19:42:16.633Z</guid>
      <pubDate>Mon, 06 Dec 2021 15:55:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24870|2024-08-03T19:49:13.475Z -- unknown -- wp%20fastest%20cache
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24870</link>
      <description>The WP Fastest Cache WordPress plugin before 0.9.5 is lacking a CSRF check in its wpfc_save_cdn_integration AJAX action, and does not sanitise and escape some the options available via the action, which could allow attackers to make logged in high privilege users call it and set a Cross-Site Scripting payload</description>
      <guid isPermaLink="false">CVE-2021-24870|2024-08-03T19:49:13.475Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:49:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4752|2024-08-03T01:48:40.416Z -- unknown -- opening%20hours
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4752</link>
      <description>The Opening Hours WordPress plugin through 2.3.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4752|2024-08-03T01:48:40.416Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3882|2024-08-03T01:20:58.588Z -- unknown -- memory%20usage%2C%20memory%20limit%2C%20php%20and%20server%20memory%20health%20check%20and%20fix%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3882</link>
      <description>The Memory Usage, Memory Limit, PHP and Server Memory Health Check and Fix Plugin WordPress plugin before 2.46 does not have proper authorisation and CSRF in an AJAX action, allowing any authenticated users, such as subscriber to call it and install and activate arbitrary plugins from wordpress.org</description>
      <guid isPermaLink="false">CVE-2022-3882|2024-08-03T01:20:58.588Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1694|2024-08-03T00:10:03.759Z -- unknown -- useful%20banner%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1694</link>
      <description>The Useful Banner Manager WordPress plugin through 1.6.1 does not perform CSRF checks on POST requests to its admin page, allowing an attacker to trick a logged in admin to add, modify or delete banners from the plugin by submitting a form.</description>
      <guid isPermaLink="false">CVE-2022-1694|2024-08-03T00:10:03.759Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1761|2024-08-03T00:16:59.654Z -- unknown -- peter%E2%80%99s%20collaboration%20e-mails
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1761</link>
      <description>The Peter’s Collaboration E-mails WordPress plugin through 2.2.0 is vulnerable to CSRF due to missing nonce checks. This allows the change of its settings, which can be used to lower the required user level, change texts, the used email address and more.</description>
      <guid isPermaLink="false">CVE-2022-1761|2024-08-03T00:16:59.654Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1906|2024-08-03T00:17:00.966Z -- unknown -- copyright%20proof
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1906</link>
      <description>The Copyright Proof WordPress plugin through 4.16 does not sanitise and escape a parameter before outputting it back via an AJAX action available to both unauthenticated and authenticated users, leading to a Reflected Cross-Site Scripting when a specific setting is enabled.</description>
      <guid isPermaLink="false">CVE-2022-1906|2024-08-03T00:17:00.966Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:48:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24583|2024-08-03T19:35:20.182Z -- unknown -- timetable%20and%20event%20schedule%20by%20motopress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24583</link>
      <description>The Timetable and Event Schedule WordPress plugin before 2.4.2 does not have proper access control when deleting a timeslot, allowing any user with the edit_posts capability (contributor+) to delete arbitrary timeslot from any events. Furthermore, no CSRF check is in place as well, allowing such attack to be performed via CSRF against a logged in with such capability</description>
      <guid isPermaLink="false">CVE-2021-24583|2024-08-03T19:35:20.182Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24511|2024-08-03T19:35:20.158Z -- unknown -- product%20feed%20on%20woocommerce%20for%20google%2C%20awin%2C%20shareasale%2C%20bing%2C%20and%20more
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24511</link>
      <description>The fetch_product_ajax functionality in the Product Feed on WooCommerce WordPress plugin before 3.3.1.0 uses a `product_id` POST parameter which is not properly sanitised, escaped or validated before inserting to a SQL statement, leading to SQL injection.</description>
      <guid isPermaLink="false">CVE-2021-24511|2024-08-03T19:35:20.158Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24517|2024-08-03T19:35:19.868Z -- unknown -- stop%20spammers%20security%20%7C%20block%20spam%20users%2C%20comments%2C%20forms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24517</link>
      <description>The Stop Spammers Security | Block Spam Users, Comments, Forms WordPress plugin before 2021.18 does not escape some of its settings, allowing high privilege users such as admin to set Cross-Site Scripting payloads in them even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24517|2024-08-03T19:35:19.868Z</guid>
      <pubDate>Mon, 06 Sep 2021 11:09:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2357|2024-08-03T00:32:09.411Z -- unknown -- wsm%20downloader
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2357</link>
      <description>The WSM Downloader WordPress plugin through 1.4.0 allows any visitor to use its remote file download feature to download any local files, including sensitive ones like wp-config.php.</description>
      <guid isPermaLink="false">CVE-2022-2357|2024-08-03T00:32:09.411Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:47:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3689|2024-08-03T01:14:03.307Z -- unknown -- html%20forms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3689</link>
      <description>The HTML Forms WordPress plugin before 1.3.25 does not properly properly escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users</description>
      <guid isPermaLink="false">CVE-2022-3689|2024-08-03T01:14:03.307Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24620|2024-08-03T19:35:20.207Z -- unknown -- wordpress%20simple%20ecommerce%20shopping%20cart%20plugin-%20sell%20products%20through%20paypal
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24620</link>
      <description>The WordPress Simple Ecommerce Shopping Cart Plugin- Sell products through Paypal plugin through 2.2.5 does not check for the uploaded Downloadable Digital product file, allowing any file, such as PHP to be uploaded by an administrator. Furthermore, as there is no CSRF in place, attackers could also make a logged admin upload a malicious PHP file, which would lead to RCE</description>
      <guid isPermaLink="false">CVE-2021-24620|2024-08-03T19:35:20.207Z</guid>
      <pubDate>Mon, 13 Sep 2021 17:56:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24541|2024-08-03T19:35:20.103Z -- unknown -- wonder%20pdf%20embed
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24541</link>
      <description>The Wonder PDF Embed WordPress plugin before 1.7 does not escape parameters of its wonderplugin_pdf shortcode, which could allow users with a role as low as Contributor to perform Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2021-24541|2024-08-03T19:35:20.103Z</guid>
      <pubDate>Mon, 16 Aug 2021 10:48:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24909|2024-08-03T19:49:12.686Z -- unknown -- acf%20photo%20gallery%20field
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24909</link>
      <description>The ACF Photo Gallery Field WordPress plugin before 1.7.5 does not sanitise and escape the post parameter in the includes/acf_photo_gallery_metabox_edit.php file before outputing back in an attribute, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24909|2024-08-03T19:49:12.686Z</guid>
      <pubDate>Mon, 17 Jan 2022 13:00:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-22735|2024-08-03T03:21:48.905Z -- unknown -- simple%20quotation
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-22735</link>
      <description>The Simple Quotation WordPress plugin through 1.3.2 does not have authorisation (and CSRF) checks in various of its AJAX actions and is lacking escaping of user data when using it in SQL statements, allowing any authenticated users, such as subscriber to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2022-22735|2024-08-03T03:21:48.905Z</guid>
      <pubDate>Mon, 14 Mar 2022 14:41:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24622|2024-08-03T19:35:20.252Z -- unknown -- customer%20service%20software%20%26%20support%20ticket%20system
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24622</link>
      <description>The Customer Service Software &amp; Support Ticket System WordPress plugin before 5.10.4 does not sanitize or escape form fields before outputting it in the List, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24622|2024-08-03T19:35:20.252Z</guid>
      <pubDate>Mon, 18 Oct 2021 13:45:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2090|2024-08-03T00:24:44.180Z -- unknown -- discount%20rules%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2090</link>
      <description>The Discount Rules for WooCommerce WordPress plugin before 2.4.2 does not escape a parameter before outputting it back in an attribute of the plugin's discount rule page, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2090|2024-08-03T00:24:44.180Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:35:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24885|2024-08-03T19:49:12.695Z -- unknown -- yop%20poll
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24885</link>
      <description>The YOP Poll WordPress plugin before 6.1.2 does not escape the perpage parameter before outputting it back in an attribute, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-24885|2024-08-03T19:49:12.695Z</guid>
      <pubDate>Mon, 25 Oct 2021 13:21:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25015|2024-08-03T19:49:14.601Z -- unknown -- mycred%20%E2%80%93%20points%2C%20rewards%2C%20gamification%2C%20ranks%2C%20badges%20%26%20loyalty%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25015</link>
      <description>The myCred WordPress plugin before 2.4 does not sanitise and escape the search query before outputting it back in the history dashboard page, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-25015|2024-08-03T19:49:14.601Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:01:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3335|2024-08-03T01:07:06.557Z -- unknown -- kadence%20woocommerce%20email%20designer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3335</link>
      <description>The Kadence WooCommerce Email Designer WordPress plugin before 1.5.7 unserialises the content of an imported file, which could lead to PHP object injections issues when an admin import (intentionally or not) a malicious file and a suitable gadget chain is present on the blog.</description>
      <guid isPermaLink="false">CVE-2022-3335|2024-08-03T01:07:06.557Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25001|2024-08-03T19:49:14.584Z -- unknown -- booster%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25001</link>
      <description>The Booster for WooCommerce WordPress plugin before 5.4.9 does not sanitise and escape the wcj_create_products_xml_result parameter before outputting back in the admin dashboard when the Product XML Feeds module is enabled, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-25001|2024-08-03T19:49:14.584Z</guid>
      <pubDate>Mon, 03 Jan 2022 12:49:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24701|2024-08-03T19:42:16.217Z -- unknown -- quiz%20tool%20lite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24701</link>
      <description>The Quiz Tool Lite WordPress plugin through 2.3.15 does not sanitize multiple input fields used when creating or managing quizzes and in other setting options, allowing high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24701|2024-08-03T19:42:16.217Z</guid>
      <pubDate>Mon, 08 Nov 2021 17:35:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1594|2024-08-03T00:10:03.579Z -- unknown -- hc%20custom%20wp-admin%20url
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1594</link>
      <description>The HC Custom WP-Admin URL WordPress plugin through 1.4 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack, allowing them to change the login URL</description>
      <guid isPermaLink="false">CVE-2022-1594|2024-08-03T00:10:03.579Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25097|2024-08-03T19:56:11.072Z -- unknown -- labtools
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25097</link>
      <description>The LabTools WordPress plugin through 1.0 does not have proper authorisation and CSRF check in place when deleting publications, allowing any authenticated users, such as subscriber to delete arbitrary publication</description>
      <guid isPermaLink="false">CVE-2021-25097|2024-08-03T19:56:11.072Z</guid>
      <pubDate>Tue, 01 Feb 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24956|2024-08-03T19:49:14.027Z -- unknown -- blog2social%3A%20social%20media%20auto%20post%20%26%20scheduler
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24956</link>
      <description>The Blog2Social: Social Media Auto Post &amp; Scheduler WordPress plugin before 6.8.7 does not sanitise and escape the b2sShowByDate parameter before outputting it back in an admin page, leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24956|2024-08-03T19:49:14.027Z</guid>
      <pubDate>Tue, 21 Dec 2021 08:45:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24819|2024-08-03T19:42:17.341Z -- unknown -- page%2Fpost%20content%20shortcode
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24819</link>
      <description>The Page/Post Content Shortcode WordPress plugin through 1.0 does not have proper authorisation in place, allowing users with a role as low as contributor to access draft/private/password protected/trashed posts/pages they should not be allowed to, including posts created by other users such as admins and editors.</description>
      <guid isPermaLink="false">CVE-2021-24819|2024-08-03T19:42:17.341Z</guid>
      <pubDate>Mon, 13 Dec 2021 10:41:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4118|2024-08-03T01:27:54.447Z -- unknown -- bitcoin%20%2F%20altcoin%20payment%20gateway%20for%20woocommerce%20%26%20multivendor%20store%20%2F%20shop
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4118</link>
      <description>The Bitcoin / AltCoin Payment Gateway for WooCommerce &amp; Multivendor store / shop WordPress plugin through 1.7.1 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by authenticated users</description>
      <guid isPermaLink="false">CVE-2022-4118|2024-08-03T01:27:54.447Z</guid>
      <pubDate>Mon, 08 May 2023 13:58:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2149|2024-08-03T00:24:44.276Z -- unknown -- very%20simple%20breadcrumb
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2149</link>
      <description>The Very Simple Breadcrumb WordPress plugin through 1.0 does not sanitise and escape its settings, allowing high privilege users such as admin to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2149|2024-08-03T00:24:44.276Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:36:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25019|2024-08-03T19:49:14.529Z -- unknown -- seo%20plugin%20by%20squirrly%20seo
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25019</link>
      <description>The SEO Plugin by Squirrly SEO WordPress plugin before 11.1.12 does not escape the type parameter before outputting it back in an attribute in an admin page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-25019|2024-08-03T19:49:14.529Z</guid>
      <pubDate>Mon, 21 Mar 2022 18:55:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2317|2024-08-03T00:32:09.549Z -- unknown -- simple%20membership
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2317</link>
      <description>The Simple Membership WordPress plugin before 4.1.3 allows user to change their membership at the registration stage due to insufficient checking of a user supplied parameter.</description>
      <guid isPermaLink="false">CVE-2022-2317|2024-08-03T00:32:09.549Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:52:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24979|2024-08-03T19:49:14.417Z -- unknown -- paid%20memberships%20pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24979</link>
      <description>The Paid Memberships Pro WordPress plugin before 2.6.6 does not escape the s parameter before outputting it back in an attribute in an admin page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2021-24979|2024-08-03T19:49:14.417Z</guid>
      <pubDate>Mon, 27 Dec 2021 10:33:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2168|2024-08-03T00:32:08.598Z -- unknown -- download%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2168</link>
      <description>The Download Manager WordPress plugin before 3.2.44 does not escape a generated URL before outputting it back in an attribute of the history dashboard, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2168|2024-08-03T00:32:08.598Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:36:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1732|2024-08-03T00:16:59.695Z -- unknown -- rename%20wp-login.php
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1732</link>
      <description>The Rename wp-login.php WordPress plugin through 2.6.0 does not have CSRF check in place when updating the secret login URL, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1732|2024-08-03T00:16:59.695Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:56:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24424|2024-08-03T19:28:23.976Z -- unknown -- wp%20reset%20%E2%80%93%20most%20advanced%20wordpress%20reset%20tool
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24424</link>
      <description>The WP Reset – Most Advanced WordPress Reset Tool WordPress plugin before 1.90 did not sanitise or escape its extra_data parameter when creating a snapshot via the admin dashboard, leading to an authenticated Stored Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24424|2024-08-03T19:28:23.976Z</guid>
      <pubDate>Mon, 12 Jul 2021 19:20:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4716|2024-08-03T01:48:40.020Z -- unknown -- wp%20popups
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4716</link>
      <description>The WP Popups WordPress plugin before 2.1.4.8 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4716|2024-08-03T01:48:40.020Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24527|2024-08-03T19:35:19.893Z -- unknown -- user%20registration%20%26%20user%20profile%20%E2%80%93%20profile%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24527</link>
      <description>The User Registration &amp; User Profile – Profile Builder WordPress plugin before 3.4.9 has a bug allowing any user to reset the password of the admin of the blog, and gain unauthorised access, due to a bypass in the way the reset key is checked. Furthermore, the admin will not be notified of such change by email for example.</description>
      <guid isPermaLink="false">CVE-2021-24527|2024-08-03T19:35:19.893Z</guid>
      <pubDate>Mon, 16 Aug 2021 10:48:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24268|2024-08-03T19:28:22.758Z -- unknown -- jetwidgets%20for%20elementor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24268</link>
      <description>The “JetWidgets For Elementor” WordPress Plugin before 1.0.9 has several widgets that are vulnerable to stored Cross-Site Scripting (XSS) by lower-privileged users such as contributors, all via a similar method.</description>
      <guid isPermaLink="false">CVE-2021-24268|2024-08-03T19:28:22.758Z</guid>
      <pubDate>Wed, 05 May 2021 18:28:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24513|2024-08-03T19:35:19.766Z -- unknown -- form%20builder%20%7C%20create%20responsive%20contact%20forms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24513</link>
      <description>The Form Builder | Create Responsive Contact Forms WordPress plugin before 1.9.8.4 does not sanitise or escape its Form Title, allowing high privilege users such as admin to set Cross-Site Scripting payload in them, even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24513|2024-08-03T19:35:19.766Z</guid>
      <pubDate>Mon, 06 Sep 2021 11:09:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24965|2024-08-03T19:49:14.377Z -- unknown -- five%20star%20restaurant%20reservations%20%E2%80%93%20wordpress%20booking%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24965</link>
      <description>The Five Star Restaurant Reservations WordPress plugin before 2.4.8 does not have capability and CSRF checks in the rtb_welcome_set_schedule AJAX action, allowing any authenticated users to call it. Due to the lack of sanitisation and escaping, users with a role as low as subscriber could perform Cross-Site Scripting attacks against logged in admins</description>
      <guid isPermaLink="false">CVE-2021-24965|2024-08-03T19:49:14.377Z</guid>
      <pubDate>Mon, 24 Jan 2022 08:00:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24884|2024-08-03T19:49:14.206Z -- unknown -- formidable%20form%20builder%20%E2%80%93%20contact%20form%2C%20survey%20%26%20quiz%20forms%20plugin%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24884</link>
      <description>The Formidable Form Builder WordPress plugin before 4.09.05 allows to inject certain HTML Tags like &lt;audio&gt;,&lt;video&gt;,&lt;img&gt;,&lt;a&gt; and&lt;button&gt;.This could allow an unauthenticated, remote attacker to exploit a HTML-injection byinjecting a malicous link. The HTML-injection may trick authenticated users to follow the link. If the Link gets clicked, Javascript code can be executed. The vulnerability is due to insufficient sanitization of the "data-frmverify" tag for links in the web-based entry inspection page of affected systems. A successful exploitation incomibantion with CSRF could allow the attacker to perform arbitrary actions on an affected system with the privileges of the user. These actions include stealing the users account by changing their password or allowing attackers to submit their own code through an authenticated user resulting in Remote Code Execution. If an authenticated user who is able to edit Wordpress PHP Code in any kind, clicks the malicious link, PHP code can be edited.</description>
      <guid isPermaLink="false">CVE-2021-24884|2024-08-03T19:49:14.206Z</guid>
      <pubDate>Mon, 25 Oct 2021 13:20:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4243|2024-08-03T01:34:49.968Z -- unknown -- imageinject
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4243</link>
      <description>The ImageInject WordPress plugin through 1.17 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4243|2024-08-03T01:34:49.968Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24978|2024-08-03T19:49:14.082Z -- unknown -- osmapper
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24978</link>
      <description>The OSMapper WordPress plugin through 2.1.5 contains an AJAX action to delete a plugin related post type named 'map' and is registered with the wp_ajax_nopriv prefix, making it available to unauthenticated users. There is no authorisation, CSRF and checks in place to ensure that the post to delete is a map one. As a result, unauthenticated user can delete arbitrary posts from the blog</description>
      <guid isPermaLink="false">CVE-2021-24978|2024-08-03T19:49:14.082Z</guid>
      <pubDate>Mon, 28 Mar 2022 17:21:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4570|2024-08-03T01:41:45.677Z -- unknown -- top%2010
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4570</link>
      <description>The Top 10 WordPress plugin before 3.2.3 does not validate and escape some of its Block attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4570|2024-08-03T01:41:45.677Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3082|2024-08-03T01:00:10.268Z -- unknown -- miniorange%20discord%20integration
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3082</link>
      <description>The miniOrange Discord Integration WordPress plugin before 2.1.6 does not have authorisation and CSRF in some of its AJAX actions, allowing any logged in users, such as subscriber to call them, and disable the app for example</description>
      <guid isPermaLink="false">CVE-2022-3082|2024-08-03T01:00:10.268Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3879|2024-08-03T01:20:58.797Z -- unknown -- car%20dealer%20%28dealership%29%20and%20vehicle%20sales%20wordpress%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3879</link>
      <description>The Car Dealer (Dealership) and Vehicle sales WordPress Plugin WordPress plugin before 3.05 does not have proper authorisation and CSRF in an AJAX action, allowing any authenticated users, such as subscriber to call it and install and activate arbitrary plugins from wordpress.org</description>
      <guid isPermaLink="false">CVE-2022-3879|2024-08-03T01:20:58.797Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2050|2024-08-03T00:24:44.187Z -- unknown -- wp-paginate
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2050</link>
      <description>The WP-Paginate WordPress plugin before 2.1.9 does not escape one of its settings, which could allow high privilege users to perform Stored Cross-Site Scripting attacks when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2022-2050|2024-08-03T00:24:44.187Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:57:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24813|2024-08-03T19:42:17.348Z -- unknown -- events%20made%20easy
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24813</link>
      <description>The Events Made Easy WordPress plugin before 2.2.24 does not sanitise and escape Custom Field Names, allowing high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2021-24813|2024-08-03T19:42:17.348Z</guid>
      <pubDate>Mon, 01 Nov 2021 08:46:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3537|2024-08-03T01:14:01.998Z -- unknown -- role%20based%20pricing%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3537</link>
      <description>The Role Based Pricing for WooCommerce WordPress plugin before 1.6.2 does not have authorisation and proper CSRF checks, and does not validate files to be uploaded, allowing any authenticated users like subscriber to upload arbitrary files, such as PHP</description>
      <guid isPermaLink="false">CVE-2022-3537|2024-08-03T01:14:01.998Z</guid>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2551|2024-08-03T00:39:08.049Z -- unknown -- duplicator%20%E2%80%93%20wordpress%20migration%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2551</link>
      <description>The Duplicator WordPress plugin before 1.4.7 discloses the url of the a backup to unauthenticated visitors accessing the main installer endpoint of the plugin, if the installer script has been run once by an administrator, allowing download of the full site backup without authenticating.</description>
      <guid isPermaLink="false">CVE-2022-2551|2024-08-03T00:39:08.049Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:03:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24640|2024-08-03T19:35:20.417Z -- unknown -- wordpress%20slider%20block%20gutenslider
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24640</link>
      <description>The WordPress Slider Block Gutenslider plugin before 5.2.0 does not escape the minWidth attribute of a Gutenburg block, which could allow users with a role as low as contributor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2021-24640|2024-08-03T19:35:20.417Z</guid>
      <pubDate>Mon, 20 Sep 2021 10:06:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4227|2024-08-03T01:34:50.008Z -- unknown -- booster%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4227</link>
      <description>The Booster for WooCommerce WordPress plugin before 5.6.3, Booster Plus for WooCommerce WordPress plugin before 6.0.0, Booster Elite for WooCommerce WordPress plugin before 6.0.0 do not escape some URLs and parameters before outputting them back in attributes, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-4227|2024-08-03T01:34:50.008Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25023|2024-08-03T19:49:14.527Z -- unknown -- speed%20booster%20pack%20%E2%9A%A1%20pagespeed%20optimization%20suite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25023</link>
      <description>The Speed Booster Pack ⚡ PageSpeed Optimization Suite WordPress plugin before 4.3.3.1 does not escape the sbp_convert_table_name parameter before using it in a SQL statement to convert the related table, leading to an SQL injection</description>
      <guid isPermaLink="false">CVE-2021-25023|2024-08-03T19:49:14.527Z</guid>
      <pubDate>Mon, 03 Jan 2022 12:49:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3880|2024-08-03T01:20:58.887Z -- unknown -- disable%20json%20api%2C%20login%20lockdown%2C%20xmlrpc%2C%20pingback%2C%20stop%20user%20enumeration%20anti%20hacker%20scan
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3880</link>
      <description>The Disable Json API, Login Lockdown, XMLRPC, Pingback, Stop User Enumeration Anti Hacker Scan WordPress plugin before 4.20 does not have proper authorisation and CSRF in an AJAX action, allowing any authenticated users, such as subscriber to call it and install and activate arbitrary plugins from wordpress.org</description>
      <guid isPermaLink="false">CVE-2022-3880|2024-08-03T01:20:58.887Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24430|2024-08-03T19:28:23.974Z -- unknown -- speed%20booster%20pack%20%E2%9A%A1%20pagespeed%20optimization%20suite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24430</link>
      <description>The Speed Booster Pack ⚡ PageSpeed Optimization Suite WordPress plugin before 4.2.0 did not validate its caching_exclude_urls and caching_include_query_strings settings before outputting them in a PHP file, which could lead to RCE</description>
      <guid isPermaLink="false">CVE-2021-24430|2024-08-03T19:28:23.974Z</guid>
      <pubDate>Mon, 02 Aug 2021 10:31:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24881|2024-08-03T19:49:13.958Z -- unknown -- passster
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24881</link>
      <description>The Passster WordPress plugin before 3.5.5.9 does not properly check for password, as well as that the post to be viewed is public, allowing unauthenticated users to bypass the protection offered by the plugin, and access arbitrary posts (such as private) content, by sending a specifically crafted request.</description>
      <guid isPermaLink="false">CVE-2021-24881|2024-08-03T19:49:13.958Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24815|2024-08-03T19:42:17.342Z -- unknown -- accept%20donations%20with%20paypal
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24815</link>
      <description>The Accept Donations with PayPal WordPress plugin before 1.3.2 does not escape the Amount Menu Name field of created Buttons, which could allow a high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24815|2024-08-03T19:42:17.342Z</guid>
      <pubDate>Wed, 17 Nov 2021 10:15:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1538|2024-08-03T00:10:03.024Z -- unknown -- theme%20demo%20import
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1538</link>
      <description>Theme Demo Import WordPress plugin before 1.1.1 does not validate the imported file, allowing high-privilege users such as admin to upload arbitrary files (such as PHP) even when FILE_MODS and FILE_EDIT are disallowed.</description>
      <guid isPermaLink="false">CVE-2022-1538|2024-08-03T00:10:03.024Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:50:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3915|2024-08-03T01:20:58.821Z -- unknown -- dokan
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3915</link>
      <description>The Dokan WordPress plugin before 3.7.6 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by unauthenticated users</description>
      <guid isPermaLink="false">CVE-2022-3915|2024-08-03T01:20:58.821Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3076|2024-08-03T01:00:09.712Z -- unknown -- cm%20download%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3076</link>
      <description>The CM Download Manager WordPress plugin before 2.8.6 allows high privilege users such as admin to upload arbitrary files by setting the any extension via the plugin's setting, which could be used by admins of multisite blog to upload PHP files for example.</description>
      <guid isPermaLink="false">CVE-2022-3076|2024-08-03T01:00:09.712Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24935|2024-08-03T19:49:13.517Z -- unknown -- wp%20google%20fonts
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24935</link>
      <description>The WP Google Fonts WordPress plugin before 3.1.5 does not escape the googlefont_ajax_name and googlefont_ajax_family parameter of the googlefont_action AJAx action (available to any authenticated user) before outputing them in attributes, leading Reflected Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2021-24935|2024-08-03T19:49:13.517Z</guid>
      <pubDate>Mon, 06 Dec 2021 15:55:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24915|2024-08-03T19:49:13.959Z -- unknown -- contest%20gallery%20%E2%80%93%20photo%20contest%20plugin%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24915</link>
      <description>The Contest Gallery WordPress plugin before 13.1.0.6 does not have capability checks and does not sanitise or escape the cg-search-user-name-original parameter before using it in a SQL statement when exporting users from a gallery, which could allow unauthenticated to perform SQL injections attacks, as well as get the list of all users registered on the blog, including their username and email address</description>
      <guid isPermaLink="false">CVE-2021-24915|2024-08-03T19:49:13.959Z</guid>
      <pubDate>Mon, 29 Nov 2021 08:25:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24421|2024-08-03T19:28:24.004Z -- unknown -- wp%20jobsearch
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24421</link>
      <description>The WP JobSearch WordPress plugin before 1.7.4 did not sanitise or escape multiple of its parameters from the my-resume page before outputting them in the page, allowing low privilege users to use JavaScript payloads in them and leading to a Stored Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2021-24421|2024-08-03T19:28:24.004Z</guid>
      <pubDate>Mon, 12 Jul 2021 19:20:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1781|2024-08-03T00:16:59.892Z -- unknown -- posttabs
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1781</link>
      <description>The postTabs WordPress plugin through 2.10.6 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack, which also lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping</description>
      <guid isPermaLink="false">CVE-2022-1781|2024-08-03T00:16:59.892Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3489|2024-08-03T01:14:01.546Z -- unknown -- wp-hide
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3489</link>
      <description>The WP Hide WordPress plugin through 0.0.2 does not have authorisation and CSRF checks in place when updating the custom_wpadmin_slug settings, allowing unauthenticated attackers to update it with a crafted request</description>
      <guid isPermaLink="false">CVE-2022-3489|2024-08-03T01:14:01.546Z</guid>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24574|2024-08-03T19:35:20.295Z -- unknown -- simple%20banner
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24574</link>
      <description>The Simple Banner WordPress plugin before 2.10.4 does not sanitise and escape one of its settings, allowing high privilege users such as admin to use Cross-Site Scripting payload even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2021-24574|2024-08-03T19:35:20.295Z</guid>
      <pubDate>Mon, 23 Aug 2021 11:10:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2239|2024-08-03T00:32:09.285Z -- unknown -- request%20a%20quote
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2239</link>
      <description>The Request a Quote WordPress plugin before 2.3.9 does not sanitise and escape some of its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2239|2024-08-03T00:32:09.285Z</guid>
      <pubDate>Mon, 25 Jul 2022 12:47:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-23912|2024-08-03T03:59:22.638Z -- unknown -- testimonial%20wordpress%20plugin%20%E2%80%93%20ap%20custom%20testimonial
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-23912</link>
      <description>The Testimonial WordPress Plugin WordPress plugin before 1.4.7 does not sanitise and escape the id parameter before outputting it back in an attribute, leading to a Reflected cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-23912|2024-08-03T03:59:22.638Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7232|2024-08-02T17:32:05.721Z -- unknown -- backup%20and%20restore%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7232</link>
      <description>The Backup and Restore WordPress  WordPress plugin through 1.45 does not protect some log files containing sensitive information such as site configuration etc, allowing unauthenticated users to access such data</description>
      <guid isPermaLink="false">CVE-2023-7232|2024-08-02T17:32:05.721Z</guid>
      <pubDate>Tue, 26 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0858|2024-08-02T15:24:33.234Z -- unknown -- innovs%20hr</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0858</link>
      <description>The Innovs HR WordPress plugin through 1.0.3.4 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as adding them as employees.</description>
      <guid isPermaLink="false">CVE-2024-0858|2024-08-02T15:24:33.234Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3476|2024-08-02T13:39:35.587Z -- unknown -- side%20menu%20lite</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3476</link>
      <description>The Side Menu Lite  WordPress plugin before 4.2.1 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting buttons via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3476|2024-08-02T13:39:35.587Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4826|2024-08-02T07:38:00.761Z -- unknown -- socialdriver</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-4826</link>
      <description>The SocialDriver WordPress theme before version 2024 has a prototype pollution vulnerability that could allow an attacker to inject arbitrary properties resulting in a cross-site scripting (XSS) attack.</description>
      <guid isPermaLink="false">CVE-2023-4826|2024-08-02T07:38:00.761Z</guid>
      <pubDate>Fri, 23 Feb 2024 09:14:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3368|2024-08-01T20:05:08.481Z -- unknown -- all%20in%20one%20seo</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3368</link>
      <description>The All in One SEO  WordPress plugin before 4.6.1.1 does not validate and escape some of its Post fields before outputting them back, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3368|2024-08-01T20:05:08.481Z</guid>
      <pubDate>Mon, 20 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3265|2024-08-01T20:05:08.327Z -- unknown -- advanced%20search</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3265</link>
      <description>The Advanced Search WordPress plugin through 1.1.6 does not properly escape parameters appended to an SQL query, making it possible for users with the administrator role to conduct SQL Injection attacks in the context of a multisite WordPress configurations.</description>
      <guid isPermaLink="false">CVE-2024-3265|2024-08-01T20:05:08.327Z</guid>
      <pubDate>Thu, 25 Apr 2024 21:25:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4530|2024-08-01T20:40:47.526Z -- unknown -- business%20card</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4530</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as editing card categories via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4530|2024-08-01T20:40:47.526Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4977|2024-08-01T20:55:10.402Z -- unknown -- index%20wp%20mysql%20for%20speed</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4977</link>
      <description>The Index WP MySQL For Speed WordPress plugin before 1.4.18 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-4977|2024-08-01T20:55:10.402Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4751|2024-08-01T20:47:41.669Z -- unknown -- wp%20prayer%20ii</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4751</link>
      <description>The WP Prayer II WordPress plugin through 2.4.7 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4751|2024-08-01T20:47:41.669Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3921|2024-08-01T20:26:57.194Z -- unknown -- gianism</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3921</link>
      <description>The Gianism WordPress plugin through 5.1.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3921|2024-08-01T20:26:57.194Z</guid>
      <pubDate>Wed, 29 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4377|2024-08-01T20:40:47.117Z -- unknown -- dop%20shortcodes</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4377</link>
      <description>The DOP Shortcodes WordPress plugin through 1.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4377|2024-08-01T20:40:47.117Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4565|2024-08-01T20:47:40.536Z -- unknown -- advanced%20custom%20fields%20%28acf%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4565</link>
      <description>The Advanced Custom Fields (ACF) WordPress plugin before 6.3, Advanced Custom Fields Pro WordPress plugin before 6.3 allows you to display custom field values for any post via shortcode without checking for the correct access</description>
      <guid isPermaLink="false">CVE-2024-4565|2024-08-01T20:47:40.536Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4959|2024-08-01T20:55:10.320Z -- unknown -- frontend%20checklist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4959</link>
      <description>The Frontend Checklist WordPress plugin through 2.3.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4959|2024-08-01T20:55:10.320Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3823|2024-08-01T20:20:02.164Z -- unknown -- base64%20encoder%2Fdecoder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3823</link>
      <description>The Base64 Encoder/Decoder WordPress plugin through 0.9.2 does not have CSRF check when updating its settings, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3823|2024-08-01T20:20:02.164Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3756|2024-08-01T20:20:00.980Z -- unknown -- mf%20gig%20calendar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3756</link>
      <description>The MF Gig Calendar WordPress plugin through 1.2.1 does not have CSRF checks in some places, which could allow attackers to make logged in Contributors and above delete arbitrary events via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3756|2024-08-01T20:20:00.980Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4382|2024-08-01T20:40:47.111Z -- unknown -- cb%20%28legacy%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4382</link>
      <description>The CB (legacy) WordPress plugin through 0.9.4.18 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting codes, timeframes, and bookings via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4382|2024-08-01T20:40:47.111Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4856|2024-08-01T20:55:10.223Z -- unknown -- fs%20product%20inquiry</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4856</link>
      <description>The FS Product Inquiry WordPress plugin through 1.1.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin or unauthenticated users</description>
      <guid isPermaLink="false">CVE-2024-4856|2024-08-01T20:55:10.223Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4900|2024-08-01T20:55:10.269Z -- unknown -- seopress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4900</link>
      <description>The SEOPress  WordPress plugin before 7.8 does not validate and escape one of its Post settings, which could allow contributor and above role to perform Open redirect attacks against any user viewing a malicious post</description>
      <guid isPermaLink="false">CVE-2024-4900|2024-08-01T20:55:10.269Z</guid>
      <pubDate>Mon, 24 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3629|2024-08-01T20:19:59.879Z -- unknown -- hl%20twitter</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3629</link>
      <description>The HL Twitter WordPress plugin through 2014.1.18 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3629|2024-08-01T20:19:59.879Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3918|2024-08-01T20:26:56.960Z -- unknown -- pet%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3918</link>
      <description>The Pet Manager WordPress plugin through 1.4 does not sanitise and escape some of its Pet settings, which could allow high privilege users such as Contributor to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-3918|2024-08-01T20:26:56.960Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3405|2024-08-01T20:12:07.156Z -- unknown -- wp%20prayer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3405</link>
      <description>The WP Prayer WordPress plugin through 2.0.9 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3405|2024-08-01T20:12:07.156Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3474|2024-08-01T20:12:07.276Z -- unknown -- wow%20skype%20buttons</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3474</link>
      <description>The Wow Skype Buttons WordPress plugin before 4.0.4 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting buttons via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3474|2024-08-01T20:12:07.276Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4061|2024-08-01T20:26:57.322Z -- unknown -- survey%20maker</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4061</link>
      <description>The Survey Maker  WordPress plugin before 4.2.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4061|2024-08-01T20:26:57.322Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3407|2024-08-01T20:12:06.634Z -- unknown -- wp%20prayer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3407</link>
      <description>The WP Prayer WordPress plugin through 2.0.9 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3407|2024-08-01T20:12:06.634Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4270|2024-08-01T20:33:53.193Z -- unknown -- svgmagic</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4270</link>
      <description>The SVGMagic WordPress plugin through 1.1 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4270|2024-08-01T20:33:53.193Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4269|2024-08-01T20:33:53.069Z -- unknown -- svg%20block</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4269</link>
      <description>The SVG Block WordPress plugin before 1.1.20 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4269|2024-08-01T20:33:53.069Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3755|2024-08-01T20:20:01.098Z -- unknown -- mf%20gig%20calendar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3755</link>
      <description>The MF Gig Calendar WordPress plugin through 1.2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as editor to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3755|2024-08-01T20:20:01.098Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3749|2024-08-01T20:20:01.139Z -- unknown -- sp%20project%20%26%20document%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3749</link>
      <description>The SP Project &amp; Document Manager WordPress plugin through 4.71 lacks proper access controllers and allows a logged in user to view and download files belonging to another user</description>
      <guid isPermaLink="false">CVE-2024-3749|2024-08-01T20:20:01.139Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4535|2024-08-01T20:40:47.529Z -- unknown -- kkprogressbar2%20free</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4535</link>
      <description>The KKProgressbar2 Free  WordPress plugin through 1.1.4.2 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4535|2024-08-01T20:40:47.529Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4145|2024-08-01T20:33:52.569Z -- unknown -- search%20%26%20replace</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4145</link>
      <description>The Search &amp; Replace WordPress plugin before 3.2.2 does not sanitize and escape a parameter before using it in a SQL statement, allowing admins to perform SQL injection attacks (such as within a multi-site network).</description>
      <guid isPermaLink="false">CVE-2024-4145|2024-08-01T20:33:52.569Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3903|2024-08-01T20:26:56.964Z -- unknown -- add%20custom%20css%20and%20js</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3903</link>
      <description>The Add Custom CSS and JS WordPress plugin through 1.20 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in as author and above add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3903|2024-08-01T20:26:56.964Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3669|2024-08-01T20:20:01.025Z -- unknown -- web%20directory%20free</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3669</link>
      <description>The Web Directory Free WordPress plugin before 1.7.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3669|2024-08-01T20:20:01.025Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4655|2024-08-01T20:47:41.826Z -- unknown -- ultimate%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4655</link>
      <description>The Ultimate Blocks  WordPress plugin before 3.1.9 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4655|2024-08-01T20:47:41.826Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4381|2024-08-01T20:40:46.927Z -- unknown -- cb%20%28legacy%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4381</link>
      <description>The CB (legacy) WordPress plugin through 0.9.4.18 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4381|2024-08-01T20:40:46.927Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3999|2024-08-01T20:26:57.231Z -- unknown -- eazydocs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3999</link>
      <description>The EazyDocs  WordPress plugin before 2.5.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3999|2024-08-01T20:26:57.231Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4759|2024-08-01T20:47:41.891Z -- unknown -- mime%20types%20extended</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4759</link>
      <description>The Mime Types Extended WordPress plugin through 0.11 does not sanitise uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2024-4759|2024-08-01T20:47:41.891Z</guid>
      <pubDate>Tue, 25 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3993|2024-08-01T20:26:57.248Z -- unknown -- azan%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3993</link>
      <description>The AZAN Plugin WordPress plugin through 0.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3993|2024-08-01T20:26:57.248Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3477|2024-08-01T20:12:07.199Z -- unknown -- popup%20box</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3477</link>
      <description>The Popup Box  WordPress plugin before 2.2.7 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting popups via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3477|2024-08-01T20:12:07.199Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3751|2024-08-01T20:20:01.023Z -- unknown -- seriously%20simple%20podcasting</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3751</link>
      <description>The Seriously Simple Podcasting WordPress plugin before 3.3.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3751|2024-08-01T20:20:01.023Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3971|2024-08-01T20:26:57.245Z -- unknown -- similarity</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3971</link>
      <description>The Similarity WordPress plugin through 3.0 does not have CSRF check in place when resetting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3971|2024-08-01T20:26:57.245Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3406|2024-08-01T20:12:07.274Z -- unknown -- wp%20prayer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3406</link>
      <description>The WP Prayer WordPress plugin through 2.0.9 does not have CSRF check in place when updating its email settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3406|2024-08-01T20:12:07.274Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4602|2024-08-01T20:47:41.440Z -- unknown -- embed%20peertube%20playlist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4602</link>
      <description>The Embed Peertube Playlist WordPress plugin before 1.10 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4602|2024-08-01T20:47:41.440Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3476|2024-08-01T20:12:07.793Z -- unknown -- side%20menu%20lite</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3476</link>
      <description>The Side Menu Lite  WordPress plugin before 4.2.1 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting buttons via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3476|2024-08-01T20:12:07.793Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3977|2024-08-01T20:26:57.263Z -- unknown -- wordpress%20jitsi%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3977</link>
      <description>The WordPress Jitsi Shortcode WordPress plugin through 0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3977|2024-08-01T20:26:57.263Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4096|2024-08-01T20:33:52.136Z -- unknown -- responsive%20tabs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4096</link>
      <description>The Responsive Tabs WordPress plugin through 4.0.8 does not sanitise and escape some of its Tab settings, which could allow high privilege users such as Contributors and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4096|2024-08-01T20:33:52.136Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4750|2024-08-01T20:47:41.684Z -- unknown -- buddyboss-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4750</link>
      <description>The buddyboss-platform WordPress plugin before 2.6.0 contains an IDOR vulnerability that allows a user to like a private post by manipulating the ID included in the request</description>
      <guid isPermaLink="false">CVE-2024-4750|2024-08-01T20:47:41.684Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4480|2024-08-01T20:40:47.127Z -- unknown -- wp%20prayer%20ii</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4480</link>
      <description>The WP Prayer II WordPress plugin through 2.4.7 does not have CSRF check in place when updating its email settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4480|2024-08-01T20:40:47.127Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3478|2024-08-01T20:12:07.350Z -- unknown -- herd%20effects</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3478</link>
      <description>The Herd Effects  WordPress plugin before 5.2.7 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting effects via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3478|2024-08-01T20:12:07.350Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4757|2024-08-01T20:47:41.785Z -- unknown -- logo%20manager%20for%20enamad</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4757</link>
      <description>The Logo Manager For Enamad WordPress plugin through 0.7.0 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4757|2024-08-01T20:47:41.785Z</guid>
      <pubDate>Tue, 25 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3964|2024-08-01T20:26:57.228Z -- unknown -- product%20enquiry%20for%20woocommerce</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3964</link>
      <description>The Product Enquiry for WooCommerce WordPress plugin before 3.1.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3964|2024-08-01T20:26:57.228Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4533|2024-08-01T20:40:47.525Z -- unknown -- kkprogressbar2%20free</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4533</link>
      <description>The KKProgressbar2 Free  WordPress plugin through 1.1.4.2 does not sanitize and escape a parameter before using it in a SQL statement, allowing admin users to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2024-4533|2024-08-01T20:40:47.525Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4616|2024-08-01T20:47:41.576Z -- unknown -- widget%20bundle</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4616</link>
      <description>The Widget Bundle WordPress plugin through 2.0.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against only unauthenticated users</description>
      <guid isPermaLink="false">CVE-2024-4616|2024-08-01T20:47:41.576Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3475|2024-08-01T20:12:07.619Z -- unknown -- sticky%20buttons</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3475</link>
      <description>The Sticky Buttons  WordPress plugin before 3.2.4 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting buttons via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3475|2024-08-01T20:12:07.619Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3917|2024-08-01T20:26:57.082Z -- unknown -- pet%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3917</link>
      <description>The Pet Manager WordPress plugin through 1.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3917|2024-08-01T20:26:57.082Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3643|2024-08-01T20:20:00.408Z -- unknown -- newsletter%20popup</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3643</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not have CSRF check when deleting list, which could allow attackers to make logged in admins perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3643|2024-08-01T20:20:00.408Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3644|2024-08-01T20:20:00.100Z -- unknown -- newsletter%20popup</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3644</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3644|2024-08-01T20:20:00.100Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4752|2024-08-01T20:47:41.832Z -- unknown -- eventon</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4752</link>
      <description>The EventON WordPress plugin before 2.2.15 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4752|2024-08-01T20:47:41.832Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3630|2024-08-01T20:19:59.934Z -- unknown -- hl%20twitter</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3630</link>
      <description>The HL Twitter WordPress plugin through 2014.1.18 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3630|2024-08-01T20:19:59.934Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4749|2024-08-01T20:47:41.749Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4749</link>
      <description>The wp-eMember WordPress plugin before 10.3.9 does not sanitize and escape the "fieldId" parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2024-4749|2024-08-01T20:47:41.749Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5002|2024-08-01T20:55:10.411Z -- unknown -- user%20submitted%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5002</link>
      <description>The User Submitted Posts  WordPress plugin before 20240516 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5002|2024-08-01T20:55:10.411Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3963|2024-08-01T20:26:57.225Z -- unknown -- giveaways%20and%20contests%20by%20rafflepress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3963</link>
      <description>The Giveaways and Contests by RafflePress  WordPress plugin before 1.12.14 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3963|2024-08-01T20:26:57.225Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3752|2024-08-01T20:20:01.118Z -- unknown -- crelly%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3752</link>
      <description>The Crelly Slider WordPress plugin through 1.4.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3752|2024-08-01T20:20:01.118Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3703|2024-08-01T20:20:00.768Z -- unknown -- carousel%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3703</link>
      <description>The Carousel Slider WordPress plugin before 2.2.10 does not validate and escape some of its Slide options before outputting them back in the page/post where the related Slide shortcode is embed, which could allow users with the Editor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3703|2024-08-01T20:20:00.768Z</guid>
      <pubDate>Fri, 03 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5003|2024-08-01T20:55:10.444Z -- unknown -- wp%20stacker</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5003</link>
      <description>The WP Stacker WordPress plugin through 1.8.5 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5003|2024-08-01T20:55:10.444Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4970|2024-08-01T20:55:10.423Z -- unknown -- widget%20bundle</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4970</link>
      <description>The Widget Bundle WordPress plugin through 2.0.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4970|2024-08-01T20:55:10.423Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3692|2024-08-01T20:20:01.145Z -- unknown -- gutenverse</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3692</link>
      <description>The Gutenverse  WordPress plugin before 1.9.1 does not validate the htmlTag option in various of its block before outputting it back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3692|2024-08-01T20:20:01.145Z</guid>
      <pubDate>Fri, 03 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3992|2024-08-01T20:26:57.219Z -- unknown -- amen</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3992</link>
      <description>The Amen WordPress plugin through 3.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3992|2024-08-01T20:26:57.219Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3276|2024-08-01T20:05:08.383Z -- unknown -- lightbox%20%26%20modal%20popup%20wordpress%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3276</link>
      <description>The Lightbox &amp; Modal Popup WordPress Plugin  WordPress plugin before 2.7.28, foobox-image-lightbox-premium WordPress plugin before 2.7.28 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-3276|2024-08-01T20:05:08.383Z</guid>
      <pubDate>Tue, 18 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3939|2024-08-01T20:26:57.093Z -- unknown -- ditty</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3939</link>
      <description>The Ditty  WordPress plugin before 3.1.36 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3939|2024-08-01T20:26:57.093Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4756|2024-08-01T20:47:41.910Z -- unknown -- wp%20backpack</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4756</link>
      <description>The WP Backpack WordPress plugin through 2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4756|2024-08-01T20:47:41.910Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3972|2024-08-01T20:26:57.234Z -- unknown -- similarity</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3972</link>
      <description>The Similarity WordPress plugin through 3.0 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3972|2024-08-01T20:26:57.234Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4755|2024-08-01T20:47:41.777Z -- unknown -- google%20cse</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4755</link>
      <description>The Google CSE WordPress plugin through 1.0.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4755|2024-08-01T20:47:41.777Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3937|2024-08-01T20:26:57.163Z -- unknown -- playlist%20for%20youtube</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3937</link>
      <description>The Playlist for Youtube WordPress plugin through 1.32 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3937|2024-08-01T20:26:57.163Z</guid>
      <pubDate>Wed, 29 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4474|2024-08-01T20:40:47.250Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4474</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4474|2024-08-01T20:40:47.250Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4057|2024-08-01T20:26:57.268Z -- unknown -- gutenberg%20blocks%20with%20ai%20by%20kadence%20wp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4057</link>
      <description>The Gutenberg Blocks with AI by Kadence WP  WordPress plugin before 3.2.37 does not validate and escape some of its block attributes before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4057|2024-08-01T20:26:57.268Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3634|2024-08-01T20:19:59.932Z -- unknown -- month%20name%20translation%20benaceur</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3634</link>
      <description>The month name translation benaceur WordPress plugin before 2.3.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3634|2024-08-01T20:19:59.932Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3231|2024-08-01T20:05:08.235Z -- unknown -- popup4phone</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3231</link>
      <description>The Popup4Phone WordPress plugin through 1.3.2 does not sanitise and escape some parameters, which could allow unauthenticated users to perform Cross-Site Scripting attacks against admins.</description>
      <guid isPermaLink="false">CVE-2024-3231|2024-08-01T20:05:08.235Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4475|2024-08-01T20:40:47.373Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4475</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not have CSRF check when clearing logs, which could allow attackers to make a logged in admin clear the logs them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4475|2024-08-01T20:40:47.373Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4271|2024-08-01T20:33:53.183Z -- unknown -- svgator</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4271</link>
      <description>The SVGator  WordPress plugin through 1.2.6 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4271|2024-08-01T20:33:53.183Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4753|2024-08-01T20:47:41.783Z -- unknown -- wp%20secure%20maintenance</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4753</link>
      <description>The WP Secure Maintenance WordPress plugin before 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4753|2024-08-01T20:47:41.783Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3966|2024-08-01T20:26:57.169Z -- unknown -- pray%20for%20me</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3966</link>
      <description>The Pray For Me WordPress plugin through 1.0.4 does not sanitise and escape some parameters, which could unauthenticated visitors to perform Cross-Site Scripting attacks that trigger when an admin visits the Prayer Requests in the WP Admin</description>
      <guid isPermaLink="false">CVE-2024-3966|2024-08-01T20:26:57.169Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3710|2024-08-01T20:20:01.159Z -- unknown -- image%20photo%20gallery%20final%20tiles%20grid</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3710</link>
      <description>The Image Photo Gallery Final Tiles Grid WordPress plugin before 3.6.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3710|2024-08-01T20:20:01.159Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5004|2024-08-01T20:55:10.410Z -- unknown -- cm%20popup%20plugin%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5004</link>
      <description>The CM Popup Plugin for WordPress  WordPress plugin before 1.6.6 does not sanitise and escape some of the campaign settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5004|2024-08-01T20:55:10.410Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3580|2024-08-01T20:12:07.739Z -- unknown -- popup4phone</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3580</link>
      <description>The Popup4Phone WordPress plugin through 1.3.2 does not sanitise and escape some of its settings, which could allow high privilege users such as Editor to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3580|2024-08-01T20:12:07.739Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4969|2024-08-01T20:55:10.397Z -- unknown -- widget%20bundle</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4969</link>
      <description>The Widget Bundle WordPress plugin through 2.0.0 does not have CSRF checks when logging Widgets, which could allow attackers to make logged in admin enable/disable widgets via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4969|2024-08-01T20:55:10.397Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3919|2024-08-01T20:26:56.962Z -- unknown -- openpgp%20form%20encryption%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3919</link>
      <description>The OpenPGP Form Encryption for WordPress plugin before 1.5.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-3919|2024-08-01T20:26:56.962Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3822|2024-08-01T20:20:02.163Z -- unknown -- base64%20encoder%2Fdecoder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3822</link>
      <description>The Base64 Encoder/Decoder WordPress plugin through 0.9.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3822|2024-08-01T20:20:02.163Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3824|2024-08-01T20:20:01.601Z -- unknown -- base64%20encoder%2Fdecoder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3824</link>
      <description>The Base64 Encoder/Decoder WordPress plugin through 0.9.2 does not have CSRF check in place when resetting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3824|2024-08-01T20:20:01.601Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4005|2024-08-01T20:26:57.290Z -- unknown -- social%20pixel</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4005</link>
      <description>The Social Pixel WordPress plugin through 2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4005|2024-08-01T20:26:57.290Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3594|2024-08-01T20:12:08.113Z -- unknown -- idonate</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3594</link>
      <description>The IDonate  WordPress plugin through 1.9.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3594|2024-08-01T20:12:08.113Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4388|2024-08-01T20:40:47.248Z -- unknown -- cas</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4388</link>
      <description>This  does not validate a path generated with user input when downloading files, allowing unauthenticated user to download arbitrary files from the server</description>
      <guid isPermaLink="false">CVE-2024-4388|2024-08-01T20:40:47.248Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4664|2024-08-01T20:47:41.600Z -- unknown -- wp%20chat%20app</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4664</link>
      <description>The WP Chat App WordPress plugin before 3.6.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admins to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2024-4664|2024-08-01T20:47:41.600Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3239|2024-08-01T20:05:08.328Z -- unknown -- post%20grid%20gutenberg%20blocks%20and%20wordpress%20blog%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3239</link>
      <description>The Post Grid Gutenberg Blocks and WordPress Blog Plugin  WordPress plugin before 4.0.2 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3239|2024-08-01T20:05:08.328Z</guid>
      <pubDate>Mon, 13 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3472|2024-08-01T20:12:06.941Z -- unknown -- modal%20window</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3472</link>
      <description>The Modal Window  WordPress plugin before 5.3.10 does not have CSRF check in place when bulk deleting modals, which could allow attackers to make a logged in admin delete them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3472|2024-08-01T20:12:06.941Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3941|2024-08-01T20:26:57.170Z -- unknown -- recaptcha%20jetpack</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3941</link>
      <description>The reCAPTCHA Jetpack WordPress plugin through 0.2.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged-in admin add Stored XSS payloads via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2024-3941|2024-08-01T20:26:57.170Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4149|2024-08-01T20:33:52.460Z -- unknown -- floating%20chat%20widget%3A%20contact%20chat%20icons%2C%20whatsapp%2C%20telegram%20chat%2C%20line%20messenger%2C%20wechat%2C%20email%2C%20sms%2C%20call%20button</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4149</link>
      <description>The Floating Chat Widget: Contact Chat Icons, WhatsApp, Telegram Chat, Line Messenger, WeChat, Email, SMS, Call Button  WordPress plugin before 3.2.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-4149|2024-08-01T20:33:52.460Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4627|2024-08-01T20:47:41.192Z -- unknown -- rank%20math%20seo</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4627</link>
      <description>The Rank Math SEO  WordPress plugin before 1.0.219 does not sanitise and escape some of its settings, which could allow users with access to the General Settings (by default admin, however such access can be given to lower roles via the Role Manager feature of the Rank Math SEO  WordPress plugin before 1.0.219) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-4627|2024-08-01T20:47:41.192Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4399|2024-08-01T20:40:47.185Z -- unknown -- cas</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4399</link>
      <description>The  does not validate a parameter before making a request to it, which could allow unauthenticated users to perform SSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4399|2024-08-01T20:40:47.185Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4534|2024-08-01T20:40:47.496Z -- unknown -- kkprogressbar2%20free</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4534</link>
      <description>The KKProgressbar2 Free  WordPress plugin through 1.1.4.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4534|2024-08-01T20:40:47.496Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3642|2024-08-01T20:19:59.856Z -- unknown -- newsletter%20popup</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3642</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not have CSRF check when deleting subscriber, which could allow attackers to make logged in admins perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3642|2024-08-01T20:19:59.856Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4924|2024-08-01T20:55:10.336Z -- unknown -- social%20sharing%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4924</link>
      <description>The Social Sharing Plugin  WordPress plugin before 3.3.63 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4924|2024-08-01T20:55:10.336Z</guid>
      <pubDate>Wed, 12 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4957|2024-08-01T20:55:10.298Z -- unknown -- frontend%20checklist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4957</link>
      <description>The Frontend Checklist WordPress plugin through 2.3.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4957|2024-08-01T20:55:10.298Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4260|2024-08-01T20:33:52.992Z -- unknown -- page%20builder%20gutenberg%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4260</link>
      <description>The Page Builder Gutenberg Blocks  WordPress plugin before 3.1.12 does not prevent users from pinging arbitrary hosts via some of its shortcodes, which could allow high privilege users such as contributors to perform SSRF attacks.</description>
      <guid isPermaLink="false">CVE-2024-4260|2024-08-01T20:33:52.992Z</guid>
      <pubDate>Tue, 23 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4217|2024-08-01T20:33:53.001Z -- unknown -- shortcodes-ultimate-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4217</link>
      <description>The shortcodes-ultimate-pro WordPress plugin before 7.1.5 does not properly escape some of its shortcodes' settings, making it possible for attackers with a Contributor account to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4217|2024-08-01T20:33:53.001Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3548|2024-08-01T20:12:07.771Z -- unknown -- wp%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3548</link>
      <description>The WP Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 7.1.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3548|2024-08-01T20:12:07.771Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3631|2024-08-01T20:19:59.781Z -- unknown -- hl%20twitter</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3631</link>
      <description>The HL Twitter WordPress plugin through 2014.1.18 does not have CSRF check when unlinking twitter accounts, which could allow attackers to make logged in admins perform such actions via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3631|2024-08-01T20:19:59.781Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4621|2024-08-01T20:47:41.215Z -- unknown -- arforms%20-%20premium%20wordpress%20form%20builder%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4621</link>
      <description>The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4621|2024-08-01T20:47:41.215Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3965|2024-08-01T20:26:57.179Z -- unknown -- pray%20for%20me</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3965</link>
      <description>The Pray For Me WordPress plugin through 1.0.4 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3965|2024-08-01T20:26:57.179Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4620|2024-08-01T20:47:41.237Z -- unknown -- arforms%20-%20premium%20wordpress%20form%20builder%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4620</link>
      <description>The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.6 allows unauthenticated users to modify uploaded files in such a way that PHP code can be uploaded when an upload file input is included on a form</description>
      <guid isPermaLink="false">CVE-2024-4620|2024-08-01T20:47:41.237Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3241|2024-08-01T20:05:08.311Z -- unknown -- ultimate%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3241</link>
      <description>The Ultimate Blocks  WordPress plugin before 3.1.7 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3241|2024-08-01T20:05:08.311Z</guid>
      <pubDate>Tue, 14 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3940|2024-08-01T20:26:57.211Z -- unknown -- recaptcha%20jetpack</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3940</link>
      <description>The reCAPTCHA Jetpack WordPress plugin through 0.2.2 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3940|2024-08-01T20:26:57.211Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3986|2024-08-01T20:26:57.259Z -- unknown -- sportspress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3986</link>
      <description>The SportsPress  WordPress plugin before 2.7.22 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3986|2024-08-01T20:26:57.259Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3637|2024-08-01T20:19:59.637Z -- unknown -- responsive%20contact%20form%20builder%20%26%20lead%20generation%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3637</link>
      <description>The Responsive Contact Form Builder &amp; Lead Generation Plugin WordPress plugin through 1.8.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3637|2024-08-01T20:19:59.637Z</guid>
      <pubDate>Fri, 03 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3236|2024-08-01T20:05:08.361Z -- unknown -- popup%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3236</link>
      <description>The Popup Builder WordPress plugin before 1.1.33 does not sanitise and escape some of its Notification fields, which could allow users such as contributor and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-3236|2024-08-01T20:05:08.361Z</guid>
      <pubDate>Mon, 17 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3410|2024-08-01T20:12:07.388Z -- unknown -- dn%20footer%20contacts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3410</link>
      <description>The DN Footer Contacts WordPress plugin before 1.6.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3410|2024-08-01T20:12:07.388Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3920|2024-08-01T20:26:57.098Z -- unknown -- flattr</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3920</link>
      <description>The Flattr WordPress plugin through 1.2.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3920|2024-08-01T20:26:57.098Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4289|2024-08-01T20:33:53.242Z -- unknown -- sailthru%20triggermail</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4289</link>
      <description>The Sailthru Triggermail WordPress plugin through 1.1 does not sanitise and escape various parameters before outputting them back in pages and attributes, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-4289|2024-08-01T20:33:53.242Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3188|2024-08-01T20:05:07.524Z -- unknown -- wp%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3188</link>
      <description>The WP Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 7.1.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3188|2024-08-01T20:05:07.524Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4934|2024-08-01T20:55:10.243Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4934</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.0.2 does not validate and escape some of its Quiz fields before outputting them back in a page/post where the Quiz is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4934|2024-08-01T20:55:10.243Z</guid>
      <pubDate>Mon, 01 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4529|2024-08-01T20:40:47.475Z -- unknown -- business%20card</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4529</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as deleting card categories via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4529|2024-08-01T20:40:47.475Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3633|2024-08-01T20:19:59.847Z -- unknown -- webp%20%26%20svg%20support</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3633</link>
      <description>The WebP &amp; SVG Support WordPress plugin through 1.4.0 does not sanitise uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2024-3633|2024-08-01T20:19:59.847Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3754|2024-08-01T20:20:01.066Z -- unknown -- alemha%20watermarker</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3754</link>
      <description>The Alemha watermarker WordPress plugin through 1.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3754|2024-08-01T20:20:01.066Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4290|2024-08-01T20:33:53.097Z -- unknown -- sailthru%20triggermail</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4290</link>
      <description>The Sailthru Triggermail WordPress plugin through 1.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4290|2024-08-01T20:33:53.097Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4531|2024-08-01T20:40:47.443Z -- unknown -- business%20card</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4531</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as editing cards via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4531|2024-08-01T20:40:47.443Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4857|2024-08-01T20:55:10.184Z -- unknown -- fs%20product%20inquiry</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4857</link>
      <description>The FS Product Inquiry WordPress plugin through 1.1.1 does not sanitise and escape some form submissions, which could allow unauthenticated users to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4857|2024-08-01T20:55:10.184Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4477|2024-08-01T20:40:47.341Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4477</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not sanitise and escape some of its log data before outputting them back in an admin dashboard, leading to an Unauthenticated Stored Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-4477|2024-08-01T20:40:47.341Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4180|2024-08-01T20:33:52.970Z -- unknown -- the%20events%20calendar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4180</link>
      <description>The Events Calendar WordPress plugin before 6.4.0.1 does not properly sanitize user-submitted content when rendering some views via AJAX.</description>
      <guid isPermaLink="false">CVE-2024-4180|2024-08-01T20:33:52.970Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3591|2024-08-01T20:12:07.872Z -- unknown -- geo%20controller</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3591</link>
      <description>The Geo Controller WordPress plugin before 8.6.5 unserializes user input via some of its AJAX actions and REST API routes, which could allow unauthenticated users to perform PHP Object Injection when a suitable gadget is present on the blog.</description>
      <guid isPermaLink="false">CVE-2024-3591|2024-08-01T20:12:07.872Z</guid>
      <pubDate>Wed, 01 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3481|2024-08-01T20:12:07.376Z -- unknown -- counter%20box</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3481</link>
      <description>The Counter Box  WordPress plugin before 1.2.4 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such deleting counters via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3481|2024-08-01T20:12:07.376Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4384|2024-08-01T20:40:46.484Z -- unknown -- cssable%20countdown</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4384</link>
      <description>The CSSable Countdown WordPress plugin through 1.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4384|2024-08-01T20:40:46.484Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4305|2024-08-01T20:33:53.172Z -- unknown -- post%20grid%20gutenberg%20blocks%20and%20wordpress%20blog%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4305</link>
      <description>The Post Grid Gutenberg Blocks and WordPress Blog Plugin  WordPress plugin before 4.1.0 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4305|2024-08-01T20:33:53.172Z</guid>
      <pubDate>Mon, 17 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3590|2024-08-01T20:12:07.919Z -- unknown -- letterpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3590</link>
      <description>The LetterPress  WordPress plugin through 1.2.2 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks, such as delete arbitrary subscribers</description>
      <guid isPermaLink="false">CVE-2024-3590|2024-08-01T20:12:07.919Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4094|2024-08-01T20:33:52.215Z -- unknown -- simple%20share%20buttons%20adder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4094</link>
      <description>The Simple Share Buttons Adder WordPress plugin before 8.5.1 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-4094|2024-08-01T20:33:52.215Z</guid>
      <pubDate>Tue, 18 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3632|2024-08-01T20:20:00.487Z -- unknown -- smart%20image%20gallery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3632</link>
      <description>The Smart Image Gallery WordPress plugin before 1.0.19 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3632|2024-08-01T20:20:00.487Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3748|2024-08-01T20:20:01.097Z -- unknown -- sp%20project%20%26%20document%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3748</link>
      <description>The SP Project &amp; Document Manager WordPress plugin through 4.71 is missing validation in its upload function, allowing a user to manipulate the `user_id` to make it appear that a file was uploaded by another user</description>
      <guid isPermaLink="false">CVE-2024-3748|2024-08-01T20:20:01.097Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4899|2024-08-01T20:55:10.228Z -- unknown -- seopress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4899</link>
      <description>The SEOPress  WordPress plugin before 7.8 does not sanitise and escape some of its Post settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-4899|2024-08-01T20:55:10.228Z</guid>
      <pubDate>Mon, 24 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3471|2024-08-01T20:12:07.754Z -- unknown -- button%20generator</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3471</link>
      <description>The Button Generator  WordPress plugin before 3.0 does not have CSRF check in place when bulk deleting, which could allow attackers to make a logged in admin delete buttons via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3471|2024-08-01T20:12:07.754Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4272|2024-08-01T20:33:53.006Z -- unknown -- support%20svg</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4272</link>
      <description>The Support SVG  WordPress plugin before 1.1.0 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4272|2024-08-01T20:33:53.006Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3641|2024-08-01T20:19:59.822Z -- unknown -- newsletter%20popup</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3641</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not sanitise and escape some parameters, which could allow unauthenticated visitors to perform Cross-Site Scripting attacks against admins</description>
      <guid isPermaLink="false">CVE-2024-3641|2024-08-01T20:19:59.822Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3978|2024-08-01T20:26:57.200Z -- unknown -- wordpress%20jitsi%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3978</link>
      <description>The WordPress Jitsi Shortcode WordPress plugin through 0.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3978|2024-08-01T20:26:57.200Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3261|2024-08-01T20:05:08.497Z -- unknown -- strong%20testimonials</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3261</link>
      <description>The Strong Testimonials WordPress plugin before 3.1.12 does not validate and escape some of its Testimonial fields before outputting them back in a page/post, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks. The attack requires a specific view to be performed</description>
      <guid isPermaLink="false">CVE-2024-3261|2024-08-01T20:05:08.497Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4469|2024-08-01T20:40:47.201Z -- unknown -- wp%20staging%20wordpress%20backup%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4469</link>
      <description>The WP STAGING WordPress Backup Plugin  WordPress plugin before 3.5.0 does not prevent users with the administrator role from pinging conducting SSRF attacks, which may be a problem in multisite configurations.</description>
      <guid isPermaLink="false">CVE-2024-4469|2024-08-01T20:40:47.201Z</guid>
      <pubDate>Fri, 31 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4532|2024-08-01T20:40:47.532Z -- unknown -- business%20card</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4532</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as deleting cards via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4532|2024-08-01T20:40:47.532Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4704|2024-08-01T20:47:41.750Z -- unknown -- contact%20form%207</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4704</link>
      <description>The Contact Form 7 WordPress plugin before 5.9.5 has an open redirect that allows an attacker to utilize a false URL and redirect to the URL of their choosing.</description>
      <guid isPermaLink="false">CVE-2024-4704|2024-08-01T20:47:41.750Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4372|2024-08-01T20:40:47.032Z -- unknown -- carousel%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4372</link>
      <description>The Carousel Slider WordPress plugin before 2.2.11 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4372|2024-08-01T20:40:47.032Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4483|2024-08-01T20:40:47.409Z -- unknown -- email%20encoder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4483</link>
      <description>The Email Encoder  WordPress plugin before 2.2.2 does not escape the WP_Email_Encoder_Bundle_options[protection_text] parameter before outputting it back in an attribute in an admin page, leading to a Stored Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-4483|2024-08-01T20:40:47.409Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3628|2024-08-01T20:19:59.694Z -- unknown -- easyevent</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3628</link>
      <description>The EasyEvent WordPress plugin through 1.0.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-3628|2024-08-01T20:19:59.694Z</guid>
      <pubDate>Tue, 07 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4886|2024-08-01T20:55:10.232Z -- unknown -- buddyboss-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4886</link>
      <description>The  contains an IDOR vulnerability that allows a user to comment on a private post by manipulating the ID included in the request</description>
      <guid isPermaLink="false">CVE-2024-4886|2024-08-01T20:55:10.232Z</guid>
      <pubDate>Wed, 05 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3753|2024-08-01T20:20:01.144Z -- unknown -- hostel</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3753</link>
      <description>The Hostel WordPress plugin before 1.1.5.3 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3753|2024-08-01T20:20:01.144Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3582|2024-08-01T20:12:07.895Z -- unknown -- ungallery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3582</link>
      <description>The UnGallery WordPress plugin through 2.2.4 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3582|2024-08-01T20:12:07.895Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3552|2024-08-01T20:12:07.922Z -- unknown -- web%20directory%20free</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3552</link>
      <description>The Web Directory Free WordPress plugin before 1.7.0 does not sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection with different techniques like UNION, Time-Based and Error-Based.</description>
      <guid isPermaLink="false">CVE-2024-3552|2024-08-01T20:12:07.922Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3288|2024-08-01T20:05:08.225Z -- unknown -- logo%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3288</link>
      <description>The Logo Slider  WordPress plugin before 4.0.0 does not validate and escape some of its Slider Settings before outputting them back in attributes, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3288|2024-08-01T20:05:08.225Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4758|2024-08-01T20:47:41.788Z -- unknown -- muslim%20prayer%20time%20bd</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4758</link>
      <description>The Muslim Prayer Time BD WordPress plugin through 2.4 does not have CSRF check in place when reseting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4758|2024-08-01T20:47:41.788Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1588|2024-08-01T18:40:21.438Z -- unknown -- sendpress%20newsletters</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1588</link>
      <description>The SendPress Newsletters WordPress plugin through 1.23.11.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1588|2024-08-01T18:40:21.438Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0974|2024-08-01T18:26:30.265Z -- unknown -- social%20media%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0974</link>
      <description>The Social Media Widget WordPress plugin before 4.0.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0974|2024-08-01T18:26:30.265Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1846|2024-08-01T18:56:22.316Z -- unknown -- responsive%20tabs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1846</link>
      <description>The Responsive Tabs WordPress plugin before 4.0.7 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1846|2024-08-01T18:56:22.316Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0399|2024-08-01T18:04:49.575Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0399</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 29.7 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to an SQL injection exploitable by Subscriber+ role.</description>
      <guid isPermaLink="false">CVE-2024-0399|2024-08-01T18:04:49.575Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0566|2024-08-01T18:11:35.610Z -- unknown -- smart%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0566</link>
      <description>The Smart Manager WordPress plugin before 8.28.0 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2024-0566|2024-08-01T18:11:35.610Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0711|2024-08-01T18:11:35.750Z -- unknown -- buttons%20shortcode%20and%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0711</link>
      <description>The Buttons Shortcode and Widget WordPress plugin through 1.16 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-0711|2024-08-01T18:11:35.750Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0559|2024-08-01T18:11:35.226Z -- unknown -- enhanced%20text%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0559</link>
      <description>The Enhanced Text Widget WordPress plugin before 1.6.6 does not validate and escape some of its Widget options before outputting them back in attributes, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0559|2024-08-01T18:11:35.226Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1307|2024-08-01T18:33:25.411Z -- unknown -- smart%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1307</link>
      <description>The Smart Forms  WordPress plugin before 2.6.94 does not have proper authorization in some actions, which could allow users with a role as low as a subscriber to call them and perform unauthorized actions</description>
      <guid isPermaLink="false">CVE-2024-1307|2024-08-01T18:33:25.411Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1290|2024-08-01T18:33:25.378Z -- unknown -- user%20registration</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1290</link>
      <description>The User Registration WordPress plugin before 2.12 does not prevent users with at least the contributor role from rendering sensitive shortcodes, allowing them to generate, and leak, valid password reset URLs, which they can use to take over any accounts.</description>
      <guid isPermaLink="false">CVE-2024-1290|2024-08-01T18:33:25.378Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1273|2024-08-01T18:33:25.509Z -- unknown -- starbox</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1273</link>
      <description>The Starbox WordPress plugin before 3.5.0 does not sanitise and escape some parameters, which could allow users with a role as low as Contributor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1273|2024-08-01T18:33:25.509Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0905|2024-08-01T18:18:19.000Z -- unknown -- fancy%20product%20designer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0905</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.8 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against unauthenticated and admin-level users</description>
      <guid isPermaLink="false">CVE-2024-0905|2024-08-01T18:18:19.000Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0757|2024-08-01T18:18:18.347Z -- unknown -- insert%20or%20embed%20articulate%20content%20into%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0757</link>
      <description>The Insert or Embed Articulate Content into WordPress plugin through 4.3000000023 is not properly filtering which file extensions are allowed to be imported on the server, allowing the uploading of malicious code within zip files</description>
      <guid isPermaLink="false">CVE-2024-0757|2024-08-01T18:18:18.347Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1962|2024-08-01T18:56:22.447Z -- unknown -- cm%20download%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1962</link>
      <description>The CM Download Manager  WordPress plugin before 2.9.1 does not have CSRF checks in some places, which could allow attackers to make logged in admins edit downloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-1962|2024-08-01T18:56:22.447Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0779|2024-08-01T18:18:18.348Z -- unknown -- enjoy%20social%20feed%20plugin%20for%20wordpress%20website</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0779</link>
      <description>The Enjoy Social Feed plugin for WordPress website WordPress plugin through 6.2.2 does not have authorisation and CSRF in various function hooked to admin_init, allowing unauthenticated users to call them and unlink arbitrary users Instagram Account for example</description>
      <guid isPermaLink="false">CVE-2024-0779|2024-08-01T18:18:18.348Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1658|2024-08-01T18:48:21.523Z -- unknown -- grid%20shortcodes</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1658</link>
      <description>The Grid Shortcodes WordPress plugin before 1.1.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1658|2024-08-01T18:48:21.523Z</guid>
      <pubDate>Mon, 18 Mar 2024 15:15:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1295|2024-08-01T18:33:25.358Z -- unknown -- events-calendar-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1295</link>
      <description>The events-calendar-pro WordPress plugin before 6.4.0.1, The Events Calendar WordPress plugin before 6.4.0.1 does not prevent users with at least the contributor role from leaking details about events they shouldn't have access to. (e.g. password-protected events, drafts, etc.)</description>
      <guid isPermaLink="false">CVE-2024-1295|2024-08-01T18:33:25.358Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1754|2024-08-01T18:48:21.982Z -- unknown -- nps%20computy</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1754</link>
      <description>The NPS computy WordPress plugin through 2.7.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1754|2024-08-01T18:48:21.982Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0973|2024-08-01T18:26:30.496Z -- unknown -- widget%20for%20social%20page%20feeds</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0973</link>
      <description>The Widget for Social Page Feeds WordPress plugin before 6.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0973|2024-08-01T18:26:30.496Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1743|2024-08-01T18:48:21.661Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1743</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 29.8 does not sanitise and escape various parameters before outputting them back in pages and attributes, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-1743|2024-08-01T18:48:21.661Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0951|2024-08-01T18:26:30.206Z -- unknown -- advanced%20social%20feeds%20widget%20%26%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0951</link>
      <description>The Advanced Social Feeds Widget &amp; Shortcode WordPress plugin through 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0951|2024-08-01T18:26:30.206Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1712|2024-08-01T18:48:21.840Z -- unknown -- carousel%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1712</link>
      <description>The Carousel Slider WordPress plugin before 2.2.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1712|2024-08-01T18:48:21.840Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1956|2024-08-01T18:56:22.681Z -- unknown -- wpb-show-core</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1956</link>
      <description>The wpb-show-core WordPress plugin before 2.7 does not sanitise and escape the parameters before outputting it back in the response of an unauthenticated request, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-1956|2024-08-01T18:56:22.681Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1204|2024-08-01T18:33:25.079Z -- unknown -- meta%20box</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1204</link>
      <description>The Meta Box  WordPress plugin before 5.9.4 does not prevent users with at least the contributor role from access arbitrary custom fields assigned to other user's posts.</description>
      <guid isPermaLink="false">CVE-2024-1204|2024-08-01T18:33:25.079Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0677|2024-08-01T18:11:35.728Z -- unknown -- pz-linkcard</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0677</link>
      <description>The Pz-LinkCard WordPress plugin through 2.5.1 does not prevent users from pinging arbitrary hosts via some of its shortcodes, which could allow high privilege users such as contributors to perform SSRF attacks.</description>
      <guid isPermaLink="false">CVE-2024-0677|2024-08-01T18:11:35.728Z</guid>
      <pubDate>Thu, 28 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1745|2024-08-01T18:48:21.986Z -- unknown -- testimonial%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1745</link>
      <description>The Testimonial Slider WordPress plugin before 2.3.7 does not properly ensure that a user has the necessary capabilities to edit certain sensitive Testimonial Slider WordPress plugin before 2.3.7 settings, making it possible for users with at least the Author role to edit them.</description>
      <guid isPermaLink="false">CVE-2024-1745|2024-08-01T18:48:21.986Z</guid>
      <pubDate>Tue, 26 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0780|2024-08-01T18:18:18.158Z -- unknown -- enjoy%20social%20feed%20plugin%20for%20wordpress%20website</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0780</link>
      <description>The Enjoy Social Feed plugin for WordPress website WordPress plugin through 6.2.2 does not have authorisation when resetting its database, allowing any authenticated users, such as subscriber to perform such action</description>
      <guid isPermaLink="false">CVE-2024-0780|2024-08-01T18:18:18.158Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1755|2024-08-01T18:48:21.954Z -- unknown -- nps%20computy</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1755</link>
      <description>The NPS computy WordPress plugin through 2.7.5 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-1755|2024-08-01T18:48:21.954Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1319|2024-08-01T18:33:25.378Z -- unknown -- events%20tickets%20plus</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1319</link>
      <description>The Events Tickets Plus WordPress plugin before 5.9.1 does not prevent users with at least the contributor role from leaking the attendees list on any post type regardless of status. (e.g. draft, private, pending review, password-protected, and trashed posts).</description>
      <guid isPermaLink="false">CVE-2024-1319|2024-08-01T18:33:25.378Z</guid>
      <pubDate>Mon, 04 Mar 2024 21:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0756|2024-08-01T18:18:17.955Z -- unknown -- insert%20or%20embed%20articulate%20content%20into%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0756</link>
      <description>The Insert or Embed Articulate Content into WordPress plugin through 4.3000000023 lacks validation of URLs when adding iframes, allowing attackers to inject an iFrame in the page and thus load arbitrary content from any page.</description>
      <guid isPermaLink="false">CVE-2024-0756|2024-08-01T18:18:17.955Z</guid>
      <pubDate>Tue, 04 Jun 2024 14:28:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1905|2024-08-01T18:56:22.435Z -- unknown -- smart%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1905</link>
      <description>The Smart Forms  WordPress plugin before 2.6.96 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1905|2024-08-01T18:56:22.435Z</guid>
      <pubDate>Mon, 29 Apr 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0365|2024-08-01T18:04:49.725Z -- unknown -- fancy%20product%20designer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0365</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.5 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by adminstrators.</description>
      <guid isPermaLink="false">CVE-2024-0365|2024-08-01T18:04:49.725Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1983|2024-08-01T18:56:22.570Z -- unknown -- simple%20ajax%20chat</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1983</link>
      <description>The Simple Ajax Chat  WordPress plugin before 20240223 does not prevent visitors from using malicious Names when using the chat, which will be reflected unsanitized to other users.</description>
      <guid isPermaLink="false">CVE-2024-1983|2024-08-01T18:56:22.570Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1076|2024-08-01T18:26:30.496Z -- unknown -- ssl%20zen</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1076</link>
      <description>The SSL Zen  WordPress plugin before 4.6.0 only relies on the use of .htaccess to prevent visitors from accessing the site's generated private keys, which allows an attacker to read them if the site runs on a server who doesn't support .htaccess files, like NGINX.</description>
      <guid isPermaLink="false">CVE-2024-1076|2024-08-01T18:26:30.496Z</guid>
      <pubDate>Wed, 08 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0561|2024-08-01T18:11:35.631Z -- unknown -- ultimate%20posts%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0561</link>
      <description>The Ultimate Posts Widget WordPress plugin before 2.3.1 does not validate and escape some of its Widget options before outputting them back in attributes, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0561|2024-08-01T18:11:35.631Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1306|2024-08-01T18:33:25.642Z -- unknown -- smart%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1306</link>
      <description>The Smart Forms  WordPress plugin before 2.6.94 does not have CSRF checks in some places, which could allow attackers to make logged-in users perform unwanted actions via CSRF attacks, such as editing entries, and we consider it a medium risk.</description>
      <guid isPermaLink="false">CVE-2024-1306|2024-08-01T18:33:25.642Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0881|2024-08-01T18:18:18.980Z -- unknown -- post%20grid%2C%20form%20maker%2C%20popup%20maker%2C%20woocommerce%20blocks%2C%20post%20blocks%2C%20post%20carousel</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0881</link>
      <description>The Post Grid, Form Maker, Popup Maker, WooCommerce Blocks, Post Blocks, Post Carousel  WordPress plugin before 2.2.76 does not prevent password protected posts from being displayed in the result of some unauthenticated AJAX actions, allowing unauthenticated users to read such posts</description>
      <guid isPermaLink="false">CVE-2024-0881|2024-08-01T18:18:18.980Z</guid>
      <pubDate>Thu, 11 Apr 2024 15:36:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1232|2024-08-01T18:33:25.282Z -- unknown -- cm%20download%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1232</link>
      <description>The CM Download Manager  WordPress plugin before 2.9.0 does not have CSRF checks in some places, which could allow attackers to make logged in admins delete downloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-1232|2024-08-01T18:33:25.282Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1589|2024-08-01T18:40:21.454Z -- unknown -- sendpress%20newsletters</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1589</link>
      <description>The SendPress Newsletters WordPress plugin through 1.23.11.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1589|2024-08-01T18:40:21.454Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1660|2024-08-01T18:48:21.539Z -- unknown -- top%20bar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1660</link>
      <description>The Top Bar WordPress plugin before 3.0.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1660|2024-08-01T18:48:21.539Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1401|2024-08-01T18:40:20.383Z -- unknown -- profile%20box%20shortcode%20and%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1401</link>
      <description>The Profile Box Shortcode And Widget WordPress plugin before 1.2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1401|2024-08-01T18:40:20.383Z</guid>
      <pubDate>Tue, 19 Mar 2024 14:28:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1330|2024-08-01T18:33:25.586Z -- unknown -- kadence-blocks-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1330</link>
      <description>The kadence-blocks-pro WordPress plugin before 2.3.8 does not prevent users with at least the contributor role using some of its shortcode's functionalities to leak arbitrary options from the database.</description>
      <guid isPermaLink="false">CVE-2024-1330|2024-08-01T18:33:25.586Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0856|2024-08-01T18:18:18.979Z -- unknown -- appointment%20booking%20calendar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0856</link>
      <description>The Appointment Booking Calendar WordPress plugin before 1.3.83 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as adding a booking to the calendar without paying.</description>
      <guid isPermaLink="false">CVE-2024-0856|2024-08-01T18:18:18.979Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0719|2024-08-01T18:11:35.778Z -- unknown -- tabs%20shortcode%20and%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0719</link>
      <description>The Tabs Shortcode and Widget WordPress plugin through 1.17 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-0719|2024-08-01T18:11:35.778Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1068|2024-08-01T18:26:30.460Z -- unknown -- 404%20solution</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1068</link>
      <description>The 404 Solution WordPress plugin before 2.35.8 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2024-1068|2024-08-01T18:26:30.460Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1845|2024-08-01T18:56:22.201Z -- unknown -- vikrentcar%20car%20rental%20management%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1845</link>
      <description>The VikRentCar Car Rental Management System WordPress plugin before 1.3.2 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-1845|2024-08-01T18:56:22.201Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1287|2024-08-01T18:33:25.572Z -- unknown -- pmpro-member-directory</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1287</link>
      <description>The pmpro-member-directory WordPress plugin before 1.2.6 does not prevent users with at least the contributor role from leaking other users' sensitive information, including password hashes.</description>
      <guid isPermaLink="false">CVE-2024-1287|2024-08-01T18:33:25.572Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1274|2024-08-01T18:33:25.374Z -- unknown -- my%20calendar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1274</link>
      <description>The My Calendar WordPress plugin before 3.4.24 does not sanitise and escape some parameters, which could allow users with a role as low as Subscriber to perform Cross-Site Scripting attacks (depending on the permissions set by the admin)</description>
      <guid isPermaLink="false">CVE-2024-1274|2024-08-01T18:33:25.374Z</guid>
      <pubDate>Tue, 02 Apr 2024 05:15:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1279|2024-08-01T18:33:25.359Z -- unknown -- paid%20memberships%20pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1279</link>
      <description>The Paid Memberships Pro WordPress plugin before 2.12.9 does not prevent user with at least the contributor role from leaking other users' sensitive metadata.</description>
      <guid isPermaLink="false">CVE-2024-1279|2024-08-01T18:33:25.359Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1564|2024-08-01T18:40:21.441Z -- unknown -- wp-schema-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1564</link>
      <description>The wp-schema-pro WordPress plugin before 2.7.16 does not validate post access allowing a contributor user to access custom fields on any post regardless of post type or status via a shortcode</description>
      <guid isPermaLink="false">CVE-2024-1564|2024-08-01T18:40:21.441Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1316|2024-08-01T18:33:25.700Z -- unknown -- event%20tickets%20and%20registration</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1316</link>
      <description>The Event Tickets and Registration WordPress plugin before 5.8.1, Events Tickets Plus WordPress plugin before 5.9.1 does not prevent users with at least the contributor role from leaking the existence of certain events they shouldn't have access to. (e.g. draft, private, pending review, pw-protected, and trashed events).</description>
      <guid isPermaLink="false">CVE-2024-1316|2024-08-01T18:33:25.700Z</guid>
      <pubDate>Mon, 04 Mar 2024 21:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1219|2024-08-01T18:33:25.329Z -- unknown -- easy%20social%20feed</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1219</link>
      <description>The Easy Social Feed  WordPress plugin before 6.5.6 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-1219|2024-08-01T18:33:25.329Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0902|2024-08-01T18:18:18.981Z -- unknown -- fancy%20product%20designer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0902</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.81 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0902|2024-08-01T18:18:18.981Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1849|2024-08-01T18:56:22.286Z -- unknown -- wp%20customer%20reviews</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1849</link>
      <description>The WP Customer Reviews WordPress plugin before 3.7.1 does not validate a parameter allowing contributor and above users to redirect a page to a malicious URL</description>
      <guid isPermaLink="false">CVE-2024-1849|2024-08-01T18:56:22.286Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1756|2024-08-01T18:48:21.980Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1756</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 29.8 does not have authorisation and CSRF in an AJAX action, allowing any authenticated users, such as subscriber, to call it and retrieve the list of customer email addresses along with their id, first name and last name</description>
      <guid isPermaLink="false">CVE-2024-1756|2024-08-01T18:48:21.980Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1310|2024-08-01T18:33:25.395Z -- unknown -- woocommerce</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1310</link>
      <description>The WooCommerce WordPress plugin before 8.6 does not prevent users with at least the contributor role from leaking products they shouldn't have access to. (e.g. private, draft and trashed products)</description>
      <guid isPermaLink="false">CVE-2024-1310|2024-08-01T18:33:25.395Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1526|2024-08-01T18:40:21.555Z -- unknown -- hubbub%20lite</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1526</link>
      <description>The Hubbub Lite  WordPress plugin before 1.33.1 does not ensure that user have access to password protected post before displaying its content in a meta tag.</description>
      <guid isPermaLink="false">CVE-2024-1526|2024-08-01T18:40:21.555Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0868|2024-08-01T18:18:18.696Z -- unknown -- coreactivity%3A%20activity%20logging%20plugin%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0868</link>
      <description>The coreActivity: Activity Logging plugin for WordPress plugin before 2.1 retrieved IP addresses of requests via headers such X-FORWARDED to log them, allowing users to spoof them by providing an arbitrary value</description>
      <guid isPermaLink="false">CVE-2024-0868|2024-08-01T18:18:18.696Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0858|2024-08-01T18:18:18.975Z -- unknown -- innovs%20hr</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0858</link>
      <description>The Innovs HR WordPress plugin through 1.0.3.4 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as adding them as employees.</description>
      <guid isPermaLink="false">CVE-2024-0858|2024-08-01T18:18:18.975Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0672|2024-08-01T18:11:35.671Z -- unknown -- pz-linkcard</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0672</link>
      <description>The Pz-LinkCard WordPress plugin through 2.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-0672|2024-08-01T18:11:35.671Z</guid>
      <pubDate>Thu, 28 Mar 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1231|2024-08-01T18:33:25.085Z -- unknown -- cm%20download%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1231</link>
      <description>The CM Download Manager  WordPress plugin before 2.9.0 does not have CSRF checks in some places, which could allow attackers to make logged in admins unpublish downloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-1231|2024-08-01T18:33:25.085Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1333|2024-08-01T18:33:25.475Z -- unknown -- responsive%20pricing%20table</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1333</link>
      <description>The Responsive Pricing Table WordPress plugin before 5.1.11 does not validate and escape some of its Pricing Table options before outputting them back in a page/post where the related shortcode is embed, which could allow users with the author role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1333|2024-08-01T18:33:25.475Z</guid>
      <pubDate>Mon, 18 Mar 2024 15:15:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1746|2024-08-01T18:48:21.820Z -- unknown -- testimonial%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1746</link>
      <description>The Testimonial Slider WordPress plugin before 2.3.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1746|2024-08-01T18:48:21.820Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0904|2024-08-01T18:18:19.034Z -- unknown -- fancy%20product%20designer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0904</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.81 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0904|2024-08-01T18:18:19.034Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0421|2024-08-01T18:04:49.663Z -- unknown -- mappress%20maps%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0421</link>
      <description>The MapPress Maps for WordPress plugin before 2.88.16 does not ensure that posts to be retrieve via an AJAX action is a public map, allowing unauthenticated users to read arbitrary private and draft posts.</description>
      <guid isPermaLink="false">CVE-2024-0421|2024-08-01T18:04:49.663Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1664|2024-08-01T18:48:21.799Z -- unknown -- responsive%20gallery%20grid</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1664</link>
      <description>The Responsive Gallery Grid WordPress plugin before 2.3.11 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1664|2024-08-01T18:48:21.799Z</guid>
      <pubDate>Tue, 09 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1331|2024-08-01T18:33:25.390Z -- unknown -- team%20members</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1331</link>
      <description>The Team Members WordPress plugin before 5.3.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the author role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-1331|2024-08-01T18:33:25.390Z</guid>
      <pubDate>Mon, 18 Mar 2024 15:15:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1292|2024-08-01T18:33:25.542Z -- unknown -- wpb-show-core</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1292</link>
      <description>The WPB Show Core WordPress plugin before 2.7 does not sanitise and escape some parameters before outputting them back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-1292|2024-08-01T18:33:25.542Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1106|2024-08-01T18:26:30.503Z -- unknown -- shariff%20wrapper</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1106</link>
      <description>The Shariff Wrapper WordPress plugin before 4.6.10 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1106|2024-08-01T18:26:30.503Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0673|2024-08-01T18:11:35.653Z -- unknown -- pz-linkcard</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0673</link>
      <description>The Pz-LinkCard WordPress plugin through 2.5.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-0673|2024-08-01T18:11:35.653Z</guid>
      <pubDate>Thu, 28 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1752|2024-08-01T18:48:22.029Z -- unknown -- font%20farsi</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1752</link>
      <description>The Font Farsi WordPress plugin through 1.6.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1752|2024-08-01T18:48:22.029Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1286|2024-08-01T18:33:25.435Z -- unknown -- pmpro-membership-maps</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1286</link>
      <description>The pmpro-membership-maps WordPress plugin before 0.7 does not prevent users with at least the contributor role from leaking sensitive information about users with a membership on the site.</description>
      <guid isPermaLink="false">CVE-2024-1286|2024-08-01T18:33:25.435Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1487|2024-08-01T18:40:21.404Z -- unknown -- photos%20and%20files%20contest%20gallery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1487</link>
      <description>The Photos and Files Contest Gallery WordPress plugin before 21.3.1 does not sanitize and escape some parameters, which could allow users with a role as low as author to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-1487|2024-08-01T18:40:21.404Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0420|2024-08-01T18:04:49.657Z -- unknown -- mappress%20maps%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0420</link>
      <description>The MapPress Maps for WordPress plugin before 2.88.15 does not sanitize and escape the map title when outputting it back in the admin dashboard, allowing Contributors and above roles to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-0420|2024-08-01T18:04:49.657Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0820|2024-08-01T18:18:19.145Z -- unknown -- jobs%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0820</link>
      <description>The Jobs for WordPress plugin before 2.7.4 does not sanitise and escape some parameters, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-0820|2024-08-01T18:18:19.145Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0855|2024-08-01T18:18:18.940Z -- unknown -- spiffy%20calendar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0855</link>
      <description>The Spiffy Calendar WordPress plugin before 4.9.9 doesn't check the event_author parameter, and allows any user to alter it when creating an event, leading to deceiving users/admins that a page was created by a Contributor+.</description>
      <guid isPermaLink="false">CVE-2024-0855|2024-08-01T18:18:18.940Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1958|2024-08-01T18:56:22.557Z -- unknown -- wpb-show-core</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1958</link>
      <description>The WPB Show Core WordPress plugin before 2.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin or unauthenticated users</description>
      <guid isPermaLink="false">CVE-2024-1958|2024-08-01T18:56:22.557Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0337|2024-08-01T18:18:19.215Z -- unknown -- travelpayouts%3A%20all%20travel%20brands%20in%20one%20place</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0337</link>
      <description>The Travelpayouts: All Travel Brands in One Place WordPress plugin through 1.1.15 is vulnerable to Open Redirect due to insufficient validation on the travelpayouts_redirect variable. This makes it possible for unauthenticated attackers to redirect users to potentially malicious sites if they can successfully trick them into performing an action.</description>
      <guid isPermaLink="false">CVE-2024-0337|2024-08-01T18:18:19.215Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0427|2024-08-01T18:04:49.774Z -- unknown -- arforms%20-%20premium%20wordpress%20form%20builder%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0427</link>
      <description>The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.4.1 does not properly escape user-controlled input when it is reflected in some of its AJAX actions.</description>
      <guid isPermaLink="false">CVE-2024-0427|2024-08-01T18:04:49.774Z</guid>
      <pubDate>Wed, 12 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3983|2024-08-01T16:08:02.885Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3983</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 30.1 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting customers via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3983|2024-08-01T16:08:02.885Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1747|2024-08-01T14:24:07.026Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1747</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 30.2 does not have authorisation and CSRF in various AJAX actions, allowing any authenticated users, such as subscriber, to call them and update/delete/create customer metadata, also leading to Stored Cross-Site Scripting due to the lack of escaping of said metadata values.</description>
      <guid isPermaLink="false">CVE-2024-1747|2024-08-01T14:24:07.026Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6529|2024-08-01T06:00:05.939Z -- unknown -- ultimate%20classified%20listings</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6529</link>
      <description>The Ultimate Classified Listings WordPress plugin before 1.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6529|2024-08-01T06:00:05.939Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2872|2024-08-01T06:00:04.565Z -- unknown -- socialdriver-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2872</link>
      <description>The socialdriver-framework WordPress plugin before 2024.04.30 does not sanitise and escape some of its settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2872|2024-08-01T06:00:04.565Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2843|2024-08-01T06:00:03.997Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2843</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 30.1 does not have CSRF checks in some places, which could allow attackers to make logged in admin users delete users via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2843|2024-08-01T06:00:03.997Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4090|2024-08-01T06:00:05.396Z -- unknown -- floating%20notification%20bar%2C%20sticky%20menu%20on%20scroll%2C%20announcement%20banner%2C%20and%20sticky%20header%20for%20any%20theme</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4090</link>
      <description>The Floating Notification Bar, Sticky Menu on Scroll, Announcement Banner, and Sticky Header for Any   WordPress plugin before 2.7.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-4090|2024-08-01T06:00:05.396Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3983|2024-08-01T06:00:05.102Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3983</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 30.1 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting customers via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3983|2024-08-01T06:00:05.102Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6496|2024-08-01T06:00:05.664Z -- unknown -- light%20poll</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6496</link>
      <description>The Light Poll WordPress plugin through 1.0.0 does not have CSRF checks when deleting polls, which could allow attackers to make logged in users perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6496|2024-08-01T06:00:05.664Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1747|2024-08-01T06:00:02.536Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1747</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 30.2 does not have authorisation and CSRF in various AJAX actions, allowing any authenticated users, such as subscriber, to call them and update/delete/create customer metadata, also leading to Stored Cross-Site Scripting due to the lack of escaping of said metadata values.</description>
      <guid isPermaLink="false">CVE-2024-1747|2024-08-01T06:00:02.536Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4756|2024-07-31T18:24:52.972Z -- unknown -- wp%20backpack</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4756</link>
      <description>The WP Backpack WordPress plugin through 2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4756|2024-07-31T18:24:52.972Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5975|2024-07-31T18:25:56.292Z -- unknown -- cz%20loan%20management</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5975</link>
      <description>The CZ Loan Management WordPress plugin through 1.1 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2024-5975|2024-07-31T18:25:56.292Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2583|2024-07-31T16:24:54.606Z -- unknown -- wp%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2583</link>
      <description>The WP Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 7.0.5 does not properly escape some of its shortcodes attributes before they are echoed back to users, making it possible for users with the contributor role to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-2583|2024-07-31T16:24:54.606Z</guid>
      <pubDate>Sat, 13 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6223|2024-07-31T14:26:48.577Z -- unknown -- send%20email%20only%20on%20reply%20to%20my%20comment</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6223</link>
      <description>The Send email only on Reply to My Comment WordPress plugin through 1.0.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6223|2024-07-31T14:26:48.577Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6695|2024-07-31T06:00:04.649Z -- unknown -- user%20profile%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6695</link>
      <description>it's possible for an attacker to gain administrative access without having any kind of account on the targeted site and perform unauthorized actions. This is due to improper logic flow on the user registration process.</description>
      <guid isPermaLink="false">CVE-2024-6695|2024-07-31T06:00:04.649Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6165|2024-07-31T06:00:02.242Z -- unknown -- wanotifier</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6165</link>
      <description>The WANotifier  WordPress plugin before 2.6.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6165|2024-07-31T06:00:02.242Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6412|2024-07-31T06:00:04.014Z -- unknown -- html%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6412</link>
      <description>The HTML Forms  WordPress plugin before 1.3.34 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6412|2024-07-31T06:00:04.014Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6272|2024-07-31T06:00:02.822Z -- unknown -- spidercontacts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6272</link>
      <description>The SpiderContacts WordPress plugin through 1.1.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6272|2024-07-31T06:00:02.822Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6408|2024-07-31T06:00:03.358Z -- unknown -- slider%20by%2010web</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6408</link>
      <description>The Slider by 10Web  WordPress plugin before 1.2.57 does not sanitise and escape its Slider Title, which could allow high privilege users such as editors and above to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-6408|2024-07-31T06:00:03.358Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6164|2024-07-30T17:13:18.492Z -- unknown -- filter%20%26%20grids</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6164</link>
      <description>The Filter &amp; Grids WordPress plugin before 2.8.33 is vulnerable to Local File Inclusion via the post_layout parameter. This makes it possible for an unauthenticated attacker to include and execute PHP files on the server, allowing the execution of any PHP code in those files.</description>
      <guid isPermaLink="false">CVE-2024-6164|2024-07-30T17:13:18.492Z</guid>
      <pubDate>Thu, 18 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6536|2024-07-30T14:05:31.987Z -- unknown -- zephyr%20project%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6536</link>
      <description>The Zephyr Project Manager WordPress plugin before 3.3.99 does not sanitise and escape some of its settings, which could allow high privilege users such as editors and admins to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6536|2024-07-30T14:05:31.987Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3669|2024-07-30T14:34:57.850Z -- unknown -- web%20directory%20free</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3669</link>
      <description>The Web Directory Free WordPress plugin before 1.7.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3669|2024-07-30T14:34:57.850Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3113|2024-07-30T14:01:38.877Z -- unknown -- formflow%3A%20whatsapp%20social%20and%20advanced%20form%20builder%20with%20easy%20lead%20collection</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3113</link>
      <description>The FormFlow: WhatsApp Social and Advanced Form Builder with Easy Lead Collection WordPress plugin before 2.12.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3113|2024-07-30T14:01:38.877Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5808|2024-07-30T14:28:15.917Z -- unknown -- wp%20ajax%20contact%20form</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5808</link>
      <description>The WP Ajax Contact Form WordPress plugin through 2.2.2 does not have CSRF check in place when deleting emails from the email list, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5808|2024-07-30T14:28:15.917Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6021|2024-07-30T14:27:40.127Z -- unknown -- donation%20block%20for%20paypal</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6021</link>
      <description>The Donation Block For PayPal WordPress plugin through 2.1.0 does not sanitise and escape form submissions, leading to a stored cross-site scripting vulnerability</description>
      <guid isPermaLink="false">CVE-2024-6021|2024-07-30T14:27:40.127Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6536|2024-07-30T06:00:10.760Z -- unknown -- zephyr%20project%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6536</link>
      <description>The Zephyr Project Manager WordPress plugin before 3.3.99 does not sanitise and escape some of its settings, which could allow high privilege users such as editors and admins to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6536|2024-07-30T06:00:10.760Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3669|2024-07-30T06:00:06.976Z -- unknown -- web%20directory%20free</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3669</link>
      <description>The Web Directory Free WordPress plugin before 1.7.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3669|2024-07-30T06:00:06.976Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6226|2024-07-30T06:00:10.319Z -- unknown -- wpstickybar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6226</link>
      <description>The WpStickyBar  WordPress plugin through 2.1.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6226|2024-07-30T06:00:10.319Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3113|2024-07-30T06:00:06.437Z -- unknown -- formflow%3A%20whatsapp%20social%20and%20advanced%20form%20builder%20with%20easy%20lead%20collection</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3113</link>
      <description>The FormFlow: WhatsApp Social and Advanced Form Builder with Easy Lead Collection WordPress plugin before 2.12.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3113|2024-07-30T06:00:06.437Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4096|2024-07-30T06:00:07.893Z -- unknown -- responsive%20tabs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4096</link>
      <description>The Responsive Tabs WordPress plugin through 4.0.8 does not sanitise and escape some of its Tab settings, which could allow high privilege users such as Contributors and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4096|2024-07-30T06:00:07.893Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6223|2024-07-30T06:00:09.898Z -- unknown -- send%20email%20only%20on%20reply%20to%20my%20comment</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6223</link>
      <description>The Send email only on Reply to My Comment WordPress plugin through 1.0.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6223|2024-07-30T06:00:09.898Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6230|2024-07-30T06:00:10.533Z -- unknown -- %D9%BE%D9%84%D8%A7%DA%AF%DB%8C%D9%86%20%D9%BE%D8%B1%D8%AF%D8%A7%D8%AE%D8%AA%20%D8%AF%D9%84%D8%AE%D9%88%D8%A7%D9%87</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6230</link>
      <description>The پلاگین پرداخت دلخواه WordPress plugin through 2.9.8 does not have CSRF check in place when resetting its form fields, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6230|2024-07-30T06:00:10.533Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5807|2024-07-30T06:00:08.495Z -- unknown -- business%20card</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5807</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not prevent high privilege users like administrators from uploading malicious PHP files, which could allow them to run arbitrary code on servers hosting their site, even in MultiSite configurations.</description>
      <guid isPermaLink="false">CVE-2024-5807|2024-07-30T06:00:08.495Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1287|2024-07-30T06:00:06.053Z -- unknown -- pmpro-member-directory</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1287</link>
      <description>The pmpro-member-directory WordPress plugin before 1.2.6 does not prevent users with at least the contributor role from leaking other users' sensitive information, including password hashes.</description>
      <guid isPermaLink="false">CVE-2024-1287|2024-07-30T06:00:06.053Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6224|2024-07-30T06:00:10.109Z -- unknown -- send%20email%20only%20on%20reply%20to%20my%20comment</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6224</link>
      <description>The Send email only on Reply to My Comment WordPress plugin through 1.0.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6224|2024-07-30T06:00:10.109Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5808|2024-07-30T06:00:08.895Z -- unknown -- wp%20ajax%20contact%20form</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5808</link>
      <description>The WP Ajax Contact Form WordPress plugin through 2.2.2 does not have CSRF check in place when deleting emails from the email list, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5808|2024-07-30T06:00:08.895Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3986|2024-07-30T06:00:07.510Z -- unknown -- sportspress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3986</link>
      <description>The SportsPress  WordPress plugin before 2.7.22 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3986|2024-07-30T06:00:07.510Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5975|2024-07-30T06:00:09.447Z -- unknown -- cz%20loan%20management</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5975</link>
      <description>The CZ Loan Management WordPress plugin through 1.1 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2024-5975|2024-07-30T06:00:09.447Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5809|2024-07-30T06:00:09.175Z -- unknown -- wp%20ajax%20contact%20form</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5809</link>
      <description>The WP Ajax Contact Form WordPress plugin through 2.2.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against admin users</description>
      <guid isPermaLink="false">CVE-2024-5809|2024-07-30T06:00:09.175Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5765|2024-07-30T06:00:08.234Z -- unknown -- wpstickybar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5765</link>
      <description>The WpStickyBar  WordPress plugin through 2.1.0 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2024-5765|2024-07-30T06:00:08.234Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1286|2024-07-30T06:00:05.284Z -- unknown -- pmpro-membership-maps</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1286</link>
      <description>The pmpro-membership-maps WordPress plugin before 0.7 does not prevent users with at least the contributor role from leaking sensitive information about users with a membership on the site.</description>
      <guid isPermaLink="false">CVE-2024-1286|2024-07-30T06:00:05.284Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6021|2024-07-30T06:00:09.678Z -- unknown -- donation%20block%20for%20paypal</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6021</link>
      <description>The Donation Block For PayPal WordPress plugin through 2.1.0 does not sanitise and escape form submissions, leading to a stored cross-site scripting vulnerability</description>
      <guid isPermaLink="false">CVE-2024-6021|2024-07-30T06:00:09.678Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5604|2024-07-29T19:06:09.171Z -- unknown -- bug%20library</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5604</link>
      <description>The Bug Library WordPress plugin before 2.1.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5604|2024-07-29T19:06:09.171Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4664|2024-07-29T19:49:29.334Z -- unknown -- wp%20chat%20app</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4664</link>
      <description>The WP Chat App WordPress plugin before 3.6.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admins to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2024-4664|2024-07-29T19:49:29.334Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6362|2024-07-29T16:10:22.866Z -- unknown -- ultimate%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6362</link>
      <description>The Ultimate Blocks  WordPress plugin before 3.2.0 does not validate and escape some of its post-grid block attributes before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6362|2024-07-29T16:10:22.866Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6244|2024-07-29T16:54:19.840Z -- unknown -- pz%20frontend%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6244</link>
      <description>The PZ Frontend Manager WordPress plugin before 1.0.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6244|2024-07-29T16:54:19.840Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6490|2024-07-29T14:33:55.817Z -- unknown -- master%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6490</link>
      <description>During testing of the Master Slider  WordPress plugin through 3.9.10, a CSRF vulnerability was found, which allows an unauthorized user to manipulate requests on behalf of the victim and thereby delete all of the sliders inside Master Slider  WordPress plugin through 3.9.10.</description>
      <guid isPermaLink="false">CVE-2024-6490|2024-07-29T14:33:55.817Z</guid>
      <pubDate>Fri, 26 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5285|2024-07-29T06:00:01.890Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5285</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.2 does not have CSRF check in place when deleting affiliates, which could allow attackers to make a logged in user change delete them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5285|2024-07-29T06:00:01.890Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5882|2024-07-29T06:00:06.284Z -- unknown -- ultimate%20classified%20listings</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5882</link>
      <description>The Ultimate Classified Listings WordPress plugin before 1.3 does not validate the `ucl_page` and `layout` parameters allowing unauthenticated users to access PHP files on the server from the listings page</description>
      <guid isPermaLink="false">CVE-2024-5882|2024-07-29T06:00:06.284Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6362|2024-07-29T06:00:07.759Z -- unknown -- ultimate%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6362</link>
      <description>The Ultimate Blocks  WordPress plugin before 3.2.0 does not validate and escape some of its post-grid block attributes before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6362|2024-07-29T06:00:07.759Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6487|2024-07-29T06:00:08.552Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6487</link>
      <description>The Inline Related Posts WordPress plugin before 3.8.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6487|2024-07-29T06:00:08.552Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6366|2024-07-29T06:00:08.248Z -- unknown -- user%20profile%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6366</link>
      <description>The User Profile Builder  WordPress plugin before 3.11.8 does not have proper authorisation, allowing unauthenticated users to upload media files via the async upload functionality of WP.</description>
      <guid isPermaLink="false">CVE-2024-6366|2024-07-29T06:00:08.248Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5883|2024-07-29T06:00:07.364Z -- unknown -- ultimate%20classified%20listings</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5883</link>
      <description>The Ultimate Classified Listings WordPress plugin before 1.3 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5883|2024-07-29T06:00:07.364Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4483|2024-07-29T06:00:01.115Z -- unknown -- email%20encoder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4483</link>
      <description>The Email Encoder  WordPress plugin before 2.2.2 does not escape the WP_Email_Encoder_Bundle_options[protection_text] parameter before outputting it back in an attribute in an admin page, leading to a Stored Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-4483|2024-07-29T06:00:01.115Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3261|2024-07-26T14:50:48.209Z -- unknown -- strong%20testimonials</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3261</link>
      <description>The Strong Testimonials WordPress plugin before 3.1.12 does not validate and escape some of its Testimonial fields before outputting them back in a page/post, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks. The attack requires a specific view to be performed</description>
      <guid isPermaLink="false">CVE-2024-3261|2024-07-26T14:50:48.209Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6584|2024-07-25T16:03:39.160Z -- unknown -- wp%20jobsearch</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6584</link>
      <description>The WP JobSearch WordPress plugin before 2.3.4 does not prevent attackers from logging-in as any users with the only knowledge of that user's email address.</description>
      <guid isPermaLink="false">CVE-2023-6584|2024-07-25T16:03:39.160Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4977|2024-07-24T19:59:02.122Z -- unknown -- index%20wp%20mysql%20for%20speed</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4977</link>
      <description>The Index WP MySQL For Speed WordPress plugin before 1.4.18 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-4977|2024-07-24T19:59:02.122Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3692|2024-07-24T19:58:15.932Z -- unknown -- gutenverse</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3692</link>
      <description>The Gutenverse  WordPress plugin before 1.9.1 does not validate the htmlTag option in various of its block before outputting it back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3692|2024-07-24T19:58:15.932Z</guid>
      <pubDate>Fri, 03 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5074|2024-07-24T20:14:48.087Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5074</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5074|2024-07-24T20:14:48.087Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2972|2024-07-24T18:27:11.083Z -- unknown -- floating%20chat%20widget%3A%20contact%20chat%20icons%2C%20whatsapp%2C%20telegram%20chat%2C%20line%20messenger%2C%20wechat%2C%20email%2C%20sms%2C%20call%20button</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2972</link>
      <description>The Floating Chat Widget: Contact Chat Icons, WhatsApp, Telegram Chat, Line Messenger, WeChat, Email, SMS, Call Button  WordPress plugin before 3.1.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2972|2024-07-24T18:27:11.083Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3710|2024-07-24T18:29:07.399Z -- unknown -- image%20photo%20gallery%20final%20tiles%20grid</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3710</link>
      <description>The Image Photo Gallery Final Tiles Grid WordPress plugin before 3.6.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3710|2024-07-24T18:29:07.399Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1401|2024-07-24T16:21:24.237Z -- unknown -- profile%20box%20shortcode%20and%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1401</link>
      <description>The Profile Box Shortcode And Widget WordPress plugin before 1.2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1401|2024-07-24T16:21:24.237Z</guid>
      <pubDate>Tue, 19 Mar 2024 14:28:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6094|2024-07-24T06:00:02.906Z -- unknown -- wp%20ulike</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6094</link>
      <description>The WP ULike  WordPress plugin before 4.7.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-6094|2024-07-24T06:00:02.906Z</guid>
      <pubDate>Wed, 24 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3903|2024-07-23T18:41:20.904Z -- unknown -- add%20custom%20css%20and%20js</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3903</link>
      <description>The Add Custom CSS and JS WordPress plugin through 1.20 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in as author and above add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3903|2024-07-23T18:41:20.904Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6231|2024-07-23T13:25:53.653Z -- unknown -- request%20a%20quote</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6231</link>
      <description>The Request a Quote WordPress plugin before 2.4.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6231|2024-07-23T13:25:53.653Z</guid>
      <pubDate>Tue, 23 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4260|2024-07-23T13:07:40.802Z -- unknown -- page%20builder%20gutenberg%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4260</link>
      <description>The Page Builder Gutenberg Blocks  WordPress plugin before 3.1.12 does not prevent users from pinging arbitrary hosts via some of its shortcodes, which could allow high privilege users such as contributors to perform SSRF attacks.</description>
      <guid isPermaLink="false">CVE-2024-4260|2024-07-23T13:07:40.802Z</guid>
      <pubDate>Tue, 23 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5811|2024-07-22T19:57:14.393Z -- unknown -- simple%20video%20directory</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5811</link>
      <description>The Simple Video Directory WordPress plugin before 1.4.4 does not sanitise and escape some of its settings, which could allow contributors and higher to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5811|2024-07-22T19:57:14.393Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5076|2024-07-22T19:48:53.025Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5076</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5076|2024-07-22T19:48:53.025Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3111|2024-07-22T16:16:56.131Z -- unknown -- interactive%20content</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3111</link>
      <description>The Interactive Content  WordPress plugin before 1.15.8 does not validate uploads which could allow a Contributors and above to update malicious SVG files, leading to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2024-3111|2024-07-22T16:16:56.131Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6243|2024-07-22T13:51:48.217Z -- unknown -- html%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6243</link>
      <description>The HTML Forms  WordPress plugin before 1.3.33 does not sanitize and escape the form message inputs, allowing high-privilege users, such as administrators, to perform Stored Cross-Site Scripting (XSS) attacks even when the unfiltered_html capability is disabled.</description>
      <guid isPermaLink="false">CVE-2024-6243|2024-07-22T13:51:48.217Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5529|2024-07-22T06:00:04.206Z -- unknown -- wp%20quicklatex</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5529</link>
      <description>The WP QuickLaTeX WordPress plugin before 3.8.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5529|2024-07-22T06:00:04.206Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6243|2024-07-22T06:00:06.064Z -- unknown -- html%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6243</link>
      <description>The HTML Forms  WordPress plugin before 1.3.33 does not sanitize and escape the form message inputs, allowing high-privilege users, such as administrators, to perform Stored Cross-Site Scripting (XSS) attacks even when the unfiltered_html capability is disabled.</description>
      <guid isPermaLink="false">CVE-2024-6243|2024-07-22T06:00:06.064Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5004|2024-07-22T06:00:01.790Z -- unknown -- cm%20popup%20plugin%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5004</link>
      <description>The CM Popup Plugin for WordPress  WordPress plugin before 1.6.6 does not sanitise and escape some of the campaign settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5004|2024-07-22T06:00:01.790Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6271|2024-07-22T06:00:06.608Z -- unknown -- community%20events</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6271</link>
      <description>The Community Events WordPress plugin before 1.5 does not have CSRF check in place when deleting events, which could allow attackers to make a logged in admin delete arbitrary events via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6271|2024-07-22T06:00:06.608Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6244|2024-07-22T06:00:06.341Z -- unknown -- pz%20frontend%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6244</link>
      <description>The PZ Frontend Manager WordPress plugin before 1.0.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6244|2024-07-22T06:00:06.341Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5973|2024-07-22T06:00:05.733Z -- unknown -- masterstudy%20lms%20wordpress%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5973</link>
      <description>The MasterStudy LMS WordPress Plugin  WordPress plugin before 3.3.24 does not prevent students from creating instructor accounts, which could be used to get access to functionalities they shouldn't have.</description>
      <guid isPermaLink="false">CVE-2024-5973|2024-07-22T06:00:05.733Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6205|2024-07-19T17:16:31.657Z -- unknown -- payplus%20payment%20gateway</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6205</link>
      <description>The PayPlus Payment Gateway WordPress plugin before 6.6.9 does not properly sanitise and escape a parameter before using it in a SQL statement via a WooCommerce API route available to unauthenticated users, leading to an SQL injection vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-6205|2024-07-19T17:16:31.657Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7269|2024-07-19T14:20:56.967Z -- unknown -- artplacer%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7269</link>
      <description>The ArtPlacer Widget WordPress plugin before 2.21.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-7269|2024-07-19T14:20:56.967Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3972|2024-07-18T20:47:08.427Z -- unknown -- similarity</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3972</link>
      <description>The Similarity WordPress plugin through 3.0 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3972|2024-07-18T20:47:08.427Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4305|2024-07-18T20:34:14.260Z -- unknown -- post%20grid%20gutenberg%20blocks%20and%20wordpress%20blog%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4305</link>
      <description>The Post Grid Gutenberg Blocks and WordPress Blog Plugin  WordPress plugin before 4.1.0 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4305|2024-07-18T20:34:14.260Z</guid>
      <pubDate>Mon, 17 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6164|2024-07-18T06:00:04.048Z -- unknown -- filter%20%26%20grids</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6164</link>
      <description>The Filter &amp; Grids WordPress plugin before 2.8.33 is vulnerable to Local File Inclusion via the post_layout parameter. This makes it possible for an unauthenticated attacker to include and execute PHP files on the server, allowing the execution of any PHP code in those files.</description>
      <guid isPermaLink="false">CVE-2024-6164|2024-07-18T06:00:04.048Z</guid>
      <pubDate>Thu, 18 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2430|2024-07-17T13:59:13.988Z -- unknown -- website%20content%20in%20page%20or%20post</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2430</link>
      <description>The Website Content in Page or Post WordPress plugin before 2024.04.09 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2430|2024-07-17T13:59:13.988Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2907|2024-07-17T13:53:10.473Z -- unknown -- agca</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2907</link>
      <description>The AGCA  WordPress plugin before 7.2.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-2907|2024-07-17T13:53:10.473Z</guid>
      <pubDate>Thu, 25 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1295|2024-07-16T17:02:16.338Z -- unknown -- events-calendar-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1295</link>
      <description>The events-calendar-pro WordPress plugin before 6.4.0.1, The Events Calendar WordPress plugin before 6.4.0.1 does not prevent users with at least the contributor role from leaking details about events they shouldn't have access to. (e.g. password-protected events, drafts, etc.)</description>
      <guid isPermaLink="false">CVE-2024-1295|2024-07-16T17:02:16.338Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5472|2024-07-16T13:30:55.450Z -- unknown -- wp%20quicklatex</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5472</link>
      <description>The WP QuickLaTeX WordPress plugin before 3.8.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5472|2024-07-16T13:30:55.450Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3964|2024-07-16T13:56:58.674Z -- unknown -- product%20enquiry%20for%20woocommerce</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3964</link>
      <description>The Product Enquiry for WooCommerce WordPress plugin before 3.1.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3964|2024-07-16T13:56:58.674Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5002|2024-07-15T18:29:55.419Z -- unknown -- user%20submitted%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5002</link>
      <description>The User Submitted Posts  WordPress plugin before 20240516 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5002|2024-07-15T18:29:55.419Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6070|2024-07-15T18:42:51.706Z -- unknown -- if-so%20dynamic%20content%20personalization</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6070</link>
      <description>The If-So Dynamic Content Personalization WordPress plugin before 1.8.0.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6070|2024-07-15T18:42:51.706Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5079|2024-07-15T18:34:02.301Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5079</link>
      <description>The wp-eMember WordPress plugin before 10.6.7 does not sanitise and escape some of the fields when members register, which allows unauthenticated users to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5079|2024-07-15T18:34:02.301Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5286|2024-07-15T18:40:40.075Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5286</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5286|2024-07-15T18:40:40.075Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5282|2024-07-15T16:45:54.048Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5282</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5282|2024-07-15T16:45:54.048Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6075|2024-07-15T16:09:05.215Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6075</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6075|2024-07-15T16:09:05.215Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5080|2024-07-15T16:49:49.740Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5080</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not validate files to be uploaded, which could allow admins to upload arbitrary files such as PHP on the server</description>
      <guid isPermaLink="false">CVE-2024-5080|2024-07-15T16:49:49.740Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5713|2024-07-15T16:41:12.588Z -- unknown -- if-so%20dynamic%20content%20personalization</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5713</link>
      <description>The If-So Dynamic Content Personalization WordPress plugin before 1.8.0.4 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2024-5713|2024-07-15T16:41:12.588Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6075|2024-07-15T14:01:09.916Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6075</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6075|2024-07-15T14:01:09.916Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5644|2024-07-15T14:19:36.372Z -- unknown -- tournamatch</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5644</link>
      <description>The Tournamatch WordPress plugin before 4.6.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5644|2024-07-15T14:19:36.372Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3963|2024-07-15T14:57:22.231Z -- unknown -- giveaways%20and%20contests%20by%20rafflepress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3963</link>
      <description>The Giveaways and Contests by RafflePress  WordPress plugin before 1.12.14 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3963|2024-07-15T14:57:22.231Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5034|2024-07-15T14:28:47.130Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5034</link>
      <description>The SULly WordPress plugin before 4.3.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5034|2024-07-15T14:28:47.130Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4272|2024-07-15T14:34:09.083Z -- unknown -- support%20svg</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4272</link>
      <description>The Support SVG  WordPress plugin before 1.1.0 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4272|2024-07-15T14:34:09.083Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4217|2024-07-15T14:42:02.992Z -- unknown -- shortcodes-ultimate-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4217</link>
      <description>The shortcodes-ultimate-pro WordPress plugin before 7.1.5 does not properly escape some of its shortcodes' settings, making it possible for attackers with a Contributor account to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4217|2024-07-15T14:42:02.992Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5281|2024-07-15T14:23:57.239Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5281</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5281|2024-07-15T14:23:57.239Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5032|2024-07-15T14:00:58.599Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5032</link>
      <description>The SULly WordPress plugin before 4.3.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5032|2024-07-15T14:00:58.599Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5075|2024-07-15T14:56:45.766Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5075</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5075|2024-07-15T14:56:45.766Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4749|2024-07-15T14:13:23.215Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4749</link>
      <description>The wp-eMember WordPress plugin before 10.3.9 does not sanitize and escape the "fieldId" parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2024-4749|2024-07-15T14:13:23.215Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5630|2024-07-15T12:26:40.099Z -- unknown -- insert%20or%20embed%20articulate%20content%20into%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5630</link>
      <description>The Insert or Embed Articulate Content into WordPress plugin before 4.3000000024 does not prevent authors from uploading arbitrary files to the site, which may allow them to upload PHP shells on affected sites.</description>
      <guid isPermaLink="false">CVE-2024-5630|2024-07-15T12:26:40.099Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5033|2024-07-13T22:58:08.451Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5033</link>
      <description>The SULly WordPress plugin before 4.3.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5033|2024-07-13T22:58:08.451Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5028|2024-07-13T22:54:14.789Z -- unknown -- cm%20wordpress%20search%20and%20replace%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5028</link>
      <description>The CM WordPress Search And Replace Plugin WordPress plugin before 1.3.9 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5028|2024-07-13T22:54:14.789Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3753|2024-07-13T22:56:11.000Z -- unknown -- hostel</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3753</link>
      <description>The Hostel WordPress plugin before 1.1.5.3 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3753|2024-07-13T22:56:11.000Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5287|2024-07-13T11:56:55.619Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5287</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in user change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5287|2024-07-13T11:56:55.619Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5626|2024-07-12T20:17:44.270Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5626</link>
      <description>The Inline Related Posts WordPress plugin before 3.7.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5626|2024-07-12T20:17:44.270Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4753|2024-07-12T20:22:50.152Z -- unknown -- wp%20secure%20maintenance</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4753</link>
      <description>The WP Secure Maintenance WordPress plugin before 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4753|2024-07-12T20:22:50.152Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2102|2024-07-12T21:11:29.048Z -- unknown -- salon%20booking%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2102</link>
      <description>The Salon booking system WordPress plugin before 9.6.3 does not properly sanitize and escape the 'Mobile Phone' field and 'sms_prefix' parameter when booking an appointment, allowing customers to conduct Stored Cross-Site Scripting attacks. The payload gets triggered when an admin visits the 'Bookings' page and the malicious script is executed in the admin context.</description>
      <guid isPermaLink="false">CVE-2024-2102|2024-07-12T21:11:29.048Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4655|2024-07-12T20:41:17.314Z -- unknown -- ultimate%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4655</link>
      <description>The Ultimate Blocks  WordPress plugin before 3.1.9 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4655|2024-07-12T20:41:17.314Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2858|2024-07-12T16:25:49.288Z -- unknown -- simple%20buttons%20creator</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2858</link>
      <description>The Simple Buttons Creator WordPress plugin through 1.04 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2858|2024-07-12T16:25:49.288Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0974|2024-07-12T14:39:44.851Z -- unknown -- social%20media%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0974</link>
      <description>The Social Media Widget WordPress plugin before 4.0.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0974|2024-07-12T14:39:44.851Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6024|2024-07-12T14:24:45.218Z -- unknown -- contentlock</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6024</link>
      <description>The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when deleting groups or emails, which could allow attackers to make a logged in admin remove them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6024|2024-07-12T14:24:45.218Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2696|2024-07-12T14:33:17.290Z -- unknown -- socialdriver-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2696</link>
      <description>The socialdriver-framework WordPress plugin before 2024.04.30 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2696|2024-07-12T14:33:17.290Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6026|2024-07-11T14:07:51.087Z -- unknown -- slider%20by%2010web</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6026</link>
      <description>The Slider by 10Web  WordPress plugin before 1.2.56 does not sanitise and escape some of its Slide options, which could allow authenticated users with access to the Sliders (by default Administrator, however this can be changed via the Slider by 10Web  WordPress plugin before 1.2.56's options) and the ability to add images (Editor+) to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6026|2024-07-11T14:07:51.087Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6138|2024-07-11T14:09:08.884Z -- unknown -- secure%20copy%20content%20protection%20and%20content%20locking</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6138</link>
      <description>The Secure Copy Content Protection and Content Locking WordPress plugin before 4.0.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-6138|2024-07-11T14:09:08.884Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4620|2024-07-11T14:35:56.435Z -- unknown -- arforms%20-%20premium%20wordpress%20form%20builder%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4620</link>
      <description>The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.6 allows unauthenticated users to modify uploaded files in such a way that PHP code can be uploaded when an upload file input is included on a form</description>
      <guid isPermaLink="false">CVE-2024-4620|2024-07-11T14:35:56.435Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4477|2024-07-11T14:24:35.827Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4477</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not sanitise and escape some of its log data before outputting them back in an admin dashboard, leading to an Unauthenticated Stored Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-4477|2024-07-11T14:24:35.827Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4474|2024-07-11T14:25:22.083Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4474</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4474|2024-07-11T14:25:22.083Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4475|2024-07-11T14:24:26.720Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4475</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not have CSRF check when clearing logs, which could allow attackers to make a logged in admin clear the logs them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4475|2024-07-11T14:24:26.720Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6025|2024-07-11T14:15:48.397Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6025</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.0.5 does not sanitise and escape some of its Quiz settings, which could allow contributors and higher to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6025|2024-07-11T14:15:48.397Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2375|2024-07-11T14:27:35.555Z -- unknown -- wpqa%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2375</link>
      <description>The WPQA Builder WordPress plugin before 6.1.1 does not sanitise and escape some of its Slider settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2375|2024-07-11T14:27:35.555Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5488|2024-07-10T20:02:36.599Z -- unknown -- seopress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5488</link>
      <description>The SEOPress  WordPress plugin before 7.9 does not properly protect some of its REST API routes, which combined with another Object Injection vulnerability can allow unauthenticated attackers to unserialize malicious gadget chains, compromising the site if a suitable chain is present.</description>
      <guid isPermaLink="false">CVE-2024-5488|2024-07-10T20:02:36.599Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5802|2024-07-09T15:13:24.401Z -- unknown -- url%20shortener%20by%20mythemeshop</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5802</link>
      <description>The URL Shortener by Myhop WordPress plugin through 1.0.17 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-5802|2024-07-09T15:13:24.401Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5729|2024-07-08T20:01:10.464Z -- unknown -- simple%20al%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5729</link>
      <description>The Simple AL Slider WordPress plugin through 1.2.10 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5729|2024-07-08T20:01:10.464Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5570|2024-07-08T20:41:08.852Z -- unknown -- simple%20photoswipe</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5570</link>
      <description>The Simple Photoswipe WordPress plugin through 0.1 does not have authorisation check when updating its settings, which could allow any authenticated users, such as subscriber to update them</description>
      <guid isPermaLink="false">CVE-2024-5570|2024-07-08T20:41:08.852Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0905|2024-07-05T21:22:15.290Z -- unknown -- fancy%20product%20designer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0905</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.8 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against unauthenticated and admin-level users</description>
      <guid isPermaLink="false">CVE-2024-0905|2024-07-05T21:22:15.290Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3188|2024-07-05T21:22:02.468Z -- unknown -- wp%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3188</link>
      <description>The WP Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 7.1.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3188|2024-07-05T21:22:02.468Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1068|2024-07-05T17:22:13.805Z -- unknown -- 404%20solution</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1068</link>
      <description>The 404 Solution WordPress plugin before 2.35.8 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2024-1068|2024-07-05T17:22:13.805Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2322|2024-07-05T17:22:24.577Z -- unknown -- woocommerce%20cart%20abandonment%20recovery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2322</link>
      <description>The WooCommerce Cart Abandonment Recovery WordPress plugin before 1.2.27 does not have CSRF check in its bulk actions, which could allow attackers to make logged in admins delete arbitrary email templates as well as delete and unsubscribe users from abandoned orders via CSRF attacks.</description>
      <guid isPermaLink="false">CVE-2024-2322|2024-07-05T17:22:24.577Z</guid>
      <pubDate>Wed, 03 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2235|2024-07-05T12:41:55.534Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2235</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make users vote on any polls, including those they don't have access to via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2235|2024-07-05T12:41:55.534Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2376|2024-07-03T20:01:39.193Z -- unknown -- wpqa%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2376</link>
      <description>The WPQA Builder WordPress plugin before 6.1.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2376|2024-07-03T20:01:39.193Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4969|2024-07-03T20:42:46.748Z -- unknown -- widget%20bundle</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4969</link>
      <description>The Widget Bundle WordPress plugin through 2.0.0 does not have CSRF checks when logging Widgets, which could allow attackers to make logged in admin enable/disable widgets via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4969|2024-07-03T20:42:46.748Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4384|2024-07-03T20:48:29.537Z -- unknown -- cssable%20countdown</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4384</link>
      <description>The CSSable Countdown WordPress plugin through 1.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4384|2024-07-03T20:48:29.537Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5728|2024-07-03T20:41:05.795Z -- unknown -- animated%20al%20list</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5728</link>
      <description>The Animated AL List WordPress plugin through 1.0.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5728|2024-07-03T20:41:05.795Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5606|2024-07-03T20:19:23.812Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5606</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.0.2 is vulnerable does not validate and escape the question_id parameter in the qsm_bulk_delete_question_from_database AJAX action, leading to a SQL injection exploitable by Contributors and above role</description>
      <guid isPermaLink="false">CVE-2024-5606|2024-07-03T20:19:23.812Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2040|2024-07-03T13:35:44.655Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2040</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make users join private groups via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2040|2024-07-03T13:35:44.655Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4900|2024-07-02T20:25:03.092Z -- unknown -- seopress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4900</link>
      <description>The SEOPress  WordPress plugin before 7.8 does not validate and escape one of its Post settings, which could allow contributor and above role to perform Open redirect attacks against any user viewing a malicious post</description>
      <guid isPermaLink="false">CVE-2024-4900|2024-07-02T20:25:03.092Z</guid>
      <pubDate>Mon, 24 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3999|2024-07-02T15:31:50.935Z -- unknown -- eazydocs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3999</link>
      <description>The EazyDocs  WordPress plugin before 2.5.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3999|2024-07-02T15:31:50.935Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4899|2024-07-01T18:29:32.961Z -- unknown -- seopress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4899</link>
      <description>The SEOPress  WordPress plugin before 7.8 does not sanitise and escape some of its Post settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-4899|2024-07-01T18:29:32.961Z</guid>
      <pubDate>Mon, 24 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5344|2024-07-01T18:34:06.517Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5344</link>
      <description>The The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the ‘forgoturl’ attribute within the plugin's WP Login &amp; Register widget in all versions up to, and including, 5.5.6 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description>
      <guid isPermaLink="false">CVE-2024-5344|2024-07-01T18:34:06.517Z</guid>
      <pubDate>Fri, 21 Jun 2024 02:05:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4934|2024-07-01T06:00:01.172Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4934</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.0.2 does not validate and escape some of its Quiz fields before outputting them back in a page/post where the Quiz is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4934|2024-07-01T06:00:01.172Z</guid>
      <pubDate>Mon, 01 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6130|2024-07-01T06:00:01.641Z -- unknown -- form%20maker%20by%2010web</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6130</link>
      <description>The Form Maker by 10Web  WordPress plugin before 1.15.26 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6130|2024-07-01T06:00:01.641Z</guid>
      <pubDate>Mon, 01 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5730|2024-06-28T14:21:56.436Z -- unknown -- pagerank%20tools</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5730</link>
      <description>The Pagerank tools WordPress plugin through 1.1.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5730|2024-06-28T14:21:56.436Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1330|2024-06-27T17:27:39.245Z -- unknown -- kadence-blocks-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1330</link>
      <description>The kadence-blocks-pro WordPress plugin before 2.3.8 does not prevent users with at least the contributor role using some of its shortcode's functionalities to leak arbitrary options from the database.</description>
      <guid isPermaLink="false">CVE-2024-1330|2024-06-27T17:27:39.245Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4704|2024-06-27T06:00:04.176Z -- unknown -- contact%20form%207</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4704</link>
      <description>The Contact Form 7 WordPress plugin before 5.9.5 has an open redirect that allows an attacker to utilize a false URL and redirect to the URL of their choosing.</description>
      <guid isPermaLink="false">CVE-2024-4704|2024-06-27T06:00:04.176Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3111|2024-06-27T06:00:03.428Z -- unknown -- interactive%20content</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3111</link>
      <description>The Interactive Content  WordPress plugin before 1.15.8 does not validate uploads which could allow a Contributors and above to update malicious SVG files, leading to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2024-3111|2024-06-27T06:00:03.428Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4664|2024-06-27T06:00:03.949Z -- unknown -- wp%20chat%20app</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4664</link>
      <description>The WP Chat App WordPress plugin before 3.6.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admins to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2024-4664|2024-06-27T06:00:03.949Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1330|2024-06-27T06:00:02.163Z -- unknown -- kadence-blocks-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1330</link>
      <description>The kadence-blocks-pro WordPress plugin before 2.3.8 does not prevent users with at least the contributor role using some of its shortcode's functionalities to leak arbitrary options from the database.</description>
      <guid isPermaLink="false">CVE-2024-1330|2024-06-27T06:00:02.163Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4759|2024-06-26T18:57:16.129Z -- unknown -- mime%20types%20extended</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4759</link>
      <description>The Mime Types Extended WordPress plugin through 0.11 does not sanitise uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2024-4759|2024-06-26T18:57:16.129Z</guid>
      <pubDate>Tue, 25 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3633|2024-06-26T14:07:31.057Z -- unknown -- webp%20%26%20svg%20support</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3633</link>
      <description>The WebP &amp; SVG Support WordPress plugin through 1.4.0 does not sanitise uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2024-3633|2024-06-26T14:07:31.057Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5473|2024-06-26T14:20:45.424Z -- unknown -- simple%20photoswipe</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5473</link>
      <description>The Simple Photoswipe WordPress plugin through 0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5473|2024-06-26T14:20:45.424Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5573|2024-06-26T06:00:05.425Z -- unknown -- easy%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5573</link>
      <description>The Easy Table of Contents WordPress plugin before 2.0.66 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-5573|2024-06-26T06:00:05.425Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3633|2024-06-26T06:00:02.176Z -- unknown -- webp%20%26%20svg%20support</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3633</link>
      <description>The WebP &amp; SVG Support WordPress plugin through 1.4.0 does not sanitise uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2024-3633|2024-06-26T06:00:02.176Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5169|2024-06-26T06:00:04.539Z -- unknown -- video%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5169</link>
      <description>The Video Widget WordPress plugin through 1.2.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5169|2024-06-26T06:00:04.539Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5071|2024-06-26T06:00:04.151Z -- unknown -- bookster</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5071</link>
      <description>The Bookster  WordPress plugin through 1.1.0 allows adding sensitive parameters when validating appointments allowing attackers to manipulate the data sent when booking an appointment (the request body) to change its status from pending to approved.</description>
      <guid isPermaLink="false">CVE-2024-5071|2024-06-26T06:00:04.151Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4758|2024-06-26T06:00:02.801Z -- unknown -- muslim%20prayer%20time%20bd</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4758</link>
      <description>The Muslim Prayer Time BD WordPress plugin through 2.4 does not have CSRF check in place when reseting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4758|2024-06-26T06:00:02.801Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5473|2024-06-26T06:00:05.192Z -- unknown -- simple%20photoswipe</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5473</link>
      <description>The Simple Photoswipe WordPress plugin through 0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5473|2024-06-26T06:00:05.192Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4959|2024-06-26T06:00:03.926Z -- unknown -- frontend%20checklist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4959</link>
      <description>The Frontend Checklist WordPress plugin through 2.3.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4959|2024-06-26T06:00:03.926Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5199|2024-06-26T06:00:04.960Z -- unknown -- spotify%20play%20button</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5199</link>
      <description>The Spotify Play Button WordPress plugin through 1.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-5199|2024-06-26T06:00:04.960Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4957|2024-06-26T06:00:03.703Z -- unknown -- frontend%20checklist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4957</link>
      <description>The Frontend Checklist WordPress plugin through 2.3.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4957|2024-06-26T06:00:03.703Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4757|2024-06-25T13:09:07.802Z -- unknown -- logo%20manager%20for%20enamad</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4757</link>
      <description>The Logo Manager For Enamad WordPress plugin through 0.7.0 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4757|2024-06-25T13:09:07.802Z</guid>
      <pubDate>Tue, 25 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5447|2024-06-24T19:22:12.801Z -- unknown -- paypal%20pay%20now%2C%20buy%20now%2C%20donation%20and%20cart%20buttons%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5447</link>
      <description>The PayPal Pay Now, Buy Now, Donation and Cart Buttons Shortcode WordPress plugin through 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5447|2024-06-24T19:22:12.801Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4899|2024-06-24T06:00:01.586Z -- unknown -- seopress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4899</link>
      <description>The SEOPress  WordPress plugin before 7.8 does not sanitise and escape some of its Post settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-4899|2024-06-24T06:00:01.586Z</guid>
      <pubDate>Mon, 24 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4900|2024-06-24T06:00:01.863Z -- unknown -- seopress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4900</link>
      <description>The SEOPress  WordPress plugin before 7.8 does not validate and escape one of its Post settings, which could allow contributor and above role to perform Open redirect attacks against any user viewing a malicious post</description>
      <guid isPermaLink="false">CVE-2024-4900|2024-06-24T06:00:01.863Z</guid>
      <pubDate>Mon, 24 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0672|2024-06-21T17:09:46.633Z -- unknown -- pz-linkcard</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0672</link>
      <description>The Pz-LinkCard WordPress plugin through 2.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-0672|2024-06-21T17:09:46.633Z</guid>
      <pubDate>Thu, 28 Mar 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4382|2024-06-21T11:47:32.527Z -- unknown -- cb%20%28legacy%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4382</link>
      <description>The CB (legacy) WordPress plugin through 0.9.4.18 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting codes, timeframes, and bookings via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4382|2024-06-21T11:47:32.527Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4970|2024-06-21T11:45:31.337Z -- unknown -- widget%20bundle</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4970</link>
      <description>The Widget Bundle WordPress plugin through 2.0.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4970|2024-06-21T11:45:31.337Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5455|2024-06-21T03:24:40.287Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5455</link>
      <description>The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 5.5.4 via the 'magazine_style' parameter within the Dynamic Smart Showcase widget. This makes it possible for authenticated attackers, with Contributor-level access and above, to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other “safe” file types can be uploaded and included.</description>
      <guid isPermaLink="false">CVE-2024-5455|2024-06-21T03:24:40.287Z</guid>
      <pubDate>Fri, 21 Jun 2024 03:24:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5475|2024-06-20T20:24:07.492Z -- unknown -- responsive%20video%20embed</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5475</link>
      <description>The Responsive video embed WordPress plugin before 0.5.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-5475|2024-06-20T20:24:07.492Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5475|2024-06-20T15:47:53.785Z -- unknown -- responsive%20video%20embed</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5475</link>
      <description>The Responsive video embed WordPress plugin before 0.5.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-5475|2024-06-20T15:47:53.785Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5475|2024-06-20T06:00:03.582Z -- unknown -- responsive%20video%20embed</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5475</link>
      <description>The Responsive video embed WordPress plugin before 0.5.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-5475|2024-06-20T06:00:03.582Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5522|2024-06-20T06:00:04.044Z -- unknown -- html5%20video%20player</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5522</link>
      <description>The HTML5 Video Player  WordPress plugin before 2.5.27 does not sanitize and escape a parameter from a REST route before using it in a SQL statement, allowing unauthenticated users to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2024-5522|2024-06-20T06:00:04.044Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4565|2024-06-20T06:00:02.546Z -- unknown -- advanced%20custom%20fields%20%28acf%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4565</link>
      <description>The Advanced Custom Fields (ACF) WordPress plugin before 6.3, Advanced Custom Fields Pro WordPress plugin before 6.3 allows you to display custom field values for any post via shortcode without checking for the correct access</description>
      <guid isPermaLink="false">CVE-2024-4565|2024-06-20T06:00:02.546Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5172|2024-06-18T13:49:52.876Z -- unknown -- expert%20invoice</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5172</link>
      <description>The Expert Invoice WordPress plugin through 1.0.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5172|2024-06-18T13:49:52.876Z</guid>
      <pubDate>Tue, 18 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4094|2024-06-18T13:08:22.407Z -- unknown -- simple%20share%20buttons%20adder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4094</link>
      <description>The Simple Share Buttons Adder WordPress plugin before 8.5.1 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-4094|2024-06-18T13:08:22.407Z</guid>
      <pubDate>Tue, 18 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3236|2024-06-17T13:34:06.345Z -- unknown -- popup%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3236</link>
      <description>The Popup Builder WordPress plugin before 1.1.33 does not sanitise and escape some of its Notification fields, which could allow users such as contributor and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-3236|2024-06-17T13:34:06.345Z</guid>
      <pubDate>Mon, 17 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4270|2024-06-15T20:42:47.018Z -- unknown -- svgmagic</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4270</link>
      <description>The SVGMagic WordPress plugin through 1.1 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4270|2024-06-15T20:42:47.018Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2218|2024-06-14T16:27:15.055Z -- unknown -- luckywp%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2218</link>
      <description>The LuckyWP Table of Contents WordPress plugin through 2.1.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2218|2024-06-14T16:27:15.055Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3993|2024-06-14T16:24:11.338Z -- unknown -- azan%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3993</link>
      <description>The AZAN Plugin WordPress plugin through 0.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3993|2024-06-14T16:24:11.338Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4271|2024-06-14T14:15:43.748Z -- unknown -- svgator</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4271</link>
      <description>The SVGator  WordPress plugin through 1.2.6 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4271|2024-06-14T14:15:43.748Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3754|2024-06-14T14:21:40.530Z -- unknown -- alemha%20watermarker</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3754</link>
      <description>The Alemha watermarker WordPress plugin through 1.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3754|2024-06-14T14:21:40.530Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4480|2024-06-14T06:00:04.871Z -- unknown -- wp%20prayer%20ii</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4480</link>
      <description>The WP Prayer II WordPress plugin through 2.4.7 does not have CSRF check in place when updating its email settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4480|2024-06-14T06:00:04.871Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3965|2024-06-14T06:00:02.754Z -- unknown -- pray%20for%20me</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3965</link>
      <description>The Pray For Me WordPress plugin through 1.0.4 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3965|2024-06-14T06:00:02.754Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3977|2024-06-14T06:00:03.530Z -- unknown -- wordpress%20jitsi%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3977</link>
      <description>The WordPress Jitsi Shortcode WordPress plugin through 0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3977|2024-06-14T06:00:03.530Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1295|2024-06-14T06:00:02.149Z -- unknown -- events-calendar-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1295</link>
      <description>The events-calendar-pro WordPress plugin before 6.4.0.1, The Events Calendar WordPress plugin before 6.4.0.1 does not prevent users with at least the contributor role from leaking details about events they shouldn't have access to. (e.g. password-protected events, drafts, etc.)</description>
      <guid isPermaLink="false">CVE-2024-1295|2024-06-14T06:00:02.149Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2218|2024-06-14T06:00:02.377Z -- unknown -- luckywp%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2218</link>
      <description>The LuckyWP Table of Contents WordPress plugin through 2.1.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2218|2024-06-14T06:00:02.377Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3993|2024-06-14T06:00:04.102Z -- unknown -- azan%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3993</link>
      <description>The AZAN Plugin WordPress plugin through 0.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3993|2024-06-14T06:00:04.102Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3972|2024-06-14T06:00:03.351Z -- unknown -- similarity</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3972</link>
      <description>The Similarity WordPress plugin through 3.0 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3972|2024-06-14T06:00:03.351Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5155|2024-06-14T06:00:05.267Z -- unknown -- inquiry%20cart</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5155</link>
      <description>The Inquiry cart WordPress plugin through 3.4.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5155|2024-06-14T06:00:05.267Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4005|2024-06-14T06:00:04.285Z -- unknown -- social%20pixel</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4005</link>
      <description>The Social Pixel WordPress plugin through 2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4005|2024-06-14T06:00:04.285Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3966|2024-06-14T06:00:02.940Z -- unknown -- pray%20for%20me</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3966</link>
      <description>The Pray For Me WordPress plugin through 1.0.4 does not sanitise and escape some parameters, which could unauthenticated visitors to perform Cross-Site Scripting attacks that trigger when an admin visits the Prayer Requests in the WP Admin</description>
      <guid isPermaLink="false">CVE-2024-3966|2024-06-14T06:00:02.940Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3971|2024-06-14T06:00:03.148Z -- unknown -- similarity</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3971</link>
      <description>The Similarity WordPress plugin through 3.0 does not have CSRF check in place when resetting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3971|2024-06-14T06:00:03.148Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4271|2024-06-14T06:00:04.687Z -- unknown -- svgator</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4271</link>
      <description>The SVGator  WordPress plugin through 1.2.6 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4271|2024-06-14T06:00:04.687Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4751|2024-06-14T06:00:05.079Z -- unknown -- wp%20prayer%20ii</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4751</link>
      <description>The WP Prayer II WordPress plugin through 2.4.7 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4751|2024-06-14T06:00:05.079Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3978|2024-06-14T06:00:03.710Z -- unknown -- wordpress%20jitsi%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3978</link>
      <description>The WordPress Jitsi Shortcode WordPress plugin through 0.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3978|2024-06-14T06:00:03.710Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3754|2024-06-14T06:00:02.574Z -- unknown -- alemha%20watermarker</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3754</link>
      <description>The Alemha watermarker WordPress plugin through 1.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3754|2024-06-14T06:00:02.574Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4270|2024-06-14T06:00:04.481Z -- unknown -- svgmagic</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4270</link>
      <description>The SVGMagic WordPress plugin through 1.1 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4270|2024-06-14T06:00:04.481Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3992|2024-06-14T06:00:03.910Z -- unknown -- amen</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3992</link>
      <description>The Amen WordPress plugin through 3.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3992|2024-06-14T06:00:03.910Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2762|2024-06-13T19:33:15.890Z -- unknown -- foogallery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2762</link>
      <description>The FooGallery  WordPress plugin before 2.4.15, foogallery-premium WordPress plugin before 2.4.15 does not validate and escape some of its Gallery settings before outputting them back in the page, which could allow users with a role as low as Author to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-2762|2024-06-13T19:33:15.890Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4149|2024-06-13T19:19:49.107Z -- unknown -- floating%20chat%20widget%3A%20contact%20chat%20icons%2C%20whatsapp%2C%20telegram%20chat%2C%20line%20messenger%2C%20wechat%2C%20email%2C%20sms%2C%20call%20button</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4149</link>
      <description>The Floating Chat Widget: Contact Chat Icons, WhatsApp, Telegram Chat, Line Messenger, WeChat, Email, SMS, Call Button  WordPress plugin before 3.2.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-4149|2024-06-13T19:19:49.107Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3032|2024-06-13T06:00:02.512Z -- unknown -- themify%20builder</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3032</link>
      <description>Themify Builder WordPress plugin before 7.5.8 does not validate a parameter before redirecting the user to its value, leading to an Open Redirect issue</description>
      <guid isPermaLink="false">CVE-2024-3032|2024-06-13T06:00:02.512Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3552|2024-06-13T06:00:02.709Z -- unknown -- web%20directory%20free</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3552</link>
      <description>The Web Directory Free WordPress plugin before 1.7.0 does not sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection with different techniques like UNION, Time-Based and Error-Based.</description>
      <guid isPermaLink="false">CVE-2024-3552|2024-06-13T06:00:02.709Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2762|2024-06-13T06:00:02.252Z -- unknown -- foogallery</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2762</link>
      <description>The FooGallery  WordPress plugin before 2.4.15, foogallery-premium WordPress plugin before 2.4.15 does not validate and escape some of its Gallery settings before outputting them back in the page, which could allow users with a role as low as Author to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-2762|2024-06-13T06:00:02.252Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4145|2024-06-13T06:00:02.892Z -- unknown -- search%20%26%20replace</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4145</link>
      <description>The Search &amp; Replace WordPress plugin before 3.2.2 does not sanitize and escape a parameter before using it in a SQL statement, allowing admins to perform SQL injection attacks (such as within a multi-site network).</description>
      <guid isPermaLink="false">CVE-2024-4145|2024-06-13T06:00:02.892Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4149|2024-06-13T06:00:03.095Z -- unknown -- floating%20chat%20widget%3A%20contact%20chat%20icons%2C%20whatsapp%2C%20telegram%20chat%2C%20line%20messenger%2C%20wechat%2C%20email%2C%20sms%2C%20call%20button</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4149</link>
      <description>The Floating Chat Widget: Contact Chat Icons, WhatsApp, Telegram Chat, Line Messenger, WeChat, Email, SMS, Call Button  WordPress plugin before 3.2.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-4149|2024-06-13T06:00:03.095Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0427|2024-06-12T17:43:43.893Z -- unknown -- arforms%20-%20premium%20wordpress%20form%20builder%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0427</link>
      <description>The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.4.1 does not properly escape user-controlled input when it is reflected in some of its AJAX actions.</description>
      <guid isPermaLink="false">CVE-2024-0427|2024-06-12T17:43:43.893Z</guid>
      <pubDate>Wed, 12 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4924|2024-06-12T12:21:07.876Z -- unknown -- social%20sharing%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4924</link>
      <description>The Social Sharing Plugin  WordPress plugin before 3.3.63 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4924|2024-06-12T12:21:07.876Z</guid>
      <pubDate>Wed, 12 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5971|2024-05-09T06:00:02.319Z -- unknown -- save%20as%20pdf%20plugin%20by%20pdfcrowd</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5971</link>
      <description>The Save as PDF Plugin by Pdfcrowd WordPress plugin before 3.2.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-5971|2024-05-09T06:00:02.319Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4826|2024-06-04T17:27:21.114Z -- unknown -- socialdriver</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4826</link>
      <description>The SocialDriver WordPress theme before version 2024 has a prototype pollution vulnerability that could allow an attacker to inject arbitrary properties resulting in a cross-site scripting (XSS) attack.</description>
      <guid isPermaLink="false">CVE-2023-4826|2024-06-04T17:27:21.114Z</guid>
      <pubDate>Fri, 23 Feb 2024 09:14:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7201|2024-04-15T05:00:01.572Z -- unknown -- everest%20backup</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7201</link>
      <description>The Everest Backup  WordPress plugin before 2.2.5 does not properly validate backup files to be uploaded, allowing high privilege users such as admin to upload arbitrary files on the server even when they should not be allowed to (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-7201|2024-04-15T05:00:01.572Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7165|2024-02-27T08:30:30.074Z -- unknown -- jetbackup</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7165</link>
      <description>The JetBackup WordPress plugin before 2.0.9.9 doesn't use index files to prevent public directory listing of sensitive directories in certain configurations, which allows malicious actors to leak backup files.</description>
      <guid isPermaLink="false">CVE-2023-7165|2024-02-27T08:30:30.074Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7164|2024-06-06T13:04:21.160Z -- unknown -- backwpup</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7164</link>
      <description>The BackWPup WordPress plugin before 4.0.4 does not prevent visitors from leaking key information about ongoing backups, allowing unauthenticated attackers to download backups of a site's database.</description>
      <guid isPermaLink="false">CVE-2023-7164|2024-06-06T13:04:21.160Z</guid>
      <pubDate>Mon, 08 Apr 2024 17:28:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7236|2024-06-04T17:17:28.635Z -- unknown -- backup%20bolt</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7236</link>
      <description>The Backup Bolt WordPress plugin through 1.3.0 is vulnerable to Information Exposure via the unprotected access of debug logs. This makes it possible for unauthenticated attackers to retrieve the debug log which may contain information like system errors which could contain sensitive information.</description>
      <guid isPermaLink="false">CVE-2023-7236|2024-06-04T17:17:28.635Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7246|2024-03-20T05:00:02.302Z -- unknown -- system%20dashboard</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7246</link>
      <description>The System Dashboard WordPress plugin before 2.8.10 does not sanitize and escape some parameters, which could allow administrators in multisite WordPress configurations to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-7246|2024-03-20T05:00:02.302Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7247|2024-03-11T18:08:58.602Z -- unknown -- login%20as%20user%20or%20customer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7247</link>
      <description>The Login as User or Customer WordPress plugin through 3.8 does not prevent users to log in as any other user on the site.</description>
      <guid isPermaLink="false">CVE-2023-7247|2024-03-11T18:08:58.602Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7085|2024-03-18T19:05:50.838Z -- unknown -- scalable%20vector%20graphics%20%28svg%29</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7085</link>
      <description>The Scalable Vector Graphics (SVG) WordPress plugin through 3.4 does not sanitize uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2023-7085|2024-03-18T19:05:50.838Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7115|2024-06-04T17:17:26.166Z -- unknown -- page%20builder%3A%20pagelayer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7115</link>
      <description>The Page Builder: Pagelayer WordPress plugin before 1.8.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-7115|2024-06-04T17:17:26.166Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7198|2024-02-27T08:30:27.438Z -- unknown -- wp%20dashboard%20notes</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7198</link>
      <description>The WP Dashboard Notes WordPress plugin before 1.0.11 is vulnerable to Insecure Direct Object References (IDOR) in post_id= parameter. Authenticated users are able to delete private notes associated with different user accounts. This poses a significant security risk as it violates the principle of least privilege and compromises the integrity and privacy of user data.</description>
      <guid isPermaLink="false">CVE-2023-7198|2024-02-27T08:30:27.438Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7233|2024-02-12T16:07:32.182Z -- unknown -- gigpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7233</link>
      <description>The GigPress WordPress plugin through 2.3.29 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-7233|2024-02-12T16:07:32.182Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7252|2024-06-04T17:17:24.507Z -- unknown -- tickera</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7252</link>
      <description>The Tickera  WordPress plugin before 3.5.2.5 does not prevent users from leaking other users' tickets.</description>
      <guid isPermaLink="false">CVE-2023-7252|2024-06-04T17:17:24.507Z</guid>
      <pubDate>Mon, 22 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7253|2024-04-24T05:00:01.731Z -- unknown -- import%20wp</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7253</link>
      <description>The Import WP  WordPress plugin before 2.13.1 does not prevent users with the administrator role from pinging conducting SSRF attacks, which may be a problem in multisite configurations.</description>
      <guid isPermaLink="false">CVE-2023-7253|2024-04-24T05:00:01.731Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7232|2024-03-26T05:00:02.063Z -- unknown -- backup%20and%20restore%20wordpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7232</link>
      <description>The Backup and Restore WordPress  WordPress plugin through 1.45 does not protect some log files containing sensitive information such as site configuration etc, allowing unauthenticated users to access such data</description>
      <guid isPermaLink="false">CVE-2023-7232|2024-03-26T05:00:02.063Z</guid>
      <pubDate>Tue, 26 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7203|2024-02-27T08:30:25.017Z -- unknown -- smart%20forms</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7203</link>
      <description>The Smart Forms WordPress plugin before 2.6.87 does not have authorisation in various AJAX actions, which could allow users with a role as low as subscriber to call them and perform unauthorised actions such as deleting entries. The plugin also lacks CSRF checks in some places which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as deleting entries.</description>
      <guid isPermaLink="false">CVE-2023-7203|2024-02-27T08:30:25.017Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7167|2024-02-27T08:30:24.228Z -- unknown -- persian%20fonts</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7167</link>
      <description>The Persian Fonts WordPress plugin through 1.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-7167|2024-02-27T08:30:24.228Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7202|2024-06-04T17:17:22.386Z -- unknown -- fatal%20error%20notify</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7202</link>
      <description>The Fatal Error Notify WordPress plugin before 1.5.3 does not have authorisation and CSRF checks in its test_error AJAX action, allowing any authenticated users, such as subscriber to call it and spam the admin email address with error messages. The issue is also exploitable via CSRF</description>
      <guid isPermaLink="false">CVE-2023-7202|2024-06-04T17:17:22.386Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6257|2024-06-04T17:17:20.622Z -- unknown -- inline%20related%20posts</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6257</link>
      <description>The Inline Related Posts WordPress plugin before 3.6.0 does not ensure that post content displayed via an AJAX action are accessible to the user, allowing any authenticated user, such as subscriber to retrieve the content of password protected posts</description>
      <guid isPermaLink="false">CVE-2023-6257|2024-06-04T17:17:20.622Z</guid>
      <pubDate>Thu, 11 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6294|2024-02-12T16:07:36.681Z -- unknown -- popup%20builder</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6294</link>
      <description>The Popup Builder WordPress plugin before 4.2.6 does not validate a parameter before making a request to it, which could allow users with the administrator role to perform SSRF attack in Multisite WordPress configurations.</description>
      <guid isPermaLink="false">CVE-2023-6294|2024-02-12T16:07:36.681Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:06:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6036|2024-02-12T16:07:36.124Z -- unknown -- web3</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6036</link>
      <description>The Web3 WordPress plugin before 3.0.0 is vulnerable to an authentication bypass due to incorrect authentication checking in the login flow in functions 'handle_auth_request' and 'hadle_login_request'. This makes it possible for non authenticated attackers to log in as any existing user on the site, such as an administrator, if they have access to the username.</description>
      <guid isPermaLink="false">CVE-2023-6036|2024-02-12T16:07:36.124Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:06:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6082|2024-02-12T16:07:35.568Z -- unknown -- chartjs</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6082</link>
      <description>The chartjs WordPress plugin through 2023.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-6082|2024-02-12T16:07:35.568Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:06:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6591|2024-06-04T17:17:09.838Z -- unknown -- popup%20box</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6591</link>
      <description>The Popup Box WordPress plugin before 20.9.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2023-6591|2024-06-04T17:17:09.838Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:06:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6821|2024-06-04T17:17:08.590Z -- unknown -- error%20log%20viewer%20by%20bestwebsoft</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6821</link>
      <description>The Error Log Viewer by BestWebSoft WordPress plugin before 1.1.3 contains a vulnerability that allows you to read and download PHP logs without authorization</description>
      <guid isPermaLink="false">CVE-2023-6821|2024-06-04T17:17:08.590Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6067|2024-04-15T05:00:01.200Z -- unknown -- wp%20user%20profile%20avatar</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6067</link>
      <description>The WP User Profile Avatar WordPress plugin through 1.0.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-6067|2024-04-15T05:00:01.200Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6499|2024-02-12T16:07:33.325Z -- unknown -- lastunes</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6499</link>
      <description>The lasTunes WordPress plugin through 3.6.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-6499|2024-02-12T16:07:33.325Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6584|2024-02-27T08:30:26.628Z -- unknown -- wp%20jobsearch</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6584</link>
      <description>The WP JobSearch WordPress plugin before 2.3.4 does not prevent attackers from logging-in as any users with the only knowledge of that user's email address.</description>
      <guid isPermaLink="false">CVE-2023-6584|2024-02-27T08:30:26.628Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6585|2024-02-27T08:30:25.818Z -- unknown -- wp%20jobsearch</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6585</link>
      <description>The WP JobSearch WordPress plugin before 2.3.4 does not validate files to be uploaded, which could allow unauthenticated attackers to upload arbitrary files such as PHP on the server</description>
      <guid isPermaLink="false">CVE-2023-6585|2024-02-27T08:30:25.818Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6081|2024-02-12T16:07:30.513Z -- unknown -- chartjs</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6081</link>
      <description>The chartjs WordPress plugin through 2023.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-6081|2024-02-12T16:07:30.513Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:07:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6501|2024-06-04T17:16:53.985Z -- unknown -- splashscreen</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6501</link>
      <description>The Splashscreen WordPress plugin through 0.20 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-6501|2024-06-04T17:16:53.985Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6444|2024-03-11T18:08:55.792Z -- unknown -- seriously%20simple%20podcasting</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6444</link>
      <description>The Seriously Simple Podcasting WordPress plugin before 3.0.0 discloses the Podcast owner's email address (which by default is the admin email address) via an unauthenticated crafted request.</description>
      <guid isPermaLink="false">CVE-2023-6444|2024-03-11T18:08:55.792Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6385|2024-04-10T05:00:02.214Z -- unknown -- wordpress%20ping%20optimizer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6385</link>
      <description>The WordPress Ping Optimizer WordPress plugin through 2.35.1.3.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as clearing logs.</description>
      <guid isPermaLink="false">CVE-2023-6385|2024-04-10T05:00:02.214Z</guid>
      <pubDate>Wed, 10 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5341|2024-06-05T17:54:31.073Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-5341</link>
      <description>The The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'size' attribute of the Heading Title widget in all versions up to, and including, 5.5.4 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2024-5341|2024-06-05T17:54:31.073Z</guid>
      <pubDate>Thu, 30 May 2024 05:33:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5003|2024-06-07T12:22:30.164Z -- unknown -- wp%20stacker</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-5003</link>
      <description>The WP Stacker WordPress plugin through 1.8.5 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5003|2024-06-07T12:22:30.164Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1307|2024-04-15T05:00:03.590Z -- unknown -- smart%20forms</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1307</link>
      <description>The Smart Forms  WordPress plugin before 2.6.94 does not have proper authorization in some actions, which could allow users with a role as low as a subscriber to call them and perform unauthorized actions</description>
      <guid isPermaLink="false">CVE-2024-1307|2024-04-15T05:00:03.590Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1983|2024-03-20T05:00:02.910Z -- unknown -- simple%20ajax%20chat</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1983</link>
      <description>The Simple Ajax Chat  WordPress plugin before 20240223 does not prevent visitors from using malicious Names when using the chat, which will be reflected unsanitized to other users.</description>
      <guid isPermaLink="false">CVE-2024-1983|2024-03-20T05:00:02.910Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1487|2024-06-04T18:01:35.257Z -- unknown -- photos%20and%20files%20contest%20gallery</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1487</link>
      <description>The Photos and Files Contest Gallery WordPress plugin before 21.3.1 does not sanitize and escape some parameters, which could allow users with a role as low as author to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-1487|2024-06-04T18:01:35.257Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1106|2024-06-04T18:01:33.183Z -- unknown -- shariff%20wrapper</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1106</link>
      <description>The Shariff Wrapper WordPress plugin before 4.6.10 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1106|2024-06-04T18:01:33.183Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1956|2024-04-08T17:28:15.741Z -- unknown -- wpb-show-core</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1956</link>
      <description>The wpb-show-core WordPress plugin before 2.7 does not sanitise and escape the parameters before outputting it back in the response of an unauthenticated request, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-1956|2024-04-08T17:28:15.741Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1219|2024-06-04T18:01:26.014Z -- unknown -- easy%20social%20feed</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1219</link>
      <description>The Easy Social Feed  WordPress plugin before 6.5.6 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-1219|2024-06-04T18:01:26.014Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1274|2024-04-02T05:15:41.805Z -- unknown -- my%20calendar</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1274</link>
      <description>The My Calendar WordPress plugin before 3.4.24 does not sanitise and escape some parameters, which could allow users with a role as low as Subscriber to perform Cross-Site Scripting attacks (depending on the permissions set by the admin)</description>
      <guid isPermaLink="false">CVE-2024-1274|2024-04-02T05:15:41.805Z</guid>
      <pubDate>Tue, 02 Apr 2024 05:15:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1331|2024-03-18T19:05:54.788Z -- unknown -- team%20members</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1331</link>
      <description>The Team Members WordPress plugin before 5.3.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the author role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-1331|2024-03-18T19:05:54.788Z</guid>
      <pubDate>Mon, 18 Mar 2024 15:15:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1664|2024-06-04T18:01:17.933Z -- unknown -- responsive%20gallery%20grid</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1664</link>
      <description>The Responsive Gallery Grid WordPress plugin before 2.3.11 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1664|2024-06-04T18:01:17.933Z</guid>
      <pubDate>Tue, 09 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1849|2024-04-15T05:00:05.321Z -- unknown -- wp%20customer%20reviews</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1849</link>
      <description>The WP Customer Reviews WordPress plugin before 3.7.1 does not validate a parameter allowing contributor and above users to redirect a page to a malicious URL</description>
      <guid isPermaLink="false">CVE-2024-1849|2024-04-15T05:00:05.321Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1279|2024-06-11T17:13:10.453Z -- unknown -- paid%20memberships%20pro</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1279</link>
      <description>The Paid Memberships Pro WordPress plugin before 2.12.9 does not prevent user with at least the contributor role from leaking other users' sensitive metadata.</description>
      <guid isPermaLink="false">CVE-2024-1279|2024-06-11T17:13:10.453Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1310|2024-04-15T05:00:03.811Z -- unknown -- woocommerce</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1310</link>
      <description>The WooCommerce WordPress plugin before 8.6 does not prevent users with at least the contributor role from leaking products they shouldn't have access to. (e.g. private, draft and trashed products)</description>
      <guid isPermaLink="false">CVE-2024-1310|2024-04-15T05:00:03.811Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1756|2024-06-04T18:01:02.580Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1756</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 29.8 does not have authorisation and CSRF in an AJAX action, allowing any authenticated users, such as subscriber, to call it and retrieve the list of customer email addresses along with their id, first name and last name</description>
      <guid isPermaLink="false">CVE-2024-1756|2024-06-04T18:01:02.580Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1306|2024-04-15T05:00:03.284Z -- unknown -- smart%20forms</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1306</link>
      <description>The Smart Forms  WordPress plugin before 2.6.94 does not have CSRF checks in some places, which could allow attackers to make logged-in users perform unwanted actions via CSRF attacks, such as editing entries, and we consider it a medium risk.</description>
      <guid isPermaLink="false">CVE-2024-1306|2024-04-15T05:00:03.284Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1589|2024-06-04T18:01:01.145Z -- unknown -- sendpress%20newsletters</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1589</link>
      <description>The SendPress Newsletters WordPress plugin through 1.23.11.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1589|2024-06-04T18:01:01.145Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1290|2024-03-11T18:08:58.060Z -- unknown -- user%20registration</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1290</link>
      <description>The User Registration WordPress plugin before 2.12 does not prevent users with at least the contributor role from rendering sensitive shortcodes, allowing them to generate, and leak, valid password reset URLs, which they can use to take over any accounts.</description>
      <guid isPermaLink="false">CVE-2024-1290|2024-03-11T18:08:58.060Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1316|2024-03-04T21:00:09.876Z -- unknown -- event%20tickets%20and%20registration</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1316</link>
      <description>The Event Tickets and Registration WordPress plugin before 5.8.1, Events Tickets Plus WordPress plugin before 5.9.1 does not prevent users with at least the contributor role from leaking the existence of certain events they shouldn't have access to. (e.g. draft, private, pending review, pw-protected, and trashed events).</description>
      <guid isPermaLink="false">CVE-2024-1316|2024-03-04T21:00:09.876Z</guid>
      <pubDate>Mon, 04 Mar 2024 21:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1746|2024-06-04T18:00:39.219Z -- unknown -- testimonial%20slider</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1746</link>
      <description>The Testimonial Slider WordPress plugin before 2.3.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1746|2024-06-04T18:00:39.219Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1204|2024-04-15T05:00:02.873Z -- unknown -- meta%20box</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1204</link>
      <description>The Meta Box  WordPress plugin before 5.9.4 does not prevent users with at least the contributor role from access arbitrary custom fields assigned to other user's posts.</description>
      <guid isPermaLink="false">CVE-2024-1204|2024-04-15T05:00:02.873Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1068|2024-03-11T18:08:57.515Z -- unknown -- 404%20solution</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1068</link>
      <description>The 404 Solution WordPress plugin before 2.35.8 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2024-1068|2024-03-11T18:08:57.515Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1232|2024-03-25T05:00:01.133Z -- unknown -- cm%20download%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1232</link>
      <description>The CM Download Manager  WordPress plugin before 2.9.0 does not have CSRF checks in some places, which could allow attackers to make logged in admins delete downloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-1232|2024-03-25T05:00:01.133Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1273|2024-03-11T18:08:56.961Z -- unknown -- starbox</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1273</link>
      <description>The Starbox WordPress plugin before 3.5.0 does not sanitise and escape some parameters, which could allow users with a role as low as Contributor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1273|2024-03-11T18:08:56.961Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1526|2024-06-04T18:00:32.482Z -- unknown -- hubbub%20lite</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1526</link>
      <description>The Hubbub Lite  WordPress plugin before 1.33.1 does not ensure that user have access to password protected post before displaying its content in a meta tag.</description>
      <guid isPermaLink="false">CVE-2024-1526|2024-06-04T18:00:32.482Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1658|2024-06-07T19:25:05.750Z -- unknown -- grid%20shortcodes</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1658</link>
      <description>The Grid Shortcodes WordPress plugin before 1.1.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1658|2024-06-07T19:25:05.750Z</guid>
      <pubDate>Mon, 18 Mar 2024 15:15:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1588|2024-06-04T18:00:29.871Z -- unknown -- sendpress%20newsletters</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1588</link>
      <description>The SendPress Newsletters WordPress plugin through 1.23.11.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1588|2024-06-04T18:00:29.871Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1231|2024-03-25T05:00:00.845Z -- unknown -- cm%20download%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1231</link>
      <description>The CM Download Manager  WordPress plugin before 2.9.0 does not have CSRF checks in some places, which could allow attackers to make logged in admins unpublish downloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-1231|2024-03-25T05:00:00.845Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1319|2024-06-04T18:00:24.531Z -- unknown -- events%20tickets%20plus</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1319</link>
      <description>The Events Tickets Plus WordPress plugin before 5.9.1 does not prevent users with at least the contributor role from leaking the attendees list on any post type regardless of status. (e.g. draft, private, pending review, password-protected, and trashed posts).</description>
      <guid isPermaLink="false">CVE-2024-1319|2024-06-04T18:00:24.531Z</guid>
      <pubDate>Mon, 04 Mar 2024 21:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1564|2024-03-25T05:00:01.620Z -- unknown -- wp-schema-pro</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1564</link>
      <description>The wp-schema-pro WordPress plugin before 2.7.16 does not validate post access allowing a contributor user to access custom fields on any post regardless of post type or status via a shortcode</description>
      <guid isPermaLink="false">CVE-2024-1564|2024-03-25T05:00:01.620Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1401|2024-03-19T14:28:21.065Z -- unknown -- profile%20box%20shortcode%20and%20widget</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1401</link>
      <description>The Profile Box Shortcode And Widget WordPress plugin before 1.2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1401|2024-03-19T14:28:21.065Z</guid>
      <pubDate>Tue, 19 Mar 2024 14:28:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1905|2024-06-04T18:00:18.574Z -- unknown -- smart%20forms</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1905</link>
      <description>The Smart Forms  WordPress plugin before 2.6.96 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1905|2024-06-04T18:00:18.574Z</guid>
      <pubDate>Mon, 29 Apr 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1745|2024-03-26T05:00:02.299Z -- unknown -- testimonial%20slider</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1745</link>
      <description>The Testimonial Slider WordPress plugin before 2.3.7 does not properly ensure that a user has the necessary capabilities to edit certain sensitive Testimonial Slider WordPress plugin before 2.3.7 settings, making it possible for users with at least the Author role to edit them.</description>
      <guid isPermaLink="false">CVE-2024-1745|2024-03-26T05:00:02.299Z</guid>
      <pubDate>Tue, 26 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1712|2024-06-04T18:00:13.408Z -- unknown -- carousel%20slider</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1712</link>
      <description>The Carousel Slider WordPress plugin before 2.2.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1712|2024-06-04T18:00:13.408Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1752|2024-04-08T17:28:09.077Z -- unknown -- font%20farsi</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1752</link>
      <description>The Font Farsi WordPress plugin through 1.6.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1752|2024-04-08T17:28:09.077Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1292|2024-06-04T18:00:01.682Z -- unknown -- wpb-show-core</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1292</link>
      <description>The WPB Show Core WordPress plugin before 2.7 does not sanitise and escape some parameters before outputting them back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-1292|2024-06-04T18:00:01.682Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1660|2024-04-15T05:00:04.066Z -- unknown -- top%20bar</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1660</link>
      <description>The Top Bar WordPress plugin before 3.0.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1660|2024-04-15T05:00:04.066Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1846|2024-06-06T18:28:03.533Z -- unknown -- responsive%20tabs</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1846</link>
      <description>The Responsive Tabs WordPress plugin before 4.0.7 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1846|2024-06-06T18:28:03.533Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1743|2024-06-04T17:59:47.689Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1743</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 29.8 does not sanitise and escape various parameters before outputting them back in pages and attributes, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-1743|2024-06-04T17:59:47.689Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1755|2024-04-15T05:00:04.951Z -- unknown -- nps%20computy</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1755</link>
      <description>The NPS computy WordPress plugin through 2.7.5 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-1755|2024-04-15T05:00:04.951Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1958|2024-06-04T17:59:44.770Z -- unknown -- wpb-show-core</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1958</link>
      <description>The WPB Show Core WordPress plugin before 2.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin or unauthenticated users</description>
      <guid isPermaLink="false">CVE-2024-1958|2024-06-04T17:59:44.770Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1333|2024-03-18T19:05:45.251Z -- unknown -- responsive%20pricing%20table</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1333</link>
      <description>The Responsive Pricing Table WordPress plugin before 5.1.11 does not validate and escape some of its Pricing Table options before outputting them back in a page/post where the related shortcode is embed, which could allow users with the author role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1333|2024-03-18T19:05:45.251Z</guid>
      <pubDate>Mon, 18 Mar 2024 15:15:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1962|2024-03-25T05:00:02.022Z -- unknown -- cm%20download%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1962</link>
      <description>The CM Download Manager  WordPress plugin before 2.9.1 does not have CSRF checks in some places, which could allow attackers to make logged in admins edit downloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-1962|2024-03-25T05:00:02.022Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1076|2024-05-08T06:00:02.175Z -- unknown -- ssl%20zen</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1076</link>
      <description>The SSL Zen  WordPress plugin before 4.6.0 only relies on the use of .htaccess to prevent visitors from accessing the site's generated private keys, which allows an attacker to read them if the site runs on a server who doesn't support .htaccess files, like NGINX.</description>
      <guid isPermaLink="false">CVE-2024-1076|2024-05-08T06:00:02.175Z</guid>
      <pubDate>Wed, 08 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1754|2024-06-04T17:59:31.606Z -- unknown -- nps%20computy</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1754</link>
      <description>The NPS computy WordPress plugin through 2.7.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1754|2024-06-04T17:59:31.606Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0756|2024-06-05T13:54:08.704Z -- unknown -- insert%20or%20embed%20articulate%20content%20into%20wordpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0756</link>
      <description>The Insert or Embed Articulate Content into WordPress plugin through 4.3000000023 lacks validation of URLs when adding iframes, allowing attackers to inject an iFrame in the page and thus load arbitrary content from any page.</description>
      <guid isPermaLink="false">CVE-2024-0756|2024-06-05T13:54:08.704Z</guid>
      <pubDate>Tue, 04 Jun 2024 14:28:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0672|2024-03-28T05:00:01.874Z -- unknown -- pz-linkcard</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0672</link>
      <description>The Pz-LinkCard WordPress plugin through 2.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-0672|2024-03-28T05:00:01.874Z</guid>
      <pubDate>Thu, 28 Mar 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0561|2024-06-04T17:59:12.071Z -- unknown -- ultimate%20posts%20widget</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0561</link>
      <description>The Ultimate Posts Widget WordPress plugin before 2.3.1 does not validate and escape some of its Widget options before outputting them back in attributes, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0561|2024-06-04T17:59:12.071Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0673|2024-03-28T05:00:02.093Z -- unknown -- pz-linkcard</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0673</link>
      <description>The Pz-LinkCard WordPress plugin through 2.5.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-0673|2024-03-28T05:00:02.093Z</guid>
      <pubDate>Thu, 28 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0868|2024-04-17T05:00:02.186Z -- unknown -- coreactivity%3A%20activity%20logging%20plugin%20for%20wordpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0868</link>
      <description>The coreActivity: Activity Logging plugin for WordPress plugin before 2.1 retrieved IP addresses of requests via headers such X-FORWARDED to log them, allowing users to spoof them by providing an arbitrary value</description>
      <guid isPermaLink="false">CVE-2024-0868|2024-04-17T05:00:02.186Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0757|2024-06-04T17:59:08.420Z -- unknown -- insert%20or%20embed%20articulate%20content%20into%20wordpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0757</link>
      <description>The Insert or Embed Articulate Content into WordPress plugin through 4.3000000023 is not properly filtering which file extensions are allowed to be imported on the server, allowing the uploading of malicious code within zip files</description>
      <guid isPermaLink="false">CVE-2024-0757|2024-06-04T17:59:08.420Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0951|2024-06-04T17:58:59.888Z -- unknown -- advanced%20social%20feeds%20widget%20%26%20shortcode</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0951</link>
      <description>The Advanced Social Feeds Widget &amp; Shortcode WordPress plugin through 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0951|2024-06-04T17:58:59.888Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0855|2024-02-27T08:30:29.193Z -- unknown -- spiffy%20calendar</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0855</link>
      <description>The Spiffy Calendar WordPress plugin before 4.9.9 doesn't check the event_author parameter, and allows any user to alter it when creating an event, leading to deceiving users/admins that a page was created by a Contributor+.</description>
      <guid isPermaLink="false">CVE-2024-0855|2024-02-27T08:30:29.193Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0711|2024-06-04T17:58:58.584Z -- unknown -- buttons%20shortcode%20and%20widget</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0711</link>
      <description>The Buttons Shortcode and Widget WordPress plugin through 1.16 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-0711|2024-06-04T17:58:58.584Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0881|2024-06-04T17:58:54.930Z -- unknown -- post%20grid%2C%20form%20maker%2C%20popup%20maker%2C%20woocommerce%20blocks%2C%20post%20blocks%2C%20post%20carousel</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0881</link>
      <description>The Post Grid, Form Maker, Popup Maker, WooCommerce Blocks, Post Blocks, Post Carousel  WordPress plugin before 2.2.76 does not prevent password protected posts from being displayed in the result of some unauthenticated AJAX actions, allowing unauthenticated users to read such posts</description>
      <guid isPermaLink="false">CVE-2024-0881|2024-06-04T17:58:54.930Z</guid>
      <pubDate>Thu, 11 Apr 2024 15:36:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0566|2024-02-12T16:07:34.465Z -- unknown -- smart%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0566</link>
      <description>The Smart Manager WordPress plugin before 8.28.0 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2024-0566|2024-02-12T16:07:34.465Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0248|2024-02-12T16:07:33.907Z -- unknown -- eazydocs</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0248</link>
      <description>The EazyDocs WordPress plugin before 2.4.0 re-introduced CVE-2023-6029 (https://wpscan.com/vulnerability/7a0aaf85-8130-4fd7-8f09-f8edc929597e/) in 2.3.8, allowing any authenticated users, such as subscriber to delete arbitrary posts, as well as add and delete documents/sections. The issue was partially fixed in 2.3.9.</description>
      <guid isPermaLink="false">CVE-2024-0248|2024-02-12T16:07:33.907Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0337|2024-03-20T05:00:02.494Z -- unknown -- travelpayouts%3A%20all%20travel%20brands%20in%20one%20place</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0337</link>
      <description>The Travelpayouts: All Travel Brands in One Place WordPress plugin through 1.1.15 is vulnerable to Open Redirect due to insufficient validation on the travelpayouts_redirect variable. This makes it possible for unauthenticated attackers to redirect users to potentially malicious sites if they can successfully trick them into performing an action.</description>
      <guid isPermaLink="false">CVE-2024-0337|2024-03-20T05:00:02.494Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0858|2024-03-18T19:05:49.195Z -- unknown -- innovs%20hr</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0858</link>
      <description>The Innovs HR WordPress plugin through 1.0.3.4 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as adding them as employees.</description>
      <guid isPermaLink="false">CVE-2024-0858|2024-03-18T19:05:49.195Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0399|2024-04-15T05:00:01.875Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0399</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 29.7 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to an SQL injection exploitable by Subscriber+ role.</description>
      <guid isPermaLink="false">CVE-2024-0399|2024-04-15T05:00:01.875Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0973|2024-03-18T19:05:46.858Z -- unknown -- widget%20for%20social%20page%20feeds</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0973</link>
      <description>The Widget for Social Page Feeds WordPress plugin before 6.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0973|2024-03-18T19:05:46.858Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0420|2024-06-04T17:58:48.789Z -- unknown -- mappress%20maps%20for%20wordpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0420</link>
      <description>The MapPress Maps for WordPress plugin before 2.88.15 does not sanitize and escape the map title when outputting it back in the admin dashboard, allowing Contributors and above roles to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-0420|2024-06-04T17:58:48.789Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0820|2024-06-04T17:58:47.931Z -- unknown -- jobs%20for%20wordpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0820</link>
      <description>The Jobs for WordPress plugin before 2.7.4 does not sanitise and escape some parameters, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-0820|2024-06-04T17:58:47.931Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0904|2024-06-04T17:58:42.927Z -- unknown -- fancy%20product%20designer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0904</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.81 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0904|2024-06-04T17:58:42.927Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0905|2024-04-26T05:00:01.958Z -- unknown -- fancy%20product%20designer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0905</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.8 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against unauthenticated and admin-level users</description>
      <guid isPermaLink="false">CVE-2024-0905|2024-04-26T05:00:01.958Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0856|2024-03-20T05:00:02.675Z -- unknown -- appointment%20booking%20calendar</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0856</link>
      <description>The Appointment Booking Calendar WordPress plugin before 1.3.83 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as adding a booking to the calendar without paying.</description>
      <guid isPermaLink="false">CVE-2024-0856|2024-03-20T05:00:02.675Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0250|2024-06-04T17:58:38.063Z -- unknown -- analytics%20insights%20for%20google%20analytics%204%20%28aiwp%29</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0250</link>
      <description>The Analytics Insights for Google Analytics 4 (AIWP) WordPress plugin before 6.3 is vulnerable to Open Redirect due to insufficient validation on the redirect oauth2callback.php file. This makes it possible for unauthenticated attackers to redirect users to potentially malicious sites if they can successfully trick them into performing an action.</description>
      <guid isPermaLink="false">CVE-2024-0250|2024-06-04T17:58:38.063Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0677|2024-06-04T17:58:37.182Z -- unknown -- pz-linkcard</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0677</link>
      <description>The Pz-LinkCard WordPress plugin through 2.5.1 does not prevent users from pinging arbitrary hosts via some of its shortcodes, which could allow high privilege users such as contributors to perform SSRF attacks.</description>
      <guid isPermaLink="false">CVE-2024-0677|2024-06-04T17:58:37.182Z</guid>
      <pubDate>Thu, 28 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0421|2024-02-12T16:07:31.072Z -- unknown -- mappress%20maps%20for%20wordpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0421</link>
      <description>The MapPress Maps for WordPress plugin before 2.88.16 does not ensure that posts to be retrieve via an AJAX action is a public map, allowing unauthenticated users to read arbitrary private and draft posts.</description>
      <guid isPermaLink="false">CVE-2024-0421|2024-02-12T16:07:31.072Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0902|2024-06-04T17:58:29.201Z -- unknown -- fancy%20product%20designer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0902</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.81 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0902|2024-06-04T17:58:29.201Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0719|2024-03-18T19:05:43.770Z -- unknown -- tabs%20shortcode%20and%20widget</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0719</link>
      <description>The Tabs Shortcode and Widget WordPress plugin through 1.17 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-0719|2024-03-18T19:05:43.770Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0365|2024-03-18T19:05:42.966Z -- unknown -- fancy%20product%20designer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0365</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.5 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by adminstrators.</description>
      <guid isPermaLink="false">CVE-2024-0365|2024-03-18T19:05:42.966Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0559|2024-03-11T18:08:56.401Z -- unknown -- enhanced%20text%20widget</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0559</link>
      <description>The Enhanced Text Widget WordPress plugin before 1.6.6 does not validate and escape some of its Widget options before outputting them back in attributes, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0559|2024-03-11T18:08:56.401Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0779|2024-03-18T19:05:42.163Z -- unknown -- enjoy%20social%20feed%20plugin%20for%20wordpress%20website</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0779</link>
      <description>The Enjoy Social Feed plugin for WordPress website WordPress plugin through 6.2.2 does not have authorisation and CSRF in various function hooked to admin_init, allowing unauthenticated users to call them and unlink arbitrary users Instagram Account for example</description>
      <guid isPermaLink="false">CVE-2024-0779|2024-03-18T19:05:42.163Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0780|2024-03-18T19:05:41.368Z -- unknown -- enjoy%20social%20feed%20plugin%20for%20wordpress%20website</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0780</link>
      <description>The Enjoy Social Feed plugin for WordPress website WordPress plugin through 6.2.2 does not have authorisation when resetting its database, allowing any authenticated users, such as subscriber to perform such action</description>
      <guid isPermaLink="false">CVE-2024-0780|2024-03-18T19:05:41.368Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4534|2024-05-27T06:00:02.758Z -- unknown -- kkprogressbar2%20free</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4534</link>
      <description>The KKProgressbar2 Free  WordPress plugin through 1.1.4.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4534|2024-05-27T06:00:02.758Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4061|2024-06-04T17:56:11.258Z -- unknown -- survey%20maker</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4061</link>
      <description>The Survey Maker  WordPress plugin before 4.2.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4061|2024-06-04T17:56:11.258Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4535|2024-06-04T17:56:07.427Z -- unknown -- kkprogressbar2%20free</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4535</link>
      <description>The KKProgressbar2 Free  WordPress plugin through 1.1.4.2 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4535|2024-06-04T17:56:07.427Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4372|2024-06-04T17:56:06.564Z -- unknown -- carousel%20slider</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4372</link>
      <description>The Carousel Slider WordPress plugin before 2.2.11 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4372|2024-06-04T17:56:06.564Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4057|2024-06-04T17:55:54.055Z -- unknown -- gutenberg%20blocks%20with%20ai%20by%20kadence%20wp</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4057</link>
      <description>The Gutenberg Blocks with AI by Kadence WP  WordPress plugin before 3.2.37 does not validate and escape some of its block attributes before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4057|2024-06-04T17:55:54.055Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4621|2024-06-07T15:56:04.456Z -- unknown -- arforms%20-%20premium%20wordpress%20form%20builder%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4621</link>
      <description>The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4621|2024-06-07T15:56:04.456Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4532|2024-05-27T06:00:02.290Z -- unknown -- business%20card</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4532</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as deleting cards via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4532|2024-05-27T06:00:02.290Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4857|2024-06-04T17:55:30.703Z -- unknown -- fs%20product%20inquiry</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4857</link>
      <description>The FS Product Inquiry WordPress plugin through 1.1.1 does not sanitise and escape some form submissions, which could allow unauthenticated users to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4857|2024-06-04T17:55:30.703Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4529|2024-06-06T18:11:18.132Z -- unknown -- business%20card</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4529</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as deleting card categories via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4529|2024-06-06T18:11:18.132Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4180|2024-06-04T17:55:12.437Z -- unknown -- the%20events%20calendar</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4180</link>
      <description>The Events Calendar WordPress plugin before 6.4.0.1 does not properly sanitize user-submitted content when rendering some views via AJAX.</description>
      <guid isPermaLink="false">CVE-2024-4180|2024-06-04T17:55:12.437Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4856|2024-06-04T17:55:07.188Z -- unknown -- fs%20product%20inquiry</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4856</link>
      <description>The FS Product Inquiry WordPress plugin through 1.1.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin or unauthenticated users</description>
      <guid isPermaLink="false">CVE-2024-4856|2024-06-04T17:55:07.188Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4749|2024-06-04T20:09:20.526Z -- unknown -- wp-emember</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4749</link>
      <description>The wp-eMember WordPress plugin before 10.3.9 does not sanitize and escape the "fieldId" parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2024-4749|2024-06-04T20:09:20.526Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4533|2024-06-04T17:54:56.805Z -- unknown -- kkprogressbar2%20free</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4533</link>
      <description>The KKProgressbar2 Free  WordPress plugin through 1.1.4.2 does not sanitize and escape a parameter before using it in a SQL statement, allowing admin users to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2024-4533|2024-06-04T17:54:56.805Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4289|2024-06-04T17:54:54.276Z -- unknown -- sailthru%20triggermail</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4289</link>
      <description>The Sailthru Triggermail WordPress plugin through 1.1 does not sanitise and escape various parameters before outputting them back in pages and attributes, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-4289|2024-06-04T17:54:54.276Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4620|2024-06-07T06:00:02.468Z -- unknown -- arforms%20-%20premium%20wordpress%20form%20builder%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4620</link>
      <description>The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.6 allows unauthenticated users to modify uploaded files in such a way that PHP code can be uploaded when an upload file input is included on a form</description>
      <guid isPermaLink="false">CVE-2024-4620|2024-06-07T06:00:02.468Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4530|2024-06-04T17:54:42.006Z -- unknown -- business%20card</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4530</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as editing card categories via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4530|2024-06-04T17:54:42.006Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4750|2024-06-04T17:54:29.998Z -- unknown -- buddyboss-platform</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4750</link>
      <description>The buddyboss-platform WordPress plugin before 2.6.0 contains an IDOR vulnerability that allows a user to like a private post by manipulating the ID included in the request</description>
      <guid isPermaLink="false">CVE-2024-4750|2024-06-04T17:54:29.998Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4290|2024-05-21T06:00:02.415Z -- unknown -- sailthru%20triggermail</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4290</link>
      <description>The Sailthru Triggermail WordPress plugin through 1.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4290|2024-05-21T06:00:02.415Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4399|2024-06-04T17:54:02.934Z -- unknown -- cas</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4399</link>
      <description>The  does not validate a parameter before making a request to it, which could allow unauthenticated users to perform SSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4399|2024-06-04T17:54:02.934Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4531|2024-06-04T17:54:02.001Z -- unknown -- business%20card</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4531</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as editing cards via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4531|2024-06-04T17:54:02.001Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4469|2024-06-04T17:53:54.768Z -- unknown -- wp%20staging%20wordpress%20backup%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4469</link>
      <description>The WP STAGING WordPress Backup Plugin  WordPress plugin before 3.5.0 does not prevent users with the administrator role from pinging conducting SSRF attacks, which may be a problem in multisite configurations.</description>
      <guid isPermaLink="false">CVE-2024-4469|2024-06-04T17:53:54.768Z</guid>
      <pubDate>Fri, 31 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4886|2024-06-05T13:11:03.623Z -- unknown -- buddyboss-platform</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4886</link>
      <description>The  contains an IDOR vulnerability that allows a user to comment on a private post by manipulating the ID included in the request</description>
      <guid isPermaLink="false">CVE-2024-4886|2024-06-05T13:11:03.623Z</guid>
      <pubDate>Wed, 05 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4756|2024-06-07T06:00:02.839Z -- unknown -- wp%20backpack</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4756</link>
      <description>The WP Backpack WordPress plugin through 2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4756|2024-06-07T06:00:02.839Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4388|2024-06-04T17:53:30.571Z -- unknown -- cas</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4388</link>
      <description>This  does not validate a path generated with user input when downloading files, allowing unauthenticated user to download arbitrary files from the server</description>
      <guid isPermaLink="false">CVE-2024-4388|2024-06-04T17:53:30.571Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3642|2024-06-04T17:33:18.940Z -- unknown -- newsletter%20popup</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3642</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not have CSRF check when deleting subscriber, which could allow attackers to make logged in admins perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3642|2024-06-04T17:33:18.940Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3048|2024-06-04T17:33:13.531Z -- unknown -- bannerlid</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3048</link>
      <description>The Bannerlid WordPress plugin through 1.1.0 does not escape generated URLs before outputting them in attributes, leading to Reflected Cross-Site Scripting which could be used against high privilege users such as administrators</description>
      <guid isPermaLink="false">CVE-2024-3048|2024-06-04T17:33:13.531Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3265|2024-06-04T17:33:12.146Z -- unknown -- advanced%20search</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3265</link>
      <description>The Advanced Search WordPress plugin through 1.1.6 does not properly escape parameters appended to an SQL query, making it possible for users with the administrator role to conduct SQL Injection attacks in the context of a multisite WordPress configurations.</description>
      <guid isPermaLink="false">CVE-2024-3265|2024-06-04T17:33:12.146Z</guid>
      <pubDate>Thu, 25 Apr 2024 21:25:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3475|2024-06-04T17:33:10.876Z -- unknown -- sticky%20buttons</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3475</link>
      <description>The Sticky Buttons  WordPress plugin before 3.2.4 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting buttons via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3475|2024-06-04T17:33:10.876Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3822|2024-06-04T17:33:07.400Z -- unknown -- base64%20encoder%2Fdecoder</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3822</link>
      <description>The Base64 Encoder/Decoder WordPress plugin through 0.9.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3822|2024-06-04T17:33:07.400Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3823|2024-06-04T17:33:05.706Z -- unknown -- base64%20encoder%2Fdecoder</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3823</link>
      <description>The Base64 Encoder/Decoder WordPress plugin through 0.9.2 does not have CSRF check when updating its settings, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3823|2024-06-04T17:33:05.706Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3474|2024-06-04T17:33:02.444Z -- unknown -- wow%20skype%20buttons</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3474</link>
      <description>The Wow Skype Buttons WordPress plugin before 4.0.4 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting buttons via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3474|2024-06-04T17:33:02.444Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3634|2024-06-04T17:33:00.780Z -- unknown -- month%20name%20translation%20benaceur</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3634</link>
      <description>The month name translation benaceur WordPress plugin before 2.3.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3634|2024-06-04T17:33:00.780Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3481|2024-06-04T17:32:56.648Z -- unknown -- counter%20box</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3481</link>
      <description>The Counter Box  WordPress plugin before 1.2.4 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such deleting counters via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3481|2024-06-04T17:32:56.648Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3478|2024-06-04T17:32:55.802Z -- unknown -- herd%20effects</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3478</link>
      <description>The Herd Effects  WordPress plugin before 5.2.7 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting effects via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3478|2024-06-04T17:32:55.802Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3643|2024-05-16T06:00:02.799Z -- unknown -- newsletter%20popup</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3643</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not have CSRF check when deleting list, which could allow attackers to make logged in admins perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3643|2024-05-16T06:00:02.799Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3058|2024-06-04T17:32:46.776Z -- unknown -- enl%20newsletter</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3058</link>
      <description>The ENL Newsletter WordPress plugin through 1.0.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3058|2024-06-04T17:32:46.776Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3920|2024-05-23T06:00:03.279Z -- unknown -- flattr</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3920</link>
      <description>The Flattr WordPress plugin through 1.2.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3920|2024-05-23T06:00:03.279Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3824|2024-06-04T17:32:42.115Z -- unknown -- base64%20encoder%2Fdecoder</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3824</link>
      <description>The Base64 Encoder/Decoder WordPress plugin through 0.9.2 does not have CSRF check in place when resetting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3824|2024-06-04T17:32:42.115Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3629|2024-06-04T17:32:40.905Z -- unknown -- hl%20twitter</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3629</link>
      <description>The HL Twitter WordPress plugin through 2014.1.18 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3629|2024-06-04T17:32:40.905Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3941|2024-06-04T17:32:38.843Z -- unknown -- recaptcha%20jetpack</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3941</link>
      <description>The reCAPTCHA Jetpack WordPress plugin through 0.2.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged-in admin add Stored XSS payloads via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2024-3941|2024-06-04T17:32:38.843Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3582|2024-05-09T06:00:02.529Z -- unknown -- ungallery</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3582</link>
      <description>The UnGallery WordPress plugin through 2.2.4 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3582|2024-05-09T06:00:02.529Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3644|2024-06-04T17:32:34.623Z -- unknown -- newsletter%20popup</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3644</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3644|2024-06-04T17:32:34.623Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3756|2024-05-06T06:00:02.125Z -- unknown -- mf%20gig%20calendar</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3756</link>
      <description>The MF Gig Calendar WordPress plugin through 1.2.1 does not have CSRF checks in some places, which could allow attackers to make logged in Contributors and above delete arbitrary events via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3756|2024-05-06T06:00:02.125Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3594|2024-06-04T17:32:31.728Z -- unknown -- idonate</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3594</link>
      <description>The IDonate  WordPress plugin through 1.9.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3594|2024-06-04T17:32:31.728Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3239|2024-06-04T17:32:22.790Z -- unknown -- post%20grid%20gutenberg%20blocks%20and%20wordpress%20blog%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3239</link>
      <description>The Post Grid Gutenberg Blocks and WordPress Blog Plugin  WordPress plugin before 4.0.2 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3239|2024-06-04T17:32:22.790Z</guid>
      <pubDate>Mon, 13 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3405|2024-06-04T17:32:21.872Z -- unknown -- wp%20prayer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3405</link>
      <description>The WP Prayer WordPress plugin through 2.0.9 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3405|2024-06-04T17:32:21.872Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3940|2024-06-04T17:32:20.990Z -- unknown -- recaptcha%20jetpack</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3940</link>
      <description>The reCAPTCHA Jetpack WordPress plugin through 0.2.2 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3940|2024-06-04T17:32:20.990Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3628|2024-05-07T06:00:01.626Z -- unknown -- easyevent</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3628</link>
      <description>The EasyEvent WordPress plugin through 1.0.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-3628|2024-05-07T06:00:01.626Z</guid>
      <pubDate>Tue, 07 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3917|2024-06-11T14:33:49.643Z -- unknown -- pet%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3917</link>
      <description>The Pet Manager WordPress plugin through 1.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3917|2024-06-11T14:33:49.643Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3937|2024-06-06T18:25:41.839Z -- unknown -- playlist%20for%20youtube</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3937</link>
      <description>The Playlist for Youtube WordPress plugin through 1.32 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3937|2024-06-06T18:25:41.839Z</guid>
      <pubDate>Wed, 29 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3188|2024-04-26T05:00:05.277Z -- unknown -- wp%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3188</link>
      <description>The WP Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 7.1.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3188|2024-04-26T05:00:05.277Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3472|2024-06-04T17:32:17.000Z -- unknown -- modal%20window</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3472</link>
      <description>The Modal Window  WordPress plugin before 5.3.10 does not have CSRF check in place when bulk deleting modals, which could allow attackers to make a logged in admin delete them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3472|2024-06-04T17:32:17.000Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3921|2024-05-29T06:00:02.135Z -- unknown -- gianism</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3921</link>
      <description>The Gianism WordPress plugin through 5.1.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3921|2024-05-29T06:00:02.135Z</guid>
      <pubDate>Wed, 29 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3075|2024-06-04T17:32:16.127Z -- unknown -- mm-email2image</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3075</link>
      <description>The MM-email2image WordPress plugin through 0.2.5 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3075|2024-06-04T17:32:16.127Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3059|2024-06-04T17:32:14.386Z -- unknown -- enl%20newsletter</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3059</link>
      <description>The ENL Newsletter WordPress plugin through 1.0.1 does not have CSRF checks in some places, which could allow attackers to make logged in admins delete arbitrary Campaigns via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3059|2024-06-04T17:32:14.386Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3060|2024-06-04T17:32:10.817Z -- unknown -- enl%20newsletter</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3060</link>
      <description>The ENL Newsletter WordPress plugin through 1.0.1 does not sanitize and escape a parameter before using it in a SQL statement, allowing admin+ to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2024-3060|2024-06-04T17:32:10.817Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3471|2024-06-04T17:32:08.568Z -- unknown -- button%20generator</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3471</link>
      <description>The Button Generator  WordPress plugin before 3.0 does not have CSRF check in place when bulk deleting, which could allow attackers to make a logged in admin delete buttons via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3471|2024-06-04T17:32:08.568Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3076|2024-06-04T17:32:07.263Z -- unknown -- mm-email2image</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3076</link>
      <description>The MM-email2image WordPress plugin through 0.2.5 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3076|2024-06-04T17:32:07.263Z</guid>
      <pubDate>Fri, 26 Apr 2024 13:23:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3631|2024-06-04T17:32:06.360Z -- unknown -- hl%20twitter</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3631</link>
      <description>The HL Twitter WordPress plugin through 2014.1.18 does not have CSRF check when unlinking twitter accounts, which could allow attackers to make logged in admins perform such actions via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3631|2024-06-04T17:32:06.360Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3261|2024-04-24T05:00:03.121Z -- unknown -- strong%20testimonials</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3261</link>
      <description>The Strong Testimonials WordPress plugin before 3.1.12 does not validate and escape some of its Testimonial fields before outputting them back in a page/post, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks. The attack requires a specific view to be performed</description>
      <guid isPermaLink="false">CVE-2024-3261|2024-04-24T05:00:03.121Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3918|2024-06-04T17:32:04.463Z -- unknown -- pet%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3918</link>
      <description>The Pet Manager WordPress plugin through 1.4 does not sanitise and escape some of its Pet settings, which could allow high privilege users such as Contributor to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-3918|2024-06-04T17:32:04.463Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3241|2024-06-04T17:31:59.787Z -- unknown -- ultimate%20blocks</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3241</link>
      <description>The Ultimate Blocks  WordPress plugin before 3.1.7 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3241|2024-06-04T17:31:59.787Z</guid>
      <pubDate>Tue, 14 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3703|2024-06-04T17:31:59.307Z -- unknown -- carousel%20slider</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3703</link>
      <description>The Carousel Slider WordPress plugin before 2.2.10 does not validate and escape some of its Slide options before outputting them back in the page/post where the related Slide shortcode is embed, which could allow users with the Editor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3703|2024-06-04T17:31:59.307Z</guid>
      <pubDate>Fri, 03 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3580|2024-06-04T17:31:58.413Z -- unknown -- popup4phone</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3580</link>
      <description>The Popup4Phone WordPress plugin through 1.3.2 does not sanitise and escape some of its settings, which could allow high privilege users such as Editor to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3580|2024-06-04T17:31:58.413Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3406|2024-05-15T06:00:02.589Z -- unknown -- wp%20prayer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3406</link>
      <description>The WP Prayer WordPress plugin through 2.0.9 does not have CSRF check in place when updating its email settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3406|2024-05-15T06:00:02.589Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3692|2024-05-03T06:00:02.337Z -- unknown -- gutenverse</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3692</link>
      <description>The Gutenverse  WordPress plugin before 1.9.1 does not validate the htmlTag option in various of its block before outputting it back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3692|2024-05-03T06:00:02.337Z</guid>
      <pubDate>Fri, 03 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3368|2024-06-06T17:53:45.554Z -- unknown -- all%20in%20one%20seo</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3368</link>
      <description>The All in One SEO  WordPress plugin before 4.6.1.1 does not validate and escape some of its Post fields before outputting them back, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3368|2024-06-06T17:53:45.554Z</guid>
      <pubDate>Mon, 20 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3407|2024-06-04T17:31:51.900Z -- unknown -- wp%20prayer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3407</link>
      <description>The WP Prayer WordPress plugin through 2.0.9 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3407|2024-06-04T17:31:51.900Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3903|2024-05-09T06:00:02.924Z -- unknown -- add%20custom%20css%20and%20js</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3903</link>
      <description>The Add Custom CSS and JS WordPress plugin through 1.20 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in as author and above add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3903|2024-05-09T06:00:02.924Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3755|2024-06-04T17:31:46.642Z -- unknown -- mf%20gig%20calendar</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3755</link>
      <description>The MF Gig Calendar WordPress plugin through 1.2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as editor to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3755|2024-06-04T17:31:46.642Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3939|2024-06-06T18:27:04.548Z -- unknown -- ditty</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3939</link>
      <description>The Ditty  WordPress plugin before 3.1.36 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3939|2024-06-06T18:27:04.548Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3630|2024-06-04T17:31:39.784Z -- unknown -- hl%20twitter</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3630</link>
      <description>The HL Twitter WordPress plugin through 2014.1.18 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3630|2024-06-04T17:31:39.784Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3590|2024-05-09T06:00:02.736Z -- unknown -- letterpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3590</link>
      <description>The LetterPress  WordPress plugin through 1.2.2 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks, such as delete arbitrary subscribers</description>
      <guid isPermaLink="false">CVE-2024-3590|2024-05-09T06:00:02.736Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3752|2024-06-04T17:31:31.718Z -- unknown -- crelly%20slider</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3752</link>
      <description>The Crelly Slider WordPress plugin through 1.4.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3752|2024-06-04T17:31:31.718Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3050|2024-06-04T17:31:26.567Z -- unknown -- site%20reviews</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3050</link>
      <description>The Site Reviews WordPress plugin before 7.0.0 retrieves client IP addresses from potentially untrusted headers, allowing an attacker to manipulate its value. This may be used to bypass IP-based blocking</description>
      <guid isPermaLink="false">CVE-2024-3050|2024-06-04T17:31:26.567Z</guid>
      <pubDate>Wed, 29 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3748|2024-06-11T18:53:59.679Z -- unknown -- sp%20project%20%26%20document%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3748</link>
      <description>The SP Project &amp; Document Manager WordPress plugin through 4.71 is missing validation in its upload function, allowing a user to manipulate the `user_id` to make it appear that a file was uploaded by another user</description>
      <guid isPermaLink="false">CVE-2024-3748|2024-06-11T18:53:59.679Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3477|2024-06-04T17:31:19.701Z -- unknown -- popup%20box</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3477</link>
      <description>The Popup Box  WordPress plugin before 2.2.7 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting popups via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3477|2024-06-04T17:31:19.701Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3637|2024-06-04T17:31:17.143Z -- unknown -- responsive%20contact%20form%20builder%20%26%20lead%20generation%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3637</link>
      <description>The Responsive Contact Form Builder &amp; Lead Generation Plugin WordPress plugin through 1.8.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3637|2024-06-04T17:31:17.143Z</guid>
      <pubDate>Fri, 03 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3288|2024-06-07T10:01:18.328Z -- unknown -- logo%20slider</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3288</link>
      <description>The Logo Slider  WordPress plugin before 4.0.0 does not validate and escape some of its Slider Settings before outputting them back in attributes, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3288|2024-06-07T10:01:18.328Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3231|2024-06-04T17:31:14.157Z -- unknown -- popup4phone</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3231</link>
      <description>The Popup4Phone WordPress plugin through 1.3.2 does not sanitise and escape some parameters, which could allow unauthenticated users to perform Cross-Site Scripting attacks against admins.</description>
      <guid isPermaLink="false">CVE-2024-3231|2024-06-04T17:31:14.157Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3548|2024-06-04T17:31:12.890Z -- unknown -- wp%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3548</link>
      <description>The WP Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 7.1.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3548|2024-06-04T17:31:12.890Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3476|2024-05-02T06:00:03.114Z -- unknown -- side%20menu%20lite</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3476</link>
      <description>The Side Menu Lite  WordPress plugin before 4.2.1 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting buttons via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3476|2024-05-02T06:00:03.114Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3749|2024-06-04T17:31:08.986Z -- unknown -- sp%20project%20%26%20document%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3749</link>
      <description>The SP Project &amp; Document Manager WordPress plugin through 4.71 lacks proper access controllers and allows a logged in user to view and download files belonging to another user</description>
      <guid isPermaLink="false">CVE-2024-3749|2024-06-04T17:31:08.986Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3641|2024-06-04T17:31:00.592Z -- unknown -- newsletter%20popup</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3641</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not sanitise and escape some parameters, which could allow unauthenticated visitors to perform Cross-Site Scripting attacks against admins</description>
      <guid isPermaLink="false">CVE-2024-3641|2024-06-04T17:31:00.592Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3591|2024-06-04T17:30:56.764Z -- unknown -- geo%20controller</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3591</link>
      <description>The Geo Controller WordPress plugin before 8.6.5 unserializes user input via some of its AJAX actions and REST API routes, which could allow unauthenticated users to perform PHP Object Injection when a suitable gadget is present on the blog.</description>
      <guid isPermaLink="false">CVE-2024-3591|2024-06-04T17:30:56.764Z</guid>
      <pubDate>Wed, 01 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2439|2024-06-04T17:30:54.241Z -- unknown -- salon%20booking%20system</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2439</link>
      <description>The Salon booking system WordPress plugin through 9.6.5 does not sanitise and escape some of its settings, which could allow high privilege users such as Editor to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2439|2024-06-04T17:30:54.241Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2907|2024-04-25T05:00:01.952Z -- unknown -- agca</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2907</link>
      <description>The AGCA  WordPress plugin before 7.2.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-2907|2024-04-25T05:00:01.952Z</guid>
      <pubDate>Thu, 25 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2858|2024-04-15T05:00:06.077Z -- unknown -- simple%20buttons%20creator</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2858</link>
      <description>The Simple Buttons Creator WordPress plugin through 1.04 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2858|2024-04-15T05:00:06.077Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2101|2024-06-06T13:56:45.727Z -- unknown -- salon%20booking%20system</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2101</link>
      <description>The Salon booking system WordPress plugin before 9.6.3 does not properly sanitize and escape the 'Mobile Phone' field when booking an appointment, allowing customers to conduct Stored Cross-Site Scripting attacks. The payload gets triggered when an admin visits the 'Customers' page and the malicious script is executed in the admin context.</description>
      <guid isPermaLink="false">CVE-2024-2101|2024-06-06T13:56:45.727Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2697|2024-06-06T14:58:55.143Z -- unknown -- socialdriver-framework</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2697</link>
      <description>The socialdriver-framework WordPress plugin before 2024.0.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2024-2697|2024-06-06T14:58:55.143Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2402|2024-06-04T17:30:32.727Z -- unknown -- better%20comments</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2402</link>
      <description>The Better Comments WordPress plugin before 1.5.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2402|2024-06-04T17:30:32.727Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2603|2024-06-04T17:30:27.591Z -- unknown -- salon%20booking%20system</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2603</link>
      <description>The Salon booking system WordPress plugin through 9.6.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin (or editor depending on Salon booking system WordPress plugin through 9.6.5 configuration) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2603|2024-06-04T17:30:27.591Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2262|2024-04-01T05:00:01.688Z -- unknown -- themify</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2262</link>
      <description>Themify  WordPress plugin before 1.4.4 does not have CSRF check in its bulk action, which could allow attackers to make logged in users delete arbitrary filters via CSRF attack, granted they know the related filter slugs</description>
      <guid isPermaLink="false">CVE-2024-2262|2024-04-01T05:00:01.688Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2761|2024-06-04T17:30:22.068Z -- unknown -- genesis%20blocks</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2761</link>
      <description>The Genesis Blocks WordPress plugin before 3.1.3 does not properly escape data input provided to some of its blocks, allowing using with at least contributor privileges to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-2761|2024-06-04T17:30:22.068Z</guid>
      <pubDate>Fri, 19 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2583|2024-04-13T05:00:02.273Z -- unknown -- wp%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2583</link>
      <description>The WP Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 7.0.5 does not properly escape some of its shortcodes attributes before they are echoed back to users, making it possible for users with the contributor role to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-2583|2024-04-13T05:00:02.273Z</guid>
      <pubDate>Sat, 13 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2429|2024-04-26T05:00:02.847Z -- unknown -- salon%20booking%20system</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2429</link>
      <description>The Salon booking system WordPress plugin through 9.6.5 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2429|2024-04-26T05:00:02.847Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2405|2024-05-02T06:00:02.127Z -- unknown -- float%20menu</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2405</link>
      <description>The Float menu  WordPress plugin before 6.0.1 does not have CSRF check in its bulk actions, which could allow attackers to make logged in admin delete arbitrary menu via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2024-2405|2024-05-02T06:00:02.127Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2278|2024-06-04T17:30:13.979Z -- unknown -- themify</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2278</link>
      <description>Themify  WordPress plugin before 1.4.4 does not sanitise and escape some of its Filters settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2278|2024-06-04T17:30:13.979Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2444|2024-04-08T17:28:12.009Z -- unknown -- inline%20related%20posts</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2444</link>
      <description>The Inline Related Posts WordPress plugin before 3.5.0 does not sanitise and escape some of its settings, which could allow high privilege users such as Admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2444|2024-04-08T17:28:12.009Z</guid>
      <pubDate>Sat, 06 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2404|2024-04-24T05:00:02.735Z -- unknown -- better%20comments</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2404</link>
      <description>The Better Comments WordPress plugin before 1.5.6 does not sanitise and escape some of its settings, which could allow low privilege users such as Subscribers to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-2404|2024-04-24T05:00:02.735Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2428|2024-06-04T17:30:05.591Z -- unknown -- the%20ultimate%20video%20player%20for%20wordpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2428</link>
      <description>The Ultimate Video Player For WordPress  WordPress plugin before 2.2.3 does not have proper capability check when updating its settings via a REST route, allowing Contributor and above users to update them. Furthermore, due to the lack of escaping in one of the settings, this also allows them to perform Stored XSS attacks</description>
      <guid isPermaLink="false">CVE-2024-2428|2024-06-04T17:30:05.591Z</guid>
      <pubDate>Wed, 10 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2310|2024-06-04T17:30:03.609Z -- unknown -- wp%20google%20review%20slider</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2310</link>
      <description>The WP Google Review Slider WordPress plugin before 13.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2310|2024-06-04T17:30:03.609Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2263|2024-04-01T05:00:02.150Z -- unknown -- themify</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2263</link>
      <description>Themify  WordPress plugin before 1.4.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-2263|2024-04-01T05:00:02.150Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2189|2024-06-04T17:29:58.957Z -- unknown -- social%20icons%20widget%20%26%20block%20by%20wpzoom</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2189</link>
      <description>The Social Icons Widget &amp; Block by WPZOOM WordPress plugin before 4.2.18 does not sanitise and escape some of its Widget settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2189|2024-06-04T17:29:58.957Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2309|2024-04-17T05:00:03.096Z -- unknown -- wp%20staging%20wordpress%20backup%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2309</link>
      <description>The WP STAGING WordPress Backup Plugin  WordPress plugin before 3.4.0, wp-staging-pro WordPress plugin before 5.4.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2309|2024-04-17T05:00:03.096Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2470|2024-06-04T06:00:02.220Z -- unknown -- simple%20ajax%20chat</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2470</link>
      <description>The Simple Ajax Chat  WordPress plugin before 20240412 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2470|2024-06-04T06:00:02.220Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2739|2024-06-04T17:29:38.382Z -- unknown -- advanced%20search</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2739</link>
      <description>The Advanced Search WordPress plugin through 1.1.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2739|2024-06-04T17:29:38.382Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2369|2024-06-04T17:29:37.945Z -- unknown -- page%20builder%20gutenberg%20blocks</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2369</link>
      <description>The Page Builder Gutenberg Blocks WordPress plugin before 3.1.7 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2369|2024-06-04T17:29:37.945Z</guid>
      <pubDate>Tue, 02 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2220|2024-06-04T17:29:31.304Z -- unknown -- button%20contact%20vr</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2220</link>
      <description>The Button contact VR WordPress plugin through 4.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2220|2024-06-04T17:29:31.304Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2102|2024-04-17T05:00:02.737Z -- unknown -- salon%20booking%20system</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2102</link>
      <description>The Salon booking system WordPress plugin before 9.6.3 does not properly sanitize and escape the 'Mobile Phone' field and 'sms_prefix' parameter when booking an appointment, allowing customers to conduct Stored Cross-Site Scripting attacks. The payload gets triggered when an admin visits the 'Bookings' page and the malicious script is executed in the admin context.</description>
      <guid isPermaLink="false">CVE-2024-2102|2024-04-17T05:00:02.737Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2505|2024-06-04T17:29:30.423Z -- unknown -- gamipress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2505</link>
      <description>The GamiPress  WordPress plugin before 6.8.9's access control mechanism fails to properly restrict access to its settings, permitting Authors to manipulate requests and extend access to lower privileged users, like Subscribers, despite initial settings prohibiting such access. This vulnerability resembles broken access control, enabling unauthorized users to modify critical GamiPress  WordPress plugin before 6.8.9 configurations.</description>
      <guid isPermaLink="false">CVE-2024-2505|2024-06-04T17:29:30.423Z</guid>
      <pubDate>Mon, 29 Apr 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2159|2024-06-04T17:29:21.015Z -- unknown -- social%20sharing%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2159</link>
      <description>The Social Sharing Plugin  WordPress plugin before 3.3.61 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2159|2024-06-04T17:29:21.015Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2509|2024-06-10T17:46:21.566Z -- unknown -- gutenberg%20blocks%20by%20kadence%20blocks</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2509</link>
      <description>The Gutenberg Blocks by Kadence Blocks WordPress plugin before 3.2.26 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2509|2024-06-10T17:46:21.566Z</guid>
      <pubDate>Fri, 05 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2118|2024-06-04T17:29:19.557Z -- unknown -- social%20media%20share%20buttons%20%26%20social%20sharing%20icons</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2118</link>
      <description>The Social Media Share Buttons &amp; Social Sharing Icons WordPress plugin before 2.8.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2118|2024-06-04T17:29:19.557Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2972|2024-04-24T05:00:02.929Z -- unknown -- floating%20chat%20widget%3A%20contact%20chat%20icons%2C%20whatsapp%2C%20telegram%20chat%2C%20line%20messenger%2C%20wechat%2C%20email%2C%20sms%2C%20call%20button</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2972</link>
      <description>The Floating Chat Widget: Contact Chat Icons, WhatsApp, Telegram Chat, Line Messenger, WeChat, Email, SMS, Call Button  WordPress plugin before 3.1.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2972|2024-04-24T05:00:02.929Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2837|2024-06-04T17:29:15.971Z -- unknown -- wp%20chat%20app</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2837</link>
      <description>The WP Chat App WordPress plugin before 3.6.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admins to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2837|2024-06-04T17:29:15.971Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2749|2024-06-04T17:29:14.651Z -- unknown -- vikbooking%20hotel%20booking%20engine%20%26%20pms</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2749</link>
      <description>The VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8's access control mechanism fails to properly restrict access to its settings, permitting any users that can access a menu to manipulate requests and perform unauthorized actions such as editing, renaming or deleting (categories for example) despite initial settings prohibiting such access. This vulnerability resembles broken access control, enabling unauthorized users to modify critical VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8 configurations.</description>
      <guid isPermaLink="false">CVE-2024-2749|2024-06-04T17:29:14.651Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2836|2024-04-15T05:00:05.687Z -- unknown -- social%20share%2C%20social%20login%20and%20social%20comments%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2836</link>
      <description>The Social Share, Social Login and Social Comments Plugin  WordPress plugin before 7.13.64 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2836|2024-04-15T05:00:05.687Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2908|2024-06-06T15:37:10.068Z -- unknown -- call%20now%20button</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2908</link>
      <description>The Call Now Button  WordPress plugin before 1.4.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-2908|2024-06-06T15:37:10.068Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2322|2024-04-08T17:28:01.688Z -- unknown -- woocommerce%20cart%20abandonment%20recovery</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2322</link>
      <description>The WooCommerce Cart Abandonment Recovery WordPress plugin before 1.2.27 does not have CSRF check in its bulk actions, which could allow attackers to make logged in admins delete arbitrary email templates as well as delete and unsubscribe users from abandoned orders via CSRF attacks.</description>
      <guid isPermaLink="false">CVE-2024-2322|2024-04-08T17:28:01.688Z</guid>
      <pubDate>Wed, 03 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2744|2024-06-04T17:29:06.598Z -- unknown -- nextgen%20gallery</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2744</link>
      <description>The NextGEN Gallery  WordPress plugin before 3.59.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2744|2024-06-04T17:29:06.598Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2729|2024-06-04T17:29:03.422Z -- unknown -- otter%20blocks</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2729</link>
      <description>The Otter Blocks  WordPress plugin before 2.6.6 does not properly escape its mainHeadings blocks' attribute before appending it to the final rendered block, allowing contributors to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-2729|2024-06-04T17:29:03.422Z</guid>
      <pubDate>Thu, 18 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2857|2024-04-15T05:00:05.871Z -- unknown -- simple%20buttons%20creator</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2857</link>
      <description>The Simple Buttons Creator WordPress plugin through 1.04 does not have any authorisation as well as CSRF in its add button function, allowing unauthenticated users to call them either directly or via CSRF attacks. Furthermore, due to the lack of sanitisation and escaping, it could also allow them to perform Stored Cross-Site Scripting attacks against logged in admins.</description>
      <guid isPermaLink="false">CVE-2024-2857|2024-04-15T05:00:05.871Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2441|2024-06-04T17:29:00.183Z -- unknown -- vikbooking%20hotel%20booking%20engine%20%26%20pms</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2441</link>
      <description>The VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8 allows direct access to menus, allowing an authenticated user with subscriber privileges or above, to bypass authorization and access settings of the VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8's they shouldn't be allowed to.</description>
      <guid isPermaLink="false">CVE-2024-2441|2024-06-04T17:29:00.183Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0427|2024-06-12T06:00:02.026Z -- unknown -- arforms%20-%20premium%20wordpress%20form%20builder%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0427</link>
      <description>The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.4.1 does not properly escape user-controlled input when it is reflected in some of its AJAX actions.</description>
      <guid isPermaLink="false">CVE-2024-0427|2024-06-12T06:00:02.026Z</guid>
      <pubDate>Wed, 12 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4924|2024-06-12T06:00:02.287Z -- unknown -- social%20sharing%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4924</link>
      <description>The Social Sharing Plugin  WordPress plugin before 3.3.63 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4924|2024-06-12T06:00:02.287Z</guid>
      <pubDate>Wed, 12 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3756|2024-06-12T14:38:30.616Z -- unknown -- mf%20gig%20calendar</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3756</link>
      <description>The MF Gig Calendar WordPress plugin through 1.2.1 does not have CSRF checks in some places, which could allow attackers to make logged in Contributors and above delete arbitrary events via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3756|2024-06-12T14:38:30.616Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2309|2024-06-12T20:03:00.752Z -- unknown -- wp%20staging%20wordpress%20backup%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2309</link>
      <description>The WP STAGING WordPress Backup Plugin  WordPress plugin before 3.4.0, wp-staging-pro WordPress plugin before 5.4.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2309|2024-06-12T20:03:00.752Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4145|2024-06-13T18:47:49.612Z -- unknown -- search%20%26%20replace</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4145</link>
      <description>The Search &amp; Replace WordPress plugin before 3.2.2 does not sanitize and escape a parameter before using it in a SQL statement, allowing admins to perform SQL injection attacks (such as within a multi-site network).</description>
      <guid isPermaLink="false">CVE-2024-4145|2024-06-13T18:47:49.612Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3552|2024-06-13T18:06:32.704Z -- unknown -- web%20directory%20free</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3552</link>
      <description>The Web Directory Free WordPress plugin before 1.7.0 does not sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection with different techniques like UNION, Time-Based and Error-Based.</description>
      <guid isPermaLink="false">CVE-2024-3552|2024-06-13T18:06:32.704Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4532|2024-06-13T20:40:22.431Z -- unknown -- business%20card</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4532</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as deleting cards via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4532|2024-06-13T20:40:22.431Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3032|2024-06-13T19:57:19.842Z -- unknown -- themify%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3032</link>
      <description>Themify Builder WordPress plugin before 7.5.8 does not validate a parameter before redirecting the user to its value, leading to an Open Redirect issue</description>
      <guid isPermaLink="false">CVE-2024-3032|2024-06-13T19:57:19.842Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3965|2024-06-14T13:45:36.787Z -- unknown -- pray%20for%20me</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3965</link>
      <description>The Pray For Me WordPress plugin through 1.0.4 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3965|2024-06-14T13:45:36.787Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3992|2024-06-14T15:35:01.609Z -- unknown -- amen</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3992</link>
      <description>The Amen WordPress plugin through 3.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3992|2024-06-14T15:35:01.609Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5155|2024-06-14T15:42:30.747Z -- unknown -- inquiry%20cart</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5155</link>
      <description>The Inquiry cart WordPress plugin through 3.4.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5155|2024-06-14T15:42:30.747Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4480|2024-06-14T15:33:50.709Z -- unknown -- wp%20prayer%20ii</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4480</link>
      <description>The WP Prayer II WordPress plugin through 2.4.7 does not have CSRF check in place when updating its email settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4480|2024-06-14T15:33:50.709Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3971|2024-06-14T18:07:42.385Z -- unknown -- similarity</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3971</link>
      <description>The Similarity WordPress plugin through 3.0 does not have CSRF check in place when resetting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3971|2024-06-14T18:07:42.385Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3966|2024-06-14T18:12:57.896Z -- unknown -- pray%20for%20me</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3966</link>
      <description>The Pray For Me WordPress plugin through 1.0.4 does not sanitise and escape some parameters, which could unauthenticated visitors to perform Cross-Site Scripting attacks that trigger when an admin visits the Prayer Requests in the WP Admin</description>
      <guid isPermaLink="false">CVE-2024-3966|2024-06-14T18:12:57.896Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4005|2024-06-14T18:07:23.149Z -- unknown -- social%20pixel</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4005</link>
      <description>The Social Pixel WordPress plugin through 2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4005|2024-06-14T18:07:23.149Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3236|2024-06-17T06:00:01.133Z -- unknown -- popup%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3236</link>
      <description>The Popup Builder WordPress plugin before 1.1.33 does not sanitise and escape some of its Notification fields, which could allow users such as contributor and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-3236|2024-06-17T06:00:01.133Z</guid>
      <pubDate>Mon, 17 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4305|2024-06-17T06:00:01.480Z -- unknown -- post%20grid%20gutenberg%20blocks%20and%20wordpress%20blog%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4305</link>
      <description>The Post Grid Gutenberg Blocks and WordPress Blog Plugin  WordPress plugin before 4.1.0 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4305|2024-06-17T06:00:01.480Z</guid>
      <pubDate>Mon, 17 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3276|2024-06-18T06:00:02.054Z -- unknown -- lightbox%20%26%20modal%20popup%20wordpress%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3276</link>
      <description>The Lightbox &amp; Modal Popup WordPress Plugin  WordPress plugin before 2.7.28, foobox-image-lightbox-premium WordPress plugin before 2.7.28 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-3276|2024-06-18T06:00:02.054Z</guid>
      <pubDate>Tue, 18 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5172|2024-06-18T06:00:02.523Z -- unknown -- expert%20invoice</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5172</link>
      <description>The Expert Invoice WordPress plugin through 1.0.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5172|2024-06-18T06:00:02.523Z</guid>
      <pubDate>Tue, 18 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4094|2024-06-18T06:00:02.301Z -- unknown -- simple%20share%20buttons%20adder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4094</link>
      <description>The Simple Share Buttons Adder WordPress plugin before 8.5.1 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-4094|2024-06-18T06:00:02.301Z</guid>
      <pubDate>Tue, 18 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2836|2024-06-18T15:28:31.078Z -- unknown -- social%20share%2C%20social%20login%20and%20social%20comments%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2836</link>
      <description>The Social Share, Social Login and Social Comments Plugin  WordPress plugin before 7.13.64 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2836|2024-06-18T15:28:31.078Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1849|2024-06-18T15:54:31.402Z -- unknown -- wp%20customer%20reviews</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1849</link>
      <description>The WP Customer Reviews WordPress plugin before 3.7.1 does not validate a parameter allowing contributor and above users to redirect a page to a malicious URL</description>
      <guid isPermaLink="false">CVE-2024-1849|2024-06-18T15:54:31.402Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4565|2024-06-20T13:42:56.802Z -- unknown -- advanced%20custom%20fields%20%28acf%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4565</link>
      <description>The Advanced Custom Fields (ACF) WordPress plugin before 6.3, Advanced Custom Fields Pro WordPress plugin before 6.3 allows you to display custom field values for any post via shortcode without checking for the correct access</description>
      <guid isPermaLink="false">CVE-2024-4565|2024-06-20T13:42:56.802Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5522|2024-06-20T16:09:19.209Z -- unknown -- html5%20video%20player</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5522</link>
      <description>The HTML5 Video Player  WordPress plugin before 2.5.27 does not sanitize and escape a parameter from a REST route before using it in a SQL statement, allowing unauthenticated users to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2024-5522|2024-06-20T16:09:19.209Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5344|2024-06-21T02:05:40.850Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5344</link>
      <description>The The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the ‘forgoturl’ attribute within the plugin's WP Login &amp; Register widget in all versions up to, and including, 5.5.6 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description>
      <guid isPermaLink="false">CVE-2024-5344|2024-06-21T02:05:40.850Z</guid>
      <pubDate>Fri, 21 Jun 2024 02:05:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4474|2024-06-21T06:00:04.573Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4474</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4474|2024-06-21T06:00:04.573Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4755|2024-06-21T06:00:05.395Z -- unknown -- google%20cse</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4755</link>
      <description>The Google CSE WordPress plugin through 1.0.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4755|2024-06-21T06:00:05.395Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5447|2024-06-21T06:00:06.279Z -- unknown -- paypal%20pay%20now%2C%20buy%20now%2C%20donation%20and%20cart%20buttons%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5447</link>
      <description>The PayPal Pay Now, Buy Now, Donation and Cart Buttons Shortcode WordPress plugin through 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5447|2024-06-21T06:00:06.279Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4384|2024-06-21T06:00:04.371Z -- unknown -- cssable%20countdown</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4384</link>
      <description>The CSSable Countdown WordPress plugin through 1.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4384|2024-06-21T06:00:04.371Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4970|2024-06-21T06:00:05.870Z -- unknown -- widget%20bundle</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4970</link>
      <description>The Widget Bundle WordPress plugin through 2.0.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4970|2024-06-21T06:00:05.870Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5448|2024-06-21T06:00:06.690Z -- unknown -- paypal%20pay%20now%2C%20buy%20now%2C%20donation%20and%20cart%20buttons%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5448</link>
      <description>The PayPal Pay Now, Buy Now, Donation and Cart Buttons Shortcode WordPress plugin through 1.7 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5448|2024-06-21T06:00:06.690Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4382|2024-06-21T06:00:04.138Z -- unknown -- cb%20%28legacy%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4382</link>
      <description>The CB (legacy) WordPress plugin through 0.9.4.18 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting codes, timeframes, and bookings via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4382|2024-06-21T06:00:04.138Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4477|2024-06-21T06:00:04.995Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4477</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not sanitise and escape some of its log data before outputting them back in an admin dashboard, leading to an Unauthenticated Stored Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-4477|2024-06-21T06:00:04.995Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4969|2024-06-21T06:00:05.590Z -- unknown -- widget%20bundle</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4969</link>
      <description>The Widget Bundle WordPress plugin through 2.0.0 does not have CSRF checks when logging Widgets, which could allow attackers to make logged in admin enable/disable widgets via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4969|2024-06-21T06:00:05.590Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4616|2024-06-21T06:00:05.195Z -- unknown -- widget%20bundle</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4616</link>
      <description>The Widget Bundle WordPress plugin through 2.0.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against only unauthenticated users</description>
      <guid isPermaLink="false">CVE-2024-4616|2024-06-21T06:00:05.195Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4381|2024-06-21T06:00:03.795Z -- unknown -- cb%20%28legacy%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4381</link>
      <description>The CB (legacy) WordPress plugin through 0.9.4.18 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4381|2024-06-21T06:00:03.795Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4475|2024-06-21T06:00:04.785Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4475</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not have CSRF check when clearing logs, which could allow attackers to make a logged in admin clear the logs them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4475|2024-06-21T06:00:04.785Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4377|2024-06-21T06:00:03.210Z -- unknown -- dop%20shortcodes</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4377</link>
      <description>The DOP Shortcodes WordPress plugin through 1.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4377|2024-06-21T06:00:03.210Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4381|2024-06-21T14:19:45.773Z -- unknown -- cb%20%28legacy%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4381</link>
      <description>The CB (legacy) WordPress plugin through 0.9.4.18 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4381|2024-06-21T14:19:45.773Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5448|2024-06-22T17:05:02.208Z -- unknown -- paypal%20pay%20now%2C%20buy%20now%2C%20donation%20and%20cart%20buttons%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5448</link>
      <description>The PayPal Pay Now, Buy Now, Donation and Cart Buttons Shortcode WordPress plugin through 1.7 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5448|2024-06-22T17:05:02.208Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5455|2024-06-22T17:09:44.225Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5455</link>
      <description>The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 5.5.4 via the 'magazine_style' parameter within the Dynamic Smart Showcase widget. This makes it possible for authenticated attackers, with Contributor-level access and above, to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other “safe” file types can be uploaded and included.</description>
      <guid isPermaLink="false">CVE-2024-5455|2024-06-22T17:09:44.225Z</guid>
      <pubDate>Fri, 21 Jun 2024 03:24:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1752|2024-06-24T14:36:52.323Z -- unknown -- font%20farsi</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1752</link>
      <description>The Font Farsi WordPress plugin through 1.6.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1752|2024-06-24T14:36:52.323Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1290|2024-06-24T14:58:54.267Z -- unknown -- user%20registration</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1290</link>
      <description>The User Registration WordPress plugin before 2.12 does not prevent users with at least the contributor role from rendering sensitive shortcodes, allowing them to generate, and leak, valid password reset URLs, which they can use to take over any accounts.</description>
      <guid isPermaLink="false">CVE-2024-1290|2024-06-24T14:58:54.267Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4377|2024-06-24T14:21:23.231Z -- unknown -- dop%20shortcodes</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4377</link>
      <description>The DOP Shortcodes WordPress plugin through 1.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4377|2024-06-24T14:21:23.231Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4757|2024-06-25T06:00:02.291Z -- unknown -- logo%20manager%20for%20enamad</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4757</link>
      <description>The Logo Manager For Enamad WordPress plugin through 0.7.0 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4757|2024-06-25T06:00:02.291Z</guid>
      <pubDate>Tue, 25 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4759|2024-06-25T06:00:03.188Z -- unknown -- mime%20types%20extended</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4759</link>
      <description>The Mime Types Extended WordPress plugin through 0.11 does not sanitise uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2024-4759|2024-06-25T06:00:03.188Z</guid>
      <pubDate>Tue, 25 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4755|2024-06-25T18:43:17.872Z -- unknown -- google%20cse</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4755</link>
      <description>The Google CSE WordPress plugin through 1.0.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4755|2024-06-25T18:43:17.872Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4477|2024-06-25T18:56:08.116Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4477</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not sanitise and escape some of its log data before outputting them back in an admin dashboard, leading to an Unauthenticated Stored Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-4477|2024-06-25T18:56:08.116Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4959|2024-06-26T13:31:22.094Z -- unknown -- frontend%20checklist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4959</link>
      <description>The Frontend Checklist WordPress plugin through 2.3.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4959|2024-06-26T13:31:22.094Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4758|2024-06-26T17:17:49.742Z -- unknown -- muslim%20prayer%20time%20bd</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4758</link>
      <description>The Muslim Prayer Time BD WordPress plugin through 2.4 does not have CSRF check in place when reseting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4758|2024-06-26T17:17:49.742Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4957|2024-06-26T19:03:51.593Z -- unknown -- frontend%20checklist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4957</link>
      <description>The Frontend Checklist WordPress plugin through 2.3.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4957|2024-06-26T19:03:51.593Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4704|2024-06-27T13:49:26.112Z -- unknown -- contact%20form%207</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4704</link>
      <description>The Contact Form 7 WordPress plugin before 5.9.5 has an open redirect that allows an attacker to utilize a false URL and redirect to the URL of their choosing.</description>
      <guid isPermaLink="false">CVE-2024-4704|2024-06-27T13:49:26.112Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5570|2024-06-28T06:00:03.518Z -- unknown -- simple%20photoswipe</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5570</link>
      <description>The Simple Photoswipe WordPress plugin through 0.1 does not have authorisation check when updating its settings, which could allow any authenticated users, such as subscriber to update them</description>
      <guid isPermaLink="false">CVE-2024-5570|2024-06-28T06:00:03.518Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5727|2024-06-28T06:00:03.875Z -- unknown -- widget4call</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5727</link>
      <description>The Widget4Call WordPress plugin through 1.0.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5727|2024-06-28T06:00:03.875Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5728|2024-06-28T06:00:04.165Z -- unknown -- animated%20al%20list</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5728</link>
      <description>The Animated AL List WordPress plugin through 1.0.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5728|2024-06-28T06:00:04.165Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5729|2024-06-28T06:00:04.527Z -- unknown -- simple%20al%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5729</link>
      <description>The Simple AL Slider WordPress plugin through 1.2.10 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5729|2024-06-28T06:00:04.527Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5730|2024-06-28T06:00:05.085Z -- unknown -- pagerank%20tools</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5730</link>
      <description>The Pagerank tools WordPress plugin through 1.1.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5730|2024-06-28T06:00:05.085Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5727|2024-06-28T15:06:25.428Z -- unknown -- widget4call</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5727</link>
      <description>The Widget4Call WordPress plugin through 1.0.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5727|2024-06-28T15:06:25.428Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6082|2024-06-28T16:00:37.483Z -- unknown -- chartjs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6082</link>
      <description>The chartjs WordPress plugin through 2023.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-6082|2024-06-28T16:00:37.483Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:06:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1204|2024-07-01T14:40:20.581Z -- unknown -- meta%20box</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1204</link>
      <description>The Meta Box  WordPress plugin before 5.9.4 does not prevent users with at least the contributor role from access arbitrary custom fields assigned to other user's posts.</description>
      <guid isPermaLink="false">CVE-2024-1204|2024-07-01T14:40:20.581Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7253|2024-07-01T14:31:07.519Z -- unknown -- import%20wp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7253</link>
      <description>The Import WP  WordPress plugin before 2.13.1 does not prevent users with the administrator role from pinging conducting SSRF attacks, which may be a problem in multisite configurations.</description>
      <guid isPermaLink="false">CVE-2023-7253|2024-07-01T14:31:07.519Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2405|2024-07-01T14:31:29.112Z -- unknown -- float%20menu</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2405</link>
      <description>The Float menu  WordPress plugin before 6.0.1 does not have CSRF check in its bulk actions, which could allow attackers to make logged in admin delete arbitrary menu via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2024-2405|2024-07-01T14:31:29.112Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3999|2024-07-02T06:00:02.531Z -- unknown -- eazydocs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3999</link>
      <description>The EazyDocs  WordPress plugin before 2.5.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3999|2024-07-02T06:00:02.531Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5767|2024-07-02T06:00:03.708Z -- unknown -- sitetweet</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5767</link>
      <description>The sitetweet WordPress plugin through 0.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5767|2024-07-02T06:00:03.708Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5606|2024-07-02T06:00:03.377Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5606</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.0.2 is vulnerable does not validate and escape the question_id parameter in the qsm_bulk_delete_question_from_database AJAX action, leading to a SQL injection exploitable by Contributors and above role</description>
      <guid isPermaLink="false">CVE-2024-5606|2024-07-02T06:00:03.377Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4627|2024-07-02T06:00:02.905Z -- unknown -- rank%20math%20seo</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4627</link>
      <description>The Rank Math SEO  WordPress plugin before 1.0.219 does not sanitise and escape some of its settings, which could allow users with access to the General Settings (by default admin, however such access can be given to lower roles via the Role Manager feature of the Rank Math SEO  WordPress plugin before 1.0.219) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-4627|2024-07-02T06:00:02.905Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4627|2024-07-02T19:57:46.852Z -- unknown -- rank%20math%20seo</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4627</link>
      <description>The Rank Math SEO  WordPress plugin before 1.0.219 does not sanitise and escape some of its settings, which could allow users with access to the General Settings (by default admin, however such access can be given to lower roles via the Role Manager feature of the Rank Math SEO  WordPress plugin before 1.0.219) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-4627|2024-07-02T19:57:46.852Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6130|2024-07-02T18:58:45.523Z -- unknown -- form%20maker%20by%2010web</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6130</link>
      <description>The Form Maker by 10Web  WordPress plugin before 1.15.26 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6130|2024-07-02T18:58:45.523Z</guid>
      <pubDate>Mon, 01 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2235|2024-07-03T06:00:03.922Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2235</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make users vote on any polls, including those they don't have access to via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2235|2024-07-03T06:00:03.922Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2234|2024-07-03T06:00:03.688Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2234</link>
      <description>The Himer WordPress theme before 2.1.1 does not sanitise and escape some of its Post settings, which could allow high privilege users such as Contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2234|2024-07-03T06:00:03.688Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2040|2024-07-03T06:00:02.427Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2040</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make users join private groups via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2040|2024-07-03T06:00:02.427Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2231|2024-07-03T06:00:03.187Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2231</link>
      <description>The  allows any authenticated user to join a private group due to a missing authorization check on a function</description>
      <guid isPermaLink="false">CVE-2024-2231|2024-07-03T06:00:03.187Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2233|2024-07-03T06:00:03.458Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2233</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks. These include declining and accepting group invitations or leaving a group</description>
      <guid isPermaLink="false">CVE-2024-2233|2024-07-03T06:00:03.458Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2375|2024-07-03T06:00:04.122Z -- unknown -- wpqa%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2375</link>
      <description>The WPQA Builder WordPress plugin before 6.1.1 does not sanitise and escape some of its Slider settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2375|2024-07-03T06:00:04.122Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2376|2024-07-03T06:00:04.339Z -- unknown -- wpqa%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2376</link>
      <description>The WPQA Builder WordPress plugin before 6.1.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2376|2024-07-03T06:00:04.339Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2233|2024-07-03T18:43:33.707Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2233</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks. These include declining and accepting group invitations or leaving a group</description>
      <guid isPermaLink="false">CVE-2024-2233|2024-07-03T18:43:33.707Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3276|2024-07-03T20:57:54.520Z -- unknown -- lightbox%20%26%20modal%20popup%20wordpress%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3276</link>
      <description>The Lightbox &amp; Modal Popup WordPress Plugin  WordPress plugin before 2.7.28, foobox-image-lightbox-premium WordPress plugin before 2.7.28 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-3276|2024-07-03T20:57:54.520Z</guid>
      <pubDate>Tue, 18 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1755|2024-07-05T15:24:06.344Z -- unknown -- nps%20computy</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1755</link>
      <description>The NPS computy WordPress plugin through 2.7.5 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-1755|2024-07-05T15:24:06.344Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2235|2024-07-05T20:07:29.077Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2235</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make users vote on any polls, including those they don't have access to via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2235|2024-07-05T20:07:29.077Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2234|2024-07-05T20:03:58.807Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2234</link>
      <description>The Himer WordPress theme before 2.1.1 does not sanitise and escape some of its Post settings, which could allow high privilege users such as Contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2234|2024-07-05T20:03:58.807Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2040|2024-07-05T20:07:13.216Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2040</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make users join private groups via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2040|2024-07-05T20:07:13.216Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2233|2024-07-05T20:06:57.435Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2233</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks. These include declining and accepting group invitations or leaving a group</description>
      <guid isPermaLink="false">CVE-2024-2233|2024-07-05T20:06:57.435Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5767|2024-07-08T17:15:01.976Z -- unknown -- sitetweet</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5767</link>
      <description>The sitetweet WordPress plugin through 0.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5767|2024-07-08T17:15:01.976Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6334|2024-07-09T06:00:05.147Z -- unknown -- easy%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6334</link>
      <description>The Easy Table of Contents WordPress plugin before 2.0.67.1 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2024-6334|2024-07-09T06:00:05.147Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5802|2024-07-09T06:00:04.751Z -- unknown -- url%20shortener%20by%20mythemeshop</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5802</link>
      <description>The URL Shortener by Myhop WordPress plugin through 1.0.17 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-5802|2024-07-09T06:00:04.751Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5488|2024-07-09T06:00:04.275Z -- unknown -- seopress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5488</link>
      <description>The SEOPress  WordPress plugin before 7.9 does not properly protect some of its REST API routes, which combined with another Object Injection vulnerability can allow unauthenticated attackers to unserialize malicious gadget chains, compromising the site if a suitable chain is present.</description>
      <guid isPermaLink="false">CVE-2024-5488|2024-07-09T06:00:04.275Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3410|2024-07-09T06:00:03.519Z -- unknown -- dn%20footer%20contacts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3410</link>
      <description>The DN Footer Contacts WordPress plugin before 1.6.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3410|2024-07-09T06:00:03.519Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3410|2024-07-09T16:25:34.270Z -- unknown -- dn%20footer%20contacts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3410</link>
      <description>The DN Footer Contacts WordPress plugin before 1.6.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3410|2024-07-09T16:25:34.270Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1310|2024-07-09T16:26:32.494Z -- unknown -- woocommerce</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1310</link>
      <description>The WooCommerce WordPress plugin before 8.6 does not prevent users with at least the contributor role from leaking products they shouldn't have access to. (e.g. private, draft and trashed products)</description>
      <guid isPermaLink="false">CVE-2024-1310|2024-07-09T16:26:32.494Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4655|2024-07-11T06:00:02.913Z -- unknown -- ultimate%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4655</link>
      <description>The Ultimate Blocks  WordPress plugin before 3.1.9 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4655|2024-07-11T06:00:02.913Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6025|2024-07-11T06:00:04.031Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6025</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.0.5 does not sanitise and escape some of its Quiz settings, which could allow contributors and higher to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6025|2024-07-11T06:00:04.031Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5444|2024-07-11T06:00:03.516Z -- unknown -- bible%20text</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5444</link>
      <description>The Bible Text WordPress plugin through 0.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5444|2024-07-11T06:00:03.516Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1845|2024-07-11T06:00:02.403Z -- unknown -- vikrentcar%20car%20rental%20management%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1845</link>
      <description>The VikRentCar Car Rental Management System WordPress plugin before 1.3.2 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-1845|2024-07-11T06:00:02.403Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6138|2024-07-11T06:00:04.534Z -- unknown -- secure%20copy%20content%20protection%20and%20content%20locking</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6138</link>
      <description>The Secure Copy Content Protection and Content Locking WordPress plugin before 4.0.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-6138|2024-07-11T06:00:04.534Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6026|2024-07-11T06:00:04.304Z -- unknown -- slider%20by%2010web</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6026</link>
      <description>The Slider by 10Web  WordPress plugin before 1.2.56 does not sanitise and escape some of its Slide options, which could allow authenticated users with access to the Sliders (by default Administrator, however this can be changed via the Slider by 10Web  WordPress plugin before 1.2.56's options) and the ability to add images (Editor+) to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6026|2024-07-11T06:00:04.304Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5444|2024-07-11T15:07:11.055Z -- unknown -- bible%20text</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5444</link>
      <description>The Bible Text WordPress plugin through 0.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5444|2024-07-11T15:07:11.055Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6023|2024-07-12T06:00:06.958Z -- unknown -- contentlock</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6023</link>
      <description>The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when adding emails, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6023|2024-07-12T06:00:06.958Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3112|2024-07-12T06:00:05.645Z -- unknown -- quotes%20and%20tips%20by%20bestwebsoft</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3112</link>
      <description>The Quotes and Tips by BestWebSoft WordPress plugin before 1.45 does not properly validate image files uploaded, allowing high privilege users such as admin to upload arbitrary files on the server even when they should not be allowed to (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3112|2024-07-12T06:00:05.645Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4753|2024-07-12T06:00:05.863Z -- unknown -- wp%20secure%20maintenance</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4753</link>
      <description>The WP Secure Maintenance WordPress plugin before 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4753|2024-07-12T06:00:05.863Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6022|2024-07-12T06:00:06.639Z -- unknown -- contentlock</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6022</link>
      <description>The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6022|2024-07-12T06:00:06.639Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2696|2024-07-12T06:00:05.434Z -- unknown -- socialdriver-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2696</link>
      <description>The socialdriver-framework WordPress plugin before 2024.04.30 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2696|2024-07-12T06:00:05.434Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2640|2024-07-12T06:00:05.185Z -- unknown -- watu%20quiz</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2640</link>
      <description>The Watu Quiz WordPress plugin before 3.4.1.2 does not sanitise and escape some of its settings, which could allow users such as authors (if they've been authorized by admins) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2024-2640|2024-07-12T06:00:05.185Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5811|2024-07-12T06:00:06.332Z -- unknown -- simple%20video%20directory</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5811</link>
      <description>The Simple Video Directory WordPress plugin before 1.4.4 does not sanitise and escape some of its settings, which could allow contributors and higher to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5811|2024-07-12T06:00:06.332Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6024|2024-07-12T06:00:07.258Z -- unknown -- contentlock</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6024</link>
      <description>The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when deleting groups or emails, which could allow attackers to make a logged in admin remove them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6024|2024-07-12T06:00:07.258Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0974|2024-07-12T06:00:04.368Z -- unknown -- social%20media%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0974</link>
      <description>The Social Media Widget WordPress plugin before 4.0.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0974|2024-07-12T06:00:04.368Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2430|2024-07-12T06:00:04.866Z -- unknown -- website%20content%20in%20page%20or%20post</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2430</link>
      <description>The Website Content in Page or Post WordPress plugin before 2024.04.09 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2430|2024-07-12T06:00:04.866Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5626|2024-07-12T06:00:06.094Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5626</link>
      <description>The Inline Related Posts WordPress plugin before 3.7.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5626|2024-07-12T06:00:06.094Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6023|2024-07-12T15:25:26.310Z -- unknown -- contentlock</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6023</link>
      <description>The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when adding emails, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6023|2024-07-12T15:25:26.310Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3112|2024-07-12T15:19:04.910Z -- unknown -- quotes%20and%20tips%20by%20bestwebsoft</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3112</link>
      <description>The Quotes and Tips by BestWebSoft WordPress plugin before 1.45 does not properly validate image files uploaded, allowing high privilege users such as admin to upload arbitrary files on the server even when they should not be allowed to (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3112|2024-07-12T15:19:04.910Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4753|2024-07-12T17:25:44.649Z -- unknown -- wp%20secure%20maintenance</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4753</link>
      <description>The WP Secure Maintenance WordPress plugin before 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4753|2024-07-12T17:25:44.649Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5744|2024-07-13T06:00:13.171Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5744</link>
      <description>The wp-eMember WordPress plugin before 10.6.7 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2024-5744|2024-07-13T06:00:13.171Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5286|2024-07-13T06:00:11.139Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5286</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5286|2024-07-13T06:00:11.139Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5075|2024-07-13T06:00:08.729Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5075</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5075|2024-07-13T06:00:08.729Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5032|2024-07-13T06:00:07.731Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5032</link>
      <description>The SULly WordPress plugin before 4.3.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5032|2024-07-13T06:00:07.731Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3632|2024-07-13T06:00:04.124Z -- unknown -- smart%20image%20gallery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3632</link>
      <description>The Smart Image Gallery WordPress plugin before 1.0.19 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3632|2024-07-13T06:00:04.124Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5167|2024-07-13T06:00:09.955Z -- unknown -- cm%20email%20registration%20blacklist%20and%20whitelist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5167</link>
      <description>The CM Email Registration Blacklist and Whitelist WordPress plugin before 1.4.9 does not have CSRF check when adding or deleting an item from the blacklist or whitelist, which could allow attackers to make a logged in admin add or delete settings from the blacklist or whitelist menu via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5167|2024-07-13T06:00:09.955Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5281|2024-07-13T06:00:10.359Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5281</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5281|2024-07-13T06:00:10.359Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5287|2024-07-13T06:00:11.336Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5287</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in user change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5287|2024-07-13T06:00:11.336Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3710|2024-07-13T06:00:04.350Z -- unknown -- image%20photo%20gallery%20final%20tiles%20grid</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3710</link>
      <description>The Image Photo Gallery Final Tiles Grid WordPress plugin before 3.6.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3710|2024-07-13T06:00:04.350Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3964|2024-07-13T06:00:05.478Z -- unknown -- product%20enquiry%20for%20woocommerce</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3964</link>
      <description>The Product Enquiry for WooCommerce WordPress plugin before 3.1.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3964|2024-07-13T06:00:05.478Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4217|2024-07-13T06:00:05.734Z -- unknown -- shortcodes-ultimate-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4217</link>
      <description>The shortcodes-ultimate-pro WordPress plugin before 7.1.5 does not properly escape some of its shortcodes' settings, making it possible for attackers with a Contributor account to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4217|2024-07-13T06:00:05.734Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3753|2024-07-13T06:00:04.802Z -- unknown -- hostel</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3753</link>
      <description>The Hostel WordPress plugin before 1.1.5.3 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3753|2024-07-13T06:00:04.802Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4752|2024-07-13T06:00:06.657Z -- unknown -- eventon</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4752</link>
      <description>The EventON WordPress plugin before 2.2.15 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4752|2024-07-13T06:00:06.657Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4272|2024-07-13T06:00:06.185Z -- unknown -- support%20svg</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4272</link>
      <description>The Support SVG  WordPress plugin before 1.1.0 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4272|2024-07-13T06:00:06.185Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5034|2024-07-13T06:00:08.319Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5034</link>
      <description>The SULly WordPress plugin before 4.3.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5034|2024-07-13T06:00:08.319Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5713|2024-07-13T06:00:12.794Z -- unknown -- if-so%20dynamic%20content%20personalization</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5713</link>
      <description>The If-So Dynamic Content Personalization WordPress plugin before 1.8.0.4 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2024-5713|2024-07-13T06:00:12.794Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5074|2024-07-13T06:00:08.534Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5074</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5074|2024-07-13T06:00:08.534Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3963|2024-07-13T06:00:05.270Z -- unknown -- giveaways%20and%20contests%20by%20rafflepress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3963</link>
      <description>The Giveaways and Contests by RafflePress  WordPress plugin before 1.12.14 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3963|2024-07-13T06:00:05.270Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3026|2024-07-13T06:00:03.859Z -- unknown -- wordpress%20button%20plugin%20maxbuttons</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3026</link>
      <description>The WordPress Button Plugin MaxButtons WordPress plugin before 9.7.8 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3026|2024-07-13T06:00:03.859Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5079|2024-07-13T06:00:09.333Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5079</link>
      <description>The wp-eMember WordPress plugin before 10.6.7 does not sanitise and escape some of the fields when members register, which allows unauthenticated users to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5079|2024-07-13T06:00:09.333Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5151|2024-07-13T06:00:09.746Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5151</link>
      <description>The SULly WordPress plugin before 4.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5151|2024-07-13T06:00:09.746Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5080|2024-07-13T06:00:09.543Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5080</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not validate files to be uploaded, which could allow admins to upload arbitrary files such as PHP on the server</description>
      <guid isPermaLink="false">CVE-2024-5080|2024-07-13T06:00:09.543Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5283|2024-07-13T06:00:10.758Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5283</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5283|2024-07-13T06:00:10.758Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4977|2024-07-13T06:00:06.897Z -- unknown -- index%20wp%20mysql%20for%20speed</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4977</link>
      <description>The Index WP MySQL For Speed WordPress plugin before 1.4.18 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-4977|2024-07-13T06:00:06.897Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5028|2024-07-13T06:00:07.447Z -- unknown -- cm%20wordpress%20search%20and%20replace%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5028</link>
      <description>The CM WordPress Search And Replace Plugin WordPress plugin before 1.3.9 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5028|2024-07-13T06:00:07.447Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5644|2024-07-13T06:00:12.584Z -- unknown -- tournamatch</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5644</link>
      <description>The Tournamatch WordPress plugin before 4.6.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5644|2024-07-13T06:00:12.584Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5715|2024-07-13T06:00:12.983Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5715</link>
      <description>The wp-eMember WordPress plugin before 10.6.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5715|2024-07-13T06:00:12.983Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5280|2024-07-13T06:00:10.160Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5280</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make non-logged in users execute an XSS payload via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5280|2024-07-13T06:00:10.160Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5442|2024-07-13T06:00:11.530Z -- unknown -- photo%20gallery%2C%20sliders%2C%20proofing%20and%20themes</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5442</link>
      <description>The Photo Gallery, Sliders, Proofing and   WordPress plugin before 3.59.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5442|2024-07-13T06:00:11.530Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5575|2024-07-13T06:00:12.200Z -- unknown -- ditty</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5575</link>
      <description>The Ditty  WordPress plugin before 3.1.43 does not sanitise and escape some of its blocks' settings, which could allow high privilege users such as authors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-5575|2024-07-13T06:00:12.200Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5284|2024-07-13T06:00:10.957Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5284</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5284|2024-07-13T06:00:10.957Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2870|2024-07-13T06:00:02.984Z -- unknown -- socialdriver-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2870</link>
      <description>The socialdriver-framework WordPress plugin before 2024.04.30 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-2870|2024-07-13T06:00:02.984Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3919|2024-07-13T06:00:05.011Z -- unknown -- openpgp%20form%20encryption%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3919</link>
      <description>The OpenPGP Form Encryption for WordPress plugin before 1.5.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-3919|2024-07-13T06:00:05.011Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6070|2024-07-13T06:00:13.366Z -- unknown -- if-so%20dynamic%20content%20personalization</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6070</link>
      <description>The If-So Dynamic Content Personalization WordPress plugin before 1.8.0.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6070|2024-07-13T06:00:13.366Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4602|2024-07-13T06:00:06.435Z -- unknown -- embed%20peertube%20playlist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4602</link>
      <description>The Embed Peertube Playlist WordPress plugin before 1.10 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4602|2024-07-13T06:00:06.435Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5076|2024-07-13T06:00:08.934Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5076</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5076|2024-07-13T06:00:08.934Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5450|2024-07-13T06:00:11.772Z -- unknown -- bug%20library</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5450</link>
      <description>The Bug Library WordPress plugin before 2.1.1 does not check the file type on user-submitted bug reports, allowing an unauthenticated user to upload PHP files</description>
      <guid isPermaLink="false">CVE-2024-5450|2024-07-13T06:00:11.772Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5472|2024-07-13T06:00:11.980Z -- unknown -- wp%20quicklatex</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5472</link>
      <description>The WP QuickLaTeX WordPress plugin before 3.8.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5472|2024-07-13T06:00:11.980Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4269|2024-07-13T06:00:05.955Z -- unknown -- svg%20block</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4269</link>
      <description>The SVG Block WordPress plugin before 1.1.20 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4269|2024-07-13T06:00:05.955Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3751|2024-07-13T06:00:04.549Z -- unknown -- seriously%20simple%20podcasting</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3751</link>
      <description>The Seriously Simple Podcasting WordPress plugin before 3.3.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3751|2024-07-13T06:00:04.549Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5627|2024-07-13T06:00:12.388Z -- unknown -- tournamatch</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5627</link>
      <description>The Tournamatch WordPress plugin before 4.6.1 does not sanitise and escape some parameters, which could allow users with a role as low as subscriber to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-5627|2024-07-13T06:00:12.388Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5282|2024-07-13T06:00:10.553Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5282</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5282|2024-07-13T06:00:10.553Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5002|2024-07-13T06:00:07.139Z -- unknown -- user%20submitted%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5002</link>
      <description>The User Submitted Posts  WordPress plugin before 20240516 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5002|2024-07-13T06:00:07.139Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5033|2024-07-13T06:00:08.044Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5033</link>
      <description>The SULly WordPress plugin before 4.3.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5033|2024-07-13T06:00:08.044Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5077|2024-07-13T06:00:09.142Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5077</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5077|2024-07-13T06:00:09.142Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5151|2024-07-13T12:00:13.958Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5151</link>
      <description>The SULly WordPress plugin before 4.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5151|2024-07-13T12:00:13.958Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6289|2024-07-15T06:00:06.081Z -- unknown -- wps%20hide%20login</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6289</link>
      <description>The WPS Hide Login WordPress plugin before 1.9.16.4 does not prevent redirects to the login page via the auth_redirect WordPress function, allowing an unauthenticated visitor to access the hidden login page.</description>
      <guid isPermaLink="false">CVE-2024-6289|2024-07-15T06:00:06.081Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6074|2024-07-15T06:00:05.374Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6074</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6074|2024-07-15T06:00:05.374Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5630|2024-07-15T06:00:02.225Z -- unknown -- insert%20or%20embed%20articulate%20content%20into%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5630</link>
      <description>The Insert or Embed Articulate Content into WordPress plugin before 4.3000000024 does not prevent authors from uploading arbitrary files to the site, which may allow them to upload PHP shells on affected sites.</description>
      <guid isPermaLink="false">CVE-2024-5630|2024-07-15T06:00:02.225Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6073|2024-07-15T06:00:04.974Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6073</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6073|2024-07-15T06:00:04.974Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6075|2024-07-15T06:00:05.607Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6075</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6075|2024-07-15T06:00:05.607Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6076|2024-07-15T06:00:05.868Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6076</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6076|2024-07-15T06:00:05.868Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6072|2024-07-15T06:00:04.074Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6072</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2024-6072|2024-07-15T06:00:04.074Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5280|2024-07-15T13:57:22.252Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5280</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make non-logged in users execute an XSS payload via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5280|2024-07-15T13:57:22.252Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5575|2024-07-15T13:50:55.441Z -- unknown -- ditty</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5575</link>
      <description>The Ditty  WordPress plugin before 3.1.43 does not sanitise and escape some of its blocks' settings, which could allow high privilege users such as authors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-5575|2024-07-15T13:50:55.441Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5450|2024-07-15T13:46:48.222Z -- unknown -- bug%20library</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5450</link>
      <description>The Bug Library WordPress plugin before 2.1.1 does not check the file type on user-submitted bug reports, allowing an unauthenticated user to upload PHP files</description>
      <guid isPermaLink="false">CVE-2024-5450|2024-07-15T13:46:48.222Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6073|2024-07-15T13:27:34.759Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6073</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6073|2024-07-15T13:27:34.759Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6074|2024-07-15T15:20:02.866Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6074</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6074|2024-07-15T15:20:02.866Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2870|2024-07-15T15:15:45.498Z -- unknown -- socialdriver-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2870</link>
      <description>The socialdriver-framework WordPress plugin before 2024.04.30 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-2870|2024-07-15T15:15:45.498Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3026|2024-07-15T17:11:25.696Z -- unknown -- wordpress%20button%20plugin%20maxbuttons</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3026</link>
      <description>The WordPress Button Plugin MaxButtons WordPress plugin before 9.7.8 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3026|2024-07-15T17:11:25.696Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4602|2024-07-15T17:08:57.586Z -- unknown -- embed%20peertube%20playlist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4602</link>
      <description>The Embed Peertube Playlist WordPress plugin before 1.10 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4602|2024-07-15T17:08:57.586Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3751|2024-07-15T17:57:46.347Z -- unknown -- seriously%20simple%20podcasting</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3751</link>
      <description>The Seriously Simple Podcasting WordPress plugin before 3.3.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3751|2024-07-15T17:57:46.347Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5167|2024-07-15T20:26:30.529Z -- unknown -- cm%20email%20registration%20blacklist%20and%20whitelist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5167</link>
      <description>The CM Email Registration Blacklist and Whitelist WordPress plugin before 1.4.9 does not have CSRF check when adding or deleting an item from the blacklist or whitelist, which could allow attackers to make a logged in admin add or delete settings from the blacklist or whitelist menu via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5167|2024-07-15T20:26:30.529Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6334|2024-07-15T20:54:55.939Z -- unknown -- easy%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6334</link>
      <description>The Easy Table of Contents WordPress plugin before 2.0.67.1 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2024-6334|2024-07-15T20:54:55.939Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4269|2024-07-15T20:27:39.826Z -- unknown -- svg%20block</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4269</link>
      <description>The SVG Block WordPress plugin before 1.1.20 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4269|2024-07-15T20:27:39.826Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5627|2024-07-15T20:25:26.337Z -- unknown -- tournamatch</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5627</link>
      <description>The Tournamatch WordPress plugin before 4.6.1 does not sanitise and escape some parameters, which could allow users with a role as low as subscriber to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-5627|2024-07-15T20:25:26.337Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6072|2024-07-15T20:34:43.203Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6072</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2024-6072|2024-07-15T20:34:43.203Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3919|2024-07-16T14:01:03.480Z -- unknown -- openpgp%20form%20encryption%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3919</link>
      <description>The OpenPGP Form Encryption for WordPress plugin before 1.5.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-3919|2024-07-16T14:01:03.480Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6022|2024-07-16T18:01:53.746Z -- unknown -- contentlock</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6022</link>
      <description>The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6022|2024-07-16T18:01:53.746Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3978|2024-07-17T14:29:27.669Z -- unknown -- wordpress%20jitsi%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3978</link>
      <description>The WordPress Jitsi Shortcode WordPress plugin through 0.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3978|2024-07-17T14:29:27.669Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6076|2024-07-17T14:11:25.546Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6076</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6076|2024-07-17T14:11:25.546Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5283|2024-07-18T15:18:40.526Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5283</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5283|2024-07-18T15:18:40.526Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0779|2024-07-18T15:22:14.879Z -- unknown -- enjoy%20social%20feed%20plugin%20for%20wordpress%20website</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0779</link>
      <description>The Enjoy Social Feed plugin for WordPress website WordPress plugin through 6.2.2 does not have authorisation and CSRF in various function hooked to admin_init, allowing unauthenticated users to call them and unlink arbitrary users Instagram Account for example</description>
      <guid isPermaLink="false">CVE-2024-0779|2024-07-18T15:22:14.879Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6205|2024-07-19T06:00:06.257Z -- unknown -- payplus%20payment%20gateway</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6205</link>
      <description>The PayPlus Payment Gateway WordPress plugin before 6.6.9 does not properly sanitise and escape a parameter before using it in a SQL statement via a WooCommerce API route available to unauthenticated users, leading to an SQL injection vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-6205|2024-07-19T06:00:06.257Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5604|2024-07-19T06:00:05.940Z -- unknown -- bug%20library</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5604</link>
      <description>The Bug Library WordPress plugin before 2.1.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5604|2024-07-19T06:00:05.940Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7268|2024-07-19T06:00:04.159Z -- unknown -- artplacer%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7268</link>
      <description>The ArtPlacer Widget WordPress plugin before 2.21.2 does not have authorisation check in place when deleting widgets,  allowing ay authenticated users, such as subscriber, to delete arbitrary widgets</description>
      <guid isPermaLink="false">CVE-2023-7268|2024-07-19T06:00:04.159Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7269|2024-07-19T06:00:05.343Z -- unknown -- artplacer%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7269</link>
      <description>The ArtPlacer Widget WordPress plugin before 2.21.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-7269|2024-07-19T06:00:05.343Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7268|2024-07-19T15:22:52.403Z -- unknown -- artplacer%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7268</link>
      <description>The ArtPlacer Widget WordPress plugin before 2.21.2 does not have authorisation check in place when deleting widgets,  allowing ay authenticated users, such as subscriber, to delete arbitrary widgets</description>
      <guid isPermaLink="false">CVE-2023-7268|2024-07-19T15:22:52.403Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3977|2024-07-19T18:44:36.214Z -- unknown -- wordpress%20jitsi%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3977</link>
      <description>The WordPress Jitsi Shortcode WordPress plugin through 0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3977|2024-07-19T18:44:36.214Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5973|2024-07-22T10:54:51.675Z -- unknown -- masterstudy%20lms%20wordpress%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5973</link>
      <description>The MasterStudy LMS WordPress Plugin  WordPress plugin before 3.3.24 does not prevent students from creating instructor accounts, which could be used to get access to functionalities they shouldn't have.</description>
      <guid isPermaLink="false">CVE-2024-5973|2024-07-22T10:54:51.675Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5715|2024-07-22T14:36:18.912Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5715</link>
      <description>The wp-eMember WordPress plugin before 10.6.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5715|2024-07-22T14:36:18.912Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6205|2024-07-22T18:08:54.403Z -- unknown -- payplus%20payment%20gateway</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6205</link>
      <description>The PayPlus Payment Gateway WordPress plugin before 6.6.9 does not properly sanitise and escape a parameter before using it in a SQL statement via a WooCommerce API route available to unauthenticated users, leading to an SQL injection vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-6205|2024-07-22T18:08:54.403Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3111|2024-07-22T18:22:57.788Z -- unknown -- interactive%20content</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3111</link>
      <description>The Interactive Content  WordPress plugin before 1.15.8 does not validate uploads which could allow a Contributors and above to update malicious SVG files, leading to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2024-3111|2024-07-22T18:22:57.788Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4260|2024-07-23T06:00:02.295Z -- unknown -- page%20builder%20gutenberg%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4260</link>
      <description>The Page Builder Gutenberg Blocks  WordPress plugin before 3.1.12 does not prevent users from pinging arbitrary hosts via some of its shortcodes, which could allow high privilege users such as contributors to perform SSRF attacks.</description>
      <guid isPermaLink="false">CVE-2024-4260|2024-07-23T06:00:02.295Z</guid>
      <pubDate>Tue, 23 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6420|2024-07-23T06:00:03.289Z -- unknown -- hide%20my%20wp%20ghost</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6420</link>
      <description>The Hide My WP Ghost  WordPress plugin before 5.2.02 does not prevent redirects to the login page via the auth_redirect WordPress function, allowing an unauthenticated visitor to access the hidden login page.</description>
      <guid isPermaLink="false">CVE-2024-6420|2024-07-23T06:00:03.289Z</guid>
      <pubDate>Tue, 23 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6231|2024-07-23T06:00:02.805Z -- unknown -- request%20a%20quote</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6231</link>
      <description>The Request a Quote WordPress plugin before 2.4.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6231|2024-07-23T06:00:02.805Z</guid>
      <pubDate>Tue, 23 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4934|2024-07-23T16:18:36.778Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4934</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.0.2 does not validate and escape some of its Quiz fields before outputting them back in a page/post where the Quiz is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4934|2024-07-23T16:18:36.778Z</guid>
      <pubDate>Mon, 01 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5004|2024-07-23T20:38:56.103Z -- unknown -- cm%20popup%20plugin%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5004</link>
      <description>The CM Popup Plugin for WordPress  WordPress plugin before 1.6.6 does not sanitise and escape some of the campaign settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5004|2024-07-23T20:38:56.103Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4290|2024-07-23T20:32:33.688Z -- unknown -- sailthru%20triggermail</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4290</link>
      <description>The Sailthru Triggermail WordPress plugin through 1.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4290|2024-07-23T20:32:33.688Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2640|2024-07-24T14:19:44.930Z -- unknown -- watu%20quiz</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2640</link>
      <description>The Watu Quiz WordPress plugin before 3.4.1.2 does not sanitise and escape some of its settings, which could allow users such as authors (if they've been authorized by admins) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2024-2640|2024-07-24T14:19:44.930Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3582|2024-07-24T17:22:38.887Z -- unknown -- ungallery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3582</link>
      <description>The UnGallery WordPress plugin through 2.2.4 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3582|2024-07-24T17:22:38.887Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5169|2024-07-24T17:44:11.724Z -- unknown -- video%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5169</link>
      <description>The Video Widget WordPress plugin through 1.2.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5169|2024-07-24T17:44:11.724Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5529|2024-07-24T16:59:06.052Z -- unknown -- wp%20quicklatex</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5529</link>
      <description>The WP QuickLaTeX WordPress plugin before 3.8.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5529|2024-07-24T16:59:06.052Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5744|2024-07-24T19:45:02.054Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5744</link>
      <description>The wp-eMember WordPress plugin before 10.6.7 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2024-5744|2024-07-24T19:45:02.054Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5284|2024-07-24T19:50:58.352Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5284</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5284|2024-07-24T19:50:58.352Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6289|2024-07-24T19:12:38.336Z -- unknown -- wps%20hide%20login</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6289</link>
      <description>The WPS Hide Login WordPress plugin before 1.9.16.4 does not prevent redirects to the login page via the auth_redirect WordPress function, allowing an unauthenticated visitor to access the hidden login page.</description>
      <guid isPermaLink="false">CVE-2024-6289|2024-07-24T19:12:38.336Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5077|2024-07-24T19:55:36.796Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5077</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5077|2024-07-24T19:55:36.796Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1076|2024-07-24T19:53:18.089Z -- unknown -- ssl%20zen</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1076</link>
      <description>The SSL Zen  WordPress plugin before 4.6.0 only relies on the use of .htaccess to prevent visitors from accessing the site's generated private keys, which allows an attacker to read them if the site runs on a server who doesn't support .htaccess files, like NGINX.</description>
      <guid isPermaLink="false">CVE-2024-1076|2024-07-24T19:53:18.089Z</guid>
      <pubDate>Wed, 08 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2470|2024-07-25T13:22:27.439Z -- unknown -- simple%20ajax%20chat</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2470</link>
      <description>The Simple Ajax Chat  WordPress plugin before 20240412 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2470|2024-07-25T13:22:27.439Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6490|2024-07-26T06:00:04.555Z -- unknown -- master%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6490</link>
      <description>During testing of the Master Slider  WordPress plugin through 3.9.10, a CSRF vulnerability was found, which allows an unauthorized user to manipulate requests on behalf of the victim and thereby delete all of the sliders inside Master Slider  WordPress plugin through 3.9.10.</description>
      <guid isPermaLink="false">CVE-2024-6490|2024-07-26T06:00:04.555Z</guid>
      <pubDate>Fri, 26 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6094|2024-07-26T17:50:45.882Z -- unknown -- wp%20ulike</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6094</link>
      <description>The WP ULike  WordPress plugin before 4.7.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-6094|2024-07-26T17:50:45.882Z</guid>
      <pubDate>Wed, 24 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5883|2024-07-29T13:32:52.913Z -- unknown -- ultimate%20classified%20listings</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5883</link>
      <description>The Ultimate Classified Listings WordPress plugin before 1.3 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5883|2024-07-29T13:32:52.913Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6366|2024-07-29T13:39:48.942Z -- unknown -- user%20profile%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6366</link>
      <description>The User Profile Builder  WordPress plugin before 3.11.8 does not have proper authorisation, allowing unauthenticated users to upload media files via the async upload functionality of WP.</description>
      <guid isPermaLink="false">CVE-2024-6366|2024-07-29T13:39:48.942Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6487|2024-07-29T13:26:05.849Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6487</link>
      <description>The Inline Related Posts WordPress plugin before 3.8.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6487|2024-07-29T13:26:05.849Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5285|2024-07-29T13:35:29.846Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5285</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.2 does not have CSRF check in place when deleting affiliates, which could allow attackers to make a logged in user change delete them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5285|2024-07-29T13:35:29.846Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6271|2024-07-29T15:43:02.582Z -- unknown -- community%20events</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6271</link>
      <description>The Community Events WordPress plugin before 1.5 does not have CSRF check in place when deleting events, which could allow attackers to make a logged in admin delete arbitrary events via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6271|2024-07-29T15:43:02.582Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6366|2024-07-29T18:35:53.964Z -- unknown -- user%20profile%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6366</link>
      <description>The User Profile Builder  WordPress plugin before 3.11.8 does not have proper authorisation, allowing unauthenticated users to upload media files via the async upload functionality of WP.</description>
      <guid isPermaLink="false">CVE-2024-6366|2024-07-29T18:35:53.964Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6420|2024-07-29T18:54:21.749Z -- unknown -- hide%20my%20wp%20ghost</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6420</link>
      <description>The Hide My WP Ghost  WordPress plugin before 5.2.02 does not prevent redirects to the login page via the auth_redirect WordPress function, allowing an unauthenticated visitor to access the hidden login page.</description>
      <guid isPermaLink="false">CVE-2024-6420|2024-07-29T18:54:21.749Z</guid>
      <pubDate>Tue, 23 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4752|2024-07-29T20:01:14.920Z -- unknown -- eventon</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4752</link>
      <description>The EventON WordPress plugin before 2.2.15 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4752|2024-07-29T20:01:14.920Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1286|2024-07-30T13:47:03.767Z -- unknown -- pmpro-membership-maps</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1286</link>
      <description>The pmpro-membership-maps WordPress plugin before 0.7 does not prevent users with at least the contributor role from leaking sensitive information about users with a membership on the site.</description>
      <guid isPermaLink="false">CVE-2024-1286|2024-07-30T13:47:03.767Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5809|2024-07-30T13:42:15.712Z -- unknown -- wp%20ajax%20contact%20form</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5809</link>
      <description>The WP Ajax Contact Form WordPress plugin through 2.2.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against admin users</description>
      <guid isPermaLink="false">CVE-2024-5809|2024-07-30T13:42:15.712Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6224|2024-07-30T13:28:44.071Z -- unknown -- send%20email%20only%20on%20reply%20to%20my%20comment</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6224</link>
      <description>The Send email only on Reply to My Comment WordPress plugin through 1.0.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6224|2024-07-30T13:28:44.071Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1287|2024-07-30T13:18:26.101Z -- unknown -- pmpro-member-directory</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1287</link>
      <description>The pmpro-member-directory WordPress plugin before 1.2.6 does not prevent users with at least the contributor role from leaking other users' sensitive information, including password hashes.</description>
      <guid isPermaLink="false">CVE-2024-1287|2024-07-30T13:18:26.101Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4096|2024-07-30T13:32:50.382Z -- unknown -- responsive%20tabs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4096</link>
      <description>The Responsive Tabs WordPress plugin through 4.0.8 does not sanitise and escape some of its Tab settings, which could allow high privilege users such as Contributors and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4096|2024-07-30T13:32:50.382Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3628|2024-07-30T15:17:06.940Z -- unknown -- easyevent</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3628</link>
      <description>The EasyEvent WordPress plugin through 1.0.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-3628|2024-07-30T15:17:06.940Z</guid>
      <pubDate>Tue, 07 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4483|2024-07-30T16:01:11.284Z -- unknown -- email%20encoder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4483</link>
      <description>The Email Encoder  WordPress plugin before 2.2.2 does not escape the WP_Email_Encoder_Bundle_options[protection_text] parameter before outputting it back in an attribute in an admin page, leading to a Stored Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-4483|2024-07-30T16:01:11.284Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1286|2024-07-30T15:28:17.011Z -- unknown -- pmpro-membership-maps</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1286</link>
      <description>The pmpro-membership-maps WordPress plugin before 0.7 does not prevent users with at least the contributor role from leaking sensitive information about users with a membership on the site.</description>
      <guid isPermaLink="false">CVE-2024-1286|2024-07-30T15:28:17.011Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5807|2024-07-30T15:46:25.577Z -- unknown -- business%20card</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5807</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not prevent high privilege users like administrators from uploading malicious PHP files, which could allow them to run arbitrary code on servers hosting their site, even in MultiSite configurations.</description>
      <guid isPermaLink="false">CVE-2024-5807|2024-07-30T15:46:25.577Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5882|2024-07-30T15:51:33.727Z -- unknown -- ultimate%20classified%20listings</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5882</link>
      <description>The Ultimate Classified Listings WordPress plugin before 1.3 does not validate the `ucl_page` and `layout` parameters allowing unauthenticated users to access PHP files on the server from the listings page</description>
      <guid isPermaLink="false">CVE-2024-5882|2024-07-30T15:51:33.727Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5765|2024-07-30T19:26:01.409Z -- unknown -- wpstickybar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5765</link>
      <description>The WpStickyBar  WordPress plugin through 2.1.0 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2024-5765|2024-07-30T19:26:01.409Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1956|2024-07-30T19:28:14.012Z -- unknown -- wpb-show-core</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1956</link>
      <description>The wpb-show-core WordPress plugin before 2.7 does not sanitise and escape the parameters before outputting it back in the response of an unauthenticated request, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-1956|2024-07-30T19:28:14.012Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6226|2024-07-30T19:20:14.781Z -- unknown -- wpstickybar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6226</link>
      <description>The WpStickyBar  WordPress plugin through 2.1.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6226|2024-07-30T19:20:14.781Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6408|2024-07-31T13:30:13.727Z -- unknown -- slider%20by%2010web</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6408</link>
      <description>The Slider by 10Web  WordPress plugin before 1.2.57 does not sanitise and escape its Slider Title, which could allow high privilege users such as editors and above to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-6408|2024-07-31T13:30:13.727Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6165|2024-07-31T13:58:59.116Z -- unknown -- wanotifier</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6165</link>
      <description>The WANotifier  WordPress plugin before 2.6.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6165|2024-07-31T13:58:59.116Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6067|2024-07-31T15:24:22.699Z -- unknown -- wp%20user%20profile%20avatar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6067</link>
      <description>The WP User Profile Avatar WordPress plugin through 1.0.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-6067|2024-07-31T15:24:22.699Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3632|2024-07-31T15:38:13.804Z -- unknown -- smart%20image%20gallery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3632</link>
      <description>The Smart Image Gallery WordPress plugin before 1.0.19 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3632|2024-07-31T15:38:13.804Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3986|2024-07-31T15:31:25.729Z -- unknown -- sportspress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3986</link>
      <description>The SportsPress  WordPress plugin before 2.7.22 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3986|2024-07-31T15:31:25.729Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1660|2024-07-31T15:19:16.546Z -- unknown -- top%20bar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1660</link>
      <description>The Top Bar WordPress plugin before 3.0.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1660|2024-07-31T15:19:16.546Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6695|2024-07-31T15:06:31.038Z -- unknown -- user%20profile%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6695</link>
      <description>it's possible for an attacker to gain administrative access without having any kind of account on the targeted site and perform unauthorized actions. This is due to improper logic flow on the user registration process.</description>
      <guid isPermaLink="false">CVE-2024-6695|2024-07-31T15:06:31.038Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1845|2024-07-31T17:22:15.089Z -- unknown -- vikrentcar%20car%20rental%20management%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1845</link>
      <description>The VikRentCar Car Rental Management System WordPress plugin before 1.3.2 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-1845|2024-07-31T17:22:15.089Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5573|2024-07-31T20:48:17.484Z -- unknown -- easy%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5573</link>
      <description>The Easy Table of Contents WordPress plugin before 2.0.66 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-5573|2024-07-31T20:48:17.484Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3983|2024-08-01T13:19:56.882Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3983</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 30.1 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting customers via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3983|2024-08-01T13:19:56.882Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4090|2024-08-01T13:36:51.336Z -- unknown -- floating%20notification%20bar%2C%20sticky%20menu%20on%20scroll%2C%20announcement%20banner%2C%20and%20sticky%20header%20for%20any%20theme</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4090</link>
      <description>The Floating Notification Bar, Sticky Menu on Scroll, Announcement Banner, and Sticky Header for Any   WordPress plugin before 2.7.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-4090|2024-08-01T13:36:51.336Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6529|2024-08-01T13:26:14.032Z -- unknown -- ultimate%20classified%20listings</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6529</link>
      <description>The Ultimate Classified Listings WordPress plugin before 1.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6529|2024-08-01T13:26:14.032Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6272|2024-08-01T15:00:41.459Z -- unknown -- spidercontacts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6272</link>
      <description>The SpiderContacts WordPress plugin through 1.1.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6272|2024-08-01T15:00:41.459Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0250|2024-08-01T17:41:16.271Z -- unknown -- analytics%20insights%20for%20google%20analytics%204%20%28aiwp%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0250</link>
      <description>The Analytics Insights for Google Analytics 4 (AIWP) WordPress plugin before 6.3 is vulnerable to Open Redirect due to insufficient validation on the redirect oauth2callback.php file. This makes it possible for unauthenticated attackers to redirect users to potentially malicious sites if they can successfully trick them into performing an action.</description>
      <guid isPermaLink="false">CVE-2024-0250|2024-08-01T17:41:16.271Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6412|2024-08-01T17:41:48.337Z -- unknown -- html%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6412</link>
      <description>The HTML Forms  WordPress plugin before 1.3.34 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6412|2024-08-01T17:41:48.337Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6294|2024-08-01T17:56:14.455Z -- unknown -- popup%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6294</link>
      <description>The Popup Builder WordPress plugin before 4.2.6 does not validate a parameter before making a request to it, which could allow users with the administrator role to perform SSRF attack in Multisite WordPress configurations.</description>
      <guid isPermaLink="false">CVE-2023-6294|2024-08-01T17:56:14.455Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:06:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0248|2024-08-01T17:41:16.584Z -- unknown -- eazydocs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0248</link>
      <description>The EazyDocs WordPress plugin before 2.4.0 re-introduced CVE-2023-6029 (https://wpscan.com/vulnerability/7a0aaf85-8130-4fd7-8f09-f8edc929597e/) in 2.3.8, allowing any authenticated users, such as subscriber to delete arbitrary posts, as well as add and delete documents/sections. The issue was partially fixed in 2.3.9.</description>
      <guid isPermaLink="false">CVE-2024-0248|2024-08-01T17:41:16.584Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2583|2024-08-01T19:18:47.959Z -- unknown -- wp%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2583</link>
      <description>The WP Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 7.0.5 does not properly escape some of its shortcodes attributes before they are echoed back to users, making it possible for users with the contributor role to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-2583|2024-08-01T19:18:47.959Z</guid>
      <pubDate>Sat, 13 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2310|2024-08-01T19:11:52.506Z -- unknown -- wp%20google%20review%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2310</link>
      <description>The WP Google Review Slider WordPress plugin before 13.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2310|2024-08-01T19:11:52.506Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2908|2024-08-01T19:25:42.171Z -- unknown -- call%20now%20button</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2908</link>
      <description>The Call Now Button  WordPress plugin before 1.4.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-2908|2024-08-01T19:25:42.171Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2470|2024-08-01T19:11:53.531Z -- unknown -- simple%20ajax%20chat</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2470</link>
      <description>The Simple Ajax Chat  WordPress plugin before 20240412 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2470|2024-08-01T19:11:53.531Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2762|2024-08-01T19:25:41.717Z -- unknown -- foogallery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2762</link>
      <description>The FooGallery  WordPress plugin before 2.4.15, foogallery-premium WordPress plugin before 2.4.15 does not validate and escape some of its Gallery settings before outputting them back in the page, which could allow users with a role as low as Author to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-2762|2024-08-01T19:25:41.717Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2439|2024-08-01T19:11:53.536Z -- unknown -- salon%20booking%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2439</link>
      <description>The Salon booking system WordPress plugin through 9.6.5 does not sanitise and escape some of its settings, which could allow high privilege users such as Editor to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2439|2024-08-01T19:11:53.536Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2376|2024-08-01T19:11:53.485Z -- unknown -- wpqa%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2376</link>
      <description>The WPQA Builder WordPress plugin before 6.1.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2376|2024-08-01T19:11:53.485Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2429|2024-08-01T19:11:53.535Z -- unknown -- salon%20booking%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2429</link>
      <description>The Salon booking system WordPress plugin through 9.6.5 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2429|2024-08-01T19:11:53.535Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2404|2024-08-01T19:11:53.446Z -- unknown -- better%20comments</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2404</link>
      <description>The Better Comments WordPress plugin before 1.5.6 does not sanitise and escape some of its settings, which could allow low privilege users such as Subscribers to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-2404|2024-08-01T19:11:53.446Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2118|2024-08-01T19:03:39.004Z -- unknown -- social%20media%20share%20buttons%20%26%20social%20sharing%20icons</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2118</link>
      <description>The Social Media Share Buttons &amp; Social Sharing Icons WordPress plugin before 2.8.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2118|2024-08-01T19:03:39.004Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2040|2024-08-01T19:03:37.841Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2040</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make users join private groups via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2040|2024-08-01T19:03:37.841Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2857|2024-08-01T19:25:42.160Z -- unknown -- simple%20buttons%20creator</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2857</link>
      <description>The Simple Buttons Creator WordPress plugin through 1.04 does not have any authorisation as well as CSRF in its add button function, allowing unauthenticated users to call them either directly or via CSRF attacks. Furthermore, due to the lack of sanitisation and escaping, it could also allow them to perform Stored Cross-Site Scripting attacks against logged in admins.</description>
      <guid isPermaLink="false">CVE-2024-2857|2024-08-01T19:25:42.160Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2441|2024-08-01T19:11:53.563Z -- unknown -- vikbooking%20hotel%20booking%20engine%20%26%20pms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2441</link>
      <description>The VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8 allows direct access to menus, allowing an authenticated user with subscriber privileges or above, to bypass authorization and access settings of the VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8's they shouldn't be allowed to.</description>
      <guid isPermaLink="false">CVE-2024-2441|2024-08-01T19:11:53.563Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3111|2024-08-01T19:32:42.873Z -- unknown -- interactive%20content</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3111</link>
      <description>The Interactive Content  WordPress plugin before 1.15.8 does not validate uploads which could allow a Contributors and above to update malicious SVG files, leading to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2024-3111|2024-08-01T19:32:42.873Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2837|2024-08-01T19:25:42.125Z -- unknown -- wp%20chat%20app</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2837</link>
      <description>The WP Chat App WordPress plugin before 3.6.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admins to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2837|2024-08-01T19:25:42.125Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2836|2024-08-01T19:25:42.038Z -- unknown -- social%20share%2C%20social%20login%20and%20social%20comments%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2836</link>
      <description>The Social Share, Social Login and Social Comments Plugin  WordPress plugin before 7.13.64 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2836|2024-08-01T19:25:42.038Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2263|2024-08-01T19:03:39.471Z -- unknown -- themify</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2263</link>
      <description>Themify  WordPress plugin before 1.4.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-2263|2024-08-01T19:03:39.471Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3075|2024-08-01T19:32:42.578Z -- unknown -- mm-email2image</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3075</link>
      <description>The MM-email2image WordPress plugin through 0.2.5 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3075|2024-08-01T19:32:42.578Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2509|2024-08-01T19:18:46.944Z -- unknown -- gutenberg%20blocks%20by%20kadence%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2509</link>
      <description>The Gutenberg Blocks by Kadence Blocks WordPress plugin before 3.2.26 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2509|2024-08-01T19:18:46.944Z</guid>
      <pubDate>Fri, 05 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2744|2024-08-01T19:25:42.000Z -- unknown -- nextgen%20gallery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2744</link>
      <description>The NextGEN Gallery  WordPress plugin before 3.59.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2744|2024-08-01T19:25:42.000Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3032|2024-08-01T19:32:42.520Z -- unknown -- themify%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3032</link>
      <description>Themify Builder WordPress plugin before 7.5.8 does not validate a parameter before redirecting the user to its value, leading to an Open Redirect issue</description>
      <guid isPermaLink="false">CVE-2024-3032|2024-08-01T19:32:42.520Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3060|2024-08-01T19:32:42.649Z -- unknown -- enl%20newsletter</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3060</link>
      <description>The ENL Newsletter WordPress plugin through 1.0.1 does not sanitize and escape a parameter before using it in a SQL statement, allowing admin+ to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2024-3060|2024-08-01T19:32:42.649Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2234|2024-08-01T19:03:39.187Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2234</link>
      <description>The Himer WordPress theme before 2.1.1 does not sanitise and escape some of its Post settings, which could allow high privilege users such as Contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2234|2024-08-01T19:03:39.187Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2505|2024-08-01T19:18:46.478Z -- unknown -- gamipress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2505</link>
      <description>The GamiPress  WordPress plugin before 6.8.9's access control mechanism fails to properly restrict access to its settings, permitting Authors to manipulate requests and extend access to lower privileged users, like Subscribers, despite initial settings prohibiting such access. This vulnerability resembles broken access control, enabling unauthorized users to modify critical GamiPress  WordPress plugin before 6.8.9 configurations.</description>
      <guid isPermaLink="false">CVE-2024-2505|2024-08-01T19:18:46.478Z</guid>
      <pubDate>Mon, 29 Apr 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2603|2024-08-01T19:18:48.123Z -- unknown -- salon%20booking%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2603</link>
      <description>The Salon booking system WordPress plugin through 9.6.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin (or editor depending on Salon booking system WordPress plugin through 9.6.5 configuration) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2603|2024-08-01T19:18:48.123Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2761|2024-08-01T19:25:41.441Z -- unknown -- genesis%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2761</link>
      <description>The Genesis Blocks WordPress plugin before 3.1.3 does not properly escape data input provided to some of its blocks, allowing using with at least contributor privileges to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-2761|2024-08-01T19:25:41.441Z</guid>
      <pubDate>Fri, 19 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2444|2024-08-01T19:11:53.590Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2444</link>
      <description>The Inline Related Posts WordPress plugin before 3.5.0 does not sanitise and escape some of its settings, which could allow high privilege users such as Admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2444|2024-08-01T19:11:53.590Z</guid>
      <pubDate>Sat, 06 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2858|2024-08-01T19:25:42.166Z -- unknown -- simple%20buttons%20creator</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2858</link>
      <description>The Simple Buttons Creator WordPress plugin through 1.04 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2858|2024-08-01T19:25:42.166Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2309|2024-08-01T19:11:53.339Z -- unknown -- wp%20staging%20wordpress%20backup%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2309</link>
      <description>The WP STAGING WordPress Backup Plugin  WordPress plugin before 3.4.0, wp-staging-pro WordPress plugin before 5.4.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2309|2024-08-01T19:11:53.339Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2696|2024-08-01T19:18:48.239Z -- unknown -- socialdriver-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2696</link>
      <description>The socialdriver-framework WordPress plugin before 2024.04.30 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2696|2024-08-01T19:18:48.239Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2231|2024-08-01T19:03:39.156Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2231</link>
      <description>The  allows any authenticated user to join a private group due to a missing authorization check on a function</description>
      <guid isPermaLink="false">CVE-2024-2231|2024-08-01T19:03:39.156Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2220|2024-08-01T19:03:39.366Z -- unknown -- button%20contact%20vr</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2220</link>
      <description>The Button contact VR WordPress plugin through 4.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2220|2024-08-01T19:03:39.366Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3059|2024-08-01T19:32:42.574Z -- unknown -- enl%20newsletter</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3059</link>
      <description>The ENL Newsletter WordPress plugin through 1.0.1 does not have CSRF checks in some places, which could allow attackers to make logged in admins delete arbitrary Campaigns via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3059|2024-08-01T19:32:42.574Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2739|2024-08-01T19:25:41.190Z -- unknown -- advanced%20search</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2739</link>
      <description>The Advanced Search WordPress plugin through 1.1.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2739|2024-08-01T19:25:41.190Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2729|2024-08-01T19:25:41.320Z -- unknown -- otter%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2729</link>
      <description>The Otter Blocks  WordPress plugin before 2.6.6 does not properly escape its mainHeadings blocks' attribute before appending it to the final rendered block, allowing contributors to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-2729|2024-08-01T19:25:41.320Z</guid>
      <pubDate>Thu, 18 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2375|2024-08-01T19:11:53.432Z -- unknown -- wpqa%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2375</link>
      <description>The WPQA Builder WordPress plugin before 6.1.1 does not sanitise and escape some of its Slider settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2375|2024-08-01T19:11:53.432Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2262|2024-08-01T19:03:39.362Z -- unknown -- themify</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2262</link>
      <description>Themify  WordPress plugin before 1.4.4 does not have CSRF check in its bulk action, which could allow attackers to make logged in users delete arbitrary filters via CSRF attack, granted they know the related filter slugs</description>
      <guid isPermaLink="false">CVE-2024-2262|2024-08-01T19:03:39.362Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3050|2024-08-01T19:32:42.587Z -- unknown -- site%20reviews</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3050</link>
      <description>The Site Reviews WordPress plugin before 7.0.0 retrieves client IP addresses from potentially untrusted headers, allowing an attacker to manipulate its value. This may be used to bypass IP-based blocking</description>
      <guid isPermaLink="false">CVE-2024-3050|2024-08-01T19:32:42.587Z</guid>
      <pubDate>Wed, 29 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2218|2024-08-01T19:03:39.405Z -- unknown -- luckywp%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2218</link>
      <description>The LuckyWP Table of Contents WordPress plugin through 2.1.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2218|2024-08-01T19:03:39.405Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2189|2024-08-01T19:03:39.100Z -- unknown -- social%20icons%20widget%20%26%20block%20by%20wpzoom</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2189</link>
      <description>The Social Icons Widget &amp; Block by WPZOOM WordPress plugin before 4.2.18 does not sanitise and escape some of its Widget settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2189|2024-08-01T19:03:39.100Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2972|2024-08-01T19:32:42.539Z -- unknown -- floating%20chat%20widget%3A%20contact%20chat%20icons%2C%20whatsapp%2C%20telegram%20chat%2C%20line%20messenger%2C%20wechat%2C%20email%2C%20sms%2C%20call%20button</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2972</link>
      <description>The Floating Chat Widget: Contact Chat Icons, WhatsApp, Telegram Chat, Line Messenger, WeChat, Email, SMS, Call Button  WordPress plugin before 3.1.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2972|2024-08-01T19:32:42.539Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3048|2024-08-01T19:32:42.570Z -- unknown -- bannerlid</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3048</link>
      <description>The Bannerlid WordPress plugin through 1.1.0 does not escape generated URLs before outputting them in attributes, leading to Reflected Cross-Site Scripting which could be used against high privilege users such as administrators</description>
      <guid isPermaLink="false">CVE-2024-3048|2024-08-01T19:32:42.570Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2870|2024-08-01T19:25:42.186Z -- unknown -- socialdriver-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2870</link>
      <description>The socialdriver-framework WordPress plugin before 2024.04.30 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-2870|2024-08-01T19:25:42.186Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2430|2024-08-01T19:11:53.499Z -- unknown -- website%20content%20in%20page%20or%20post</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2430</link>
      <description>The Website Content in Page or Post WordPress plugin before 2024.04.09 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2430|2024-08-01T19:11:53.499Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2749|2024-08-01T19:25:41.264Z -- unknown -- vikbooking%20hotel%20booking%20engine%20%26%20pms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2749</link>
      <description>The VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8's access control mechanism fails to properly restrict access to its settings, permitting any users that can access a menu to manipulate requests and perform unauthorized actions such as editing, renaming or deleting (categories for example) despite initial settings prohibiting such access. This vulnerability resembles broken access control, enabling unauthorized users to modify critical VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8 configurations.</description>
      <guid isPermaLink="false">CVE-2024-2749|2024-08-01T19:25:41.264Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1983|2024-08-01T19:17:11.130Z -- unknown -- simple%20ajax%20chat</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1983</link>
      <description>The Simple Ajax Chat  WordPress plugin before 20240223 does not prevent visitors from using malicious Names when using the chat, which will be reflected unsanitized to other users.</description>
      <guid isPermaLink="false">CVE-2024-1983|2024-08-01T19:17:11.130Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2405|2024-08-01T19:11:53.477Z -- unknown -- float%20menu</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2405</link>
      <description>The Float menu  WordPress plugin before 6.0.1 does not have CSRF check in its bulk actions, which could allow attackers to make logged in admin delete arbitrary menu via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2024-2405|2024-08-01T19:11:53.477Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2159|2024-08-01T19:03:39.309Z -- unknown -- social%20sharing%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2159</link>
      <description>The Social Sharing Plugin  WordPress plugin before 3.3.61 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2159|2024-08-01T19:03:39.309Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2697|2024-08-01T19:18:48.397Z -- unknown -- socialdriver-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2697</link>
      <description>The socialdriver-framework WordPress plugin before 2024.0.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2024-2697|2024-08-01T19:18:48.397Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2402|2024-08-01T19:11:53.525Z -- unknown -- better%20comments</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2402</link>
      <description>The Better Comments WordPress plugin before 1.5.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2402|2024-08-01T19:11:53.525Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3026|2024-08-01T19:32:42.611Z -- unknown -- wordpress%20button%20plugin%20maxbuttons</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3026</link>
      <description>The WordPress Button Plugin MaxButtons WordPress plugin before 9.7.8 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3026|2024-08-01T19:32:42.611Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2235|2024-08-01T19:03:39.198Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2235</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make users vote on any polls, including those they don't have access to via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2235|2024-08-01T19:03:39.198Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3113|2024-08-01T19:32:42.701Z -- unknown -- formflow%3A%20whatsapp%20social%20and%20advanced%20form%20builder%20with%20easy%20lead%20collection</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3113</link>
      <description>The FormFlow: WhatsApp Social and Advanced Form Builder with Easy Lead Collection WordPress plugin before 2.12.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3113|2024-08-01T19:32:42.701Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3112|2024-08-01T19:32:42.695Z -- unknown -- quotes%20and%20tips%20by%20bestwebsoft</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3112</link>
      <description>The Quotes and Tips by BestWebSoft WordPress plugin before 1.45 does not properly validate image files uploaded, allowing high privilege users such as admin to upload arbitrary files on the server even when they should not be allowed to (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3112|2024-08-01T19:32:42.695Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2907|2024-08-01T19:25:42.145Z -- unknown -- agca</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2907</link>
      <description>The AGCA  WordPress plugin before 7.2.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-2907|2024-08-01T19:25:42.145Z</guid>
      <pubDate>Thu, 25 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2428|2024-08-01T19:11:53.504Z -- unknown -- the%20ultimate%20video%20player%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2428</link>
      <description>The Ultimate Video Player For WordPress  WordPress plugin before 2.2.3 does not have proper capability check when updating its settings via a REST route, allowing Contributor and above users to update them. Furthermore, due to the lack of escaping in one of the settings, this also allows them to perform Stored XSS attacks</description>
      <guid isPermaLink="false">CVE-2024-2428|2024-08-01T19:11:53.504Z</guid>
      <pubDate>Wed, 10 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2233|2024-08-01T19:03:39.397Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2233</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks. These include declining and accepting group invitations or leaving a group</description>
      <guid isPermaLink="false">CVE-2024-2233|2024-08-01T19:03:39.397Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2101|2024-08-01T19:03:38.483Z -- unknown -- salon%20booking%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2101</link>
      <description>The Salon booking system WordPress plugin before 9.6.3 does not properly sanitize and escape the 'Mobile Phone' field when booking an appointment, allowing customers to conduct Stored Cross-Site Scripting attacks. The payload gets triggered when an admin visits the 'Customers' page and the malicious script is executed in the admin context.</description>
      <guid isPermaLink="false">CVE-2024-2101|2024-08-01T19:03:38.483Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3058|2024-08-01T19:32:42.623Z -- unknown -- enl%20newsletter</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3058</link>
      <description>The ENL Newsletter WordPress plugin through 1.0.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3058|2024-08-01T19:32:42.623Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3076|2024-08-01T19:32:42.564Z -- unknown -- mm-email2image</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3076</link>
      <description>The MM-email2image WordPress plugin through 0.2.5 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3076|2024-08-01T19:32:42.564Z</guid>
      <pubDate>Fri, 26 Apr 2024 13:23:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2369|2024-08-01T19:11:53.453Z -- unknown -- page%20builder%20gutenberg%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2369</link>
      <description>The Page Builder Gutenberg Blocks WordPress plugin before 3.1.7 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2369|2024-08-01T19:11:53.453Z</guid>
      <pubDate>Tue, 02 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2278|2024-08-01T19:11:52.117Z -- unknown -- themify</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2278</link>
      <description>Themify  WordPress plugin before 1.4.4 does not sanitise and escape some of its Filters settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2278|2024-08-01T19:11:52.117Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2322|2024-08-01T19:11:52.617Z -- unknown -- woocommerce%20cart%20abandonment%20recovery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2322</link>
      <description>The WooCommerce Cart Abandonment Recovery WordPress plugin before 1.2.27 does not have CSRF check in its bulk actions, which could allow attackers to make logged in admins delete arbitrary email templates as well as delete and unsubscribe users from abandoned orders via CSRF attacks.</description>
      <guid isPermaLink="false">CVE-2024-2322|2024-08-01T19:11:52.617Z</guid>
      <pubDate>Wed, 03 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2640|2024-08-01T19:18:48.172Z -- unknown -- watu%20quiz</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2640</link>
      <description>The Watu Quiz WordPress plugin before 3.4.1.2 does not sanitise and escape some of its settings, which could allow users such as authors (if they've been authorized by admins) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2024-2640|2024-08-01T19:18:48.172Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2102|2024-08-01T19:03:38.794Z -- unknown -- salon%20booking%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2102</link>
      <description>The Salon booking system WordPress plugin before 9.6.3 does not properly sanitize and escape the 'Mobile Phone' field and 'sms_prefix' parameter when booking an appointment, allowing customers to conduct Stored Cross-Site Scripting attacks. The payload gets triggered when an admin visits the 'Bookings' page and the malicious script is executed in the admin context.</description>
      <guid isPermaLink="false">CVE-2024-2102|2024-08-01T19:03:38.794Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5488|2024-08-01T21:11:12.790Z -- unknown -- seopress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5488</link>
      <description>The SEOPress  WordPress plugin before 7.9 does not properly protect some of its REST API routes, which combined with another Object Injection vulnerability can allow unauthenticated attackers to unserialize malicious gadget chains, compromising the site if a suitable chain is present.</description>
      <guid isPermaLink="false">CVE-2024-5488|2024-08-01T21:11:12.790Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6073|2024-08-01T21:25:03.205Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6073</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6073|2024-08-01T21:25:03.205Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5286|2024-08-01T21:11:12.434Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5286</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5286|2024-08-01T21:11:12.434Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6021|2024-08-01T21:25:03.197Z -- unknown -- donation%20block%20for%20paypal</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6021</link>
      <description>The Donation Block For PayPal WordPress plugin through 2.1.0 does not sanitise and escape form submissions, leading to a stored cross-site scripting vulnerability</description>
      <guid isPermaLink="false">CVE-2024-6021|2024-08-01T21:25:03.197Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5444|2024-08-01T21:11:12.795Z -- unknown -- bible%20text</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5444</link>
      <description>The Bible Text WordPress plugin through 0.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5444|2024-08-01T21:11:12.795Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5287|2024-08-01T21:11:12.359Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5287</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in user change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5287|2024-08-01T21:11:12.359Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5447|2024-08-01T21:11:12.768Z -- unknown -- paypal%20pay%20now%2C%20buy%20now%2C%20donation%20and%20cart%20buttons%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5447</link>
      <description>The PayPal Pay Now, Buy Now, Donation and Cart Buttons Shortcode WordPress plugin through 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5447|2024-08-01T21:11:12.768Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5155|2024-08-01T21:03:10.979Z -- unknown -- inquiry%20cart</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5155</link>
      <description>The Inquiry cart WordPress plugin through 3.4.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5155|2024-08-01T21:03:10.979Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6205|2024-08-01T21:33:05.100Z -- unknown -- payplus%20payment%20gateway</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6205</link>
      <description>The PayPlus Payment Gateway WordPress plugin before 6.6.9 does not properly sanitise and escape a parameter before using it in a SQL statement via a WooCommerce API route available to unauthenticated users, leading to an SQL injection vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-6205|2024-08-01T21:33:05.100Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5280|2024-08-01T21:11:12.346Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5280</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make non-logged in users execute an XSS payload via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5280|2024-08-01T21:11:12.346Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5028|2024-08-01T21:03:09.657Z -- unknown -- cm%20wordpress%20search%20and%20replace%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5028</link>
      <description>The CM WordPress Search And Replace Plugin WordPress plugin before 1.3.9 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5028|2024-08-01T21:03:09.657Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5151|2024-08-01T21:03:10.976Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5151</link>
      <description>The SULly WordPress plugin before 4.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5151|2024-08-01T21:03:10.976Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5765|2024-08-01T21:18:07.051Z -- unknown -- wpstickybar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5765</link>
      <description>The WpStickyBar  WordPress plugin through 2.1.0 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2024-5765|2024-08-01T21:18:07.051Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5644|2024-08-01T21:18:06.697Z -- unknown -- tournamatch</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5644</link>
      <description>The Tournamatch WordPress plugin before 4.6.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5644|2024-08-01T21:18:06.697Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5473|2024-08-01T21:11:12.795Z -- unknown -- simple%20photoswipe</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5473</link>
      <description>The Simple Photoswipe WordPress plugin through 0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5473|2024-08-01T21:11:12.795Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5809|2024-08-01T21:25:02.945Z -- unknown -- wp%20ajax%20contact%20form</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5809</link>
      <description>The WP Ajax Contact Form WordPress plugin through 2.2.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against admin users</description>
      <guid isPermaLink="false">CVE-2024-5809|2024-08-01T21:25:02.945Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5730|2024-08-01T21:18:07.116Z -- unknown -- pagerank%20tools</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5730</link>
      <description>The Pagerank tools WordPress plugin through 1.1.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5730|2024-08-01T21:18:07.116Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5341|2024-08-01T21:11:12.428Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5341</link>
      <description>The The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'size' attribute of the Heading Title widget in all versions up to, and including, 5.5.4 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2024-5341|2024-08-01T21:11:12.428Z</guid>
      <pubDate>Thu, 30 May 2024 05:33:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5744|2024-08-01T21:18:07.071Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5744</link>
      <description>The wp-eMember WordPress plugin before 10.6.7 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2024-5744|2024-08-01T21:18:07.071Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5975|2024-08-01T21:25:03.152Z -- unknown -- cz%20loan%20management</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5975</link>
      <description>The CZ Loan Management WordPress plugin through 1.1 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2024-5975|2024-08-01T21:25:03.152Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6334|2024-08-01T21:33:05.449Z -- unknown -- easy%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6334</link>
      <description>The Easy Table of Contents WordPress plugin before 2.0.67.1 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2024-6334|2024-08-01T21:33:05.449Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5074|2024-08-01T21:03:10.754Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5074</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5074|2024-08-01T21:03:10.754Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5442|2024-08-01T21:11:12.789Z -- unknown -- photo%20gallery%2C%20sliders%2C%20proofing%20and%20themes</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5442</link>
      <description>The Photo Gallery, Sliders, Proofing and   WordPress plugin before 3.59.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5442|2024-08-01T21:11:12.789Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6271|2024-08-01T21:33:05.310Z -- unknown -- community%20events</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6271</link>
      <description>The Community Events WordPress plugin before 1.5 does not have CSRF check in place when deleting events, which could allow attackers to make a logged in admin delete arbitrary events via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6271|2024-08-01T21:33:05.310Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5713|2024-08-01T21:18:07.087Z -- unknown -- if-so%20dynamic%20content%20personalization</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5713</link>
      <description>The If-So Dynamic Content Personalization WordPress plugin before 1.8.0.4 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2024-5713|2024-08-01T21:18:07.087Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5344|2024-08-01T21:11:12.452Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5344</link>
      <description>The The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the ‘forgoturl’ attribute within the plugin's WP Login &amp; Register widget in all versions up to, and including, 5.5.6 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description>
      <guid isPermaLink="false">CVE-2024-5344|2024-08-01T21:11:12.452Z</guid>
      <pubDate>Fri, 21 Jun 2024 02:05:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5727|2024-08-01T21:18:06.947Z -- unknown -- widget4call</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5727</link>
      <description>The Widget4Call WordPress plugin through 1.0.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5727|2024-08-01T21:18:06.947Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6244|2024-08-01T21:33:05.242Z -- unknown -- pz%20frontend%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6244</link>
      <description>The PZ Frontend Manager WordPress plugin before 1.0.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6244|2024-08-01T21:33:05.242Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5522|2024-08-01T21:18:05.372Z -- unknown -- html5%20video%20player</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5522</link>
      <description>The HTML5 Video Player  WordPress plugin before 2.5.27 does not sanitize and escape a parameter from a REST route before using it in a SQL statement, allowing unauthenticated users to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2024-5522|2024-08-01T21:18:05.372Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6070|2024-08-01T21:25:03.271Z -- unknown -- if-so%20dynamic%20content%20personalization</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6070</link>
      <description>The If-So Dynamic Content Personalization WordPress plugin before 1.8.0.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6070|2024-08-01T21:25:03.271Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5802|2024-08-01T21:25:02.880Z -- unknown -- url%20shortener%20by%20mythemeshop</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5802</link>
      <description>The URL Shortener by Myhop WordPress plugin through 1.0.17 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-5802|2024-08-01T21:25:02.880Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5199|2024-08-01T21:03:11.058Z -- unknown -- spotify%20play%20button</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5199</link>
      <description>The Spotify Play Button WordPress plugin through 1.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-5199|2024-08-01T21:03:11.058Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6094|2024-08-01T21:33:03.283Z -- unknown -- wp%20ulike</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6094</link>
      <description>The WP ULike  WordPress plugin before 4.7.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-6094|2024-08-01T21:33:03.283Z</guid>
      <pubDate>Wed, 24 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6130|2024-08-01T21:33:04.994Z -- unknown -- form%20maker%20by%2010web</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6130</link>
      <description>The Form Maker by 10Web  WordPress plugin before 1.15.26 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6130|2024-08-01T21:33:04.994Z</guid>
      <pubDate>Mon, 01 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6164|2024-08-01T21:33:04.599Z -- unknown -- filter%20%26%20grids</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6164</link>
      <description>The Filter &amp; Grids WordPress plugin before 2.8.33 is vulnerable to Local File Inclusion via the post_layout parameter. This makes it possible for an unauthenticated attacker to include and execute PHP files on the server, allowing the execution of any PHP code in those files.</description>
      <guid isPermaLink="false">CVE-2024-6164|2024-08-01T21:33:04.599Z</guid>
      <pubDate>Thu, 18 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5808|2024-08-01T21:25:02.970Z -- unknown -- wp%20ajax%20contact%20form</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5808</link>
      <description>The WP Ajax Contact Form WordPress plugin through 2.2.2 does not have CSRF check in place when deleting emails from the email list, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5808|2024-08-01T21:25:02.970Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5284|2024-08-01T21:11:11.021Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5284</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5284|2024-08-01T21:11:11.021Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5169|2024-08-01T21:03:11.041Z -- unknown -- video%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5169</link>
      <description>The Video Widget WordPress plugin through 1.2.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5169|2024-08-01T21:03:11.041Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6072|2024-08-01T21:25:03.322Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6072</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2024-6072|2024-08-01T21:25:03.322Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5573|2024-08-01T21:18:06.816Z -- unknown -- easy%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5573</link>
      <description>The Easy Table of Contents WordPress plugin before 2.0.66 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-5573|2024-08-01T21:18:06.816Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5079|2024-08-01T21:03:10.553Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5079</link>
      <description>The wp-eMember WordPress plugin before 10.6.7 does not sanitise and escape some of the fields when members register, which allows unauthenticated users to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5079|2024-08-01T21:03:10.553Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5071|2024-08-01T21:03:10.655Z -- unknown -- bookster</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5071</link>
      <description>The Bookster  WordPress plugin through 1.1.0 allows adding sensitive parameters when validating appointments allowing attackers to manipulate the data sent when booking an appointment (the request body) to change its status from pending to approved.</description>
      <guid isPermaLink="false">CVE-2024-5071|2024-08-01T21:03:10.655Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6075|2024-08-01T21:25:03.263Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6075</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6075|2024-08-01T21:25:03.263Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6138|2024-08-01T21:33:05.210Z -- unknown -- secure%20copy%20content%20protection%20and%20content%20locking</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6138</link>
      <description>The Secure Copy Content Protection and Content Locking WordPress plugin before 4.0.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-6138|2024-08-01T21:33:05.210Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5630|2024-08-01T21:18:06.829Z -- unknown -- insert%20or%20embed%20articulate%20content%20into%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5630</link>
      <description>The Insert or Embed Articulate Content into WordPress plugin before 4.3000000024 does not prevent authors from uploading arbitrary files to the site, which may allow them to upload PHP shells on affected sites.</description>
      <guid isPermaLink="false">CVE-2024-5630|2024-08-01T21:18:06.829Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5283|2024-08-01T21:11:11.639Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5283</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5283|2024-08-01T21:11:11.639Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5281|2024-08-01T21:11:11.576Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5281</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5281|2024-08-01T21:11:11.576Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5529|2024-08-01T21:18:06.542Z -- unknown -- wp%20quicklatex</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5529</link>
      <description>The WP QuickLaTeX WordPress plugin before 3.8.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5529|2024-08-01T21:18:06.542Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6224|2024-08-01T21:33:05.151Z -- unknown -- send%20email%20only%20on%20reply%20to%20my%20comment</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6224</link>
      <description>The Send email only on Reply to My Comment WordPress plugin through 1.0.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6224|2024-08-01T21:33:05.151Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6231|2024-08-01T21:33:05.375Z -- unknown -- request%20a%20quote</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6231</link>
      <description>The Request a Quote WordPress plugin before 2.4.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6231|2024-08-01T21:33:05.375Z</guid>
      <pubDate>Tue, 23 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5172|2024-08-01T21:03:11.067Z -- unknown -- expert%20invoice</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5172</link>
      <description>The Expert Invoice WordPress plugin through 1.0.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5172|2024-08-01T21:03:11.067Z</guid>
      <pubDate>Tue, 18 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5472|2024-08-01T21:11:12.763Z -- unknown -- wp%20quicklatex</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5472</link>
      <description>The WP QuickLaTeX WordPress plugin before 3.8.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5472|2024-08-01T21:11:12.763Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5167|2024-08-01T21:03:11.042Z -- unknown -- cm%20email%20registration%20blacklist%20and%20whitelist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5167</link>
      <description>The CM Email Registration Blacklist and Whitelist WordPress plugin before 1.4.9 does not have CSRF check when adding or deleting an item from the blacklist or whitelist, which could allow attackers to make a logged in admin add or delete settings from the blacklist or whitelist menu via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5167|2024-08-01T21:03:11.042Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5883|2024-08-01T21:25:03.165Z -- unknown -- ultimate%20classified%20listings</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5883</link>
      <description>The Ultimate Classified Listings WordPress plugin before 1.3 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5883|2024-08-01T21:25:03.165Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6366|2024-08-01T21:33:05.436Z -- unknown -- user%20profile%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6366</link>
      <description>The User Profile Builder  WordPress plugin before 3.11.8 does not have proper authorisation, allowing unauthenticated users to upload media files via the async upload functionality of WP.</description>
      <guid isPermaLink="false">CVE-2024-6366|2024-08-01T21:33:05.436Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5973|2024-08-01T21:25:03.133Z -- unknown -- masterstudy%20lms%20wordpress%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5973</link>
      <description>The MasterStudy LMS WordPress Plugin  WordPress plugin before 3.3.24 does not prevent students from creating instructor accounts, which could be used to get access to functionalities they shouldn't have.</description>
      <guid isPermaLink="false">CVE-2024-5973|2024-08-01T21:25:03.133Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5604|2024-08-01T21:18:06.836Z -- unknown -- bug%20library</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5604</link>
      <description>The Bug Library WordPress plugin before 2.1.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5604|2024-08-01T21:18:06.836Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6025|2024-08-01T21:25:03.195Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6025</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.0.5 does not sanitise and escape some of its Quiz settings, which could allow contributors and higher to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6025|2024-08-01T21:25:03.195Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5767|2024-08-01T21:18:07.035Z -- unknown -- sitetweet</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5767</link>
      <description>The sitetweet WordPress plugin through 0.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5767|2024-08-01T21:18:07.035Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5807|2024-08-01T21:25:02.833Z -- unknown -- business%20card</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5807</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not prevent high privilege users like administrators from uploading malicious PHP files, which could allow them to run arbitrary code on servers hosting their site, even in MultiSite configurations.</description>
      <guid isPermaLink="false">CVE-2024-5807|2024-08-01T21:25:02.833Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5626|2024-08-01T21:18:06.696Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5626</link>
      <description>The Inline Related Posts WordPress plugin before 3.7.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5626|2024-08-01T21:18:06.696Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5080|2024-08-01T21:03:10.803Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5080</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not validate files to be uploaded, which could allow admins to upload arbitrary files such as PHP on the server</description>
      <guid isPermaLink="false">CVE-2024-5080|2024-08-01T21:03:10.803Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6289|2024-08-01T21:33:05.447Z -- unknown -- wps%20hide%20login</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6289</link>
      <description>The WPS Hide Login WordPress plugin before 1.9.16.4 does not prevent redirects to the login page via the auth_redirect WordPress function, allowing an unauthenticated visitor to access the hidden login page.</description>
      <guid isPermaLink="false">CVE-2024-6289|2024-08-01T21:33:05.447Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5811|2024-08-01T21:25:02.669Z -- unknown -- simple%20video%20directory</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5811</link>
      <description>The Simple Video Directory WordPress plugin before 1.4.4 does not sanitise and escape some of its settings, which could allow contributors and higher to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5811|2024-08-01T21:25:02.669Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5450|2024-08-01T21:11:12.776Z -- unknown -- bug%20library</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5450</link>
      <description>The Bug Library WordPress plugin before 2.1.1 does not check the file type on user-submitted bug reports, allowing an unauthenticated user to upload PHP files</description>
      <guid isPermaLink="false">CVE-2024-5450|2024-08-01T21:11:12.776Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6490|2024-08-01T21:41:03.422Z -- unknown -- master%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6490</link>
      <description>During testing of the Master Slider  WordPress plugin through 3.9.10, a CSRF vulnerability was found, which allows an unauthorized user to manipulate requests on behalf of the victim and thereby delete all of the sliders inside Master Slider  WordPress plugin through 3.9.10.</description>
      <guid isPermaLink="false">CVE-2024-6490|2024-08-01T21:41:03.422Z</guid>
      <pubDate>Fri, 26 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6230|2024-08-01T21:33:05.315Z -- unknown -- %D9%BE%D9%84%D8%A7%DA%AF%DB%8C%D9%86%20%D9%BE%D8%B1%D8%AF%D8%A7%D8%AE%D8%AA%20%D8%AF%D9%84%D8%AE%D9%88%D8%A7%D9%87</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6230</link>
      <description>The پلاگین پرداخت دلخواه WordPress plugin through 2.9.8 does not have CSRF check in place when resetting its form fields, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6230|2024-08-01T21:33:05.315Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5077|2024-08-01T21:03:10.588Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5077</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5077|2024-08-01T21:03:10.588Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6420|2024-08-01T21:41:03.294Z -- unknown -- hide%20my%20wp%20ghost</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6420</link>
      <description>The Hide My WP Ghost  WordPress plugin before 5.2.02 does not prevent redirects to the login page via the auth_redirect WordPress function, allowing an unauthenticated visitor to access the hidden login page.</description>
      <guid isPermaLink="false">CVE-2024-6420|2024-08-01T21:41:03.294Z</guid>
      <pubDate>Tue, 23 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5475|2024-08-01T21:11:12.785Z -- unknown -- responsive%20video%20embed</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5475</link>
      <description>The Responsive video embed WordPress plugin before 0.5.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-5475|2024-08-01T21:11:12.785Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6223|2024-08-01T21:33:05.217Z -- unknown -- send%20email%20only%20on%20reply%20to%20my%20comment</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6223</link>
      <description>The Send email only on Reply to My Comment WordPress plugin through 1.0.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6223|2024-08-01T21:33:05.217Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5282|2024-08-01T21:11:11.639Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5282</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5282|2024-08-01T21:11:11.639Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5570|2024-08-01T21:18:06.390Z -- unknown -- simple%20photoswipe</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5570</link>
      <description>The Simple Photoswipe WordPress plugin through 0.1 does not have authorisation check when updating its settings, which could allow any authenticated users, such as subscriber to update them</description>
      <guid isPermaLink="false">CVE-2024-5570|2024-08-01T21:18:06.390Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5075|2024-08-01T21:03:10.348Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5075</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5075|2024-08-01T21:03:10.348Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5715|2024-08-01T21:18:06.857Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5715</link>
      <description>The wp-eMember WordPress plugin before 10.6.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5715|2024-08-01T21:18:06.857Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6487|2024-08-01T21:41:03.293Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6487</link>
      <description>The Inline Related Posts WordPress plugin before 3.8.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6487|2024-08-01T21:41:03.293Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6022|2024-08-01T21:25:03.198Z -- unknown -- contentlock</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6022</link>
      <description>The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6022|2024-08-01T21:25:03.198Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5729|2024-08-01T21:18:07.060Z -- unknown -- simple%20al%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5729</link>
      <description>The Simple AL Slider WordPress plugin through 1.2.10 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5729|2024-08-01T21:18:07.060Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6074|2024-08-01T21:25:03.266Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6074</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6074|2024-08-01T21:25:03.266Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6362|2024-08-01T21:33:05.331Z -- unknown -- ultimate%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6362</link>
      <description>The Ultimate Blocks  WordPress plugin before 3.2.0 does not validate and escape some of its post-grid block attributes before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6362|2024-08-01T21:33:05.331Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5032|2024-08-01T21:03:09.647Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5032</link>
      <description>The SULly WordPress plugin before 4.3.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5032|2024-08-01T21:03:09.647Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5076|2024-08-01T21:03:10.703Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5076</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5076|2024-08-01T21:03:10.703Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6243|2024-08-01T21:33:05.323Z -- unknown -- html%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6243</link>
      <description>The HTML Forms  WordPress plugin before 1.3.33 does not sanitize and escape the form message inputs, allowing high-privilege users, such as administrators, to perform Stored Cross-Site Scripting (XSS) attacks even when the unfiltered_html capability is disabled.</description>
      <guid isPermaLink="false">CVE-2024-6243|2024-08-01T21:33:05.323Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5034|2024-08-01T21:03:09.640Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5034</link>
      <description>The SULly WordPress plugin before 4.3.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5034|2024-08-01T21:03:09.640Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5448|2024-08-01T21:11:12.780Z -- unknown -- paypal%20pay%20now%2C%20buy%20now%2C%20donation%20and%20cart%20buttons%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5448</link>
      <description>The PayPal Pay Now, Buy Now, Donation and Cart Buttons Shortcode WordPress plugin through 1.7 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5448|2024-08-01T21:11:12.780Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6226|2024-08-01T21:33:05.329Z -- unknown -- wpstickybar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6226</link>
      <description>The WpStickyBar  WordPress plugin through 2.1.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6226|2024-08-01T21:33:05.329Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5606|2024-08-01T21:18:06.591Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5606</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.0.2 is vulnerable does not validate and escape the question_id parameter in the qsm_bulk_delete_question_from_database AJAX action, leading to a SQL injection exploitable by Contributors and above role</description>
      <guid isPermaLink="false">CVE-2024-5606|2024-08-01T21:18:06.591Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5882|2024-08-01T21:25:02.969Z -- unknown -- ultimate%20classified%20listings</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5882</link>
      <description>The Ultimate Classified Listings WordPress plugin before 1.3 does not validate the `ucl_page` and `layout` parameters allowing unauthenticated users to access PHP files on the server from the listings page</description>
      <guid isPermaLink="false">CVE-2024-5882|2024-08-01T21:25:02.969Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5285|2024-08-01T21:11:11.619Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5285</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.2 does not have CSRF check in place when deleting affiliates, which could allow attackers to make a logged in user change delete them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5285|2024-08-01T21:11:11.619Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5575|2024-08-01T21:18:06.451Z -- unknown -- ditty</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5575</link>
      <description>The Ditty  WordPress plugin before 3.1.43 does not sanitise and escape some of its blocks' settings, which could allow high privilege users such as authors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-5575|2024-08-01T21:18:06.451Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6076|2024-08-01T21:25:03.197Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6076</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6076|2024-08-01T21:25:03.197Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5455|2024-08-01T21:11:12.785Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5455</link>
      <description>The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 5.5.4 via the 'magazine_style' parameter within the Dynamic Smart Showcase widget. This makes it possible for authenticated attackers, with Contributor-level access and above, to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other “safe” file types can be uploaded and included.</description>
      <guid isPermaLink="false">CVE-2024-5455|2024-08-01T21:11:12.785Z</guid>
      <pubDate>Fri, 21 Jun 2024 03:24:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5627|2024-08-01T21:18:06.830Z -- unknown -- tournamatch</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5627</link>
      <description>The Tournamatch WordPress plugin before 4.6.1 does not sanitise and escape some parameters, which could allow users with a role as low as subscriber to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-5627|2024-08-01T21:18:06.830Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5033|2024-08-01T21:03:09.723Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5033</link>
      <description>The SULly WordPress plugin before 4.3.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5033|2024-08-01T21:03:09.723Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6024|2024-08-01T21:25:03.203Z -- unknown -- contentlock</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6024</link>
      <description>The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when deleting groups or emails, which could allow attackers to make a logged in admin remove them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6024|2024-08-01T21:25:03.203Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6026|2024-08-01T21:25:03.207Z -- unknown -- slider%20by%2010web</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6026</link>
      <description>The Slider by 10Web  WordPress plugin before 1.2.56 does not sanitise and escape some of its Slide options, which could allow authenticated users with access to the Sliders (by default Administrator, however this can be changed via the Slider by 10Web  WordPress plugin before 1.2.56's options) and the ability to add images (Editor+) to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6026|2024-08-01T21:25:03.207Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5728|2024-08-01T21:18:07.034Z -- unknown -- animated%20al%20list</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5728</link>
      <description>The Animated AL List WordPress plugin through 1.0.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5728|2024-08-01T21:18:07.034Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6023|2024-08-01T21:25:03.160Z -- unknown -- contentlock</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6023</link>
      <description>The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when adding emails, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6023|2024-08-01T21:25:03.160Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6536|2024-08-01T21:41:03.512Z -- unknown -- zephyr%20project%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6536</link>
      <description>The Zephyr Project Manager WordPress plugin before 3.3.99 does not sanitise and escape some of its settings, which could allow high privilege users such as editors and admins to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6536|2024-08-01T21:41:03.512Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5595|2024-08-02T06:00:06.949Z -- unknown -- essential%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5595</link>
      <description>The Essential Blocks  WordPress plugin before 4.7.0 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5595|2024-08-02T06:00:06.949Z</guid>
      <pubDate>Fri, 02 Aug 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7252|2024-08-02T08:57:35.052Z -- unknown -- tickera</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7252</link>
      <description>The Tickera  WordPress plugin before 3.5.2.5 does not prevent users from leaking other users' tickets.</description>
      <guid isPermaLink="false">CVE-2023-7252|2024-08-02T08:57:35.052Z</guid>
      <pubDate>Mon, 22 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7164|2024-08-02T08:50:08.324Z -- unknown -- backwpup</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7164</link>
      <description>The BackWPup WordPress plugin before 4.0.4 does not prevent visitors from leaking key information about ongoing backups, allowing unauthenticated attackers to download backups of a site's database.</description>
      <guid isPermaLink="false">CVE-2023-7164|2024-08-02T08:50:08.324Z</guid>
      <pubDate>Mon, 08 Apr 2024 17:28:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6257|2024-08-02T08:28:20.199Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6257</link>
      <description>The Inline Related Posts WordPress plugin before 3.6.0 does not ensure that post content displayed via an AJAX action are accessible to the user, allowing any authenticated user, such as subscriber to retrieve the content of password protected posts</description>
      <guid isPermaLink="false">CVE-2023-6257|2024-08-02T08:28:20.199Z</guid>
      <pubDate>Thu, 11 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7253|2024-08-02T08:57:35.106Z -- unknown -- import%20wp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7253</link>
      <description>The Import WP  WordPress plugin before 2.13.1 does not prevent users with the administrator role from pinging conducting SSRF attacks, which may be a problem in multisite configurations.</description>
      <guid isPermaLink="false">CVE-2023-7253|2024-08-02T08:57:35.106Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6067|2024-08-02T08:21:17.215Z -- unknown -- wp%20user%20profile%20avatar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6067</link>
      <description>The WP User Profile Avatar WordPress plugin through 1.0.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-6067|2024-08-02T08:21:17.215Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7198|2024-08-02T08:57:35.513Z -- unknown -- wp%20dashboard%20notes</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7198</link>
      <description>The WP Dashboard Notes WordPress plugin before 1.0.11 is vulnerable to Insecure Direct Object References (IDOR) in post_id= parameter. Authenticated users are able to delete private notes associated with different user accounts. This poses a significant security risk as it violates the principle of least privilege and compromises the integrity and privacy of user data.</description>
      <guid isPermaLink="false">CVE-2023-7198|2024-08-02T08:57:35.513Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6501|2024-08-02T08:35:13.197Z -- unknown -- splashscreen</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6501</link>
      <description>The Splashscreen WordPress plugin through 0.20 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-6501|2024-08-02T08:35:13.197Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5971|2024-08-02T08:14:25.115Z -- unknown -- save%20as%20pdf%20plugin%20by%20pdfcrowd</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-5971</link>
      <description>The Save as PDF Plugin by Pdfcrowd WordPress plugin before 3.2.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-5971|2024-08-02T08:14:25.115Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7115|2024-08-02T08:50:08.049Z -- unknown -- page%20builder%3A%20pagelayer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7115</link>
      <description>The Page Builder: Pagelayer WordPress plugin before 1.8.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-7115|2024-08-02T08:50:08.049Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6081|2024-08-02T08:21:17.320Z -- unknown -- chartjs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6081</link>
      <description>The chartjs WordPress plugin through 2023.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-6081|2024-08-02T08:21:17.320Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:07:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7247|2024-08-02T08:57:35.034Z -- unknown -- login%20as%20user%20or%20customer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7247</link>
      <description>The Login as User or Customer WordPress plugin through 3.8 does not prevent users to log in as any other user on the site.</description>
      <guid isPermaLink="false">CVE-2023-7247|2024-08-02T08:57:35.034Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7202|2024-08-02T08:57:35.020Z -- unknown -- fatal%20error%20notify</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7202</link>
      <description>The Fatal Error Notify WordPress plugin before 1.5.3 does not have authorisation and CSRF checks in its test_error AJAX action, allowing any authenticated users, such as subscriber to call it and spam the admin email address with error messages. The issue is also exploitable via CSRF</description>
      <guid isPermaLink="false">CVE-2023-7202|2024-08-02T08:57:35.020Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7201|2024-08-02T08:57:34.095Z -- unknown -- everest%20backup</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7201</link>
      <description>The Everest Backup  WordPress plugin before 2.2.5 does not properly validate backup files to be uploaded, allowing high privilege users such as admin to upload arbitrary files on the server even when they should not be allowed to (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-7201|2024-08-02T08:57:34.095Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6585|2024-08-02T08:35:14.606Z -- unknown -- wp%20jobsearch</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6585</link>
      <description>The WP JobSearch WordPress plugin before 2.3.4 does not validate files to be uploaded, which could allow unauthenticated attackers to upload arbitrary files such as PHP on the server</description>
      <guid isPermaLink="false">CVE-2023-6585|2024-08-02T08:35:14.606Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6082|2024-08-02T08:21:17.294Z -- unknown -- chartjs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6082</link>
      <description>The chartjs WordPress plugin through 2023.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-6082|2024-08-02T08:21:17.294Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:06:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7232|2024-08-02T08:57:35.189Z -- unknown -- backup%20and%20restore%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7232</link>
      <description>The Backup and Restore WordPress  WordPress plugin through 1.45 does not protect some log files containing sensitive information such as site configuration etc, allowing unauthenticated users to access such data</description>
      <guid isPermaLink="false">CVE-2023-7232|2024-08-02T08:57:35.189Z</guid>
      <pubDate>Tue, 26 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7165|2024-08-02T08:50:08.310Z -- unknown -- jetbackup</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7165</link>
      <description>The JetBackup WordPress plugin before 2.0.9.9 doesn't use index files to prevent public directory listing of sensitive directories in certain configurations, which allows malicious actors to leak backup files.</description>
      <guid isPermaLink="false">CVE-2023-7165|2024-08-02T08:50:08.310Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6499|2024-08-02T08:35:13.207Z -- unknown -- lastunes</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6499</link>
      <description>The lasTunes WordPress plugin through 3.6.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-6499|2024-08-02T08:35:13.207Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6444|2024-08-02T08:28:21.818Z -- unknown -- seriously%20simple%20podcasting</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6444</link>
      <description>The Seriously Simple Podcasting WordPress plugin before 3.0.0 discloses the Podcast owner's email address (which by default is the admin email address) via an unauthenticated crafted request.</description>
      <guid isPermaLink="false">CVE-2023-6444|2024-08-02T08:28:21.818Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7167|2024-08-02T08:50:08.209Z -- unknown -- persian%20fonts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7167</link>
      <description>The Persian Fonts WordPress plugin through 1.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-7167|2024-08-02T08:50:08.209Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6584|2024-08-02T08:35:14.824Z -- unknown -- wp%20jobsearch</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6584</link>
      <description>The WP JobSearch WordPress plugin before 2.3.4 does not prevent attackers from logging-in as any users with the only knowledge of that user's email address.</description>
      <guid isPermaLink="false">CVE-2023-6584|2024-08-02T08:35:14.824Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6821|2024-08-02T08:42:07.513Z -- unknown -- error%20log%20viewer%20by%20bestwebsoft</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6821</link>
      <description>The Error Log Viewer by BestWebSoft WordPress plugin before 1.1.3 contains a vulnerability that allows you to read and download PHP logs without authorization</description>
      <guid isPermaLink="false">CVE-2023-6821|2024-08-02T08:42:07.513Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6294|2024-08-02T08:28:21.292Z -- unknown -- popup%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6294</link>
      <description>The Popup Builder WordPress plugin before 4.2.6 does not validate a parameter before making a request to it, which could allow users with the administrator role to perform SSRF attack in Multisite WordPress configurations.</description>
      <guid isPermaLink="false">CVE-2023-6294|2024-08-02T08:28:21.292Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:06:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7269|2024-08-02T08:57:35.220Z -- unknown -- artplacer%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7269</link>
      <description>The ArtPlacer Widget WordPress plugin before 2.21.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-7269|2024-08-02T08:57:35.220Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7236|2024-08-02T08:57:35.245Z -- unknown -- backup%20bolt</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7236</link>
      <description>The Backup Bolt WordPress plugin through 1.3.0 is vulnerable to Information Exposure via the unprotected access of debug logs. This makes it possible for unauthenticated attackers to retrieve the debug log which may contain information like system errors which could contain sensitive information.</description>
      <guid isPermaLink="false">CVE-2023-7236|2024-08-02T08:57:35.245Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6036|2024-08-02T08:21:17.074Z -- unknown -- web3</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6036</link>
      <description>The Web3 WordPress plugin before 3.0.0 is vulnerable to an authentication bypass due to incorrect authentication checking in the login flow in functions 'handle_auth_request' and 'hadle_login_request'. This makes it possible for non authenticated attackers to log in as any existing user on the site, such as an administrator, if they have access to the username.</description>
      <guid isPermaLink="false">CVE-2023-6036|2024-08-02T08:21:17.074Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:06:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6385|2024-08-02T08:28:21.786Z -- unknown -- wordpress%20ping%20optimizer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6385</link>
      <description>The WordPress Ping Optimizer WordPress plugin through 2.35.1.3.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as clearing logs.</description>
      <guid isPermaLink="false">CVE-2023-6385|2024-08-02T08:28:21.786Z</guid>
      <pubDate>Wed, 10 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6591|2024-08-02T08:35:14.411Z -- unknown -- popup%20box</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6591</link>
      <description>The Popup Box WordPress plugin before 20.9.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2023-6591|2024-08-02T08:35:14.411Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:06:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7246|2024-08-02T08:57:34.750Z -- unknown -- system%20dashboard</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7246</link>
      <description>The System Dashboard WordPress plugin before 2.8.10 does not sanitize and escape some parameters, which could allow administrators in multisite WordPress configurations to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-7246|2024-08-02T08:57:34.750Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7268|2024-08-02T08:57:35.460Z -- unknown -- artplacer%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7268</link>
      <description>The ArtPlacer Widget WordPress plugin before 2.21.2 does not have authorisation check in place when deleting widgets,  allowing ay authenticated users, such as subscriber, to delete arbitrary widgets</description>
      <guid isPermaLink="false">CVE-2023-7268|2024-08-02T08:57:35.460Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7203|2024-08-02T08:57:35.575Z -- unknown -- smart%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7203</link>
      <description>The Smart Forms WordPress plugin before 2.6.87 does not have authorisation in various AJAX actions, which could allow users with a role as low as subscriber to call them and perform unauthorised actions such as deleting entries. The plugin also lacks CSRF checks in some places which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as deleting entries.</description>
      <guid isPermaLink="false">CVE-2023-7203|2024-08-02T08:57:35.575Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7233|2024-08-02T08:57:35.566Z -- unknown -- gigpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7233</link>
      <description>The GigPress WordPress plugin through 2.3.29 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-7233|2024-08-02T08:57:35.566Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7085|2024-08-02T08:50:07.997Z -- unknown -- scalable%20vector%20graphics%20%28svg%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7085</link>
      <description>The Scalable Vector Graphics (SVG) WordPress plugin through 3.4 does not sanitize uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2023-7085|2024-08-02T08:50:07.997Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5595|2024-08-02T16:12:09.234Z -- unknown -- essential%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5595</link>
      <description>The Essential Blocks  WordPress plugin before 4.7.0 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5595|2024-08-02T16:12:09.234Z</guid>
      <pubDate>Fri, 02 Aug 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2872|2024-08-02T18:50:24.448Z -- unknown -- socialdriver-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2872</link>
      <description>The socialdriver-framework WordPress plugin before 2024.04.30 does not sanitise and escape some of its settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2872|2024-08-02T18:50:24.448Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6390|2024-08-03T06:00:05.411Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6390</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.1.0 does not properly sanitise and escape some of its Quizz settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6390|2024-08-03T06:00:05.411Z</guid>
      <pubDate>Sat, 03 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6477|2024-08-03T06:00:05.955Z -- unknown -- userswp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6477</link>
      <description>The UsersWP  WordPress plugin before 1.2.12 uses predictable filenames when an admin generates an export, which could allow unauthenticated attackers to download them and retrieve sensitive information such as IP, username, and email address</description>
      <guid isPermaLink="false">CVE-2024-6477|2024-08-03T06:00:05.955Z</guid>
      <pubDate>Sat, 03 Aug 2024 06:00:05 +0000</pubDate>
    </item>
  </channel>
</rss>

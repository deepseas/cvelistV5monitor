<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Unknown -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/unknown/all.rss</link>
    <description>The latest CVEs for Unknown -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 30 Aug 2024 21:22:39 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-5558|2024-08-30T19:01:08.597Z -- unknown -- learnpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-5558</link>
      <description>The LearnPress WordPress plugin before 4.2.5.5 does not sanitise and escape user input before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-5558|2024-08-30T19:01:08.597Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:54:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0421|2024-08-30T12:53:51.264Z -- unknown -- mappress%20maps%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0421</link>
      <description>The MapPress Maps for WordPress plugin before 2.88.16 is affected by an IDOR as it does not ensure that posts to be retrieve via an AJAX action is a public map, allowing unauthenticated users to read arbitrary private and draft posts.</description>
      <guid isPermaLink="false">CVE-2024-0421|2024-08-30T12:53:51.264Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3345|2024-08-30T13:34:18.185Z -- unknown -- lms%20by%20masteriyo
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-3345</link>
      <description>The LMS by Masteriyo WordPress plugin before 1.6.8 does not have proper authorization in one some of its REST API endpoints, making it possible for any students to retrieve email addresses of other students</description>
      <guid isPermaLink="false">CVE-2023-3345|2024-08-30T13:34:18.185Z</guid>
      <pubDate>Mon, 31 Jul 2023 09:37:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7154|2024-08-30T19:01:59.269Z -- unknown -- hubbub%20lite%20%28formerly%20grow%20social%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7154</link>
      <description>The Hubbub Lite (formerly Grow Social) WordPress plugin before 1.32.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-7154|2024-08-30T19:01:59.269Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:57:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3673|2024-08-30T18:16:23.243Z -- unknown -- web%20directory%20free</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3673</link>
      <description>The Web Directory Free WordPress plugin before 1.7.3 does not validate a parameter before using it in an include(), which could lead to Local File Inclusion issues.</description>
      <guid isPermaLink="false">CVE-2024-3673|2024-08-30T18:16:23.243Z</guid>
      <pubDate>Fri, 30 Aug 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0881|2024-08-30T12:42:29.783Z -- unknown -- post%20grid%2C%20form%20maker%2C%20popup%20maker%2C%20woocommerce%20blocks%2C%20post%20blocks%2C%20post%20carousel</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0881</link>
      <description>The Post Grid, Form Maker, Popup Maker, WooCommerce Blocks, Post Blocks, Post Carousel  WordPress plugin before 2.2.76 does not have proper authorization, resulting in password protected posts to be displayed in the result of some unauthenticated AJAX actions, allowing unauthenticated users to read such posts</description>
      <guid isPermaLink="false">CVE-2024-0881|2024-08-30T12:42:29.783Z</guid>
      <pubDate>Thu, 11 Apr 2024 15:36:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3673|2024-08-30T06:00:02.162Z -- unknown -- web%20directory%20free</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3673</link>
      <description>The Web Directory Free WordPress plugin before 1.7.3 does not validate a parameter before using it in an include(), which could lead to Local File Inclusion issues.</description>
      <guid isPermaLink="false">CVE-2024-3673|2024-08-30T06:00:02.162Z</guid>
      <pubDate>Fri, 30 Aug 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0673|2024-08-28T14:21:46.059Z -- unknown -- pz-linkcard</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0673</link>
      <description>The Pz-LinkCard WordPress plugin through 2.5.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-0673|2024-08-28T14:21:46.059Z</guid>
      <pubDate>Thu, 28 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6879|2024-08-28T15:01:26.636Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6879</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.1.1 fails to validate and escape certain Quiz fields before displaying them on a page or post where the Quiz is embedded, which could allows contributor and above roles to perform Stored Cross-Site Scripting (XSS) attacks.</description>
      <guid isPermaLink="false">CVE-2024-6879|2024-08-28T15:01:26.636Z</guid>
      <pubDate>Mon, 26 Aug 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1962|2024-08-28T13:58:15.934Z -- unknown -- cm%20download%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1962</link>
      <description>The CM Download Manager  WordPress plugin before 2.9.1 does not have CSRF checks in some places, which could allow attackers to make logged in admins edit downloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-1962|2024-08-28T13:58:15.934Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1333|2024-08-27T20:59:34.456Z -- unknown -- responsive%20pricing%20table</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1333</link>
      <description>The Responsive Pricing Table WordPress plugin before 5.1.11 does not validate and escape some of its Pricing Table options before outputting them back in a page/post where the related shortcode is embed, which could allow users with the author role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1333|2024-08-27T20:59:34.456Z</guid>
      <pubDate>Mon, 18 Mar 2024 15:15:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2263|2024-08-27T15:43:13.886Z -- unknown -- themify</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2263</link>
      <description>Themify  WordPress plugin before 1.4.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-2263|2024-08-27T15:43:13.886Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1274|2024-08-27T15:28:12.101Z -- unknown -- my%20calendar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1274</link>
      <description>The My Calendar WordPress plugin before 3.4.24 does not sanitise and escape some parameters, which could allow users with a role as low as Subscriber to perform Cross-Site Scripting attacks (depending on the permissions set by the admin)</description>
      <guid isPermaLink="false">CVE-2024-1274|2024-08-27T15:28:12.101Z</guid>
      <pubDate>Tue, 02 Apr 2024 05:15:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-7313|2024-08-26T17:49:48.236Z -- unknown -- shield%20security</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-7313</link>
      <description>The Shield Security  WordPress plugin before 20.0.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2024-7313|2024-08-26T17:49:48.236Z</guid>
      <pubDate>Mon, 26 Aug 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6879|2024-08-26T06:00:01.427Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6879</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.1.1 fails to validate and escape certain Quiz fields before displaying them on a page or post where the Quiz is embedded, which could allows contributor and above roles to perform Stored Cross-Site Scripting (XSS) attacks.</description>
      <guid isPermaLink="false">CVE-2024-6879|2024-08-26T06:00:01.427Z</guid>
      <pubDate>Mon, 26 Aug 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-7313|2024-08-26T06:00:03.119Z -- unknown -- shield%20security</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-7313</link>
      <description>The Shield Security  WordPress plugin before 20.0.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2024-7313|2024-08-26T06:00:03.119Z</guid>
      <pubDate>Mon, 26 Aug 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3282|2024-08-23T06:00:02.699Z -- unknown -- wp%20table%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3282</link>
      <description>The WP Table Builder  WordPress plugin through 1.5.0 does not sanitise and escape some of its Table data, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3282|2024-08-23T06:00:02.699Z</guid>
      <pubDate>Fri, 23 Aug 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6715|2024-08-23T06:00:04.204Z -- unknown -- ditty</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6715</link>
      <description>The Ditty  WordPress plugin before 3.1.46 re-introduced a previously fixed security issue (https://wpscan.com/vulnerability/80a9eb3a-2cb1-4844-9004-ba2554b2d46c/) in v3.1.39</description>
      <guid isPermaLink="false">CVE-2024-6715|2024-08-23T06:00:04.204Z</guid>
      <pubDate>Fri, 23 Aug 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6385|2024-08-21T22:30:29.755Z -- unknown -- wordpress%20ping%20optimizer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6385</link>
      <description>The WordPress Ping Optimizer WordPress plugin through 2.35.1.3.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as clearing logs.</description>
      <guid isPermaLink="false">CVE-2023-6385|2024-08-21T22:30:29.755Z</guid>
      <pubDate>Wed, 10 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2262|2024-08-21T22:39:32.516Z -- unknown -- themify</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2262</link>
      <description>Themify  WordPress plugin before 1.4.4 does not have CSRF check in its bulk action, which could allow attackers to make logged in users delete arbitrary filters via CSRF attack, granted they know the related filter slugs</description>
      <guid isPermaLink="false">CVE-2024-2262|2024-08-21T22:39:32.516Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6843|2024-08-21T14:18:21.909Z -- unknown -- chatbot%20with%20chatgpt%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6843</link>
      <description>The Chatbot with ChatGPT WordPress plugin before 2.4.5 does not sanitise and escape user inputs, which could allow unauthenticated users to perform Stored Cross-Site Scripting attacks against admins</description>
      <guid isPermaLink="false">CVE-2024-6843|2024-08-21T14:18:21.909Z</guid>
      <pubDate>Mon, 19 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6847|2024-08-20T06:00:03.192Z -- unknown -- chatbot%20with%20chatgpt%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6847</link>
      <description>The Chatbot with ChatGPT WordPress plugin before 2.4.5 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by unauthenticated users when submitting messages to the chatbot.</description>
      <guid isPermaLink="false">CVE-2024-6847|2024-08-20T06:00:03.192Z</guid>
      <pubDate>Tue, 20 Aug 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6330|2024-08-19T15:29:05.964Z -- unknown -- geo%20my%20wp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6330</link>
      <description>The GEO my WP WordPress plugin before 4.5.0.2 does not prevent unauthenticated attackers from including arbitrary files in PHP's execution context, which leads to Remote Code Execution.</description>
      <guid isPermaLink="false">CVE-2024-6330|2024-08-19T15:29:05.964Z</guid>
      <pubDate>Mon, 19 Aug 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6459|2024-08-17T06:00:02.718Z -- unknown -- news%20element%20elementor%20blog%20magazine</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6459</link>
      <description>The News Element Elementor Blog Magazine WordPress plugin before 1.0.6 is vulnerable to Local File Inclusion via the template parameter. This makes it possible for unauthenticated attacker to include and execute PHP files on the server, allowing the execution of any PHP code in those files.</description>
      <guid isPermaLink="false">CVE-2024-6459|2024-08-17T06:00:02.718Z</guid>
      <pubDate>Sat, 17 Aug 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6460|2024-08-16T06:00:02.447Z -- unknown -- grow%20by%20tradedoubler</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6460</link>
      <description>The Grow by Tradedoubler  WordPress plugin through 2.0.21 is vulnerable to Local File Inclusion via the component parameter. This makes it possible for attackers to include and execute PHP files on the server, allowing the execution of any PHP code in those files.</description>
      <guid isPermaLink="false">CVE-2024-6460|2024-08-16T06:00:02.447Z</guid>
      <pubDate>Fri, 16 Aug 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6724|2024-08-13T06:00:02.297Z -- unknown -- generate%20images</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6724</link>
      <description>The Generate Images  WordPress plugin before 5.2.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6724|2024-08-13T06:00:02.297Z</guid>
      <pubDate>Tue, 13 Aug 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3406|2024-08-12T18:51:17.858Z -- unknown -- wp%20prayer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3406</link>
      <description>The WP Prayer WordPress plugin through 2.0.9 does not have CSRF check in place when updating its email settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3406|2024-08-12T18:51:17.858Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3643|2024-08-12T18:24:48.972Z -- unknown -- newsletter%20popup</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3643</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not have CSRF check when deleting list, which could allow attackers to make logged in admins perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3643|2024-08-12T18:24:48.972Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6134|2024-08-10T06:00:04.206Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6134</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6134|2024-08-10T06:00:04.206Z</guid>
      <pubDate>Sat, 10 Aug 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1307|2024-08-09T19:06:05.756Z -- unknown -- smart%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1307</link>
      <description>The Smart Forms  WordPress plugin before 2.6.94 does not have proper authorization in some actions, which could allow users with a role as low as a subscriber to call them and perform unauthorized actions</description>
      <guid isPermaLink="false">CVE-2024-1307|2024-08-09T19:06:05.756Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4534|2024-08-09T18:59:11.672Z -- unknown -- kkprogressbar2%20free</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4534</link>
      <description>The KKProgressbar2 Free  WordPress plugin through 1.1.4.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4534|2024-08-09T18:59:11.672Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1306|2024-08-09T19:41:02.218Z -- unknown -- smart%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1306</link>
      <description>The Smart Forms  WordPress plugin before 2.6.94 does not have CSRF checks in some places, which could allow attackers to make logged-in users perform unwanted actions via CSRF attacks, such as editing entries, and we consider it a medium risk.</description>
      <guid isPermaLink="false">CVE-2024-1306|2024-08-09T19:41:02.218Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3921|2024-08-09T19:56:19.963Z -- unknown -- gianism</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3921</link>
      <description>The Gianism WordPress plugin through 5.1.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3921|2024-08-09T19:56:19.963Z</guid>
      <pubDate>Wed, 29 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7201|2024-08-09T19:39:25.098Z -- unknown -- everest%20backup</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7201</link>
      <description>The Everest Backup  WordPress plugin before 2.2.5 does not properly validate backup files to be uploaded, allowing high privilege users such as admin to upload arbitrary files on the server even when they should not be allowed to (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-7201|2024-08-09T19:39:25.098Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4751|2024-08-09T19:03:15.559Z -- unknown -- wp%20prayer%20ii</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4751</link>
      <description>The WP Prayer II WordPress plugin through 2.4.7 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4751|2024-08-09T19:03:15.559Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6133|2024-08-09T13:21:19.056Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6133</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6133|2024-08-09T13:21:19.056Z</guid>
      <pubDate>Fri, 09 Aug 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6133|2024-08-09T06:00:02.311Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6133</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6133|2024-08-09T06:00:02.311Z</guid>
      <pubDate>Fri, 09 Aug 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6158|2024-08-09T06:00:04.497Z -- unknown -- category%20posts%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6158</link>
      <description>The Category Posts Widget WordPress plugin before 4.9.17, term-and-category-based-posts-widget WordPress plugin before 4.9.13 does not validate and escape some of its "Category Posts" widget settings before outputting them back in a page/post where the Widget is embed, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6158|2024-08-09T06:00:04.497Z</guid>
      <pubDate>Fri, 09 Aug 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6136|2024-08-09T06:00:02.952Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6136</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6136|2024-08-09T06:00:02.952Z</guid>
      <pubDate>Fri, 09 Aug 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6230|2024-08-08T14:20:37.111Z -- unknown -- %D9%BE%D9%84%D8%A7%DA%AF%DB%8C%D9%86%20%D9%BE%D8%B1%D8%AF%D8%A7%D8%AE%D8%AA%20%D8%AF%D9%84%D8%AE%D9%88%D8%A7%D9%87</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6230</link>
      <description>The پلاگین پرداخت دلخواه WordPress plugin through 2.9.8 does not have CSRF check in place when resetting its form fields, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6230|2024-08-08T14:20:37.111Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6481|2024-08-08T06:00:03.620Z -- unknown -- search%20%26%20filter%20pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6481</link>
      <description>The Search &amp; Filter Pro WordPress plugin before 2.5.18 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6481|2024-08-08T06:00:03.620Z</guid>
      <pubDate>Thu, 08 Aug 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6884|2024-08-08T06:00:04.409Z -- unknown -- gutenberg%20blocks%20with%20ai%20by%20kadence%20wp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6884</link>
      <description>The Gutenberg Blocks with AI by Kadence WP  WordPress plugin before 3.2.39 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6884|2024-08-08T06:00:04.409Z</guid>
      <pubDate>Thu, 08 Aug 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3636|2024-08-07T15:58:37.007Z -- unknown -- pinpoint%20booking%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3636</link>
      <description>The Pinpoint Booking System  WordPress plugin before 2.9.9.4.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3636|2024-08-07T15:58:37.007Z</guid>
      <pubDate>Mon, 05 Aug 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6494|2024-08-07T13:11:42.671Z -- unknown -- wordpress%20file%20upload</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6494</link>
      <description>The WordPress File Upload WordPress plugin before 4.24.8 does not properly sanitize and escape certain parameters, which could allow unauthenticated users to execute stored cross-site scripting (XSS) attacks.</description>
      <guid isPermaLink="false">CVE-2024-6494|2024-08-07T13:11:42.671Z</guid>
      <pubDate>Wed, 07 Aug 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6496|2024-08-07T13:39:08.900Z -- unknown -- light%20poll</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6496</link>
      <description>The Light Poll WordPress plugin through 1.0.0 does not have CSRF checks when deleting polls, which could allow attackers to make logged in users perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6496|2024-08-07T13:39:08.900Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2232|2024-08-07T13:43:12.434Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2232</link>
      <description>The  lacks CSRF checks allowing a user to invite any user to any group (including private groups)</description>
      <guid isPermaLink="false">CVE-2024-2232|2024-08-07T13:43:12.434Z</guid>
      <pubDate>Mon, 05 Aug 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6720|2024-08-06T20:44:42.779Z -- unknown -- light%20poll</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6720</link>
      <description>The Light Poll WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6720|2024-08-06T20:44:42.779Z</guid>
      <pubDate>Tue, 06 Aug 2024 15:28:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6651|2024-08-06T14:52:56.919Z -- unknown -- wordpress%20file%20upload</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6651</link>
      <description>The WordPress File Upload WordPress plugin before 4.24.8 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6651|2024-08-06T14:52:56.919Z</guid>
      <pubDate>Tue, 06 Aug 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-7084|2024-08-06T14:20:31.332Z -- unknown -- ajax%20search%20lite</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-7084</link>
      <description>The Ajax Search Lite WordPress plugin before 4.12.1 does not sanitise and escape some parameters, which could allow users with a role as low as Admin+ to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-7084|2024-08-06T14:20:31.332Z</guid>
      <pubDate>Tue, 06 Aug 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0856|2024-08-05T18:06:03.929Z -- unknown -- appointment%20booking%20calendar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0856</link>
      <description>The Appointment Booking Calendar WordPress plugin before 1.3.83 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as adding a booking to the calendar without paying.</description>
      <guid isPermaLink="false">CVE-2024-0856|2024-08-05T18:06:03.929Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1745|2024-08-05T18:36:56.611Z -- unknown -- testimonial%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1745</link>
      <description>The Testimonial Slider WordPress plugin before 2.3.7 does not properly ensure that a user has the necessary capabilities to edit certain sensitive Testimonial Slider WordPress plugin before 2.3.7 settings, making it possible for users with at least the Author role to edit them.</description>
      <guid isPermaLink="false">CVE-2024-1745|2024-08-05T18:36:56.611Z</guid>
      <pubDate>Tue, 26 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5081|2024-08-05T14:41:43.350Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5081</link>
      <description>The wp-eMember WordPress plugin before v10.7.0 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5081|2024-08-05T14:41:43.350Z</guid>
      <pubDate>Mon, 05 Aug 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6390|2024-08-05T14:09:05.215Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6390</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.1.0 does not properly sanitise and escape some of its Quizz settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6390|2024-08-05T14:09:05.215Z</guid>
      <pubDate>Sat, 03 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7232|2024-08-02T17:32:05.721Z -- unknown -- backup%20and%20restore%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7232</link>
      <description>The Backup and Restore WordPress  WordPress plugin through 1.45 does not protect some log files containing sensitive information such as site configuration etc, allowing unauthenticated users to access such data</description>
      <guid isPermaLink="false">CVE-2023-7232|2024-08-02T17:32:05.721Z</guid>
      <pubDate>Tue, 26 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0858|2024-08-02T15:24:33.234Z -- unknown -- innovs%20hr</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0858</link>
      <description>The Innovs HR WordPress plugin through 1.0.3.4 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as adding them as employees.</description>
      <guid isPermaLink="false">CVE-2024-0858|2024-08-02T15:24:33.234Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3476|2024-08-02T13:39:35.587Z -- unknown -- side%20menu%20lite</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3476</link>
      <description>The Side Menu Lite  WordPress plugin before 4.2.1 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting buttons via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3476|2024-08-02T13:39:35.587Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3368|2024-08-01T20:05:08.481Z -- unknown -- all%20in%20one%20seo</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3368</link>
      <description>The All in One SEO  WordPress plugin before 4.6.1.1 does not validate and escape some of its Post fields before outputting them back, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3368|2024-08-01T20:05:08.481Z</guid>
      <pubDate>Mon, 20 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3265|2024-08-01T20:05:08.327Z -- unknown -- advanced%20search</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3265</link>
      <description>The Advanced Search WordPress plugin through 1.1.6 does not properly escape parameters appended to an SQL query, making it possible for users with the administrator role to conduct SQL Injection attacks in the context of a multisite WordPress configurations.</description>
      <guid isPermaLink="false">CVE-2024-3265|2024-08-01T20:05:08.327Z</guid>
      <pubDate>Thu, 25 Apr 2024 21:25:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4530|2024-08-01T20:40:47.526Z -- unknown -- business%20card</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4530</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as editing card categories via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4530|2024-08-01T20:40:47.526Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4977|2024-08-01T20:55:10.402Z -- unknown -- index%20wp%20mysql%20for%20speed</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4977</link>
      <description>The Index WP MySQL For Speed WordPress plugin before 1.4.18 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-4977|2024-08-01T20:55:10.402Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4751|2024-08-01T20:47:41.669Z -- unknown -- wp%20prayer%20ii</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4751</link>
      <description>The WP Prayer II WordPress plugin through 2.4.7 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4751|2024-08-01T20:47:41.669Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3921|2024-08-01T20:26:57.194Z -- unknown -- gianism</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3921</link>
      <description>The Gianism WordPress plugin through 5.1.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3921|2024-08-01T20:26:57.194Z</guid>
      <pubDate>Wed, 29 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4377|2024-08-01T20:40:47.117Z -- unknown -- dop%20shortcodes</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4377</link>
      <description>The DOP Shortcodes WordPress plugin through 1.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4377|2024-08-01T20:40:47.117Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4565|2024-08-01T20:47:40.536Z -- unknown -- advanced%20custom%20fields%20%28acf%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4565</link>
      <description>The Advanced Custom Fields (ACF) WordPress plugin before 6.3, Advanced Custom Fields Pro WordPress plugin before 6.3 allows you to display custom field values for any post via shortcode without checking for the correct access</description>
      <guid isPermaLink="false">CVE-2024-4565|2024-08-01T20:47:40.536Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4959|2024-08-01T20:55:10.320Z -- unknown -- frontend%20checklist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4959</link>
      <description>The Frontend Checklist WordPress plugin through 2.3.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4959|2024-08-01T20:55:10.320Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3823|2024-08-01T20:20:02.164Z -- unknown -- base64%20encoder%2Fdecoder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3823</link>
      <description>The Base64 Encoder/Decoder WordPress plugin through 0.9.2 does not have CSRF check when updating its settings, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3823|2024-08-01T20:20:02.164Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3756|2024-08-01T20:20:00.980Z -- unknown -- mf%20gig%20calendar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3756</link>
      <description>The MF Gig Calendar WordPress plugin through 1.2.1 does not have CSRF checks in some places, which could allow attackers to make logged in Contributors and above delete arbitrary events via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3756|2024-08-01T20:20:00.980Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4382|2024-08-01T20:40:47.111Z -- unknown -- cb%20%28legacy%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4382</link>
      <description>The CB (legacy) WordPress plugin through 0.9.4.18 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting codes, timeframes, and bookings via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4382|2024-08-01T20:40:47.111Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4856|2024-08-01T20:55:10.223Z -- unknown -- fs%20product%20inquiry</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4856</link>
      <description>The FS Product Inquiry WordPress plugin through 1.1.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin or unauthenticated users</description>
      <guid isPermaLink="false">CVE-2024-4856|2024-08-01T20:55:10.223Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4900|2024-08-01T20:55:10.269Z -- unknown -- seopress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4900</link>
      <description>The SEOPress  WordPress plugin before 7.8 does not validate and escape one of its Post settings, which could allow contributor and above role to perform Open redirect attacks against any user viewing a malicious post</description>
      <guid isPermaLink="false">CVE-2024-4900|2024-08-01T20:55:10.269Z</guid>
      <pubDate>Mon, 24 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3629|2024-08-01T20:19:59.879Z -- unknown -- hl%20twitter</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3629</link>
      <description>The HL Twitter WordPress plugin through 2014.1.18 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3629|2024-08-01T20:19:59.879Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3918|2024-08-01T20:26:56.960Z -- unknown -- pet%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3918</link>
      <description>The Pet Manager WordPress plugin through 1.4 does not sanitise and escape some of its Pet settings, which could allow high privilege users such as Contributor to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-3918|2024-08-01T20:26:56.960Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3405|2024-08-01T20:12:07.156Z -- unknown -- wp%20prayer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3405</link>
      <description>The WP Prayer WordPress plugin through 2.0.9 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3405|2024-08-01T20:12:07.156Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3474|2024-08-01T20:12:07.276Z -- unknown -- wow%20skype%20buttons</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3474</link>
      <description>The Wow Skype Buttons WordPress plugin before 4.0.4 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting buttons via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3474|2024-08-01T20:12:07.276Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4061|2024-08-01T20:26:57.322Z -- unknown -- survey%20maker</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4061</link>
      <description>The Survey Maker  WordPress plugin before 4.2.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4061|2024-08-01T20:26:57.322Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3407|2024-08-01T20:12:06.634Z -- unknown -- wp%20prayer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3407</link>
      <description>The WP Prayer WordPress plugin through 2.0.9 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3407|2024-08-01T20:12:06.634Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4270|2024-08-01T20:33:53.193Z -- unknown -- svgmagic</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4270</link>
      <description>The SVGMagic WordPress plugin through 1.1 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4270|2024-08-01T20:33:53.193Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4269|2024-08-01T20:33:53.069Z -- unknown -- svg%20block</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4269</link>
      <description>The SVG Block WordPress plugin before 1.1.20 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4269|2024-08-01T20:33:53.069Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3755|2024-08-01T20:20:01.098Z -- unknown -- mf%20gig%20calendar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3755</link>
      <description>The MF Gig Calendar WordPress plugin through 1.2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as editor to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3755|2024-08-01T20:20:01.098Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3749|2024-08-01T20:20:01.139Z -- unknown -- sp%20project%20%26%20document%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3749</link>
      <description>The SP Project &amp; Document Manager WordPress plugin through 4.71 lacks proper access controllers and allows a logged in user to view and download files belonging to another user</description>
      <guid isPermaLink="false">CVE-2024-3749|2024-08-01T20:20:01.139Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4535|2024-08-01T20:40:47.529Z -- unknown -- kkprogressbar2%20free</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4535</link>
      <description>The KKProgressbar2 Free  WordPress plugin through 1.1.4.2 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4535|2024-08-01T20:40:47.529Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4145|2024-08-01T20:33:52.569Z -- unknown -- search%20%26%20replace</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4145</link>
      <description>The Search &amp; Replace WordPress plugin before 3.2.2 does not sanitize and escape a parameter before using it in a SQL statement, allowing admins to perform SQL injection attacks (such as within a multi-site network).</description>
      <guid isPermaLink="false">CVE-2024-4145|2024-08-01T20:33:52.569Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3903|2024-08-01T20:26:56.964Z -- unknown -- add%20custom%20css%20and%20js</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3903</link>
      <description>The Add Custom CSS and JS WordPress plugin through 1.20 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in as author and above add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3903|2024-08-01T20:26:56.964Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3669|2024-08-01T20:20:01.025Z -- unknown -- web%20directory%20free</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3669</link>
      <description>The Web Directory Free WordPress plugin before 1.7.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3669|2024-08-01T20:20:01.025Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4655|2024-08-01T20:47:41.826Z -- unknown -- ultimate%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4655</link>
      <description>The Ultimate Blocks  WordPress plugin before 3.1.9 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4655|2024-08-01T20:47:41.826Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4381|2024-08-01T20:40:46.927Z -- unknown -- cb%20%28legacy%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4381</link>
      <description>The CB (legacy) WordPress plugin through 0.9.4.18 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4381|2024-08-01T20:40:46.927Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3999|2024-08-01T20:26:57.231Z -- unknown -- eazydocs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3999</link>
      <description>The EazyDocs  WordPress plugin before 2.5.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3999|2024-08-01T20:26:57.231Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4759|2024-08-01T20:47:41.891Z -- unknown -- mime%20types%20extended</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4759</link>
      <description>The Mime Types Extended WordPress plugin through 0.11 does not sanitise uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2024-4759|2024-08-01T20:47:41.891Z</guid>
      <pubDate>Tue, 25 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3993|2024-08-01T20:26:57.248Z -- unknown -- azan%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3993</link>
      <description>The AZAN Plugin WordPress plugin through 0.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3993|2024-08-01T20:26:57.248Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3477|2024-08-01T20:12:07.199Z -- unknown -- popup%20box</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3477</link>
      <description>The Popup Box  WordPress plugin before 2.2.7 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting popups via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3477|2024-08-01T20:12:07.199Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3751|2024-08-01T20:20:01.023Z -- unknown -- seriously%20simple%20podcasting</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3751</link>
      <description>The Seriously Simple Podcasting WordPress plugin before 3.3.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3751|2024-08-01T20:20:01.023Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3971|2024-08-01T20:26:57.245Z -- unknown -- similarity</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3971</link>
      <description>The Similarity WordPress plugin through 3.0 does not have CSRF check in place when resetting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3971|2024-08-01T20:26:57.245Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3406|2024-08-01T20:12:07.274Z -- unknown -- wp%20prayer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3406</link>
      <description>The WP Prayer WordPress plugin through 2.0.9 does not have CSRF check in place when updating its email settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3406|2024-08-01T20:12:07.274Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4602|2024-08-01T20:47:41.440Z -- unknown -- embed%20peertube%20playlist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4602</link>
      <description>The Embed Peertube Playlist WordPress plugin before 1.10 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4602|2024-08-01T20:47:41.440Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3476|2024-08-01T20:12:07.793Z -- unknown -- side%20menu%20lite</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3476</link>
      <description>The Side Menu Lite  WordPress plugin before 4.2.1 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting buttons via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3476|2024-08-01T20:12:07.793Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3977|2024-08-01T20:26:57.263Z -- unknown -- wordpress%20jitsi%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3977</link>
      <description>The WordPress Jitsi Shortcode WordPress plugin through 0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3977|2024-08-01T20:26:57.263Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4096|2024-08-01T20:33:52.136Z -- unknown -- responsive%20tabs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4096</link>
      <description>The Responsive Tabs WordPress plugin through 4.0.8 does not sanitise and escape some of its Tab settings, which could allow high privilege users such as Contributors and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4096|2024-08-01T20:33:52.136Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4750|2024-08-01T20:47:41.684Z -- unknown -- buddyboss-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4750</link>
      <description>The buddyboss-platform WordPress plugin before 2.6.0 contains an IDOR vulnerability that allows a user to like a private post by manipulating the ID included in the request</description>
      <guid isPermaLink="false">CVE-2024-4750|2024-08-01T20:47:41.684Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4480|2024-08-01T20:40:47.127Z -- unknown -- wp%20prayer%20ii</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4480</link>
      <description>The WP Prayer II WordPress plugin through 2.4.7 does not have CSRF check in place when updating its email settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4480|2024-08-01T20:40:47.127Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3478|2024-08-01T20:12:07.350Z -- unknown -- herd%20effects</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3478</link>
      <description>The Herd Effects  WordPress plugin before 5.2.7 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting effects via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3478|2024-08-01T20:12:07.350Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4757|2024-08-01T20:47:41.785Z -- unknown -- logo%20manager%20for%20enamad</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4757</link>
      <description>The Logo Manager For Enamad WordPress plugin through 0.7.0 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4757|2024-08-01T20:47:41.785Z</guid>
      <pubDate>Tue, 25 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3964|2024-08-01T20:26:57.228Z -- unknown -- product%20enquiry%20for%20woocommerce</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3964</link>
      <description>The Product Enquiry for WooCommerce WordPress plugin before 3.1.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3964|2024-08-01T20:26:57.228Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4533|2024-08-01T20:40:47.525Z -- unknown -- kkprogressbar2%20free</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4533</link>
      <description>The KKProgressbar2 Free  WordPress plugin through 1.1.4.2 does not sanitize and escape a parameter before using it in a SQL statement, allowing admin users to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2024-4533|2024-08-01T20:40:47.525Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4616|2024-08-01T20:47:41.576Z -- unknown -- widget%20bundle</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4616</link>
      <description>The Widget Bundle WordPress plugin through 2.0.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against only unauthenticated users</description>
      <guid isPermaLink="false">CVE-2024-4616|2024-08-01T20:47:41.576Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3475|2024-08-01T20:12:07.619Z -- unknown -- sticky%20buttons</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3475</link>
      <description>The Sticky Buttons  WordPress plugin before 3.2.4 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting buttons via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3475|2024-08-01T20:12:07.619Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3917|2024-08-01T20:26:57.082Z -- unknown -- pet%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3917</link>
      <description>The Pet Manager WordPress plugin through 1.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3917|2024-08-01T20:26:57.082Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3643|2024-08-01T20:20:00.408Z -- unknown -- newsletter%20popup</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3643</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not have CSRF check when deleting list, which could allow attackers to make logged in admins perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3643|2024-08-01T20:20:00.408Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3644|2024-08-01T20:20:00.100Z -- unknown -- newsletter%20popup</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3644</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3644|2024-08-01T20:20:00.100Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4752|2024-08-01T20:47:41.832Z -- unknown -- eventon</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4752</link>
      <description>The EventON WordPress plugin before 2.2.15 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4752|2024-08-01T20:47:41.832Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3630|2024-08-01T20:19:59.934Z -- unknown -- hl%20twitter</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3630</link>
      <description>The HL Twitter WordPress plugin through 2014.1.18 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3630|2024-08-01T20:19:59.934Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4749|2024-08-01T20:47:41.749Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4749</link>
      <description>The wp-eMember WordPress plugin before 10.3.9 does not sanitize and escape the "fieldId" parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2024-4749|2024-08-01T20:47:41.749Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5002|2024-08-01T20:55:10.411Z -- unknown -- user%20submitted%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5002</link>
      <description>The User Submitted Posts  WordPress plugin before 20240516 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5002|2024-08-01T20:55:10.411Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3963|2024-08-01T20:26:57.225Z -- unknown -- giveaways%20and%20contests%20by%20rafflepress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3963</link>
      <description>The Giveaways and Contests by RafflePress  WordPress plugin before 1.12.14 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3963|2024-08-01T20:26:57.225Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3752|2024-08-01T20:20:01.118Z -- unknown -- crelly%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3752</link>
      <description>The Crelly Slider WordPress plugin through 1.4.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3752|2024-08-01T20:20:01.118Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3703|2024-08-01T20:20:00.768Z -- unknown -- carousel%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3703</link>
      <description>The Carousel Slider WordPress plugin before 2.2.10 does not validate and escape some of its Slide options before outputting them back in the page/post where the related Slide shortcode is embed, which could allow users with the Editor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3703|2024-08-01T20:20:00.768Z</guid>
      <pubDate>Fri, 03 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5003|2024-08-01T20:55:10.444Z -- unknown -- wp%20stacker</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5003</link>
      <description>The WP Stacker WordPress plugin through 1.8.5 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5003|2024-08-01T20:55:10.444Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4970|2024-08-01T20:55:10.423Z -- unknown -- widget%20bundle</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4970</link>
      <description>The Widget Bundle WordPress plugin through 2.0.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4970|2024-08-01T20:55:10.423Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3692|2024-08-01T20:20:01.145Z -- unknown -- gutenverse</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3692</link>
      <description>The Gutenverse  WordPress plugin before 1.9.1 does not validate the htmlTag option in various of its block before outputting it back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3692|2024-08-01T20:20:01.145Z</guid>
      <pubDate>Fri, 03 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3992|2024-08-01T20:26:57.219Z -- unknown -- amen</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3992</link>
      <description>The Amen WordPress plugin through 3.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3992|2024-08-01T20:26:57.219Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3276|2024-08-01T20:05:08.383Z -- unknown -- lightbox%20%26%20modal%20popup%20wordpress%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3276</link>
      <description>The Lightbox &amp; Modal Popup WordPress Plugin  WordPress plugin before 2.7.28, foobox-image-lightbox-premium WordPress plugin before 2.7.28 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-3276|2024-08-01T20:05:08.383Z</guid>
      <pubDate>Tue, 18 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3939|2024-08-01T20:26:57.093Z -- unknown -- ditty</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3939</link>
      <description>The Ditty  WordPress plugin before 3.1.36 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3939|2024-08-01T20:26:57.093Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4756|2024-08-01T20:47:41.910Z -- unknown -- wp%20backpack</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4756</link>
      <description>The WP Backpack WordPress plugin through 2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4756|2024-08-01T20:47:41.910Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3972|2024-08-01T20:26:57.234Z -- unknown -- similarity</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3972</link>
      <description>The Similarity WordPress plugin through 3.0 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3972|2024-08-01T20:26:57.234Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4755|2024-08-01T20:47:41.777Z -- unknown -- google%20cse</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4755</link>
      <description>The Google CSE WordPress plugin through 1.0.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4755|2024-08-01T20:47:41.777Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3937|2024-08-01T20:26:57.163Z -- unknown -- playlist%20for%20youtube</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3937</link>
      <description>The Playlist for Youtube WordPress plugin through 1.32 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3937|2024-08-01T20:26:57.163Z</guid>
      <pubDate>Wed, 29 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4474|2024-08-01T20:40:47.250Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4474</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4474|2024-08-01T20:40:47.250Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4057|2024-08-01T20:26:57.268Z -- unknown -- gutenberg%20blocks%20with%20ai%20by%20kadence%20wp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4057</link>
      <description>The Gutenberg Blocks with AI by Kadence WP  WordPress plugin before 3.2.37 does not validate and escape some of its block attributes before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4057|2024-08-01T20:26:57.268Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3634|2024-08-01T20:19:59.932Z -- unknown -- month%20name%20translation%20benaceur</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3634</link>
      <description>The month name translation benaceur WordPress plugin before 2.3.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3634|2024-08-01T20:19:59.932Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3231|2024-08-01T20:05:08.235Z -- unknown -- popup4phone</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3231</link>
      <description>The Popup4Phone WordPress plugin through 1.3.2 does not sanitise and escape some parameters, which could allow unauthenticated users to perform Cross-Site Scripting attacks against admins.</description>
      <guid isPermaLink="false">CVE-2024-3231|2024-08-01T20:05:08.235Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4475|2024-08-01T20:40:47.373Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4475</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not have CSRF check when clearing logs, which could allow attackers to make a logged in admin clear the logs them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4475|2024-08-01T20:40:47.373Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4271|2024-08-01T20:33:53.183Z -- unknown -- svgator</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4271</link>
      <description>The SVGator  WordPress plugin through 1.2.6 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4271|2024-08-01T20:33:53.183Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4753|2024-08-01T20:47:41.783Z -- unknown -- wp%20secure%20maintenance</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4753</link>
      <description>The WP Secure Maintenance WordPress plugin before 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4753|2024-08-01T20:47:41.783Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3966|2024-08-01T20:26:57.169Z -- unknown -- pray%20for%20me</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3966</link>
      <description>The Pray For Me WordPress plugin through 1.0.4 does not sanitise and escape some parameters, which could unauthenticated visitors to perform Cross-Site Scripting attacks that trigger when an admin visits the Prayer Requests in the WP Admin</description>
      <guid isPermaLink="false">CVE-2024-3966|2024-08-01T20:26:57.169Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3710|2024-08-01T20:20:01.159Z -- unknown -- image%20photo%20gallery%20final%20tiles%20grid</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3710</link>
      <description>The Image Photo Gallery Final Tiles Grid WordPress plugin before 3.6.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3710|2024-08-01T20:20:01.159Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5004|2024-08-01T20:55:10.410Z -- unknown -- cm%20popup%20plugin%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5004</link>
      <description>The CM Popup Plugin for WordPress  WordPress plugin before 1.6.6 does not sanitise and escape some of the campaign settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5004|2024-08-01T20:55:10.410Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3580|2024-08-01T20:12:07.739Z -- unknown -- popup4phone</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3580</link>
      <description>The Popup4Phone WordPress plugin through 1.3.2 does not sanitise and escape some of its settings, which could allow high privilege users such as Editor to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3580|2024-08-01T20:12:07.739Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4969|2024-08-01T20:55:10.397Z -- unknown -- widget%20bundle</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4969</link>
      <description>The Widget Bundle WordPress plugin through 2.0.0 does not have CSRF checks when logging Widgets, which could allow attackers to make logged in admin enable/disable widgets via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4969|2024-08-01T20:55:10.397Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3919|2024-08-01T20:26:56.962Z -- unknown -- openpgp%20form%20encryption%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3919</link>
      <description>The OpenPGP Form Encryption for WordPress plugin before 1.5.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-3919|2024-08-01T20:26:56.962Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3822|2024-08-01T20:20:02.163Z -- unknown -- base64%20encoder%2Fdecoder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3822</link>
      <description>The Base64 Encoder/Decoder WordPress plugin through 0.9.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3822|2024-08-01T20:20:02.163Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3824|2024-08-01T20:20:01.601Z -- unknown -- base64%20encoder%2Fdecoder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3824</link>
      <description>The Base64 Encoder/Decoder WordPress plugin through 0.9.2 does not have CSRF check in place when resetting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3824|2024-08-01T20:20:01.601Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4005|2024-08-01T20:26:57.290Z -- unknown -- social%20pixel</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4005</link>
      <description>The Social Pixel WordPress plugin through 2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4005|2024-08-01T20:26:57.290Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3594|2024-08-01T20:12:08.113Z -- unknown -- idonate</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3594</link>
      <description>The IDonate  WordPress plugin through 1.9.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3594|2024-08-01T20:12:08.113Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4388|2024-08-01T20:40:47.248Z -- unknown -- cas</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4388</link>
      <description>This  does not validate a path generated with user input when downloading files, allowing unauthenticated user to download arbitrary files from the server</description>
      <guid isPermaLink="false">CVE-2024-4388|2024-08-01T20:40:47.248Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4664|2024-08-01T20:47:41.600Z -- unknown -- wp%20chat%20app</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4664</link>
      <description>The WP Chat App WordPress plugin before 3.6.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admins to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2024-4664|2024-08-01T20:47:41.600Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3239|2024-08-01T20:05:08.328Z -- unknown -- post%20grid%20gutenberg%20blocks%20and%20wordpress%20blog%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3239</link>
      <description>The Post Grid Gutenberg Blocks and WordPress Blog Plugin  WordPress plugin before 4.0.2 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3239|2024-08-01T20:05:08.328Z</guid>
      <pubDate>Mon, 13 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3472|2024-08-01T20:12:06.941Z -- unknown -- modal%20window</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3472</link>
      <description>The Modal Window  WordPress plugin before 5.3.10 does not have CSRF check in place when bulk deleting modals, which could allow attackers to make a logged in admin delete them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3472|2024-08-01T20:12:06.941Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3941|2024-08-01T20:26:57.170Z -- unknown -- recaptcha%20jetpack</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3941</link>
      <description>The reCAPTCHA Jetpack WordPress plugin through 0.2.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged-in admin add Stored XSS payloads via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2024-3941|2024-08-01T20:26:57.170Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4149|2024-08-01T20:33:52.460Z -- unknown -- floating%20chat%20widget%3A%20contact%20chat%20icons%2C%20whatsapp%2C%20telegram%20chat%2C%20line%20messenger%2C%20wechat%2C%20email%2C%20sms%2C%20call%20button</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4149</link>
      <description>The Floating Chat Widget: Contact Chat Icons, WhatsApp, Telegram Chat, Line Messenger, WeChat, Email, SMS, Call Button  WordPress plugin before 3.2.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-4149|2024-08-01T20:33:52.460Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4627|2024-08-01T20:47:41.192Z -- unknown -- rank%20math%20seo</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4627</link>
      <description>The Rank Math SEO  WordPress plugin before 1.0.219 does not sanitise and escape some of its settings, which could allow users with access to the General Settings (by default admin, however such access can be given to lower roles via the Role Manager feature of the Rank Math SEO  WordPress plugin before 1.0.219) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-4627|2024-08-01T20:47:41.192Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4399|2024-08-01T20:40:47.185Z -- unknown -- cas</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4399</link>
      <description>The  does not validate a parameter before making a request to it, which could allow unauthenticated users to perform SSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4399|2024-08-01T20:40:47.185Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4534|2024-08-01T20:40:47.496Z -- unknown -- kkprogressbar2%20free</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4534</link>
      <description>The KKProgressbar2 Free  WordPress plugin through 1.1.4.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4534|2024-08-01T20:40:47.496Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3642|2024-08-01T20:19:59.856Z -- unknown -- newsletter%20popup</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3642</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not have CSRF check when deleting subscriber, which could allow attackers to make logged in admins perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3642|2024-08-01T20:19:59.856Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4924|2024-08-01T20:55:10.336Z -- unknown -- social%20sharing%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4924</link>
      <description>The Social Sharing Plugin  WordPress plugin before 3.3.63 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4924|2024-08-01T20:55:10.336Z</guid>
      <pubDate>Wed, 12 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4957|2024-08-01T20:55:10.298Z -- unknown -- frontend%20checklist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4957</link>
      <description>The Frontend Checklist WordPress plugin through 2.3.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4957|2024-08-01T20:55:10.298Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4260|2024-08-01T20:33:52.992Z -- unknown -- page%20builder%20gutenberg%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4260</link>
      <description>The Page Builder Gutenberg Blocks  WordPress plugin before 3.1.12 does not prevent users from pinging arbitrary hosts via some of its shortcodes, which could allow high privilege users such as contributors to perform SSRF attacks.</description>
      <guid isPermaLink="false">CVE-2024-4260|2024-08-01T20:33:52.992Z</guid>
      <pubDate>Tue, 23 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4217|2024-08-01T20:33:53.001Z -- unknown -- shortcodes-ultimate-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4217</link>
      <description>The shortcodes-ultimate-pro WordPress plugin before 7.1.5 does not properly escape some of its shortcodes' settings, making it possible for attackers with a Contributor account to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4217|2024-08-01T20:33:53.001Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3548|2024-08-01T20:12:07.771Z -- unknown -- wp%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3548</link>
      <description>The WP Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 7.1.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3548|2024-08-01T20:12:07.771Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3631|2024-08-01T20:19:59.781Z -- unknown -- hl%20twitter</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3631</link>
      <description>The HL Twitter WordPress plugin through 2014.1.18 does not have CSRF check when unlinking twitter accounts, which could allow attackers to make logged in admins perform such actions via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3631|2024-08-01T20:19:59.781Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4621|2024-08-01T20:47:41.215Z -- unknown -- arforms%20-%20premium%20wordpress%20form%20builder%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4621</link>
      <description>The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4621|2024-08-01T20:47:41.215Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3965|2024-08-01T20:26:57.179Z -- unknown -- pray%20for%20me</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3965</link>
      <description>The Pray For Me WordPress plugin through 1.0.4 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3965|2024-08-01T20:26:57.179Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4620|2024-08-01T20:47:41.237Z -- unknown -- arforms%20-%20premium%20wordpress%20form%20builder%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4620</link>
      <description>The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.6 allows unauthenticated users to modify uploaded files in such a way that PHP code can be uploaded when an upload file input is included on a form</description>
      <guid isPermaLink="false">CVE-2024-4620|2024-08-01T20:47:41.237Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3241|2024-08-01T20:05:08.311Z -- unknown -- ultimate%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3241</link>
      <description>The Ultimate Blocks  WordPress plugin before 3.1.7 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3241|2024-08-01T20:05:08.311Z</guid>
      <pubDate>Tue, 14 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3940|2024-08-01T20:26:57.211Z -- unknown -- recaptcha%20jetpack</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3940</link>
      <description>The reCAPTCHA Jetpack WordPress plugin through 0.2.2 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3940|2024-08-01T20:26:57.211Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3986|2024-08-01T20:26:57.259Z -- unknown -- sportspress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3986</link>
      <description>The SportsPress  WordPress plugin before 2.7.22 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3986|2024-08-01T20:26:57.259Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3637|2024-08-01T20:19:59.637Z -- unknown -- responsive%20contact%20form%20builder%20%26%20lead%20generation%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3637</link>
      <description>The Responsive Contact Form Builder &amp; Lead Generation Plugin WordPress plugin through 1.8.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3637|2024-08-01T20:19:59.637Z</guid>
      <pubDate>Fri, 03 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3236|2024-08-01T20:05:08.361Z -- unknown -- popup%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3236</link>
      <description>The Popup Builder WordPress plugin before 1.1.33 does not sanitise and escape some of its Notification fields, which could allow users such as contributor and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-3236|2024-08-01T20:05:08.361Z</guid>
      <pubDate>Mon, 17 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3410|2024-08-01T20:12:07.388Z -- unknown -- dn%20footer%20contacts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3410</link>
      <description>The DN Footer Contacts WordPress plugin before 1.6.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3410|2024-08-01T20:12:07.388Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3920|2024-08-01T20:26:57.098Z -- unknown -- flattr</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3920</link>
      <description>The Flattr WordPress plugin through 1.2.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3920|2024-08-01T20:26:57.098Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4289|2024-08-01T20:33:53.242Z -- unknown -- sailthru%20triggermail</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4289</link>
      <description>The Sailthru Triggermail WordPress plugin through 1.1 does not sanitise and escape various parameters before outputting them back in pages and attributes, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-4289|2024-08-01T20:33:53.242Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3188|2024-08-01T20:05:07.524Z -- unknown -- wp%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3188</link>
      <description>The WP Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 7.1.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3188|2024-08-01T20:05:07.524Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4934|2024-08-01T20:55:10.243Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4934</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.0.2 does not validate and escape some of its Quiz fields before outputting them back in a page/post where the Quiz is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4934|2024-08-01T20:55:10.243Z</guid>
      <pubDate>Mon, 01 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4529|2024-08-01T20:40:47.475Z -- unknown -- business%20card</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4529</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as deleting card categories via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4529|2024-08-01T20:40:47.475Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3633|2024-08-01T20:19:59.847Z -- unknown -- webp%20%26%20svg%20support</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3633</link>
      <description>The WebP &amp; SVG Support WordPress plugin through 1.4.0 does not sanitise uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2024-3633|2024-08-01T20:19:59.847Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3754|2024-08-01T20:20:01.066Z -- unknown -- alemha%20watermarker</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3754</link>
      <description>The Alemha watermarker WordPress plugin through 1.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3754|2024-08-01T20:20:01.066Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4290|2024-08-01T20:33:53.097Z -- unknown -- sailthru%20triggermail</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4290</link>
      <description>The Sailthru Triggermail WordPress plugin through 1.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4290|2024-08-01T20:33:53.097Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4531|2024-08-01T20:40:47.443Z -- unknown -- business%20card</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4531</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as editing cards via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4531|2024-08-01T20:40:47.443Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4857|2024-08-01T20:55:10.184Z -- unknown -- fs%20product%20inquiry</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4857</link>
      <description>The FS Product Inquiry WordPress plugin through 1.1.1 does not sanitise and escape some form submissions, which could allow unauthenticated users to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4857|2024-08-01T20:55:10.184Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4477|2024-08-01T20:40:47.341Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4477</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not sanitise and escape some of its log data before outputting them back in an admin dashboard, leading to an Unauthenticated Stored Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-4477|2024-08-01T20:40:47.341Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4180|2024-08-01T20:33:52.970Z -- unknown -- the%20events%20calendar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4180</link>
      <description>The Events Calendar WordPress plugin before 6.4.0.1 does not properly sanitize user-submitted content when rendering some views via AJAX.</description>
      <guid isPermaLink="false">CVE-2024-4180|2024-08-01T20:33:52.970Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3591|2024-08-01T20:12:07.872Z -- unknown -- geo%20controller</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3591</link>
      <description>The Geo Controller WordPress plugin before 8.6.5 unserializes user input via some of its AJAX actions and REST API routes, which could allow unauthenticated users to perform PHP Object Injection when a suitable gadget is present on the blog.</description>
      <guid isPermaLink="false">CVE-2024-3591|2024-08-01T20:12:07.872Z</guid>
      <pubDate>Wed, 01 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3481|2024-08-01T20:12:07.376Z -- unknown -- counter%20box</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3481</link>
      <description>The Counter Box  WordPress plugin before 1.2.4 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such deleting counters via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3481|2024-08-01T20:12:07.376Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4384|2024-08-01T20:40:46.484Z -- unknown -- cssable%20countdown</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4384</link>
      <description>The CSSable Countdown WordPress plugin through 1.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4384|2024-08-01T20:40:46.484Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4305|2024-08-01T20:33:53.172Z -- unknown -- post%20grid%20gutenberg%20blocks%20and%20wordpress%20blog%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4305</link>
      <description>The Post Grid Gutenberg Blocks and WordPress Blog Plugin  WordPress plugin before 4.1.0 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4305|2024-08-01T20:33:53.172Z</guid>
      <pubDate>Mon, 17 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3590|2024-08-01T20:12:07.919Z -- unknown -- letterpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3590</link>
      <description>The LetterPress  WordPress plugin through 1.2.2 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks, such as delete arbitrary subscribers</description>
      <guid isPermaLink="false">CVE-2024-3590|2024-08-01T20:12:07.919Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4094|2024-08-01T20:33:52.215Z -- unknown -- simple%20share%20buttons%20adder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4094</link>
      <description>The Simple Share Buttons Adder WordPress plugin before 8.5.1 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-4094|2024-08-01T20:33:52.215Z</guid>
      <pubDate>Tue, 18 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3632|2024-08-01T20:20:00.487Z -- unknown -- smart%20image%20gallery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3632</link>
      <description>The Smart Image Gallery WordPress plugin before 1.0.19 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3632|2024-08-01T20:20:00.487Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3748|2024-08-01T20:20:01.097Z -- unknown -- sp%20project%20%26%20document%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3748</link>
      <description>The SP Project &amp; Document Manager WordPress plugin through 4.71 is missing validation in its upload function, allowing a user to manipulate the `user_id` to make it appear that a file was uploaded by another user</description>
      <guid isPermaLink="false">CVE-2024-3748|2024-08-01T20:20:01.097Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4899|2024-08-01T20:55:10.228Z -- unknown -- seopress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4899</link>
      <description>The SEOPress  WordPress plugin before 7.8 does not sanitise and escape some of its Post settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-4899|2024-08-01T20:55:10.228Z</guid>
      <pubDate>Mon, 24 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3471|2024-08-01T20:12:07.754Z -- unknown -- button%20generator</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3471</link>
      <description>The Button Generator  WordPress plugin before 3.0 does not have CSRF check in place when bulk deleting, which could allow attackers to make a logged in admin delete buttons via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3471|2024-08-01T20:12:07.754Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4272|2024-08-01T20:33:53.006Z -- unknown -- support%20svg</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4272</link>
      <description>The Support SVG  WordPress plugin before 1.1.0 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4272|2024-08-01T20:33:53.006Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3641|2024-08-01T20:19:59.822Z -- unknown -- newsletter%20popup</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3641</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not sanitise and escape some parameters, which could allow unauthenticated visitors to perform Cross-Site Scripting attacks against admins</description>
      <guid isPermaLink="false">CVE-2024-3641|2024-08-01T20:19:59.822Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3978|2024-08-01T20:26:57.200Z -- unknown -- wordpress%20jitsi%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3978</link>
      <description>The WordPress Jitsi Shortcode WordPress plugin through 0.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3978|2024-08-01T20:26:57.200Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3261|2024-08-01T20:05:08.497Z -- unknown -- strong%20testimonials</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3261</link>
      <description>The Strong Testimonials WordPress plugin before 3.1.12 does not validate and escape some of its Testimonial fields before outputting them back in a page/post, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks. The attack requires a specific view to be performed</description>
      <guid isPermaLink="false">CVE-2024-3261|2024-08-01T20:05:08.497Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4469|2024-08-01T20:40:47.201Z -- unknown -- wp%20staging%20wordpress%20backup%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4469</link>
      <description>The WP STAGING WordPress Backup Plugin  WordPress plugin before 3.5.0 does not prevent users with the administrator role from pinging conducting SSRF attacks, which may be a problem in multisite configurations.</description>
      <guid isPermaLink="false">CVE-2024-4469|2024-08-01T20:40:47.201Z</guid>
      <pubDate>Fri, 31 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4532|2024-08-01T20:40:47.532Z -- unknown -- business%20card</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4532</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as deleting cards via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4532|2024-08-01T20:40:47.532Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4704|2024-08-01T20:47:41.750Z -- unknown -- contact%20form%207</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4704</link>
      <description>The Contact Form 7 WordPress plugin before 5.9.5 has an open redirect that allows an attacker to utilize a false URL and redirect to the URL of their choosing.</description>
      <guid isPermaLink="false">CVE-2024-4704|2024-08-01T20:47:41.750Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4372|2024-08-01T20:40:47.032Z -- unknown -- carousel%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4372</link>
      <description>The Carousel Slider WordPress plugin before 2.2.11 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4372|2024-08-01T20:40:47.032Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4483|2024-08-01T20:40:47.409Z -- unknown -- email%20encoder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4483</link>
      <description>The Email Encoder  WordPress plugin before 2.2.2 does not escape the WP_Email_Encoder_Bundle_options[protection_text] parameter before outputting it back in an attribute in an admin page, leading to a Stored Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-4483|2024-08-01T20:40:47.409Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3628|2024-08-01T20:19:59.694Z -- unknown -- easyevent</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3628</link>
      <description>The EasyEvent WordPress plugin through 1.0.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-3628|2024-08-01T20:19:59.694Z</guid>
      <pubDate>Tue, 07 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4886|2024-08-01T20:55:10.232Z -- unknown -- buddyboss-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4886</link>
      <description>The  contains an IDOR vulnerability that allows a user to comment on a private post by manipulating the ID included in the request</description>
      <guid isPermaLink="false">CVE-2024-4886|2024-08-01T20:55:10.232Z</guid>
      <pubDate>Wed, 05 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3753|2024-08-01T20:20:01.144Z -- unknown -- hostel</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3753</link>
      <description>The Hostel WordPress plugin before 1.1.5.3 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3753|2024-08-01T20:20:01.144Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3582|2024-08-01T20:12:07.895Z -- unknown -- ungallery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3582</link>
      <description>The UnGallery WordPress plugin through 2.2.4 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3582|2024-08-01T20:12:07.895Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3552|2024-08-01T20:12:07.922Z -- unknown -- web%20directory%20free</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3552</link>
      <description>The Web Directory Free WordPress plugin before 1.7.0 does not sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection with different techniques like UNION, Time-Based and Error-Based.</description>
      <guid isPermaLink="false">CVE-2024-3552|2024-08-01T20:12:07.922Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3288|2024-08-01T20:05:08.225Z -- unknown -- logo%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3288</link>
      <description>The Logo Slider  WordPress plugin before 4.0.0 does not validate and escape some of its Slider Settings before outputting them back in attributes, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3288|2024-08-01T20:05:08.225Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4758|2024-08-01T20:47:41.788Z -- unknown -- muslim%20prayer%20time%20bd</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4758</link>
      <description>The Muslim Prayer Time BD WordPress plugin through 2.4 does not have CSRF check in place when reseting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4758|2024-08-01T20:47:41.788Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1588|2024-08-01T18:40:21.438Z -- unknown -- sendpress%20newsletters</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1588</link>
      <description>The SendPress Newsletters WordPress plugin through 1.23.11.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1588|2024-08-01T18:40:21.438Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0974|2024-08-01T18:26:30.265Z -- unknown -- social%20media%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0974</link>
      <description>The Social Media Widget WordPress plugin before 4.0.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0974|2024-08-01T18:26:30.265Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1846|2024-08-01T18:56:22.316Z -- unknown -- responsive%20tabs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1846</link>
      <description>The Responsive Tabs WordPress plugin before 4.0.7 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1846|2024-08-01T18:56:22.316Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0399|2024-08-01T18:04:49.575Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0399</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 29.7 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to an SQL injection exploitable by Subscriber+ role.</description>
      <guid isPermaLink="false">CVE-2024-0399|2024-08-01T18:04:49.575Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0711|2024-08-01T18:11:35.750Z -- unknown -- buttons%20shortcode%20and%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0711</link>
      <description>The Buttons Shortcode and Widget WordPress plugin through 1.16 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-0711|2024-08-01T18:11:35.750Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0559|2024-08-01T18:11:35.226Z -- unknown -- enhanced%20text%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0559</link>
      <description>The Enhanced Text Widget WordPress plugin before 1.6.6 does not validate and escape some of its Widget options before outputting them back in attributes, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0559|2024-08-01T18:11:35.226Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1307|2024-08-01T18:33:25.411Z -- unknown -- smart%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1307</link>
      <description>The Smart Forms  WordPress plugin before 2.6.94 does not have proper authorization in some actions, which could allow users with a role as low as a subscriber to call them and perform unauthorized actions</description>
      <guid isPermaLink="false">CVE-2024-1307|2024-08-01T18:33:25.411Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1290|2024-08-01T18:33:25.378Z -- unknown -- user%20registration</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1290</link>
      <description>The User Registration WordPress plugin before 2.12 does not prevent users with at least the contributor role from rendering sensitive shortcodes, allowing them to generate, and leak, valid password reset URLs, which they can use to take over any accounts.</description>
      <guid isPermaLink="false">CVE-2024-1290|2024-08-01T18:33:25.378Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1273|2024-08-01T18:33:25.509Z -- unknown -- starbox</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1273</link>
      <description>The Starbox WordPress plugin before 3.5.0 does not sanitise and escape some parameters, which could allow users with a role as low as Contributor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1273|2024-08-01T18:33:25.509Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0905|2024-08-01T18:18:19.000Z -- unknown -- fancy%20product%20designer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0905</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.8 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against unauthenticated and admin-level users</description>
      <guid isPermaLink="false">CVE-2024-0905|2024-08-01T18:18:19.000Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0757|2024-08-01T18:18:18.347Z -- unknown -- insert%20or%20embed%20articulate%20content%20into%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0757</link>
      <description>The Insert or Embed Articulate Content into WordPress plugin through 4.3000000023 is not properly filtering which file extensions are allowed to be imported on the server, allowing the uploading of malicious code within zip files</description>
      <guid isPermaLink="false">CVE-2024-0757|2024-08-01T18:18:18.347Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1962|2024-08-01T18:56:22.447Z -- unknown -- cm%20download%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1962</link>
      <description>The CM Download Manager  WordPress plugin before 2.9.1 does not have CSRF checks in some places, which could allow attackers to make logged in admins edit downloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-1962|2024-08-01T18:56:22.447Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0779|2024-08-01T18:18:18.348Z -- unknown -- enjoy%20social%20feed%20plugin%20for%20wordpress%20website</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0779</link>
      <description>The Enjoy Social Feed plugin for WordPress website WordPress plugin through 6.2.2 does not have authorisation and CSRF in various function hooked to admin_init, allowing unauthenticated users to call them and unlink arbitrary users Instagram Account for example</description>
      <guid isPermaLink="false">CVE-2024-0779|2024-08-01T18:18:18.348Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1658|2024-08-01T18:48:21.523Z -- unknown -- grid%20shortcodes</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1658</link>
      <description>The Grid Shortcodes WordPress plugin before 1.1.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1658|2024-08-01T18:48:21.523Z</guid>
      <pubDate>Mon, 18 Mar 2024 15:15:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1295|2024-08-01T18:33:25.358Z -- unknown -- events-calendar-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1295</link>
      <description>The events-calendar-pro WordPress plugin before 6.4.0.1, The Events Calendar WordPress plugin before 6.4.0.1 does not prevent users with at least the contributor role from leaking details about events they shouldn't have access to. (e.g. password-protected events, drafts, etc.)</description>
      <guid isPermaLink="false">CVE-2024-1295|2024-08-01T18:33:25.358Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1754|2024-08-01T18:48:21.982Z -- unknown -- nps%20computy</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1754</link>
      <description>The NPS computy WordPress plugin through 2.7.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1754|2024-08-01T18:48:21.982Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0973|2024-08-01T18:26:30.496Z -- unknown -- widget%20for%20social%20page%20feeds</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0973</link>
      <description>The Widget for Social Page Feeds WordPress plugin before 6.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0973|2024-08-01T18:26:30.496Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1743|2024-08-01T18:48:21.661Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1743</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 29.8 does not sanitise and escape various parameters before outputting them back in pages and attributes, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-1743|2024-08-01T18:48:21.661Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0951|2024-08-01T18:26:30.206Z -- unknown -- advanced%20social%20feeds%20widget%20%26%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0951</link>
      <description>The Advanced Social Feeds Widget &amp; Shortcode WordPress plugin through 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0951|2024-08-01T18:26:30.206Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1712|2024-08-01T18:48:21.840Z -- unknown -- carousel%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1712</link>
      <description>The Carousel Slider WordPress plugin before 2.2.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1712|2024-08-01T18:48:21.840Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1956|2024-08-01T18:56:22.681Z -- unknown -- wpb-show-core</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1956</link>
      <description>The wpb-show-core WordPress plugin before 2.7 does not sanitise and escape the parameters before outputting it back in the response of an unauthenticated request, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-1956|2024-08-01T18:56:22.681Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1204|2024-08-01T18:33:25.079Z -- unknown -- meta%20box</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1204</link>
      <description>The Meta Box  WordPress plugin before 5.9.4 does not prevent users with at least the contributor role from access arbitrary custom fields assigned to other user's posts.</description>
      <guid isPermaLink="false">CVE-2024-1204|2024-08-01T18:33:25.079Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0677|2024-08-01T18:11:35.728Z -- unknown -- pz-linkcard</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0677</link>
      <description>The Pz-LinkCard WordPress plugin through 2.5.1 does not prevent users from pinging arbitrary hosts via some of its shortcodes, which could allow high privilege users such as contributors to perform SSRF attacks.</description>
      <guid isPermaLink="false">CVE-2024-0677|2024-08-01T18:11:35.728Z</guid>
      <pubDate>Thu, 28 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1745|2024-08-01T18:48:21.986Z -- unknown -- testimonial%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1745</link>
      <description>The Testimonial Slider WordPress plugin before 2.3.7 does not properly ensure that a user has the necessary capabilities to edit certain sensitive Testimonial Slider WordPress plugin before 2.3.7 settings, making it possible for users with at least the Author role to edit them.</description>
      <guid isPermaLink="false">CVE-2024-1745|2024-08-01T18:48:21.986Z</guid>
      <pubDate>Tue, 26 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0780|2024-08-01T18:18:18.158Z -- unknown -- enjoy%20social%20feed%20plugin%20for%20wordpress%20website</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0780</link>
      <description>The Enjoy Social Feed plugin for WordPress website WordPress plugin through 6.2.2 does not have authorisation when resetting its database, allowing any authenticated users, such as subscriber to perform such action</description>
      <guid isPermaLink="false">CVE-2024-0780|2024-08-01T18:18:18.158Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1755|2024-08-01T18:48:21.954Z -- unknown -- nps%20computy</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1755</link>
      <description>The NPS computy WordPress plugin through 2.7.5 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-1755|2024-08-01T18:48:21.954Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1319|2024-08-01T18:33:25.378Z -- unknown -- events%20tickets%20plus</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1319</link>
      <description>The Events Tickets Plus WordPress plugin before 5.9.1 does not prevent users with at least the contributor role from leaking the attendees list on any post type regardless of status. (e.g. draft, private, pending review, password-protected, and trashed posts).</description>
      <guid isPermaLink="false">CVE-2024-1319|2024-08-01T18:33:25.378Z</guid>
      <pubDate>Mon, 04 Mar 2024 21:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0756|2024-08-01T18:18:17.955Z -- unknown -- insert%20or%20embed%20articulate%20content%20into%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0756</link>
      <description>The Insert or Embed Articulate Content into WordPress plugin through 4.3000000023 lacks validation of URLs when adding iframes, allowing attackers to inject an iFrame in the page and thus load arbitrary content from any page.</description>
      <guid isPermaLink="false">CVE-2024-0756|2024-08-01T18:18:17.955Z</guid>
      <pubDate>Tue, 04 Jun 2024 14:28:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1905|2024-08-01T18:56:22.435Z -- unknown -- smart%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1905</link>
      <description>The Smart Forms  WordPress plugin before 2.6.96 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1905|2024-08-01T18:56:22.435Z</guid>
      <pubDate>Mon, 29 Apr 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0365|2024-08-01T18:04:49.725Z -- unknown -- fancy%20product%20designer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0365</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.5 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by adminstrators.</description>
      <guid isPermaLink="false">CVE-2024-0365|2024-08-01T18:04:49.725Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1983|2024-08-01T18:56:22.570Z -- unknown -- simple%20ajax%20chat</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1983</link>
      <description>The Simple Ajax Chat  WordPress plugin before 20240223 does not prevent visitors from using malicious Names when using the chat, which will be reflected unsanitized to other users.</description>
      <guid isPermaLink="false">CVE-2024-1983|2024-08-01T18:56:22.570Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1076|2024-08-01T18:26:30.496Z -- unknown -- ssl%20zen</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1076</link>
      <description>The SSL Zen  WordPress plugin before 4.6.0 only relies on the use of .htaccess to prevent visitors from accessing the site's generated private keys, which allows an attacker to read them if the site runs on a server who doesn't support .htaccess files, like NGINX.</description>
      <guid isPermaLink="false">CVE-2024-1076|2024-08-01T18:26:30.496Z</guid>
      <pubDate>Wed, 08 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0561|2024-08-01T18:11:35.631Z -- unknown -- ultimate%20posts%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0561</link>
      <description>The Ultimate Posts Widget WordPress plugin before 2.3.1 does not validate and escape some of its Widget options before outputting them back in attributes, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0561|2024-08-01T18:11:35.631Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1306|2024-08-01T18:33:25.642Z -- unknown -- smart%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1306</link>
      <description>The Smart Forms  WordPress plugin before 2.6.94 does not have CSRF checks in some places, which could allow attackers to make logged-in users perform unwanted actions via CSRF attacks, such as editing entries, and we consider it a medium risk.</description>
      <guid isPermaLink="false">CVE-2024-1306|2024-08-01T18:33:25.642Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0881|2024-08-01T18:18:18.980Z -- unknown -- post%20grid%2C%20form%20maker%2C%20popup%20maker%2C%20woocommerce%20blocks%2C%20post%20blocks%2C%20post%20carousel</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0881</link>
      <description>The Post Grid, Form Maker, Popup Maker, WooCommerce Blocks, Post Blocks, Post Carousel  WordPress plugin before 2.2.76 does not prevent password protected posts from being displayed in the result of some unauthenticated AJAX actions, allowing unauthenticated users to read such posts</description>
      <guid isPermaLink="false">CVE-2024-0881|2024-08-01T18:18:18.980Z</guid>
      <pubDate>Thu, 11 Apr 2024 15:36:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1232|2024-08-01T18:33:25.282Z -- unknown -- cm%20download%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1232</link>
      <description>The CM Download Manager  WordPress plugin before 2.9.0 does not have CSRF checks in some places, which could allow attackers to make logged in admins delete downloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-1232|2024-08-01T18:33:25.282Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1589|2024-08-01T18:40:21.454Z -- unknown -- sendpress%20newsletters</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1589</link>
      <description>The SendPress Newsletters WordPress plugin through 1.23.11.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1589|2024-08-01T18:40:21.454Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1660|2024-08-01T18:48:21.539Z -- unknown -- top%20bar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1660</link>
      <description>The Top Bar WordPress plugin before 3.0.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1660|2024-08-01T18:48:21.539Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1401|2024-08-01T18:40:20.383Z -- unknown -- profile%20box%20shortcode%20and%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1401</link>
      <description>The Profile Box Shortcode And Widget WordPress plugin before 1.2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1401|2024-08-01T18:40:20.383Z</guid>
      <pubDate>Tue, 19 Mar 2024 14:28:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1330|2024-08-01T18:33:25.586Z -- unknown -- kadence-blocks-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1330</link>
      <description>The kadence-blocks-pro WordPress plugin before 2.3.8 does not prevent users with at least the contributor role using some of its shortcode's functionalities to leak arbitrary options from the database.</description>
      <guid isPermaLink="false">CVE-2024-1330|2024-08-01T18:33:25.586Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0856|2024-08-01T18:18:18.979Z -- unknown -- appointment%20booking%20calendar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0856</link>
      <description>The Appointment Booking Calendar WordPress plugin before 1.3.83 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as adding a booking to the calendar without paying.</description>
      <guid isPermaLink="false">CVE-2024-0856|2024-08-01T18:18:18.979Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0719|2024-08-01T18:11:35.778Z -- unknown -- tabs%20shortcode%20and%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0719</link>
      <description>The Tabs Shortcode and Widget WordPress plugin through 1.17 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-0719|2024-08-01T18:11:35.778Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1068|2024-08-01T18:26:30.460Z -- unknown -- 404%20solution</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1068</link>
      <description>The 404 Solution WordPress plugin before 2.35.8 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2024-1068|2024-08-01T18:26:30.460Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1845|2024-08-01T18:56:22.201Z -- unknown -- vikrentcar%20car%20rental%20management%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1845</link>
      <description>The VikRentCar Car Rental Management System WordPress plugin before 1.3.2 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-1845|2024-08-01T18:56:22.201Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1287|2024-08-01T18:33:25.572Z -- unknown -- pmpro-member-directory</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1287</link>
      <description>The pmpro-member-directory WordPress plugin before 1.2.6 does not prevent users with at least the contributor role from leaking other users' sensitive information, including password hashes.</description>
      <guid isPermaLink="false">CVE-2024-1287|2024-08-01T18:33:25.572Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1274|2024-08-01T18:33:25.374Z -- unknown -- my%20calendar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1274</link>
      <description>The My Calendar WordPress plugin before 3.4.24 does not sanitise and escape some parameters, which could allow users with a role as low as Subscriber to perform Cross-Site Scripting attacks (depending on the permissions set by the admin)</description>
      <guid isPermaLink="false">CVE-2024-1274|2024-08-01T18:33:25.374Z</guid>
      <pubDate>Tue, 02 Apr 2024 05:15:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1279|2024-08-01T18:33:25.359Z -- unknown -- paid%20memberships%20pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1279</link>
      <description>The Paid Memberships Pro WordPress plugin before 2.12.9 does not prevent user with at least the contributor role from leaking other users' sensitive metadata.</description>
      <guid isPermaLink="false">CVE-2024-1279|2024-08-01T18:33:25.359Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1564|2024-08-01T18:40:21.441Z -- unknown -- wp-schema-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1564</link>
      <description>The wp-schema-pro WordPress plugin before 2.7.16 does not validate post access allowing a contributor user to access custom fields on any post regardless of post type or status via a shortcode</description>
      <guid isPermaLink="false">CVE-2024-1564|2024-08-01T18:40:21.441Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1316|2024-08-01T18:33:25.700Z -- unknown -- event%20tickets%20and%20registration</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1316</link>
      <description>The Event Tickets and Registration WordPress plugin before 5.8.1, Events Tickets Plus WordPress plugin before 5.9.1 does not prevent users with at least the contributor role from leaking the existence of certain events they shouldn't have access to. (e.g. draft, private, pending review, pw-protected, and trashed events).</description>
      <guid isPermaLink="false">CVE-2024-1316|2024-08-01T18:33:25.700Z</guid>
      <pubDate>Mon, 04 Mar 2024 21:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1219|2024-08-01T18:33:25.329Z -- unknown -- easy%20social%20feed</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1219</link>
      <description>The Easy Social Feed  WordPress plugin before 6.5.6 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-1219|2024-08-01T18:33:25.329Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0902|2024-08-01T18:18:18.981Z -- unknown -- fancy%20product%20designer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0902</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.81 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0902|2024-08-01T18:18:18.981Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1849|2024-08-01T18:56:22.286Z -- unknown -- wp%20customer%20reviews</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1849</link>
      <description>The WP Customer Reviews WordPress plugin before 3.7.1 does not validate a parameter allowing contributor and above users to redirect a page to a malicious URL</description>
      <guid isPermaLink="false">CVE-2024-1849|2024-08-01T18:56:22.286Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1756|2024-08-01T18:48:21.980Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1756</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 29.8 does not have authorisation and CSRF in an AJAX action, allowing any authenticated users, such as subscriber, to call it and retrieve the list of customer email addresses along with their id, first name and last name</description>
      <guid isPermaLink="false">CVE-2024-1756|2024-08-01T18:48:21.980Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1310|2024-08-01T18:33:25.395Z -- unknown -- woocommerce</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1310</link>
      <description>The WooCommerce WordPress plugin before 8.6 does not prevent users with at least the contributor role from leaking products they shouldn't have access to. (e.g. private, draft and trashed products)</description>
      <guid isPermaLink="false">CVE-2024-1310|2024-08-01T18:33:25.395Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1526|2024-08-01T18:40:21.555Z -- unknown -- hubbub%20lite</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1526</link>
      <description>The Hubbub Lite  WordPress plugin before 1.33.1 does not ensure that user have access to password protected post before displaying its content in a meta tag.</description>
      <guid isPermaLink="false">CVE-2024-1526|2024-08-01T18:40:21.555Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0868|2024-08-01T18:18:18.696Z -- unknown -- coreactivity%3A%20activity%20logging%20plugin%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0868</link>
      <description>The coreActivity: Activity Logging plugin for WordPress plugin before 2.1 retrieved IP addresses of requests via headers such X-FORWARDED to log them, allowing users to spoof them by providing an arbitrary value</description>
      <guid isPermaLink="false">CVE-2024-0868|2024-08-01T18:18:18.696Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0858|2024-08-01T18:18:18.975Z -- unknown -- innovs%20hr</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0858</link>
      <description>The Innovs HR WordPress plugin through 1.0.3.4 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as adding them as employees.</description>
      <guid isPermaLink="false">CVE-2024-0858|2024-08-01T18:18:18.975Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0672|2024-08-01T18:11:35.671Z -- unknown -- pz-linkcard</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0672</link>
      <description>The Pz-LinkCard WordPress plugin through 2.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-0672|2024-08-01T18:11:35.671Z</guid>
      <pubDate>Thu, 28 Mar 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1231|2024-08-01T18:33:25.085Z -- unknown -- cm%20download%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1231</link>
      <description>The CM Download Manager  WordPress plugin before 2.9.0 does not have CSRF checks in some places, which could allow attackers to make logged in admins unpublish downloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-1231|2024-08-01T18:33:25.085Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1333|2024-08-01T18:33:25.475Z -- unknown -- responsive%20pricing%20table</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1333</link>
      <description>The Responsive Pricing Table WordPress plugin before 5.1.11 does not validate and escape some of its Pricing Table options before outputting them back in a page/post where the related shortcode is embed, which could allow users with the author role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1333|2024-08-01T18:33:25.475Z</guid>
      <pubDate>Mon, 18 Mar 2024 15:15:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1746|2024-08-01T18:48:21.820Z -- unknown -- testimonial%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1746</link>
      <description>The Testimonial Slider WordPress plugin before 2.3.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1746|2024-08-01T18:48:21.820Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0904|2024-08-01T18:18:19.034Z -- unknown -- fancy%20product%20designer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0904</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.81 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0904|2024-08-01T18:18:19.034Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1664|2024-08-01T18:48:21.799Z -- unknown -- responsive%20gallery%20grid</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1664</link>
      <description>The Responsive Gallery Grid WordPress plugin before 2.3.11 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1664|2024-08-01T18:48:21.799Z</guid>
      <pubDate>Tue, 09 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1331|2024-08-01T18:33:25.390Z -- unknown -- team%20members</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1331</link>
      <description>The Team Members WordPress plugin before 5.3.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the author role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-1331|2024-08-01T18:33:25.390Z</guid>
      <pubDate>Mon, 18 Mar 2024 15:15:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1292|2024-08-01T18:33:25.542Z -- unknown -- wpb-show-core</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1292</link>
      <description>The WPB Show Core WordPress plugin before 2.7 does not sanitise and escape some parameters before outputting them back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-1292|2024-08-01T18:33:25.542Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0673|2024-08-01T18:11:35.653Z -- unknown -- pz-linkcard</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0673</link>
      <description>The Pz-LinkCard WordPress plugin through 2.5.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-0673|2024-08-01T18:11:35.653Z</guid>
      <pubDate>Thu, 28 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1752|2024-08-01T18:48:22.029Z -- unknown -- font%20farsi</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1752</link>
      <description>The Font Farsi WordPress plugin through 1.6.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1752|2024-08-01T18:48:22.029Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1286|2024-08-01T18:33:25.435Z -- unknown -- pmpro-membership-maps</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1286</link>
      <description>The pmpro-membership-maps WordPress plugin before 0.7 does not prevent users with at least the contributor role from leaking sensitive information about users with a membership on the site.</description>
      <guid isPermaLink="false">CVE-2024-1286|2024-08-01T18:33:25.435Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1487|2024-08-01T18:40:21.404Z -- unknown -- photos%20and%20files%20contest%20gallery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1487</link>
      <description>The Photos and Files Contest Gallery WordPress plugin before 21.3.1 does not sanitize and escape some parameters, which could allow users with a role as low as author to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-1487|2024-08-01T18:40:21.404Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0820|2024-08-01T18:18:19.145Z -- unknown -- jobs%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0820</link>
      <description>The Jobs for WordPress plugin before 2.7.4 does not sanitise and escape some parameters, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-0820|2024-08-01T18:18:19.145Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1958|2024-08-01T18:56:22.557Z -- unknown -- wpb-show-core</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1958</link>
      <description>The WPB Show Core WordPress plugin before 2.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin or unauthenticated users</description>
      <guid isPermaLink="false">CVE-2024-1958|2024-08-01T18:56:22.557Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0337|2024-08-01T18:18:19.215Z -- unknown -- travelpayouts%3A%20all%20travel%20brands%20in%20one%20place</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0337</link>
      <description>The Travelpayouts: All Travel Brands in One Place WordPress plugin through 1.1.15 is vulnerable to Open Redirect due to insufficient validation on the travelpayouts_redirect variable. This makes it possible for unauthenticated attackers to redirect users to potentially malicious sites if they can successfully trick them into performing an action.</description>
      <guid isPermaLink="false">CVE-2024-0337|2024-08-01T18:18:19.215Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0427|2024-08-01T18:04:49.774Z -- unknown -- arforms%20-%20premium%20wordpress%20form%20builder%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0427</link>
      <description>The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.4.1 does not properly escape user-controlled input when it is reflected in some of its AJAX actions.</description>
      <guid isPermaLink="false">CVE-2024-0427|2024-08-01T18:04:49.774Z</guid>
      <pubDate>Wed, 12 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3983|2024-08-01T16:08:02.885Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3983</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 30.1 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting customers via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3983|2024-08-01T16:08:02.885Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1747|2024-08-01T14:24:07.026Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1747</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 30.2 does not have authorisation and CSRF in various AJAX actions, allowing any authenticated users, such as subscriber, to call them and update/delete/create customer metadata, also leading to Stored Cross-Site Scripting due to the lack of escaping of said metadata values.</description>
      <guid isPermaLink="false">CVE-2024-1747|2024-08-01T14:24:07.026Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6529|2024-08-01T06:00:05.939Z -- unknown -- ultimate%20classified%20listings</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6529</link>
      <description>The Ultimate Classified Listings WordPress plugin before 1.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6529|2024-08-01T06:00:05.939Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2872|2024-08-01T06:00:04.565Z -- unknown -- socialdriver-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2872</link>
      <description>The socialdriver-framework WordPress plugin before 2024.04.30 does not sanitise and escape some of its settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2872|2024-08-01T06:00:04.565Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2843|2024-08-01T06:00:03.997Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2843</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 30.1 does not have CSRF checks in some places, which could allow attackers to make logged in admin users delete users via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2843|2024-08-01T06:00:03.997Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4090|2024-08-01T06:00:05.396Z -- unknown -- floating%20notification%20bar%2C%20sticky%20menu%20on%20scroll%2C%20announcement%20banner%2C%20and%20sticky%20header%20for%20any%20theme</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4090</link>
      <description>The Floating Notification Bar, Sticky Menu on Scroll, Announcement Banner, and Sticky Header for Any   WordPress plugin before 2.7.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-4090|2024-08-01T06:00:05.396Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3983|2024-08-01T06:00:05.102Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3983</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 30.1 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting customers via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3983|2024-08-01T06:00:05.102Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6496|2024-08-01T06:00:05.664Z -- unknown -- light%20poll</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6496</link>
      <description>The Light Poll WordPress plugin through 1.0.0 does not have CSRF checks when deleting polls, which could allow attackers to make logged in users perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6496|2024-08-01T06:00:05.664Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1747|2024-08-01T06:00:02.536Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1747</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 30.2 does not have authorisation and CSRF in various AJAX actions, allowing any authenticated users, such as subscriber, to call them and update/delete/create customer metadata, also leading to Stored Cross-Site Scripting due to the lack of escaping of said metadata values.</description>
      <guid isPermaLink="false">CVE-2024-1747|2024-08-01T06:00:02.536Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4756|2024-07-31T18:24:52.972Z -- unknown -- wp%20backpack</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4756</link>
      <description>The WP Backpack WordPress plugin through 2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4756|2024-07-31T18:24:52.972Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5975|2024-07-31T18:25:56.292Z -- unknown -- cz%20loan%20management</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5975</link>
      <description>The CZ Loan Management WordPress plugin through 1.1 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2024-5975|2024-07-31T18:25:56.292Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2583|2024-07-31T16:24:54.606Z -- unknown -- wp%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2583</link>
      <description>The WP Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 7.0.5 does not properly escape some of its shortcodes attributes before they are echoed back to users, making it possible for users with the contributor role to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-2583|2024-07-31T16:24:54.606Z</guid>
      <pubDate>Sat, 13 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6223|2024-07-31T14:26:48.577Z -- unknown -- send%20email%20only%20on%20reply%20to%20my%20comment</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6223</link>
      <description>The Send email only on Reply to My Comment WordPress plugin through 1.0.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6223|2024-07-31T14:26:48.577Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6695|2024-07-31T06:00:04.649Z -- unknown -- user%20profile%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6695</link>
      <description>it's possible for an attacker to gain administrative access without having any kind of account on the targeted site and perform unauthorized actions. This is due to improper logic flow on the user registration process.</description>
      <guid isPermaLink="false">CVE-2024-6695|2024-07-31T06:00:04.649Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6165|2024-07-31T06:00:02.242Z -- unknown -- wanotifier</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6165</link>
      <description>The WANotifier  WordPress plugin before 2.6.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6165|2024-07-31T06:00:02.242Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6412|2024-07-31T06:00:04.014Z -- unknown -- html%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6412</link>
      <description>The HTML Forms  WordPress plugin before 1.3.34 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6412|2024-07-31T06:00:04.014Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6272|2024-07-31T06:00:02.822Z -- unknown -- spidercontacts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6272</link>
      <description>The SpiderContacts WordPress plugin through 1.1.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6272|2024-07-31T06:00:02.822Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6408|2024-07-31T06:00:03.358Z -- unknown -- slider%20by%2010web</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6408</link>
      <description>The Slider by 10Web  WordPress plugin before 1.2.57 does not sanitise and escape its Slider Title, which could allow high privilege users such as editors and above to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-6408|2024-07-31T06:00:03.358Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6164|2024-07-30T17:13:18.492Z -- unknown -- filter%20%26%20grids</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6164</link>
      <description>The Filter &amp; Grids WordPress plugin before 2.8.33 is vulnerable to Local File Inclusion via the post_layout parameter. This makes it possible for an unauthenticated attacker to include and execute PHP files on the server, allowing the execution of any PHP code in those files.</description>
      <guid isPermaLink="false">CVE-2024-6164|2024-07-30T17:13:18.492Z</guid>
      <pubDate>Thu, 18 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6536|2024-07-30T14:05:31.987Z -- unknown -- zephyr%20project%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6536</link>
      <description>The Zephyr Project Manager WordPress plugin before 3.3.99 does not sanitise and escape some of its settings, which could allow high privilege users such as editors and admins to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6536|2024-07-30T14:05:31.987Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3669|2024-07-30T14:34:57.850Z -- unknown -- web%20directory%20free</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3669</link>
      <description>The Web Directory Free WordPress plugin before 1.7.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3669|2024-07-30T14:34:57.850Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3113|2024-07-30T14:01:38.877Z -- unknown -- formflow%3A%20whatsapp%20social%20and%20advanced%20form%20builder%20with%20easy%20lead%20collection</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3113</link>
      <description>The FormFlow: WhatsApp Social and Advanced Form Builder with Easy Lead Collection WordPress plugin before 2.12.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3113|2024-07-30T14:01:38.877Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5808|2024-07-30T14:28:15.917Z -- unknown -- wp%20ajax%20contact%20form</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5808</link>
      <description>The WP Ajax Contact Form WordPress plugin through 2.2.2 does not have CSRF check in place when deleting emails from the email list, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5808|2024-07-30T14:28:15.917Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6021|2024-07-30T14:27:40.127Z -- unknown -- donation%20block%20for%20paypal</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6021</link>
      <description>The Donation Block For PayPal WordPress plugin through 2.1.0 does not sanitise and escape form submissions, leading to a stored cross-site scripting vulnerability</description>
      <guid isPermaLink="false">CVE-2024-6021|2024-07-30T14:27:40.127Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6536|2024-07-30T06:00:10.760Z -- unknown -- zephyr%20project%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6536</link>
      <description>The Zephyr Project Manager WordPress plugin before 3.3.99 does not sanitise and escape some of its settings, which could allow high privilege users such as editors and admins to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6536|2024-07-30T06:00:10.760Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3669|2024-07-30T06:00:06.976Z -- unknown -- web%20directory%20free</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3669</link>
      <description>The Web Directory Free WordPress plugin before 1.7.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3669|2024-07-30T06:00:06.976Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6226|2024-07-30T06:00:10.319Z -- unknown -- wpstickybar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6226</link>
      <description>The WpStickyBar  WordPress plugin through 2.1.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6226|2024-07-30T06:00:10.319Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3113|2024-07-30T06:00:06.437Z -- unknown -- formflow%3A%20whatsapp%20social%20and%20advanced%20form%20builder%20with%20easy%20lead%20collection</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3113</link>
      <description>The FormFlow: WhatsApp Social and Advanced Form Builder with Easy Lead Collection WordPress plugin before 2.12.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3113|2024-07-30T06:00:06.437Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4096|2024-07-30T06:00:07.893Z -- unknown -- responsive%20tabs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4096</link>
      <description>The Responsive Tabs WordPress plugin through 4.0.8 does not sanitise and escape some of its Tab settings, which could allow high privilege users such as Contributors and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4096|2024-07-30T06:00:07.893Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6223|2024-07-30T06:00:09.898Z -- unknown -- send%20email%20only%20on%20reply%20to%20my%20comment</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6223</link>
      <description>The Send email only on Reply to My Comment WordPress plugin through 1.0.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6223|2024-07-30T06:00:09.898Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6230|2024-07-30T06:00:10.533Z -- unknown -- %D9%BE%D9%84%D8%A7%DA%AF%DB%8C%D9%86%20%D9%BE%D8%B1%D8%AF%D8%A7%D8%AE%D8%AA%20%D8%AF%D9%84%D8%AE%D9%88%D8%A7%D9%87</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6230</link>
      <description>The پلاگین پرداخت دلخواه WordPress plugin through 2.9.8 does not have CSRF check in place when resetting its form fields, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6230|2024-07-30T06:00:10.533Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5807|2024-07-30T06:00:08.495Z -- unknown -- business%20card</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5807</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not prevent high privilege users like administrators from uploading malicious PHP files, which could allow them to run arbitrary code on servers hosting their site, even in MultiSite configurations.</description>
      <guid isPermaLink="false">CVE-2024-5807|2024-07-30T06:00:08.495Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1287|2024-07-30T06:00:06.053Z -- unknown -- pmpro-member-directory</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1287</link>
      <description>The pmpro-member-directory WordPress plugin before 1.2.6 does not prevent users with at least the contributor role from leaking other users' sensitive information, including password hashes.</description>
      <guid isPermaLink="false">CVE-2024-1287|2024-07-30T06:00:06.053Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6224|2024-07-30T06:00:10.109Z -- unknown -- send%20email%20only%20on%20reply%20to%20my%20comment</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6224</link>
      <description>The Send email only on Reply to My Comment WordPress plugin through 1.0.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6224|2024-07-30T06:00:10.109Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5808|2024-07-30T06:00:08.895Z -- unknown -- wp%20ajax%20contact%20form</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5808</link>
      <description>The WP Ajax Contact Form WordPress plugin through 2.2.2 does not have CSRF check in place when deleting emails from the email list, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5808|2024-07-30T06:00:08.895Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3986|2024-07-30T06:00:07.510Z -- unknown -- sportspress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3986</link>
      <description>The SportsPress  WordPress plugin before 2.7.22 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3986|2024-07-30T06:00:07.510Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5975|2024-07-30T06:00:09.447Z -- unknown -- cz%20loan%20management</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5975</link>
      <description>The CZ Loan Management WordPress plugin through 1.1 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2024-5975|2024-07-30T06:00:09.447Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5809|2024-07-30T06:00:09.175Z -- unknown -- wp%20ajax%20contact%20form</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5809</link>
      <description>The WP Ajax Contact Form WordPress plugin through 2.2.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against admin users</description>
      <guid isPermaLink="false">CVE-2024-5809|2024-07-30T06:00:09.175Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5765|2024-07-30T06:00:08.234Z -- unknown -- wpstickybar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5765</link>
      <description>The WpStickyBar  WordPress plugin through 2.1.0 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2024-5765|2024-07-30T06:00:08.234Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1286|2024-07-30T06:00:05.284Z -- unknown -- pmpro-membership-maps</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1286</link>
      <description>The pmpro-membership-maps WordPress plugin before 0.7 does not prevent users with at least the contributor role from leaking sensitive information about users with a membership on the site.</description>
      <guid isPermaLink="false">CVE-2024-1286|2024-07-30T06:00:05.284Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6021|2024-07-30T06:00:09.678Z -- unknown -- donation%20block%20for%20paypal</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6021</link>
      <description>The Donation Block For PayPal WordPress plugin through 2.1.0 does not sanitise and escape form submissions, leading to a stored cross-site scripting vulnerability</description>
      <guid isPermaLink="false">CVE-2024-6021|2024-07-30T06:00:09.678Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5604|2024-07-29T19:06:09.171Z -- unknown -- bug%20library</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5604</link>
      <description>The Bug Library WordPress plugin before 2.1.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5604|2024-07-29T19:06:09.171Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4664|2024-07-29T19:49:29.334Z -- unknown -- wp%20chat%20app</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4664</link>
      <description>The WP Chat App WordPress plugin before 3.6.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admins to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2024-4664|2024-07-29T19:49:29.334Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6362|2024-07-29T16:10:22.866Z -- unknown -- ultimate%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6362</link>
      <description>The Ultimate Blocks  WordPress plugin before 3.2.0 does not validate and escape some of its post-grid block attributes before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6362|2024-07-29T16:10:22.866Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6244|2024-07-29T16:54:19.840Z -- unknown -- pz%20frontend%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6244</link>
      <description>The PZ Frontend Manager WordPress plugin before 1.0.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6244|2024-07-29T16:54:19.840Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6490|2024-07-29T14:33:55.817Z -- unknown -- master%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6490</link>
      <description>During testing of the Master Slider  WordPress plugin through 3.9.10, a CSRF vulnerability was found, which allows an unauthorized user to manipulate requests on behalf of the victim and thereby delete all of the sliders inside Master Slider  WordPress plugin through 3.9.10.</description>
      <guid isPermaLink="false">CVE-2024-6490|2024-07-29T14:33:55.817Z</guid>
      <pubDate>Fri, 26 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5285|2024-07-29T06:00:01.890Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5285</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.2 does not have CSRF check in place when deleting affiliates, which could allow attackers to make a logged in user change delete them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5285|2024-07-29T06:00:01.890Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5882|2024-07-29T06:00:06.284Z -- unknown -- ultimate%20classified%20listings</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5882</link>
      <description>The Ultimate Classified Listings WordPress plugin before 1.3 does not validate the `ucl_page` and `layout` parameters allowing unauthenticated users to access PHP files on the server from the listings page</description>
      <guid isPermaLink="false">CVE-2024-5882|2024-07-29T06:00:06.284Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6362|2024-07-29T06:00:07.759Z -- unknown -- ultimate%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6362</link>
      <description>The Ultimate Blocks  WordPress plugin before 3.2.0 does not validate and escape some of its post-grid block attributes before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6362|2024-07-29T06:00:07.759Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6487|2024-07-29T06:00:08.552Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6487</link>
      <description>The Inline Related Posts WordPress plugin before 3.8.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6487|2024-07-29T06:00:08.552Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6366|2024-07-29T06:00:08.248Z -- unknown -- user%20profile%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6366</link>
      <description>The User Profile Builder  WordPress plugin before 3.11.8 does not have proper authorisation, allowing unauthenticated users to upload media files via the async upload functionality of WP.</description>
      <guid isPermaLink="false">CVE-2024-6366|2024-07-29T06:00:08.248Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5883|2024-07-29T06:00:07.364Z -- unknown -- ultimate%20classified%20listings</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5883</link>
      <description>The Ultimate Classified Listings WordPress plugin before 1.3 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5883|2024-07-29T06:00:07.364Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4483|2024-07-29T06:00:01.115Z -- unknown -- email%20encoder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4483</link>
      <description>The Email Encoder  WordPress plugin before 2.2.2 does not escape the WP_Email_Encoder_Bundle_options[protection_text] parameter before outputting it back in an attribute in an admin page, leading to a Stored Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-4483|2024-07-29T06:00:01.115Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3261|2024-07-26T14:50:48.209Z -- unknown -- strong%20testimonials</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3261</link>
      <description>The Strong Testimonials WordPress plugin before 3.1.12 does not validate and escape some of its Testimonial fields before outputting them back in a page/post, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks. The attack requires a specific view to be performed</description>
      <guid isPermaLink="false">CVE-2024-3261|2024-07-26T14:50:48.209Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4977|2024-07-24T19:59:02.122Z -- unknown -- index%20wp%20mysql%20for%20speed</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4977</link>
      <description>The Index WP MySQL For Speed WordPress plugin before 1.4.18 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-4977|2024-07-24T19:59:02.122Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3692|2024-07-24T19:58:15.932Z -- unknown -- gutenverse</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3692</link>
      <description>The Gutenverse  WordPress plugin before 1.9.1 does not validate the htmlTag option in various of its block before outputting it back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3692|2024-07-24T19:58:15.932Z</guid>
      <pubDate>Fri, 03 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5074|2024-07-24T20:14:48.087Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5074</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5074|2024-07-24T20:14:48.087Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2972|2024-07-24T18:27:11.083Z -- unknown -- floating%20chat%20widget%3A%20contact%20chat%20icons%2C%20whatsapp%2C%20telegram%20chat%2C%20line%20messenger%2C%20wechat%2C%20email%2C%20sms%2C%20call%20button</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2972</link>
      <description>The Floating Chat Widget: Contact Chat Icons, WhatsApp, Telegram Chat, Line Messenger, WeChat, Email, SMS, Call Button  WordPress plugin before 3.1.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2972|2024-07-24T18:27:11.083Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3710|2024-07-24T18:29:07.399Z -- unknown -- image%20photo%20gallery%20final%20tiles%20grid</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3710</link>
      <description>The Image Photo Gallery Final Tiles Grid WordPress plugin before 3.6.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3710|2024-07-24T18:29:07.399Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1401|2024-07-24T16:21:24.237Z -- unknown -- profile%20box%20shortcode%20and%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1401</link>
      <description>The Profile Box Shortcode And Widget WordPress plugin before 1.2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1401|2024-07-24T16:21:24.237Z</guid>
      <pubDate>Tue, 19 Mar 2024 14:28:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6094|2024-07-24T06:00:02.906Z -- unknown -- wp%20ulike</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6094</link>
      <description>The WP ULike  WordPress plugin before 4.7.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-6094|2024-07-24T06:00:02.906Z</guid>
      <pubDate>Wed, 24 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3903|2024-07-23T18:41:20.904Z -- unknown -- add%20custom%20css%20and%20js</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3903</link>
      <description>The Add Custom CSS and JS WordPress plugin through 1.20 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in as author and above add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3903|2024-07-23T18:41:20.904Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6231|2024-07-23T13:25:53.653Z -- unknown -- request%20a%20quote</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6231</link>
      <description>The Request a Quote WordPress plugin before 2.4.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6231|2024-07-23T13:25:53.653Z</guid>
      <pubDate>Tue, 23 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4260|2024-07-23T13:07:40.802Z -- unknown -- page%20builder%20gutenberg%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4260</link>
      <description>The Page Builder Gutenberg Blocks  WordPress plugin before 3.1.12 does not prevent users from pinging arbitrary hosts via some of its shortcodes, which could allow high privilege users such as contributors to perform SSRF attacks.</description>
      <guid isPermaLink="false">CVE-2024-4260|2024-07-23T13:07:40.802Z</guid>
      <pubDate>Tue, 23 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5811|2024-07-22T19:57:14.393Z -- unknown -- simple%20video%20directory</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5811</link>
      <description>The Simple Video Directory WordPress plugin before 1.4.4 does not sanitise and escape some of its settings, which could allow contributors and higher to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5811|2024-07-22T19:57:14.393Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5076|2024-07-22T19:48:53.025Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5076</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5076|2024-07-22T19:48:53.025Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3111|2024-07-22T16:16:56.131Z -- unknown -- interactive%20content</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3111</link>
      <description>The Interactive Content  WordPress plugin before 1.15.8 does not validate uploads which could allow a Contributors and above to update malicious SVG files, leading to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2024-3111|2024-07-22T16:16:56.131Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6243|2024-07-22T13:51:48.217Z -- unknown -- html%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6243</link>
      <description>The HTML Forms  WordPress plugin before 1.3.33 does not sanitize and escape the form message inputs, allowing high-privilege users, such as administrators, to perform Stored Cross-Site Scripting (XSS) attacks even when the unfiltered_html capability is disabled.</description>
      <guid isPermaLink="false">CVE-2024-6243|2024-07-22T13:51:48.217Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5529|2024-07-22T06:00:04.206Z -- unknown -- wp%20quicklatex</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5529</link>
      <description>The WP QuickLaTeX WordPress plugin before 3.8.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5529|2024-07-22T06:00:04.206Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6243|2024-07-22T06:00:06.064Z -- unknown -- html%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6243</link>
      <description>The HTML Forms  WordPress plugin before 1.3.33 does not sanitize and escape the form message inputs, allowing high-privilege users, such as administrators, to perform Stored Cross-Site Scripting (XSS) attacks even when the unfiltered_html capability is disabled.</description>
      <guid isPermaLink="false">CVE-2024-6243|2024-07-22T06:00:06.064Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5004|2024-07-22T06:00:01.790Z -- unknown -- cm%20popup%20plugin%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5004</link>
      <description>The CM Popup Plugin for WordPress  WordPress plugin before 1.6.6 does not sanitise and escape some of the campaign settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5004|2024-07-22T06:00:01.790Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6271|2024-07-22T06:00:06.608Z -- unknown -- community%20events</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6271</link>
      <description>The Community Events WordPress plugin before 1.5 does not have CSRF check in place when deleting events, which could allow attackers to make a logged in admin delete arbitrary events via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6271|2024-07-22T06:00:06.608Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6244|2024-07-22T06:00:06.341Z -- unknown -- pz%20frontend%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6244</link>
      <description>The PZ Frontend Manager WordPress plugin before 1.0.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6244|2024-07-22T06:00:06.341Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5973|2024-07-22T06:00:05.733Z -- unknown -- masterstudy%20lms%20wordpress%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5973</link>
      <description>The MasterStudy LMS WordPress Plugin  WordPress plugin before 3.3.24 does not prevent students from creating instructor accounts, which could be used to get access to functionalities they shouldn't have.</description>
      <guid isPermaLink="false">CVE-2024-5973|2024-07-22T06:00:05.733Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6205|2024-07-19T17:16:31.657Z -- unknown -- payplus%20payment%20gateway</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6205</link>
      <description>The PayPlus Payment Gateway WordPress plugin before 6.6.9 does not properly sanitise and escape a parameter before using it in a SQL statement via a WooCommerce API route available to unauthenticated users, leading to an SQL injection vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-6205|2024-07-19T17:16:31.657Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7269|2024-07-19T14:20:56.967Z -- unknown -- artplacer%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7269</link>
      <description>The ArtPlacer Widget WordPress plugin before 2.21.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-7269|2024-07-19T14:20:56.967Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3972|2024-07-18T20:47:08.427Z -- unknown -- similarity</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3972</link>
      <description>The Similarity WordPress plugin through 3.0 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3972|2024-07-18T20:47:08.427Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4305|2024-07-18T20:34:14.260Z -- unknown -- post%20grid%20gutenberg%20blocks%20and%20wordpress%20blog%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4305</link>
      <description>The Post Grid Gutenberg Blocks and WordPress Blog Plugin  WordPress plugin before 4.1.0 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4305|2024-07-18T20:34:14.260Z</guid>
      <pubDate>Mon, 17 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6164|2024-07-18T06:00:04.048Z -- unknown -- filter%20%26%20grids</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6164</link>
      <description>The Filter &amp; Grids WordPress plugin before 2.8.33 is vulnerable to Local File Inclusion via the post_layout parameter. This makes it possible for an unauthenticated attacker to include and execute PHP files on the server, allowing the execution of any PHP code in those files.</description>
      <guid isPermaLink="false">CVE-2024-6164|2024-07-18T06:00:04.048Z</guid>
      <pubDate>Thu, 18 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2430|2024-07-17T13:59:13.988Z -- unknown -- website%20content%20in%20page%20or%20post</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2430</link>
      <description>The Website Content in Page or Post WordPress plugin before 2024.04.09 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2430|2024-07-17T13:59:13.988Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2907|2024-07-17T13:53:10.473Z -- unknown -- agca</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2907</link>
      <description>The AGCA  WordPress plugin before 7.2.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-2907|2024-07-17T13:53:10.473Z</guid>
      <pubDate>Thu, 25 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1295|2024-07-16T17:02:16.338Z -- unknown -- events-calendar-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1295</link>
      <description>The events-calendar-pro WordPress plugin before 6.4.0.1, The Events Calendar WordPress plugin before 6.4.0.1 does not prevent users with at least the contributor role from leaking details about events they shouldn't have access to. (e.g. password-protected events, drafts, etc.)</description>
      <guid isPermaLink="false">CVE-2024-1295|2024-07-16T17:02:16.338Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5472|2024-07-16T13:30:55.450Z -- unknown -- wp%20quicklatex</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5472</link>
      <description>The WP QuickLaTeX WordPress plugin before 3.8.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5472|2024-07-16T13:30:55.450Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3964|2024-07-16T13:56:58.674Z -- unknown -- product%20enquiry%20for%20woocommerce</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3964</link>
      <description>The Product Enquiry for WooCommerce WordPress plugin before 3.1.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3964|2024-07-16T13:56:58.674Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5002|2024-07-15T18:29:55.419Z -- unknown -- user%20submitted%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5002</link>
      <description>The User Submitted Posts  WordPress plugin before 20240516 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5002|2024-07-15T18:29:55.419Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6070|2024-07-15T18:42:51.706Z -- unknown -- if-so%20dynamic%20content%20personalization</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6070</link>
      <description>The If-So Dynamic Content Personalization WordPress plugin before 1.8.0.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6070|2024-07-15T18:42:51.706Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5079|2024-07-15T18:34:02.301Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5079</link>
      <description>The wp-eMember WordPress plugin before 10.6.7 does not sanitise and escape some of the fields when members register, which allows unauthenticated users to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5079|2024-07-15T18:34:02.301Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5286|2024-07-15T18:40:40.075Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5286</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5286|2024-07-15T18:40:40.075Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5282|2024-07-15T16:45:54.048Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5282</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5282|2024-07-15T16:45:54.048Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6075|2024-07-15T16:09:05.215Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6075</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6075|2024-07-15T16:09:05.215Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5080|2024-07-15T16:49:49.740Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5080</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not validate files to be uploaded, which could allow admins to upload arbitrary files such as PHP on the server</description>
      <guid isPermaLink="false">CVE-2024-5080|2024-07-15T16:49:49.740Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5713|2024-07-15T16:41:12.588Z -- unknown -- if-so%20dynamic%20content%20personalization</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5713</link>
      <description>The If-So Dynamic Content Personalization WordPress plugin before 1.8.0.4 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2024-5713|2024-07-15T16:41:12.588Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6075|2024-07-15T14:01:09.916Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6075</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6075|2024-07-15T14:01:09.916Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5644|2024-07-15T14:19:36.372Z -- unknown -- tournamatch</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5644</link>
      <description>The Tournamatch WordPress plugin before 4.6.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5644|2024-07-15T14:19:36.372Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3963|2024-07-15T14:57:22.231Z -- unknown -- giveaways%20and%20contests%20by%20rafflepress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3963</link>
      <description>The Giveaways and Contests by RafflePress  WordPress plugin before 1.12.14 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3963|2024-07-15T14:57:22.231Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5034|2024-07-15T14:28:47.130Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5034</link>
      <description>The SULly WordPress plugin before 4.3.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5034|2024-07-15T14:28:47.130Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4272|2024-07-15T14:34:09.083Z -- unknown -- support%20svg</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4272</link>
      <description>The Support SVG  WordPress plugin before 1.1.0 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4272|2024-07-15T14:34:09.083Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4217|2024-07-15T14:42:02.992Z -- unknown -- shortcodes-ultimate-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4217</link>
      <description>The shortcodes-ultimate-pro WordPress plugin before 7.1.5 does not properly escape some of its shortcodes' settings, making it possible for attackers with a Contributor account to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4217|2024-07-15T14:42:02.992Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5281|2024-07-15T14:23:57.239Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5281</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5281|2024-07-15T14:23:57.239Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5032|2024-07-15T14:00:58.599Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5032</link>
      <description>The SULly WordPress plugin before 4.3.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5032|2024-07-15T14:00:58.599Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5075|2024-07-15T14:56:45.766Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5075</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5075|2024-07-15T14:56:45.766Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4749|2024-07-15T14:13:23.215Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4749</link>
      <description>The wp-eMember WordPress plugin before 10.3.9 does not sanitize and escape the "fieldId" parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2024-4749|2024-07-15T14:13:23.215Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5630|2024-07-15T12:26:40.099Z -- unknown -- insert%20or%20embed%20articulate%20content%20into%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5630</link>
      <description>The Insert or Embed Articulate Content into WordPress plugin before 4.3000000024 does not prevent authors from uploading arbitrary files to the site, which may allow them to upload PHP shells on affected sites.</description>
      <guid isPermaLink="false">CVE-2024-5630|2024-07-15T12:26:40.099Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5033|2024-07-13T22:58:08.451Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5033</link>
      <description>The SULly WordPress plugin before 4.3.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5033|2024-07-13T22:58:08.451Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5028|2024-07-13T22:54:14.789Z -- unknown -- cm%20wordpress%20search%20and%20replace%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5028</link>
      <description>The CM WordPress Search And Replace Plugin WordPress plugin before 1.3.9 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5028|2024-07-13T22:54:14.789Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3753|2024-07-13T22:56:11.000Z -- unknown -- hostel</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3753</link>
      <description>The Hostel WordPress plugin before 1.1.5.3 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3753|2024-07-13T22:56:11.000Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5287|2024-07-13T11:56:55.619Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5287</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in user change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5287|2024-07-13T11:56:55.619Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5626|2024-07-12T20:17:44.270Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5626</link>
      <description>The Inline Related Posts WordPress plugin before 3.7.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5626|2024-07-12T20:17:44.270Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4753|2024-07-12T20:22:50.152Z -- unknown -- wp%20secure%20maintenance</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4753</link>
      <description>The WP Secure Maintenance WordPress plugin before 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4753|2024-07-12T20:22:50.152Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2102|2024-07-12T21:11:29.048Z -- unknown -- salon%20booking%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2102</link>
      <description>The Salon booking system WordPress plugin before 9.6.3 does not properly sanitize and escape the 'Mobile Phone' field and 'sms_prefix' parameter when booking an appointment, allowing customers to conduct Stored Cross-Site Scripting attacks. The payload gets triggered when an admin visits the 'Bookings' page and the malicious script is executed in the admin context.</description>
      <guid isPermaLink="false">CVE-2024-2102|2024-07-12T21:11:29.048Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4655|2024-07-12T20:41:17.314Z -- unknown -- ultimate%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4655</link>
      <description>The Ultimate Blocks  WordPress plugin before 3.1.9 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4655|2024-07-12T20:41:17.314Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2858|2024-07-12T16:25:49.288Z -- unknown -- simple%20buttons%20creator</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2858</link>
      <description>The Simple Buttons Creator WordPress plugin through 1.04 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2858|2024-07-12T16:25:49.288Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0974|2024-07-12T14:39:44.851Z -- unknown -- social%20media%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0974</link>
      <description>The Social Media Widget WordPress plugin before 4.0.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0974|2024-07-12T14:39:44.851Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6024|2024-07-12T14:24:45.218Z -- unknown -- contentlock</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6024</link>
      <description>The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when deleting groups or emails, which could allow attackers to make a logged in admin remove them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6024|2024-07-12T14:24:45.218Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2696|2024-07-12T14:33:17.290Z -- unknown -- socialdriver-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2696</link>
      <description>The socialdriver-framework WordPress plugin before 2024.04.30 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2696|2024-07-12T14:33:17.290Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6026|2024-07-11T14:07:51.087Z -- unknown -- slider%20by%2010web</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6026</link>
      <description>The Slider by 10Web  WordPress plugin before 1.2.56 does not sanitise and escape some of its Slide options, which could allow authenticated users with access to the Sliders (by default Administrator, however this can be changed via the Slider by 10Web  WordPress plugin before 1.2.56's options) and the ability to add images (Editor+) to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6026|2024-07-11T14:07:51.087Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6138|2024-07-11T14:09:08.884Z -- unknown -- secure%20copy%20content%20protection%20and%20content%20locking</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6138</link>
      <description>The Secure Copy Content Protection and Content Locking WordPress plugin before 4.0.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-6138|2024-07-11T14:09:08.884Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4620|2024-07-11T14:35:56.435Z -- unknown -- arforms%20-%20premium%20wordpress%20form%20builder%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4620</link>
      <description>The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.6 allows unauthenticated users to modify uploaded files in such a way that PHP code can be uploaded when an upload file input is included on a form</description>
      <guid isPermaLink="false">CVE-2024-4620|2024-07-11T14:35:56.435Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4477|2024-07-11T14:24:35.827Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4477</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not sanitise and escape some of its log data before outputting them back in an admin dashboard, leading to an Unauthenticated Stored Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-4477|2024-07-11T14:24:35.827Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4474|2024-07-11T14:25:22.083Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4474</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4474|2024-07-11T14:25:22.083Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4475|2024-07-11T14:24:26.720Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4475</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not have CSRF check when clearing logs, which could allow attackers to make a logged in admin clear the logs them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4475|2024-07-11T14:24:26.720Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6025|2024-07-11T14:15:48.397Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6025</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.0.5 does not sanitise and escape some of its Quiz settings, which could allow contributors and higher to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6025|2024-07-11T14:15:48.397Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2375|2024-07-11T14:27:35.555Z -- unknown -- wpqa%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2375</link>
      <description>The WPQA Builder WordPress plugin before 6.1.1 does not sanitise and escape some of its Slider settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2375|2024-07-11T14:27:35.555Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5488|2024-07-10T20:02:36.599Z -- unknown -- seopress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5488</link>
      <description>The SEOPress  WordPress plugin before 7.9 does not properly protect some of its REST API routes, which combined with another Object Injection vulnerability can allow unauthenticated attackers to unserialize malicious gadget chains, compromising the site if a suitable chain is present.</description>
      <guid isPermaLink="false">CVE-2024-5488|2024-07-10T20:02:36.599Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5802|2024-07-09T15:13:24.401Z -- unknown -- url%20shortener%20by%20mythemeshop</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5802</link>
      <description>The URL Shortener by Myhop WordPress plugin through 1.0.17 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-5802|2024-07-09T15:13:24.401Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5729|2024-07-08T20:01:10.464Z -- unknown -- simple%20al%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5729</link>
      <description>The Simple AL Slider WordPress plugin through 1.2.10 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5729|2024-07-08T20:01:10.464Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5570|2024-07-08T20:41:08.852Z -- unknown -- simple%20photoswipe</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5570</link>
      <description>The Simple Photoswipe WordPress plugin through 0.1 does not have authorisation check when updating its settings, which could allow any authenticated users, such as subscriber to update them</description>
      <guid isPermaLink="false">CVE-2024-5570|2024-07-08T20:41:08.852Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0905|2024-07-05T21:22:15.290Z -- unknown -- fancy%20product%20designer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0905</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.8 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against unauthenticated and admin-level users</description>
      <guid isPermaLink="false">CVE-2024-0905|2024-07-05T21:22:15.290Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3188|2024-07-05T21:22:02.468Z -- unknown -- wp%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3188</link>
      <description>The WP Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 7.1.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3188|2024-07-05T21:22:02.468Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1068|2024-07-05T17:22:13.805Z -- unknown -- 404%20solution</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1068</link>
      <description>The 404 Solution WordPress plugin before 2.35.8 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2024-1068|2024-07-05T17:22:13.805Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2322|2024-07-05T17:22:24.577Z -- unknown -- woocommerce%20cart%20abandonment%20recovery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2322</link>
      <description>The WooCommerce Cart Abandonment Recovery WordPress plugin before 1.2.27 does not have CSRF check in its bulk actions, which could allow attackers to make logged in admins delete arbitrary email templates as well as delete and unsubscribe users from abandoned orders via CSRF attacks.</description>
      <guid isPermaLink="false">CVE-2024-2322|2024-07-05T17:22:24.577Z</guid>
      <pubDate>Wed, 03 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2235|2024-07-05T12:41:55.534Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2235</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make users vote on any polls, including those they don't have access to via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2235|2024-07-05T12:41:55.534Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2376|2024-07-03T20:01:39.193Z -- unknown -- wpqa%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2376</link>
      <description>The WPQA Builder WordPress plugin before 6.1.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2376|2024-07-03T20:01:39.193Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4969|2024-07-03T20:42:46.748Z -- unknown -- widget%20bundle</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4969</link>
      <description>The Widget Bundle WordPress plugin through 2.0.0 does not have CSRF checks when logging Widgets, which could allow attackers to make logged in admin enable/disable widgets via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4969|2024-07-03T20:42:46.748Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4384|2024-07-03T20:48:29.537Z -- unknown -- cssable%20countdown</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4384</link>
      <description>The CSSable Countdown WordPress plugin through 1.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4384|2024-07-03T20:48:29.537Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5728|2024-07-03T20:41:05.795Z -- unknown -- animated%20al%20list</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5728</link>
      <description>The Animated AL List WordPress plugin through 1.0.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5728|2024-07-03T20:41:05.795Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5606|2024-07-03T20:19:23.812Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5606</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.0.2 is vulnerable does not validate and escape the question_id parameter in the qsm_bulk_delete_question_from_database AJAX action, leading to a SQL injection exploitable by Contributors and above role</description>
      <guid isPermaLink="false">CVE-2024-5606|2024-07-03T20:19:23.812Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2040|2024-07-03T13:35:44.655Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2040</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make users join private groups via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2040|2024-07-03T13:35:44.655Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4900|2024-07-02T20:25:03.092Z -- unknown -- seopress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4900</link>
      <description>The SEOPress  WordPress plugin before 7.8 does not validate and escape one of its Post settings, which could allow contributor and above role to perform Open redirect attacks against any user viewing a malicious post</description>
      <guid isPermaLink="false">CVE-2024-4900|2024-07-02T20:25:03.092Z</guid>
      <pubDate>Mon, 24 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3999|2024-07-02T15:31:50.935Z -- unknown -- eazydocs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3999</link>
      <description>The EazyDocs  WordPress plugin before 2.5.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3999|2024-07-02T15:31:50.935Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4899|2024-07-01T18:29:32.961Z -- unknown -- seopress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4899</link>
      <description>The SEOPress  WordPress plugin before 7.8 does not sanitise and escape some of its Post settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-4899|2024-07-01T18:29:32.961Z</guid>
      <pubDate>Mon, 24 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5344|2024-07-01T18:34:06.517Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5344</link>
      <description>The The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the ‘forgoturl’ attribute within the plugin's WP Login &amp; Register widget in all versions up to, and including, 5.5.6 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description>
      <guid isPermaLink="false">CVE-2024-5344|2024-07-01T18:34:06.517Z</guid>
      <pubDate>Fri, 21 Jun 2024 02:05:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4934|2024-07-01T06:00:01.172Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4934</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.0.2 does not validate and escape some of its Quiz fields before outputting them back in a page/post where the Quiz is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4934|2024-07-01T06:00:01.172Z</guid>
      <pubDate>Mon, 01 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6130|2024-07-01T06:00:01.641Z -- unknown -- form%20maker%20by%2010web</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6130</link>
      <description>The Form Maker by 10Web  WordPress plugin before 1.15.26 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6130|2024-07-01T06:00:01.641Z</guid>
      <pubDate>Mon, 01 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5730|2024-06-28T14:21:56.436Z -- unknown -- pagerank%20tools</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5730</link>
      <description>The Pagerank tools WordPress plugin through 1.1.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5730|2024-06-28T14:21:56.436Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1330|2024-06-27T17:27:39.245Z -- unknown -- kadence-blocks-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1330</link>
      <description>The kadence-blocks-pro WordPress plugin before 2.3.8 does not prevent users with at least the contributor role using some of its shortcode's functionalities to leak arbitrary options from the database.</description>
      <guid isPermaLink="false">CVE-2024-1330|2024-06-27T17:27:39.245Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4704|2024-06-27T06:00:04.176Z -- unknown -- contact%20form%207</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4704</link>
      <description>The Contact Form 7 WordPress plugin before 5.9.5 has an open redirect that allows an attacker to utilize a false URL and redirect to the URL of their choosing.</description>
      <guid isPermaLink="false">CVE-2024-4704|2024-06-27T06:00:04.176Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3111|2024-06-27T06:00:03.428Z -- unknown -- interactive%20content</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3111</link>
      <description>The Interactive Content  WordPress plugin before 1.15.8 does not validate uploads which could allow a Contributors and above to update malicious SVG files, leading to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2024-3111|2024-06-27T06:00:03.428Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4664|2024-06-27T06:00:03.949Z -- unknown -- wp%20chat%20app</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4664</link>
      <description>The WP Chat App WordPress plugin before 3.6.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admins to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2024-4664|2024-06-27T06:00:03.949Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1330|2024-06-27T06:00:02.163Z -- unknown -- kadence-blocks-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1330</link>
      <description>The kadence-blocks-pro WordPress plugin before 2.3.8 does not prevent users with at least the contributor role using some of its shortcode's functionalities to leak arbitrary options from the database.</description>
      <guid isPermaLink="false">CVE-2024-1330|2024-06-27T06:00:02.163Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4759|2024-06-26T18:57:16.129Z -- unknown -- mime%20types%20extended</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4759</link>
      <description>The Mime Types Extended WordPress plugin through 0.11 does not sanitise uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2024-4759|2024-06-26T18:57:16.129Z</guid>
      <pubDate>Tue, 25 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3633|2024-06-26T14:07:31.057Z -- unknown -- webp%20%26%20svg%20support</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3633</link>
      <description>The WebP &amp; SVG Support WordPress plugin through 1.4.0 does not sanitise uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2024-3633|2024-06-26T14:07:31.057Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5473|2024-06-26T14:20:45.424Z -- unknown -- simple%20photoswipe</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5473</link>
      <description>The Simple Photoswipe WordPress plugin through 0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5473|2024-06-26T14:20:45.424Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5573|2024-06-26T06:00:05.425Z -- unknown -- easy%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5573</link>
      <description>The Easy Table of Contents WordPress plugin before 2.0.66 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-5573|2024-06-26T06:00:05.425Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3633|2024-06-26T06:00:02.176Z -- unknown -- webp%20%26%20svg%20support</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3633</link>
      <description>The WebP &amp; SVG Support WordPress plugin through 1.4.0 does not sanitise uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2024-3633|2024-06-26T06:00:02.176Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5169|2024-06-26T06:00:04.539Z -- unknown -- video%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5169</link>
      <description>The Video Widget WordPress plugin through 1.2.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5169|2024-06-26T06:00:04.539Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5071|2024-06-26T06:00:04.151Z -- unknown -- bookster</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5071</link>
      <description>The Bookster  WordPress plugin through 1.1.0 allows adding sensitive parameters when validating appointments allowing attackers to manipulate the data sent when booking an appointment (the request body) to change its status from pending to approved.</description>
      <guid isPermaLink="false">CVE-2024-5071|2024-06-26T06:00:04.151Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4758|2024-06-26T06:00:02.801Z -- unknown -- muslim%20prayer%20time%20bd</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4758</link>
      <description>The Muslim Prayer Time BD WordPress plugin through 2.4 does not have CSRF check in place when reseting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4758|2024-06-26T06:00:02.801Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5473|2024-06-26T06:00:05.192Z -- unknown -- simple%20photoswipe</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5473</link>
      <description>The Simple Photoswipe WordPress plugin through 0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5473|2024-06-26T06:00:05.192Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4959|2024-06-26T06:00:03.926Z -- unknown -- frontend%20checklist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4959</link>
      <description>The Frontend Checklist WordPress plugin through 2.3.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4959|2024-06-26T06:00:03.926Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5199|2024-06-26T06:00:04.960Z -- unknown -- spotify%20play%20button</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5199</link>
      <description>The Spotify Play Button WordPress plugin through 1.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-5199|2024-06-26T06:00:04.960Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4957|2024-06-26T06:00:03.703Z -- unknown -- frontend%20checklist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4957</link>
      <description>The Frontend Checklist WordPress plugin through 2.3.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4957|2024-06-26T06:00:03.703Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4757|2024-06-25T13:09:07.802Z -- unknown -- logo%20manager%20for%20enamad</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4757</link>
      <description>The Logo Manager For Enamad WordPress plugin through 0.7.0 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4757|2024-06-25T13:09:07.802Z</guid>
      <pubDate>Tue, 25 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5447|2024-06-24T19:22:12.801Z -- unknown -- paypal%20pay%20now%2C%20buy%20now%2C%20donation%20and%20cart%20buttons%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5447</link>
      <description>The PayPal Pay Now, Buy Now, Donation and Cart Buttons Shortcode WordPress plugin through 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5447|2024-06-24T19:22:12.801Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4899|2024-06-24T06:00:01.586Z -- unknown -- seopress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4899</link>
      <description>The SEOPress  WordPress plugin before 7.8 does not sanitise and escape some of its Post settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-4899|2024-06-24T06:00:01.586Z</guid>
      <pubDate>Mon, 24 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4900|2024-06-24T06:00:01.863Z -- unknown -- seopress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4900</link>
      <description>The SEOPress  WordPress plugin before 7.8 does not validate and escape one of its Post settings, which could allow contributor and above role to perform Open redirect attacks against any user viewing a malicious post</description>
      <guid isPermaLink="false">CVE-2024-4900|2024-06-24T06:00:01.863Z</guid>
      <pubDate>Mon, 24 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0672|2024-06-21T17:09:46.633Z -- unknown -- pz-linkcard</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0672</link>
      <description>The Pz-LinkCard WordPress plugin through 2.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-0672|2024-06-21T17:09:46.633Z</guid>
      <pubDate>Thu, 28 Mar 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4382|2024-06-21T11:47:32.527Z -- unknown -- cb%20%28legacy%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4382</link>
      <description>The CB (legacy) WordPress plugin through 0.9.4.18 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting codes, timeframes, and bookings via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4382|2024-06-21T11:47:32.527Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4970|2024-06-21T11:45:31.337Z -- unknown -- widget%20bundle</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4970</link>
      <description>The Widget Bundle WordPress plugin through 2.0.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4970|2024-06-21T11:45:31.337Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5455|2024-06-21T03:24:40.287Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5455</link>
      <description>The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 5.5.4 via the 'magazine_style' parameter within the Dynamic Smart Showcase widget. This makes it possible for authenticated attackers, with Contributor-level access and above, to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other “safe” file types can be uploaded and included.</description>
      <guid isPermaLink="false">CVE-2024-5455|2024-06-21T03:24:40.287Z</guid>
      <pubDate>Fri, 21 Jun 2024 03:24:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5475|2024-06-20T20:24:07.492Z -- unknown -- responsive%20video%20embed</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5475</link>
      <description>The Responsive video embed WordPress plugin before 0.5.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-5475|2024-06-20T20:24:07.492Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5475|2024-06-20T15:47:53.785Z -- unknown -- responsive%20video%20embed</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5475</link>
      <description>The Responsive video embed WordPress plugin before 0.5.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-5475|2024-06-20T15:47:53.785Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5475|2024-06-20T06:00:03.582Z -- unknown -- responsive%20video%20embed</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5475</link>
      <description>The Responsive video embed WordPress plugin before 0.5.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-5475|2024-06-20T06:00:03.582Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5522|2024-06-20T06:00:04.044Z -- unknown -- html5%20video%20player</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5522</link>
      <description>The HTML5 Video Player  WordPress plugin before 2.5.27 does not sanitize and escape a parameter from a REST route before using it in a SQL statement, allowing unauthenticated users to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2024-5522|2024-06-20T06:00:04.044Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4565|2024-06-20T06:00:02.546Z -- unknown -- advanced%20custom%20fields%20%28acf%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4565</link>
      <description>The Advanced Custom Fields (ACF) WordPress plugin before 6.3, Advanced Custom Fields Pro WordPress plugin before 6.3 allows you to display custom field values for any post via shortcode without checking for the correct access</description>
      <guid isPermaLink="false">CVE-2024-4565|2024-06-20T06:00:02.546Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5172|2024-06-18T13:49:52.876Z -- unknown -- expert%20invoice</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5172</link>
      <description>The Expert Invoice WordPress plugin through 1.0.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5172|2024-06-18T13:49:52.876Z</guid>
      <pubDate>Tue, 18 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4094|2024-06-18T13:08:22.407Z -- unknown -- simple%20share%20buttons%20adder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4094</link>
      <description>The Simple Share Buttons Adder WordPress plugin before 8.5.1 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-4094|2024-06-18T13:08:22.407Z</guid>
      <pubDate>Tue, 18 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3236|2024-06-17T13:34:06.345Z -- unknown -- popup%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3236</link>
      <description>The Popup Builder WordPress plugin before 1.1.33 does not sanitise and escape some of its Notification fields, which could allow users such as contributor and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-3236|2024-06-17T13:34:06.345Z</guid>
      <pubDate>Mon, 17 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4270|2024-06-15T20:42:47.018Z -- unknown -- svgmagic</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4270</link>
      <description>The SVGMagic WordPress plugin through 1.1 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4270|2024-06-15T20:42:47.018Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2218|2024-06-14T16:27:15.055Z -- unknown -- luckywp%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2218</link>
      <description>The LuckyWP Table of Contents WordPress plugin through 2.1.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2218|2024-06-14T16:27:15.055Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3993|2024-06-14T16:24:11.338Z -- unknown -- azan%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3993</link>
      <description>The AZAN Plugin WordPress plugin through 0.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3993|2024-06-14T16:24:11.338Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4271|2024-06-14T14:15:43.748Z -- unknown -- svgator</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4271</link>
      <description>The SVGator  WordPress plugin through 1.2.6 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4271|2024-06-14T14:15:43.748Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3754|2024-06-14T14:21:40.530Z -- unknown -- alemha%20watermarker</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3754</link>
      <description>The Alemha watermarker WordPress plugin through 1.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3754|2024-06-14T14:21:40.530Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4480|2024-06-14T06:00:04.871Z -- unknown -- wp%20prayer%20ii</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4480</link>
      <description>The WP Prayer II WordPress plugin through 2.4.7 does not have CSRF check in place when updating its email settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4480|2024-06-14T06:00:04.871Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3965|2024-06-14T06:00:02.754Z -- unknown -- pray%20for%20me</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3965</link>
      <description>The Pray For Me WordPress plugin through 1.0.4 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3965|2024-06-14T06:00:02.754Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3977|2024-06-14T06:00:03.530Z -- unknown -- wordpress%20jitsi%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3977</link>
      <description>The WordPress Jitsi Shortcode WordPress plugin through 0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3977|2024-06-14T06:00:03.530Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1295|2024-06-14T06:00:02.149Z -- unknown -- events-calendar-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1295</link>
      <description>The events-calendar-pro WordPress plugin before 6.4.0.1, The Events Calendar WordPress plugin before 6.4.0.1 does not prevent users with at least the contributor role from leaking details about events they shouldn't have access to. (e.g. password-protected events, drafts, etc.)</description>
      <guid isPermaLink="false">CVE-2024-1295|2024-06-14T06:00:02.149Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2218|2024-06-14T06:00:02.377Z -- unknown -- luckywp%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2218</link>
      <description>The LuckyWP Table of Contents WordPress plugin through 2.1.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2218|2024-06-14T06:00:02.377Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3993|2024-06-14T06:00:04.102Z -- unknown -- azan%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3993</link>
      <description>The AZAN Plugin WordPress plugin through 0.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3993|2024-06-14T06:00:04.102Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3972|2024-06-14T06:00:03.351Z -- unknown -- similarity</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3972</link>
      <description>The Similarity WordPress plugin through 3.0 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3972|2024-06-14T06:00:03.351Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5155|2024-06-14T06:00:05.267Z -- unknown -- inquiry%20cart</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5155</link>
      <description>The Inquiry cart WordPress plugin through 3.4.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5155|2024-06-14T06:00:05.267Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4005|2024-06-14T06:00:04.285Z -- unknown -- social%20pixel</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4005</link>
      <description>The Social Pixel WordPress plugin through 2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4005|2024-06-14T06:00:04.285Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3966|2024-06-14T06:00:02.940Z -- unknown -- pray%20for%20me</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3966</link>
      <description>The Pray For Me WordPress plugin through 1.0.4 does not sanitise and escape some parameters, which could unauthenticated visitors to perform Cross-Site Scripting attacks that trigger when an admin visits the Prayer Requests in the WP Admin</description>
      <guid isPermaLink="false">CVE-2024-3966|2024-06-14T06:00:02.940Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3971|2024-06-14T06:00:03.148Z -- unknown -- similarity</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3971</link>
      <description>The Similarity WordPress plugin through 3.0 does not have CSRF check in place when resetting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3971|2024-06-14T06:00:03.148Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4271|2024-06-14T06:00:04.687Z -- unknown -- svgator</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4271</link>
      <description>The SVGator  WordPress plugin through 1.2.6 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4271|2024-06-14T06:00:04.687Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4751|2024-06-14T06:00:05.079Z -- unknown -- wp%20prayer%20ii</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4751</link>
      <description>The WP Prayer II WordPress plugin through 2.4.7 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4751|2024-06-14T06:00:05.079Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3978|2024-06-14T06:00:03.710Z -- unknown -- wordpress%20jitsi%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3978</link>
      <description>The WordPress Jitsi Shortcode WordPress plugin through 0.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3978|2024-06-14T06:00:03.710Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3754|2024-06-14T06:00:02.574Z -- unknown -- alemha%20watermarker</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3754</link>
      <description>The Alemha watermarker WordPress plugin through 1.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3754|2024-06-14T06:00:02.574Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4270|2024-06-14T06:00:04.481Z -- unknown -- svgmagic</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4270</link>
      <description>The SVGMagic WordPress plugin through 1.1 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4270|2024-06-14T06:00:04.481Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3992|2024-06-14T06:00:03.910Z -- unknown -- amen</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3992</link>
      <description>The Amen WordPress plugin through 3.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3992|2024-06-14T06:00:03.910Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2762|2024-06-13T19:33:15.890Z -- unknown -- foogallery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2762</link>
      <description>The FooGallery  WordPress plugin before 2.4.15, foogallery-premium WordPress plugin before 2.4.15 does not validate and escape some of its Gallery settings before outputting them back in the page, which could allow users with a role as low as Author to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-2762|2024-06-13T19:33:15.890Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4149|2024-06-13T19:19:49.107Z -- unknown -- floating%20chat%20widget%3A%20contact%20chat%20icons%2C%20whatsapp%2C%20telegram%20chat%2C%20line%20messenger%2C%20wechat%2C%20email%2C%20sms%2C%20call%20button</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4149</link>
      <description>The Floating Chat Widget: Contact Chat Icons, WhatsApp, Telegram Chat, Line Messenger, WeChat, Email, SMS, Call Button  WordPress plugin before 3.2.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-4149|2024-06-13T19:19:49.107Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3032|2024-06-13T06:00:02.512Z -- unknown -- themify%20builder</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3032</link>
      <description>Themify Builder WordPress plugin before 7.5.8 does not validate a parameter before redirecting the user to its value, leading to an Open Redirect issue</description>
      <guid isPermaLink="false">CVE-2024-3032|2024-06-13T06:00:02.512Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3552|2024-06-13T06:00:02.709Z -- unknown -- web%20directory%20free</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3552</link>
      <description>The Web Directory Free WordPress plugin before 1.7.0 does not sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection with different techniques like UNION, Time-Based and Error-Based.</description>
      <guid isPermaLink="false">CVE-2024-3552|2024-06-13T06:00:02.709Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2762|2024-06-13T06:00:02.252Z -- unknown -- foogallery</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2762</link>
      <description>The FooGallery  WordPress plugin before 2.4.15, foogallery-premium WordPress plugin before 2.4.15 does not validate and escape some of its Gallery settings before outputting them back in the page, which could allow users with a role as low as Author to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-2762|2024-06-13T06:00:02.252Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4145|2024-06-13T06:00:02.892Z -- unknown -- search%20%26%20replace</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4145</link>
      <description>The Search &amp; Replace WordPress plugin before 3.2.2 does not sanitize and escape a parameter before using it in a SQL statement, allowing admins to perform SQL injection attacks (such as within a multi-site network).</description>
      <guid isPermaLink="false">CVE-2024-4145|2024-06-13T06:00:02.892Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4149|2024-06-13T06:00:03.095Z -- unknown -- floating%20chat%20widget%3A%20contact%20chat%20icons%2C%20whatsapp%2C%20telegram%20chat%2C%20line%20messenger%2C%20wechat%2C%20email%2C%20sms%2C%20call%20button</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4149</link>
      <description>The Floating Chat Widget: Contact Chat Icons, WhatsApp, Telegram Chat, Line Messenger, WeChat, Email, SMS, Call Button  WordPress plugin before 3.2.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-4149|2024-06-13T06:00:03.095Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0427|2024-06-12T17:43:43.893Z -- unknown -- arforms%20-%20premium%20wordpress%20form%20builder%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0427</link>
      <description>The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.4.1 does not properly escape user-controlled input when it is reflected in some of its AJAX actions.</description>
      <guid isPermaLink="false">CVE-2024-0427|2024-06-12T17:43:43.893Z</guid>
      <pubDate>Wed, 12 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4924|2024-06-12T12:21:07.876Z -- unknown -- social%20sharing%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4924</link>
      <description>The Social Sharing Plugin  WordPress plugin before 3.3.63 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4924|2024-06-12T12:21:07.876Z</guid>
      <pubDate>Wed, 12 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5971|2024-05-09T06:00:02.319Z -- unknown -- save%20as%20pdf%20plugin%20by%20pdfcrowd</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5971</link>
      <description>The Save as PDF Plugin by Pdfcrowd WordPress plugin before 3.2.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-5971|2024-05-09T06:00:02.319Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7201|2024-04-15T05:00:01.572Z -- unknown -- everest%20backup</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7201</link>
      <description>The Everest Backup  WordPress plugin before 2.2.5 does not properly validate backup files to be uploaded, allowing high privilege users such as admin to upload arbitrary files on the server even when they should not be allowed to (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-7201|2024-04-15T05:00:01.572Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7164|2024-06-06T13:04:21.160Z -- unknown -- backwpup</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7164</link>
      <description>The BackWPup WordPress plugin before 4.0.4 does not prevent visitors from leaking key information about ongoing backups, allowing unauthenticated attackers to download backups of a site's database.</description>
      <guid isPermaLink="false">CVE-2023-7164|2024-06-06T13:04:21.160Z</guid>
      <pubDate>Mon, 08 Apr 2024 17:28:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7236|2024-06-04T17:17:28.635Z -- unknown -- backup%20bolt</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7236</link>
      <description>The Backup Bolt WordPress plugin through 1.3.0 is vulnerable to Information Exposure via the unprotected access of debug logs. This makes it possible for unauthenticated attackers to retrieve the debug log which may contain information like system errors which could contain sensitive information.</description>
      <guid isPermaLink="false">CVE-2023-7236|2024-06-04T17:17:28.635Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7246|2024-03-20T05:00:02.302Z -- unknown -- system%20dashboard</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7246</link>
      <description>The System Dashboard WordPress plugin before 2.8.10 does not sanitize and escape some parameters, which could allow administrators in multisite WordPress configurations to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-7246|2024-03-20T05:00:02.302Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7247|2024-03-11T18:08:58.602Z -- unknown -- login%20as%20user%20or%20customer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7247</link>
      <description>The Login as User or Customer WordPress plugin through 3.8 does not prevent users to log in as any other user on the site.</description>
      <guid isPermaLink="false">CVE-2023-7247|2024-03-11T18:08:58.602Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7085|2024-03-18T19:05:50.838Z -- unknown -- scalable%20vector%20graphics%20%28svg%29</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7085</link>
      <description>The Scalable Vector Graphics (SVG) WordPress plugin through 3.4 does not sanitize uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2023-7085|2024-03-18T19:05:50.838Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7252|2024-06-04T17:17:24.507Z -- unknown -- tickera</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7252</link>
      <description>The Tickera  WordPress plugin before 3.5.2.5 does not prevent users from leaking other users' tickets.</description>
      <guid isPermaLink="false">CVE-2023-7252|2024-06-04T17:17:24.507Z</guid>
      <pubDate>Mon, 22 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7253|2024-04-24T05:00:01.731Z -- unknown -- import%20wp</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7253</link>
      <description>The Import WP  WordPress plugin before 2.13.1 does not prevent users with the administrator role from pinging conducting SSRF attacks, which may be a problem in multisite configurations.</description>
      <guid isPermaLink="false">CVE-2023-7253|2024-04-24T05:00:01.731Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7232|2024-03-26T05:00:02.063Z -- unknown -- backup%20and%20restore%20wordpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7232</link>
      <description>The Backup and Restore WordPress  WordPress plugin through 1.45 does not protect some log files containing sensitive information such as site configuration etc, allowing unauthenticated users to access such data</description>
      <guid isPermaLink="false">CVE-2023-7232|2024-03-26T05:00:02.063Z</guid>
      <pubDate>Tue, 26 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6257|2024-06-04T17:17:20.622Z -- unknown -- inline%20related%20posts</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6257</link>
      <description>The Inline Related Posts WordPress plugin before 3.6.0 does not ensure that post content displayed via an AJAX action are accessible to the user, allowing any authenticated user, such as subscriber to retrieve the content of password protected posts</description>
      <guid isPermaLink="false">CVE-2023-6257|2024-06-04T17:17:20.622Z</guid>
      <pubDate>Thu, 11 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6821|2024-06-04T17:17:08.590Z -- unknown -- error%20log%20viewer%20by%20bestwebsoft</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6821</link>
      <description>The Error Log Viewer by BestWebSoft WordPress plugin before 1.1.3 contains a vulnerability that allows you to read and download PHP logs without authorization</description>
      <guid isPermaLink="false">CVE-2023-6821|2024-06-04T17:17:08.590Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6067|2024-04-15T05:00:01.200Z -- unknown -- wp%20user%20profile%20avatar</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6067</link>
      <description>The WP User Profile Avatar WordPress plugin through 1.0.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-6067|2024-04-15T05:00:01.200Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6444|2024-03-11T18:08:55.792Z -- unknown -- seriously%20simple%20podcasting</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6444</link>
      <description>The Seriously Simple Podcasting WordPress plugin before 3.0.0 discloses the Podcast owner's email address (which by default is the admin email address) via an unauthenticated crafted request.</description>
      <guid isPermaLink="false">CVE-2023-6444|2024-03-11T18:08:55.792Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6385|2024-04-10T05:00:02.214Z -- unknown -- wordpress%20ping%20optimizer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6385</link>
      <description>The WordPress Ping Optimizer WordPress plugin through 2.35.1.3.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as clearing logs.</description>
      <guid isPermaLink="false">CVE-2023-6385|2024-04-10T05:00:02.214Z</guid>
      <pubDate>Wed, 10 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5341|2024-06-05T17:54:31.073Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-5341</link>
      <description>The The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'size' attribute of the Heading Title widget in all versions up to, and including, 5.5.4 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2024-5341|2024-06-05T17:54:31.073Z</guid>
      <pubDate>Thu, 30 May 2024 05:33:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5003|2024-06-07T12:22:30.164Z -- unknown -- wp%20stacker</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-5003</link>
      <description>The WP Stacker WordPress plugin through 1.8.5 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5003|2024-06-07T12:22:30.164Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1307|2024-04-15T05:00:03.590Z -- unknown -- smart%20forms</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1307</link>
      <description>The Smart Forms  WordPress plugin before 2.6.94 does not have proper authorization in some actions, which could allow users with a role as low as a subscriber to call them and perform unauthorized actions</description>
      <guid isPermaLink="false">CVE-2024-1307|2024-04-15T05:00:03.590Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1983|2024-03-20T05:00:02.910Z -- unknown -- simple%20ajax%20chat</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1983</link>
      <description>The Simple Ajax Chat  WordPress plugin before 20240223 does not prevent visitors from using malicious Names when using the chat, which will be reflected unsanitized to other users.</description>
      <guid isPermaLink="false">CVE-2024-1983|2024-03-20T05:00:02.910Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1487|2024-06-04T18:01:35.257Z -- unknown -- photos%20and%20files%20contest%20gallery</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1487</link>
      <description>The Photos and Files Contest Gallery WordPress plugin before 21.3.1 does not sanitize and escape some parameters, which could allow users with a role as low as author to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-1487|2024-06-04T18:01:35.257Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1956|2024-04-08T17:28:15.741Z -- unknown -- wpb-show-core</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1956</link>
      <description>The wpb-show-core WordPress plugin before 2.7 does not sanitise and escape the parameters before outputting it back in the response of an unauthenticated request, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-1956|2024-04-08T17:28:15.741Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1219|2024-06-04T18:01:26.014Z -- unknown -- easy%20social%20feed</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1219</link>
      <description>The Easy Social Feed  WordPress plugin before 6.5.6 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-1219|2024-06-04T18:01:26.014Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1274|2024-04-02T05:15:41.805Z -- unknown -- my%20calendar</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1274</link>
      <description>The My Calendar WordPress plugin before 3.4.24 does not sanitise and escape some parameters, which could allow users with a role as low as Subscriber to perform Cross-Site Scripting attacks (depending on the permissions set by the admin)</description>
      <guid isPermaLink="false">CVE-2024-1274|2024-04-02T05:15:41.805Z</guid>
      <pubDate>Tue, 02 Apr 2024 05:15:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1331|2024-03-18T19:05:54.788Z -- unknown -- team%20members</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1331</link>
      <description>The Team Members WordPress plugin before 5.3.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the author role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-1331|2024-03-18T19:05:54.788Z</guid>
      <pubDate>Mon, 18 Mar 2024 15:15:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1664|2024-06-04T18:01:17.933Z -- unknown -- responsive%20gallery%20grid</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1664</link>
      <description>The Responsive Gallery Grid WordPress plugin before 2.3.11 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1664|2024-06-04T18:01:17.933Z</guid>
      <pubDate>Tue, 09 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1849|2024-04-15T05:00:05.321Z -- unknown -- wp%20customer%20reviews</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1849</link>
      <description>The WP Customer Reviews WordPress plugin before 3.7.1 does not validate a parameter allowing contributor and above users to redirect a page to a malicious URL</description>
      <guid isPermaLink="false">CVE-2024-1849|2024-04-15T05:00:05.321Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1279|2024-06-11T17:13:10.453Z -- unknown -- paid%20memberships%20pro</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1279</link>
      <description>The Paid Memberships Pro WordPress plugin before 2.12.9 does not prevent user with at least the contributor role from leaking other users' sensitive metadata.</description>
      <guid isPermaLink="false">CVE-2024-1279|2024-06-11T17:13:10.453Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1310|2024-04-15T05:00:03.811Z -- unknown -- woocommerce</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1310</link>
      <description>The WooCommerce WordPress plugin before 8.6 does not prevent users with at least the contributor role from leaking products they shouldn't have access to. (e.g. private, draft and trashed products)</description>
      <guid isPermaLink="false">CVE-2024-1310|2024-04-15T05:00:03.811Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1756|2024-06-04T18:01:02.580Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1756</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 29.8 does not have authorisation and CSRF in an AJAX action, allowing any authenticated users, such as subscriber, to call it and retrieve the list of customer email addresses along with their id, first name and last name</description>
      <guid isPermaLink="false">CVE-2024-1756|2024-06-04T18:01:02.580Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1306|2024-04-15T05:00:03.284Z -- unknown -- smart%20forms</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1306</link>
      <description>The Smart Forms  WordPress plugin before 2.6.94 does not have CSRF checks in some places, which could allow attackers to make logged-in users perform unwanted actions via CSRF attacks, such as editing entries, and we consider it a medium risk.</description>
      <guid isPermaLink="false">CVE-2024-1306|2024-04-15T05:00:03.284Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1589|2024-06-04T18:01:01.145Z -- unknown -- sendpress%20newsletters</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1589</link>
      <description>The SendPress Newsletters WordPress plugin through 1.23.11.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1589|2024-06-04T18:01:01.145Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1290|2024-03-11T18:08:58.060Z -- unknown -- user%20registration</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1290</link>
      <description>The User Registration WordPress plugin before 2.12 does not prevent users with at least the contributor role from rendering sensitive shortcodes, allowing them to generate, and leak, valid password reset URLs, which they can use to take over any accounts.</description>
      <guid isPermaLink="false">CVE-2024-1290|2024-03-11T18:08:58.060Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1316|2024-03-04T21:00:09.876Z -- unknown -- event%20tickets%20and%20registration</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1316</link>
      <description>The Event Tickets and Registration WordPress plugin before 5.8.1, Events Tickets Plus WordPress plugin before 5.9.1 does not prevent users with at least the contributor role from leaking the existence of certain events they shouldn't have access to. (e.g. draft, private, pending review, pw-protected, and trashed events).</description>
      <guid isPermaLink="false">CVE-2024-1316|2024-03-04T21:00:09.876Z</guid>
      <pubDate>Mon, 04 Mar 2024 21:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1746|2024-06-04T18:00:39.219Z -- unknown -- testimonial%20slider</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1746</link>
      <description>The Testimonial Slider WordPress plugin before 2.3.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1746|2024-06-04T18:00:39.219Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1204|2024-04-15T05:00:02.873Z -- unknown -- meta%20box</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1204</link>
      <description>The Meta Box  WordPress plugin before 5.9.4 does not prevent users with at least the contributor role from access arbitrary custom fields assigned to other user's posts.</description>
      <guid isPermaLink="false">CVE-2024-1204|2024-04-15T05:00:02.873Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1068|2024-03-11T18:08:57.515Z -- unknown -- 404%20solution</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1068</link>
      <description>The 404 Solution WordPress plugin before 2.35.8 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2024-1068|2024-03-11T18:08:57.515Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1232|2024-03-25T05:00:01.133Z -- unknown -- cm%20download%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1232</link>
      <description>The CM Download Manager  WordPress plugin before 2.9.0 does not have CSRF checks in some places, which could allow attackers to make logged in admins delete downloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-1232|2024-03-25T05:00:01.133Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1273|2024-03-11T18:08:56.961Z -- unknown -- starbox</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1273</link>
      <description>The Starbox WordPress plugin before 3.5.0 does not sanitise and escape some parameters, which could allow users with a role as low as Contributor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1273|2024-03-11T18:08:56.961Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1526|2024-06-04T18:00:32.482Z -- unknown -- hubbub%20lite</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1526</link>
      <description>The Hubbub Lite  WordPress plugin before 1.33.1 does not ensure that user have access to password protected post before displaying its content in a meta tag.</description>
      <guid isPermaLink="false">CVE-2024-1526|2024-06-04T18:00:32.482Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1658|2024-06-07T19:25:05.750Z -- unknown -- grid%20shortcodes</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1658</link>
      <description>The Grid Shortcodes WordPress plugin before 1.1.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1658|2024-06-07T19:25:05.750Z</guid>
      <pubDate>Mon, 18 Mar 2024 15:15:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1588|2024-06-04T18:00:29.871Z -- unknown -- sendpress%20newsletters</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1588</link>
      <description>The SendPress Newsletters WordPress plugin through 1.23.11.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1588|2024-06-04T18:00:29.871Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1231|2024-03-25T05:00:00.845Z -- unknown -- cm%20download%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1231</link>
      <description>The CM Download Manager  WordPress plugin before 2.9.0 does not have CSRF checks in some places, which could allow attackers to make logged in admins unpublish downloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-1231|2024-03-25T05:00:00.845Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1319|2024-06-04T18:00:24.531Z -- unknown -- events%20tickets%20plus</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1319</link>
      <description>The Events Tickets Plus WordPress plugin before 5.9.1 does not prevent users with at least the contributor role from leaking the attendees list on any post type regardless of status. (e.g. draft, private, pending review, password-protected, and trashed posts).</description>
      <guid isPermaLink="false">CVE-2024-1319|2024-06-04T18:00:24.531Z</guid>
      <pubDate>Mon, 04 Mar 2024 21:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1564|2024-03-25T05:00:01.620Z -- unknown -- wp-schema-pro</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1564</link>
      <description>The wp-schema-pro WordPress plugin before 2.7.16 does not validate post access allowing a contributor user to access custom fields on any post regardless of post type or status via a shortcode</description>
      <guid isPermaLink="false">CVE-2024-1564|2024-03-25T05:00:01.620Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1401|2024-03-19T14:28:21.065Z -- unknown -- profile%20box%20shortcode%20and%20widget</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1401</link>
      <description>The Profile Box Shortcode And Widget WordPress plugin before 1.2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1401|2024-03-19T14:28:21.065Z</guid>
      <pubDate>Tue, 19 Mar 2024 14:28:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1905|2024-06-04T18:00:18.574Z -- unknown -- smart%20forms</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1905</link>
      <description>The Smart Forms  WordPress plugin before 2.6.96 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1905|2024-06-04T18:00:18.574Z</guid>
      <pubDate>Mon, 29 Apr 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1745|2024-03-26T05:00:02.299Z -- unknown -- testimonial%20slider</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1745</link>
      <description>The Testimonial Slider WordPress plugin before 2.3.7 does not properly ensure that a user has the necessary capabilities to edit certain sensitive Testimonial Slider WordPress plugin before 2.3.7 settings, making it possible for users with at least the Author role to edit them.</description>
      <guid isPermaLink="false">CVE-2024-1745|2024-03-26T05:00:02.299Z</guid>
      <pubDate>Tue, 26 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1712|2024-06-04T18:00:13.408Z -- unknown -- carousel%20slider</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1712</link>
      <description>The Carousel Slider WordPress plugin before 2.2.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1712|2024-06-04T18:00:13.408Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1752|2024-04-08T17:28:09.077Z -- unknown -- font%20farsi</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1752</link>
      <description>The Font Farsi WordPress plugin through 1.6.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1752|2024-04-08T17:28:09.077Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1292|2024-06-04T18:00:01.682Z -- unknown -- wpb-show-core</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1292</link>
      <description>The WPB Show Core WordPress plugin before 2.7 does not sanitise and escape some parameters before outputting them back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-1292|2024-06-04T18:00:01.682Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1660|2024-04-15T05:00:04.066Z -- unknown -- top%20bar</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1660</link>
      <description>The Top Bar WordPress plugin before 3.0.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1660|2024-04-15T05:00:04.066Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1846|2024-06-06T18:28:03.533Z -- unknown -- responsive%20tabs</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1846</link>
      <description>The Responsive Tabs WordPress plugin before 4.0.7 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1846|2024-06-06T18:28:03.533Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1743|2024-06-04T17:59:47.689Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1743</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 29.8 does not sanitise and escape various parameters before outputting them back in pages and attributes, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-1743|2024-06-04T17:59:47.689Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1755|2024-04-15T05:00:04.951Z -- unknown -- nps%20computy</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1755</link>
      <description>The NPS computy WordPress plugin through 2.7.5 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-1755|2024-04-15T05:00:04.951Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1958|2024-06-04T17:59:44.770Z -- unknown -- wpb-show-core</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1958</link>
      <description>The WPB Show Core WordPress plugin before 2.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin or unauthenticated users</description>
      <guid isPermaLink="false">CVE-2024-1958|2024-06-04T17:59:44.770Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1333|2024-03-18T19:05:45.251Z -- unknown -- responsive%20pricing%20table</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1333</link>
      <description>The Responsive Pricing Table WordPress plugin before 5.1.11 does not validate and escape some of its Pricing Table options before outputting them back in a page/post where the related shortcode is embed, which could allow users with the author role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1333|2024-03-18T19:05:45.251Z</guid>
      <pubDate>Mon, 18 Mar 2024 15:15:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1962|2024-03-25T05:00:02.022Z -- unknown -- cm%20download%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1962</link>
      <description>The CM Download Manager  WordPress plugin before 2.9.1 does not have CSRF checks in some places, which could allow attackers to make logged in admins edit downloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-1962|2024-03-25T05:00:02.022Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1076|2024-05-08T06:00:02.175Z -- unknown -- ssl%20zen</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1076</link>
      <description>The SSL Zen  WordPress plugin before 4.6.0 only relies on the use of .htaccess to prevent visitors from accessing the site's generated private keys, which allows an attacker to read them if the site runs on a server who doesn't support .htaccess files, like NGINX.</description>
      <guid isPermaLink="false">CVE-2024-1076|2024-05-08T06:00:02.175Z</guid>
      <pubDate>Wed, 08 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1754|2024-06-04T17:59:31.606Z -- unknown -- nps%20computy</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1754</link>
      <description>The NPS computy WordPress plugin through 2.7.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1754|2024-06-04T17:59:31.606Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0756|2024-06-05T13:54:08.704Z -- unknown -- insert%20or%20embed%20articulate%20content%20into%20wordpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0756</link>
      <description>The Insert or Embed Articulate Content into WordPress plugin through 4.3000000023 lacks validation of URLs when adding iframes, allowing attackers to inject an iFrame in the page and thus load arbitrary content from any page.</description>
      <guid isPermaLink="false">CVE-2024-0756|2024-06-05T13:54:08.704Z</guid>
      <pubDate>Tue, 04 Jun 2024 14:28:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0672|2024-03-28T05:00:01.874Z -- unknown -- pz-linkcard</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0672</link>
      <description>The Pz-LinkCard WordPress plugin through 2.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-0672|2024-03-28T05:00:01.874Z</guid>
      <pubDate>Thu, 28 Mar 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0561|2024-06-04T17:59:12.071Z -- unknown -- ultimate%20posts%20widget</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0561</link>
      <description>The Ultimate Posts Widget WordPress plugin before 2.3.1 does not validate and escape some of its Widget options before outputting them back in attributes, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0561|2024-06-04T17:59:12.071Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0673|2024-03-28T05:00:02.093Z -- unknown -- pz-linkcard</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0673</link>
      <description>The Pz-LinkCard WordPress plugin through 2.5.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-0673|2024-03-28T05:00:02.093Z</guid>
      <pubDate>Thu, 28 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0868|2024-04-17T05:00:02.186Z -- unknown -- coreactivity%3A%20activity%20logging%20plugin%20for%20wordpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0868</link>
      <description>The coreActivity: Activity Logging plugin for WordPress plugin before 2.1 retrieved IP addresses of requests via headers such X-FORWARDED to log them, allowing users to spoof them by providing an arbitrary value</description>
      <guid isPermaLink="false">CVE-2024-0868|2024-04-17T05:00:02.186Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0757|2024-06-04T17:59:08.420Z -- unknown -- insert%20or%20embed%20articulate%20content%20into%20wordpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0757</link>
      <description>The Insert or Embed Articulate Content into WordPress plugin through 4.3000000023 is not properly filtering which file extensions are allowed to be imported on the server, allowing the uploading of malicious code within zip files</description>
      <guid isPermaLink="false">CVE-2024-0757|2024-06-04T17:59:08.420Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0951|2024-06-04T17:58:59.888Z -- unknown -- advanced%20social%20feeds%20widget%20%26%20shortcode</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0951</link>
      <description>The Advanced Social Feeds Widget &amp; Shortcode WordPress plugin through 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0951|2024-06-04T17:58:59.888Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0711|2024-06-04T17:58:58.584Z -- unknown -- buttons%20shortcode%20and%20widget</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0711</link>
      <description>The Buttons Shortcode and Widget WordPress plugin through 1.16 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-0711|2024-06-04T17:58:58.584Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0881|2024-06-04T17:58:54.930Z -- unknown -- post%20grid%2C%20form%20maker%2C%20popup%20maker%2C%20woocommerce%20blocks%2C%20post%20blocks%2C%20post%20carousel</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0881</link>
      <description>The Post Grid, Form Maker, Popup Maker, WooCommerce Blocks, Post Blocks, Post Carousel  WordPress plugin before 2.2.76 does not prevent password protected posts from being displayed in the result of some unauthenticated AJAX actions, allowing unauthenticated users to read such posts</description>
      <guid isPermaLink="false">CVE-2024-0881|2024-06-04T17:58:54.930Z</guid>
      <pubDate>Thu, 11 Apr 2024 15:36:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0337|2024-03-20T05:00:02.494Z -- unknown -- travelpayouts%3A%20all%20travel%20brands%20in%20one%20place</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0337</link>
      <description>The Travelpayouts: All Travel Brands in One Place WordPress plugin through 1.1.15 is vulnerable to Open Redirect due to insufficient validation on the travelpayouts_redirect variable. This makes it possible for unauthenticated attackers to redirect users to potentially malicious sites if they can successfully trick them into performing an action.</description>
      <guid isPermaLink="false">CVE-2024-0337|2024-03-20T05:00:02.494Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0858|2024-03-18T19:05:49.195Z -- unknown -- innovs%20hr</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0858</link>
      <description>The Innovs HR WordPress plugin through 1.0.3.4 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as adding them as employees.</description>
      <guid isPermaLink="false">CVE-2024-0858|2024-03-18T19:05:49.195Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0399|2024-04-15T05:00:01.875Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0399</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 29.7 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to an SQL injection exploitable by Subscriber+ role.</description>
      <guid isPermaLink="false">CVE-2024-0399|2024-04-15T05:00:01.875Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0973|2024-03-18T19:05:46.858Z -- unknown -- widget%20for%20social%20page%20feeds</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0973</link>
      <description>The Widget for Social Page Feeds WordPress plugin before 6.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0973|2024-03-18T19:05:46.858Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0820|2024-06-04T17:58:47.931Z -- unknown -- jobs%20for%20wordpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0820</link>
      <description>The Jobs for WordPress plugin before 2.7.4 does not sanitise and escape some parameters, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-0820|2024-06-04T17:58:47.931Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0904|2024-06-04T17:58:42.927Z -- unknown -- fancy%20product%20designer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0904</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.81 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0904|2024-06-04T17:58:42.927Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0905|2024-04-26T05:00:01.958Z -- unknown -- fancy%20product%20designer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0905</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.8 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against unauthenticated and admin-level users</description>
      <guid isPermaLink="false">CVE-2024-0905|2024-04-26T05:00:01.958Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0856|2024-03-20T05:00:02.675Z -- unknown -- appointment%20booking%20calendar</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0856</link>
      <description>The Appointment Booking Calendar WordPress plugin before 1.3.83 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as adding a booking to the calendar without paying.</description>
      <guid isPermaLink="false">CVE-2024-0856|2024-03-20T05:00:02.675Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0677|2024-06-04T17:58:37.182Z -- unknown -- pz-linkcard</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0677</link>
      <description>The Pz-LinkCard WordPress plugin through 2.5.1 does not prevent users from pinging arbitrary hosts via some of its shortcodes, which could allow high privilege users such as contributors to perform SSRF attacks.</description>
      <guid isPermaLink="false">CVE-2024-0677|2024-06-04T17:58:37.182Z</guid>
      <pubDate>Thu, 28 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0902|2024-06-04T17:58:29.201Z -- unknown -- fancy%20product%20designer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0902</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.81 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0902|2024-06-04T17:58:29.201Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0719|2024-03-18T19:05:43.770Z -- unknown -- tabs%20shortcode%20and%20widget</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0719</link>
      <description>The Tabs Shortcode and Widget WordPress plugin through 1.17 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-0719|2024-03-18T19:05:43.770Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0365|2024-03-18T19:05:42.966Z -- unknown -- fancy%20product%20designer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0365</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.5 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by adminstrators.</description>
      <guid isPermaLink="false">CVE-2024-0365|2024-03-18T19:05:42.966Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0559|2024-03-11T18:08:56.401Z -- unknown -- enhanced%20text%20widget</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0559</link>
      <description>The Enhanced Text Widget WordPress plugin before 1.6.6 does not validate and escape some of its Widget options before outputting them back in attributes, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0559|2024-03-11T18:08:56.401Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0779|2024-03-18T19:05:42.163Z -- unknown -- enjoy%20social%20feed%20plugin%20for%20wordpress%20website</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0779</link>
      <description>The Enjoy Social Feed plugin for WordPress website WordPress plugin through 6.2.2 does not have authorisation and CSRF in various function hooked to admin_init, allowing unauthenticated users to call them and unlink arbitrary users Instagram Account for example</description>
      <guid isPermaLink="false">CVE-2024-0779|2024-03-18T19:05:42.163Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0780|2024-03-18T19:05:41.368Z -- unknown -- enjoy%20social%20feed%20plugin%20for%20wordpress%20website</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0780</link>
      <description>The Enjoy Social Feed plugin for WordPress website WordPress plugin through 6.2.2 does not have authorisation when resetting its database, allowing any authenticated users, such as subscriber to perform such action</description>
      <guid isPermaLink="false">CVE-2024-0780|2024-03-18T19:05:41.368Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4534|2024-05-27T06:00:02.758Z -- unknown -- kkprogressbar2%20free</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4534</link>
      <description>The KKProgressbar2 Free  WordPress plugin through 1.1.4.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4534|2024-05-27T06:00:02.758Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4061|2024-06-04T17:56:11.258Z -- unknown -- survey%20maker</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4061</link>
      <description>The Survey Maker  WordPress plugin before 4.2.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4061|2024-06-04T17:56:11.258Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4535|2024-06-04T17:56:07.427Z -- unknown -- kkprogressbar2%20free</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4535</link>
      <description>The KKProgressbar2 Free  WordPress plugin through 1.1.4.2 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4535|2024-06-04T17:56:07.427Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4372|2024-06-04T17:56:06.564Z -- unknown -- carousel%20slider</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4372</link>
      <description>The Carousel Slider WordPress plugin before 2.2.11 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4372|2024-06-04T17:56:06.564Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4057|2024-06-04T17:55:54.055Z -- unknown -- gutenberg%20blocks%20with%20ai%20by%20kadence%20wp</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4057</link>
      <description>The Gutenberg Blocks with AI by Kadence WP  WordPress plugin before 3.2.37 does not validate and escape some of its block attributes before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4057|2024-06-04T17:55:54.055Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4621|2024-06-07T15:56:04.456Z -- unknown -- arforms%20-%20premium%20wordpress%20form%20builder%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4621</link>
      <description>The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4621|2024-06-07T15:56:04.456Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4532|2024-05-27T06:00:02.290Z -- unknown -- business%20card</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4532</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as deleting cards via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4532|2024-05-27T06:00:02.290Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4857|2024-06-04T17:55:30.703Z -- unknown -- fs%20product%20inquiry</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4857</link>
      <description>The FS Product Inquiry WordPress plugin through 1.1.1 does not sanitise and escape some form submissions, which could allow unauthenticated users to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4857|2024-06-04T17:55:30.703Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4529|2024-06-06T18:11:18.132Z -- unknown -- business%20card</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4529</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as deleting card categories via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4529|2024-06-06T18:11:18.132Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4180|2024-06-04T17:55:12.437Z -- unknown -- the%20events%20calendar</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4180</link>
      <description>The Events Calendar WordPress plugin before 6.4.0.1 does not properly sanitize user-submitted content when rendering some views via AJAX.</description>
      <guid isPermaLink="false">CVE-2024-4180|2024-06-04T17:55:12.437Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4856|2024-06-04T17:55:07.188Z -- unknown -- fs%20product%20inquiry</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4856</link>
      <description>The FS Product Inquiry WordPress plugin through 1.1.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin or unauthenticated users</description>
      <guid isPermaLink="false">CVE-2024-4856|2024-06-04T17:55:07.188Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4749|2024-06-04T20:09:20.526Z -- unknown -- wp-emember</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4749</link>
      <description>The wp-eMember WordPress plugin before 10.3.9 does not sanitize and escape the "fieldId" parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2024-4749|2024-06-04T20:09:20.526Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4533|2024-06-04T17:54:56.805Z -- unknown -- kkprogressbar2%20free</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4533</link>
      <description>The KKProgressbar2 Free  WordPress plugin through 1.1.4.2 does not sanitize and escape a parameter before using it in a SQL statement, allowing admin users to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2024-4533|2024-06-04T17:54:56.805Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4289|2024-06-04T17:54:54.276Z -- unknown -- sailthru%20triggermail</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4289</link>
      <description>The Sailthru Triggermail WordPress plugin through 1.1 does not sanitise and escape various parameters before outputting them back in pages and attributes, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-4289|2024-06-04T17:54:54.276Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4620|2024-06-07T06:00:02.468Z -- unknown -- arforms%20-%20premium%20wordpress%20form%20builder%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4620</link>
      <description>The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.6 allows unauthenticated users to modify uploaded files in such a way that PHP code can be uploaded when an upload file input is included on a form</description>
      <guid isPermaLink="false">CVE-2024-4620|2024-06-07T06:00:02.468Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4530|2024-06-04T17:54:42.006Z -- unknown -- business%20card</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4530</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as editing card categories via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4530|2024-06-04T17:54:42.006Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4750|2024-06-04T17:54:29.998Z -- unknown -- buddyboss-platform</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4750</link>
      <description>The buddyboss-platform WordPress plugin before 2.6.0 contains an IDOR vulnerability that allows a user to like a private post by manipulating the ID included in the request</description>
      <guid isPermaLink="false">CVE-2024-4750|2024-06-04T17:54:29.998Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4290|2024-05-21T06:00:02.415Z -- unknown -- sailthru%20triggermail</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4290</link>
      <description>The Sailthru Triggermail WordPress plugin through 1.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4290|2024-05-21T06:00:02.415Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4399|2024-06-04T17:54:02.934Z -- unknown -- cas</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4399</link>
      <description>The  does not validate a parameter before making a request to it, which could allow unauthenticated users to perform SSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4399|2024-06-04T17:54:02.934Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4531|2024-06-04T17:54:02.001Z -- unknown -- business%20card</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4531</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as editing cards via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4531|2024-06-04T17:54:02.001Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4469|2024-06-04T17:53:54.768Z -- unknown -- wp%20staging%20wordpress%20backup%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4469</link>
      <description>The WP STAGING WordPress Backup Plugin  WordPress plugin before 3.5.0 does not prevent users with the administrator role from pinging conducting SSRF attacks, which may be a problem in multisite configurations.</description>
      <guid isPermaLink="false">CVE-2024-4469|2024-06-04T17:53:54.768Z</guid>
      <pubDate>Fri, 31 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4886|2024-06-05T13:11:03.623Z -- unknown -- buddyboss-platform</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4886</link>
      <description>The  contains an IDOR vulnerability that allows a user to comment on a private post by manipulating the ID included in the request</description>
      <guid isPermaLink="false">CVE-2024-4886|2024-06-05T13:11:03.623Z</guid>
      <pubDate>Wed, 05 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4756|2024-06-07T06:00:02.839Z -- unknown -- wp%20backpack</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4756</link>
      <description>The WP Backpack WordPress plugin through 2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4756|2024-06-07T06:00:02.839Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4388|2024-06-04T17:53:30.571Z -- unknown -- cas</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4388</link>
      <description>This  does not validate a path generated with user input when downloading files, allowing unauthenticated user to download arbitrary files from the server</description>
      <guid isPermaLink="false">CVE-2024-4388|2024-06-04T17:53:30.571Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3642|2024-06-04T17:33:18.940Z -- unknown -- newsletter%20popup</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3642</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not have CSRF check when deleting subscriber, which could allow attackers to make logged in admins perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3642|2024-06-04T17:33:18.940Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3048|2024-06-04T17:33:13.531Z -- unknown -- bannerlid</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3048</link>
      <description>The Bannerlid WordPress plugin through 1.1.0 does not escape generated URLs before outputting them in attributes, leading to Reflected Cross-Site Scripting which could be used against high privilege users such as administrators</description>
      <guid isPermaLink="false">CVE-2024-3048|2024-06-04T17:33:13.531Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3265|2024-06-04T17:33:12.146Z -- unknown -- advanced%20search</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3265</link>
      <description>The Advanced Search WordPress plugin through 1.1.6 does not properly escape parameters appended to an SQL query, making it possible for users with the administrator role to conduct SQL Injection attacks in the context of a multisite WordPress configurations.</description>
      <guid isPermaLink="false">CVE-2024-3265|2024-06-04T17:33:12.146Z</guid>
      <pubDate>Thu, 25 Apr 2024 21:25:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3475|2024-06-04T17:33:10.876Z -- unknown -- sticky%20buttons</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3475</link>
      <description>The Sticky Buttons  WordPress plugin before 3.2.4 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting buttons via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3475|2024-06-04T17:33:10.876Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3822|2024-06-04T17:33:07.400Z -- unknown -- base64%20encoder%2Fdecoder</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3822</link>
      <description>The Base64 Encoder/Decoder WordPress plugin through 0.9.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3822|2024-06-04T17:33:07.400Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3823|2024-06-04T17:33:05.706Z -- unknown -- base64%20encoder%2Fdecoder</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3823</link>
      <description>The Base64 Encoder/Decoder WordPress plugin through 0.9.2 does not have CSRF check when updating its settings, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3823|2024-06-04T17:33:05.706Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3474|2024-06-04T17:33:02.444Z -- unknown -- wow%20skype%20buttons</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3474</link>
      <description>The Wow Skype Buttons WordPress plugin before 4.0.4 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting buttons via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3474|2024-06-04T17:33:02.444Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3634|2024-06-04T17:33:00.780Z -- unknown -- month%20name%20translation%20benaceur</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3634</link>
      <description>The month name translation benaceur WordPress plugin before 2.3.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3634|2024-06-04T17:33:00.780Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3481|2024-06-04T17:32:56.648Z -- unknown -- counter%20box</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3481</link>
      <description>The Counter Box  WordPress plugin before 1.2.4 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such deleting counters via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3481|2024-06-04T17:32:56.648Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3478|2024-06-04T17:32:55.802Z -- unknown -- herd%20effects</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3478</link>
      <description>The Herd Effects  WordPress plugin before 5.2.7 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting effects via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3478|2024-06-04T17:32:55.802Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3643|2024-05-16T06:00:02.799Z -- unknown -- newsletter%20popup</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3643</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not have CSRF check when deleting list, which could allow attackers to make logged in admins perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3643|2024-05-16T06:00:02.799Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3058|2024-06-04T17:32:46.776Z -- unknown -- enl%20newsletter</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3058</link>
      <description>The ENL Newsletter WordPress plugin through 1.0.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3058|2024-06-04T17:32:46.776Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3920|2024-05-23T06:00:03.279Z -- unknown -- flattr</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3920</link>
      <description>The Flattr WordPress plugin through 1.2.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3920|2024-05-23T06:00:03.279Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3824|2024-06-04T17:32:42.115Z -- unknown -- base64%20encoder%2Fdecoder</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3824</link>
      <description>The Base64 Encoder/Decoder WordPress plugin through 0.9.2 does not have CSRF check in place when resetting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3824|2024-06-04T17:32:42.115Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3629|2024-06-04T17:32:40.905Z -- unknown -- hl%20twitter</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3629</link>
      <description>The HL Twitter WordPress plugin through 2014.1.18 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3629|2024-06-04T17:32:40.905Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3941|2024-06-04T17:32:38.843Z -- unknown -- recaptcha%20jetpack</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3941</link>
      <description>The reCAPTCHA Jetpack WordPress plugin through 0.2.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged-in admin add Stored XSS payloads via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2024-3941|2024-06-04T17:32:38.843Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3582|2024-05-09T06:00:02.529Z -- unknown -- ungallery</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3582</link>
      <description>The UnGallery WordPress plugin through 2.2.4 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3582|2024-05-09T06:00:02.529Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3644|2024-06-04T17:32:34.623Z -- unknown -- newsletter%20popup</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3644</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3644|2024-06-04T17:32:34.623Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3756|2024-05-06T06:00:02.125Z -- unknown -- mf%20gig%20calendar</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3756</link>
      <description>The MF Gig Calendar WordPress plugin through 1.2.1 does not have CSRF checks in some places, which could allow attackers to make logged in Contributors and above delete arbitrary events via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3756|2024-05-06T06:00:02.125Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3594|2024-06-04T17:32:31.728Z -- unknown -- idonate</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3594</link>
      <description>The IDonate  WordPress plugin through 1.9.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3594|2024-06-04T17:32:31.728Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3239|2024-06-04T17:32:22.790Z -- unknown -- post%20grid%20gutenberg%20blocks%20and%20wordpress%20blog%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3239</link>
      <description>The Post Grid Gutenberg Blocks and WordPress Blog Plugin  WordPress plugin before 4.0.2 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3239|2024-06-04T17:32:22.790Z</guid>
      <pubDate>Mon, 13 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3405|2024-06-04T17:32:21.872Z -- unknown -- wp%20prayer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3405</link>
      <description>The WP Prayer WordPress plugin through 2.0.9 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3405|2024-06-04T17:32:21.872Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3940|2024-06-04T17:32:20.990Z -- unknown -- recaptcha%20jetpack</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3940</link>
      <description>The reCAPTCHA Jetpack WordPress plugin through 0.2.2 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3940|2024-06-04T17:32:20.990Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3628|2024-05-07T06:00:01.626Z -- unknown -- easyevent</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3628</link>
      <description>The EasyEvent WordPress plugin through 1.0.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-3628|2024-05-07T06:00:01.626Z</guid>
      <pubDate>Tue, 07 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3917|2024-06-11T14:33:49.643Z -- unknown -- pet%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3917</link>
      <description>The Pet Manager WordPress plugin through 1.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3917|2024-06-11T14:33:49.643Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3937|2024-06-06T18:25:41.839Z -- unknown -- playlist%20for%20youtube</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3937</link>
      <description>The Playlist for Youtube WordPress plugin through 1.32 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3937|2024-06-06T18:25:41.839Z</guid>
      <pubDate>Wed, 29 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3188|2024-04-26T05:00:05.277Z -- unknown -- wp%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3188</link>
      <description>The WP Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 7.1.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3188|2024-04-26T05:00:05.277Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3472|2024-06-04T17:32:17.000Z -- unknown -- modal%20window</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3472</link>
      <description>The Modal Window  WordPress plugin before 5.3.10 does not have CSRF check in place when bulk deleting modals, which could allow attackers to make a logged in admin delete them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3472|2024-06-04T17:32:17.000Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3921|2024-05-29T06:00:02.135Z -- unknown -- gianism</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3921</link>
      <description>The Gianism WordPress plugin through 5.1.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3921|2024-05-29T06:00:02.135Z</guid>
      <pubDate>Wed, 29 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3075|2024-06-04T17:32:16.127Z -- unknown -- mm-email2image</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3075</link>
      <description>The MM-email2image WordPress plugin through 0.2.5 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3075|2024-06-04T17:32:16.127Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3059|2024-06-04T17:32:14.386Z -- unknown -- enl%20newsletter</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3059</link>
      <description>The ENL Newsletter WordPress plugin through 1.0.1 does not have CSRF checks in some places, which could allow attackers to make logged in admins delete arbitrary Campaigns via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3059|2024-06-04T17:32:14.386Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3060|2024-06-04T17:32:10.817Z -- unknown -- enl%20newsletter</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3060</link>
      <description>The ENL Newsletter WordPress plugin through 1.0.1 does not sanitize and escape a parameter before using it in a SQL statement, allowing admin+ to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2024-3060|2024-06-04T17:32:10.817Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3471|2024-06-04T17:32:08.568Z -- unknown -- button%20generator</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3471</link>
      <description>The Button Generator  WordPress plugin before 3.0 does not have CSRF check in place when bulk deleting, which could allow attackers to make a logged in admin delete buttons via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3471|2024-06-04T17:32:08.568Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3076|2024-06-04T17:32:07.263Z -- unknown -- mm-email2image</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3076</link>
      <description>The MM-email2image WordPress plugin through 0.2.5 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3076|2024-06-04T17:32:07.263Z</guid>
      <pubDate>Fri, 26 Apr 2024 13:23:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3631|2024-06-04T17:32:06.360Z -- unknown -- hl%20twitter</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3631</link>
      <description>The HL Twitter WordPress plugin through 2014.1.18 does not have CSRF check when unlinking twitter accounts, which could allow attackers to make logged in admins perform such actions via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3631|2024-06-04T17:32:06.360Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3261|2024-04-24T05:00:03.121Z -- unknown -- strong%20testimonials</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3261</link>
      <description>The Strong Testimonials WordPress plugin before 3.1.12 does not validate and escape some of its Testimonial fields before outputting them back in a page/post, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks. The attack requires a specific view to be performed</description>
      <guid isPermaLink="false">CVE-2024-3261|2024-04-24T05:00:03.121Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3918|2024-06-04T17:32:04.463Z -- unknown -- pet%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3918</link>
      <description>The Pet Manager WordPress plugin through 1.4 does not sanitise and escape some of its Pet settings, which could allow high privilege users such as Contributor to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-3918|2024-06-04T17:32:04.463Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3241|2024-06-04T17:31:59.787Z -- unknown -- ultimate%20blocks</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3241</link>
      <description>The Ultimate Blocks  WordPress plugin before 3.1.7 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3241|2024-06-04T17:31:59.787Z</guid>
      <pubDate>Tue, 14 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3703|2024-06-04T17:31:59.307Z -- unknown -- carousel%20slider</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3703</link>
      <description>The Carousel Slider WordPress plugin before 2.2.10 does not validate and escape some of its Slide options before outputting them back in the page/post where the related Slide shortcode is embed, which could allow users with the Editor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3703|2024-06-04T17:31:59.307Z</guid>
      <pubDate>Fri, 03 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3580|2024-06-04T17:31:58.413Z -- unknown -- popup4phone</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3580</link>
      <description>The Popup4Phone WordPress plugin through 1.3.2 does not sanitise and escape some of its settings, which could allow high privilege users such as Editor to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3580|2024-06-04T17:31:58.413Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3406|2024-05-15T06:00:02.589Z -- unknown -- wp%20prayer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3406</link>
      <description>The WP Prayer WordPress plugin through 2.0.9 does not have CSRF check in place when updating its email settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3406|2024-05-15T06:00:02.589Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3692|2024-05-03T06:00:02.337Z -- unknown -- gutenverse</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3692</link>
      <description>The Gutenverse  WordPress plugin before 1.9.1 does not validate the htmlTag option in various of its block before outputting it back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3692|2024-05-03T06:00:02.337Z</guid>
      <pubDate>Fri, 03 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3368|2024-06-06T17:53:45.554Z -- unknown -- all%20in%20one%20seo</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3368</link>
      <description>The All in One SEO  WordPress plugin before 4.6.1.1 does not validate and escape some of its Post fields before outputting them back, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3368|2024-06-06T17:53:45.554Z</guid>
      <pubDate>Mon, 20 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3407|2024-06-04T17:31:51.900Z -- unknown -- wp%20prayer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3407</link>
      <description>The WP Prayer WordPress plugin through 2.0.9 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3407|2024-06-04T17:31:51.900Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3903|2024-05-09T06:00:02.924Z -- unknown -- add%20custom%20css%20and%20js</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3903</link>
      <description>The Add Custom CSS and JS WordPress plugin through 1.20 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in as author and above add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3903|2024-05-09T06:00:02.924Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3755|2024-06-04T17:31:46.642Z -- unknown -- mf%20gig%20calendar</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3755</link>
      <description>The MF Gig Calendar WordPress plugin through 1.2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as editor to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3755|2024-06-04T17:31:46.642Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3939|2024-06-06T18:27:04.548Z -- unknown -- ditty</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3939</link>
      <description>The Ditty  WordPress plugin before 3.1.36 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3939|2024-06-06T18:27:04.548Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3630|2024-06-04T17:31:39.784Z -- unknown -- hl%20twitter</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3630</link>
      <description>The HL Twitter WordPress plugin through 2014.1.18 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3630|2024-06-04T17:31:39.784Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3590|2024-05-09T06:00:02.736Z -- unknown -- letterpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3590</link>
      <description>The LetterPress  WordPress plugin through 1.2.2 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks, such as delete arbitrary subscribers</description>
      <guid isPermaLink="false">CVE-2024-3590|2024-05-09T06:00:02.736Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3752|2024-06-04T17:31:31.718Z -- unknown -- crelly%20slider</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3752</link>
      <description>The Crelly Slider WordPress plugin through 1.4.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3752|2024-06-04T17:31:31.718Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3050|2024-06-04T17:31:26.567Z -- unknown -- site%20reviews</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3050</link>
      <description>The Site Reviews WordPress plugin before 7.0.0 retrieves client IP addresses from potentially untrusted headers, allowing an attacker to manipulate its value. This may be used to bypass IP-based blocking</description>
      <guid isPermaLink="false">CVE-2024-3050|2024-06-04T17:31:26.567Z</guid>
      <pubDate>Wed, 29 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3748|2024-06-11T18:53:59.679Z -- unknown -- sp%20project%20%26%20document%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3748</link>
      <description>The SP Project &amp; Document Manager WordPress plugin through 4.71 is missing validation in its upload function, allowing a user to manipulate the `user_id` to make it appear that a file was uploaded by another user</description>
      <guid isPermaLink="false">CVE-2024-3748|2024-06-11T18:53:59.679Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3477|2024-06-04T17:31:19.701Z -- unknown -- popup%20box</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3477</link>
      <description>The Popup Box  WordPress plugin before 2.2.7 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting popups via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3477|2024-06-04T17:31:19.701Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3637|2024-06-04T17:31:17.143Z -- unknown -- responsive%20contact%20form%20builder%20%26%20lead%20generation%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3637</link>
      <description>The Responsive Contact Form Builder &amp; Lead Generation Plugin WordPress plugin through 1.8.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3637|2024-06-04T17:31:17.143Z</guid>
      <pubDate>Fri, 03 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3288|2024-06-07T10:01:18.328Z -- unknown -- logo%20slider</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3288</link>
      <description>The Logo Slider  WordPress plugin before 4.0.0 does not validate and escape some of its Slider Settings before outputting them back in attributes, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3288|2024-06-07T10:01:18.328Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3231|2024-06-04T17:31:14.157Z -- unknown -- popup4phone</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3231</link>
      <description>The Popup4Phone WordPress plugin through 1.3.2 does not sanitise and escape some parameters, which could allow unauthenticated users to perform Cross-Site Scripting attacks against admins.</description>
      <guid isPermaLink="false">CVE-2024-3231|2024-06-04T17:31:14.157Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3548|2024-06-04T17:31:12.890Z -- unknown -- wp%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3548</link>
      <description>The WP Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 7.1.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3548|2024-06-04T17:31:12.890Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3476|2024-05-02T06:00:03.114Z -- unknown -- side%20menu%20lite</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3476</link>
      <description>The Side Menu Lite  WordPress plugin before 4.2.1 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting buttons via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3476|2024-05-02T06:00:03.114Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3749|2024-06-04T17:31:08.986Z -- unknown -- sp%20project%20%26%20document%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3749</link>
      <description>The SP Project &amp; Document Manager WordPress plugin through 4.71 lacks proper access controllers and allows a logged in user to view and download files belonging to another user</description>
      <guid isPermaLink="false">CVE-2024-3749|2024-06-04T17:31:08.986Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3641|2024-06-04T17:31:00.592Z -- unknown -- newsletter%20popup</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3641</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not sanitise and escape some parameters, which could allow unauthenticated visitors to perform Cross-Site Scripting attacks against admins</description>
      <guid isPermaLink="false">CVE-2024-3641|2024-06-04T17:31:00.592Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3591|2024-06-04T17:30:56.764Z -- unknown -- geo%20controller</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3591</link>
      <description>The Geo Controller WordPress plugin before 8.6.5 unserializes user input via some of its AJAX actions and REST API routes, which could allow unauthenticated users to perform PHP Object Injection when a suitable gadget is present on the blog.</description>
      <guid isPermaLink="false">CVE-2024-3591|2024-06-04T17:30:56.764Z</guid>
      <pubDate>Wed, 01 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2439|2024-06-04T17:30:54.241Z -- unknown -- salon%20booking%20system</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2439</link>
      <description>The Salon booking system WordPress plugin through 9.6.5 does not sanitise and escape some of its settings, which could allow high privilege users such as Editor to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2439|2024-06-04T17:30:54.241Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2907|2024-04-25T05:00:01.952Z -- unknown -- agca</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2907</link>
      <description>The AGCA  WordPress plugin before 7.2.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-2907|2024-04-25T05:00:01.952Z</guid>
      <pubDate>Thu, 25 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2858|2024-04-15T05:00:06.077Z -- unknown -- simple%20buttons%20creator</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2858</link>
      <description>The Simple Buttons Creator WordPress plugin through 1.04 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2858|2024-04-15T05:00:06.077Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2101|2024-06-06T13:56:45.727Z -- unknown -- salon%20booking%20system</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2101</link>
      <description>The Salon booking system WordPress plugin before 9.6.3 does not properly sanitize and escape the 'Mobile Phone' field when booking an appointment, allowing customers to conduct Stored Cross-Site Scripting attacks. The payload gets triggered when an admin visits the 'Customers' page and the malicious script is executed in the admin context.</description>
      <guid isPermaLink="false">CVE-2024-2101|2024-06-06T13:56:45.727Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2697|2024-06-06T14:58:55.143Z -- unknown -- socialdriver-framework</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2697</link>
      <description>The socialdriver-framework WordPress plugin before 2024.0.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2024-2697|2024-06-06T14:58:55.143Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2402|2024-06-04T17:30:32.727Z -- unknown -- better%20comments</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2402</link>
      <description>The Better Comments WordPress plugin before 1.5.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2402|2024-06-04T17:30:32.727Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2603|2024-06-04T17:30:27.591Z -- unknown -- salon%20booking%20system</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2603</link>
      <description>The Salon booking system WordPress plugin through 9.6.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin (or editor depending on Salon booking system WordPress plugin through 9.6.5 configuration) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2603|2024-06-04T17:30:27.591Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2262|2024-04-01T05:00:01.688Z -- unknown -- themify</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2262</link>
      <description>Themify  WordPress plugin before 1.4.4 does not have CSRF check in its bulk action, which could allow attackers to make logged in users delete arbitrary filters via CSRF attack, granted they know the related filter slugs</description>
      <guid isPermaLink="false">CVE-2024-2262|2024-04-01T05:00:01.688Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2761|2024-06-04T17:30:22.068Z -- unknown -- genesis%20blocks</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2761</link>
      <description>The Genesis Blocks WordPress plugin before 3.1.3 does not properly escape data input provided to some of its blocks, allowing using with at least contributor privileges to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-2761|2024-06-04T17:30:22.068Z</guid>
      <pubDate>Fri, 19 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2583|2024-04-13T05:00:02.273Z -- unknown -- wp%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2583</link>
      <description>The WP Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 7.0.5 does not properly escape some of its shortcodes attributes before they are echoed back to users, making it possible for users with the contributor role to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-2583|2024-04-13T05:00:02.273Z</guid>
      <pubDate>Sat, 13 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2429|2024-04-26T05:00:02.847Z -- unknown -- salon%20booking%20system</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2429</link>
      <description>The Salon booking system WordPress plugin through 9.6.5 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2429|2024-04-26T05:00:02.847Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2405|2024-05-02T06:00:02.127Z -- unknown -- float%20menu</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2405</link>
      <description>The Float menu  WordPress plugin before 6.0.1 does not have CSRF check in its bulk actions, which could allow attackers to make logged in admin delete arbitrary menu via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2024-2405|2024-05-02T06:00:02.127Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2278|2024-06-04T17:30:13.979Z -- unknown -- themify</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2278</link>
      <description>Themify  WordPress plugin before 1.4.4 does not sanitise and escape some of its Filters settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2278|2024-06-04T17:30:13.979Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2444|2024-04-08T17:28:12.009Z -- unknown -- inline%20related%20posts</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2444</link>
      <description>The Inline Related Posts WordPress plugin before 3.5.0 does not sanitise and escape some of its settings, which could allow high privilege users such as Admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2444|2024-04-08T17:28:12.009Z</guid>
      <pubDate>Sat, 06 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2404|2024-04-24T05:00:02.735Z -- unknown -- better%20comments</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2404</link>
      <description>The Better Comments WordPress plugin before 1.5.6 does not sanitise and escape some of its settings, which could allow low privilege users such as Subscribers to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-2404|2024-04-24T05:00:02.735Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2428|2024-06-04T17:30:05.591Z -- unknown -- the%20ultimate%20video%20player%20for%20wordpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2428</link>
      <description>The Ultimate Video Player For WordPress  WordPress plugin before 2.2.3 does not have proper capability check when updating its settings via a REST route, allowing Contributor and above users to update them. Furthermore, due to the lack of escaping in one of the settings, this also allows them to perform Stored XSS attacks</description>
      <guid isPermaLink="false">CVE-2024-2428|2024-06-04T17:30:05.591Z</guid>
      <pubDate>Wed, 10 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2310|2024-06-04T17:30:03.609Z -- unknown -- wp%20google%20review%20slider</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2310</link>
      <description>The WP Google Review Slider WordPress plugin before 13.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2310|2024-06-04T17:30:03.609Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2263|2024-04-01T05:00:02.150Z -- unknown -- themify</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2263</link>
      <description>Themify  WordPress plugin before 1.4.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-2263|2024-04-01T05:00:02.150Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2189|2024-06-04T17:29:58.957Z -- unknown -- social%20icons%20widget%20%26%20block%20by%20wpzoom</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2189</link>
      <description>The Social Icons Widget &amp; Block by WPZOOM WordPress plugin before 4.2.18 does not sanitise and escape some of its Widget settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2189|2024-06-04T17:29:58.957Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2309|2024-04-17T05:00:03.096Z -- unknown -- wp%20staging%20wordpress%20backup%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2309</link>
      <description>The WP STAGING WordPress Backup Plugin  WordPress plugin before 3.4.0, wp-staging-pro WordPress plugin before 5.4.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2309|2024-04-17T05:00:03.096Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2470|2024-06-04T06:00:02.220Z -- unknown -- simple%20ajax%20chat</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2470</link>
      <description>The Simple Ajax Chat  WordPress plugin before 20240412 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2470|2024-06-04T06:00:02.220Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2739|2024-06-04T17:29:38.382Z -- unknown -- advanced%20search</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2739</link>
      <description>The Advanced Search WordPress plugin through 1.1.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2739|2024-06-04T17:29:38.382Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2369|2024-06-04T17:29:37.945Z -- unknown -- page%20builder%20gutenberg%20blocks</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2369</link>
      <description>The Page Builder Gutenberg Blocks WordPress plugin before 3.1.7 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2369|2024-06-04T17:29:37.945Z</guid>
      <pubDate>Tue, 02 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2220|2024-06-04T17:29:31.304Z -- unknown -- button%20contact%20vr</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2220</link>
      <description>The Button contact VR WordPress plugin through 4.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2220|2024-06-04T17:29:31.304Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2102|2024-04-17T05:00:02.737Z -- unknown -- salon%20booking%20system</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2102</link>
      <description>The Salon booking system WordPress plugin before 9.6.3 does not properly sanitize and escape the 'Mobile Phone' field and 'sms_prefix' parameter when booking an appointment, allowing customers to conduct Stored Cross-Site Scripting attacks. The payload gets triggered when an admin visits the 'Bookings' page and the malicious script is executed in the admin context.</description>
      <guid isPermaLink="false">CVE-2024-2102|2024-04-17T05:00:02.737Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2505|2024-06-04T17:29:30.423Z -- unknown -- gamipress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2505</link>
      <description>The GamiPress  WordPress plugin before 6.8.9's access control mechanism fails to properly restrict access to its settings, permitting Authors to manipulate requests and extend access to lower privileged users, like Subscribers, despite initial settings prohibiting such access. This vulnerability resembles broken access control, enabling unauthorized users to modify critical GamiPress  WordPress plugin before 6.8.9 configurations.</description>
      <guid isPermaLink="false">CVE-2024-2505|2024-06-04T17:29:30.423Z</guid>
      <pubDate>Mon, 29 Apr 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2159|2024-06-04T17:29:21.015Z -- unknown -- social%20sharing%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2159</link>
      <description>The Social Sharing Plugin  WordPress plugin before 3.3.61 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2159|2024-06-04T17:29:21.015Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2509|2024-06-10T17:46:21.566Z -- unknown -- gutenberg%20blocks%20by%20kadence%20blocks</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2509</link>
      <description>The Gutenberg Blocks by Kadence Blocks WordPress plugin before 3.2.26 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2509|2024-06-10T17:46:21.566Z</guid>
      <pubDate>Fri, 05 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2118|2024-06-04T17:29:19.557Z -- unknown -- social%20media%20share%20buttons%20%26%20social%20sharing%20icons</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2118</link>
      <description>The Social Media Share Buttons &amp; Social Sharing Icons WordPress plugin before 2.8.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2118|2024-06-04T17:29:19.557Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2972|2024-04-24T05:00:02.929Z -- unknown -- floating%20chat%20widget%3A%20contact%20chat%20icons%2C%20whatsapp%2C%20telegram%20chat%2C%20line%20messenger%2C%20wechat%2C%20email%2C%20sms%2C%20call%20button</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2972</link>
      <description>The Floating Chat Widget: Contact Chat Icons, WhatsApp, Telegram Chat, Line Messenger, WeChat, Email, SMS, Call Button  WordPress plugin before 3.1.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2972|2024-04-24T05:00:02.929Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2837|2024-06-04T17:29:15.971Z -- unknown -- wp%20chat%20app</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2837</link>
      <description>The WP Chat App WordPress plugin before 3.6.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admins to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2837|2024-06-04T17:29:15.971Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2749|2024-06-04T17:29:14.651Z -- unknown -- vikbooking%20hotel%20booking%20engine%20%26%20pms</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2749</link>
      <description>The VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8's access control mechanism fails to properly restrict access to its settings, permitting any users that can access a menu to manipulate requests and perform unauthorized actions such as editing, renaming or deleting (categories for example) despite initial settings prohibiting such access. This vulnerability resembles broken access control, enabling unauthorized users to modify critical VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8 configurations.</description>
      <guid isPermaLink="false">CVE-2024-2749|2024-06-04T17:29:14.651Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2836|2024-04-15T05:00:05.687Z -- unknown -- social%20share%2C%20social%20login%20and%20social%20comments%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2836</link>
      <description>The Social Share, Social Login and Social Comments Plugin  WordPress plugin before 7.13.64 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2836|2024-04-15T05:00:05.687Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2908|2024-06-06T15:37:10.068Z -- unknown -- call%20now%20button</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2908</link>
      <description>The Call Now Button  WordPress plugin before 1.4.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-2908|2024-06-06T15:37:10.068Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2322|2024-04-08T17:28:01.688Z -- unknown -- woocommerce%20cart%20abandonment%20recovery</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2322</link>
      <description>The WooCommerce Cart Abandonment Recovery WordPress plugin before 1.2.27 does not have CSRF check in its bulk actions, which could allow attackers to make logged in admins delete arbitrary email templates as well as delete and unsubscribe users from abandoned orders via CSRF attacks.</description>
      <guid isPermaLink="false">CVE-2024-2322|2024-04-08T17:28:01.688Z</guid>
      <pubDate>Wed, 03 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2744|2024-06-04T17:29:06.598Z -- unknown -- nextgen%20gallery</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2744</link>
      <description>The NextGEN Gallery  WordPress plugin before 3.59.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2744|2024-06-04T17:29:06.598Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2729|2024-06-04T17:29:03.422Z -- unknown -- otter%20blocks</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2729</link>
      <description>The Otter Blocks  WordPress plugin before 2.6.6 does not properly escape its mainHeadings blocks' attribute before appending it to the final rendered block, allowing contributors to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-2729|2024-06-04T17:29:03.422Z</guid>
      <pubDate>Thu, 18 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2857|2024-04-15T05:00:05.871Z -- unknown -- simple%20buttons%20creator</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2857</link>
      <description>The Simple Buttons Creator WordPress plugin through 1.04 does not have any authorisation as well as CSRF in its add button function, allowing unauthenticated users to call them either directly or via CSRF attacks. Furthermore, due to the lack of sanitisation and escaping, it could also allow them to perform Stored Cross-Site Scripting attacks against logged in admins.</description>
      <guid isPermaLink="false">CVE-2024-2857|2024-04-15T05:00:05.871Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2441|2024-06-04T17:29:00.183Z -- unknown -- vikbooking%20hotel%20booking%20engine%20%26%20pms</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2441</link>
      <description>The VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8 allows direct access to menus, allowing an authenticated user with subscriber privileges or above, to bypass authorization and access settings of the VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8's they shouldn't be allowed to.</description>
      <guid isPermaLink="false">CVE-2024-2441|2024-06-04T17:29:00.183Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0427|2024-06-12T06:00:02.026Z -- unknown -- arforms%20-%20premium%20wordpress%20form%20builder%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0427</link>
      <description>The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.4.1 does not properly escape user-controlled input when it is reflected in some of its AJAX actions.</description>
      <guid isPermaLink="false">CVE-2024-0427|2024-06-12T06:00:02.026Z</guid>
      <pubDate>Wed, 12 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4924|2024-06-12T06:00:02.287Z -- unknown -- social%20sharing%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4924</link>
      <description>The Social Sharing Plugin  WordPress plugin before 3.3.63 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4924|2024-06-12T06:00:02.287Z</guid>
      <pubDate>Wed, 12 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3756|2024-06-12T14:38:30.616Z -- unknown -- mf%20gig%20calendar</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3756</link>
      <description>The MF Gig Calendar WordPress plugin through 1.2.1 does not have CSRF checks in some places, which could allow attackers to make logged in Contributors and above delete arbitrary events via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3756|2024-06-12T14:38:30.616Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2309|2024-06-12T20:03:00.752Z -- unknown -- wp%20staging%20wordpress%20backup%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2309</link>
      <description>The WP STAGING WordPress Backup Plugin  WordPress plugin before 3.4.0, wp-staging-pro WordPress plugin before 5.4.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2309|2024-06-12T20:03:00.752Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4145|2024-06-13T18:47:49.612Z -- unknown -- search%20%26%20replace</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4145</link>
      <description>The Search &amp; Replace WordPress plugin before 3.2.2 does not sanitize and escape a parameter before using it in a SQL statement, allowing admins to perform SQL injection attacks (such as within a multi-site network).</description>
      <guid isPermaLink="false">CVE-2024-4145|2024-06-13T18:47:49.612Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3552|2024-06-13T18:06:32.704Z -- unknown -- web%20directory%20free</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3552</link>
      <description>The Web Directory Free WordPress plugin before 1.7.0 does not sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection with different techniques like UNION, Time-Based and Error-Based.</description>
      <guid isPermaLink="false">CVE-2024-3552|2024-06-13T18:06:32.704Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4532|2024-06-13T20:40:22.431Z -- unknown -- business%20card</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4532</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as deleting cards via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4532|2024-06-13T20:40:22.431Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3032|2024-06-13T19:57:19.842Z -- unknown -- themify%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3032</link>
      <description>Themify Builder WordPress plugin before 7.5.8 does not validate a parameter before redirecting the user to its value, leading to an Open Redirect issue</description>
      <guid isPermaLink="false">CVE-2024-3032|2024-06-13T19:57:19.842Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3965|2024-06-14T13:45:36.787Z -- unknown -- pray%20for%20me</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3965</link>
      <description>The Pray For Me WordPress plugin through 1.0.4 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3965|2024-06-14T13:45:36.787Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3992|2024-06-14T15:35:01.609Z -- unknown -- amen</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3992</link>
      <description>The Amen WordPress plugin through 3.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3992|2024-06-14T15:35:01.609Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5155|2024-06-14T15:42:30.747Z -- unknown -- inquiry%20cart</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5155</link>
      <description>The Inquiry cart WordPress plugin through 3.4.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5155|2024-06-14T15:42:30.747Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4480|2024-06-14T15:33:50.709Z -- unknown -- wp%20prayer%20ii</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4480</link>
      <description>The WP Prayer II WordPress plugin through 2.4.7 does not have CSRF check in place when updating its email settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4480|2024-06-14T15:33:50.709Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3971|2024-06-14T18:07:42.385Z -- unknown -- similarity</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3971</link>
      <description>The Similarity WordPress plugin through 3.0 does not have CSRF check in place when resetting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3971|2024-06-14T18:07:42.385Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3966|2024-06-14T18:12:57.896Z -- unknown -- pray%20for%20me</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3966</link>
      <description>The Pray For Me WordPress plugin through 1.0.4 does not sanitise and escape some parameters, which could unauthenticated visitors to perform Cross-Site Scripting attacks that trigger when an admin visits the Prayer Requests in the WP Admin</description>
      <guid isPermaLink="false">CVE-2024-3966|2024-06-14T18:12:57.896Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4005|2024-06-14T18:07:23.149Z -- unknown -- social%20pixel</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4005</link>
      <description>The Social Pixel WordPress plugin through 2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4005|2024-06-14T18:07:23.149Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3236|2024-06-17T06:00:01.133Z -- unknown -- popup%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3236</link>
      <description>The Popup Builder WordPress plugin before 1.1.33 does not sanitise and escape some of its Notification fields, which could allow users such as contributor and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-3236|2024-06-17T06:00:01.133Z</guid>
      <pubDate>Mon, 17 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4305|2024-06-17T06:00:01.480Z -- unknown -- post%20grid%20gutenberg%20blocks%20and%20wordpress%20blog%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4305</link>
      <description>The Post Grid Gutenberg Blocks and WordPress Blog Plugin  WordPress plugin before 4.1.0 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4305|2024-06-17T06:00:01.480Z</guid>
      <pubDate>Mon, 17 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3276|2024-06-18T06:00:02.054Z -- unknown -- lightbox%20%26%20modal%20popup%20wordpress%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3276</link>
      <description>The Lightbox &amp; Modal Popup WordPress Plugin  WordPress plugin before 2.7.28, foobox-image-lightbox-premium WordPress plugin before 2.7.28 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-3276|2024-06-18T06:00:02.054Z</guid>
      <pubDate>Tue, 18 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5172|2024-06-18T06:00:02.523Z -- unknown -- expert%20invoice</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5172</link>
      <description>The Expert Invoice WordPress plugin through 1.0.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5172|2024-06-18T06:00:02.523Z</guid>
      <pubDate>Tue, 18 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4094|2024-06-18T06:00:02.301Z -- unknown -- simple%20share%20buttons%20adder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4094</link>
      <description>The Simple Share Buttons Adder WordPress plugin before 8.5.1 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-4094|2024-06-18T06:00:02.301Z</guid>
      <pubDate>Tue, 18 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2836|2024-06-18T15:28:31.078Z -- unknown -- social%20share%2C%20social%20login%20and%20social%20comments%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2836</link>
      <description>The Social Share, Social Login and Social Comments Plugin  WordPress plugin before 7.13.64 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2836|2024-06-18T15:28:31.078Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1849|2024-06-18T15:54:31.402Z -- unknown -- wp%20customer%20reviews</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1849</link>
      <description>The WP Customer Reviews WordPress plugin before 3.7.1 does not validate a parameter allowing contributor and above users to redirect a page to a malicious URL</description>
      <guid isPermaLink="false">CVE-2024-1849|2024-06-18T15:54:31.402Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4565|2024-06-20T13:42:56.802Z -- unknown -- advanced%20custom%20fields%20%28acf%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4565</link>
      <description>The Advanced Custom Fields (ACF) WordPress plugin before 6.3, Advanced Custom Fields Pro WordPress plugin before 6.3 allows you to display custom field values for any post via shortcode without checking for the correct access</description>
      <guid isPermaLink="false">CVE-2024-4565|2024-06-20T13:42:56.802Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5522|2024-06-20T16:09:19.209Z -- unknown -- html5%20video%20player</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5522</link>
      <description>The HTML5 Video Player  WordPress plugin before 2.5.27 does not sanitize and escape a parameter from a REST route before using it in a SQL statement, allowing unauthenticated users to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2024-5522|2024-06-20T16:09:19.209Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5344|2024-06-21T02:05:40.850Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5344</link>
      <description>The The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the ‘forgoturl’ attribute within the plugin's WP Login &amp; Register widget in all versions up to, and including, 5.5.6 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description>
      <guid isPermaLink="false">CVE-2024-5344|2024-06-21T02:05:40.850Z</guid>
      <pubDate>Fri, 21 Jun 2024 02:05:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4474|2024-06-21T06:00:04.573Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4474</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4474|2024-06-21T06:00:04.573Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4755|2024-06-21T06:00:05.395Z -- unknown -- google%20cse</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4755</link>
      <description>The Google CSE WordPress plugin through 1.0.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4755|2024-06-21T06:00:05.395Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5447|2024-06-21T06:00:06.279Z -- unknown -- paypal%20pay%20now%2C%20buy%20now%2C%20donation%20and%20cart%20buttons%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5447</link>
      <description>The PayPal Pay Now, Buy Now, Donation and Cart Buttons Shortcode WordPress plugin through 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5447|2024-06-21T06:00:06.279Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4384|2024-06-21T06:00:04.371Z -- unknown -- cssable%20countdown</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4384</link>
      <description>The CSSable Countdown WordPress plugin through 1.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4384|2024-06-21T06:00:04.371Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4970|2024-06-21T06:00:05.870Z -- unknown -- widget%20bundle</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4970</link>
      <description>The Widget Bundle WordPress plugin through 2.0.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4970|2024-06-21T06:00:05.870Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5448|2024-06-21T06:00:06.690Z -- unknown -- paypal%20pay%20now%2C%20buy%20now%2C%20donation%20and%20cart%20buttons%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5448</link>
      <description>The PayPal Pay Now, Buy Now, Donation and Cart Buttons Shortcode WordPress plugin through 1.7 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5448|2024-06-21T06:00:06.690Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4382|2024-06-21T06:00:04.138Z -- unknown -- cb%20%28legacy%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4382</link>
      <description>The CB (legacy) WordPress plugin through 0.9.4.18 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting codes, timeframes, and bookings via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4382|2024-06-21T06:00:04.138Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4477|2024-06-21T06:00:04.995Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4477</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not sanitise and escape some of its log data before outputting them back in an admin dashboard, leading to an Unauthenticated Stored Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-4477|2024-06-21T06:00:04.995Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4969|2024-06-21T06:00:05.590Z -- unknown -- widget%20bundle</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4969</link>
      <description>The Widget Bundle WordPress plugin through 2.0.0 does not have CSRF checks when logging Widgets, which could allow attackers to make logged in admin enable/disable widgets via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4969|2024-06-21T06:00:05.590Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4616|2024-06-21T06:00:05.195Z -- unknown -- widget%20bundle</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4616</link>
      <description>The Widget Bundle WordPress plugin through 2.0.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against only unauthenticated users</description>
      <guid isPermaLink="false">CVE-2024-4616|2024-06-21T06:00:05.195Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4381|2024-06-21T06:00:03.795Z -- unknown -- cb%20%28legacy%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4381</link>
      <description>The CB (legacy) WordPress plugin through 0.9.4.18 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4381|2024-06-21T06:00:03.795Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4475|2024-06-21T06:00:04.785Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4475</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not have CSRF check when clearing logs, which could allow attackers to make a logged in admin clear the logs them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4475|2024-06-21T06:00:04.785Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4377|2024-06-21T06:00:03.210Z -- unknown -- dop%20shortcodes</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4377</link>
      <description>The DOP Shortcodes WordPress plugin through 1.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4377|2024-06-21T06:00:03.210Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4381|2024-06-21T14:19:45.773Z -- unknown -- cb%20%28legacy%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4381</link>
      <description>The CB (legacy) WordPress plugin through 0.9.4.18 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4381|2024-06-21T14:19:45.773Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5448|2024-06-22T17:05:02.208Z -- unknown -- paypal%20pay%20now%2C%20buy%20now%2C%20donation%20and%20cart%20buttons%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5448</link>
      <description>The PayPal Pay Now, Buy Now, Donation and Cart Buttons Shortcode WordPress plugin through 1.7 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5448|2024-06-22T17:05:02.208Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5455|2024-06-22T17:09:44.225Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5455</link>
      <description>The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 5.5.4 via the 'magazine_style' parameter within the Dynamic Smart Showcase widget. This makes it possible for authenticated attackers, with Contributor-level access and above, to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other “safe” file types can be uploaded and included.</description>
      <guid isPermaLink="false">CVE-2024-5455|2024-06-22T17:09:44.225Z</guid>
      <pubDate>Fri, 21 Jun 2024 03:24:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1752|2024-06-24T14:36:52.323Z -- unknown -- font%20farsi</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1752</link>
      <description>The Font Farsi WordPress plugin through 1.6.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1752|2024-06-24T14:36:52.323Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1290|2024-06-24T14:58:54.267Z -- unknown -- user%20registration</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1290</link>
      <description>The User Registration WordPress plugin before 2.12 does not prevent users with at least the contributor role from rendering sensitive shortcodes, allowing them to generate, and leak, valid password reset URLs, which they can use to take over any accounts.</description>
      <guid isPermaLink="false">CVE-2024-1290|2024-06-24T14:58:54.267Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4377|2024-06-24T14:21:23.231Z -- unknown -- dop%20shortcodes</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4377</link>
      <description>The DOP Shortcodes WordPress plugin through 1.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4377|2024-06-24T14:21:23.231Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4757|2024-06-25T06:00:02.291Z -- unknown -- logo%20manager%20for%20enamad</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4757</link>
      <description>The Logo Manager For Enamad WordPress plugin through 0.7.0 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4757|2024-06-25T06:00:02.291Z</guid>
      <pubDate>Tue, 25 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4759|2024-06-25T06:00:03.188Z -- unknown -- mime%20types%20extended</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4759</link>
      <description>The Mime Types Extended WordPress plugin through 0.11 does not sanitise uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2024-4759|2024-06-25T06:00:03.188Z</guid>
      <pubDate>Tue, 25 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4755|2024-06-25T18:43:17.872Z -- unknown -- google%20cse</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4755</link>
      <description>The Google CSE WordPress plugin through 1.0.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4755|2024-06-25T18:43:17.872Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4477|2024-06-25T18:56:08.116Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4477</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not sanitise and escape some of its log data before outputting them back in an admin dashboard, leading to an Unauthenticated Stored Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-4477|2024-06-25T18:56:08.116Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4959|2024-06-26T13:31:22.094Z -- unknown -- frontend%20checklist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4959</link>
      <description>The Frontend Checklist WordPress plugin through 2.3.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4959|2024-06-26T13:31:22.094Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4758|2024-06-26T17:17:49.742Z -- unknown -- muslim%20prayer%20time%20bd</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4758</link>
      <description>The Muslim Prayer Time BD WordPress plugin through 2.4 does not have CSRF check in place when reseting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4758|2024-06-26T17:17:49.742Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4957|2024-06-26T19:03:51.593Z -- unknown -- frontend%20checklist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4957</link>
      <description>The Frontend Checklist WordPress plugin through 2.3.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4957|2024-06-26T19:03:51.593Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4704|2024-06-27T13:49:26.112Z -- unknown -- contact%20form%207</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4704</link>
      <description>The Contact Form 7 WordPress plugin before 5.9.5 has an open redirect that allows an attacker to utilize a false URL and redirect to the URL of their choosing.</description>
      <guid isPermaLink="false">CVE-2024-4704|2024-06-27T13:49:26.112Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5570|2024-06-28T06:00:03.518Z -- unknown -- simple%20photoswipe</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5570</link>
      <description>The Simple Photoswipe WordPress plugin through 0.1 does not have authorisation check when updating its settings, which could allow any authenticated users, such as subscriber to update them</description>
      <guid isPermaLink="false">CVE-2024-5570|2024-06-28T06:00:03.518Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5727|2024-06-28T06:00:03.875Z -- unknown -- widget4call</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5727</link>
      <description>The Widget4Call WordPress plugin through 1.0.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5727|2024-06-28T06:00:03.875Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5728|2024-06-28T06:00:04.165Z -- unknown -- animated%20al%20list</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5728</link>
      <description>The Animated AL List WordPress plugin through 1.0.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5728|2024-06-28T06:00:04.165Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5729|2024-06-28T06:00:04.527Z -- unknown -- simple%20al%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5729</link>
      <description>The Simple AL Slider WordPress plugin through 1.2.10 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5729|2024-06-28T06:00:04.527Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5730|2024-06-28T06:00:05.085Z -- unknown -- pagerank%20tools</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5730</link>
      <description>The Pagerank tools WordPress plugin through 1.1.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5730|2024-06-28T06:00:05.085Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5727|2024-06-28T15:06:25.428Z -- unknown -- widget4call</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5727</link>
      <description>The Widget4Call WordPress plugin through 1.0.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5727|2024-06-28T15:06:25.428Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1204|2024-07-01T14:40:20.581Z -- unknown -- meta%20box</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1204</link>
      <description>The Meta Box  WordPress plugin before 5.9.4 does not prevent users with at least the contributor role from access arbitrary custom fields assigned to other user's posts.</description>
      <guid isPermaLink="false">CVE-2024-1204|2024-07-01T14:40:20.581Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7253|2024-07-01T14:31:07.519Z -- unknown -- import%20wp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7253</link>
      <description>The Import WP  WordPress plugin before 2.13.1 does not prevent users with the administrator role from pinging conducting SSRF attacks, which may be a problem in multisite configurations.</description>
      <guid isPermaLink="false">CVE-2023-7253|2024-07-01T14:31:07.519Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2405|2024-07-01T14:31:29.112Z -- unknown -- float%20menu</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2405</link>
      <description>The Float menu  WordPress plugin before 6.0.1 does not have CSRF check in its bulk actions, which could allow attackers to make logged in admin delete arbitrary menu via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2024-2405|2024-07-01T14:31:29.112Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3999|2024-07-02T06:00:02.531Z -- unknown -- eazydocs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3999</link>
      <description>The EazyDocs  WordPress plugin before 2.5.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3999|2024-07-02T06:00:02.531Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5767|2024-07-02T06:00:03.708Z -- unknown -- sitetweet</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5767</link>
      <description>The sitetweet WordPress plugin through 0.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5767|2024-07-02T06:00:03.708Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5606|2024-07-02T06:00:03.377Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5606</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.0.2 is vulnerable does not validate and escape the question_id parameter in the qsm_bulk_delete_question_from_database AJAX action, leading to a SQL injection exploitable by Contributors and above role</description>
      <guid isPermaLink="false">CVE-2024-5606|2024-07-02T06:00:03.377Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4627|2024-07-02T06:00:02.905Z -- unknown -- rank%20math%20seo</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4627</link>
      <description>The Rank Math SEO  WordPress plugin before 1.0.219 does not sanitise and escape some of its settings, which could allow users with access to the General Settings (by default admin, however such access can be given to lower roles via the Role Manager feature of the Rank Math SEO  WordPress plugin before 1.0.219) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-4627|2024-07-02T06:00:02.905Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4627|2024-07-02T19:57:46.852Z -- unknown -- rank%20math%20seo</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4627</link>
      <description>The Rank Math SEO  WordPress plugin before 1.0.219 does not sanitise and escape some of its settings, which could allow users with access to the General Settings (by default admin, however such access can be given to lower roles via the Role Manager feature of the Rank Math SEO  WordPress plugin before 1.0.219) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-4627|2024-07-02T19:57:46.852Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6130|2024-07-02T18:58:45.523Z -- unknown -- form%20maker%20by%2010web</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6130</link>
      <description>The Form Maker by 10Web  WordPress plugin before 1.15.26 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6130|2024-07-02T18:58:45.523Z</guid>
      <pubDate>Mon, 01 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2235|2024-07-03T06:00:03.922Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2235</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make users vote on any polls, including those they don't have access to via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2235|2024-07-03T06:00:03.922Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2234|2024-07-03T06:00:03.688Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2234</link>
      <description>The Himer WordPress theme before 2.1.1 does not sanitise and escape some of its Post settings, which could allow high privilege users such as Contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2234|2024-07-03T06:00:03.688Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2040|2024-07-03T06:00:02.427Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2040</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make users join private groups via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2040|2024-07-03T06:00:02.427Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2231|2024-07-03T06:00:03.187Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2231</link>
      <description>The  allows any authenticated user to join a private group due to a missing authorization check on a function</description>
      <guid isPermaLink="false">CVE-2024-2231|2024-07-03T06:00:03.187Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2233|2024-07-03T06:00:03.458Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2233</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks. These include declining and accepting group invitations or leaving a group</description>
      <guid isPermaLink="false">CVE-2024-2233|2024-07-03T06:00:03.458Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2375|2024-07-03T06:00:04.122Z -- unknown -- wpqa%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2375</link>
      <description>The WPQA Builder WordPress plugin before 6.1.1 does not sanitise and escape some of its Slider settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2375|2024-07-03T06:00:04.122Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2376|2024-07-03T06:00:04.339Z -- unknown -- wpqa%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2376</link>
      <description>The WPQA Builder WordPress plugin before 6.1.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2376|2024-07-03T06:00:04.339Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2233|2024-07-03T18:43:33.707Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2233</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks. These include declining and accepting group invitations or leaving a group</description>
      <guid isPermaLink="false">CVE-2024-2233|2024-07-03T18:43:33.707Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3276|2024-07-03T20:57:54.520Z -- unknown -- lightbox%20%26%20modal%20popup%20wordpress%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3276</link>
      <description>The Lightbox &amp; Modal Popup WordPress Plugin  WordPress plugin before 2.7.28, foobox-image-lightbox-premium WordPress plugin before 2.7.28 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-3276|2024-07-03T20:57:54.520Z</guid>
      <pubDate>Tue, 18 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1755|2024-07-05T15:24:06.344Z -- unknown -- nps%20computy</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1755</link>
      <description>The NPS computy WordPress plugin through 2.7.5 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-1755|2024-07-05T15:24:06.344Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2235|2024-07-05T20:07:29.077Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2235</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make users vote on any polls, including those they don't have access to via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2235|2024-07-05T20:07:29.077Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2234|2024-07-05T20:03:58.807Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2234</link>
      <description>The Himer WordPress theme before 2.1.1 does not sanitise and escape some of its Post settings, which could allow high privilege users such as Contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2234|2024-07-05T20:03:58.807Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2040|2024-07-05T20:07:13.216Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2040</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make users join private groups via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2040|2024-07-05T20:07:13.216Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2233|2024-07-05T20:06:57.435Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2233</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks. These include declining and accepting group invitations or leaving a group</description>
      <guid isPermaLink="false">CVE-2024-2233|2024-07-05T20:06:57.435Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5767|2024-07-08T17:15:01.976Z -- unknown -- sitetweet</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5767</link>
      <description>The sitetweet WordPress plugin through 0.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5767|2024-07-08T17:15:01.976Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6334|2024-07-09T06:00:05.147Z -- unknown -- easy%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6334</link>
      <description>The Easy Table of Contents WordPress plugin before 2.0.67.1 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2024-6334|2024-07-09T06:00:05.147Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5802|2024-07-09T06:00:04.751Z -- unknown -- url%20shortener%20by%20mythemeshop</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5802</link>
      <description>The URL Shortener by Myhop WordPress plugin through 1.0.17 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-5802|2024-07-09T06:00:04.751Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5488|2024-07-09T06:00:04.275Z -- unknown -- seopress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5488</link>
      <description>The SEOPress  WordPress plugin before 7.9 does not properly protect some of its REST API routes, which combined with another Object Injection vulnerability can allow unauthenticated attackers to unserialize malicious gadget chains, compromising the site if a suitable chain is present.</description>
      <guid isPermaLink="false">CVE-2024-5488|2024-07-09T06:00:04.275Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3410|2024-07-09T06:00:03.519Z -- unknown -- dn%20footer%20contacts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3410</link>
      <description>The DN Footer Contacts WordPress plugin before 1.6.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3410|2024-07-09T06:00:03.519Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3410|2024-07-09T16:25:34.270Z -- unknown -- dn%20footer%20contacts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3410</link>
      <description>The DN Footer Contacts WordPress plugin before 1.6.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3410|2024-07-09T16:25:34.270Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1310|2024-07-09T16:26:32.494Z -- unknown -- woocommerce</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1310</link>
      <description>The WooCommerce WordPress plugin before 8.6 does not prevent users with at least the contributor role from leaking products they shouldn't have access to. (e.g. private, draft and trashed products)</description>
      <guid isPermaLink="false">CVE-2024-1310|2024-07-09T16:26:32.494Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4655|2024-07-11T06:00:02.913Z -- unknown -- ultimate%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4655</link>
      <description>The Ultimate Blocks  WordPress plugin before 3.1.9 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4655|2024-07-11T06:00:02.913Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6025|2024-07-11T06:00:04.031Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6025</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.0.5 does not sanitise and escape some of its Quiz settings, which could allow contributors and higher to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6025|2024-07-11T06:00:04.031Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5444|2024-07-11T06:00:03.516Z -- unknown -- bible%20text</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5444</link>
      <description>The Bible Text WordPress plugin through 0.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5444|2024-07-11T06:00:03.516Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1845|2024-07-11T06:00:02.403Z -- unknown -- vikrentcar%20car%20rental%20management%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1845</link>
      <description>The VikRentCar Car Rental Management System WordPress plugin before 1.3.2 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-1845|2024-07-11T06:00:02.403Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6138|2024-07-11T06:00:04.534Z -- unknown -- secure%20copy%20content%20protection%20and%20content%20locking</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6138</link>
      <description>The Secure Copy Content Protection and Content Locking WordPress plugin before 4.0.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-6138|2024-07-11T06:00:04.534Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6026|2024-07-11T06:00:04.304Z -- unknown -- slider%20by%2010web</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6026</link>
      <description>The Slider by 10Web  WordPress plugin before 1.2.56 does not sanitise and escape some of its Slide options, which could allow authenticated users with access to the Sliders (by default Administrator, however this can be changed via the Slider by 10Web  WordPress plugin before 1.2.56's options) and the ability to add images (Editor+) to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6026|2024-07-11T06:00:04.304Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5444|2024-07-11T15:07:11.055Z -- unknown -- bible%20text</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5444</link>
      <description>The Bible Text WordPress plugin through 0.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5444|2024-07-11T15:07:11.055Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6023|2024-07-12T06:00:06.958Z -- unknown -- contentlock</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6023</link>
      <description>The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when adding emails, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6023|2024-07-12T06:00:06.958Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3112|2024-07-12T06:00:05.645Z -- unknown -- quotes%20and%20tips%20by%20bestwebsoft</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3112</link>
      <description>The Quotes and Tips by BestWebSoft WordPress plugin before 1.45 does not properly validate image files uploaded, allowing high privilege users such as admin to upload arbitrary files on the server even when they should not be allowed to (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3112|2024-07-12T06:00:05.645Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4753|2024-07-12T06:00:05.863Z -- unknown -- wp%20secure%20maintenance</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4753</link>
      <description>The WP Secure Maintenance WordPress plugin before 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4753|2024-07-12T06:00:05.863Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6022|2024-07-12T06:00:06.639Z -- unknown -- contentlock</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6022</link>
      <description>The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6022|2024-07-12T06:00:06.639Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2696|2024-07-12T06:00:05.434Z -- unknown -- socialdriver-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2696</link>
      <description>The socialdriver-framework WordPress plugin before 2024.04.30 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2696|2024-07-12T06:00:05.434Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2640|2024-07-12T06:00:05.185Z -- unknown -- watu%20quiz</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2640</link>
      <description>The Watu Quiz WordPress plugin before 3.4.1.2 does not sanitise and escape some of its settings, which could allow users such as authors (if they've been authorized by admins) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2024-2640|2024-07-12T06:00:05.185Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5811|2024-07-12T06:00:06.332Z -- unknown -- simple%20video%20directory</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5811</link>
      <description>The Simple Video Directory WordPress plugin before 1.4.4 does not sanitise and escape some of its settings, which could allow contributors and higher to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5811|2024-07-12T06:00:06.332Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6024|2024-07-12T06:00:07.258Z -- unknown -- contentlock</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6024</link>
      <description>The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when deleting groups or emails, which could allow attackers to make a logged in admin remove them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6024|2024-07-12T06:00:07.258Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0974|2024-07-12T06:00:04.368Z -- unknown -- social%20media%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0974</link>
      <description>The Social Media Widget WordPress plugin before 4.0.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0974|2024-07-12T06:00:04.368Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2430|2024-07-12T06:00:04.866Z -- unknown -- website%20content%20in%20page%20or%20post</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2430</link>
      <description>The Website Content in Page or Post WordPress plugin before 2024.04.09 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2430|2024-07-12T06:00:04.866Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5626|2024-07-12T06:00:06.094Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5626</link>
      <description>The Inline Related Posts WordPress plugin before 3.7.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5626|2024-07-12T06:00:06.094Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6023|2024-07-12T15:25:26.310Z -- unknown -- contentlock</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6023</link>
      <description>The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when adding emails, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6023|2024-07-12T15:25:26.310Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3112|2024-07-12T15:19:04.910Z -- unknown -- quotes%20and%20tips%20by%20bestwebsoft</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3112</link>
      <description>The Quotes and Tips by BestWebSoft WordPress plugin before 1.45 does not properly validate image files uploaded, allowing high privilege users such as admin to upload arbitrary files on the server even when they should not be allowed to (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3112|2024-07-12T15:19:04.910Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4753|2024-07-12T17:25:44.649Z -- unknown -- wp%20secure%20maintenance</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4753</link>
      <description>The WP Secure Maintenance WordPress plugin before 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4753|2024-07-12T17:25:44.649Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5744|2024-07-13T06:00:13.171Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5744</link>
      <description>The wp-eMember WordPress plugin before 10.6.7 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2024-5744|2024-07-13T06:00:13.171Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5286|2024-07-13T06:00:11.139Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5286</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5286|2024-07-13T06:00:11.139Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5075|2024-07-13T06:00:08.729Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5075</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5075|2024-07-13T06:00:08.729Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5032|2024-07-13T06:00:07.731Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5032</link>
      <description>The SULly WordPress plugin before 4.3.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5032|2024-07-13T06:00:07.731Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3632|2024-07-13T06:00:04.124Z -- unknown -- smart%20image%20gallery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3632</link>
      <description>The Smart Image Gallery WordPress plugin before 1.0.19 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3632|2024-07-13T06:00:04.124Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5167|2024-07-13T06:00:09.955Z -- unknown -- cm%20email%20registration%20blacklist%20and%20whitelist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5167</link>
      <description>The CM Email Registration Blacklist and Whitelist WordPress plugin before 1.4.9 does not have CSRF check when adding or deleting an item from the blacklist or whitelist, which could allow attackers to make a logged in admin add or delete settings from the blacklist or whitelist menu via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5167|2024-07-13T06:00:09.955Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5281|2024-07-13T06:00:10.359Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5281</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5281|2024-07-13T06:00:10.359Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5287|2024-07-13T06:00:11.336Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5287</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in user change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5287|2024-07-13T06:00:11.336Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3710|2024-07-13T06:00:04.350Z -- unknown -- image%20photo%20gallery%20final%20tiles%20grid</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3710</link>
      <description>The Image Photo Gallery Final Tiles Grid WordPress plugin before 3.6.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3710|2024-07-13T06:00:04.350Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3964|2024-07-13T06:00:05.478Z -- unknown -- product%20enquiry%20for%20woocommerce</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3964</link>
      <description>The Product Enquiry for WooCommerce WordPress plugin before 3.1.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3964|2024-07-13T06:00:05.478Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4217|2024-07-13T06:00:05.734Z -- unknown -- shortcodes-ultimate-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4217</link>
      <description>The shortcodes-ultimate-pro WordPress plugin before 7.1.5 does not properly escape some of its shortcodes' settings, making it possible for attackers with a Contributor account to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4217|2024-07-13T06:00:05.734Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3753|2024-07-13T06:00:04.802Z -- unknown -- hostel</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3753</link>
      <description>The Hostel WordPress plugin before 1.1.5.3 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3753|2024-07-13T06:00:04.802Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4752|2024-07-13T06:00:06.657Z -- unknown -- eventon</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4752</link>
      <description>The EventON WordPress plugin before 2.2.15 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4752|2024-07-13T06:00:06.657Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4272|2024-07-13T06:00:06.185Z -- unknown -- support%20svg</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4272</link>
      <description>The Support SVG  WordPress plugin before 1.1.0 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4272|2024-07-13T06:00:06.185Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5034|2024-07-13T06:00:08.319Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5034</link>
      <description>The SULly WordPress plugin before 4.3.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5034|2024-07-13T06:00:08.319Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5713|2024-07-13T06:00:12.794Z -- unknown -- if-so%20dynamic%20content%20personalization</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5713</link>
      <description>The If-So Dynamic Content Personalization WordPress plugin before 1.8.0.4 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2024-5713|2024-07-13T06:00:12.794Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5074|2024-07-13T06:00:08.534Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5074</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5074|2024-07-13T06:00:08.534Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3963|2024-07-13T06:00:05.270Z -- unknown -- giveaways%20and%20contests%20by%20rafflepress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3963</link>
      <description>The Giveaways and Contests by RafflePress  WordPress plugin before 1.12.14 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3963|2024-07-13T06:00:05.270Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3026|2024-07-13T06:00:03.859Z -- unknown -- wordpress%20button%20plugin%20maxbuttons</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3026</link>
      <description>The WordPress Button Plugin MaxButtons WordPress plugin before 9.7.8 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3026|2024-07-13T06:00:03.859Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5079|2024-07-13T06:00:09.333Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5079</link>
      <description>The wp-eMember WordPress plugin before 10.6.7 does not sanitise and escape some of the fields when members register, which allows unauthenticated users to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5079|2024-07-13T06:00:09.333Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5151|2024-07-13T06:00:09.746Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5151</link>
      <description>The SULly WordPress plugin before 4.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5151|2024-07-13T06:00:09.746Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5080|2024-07-13T06:00:09.543Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5080</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not validate files to be uploaded, which could allow admins to upload arbitrary files such as PHP on the server</description>
      <guid isPermaLink="false">CVE-2024-5080|2024-07-13T06:00:09.543Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5283|2024-07-13T06:00:10.758Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5283</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5283|2024-07-13T06:00:10.758Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4977|2024-07-13T06:00:06.897Z -- unknown -- index%20wp%20mysql%20for%20speed</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4977</link>
      <description>The Index WP MySQL For Speed WordPress plugin before 1.4.18 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-4977|2024-07-13T06:00:06.897Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5028|2024-07-13T06:00:07.447Z -- unknown -- cm%20wordpress%20search%20and%20replace%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5028</link>
      <description>The CM WordPress Search And Replace Plugin WordPress plugin before 1.3.9 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5028|2024-07-13T06:00:07.447Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5644|2024-07-13T06:00:12.584Z -- unknown -- tournamatch</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5644</link>
      <description>The Tournamatch WordPress plugin before 4.6.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5644|2024-07-13T06:00:12.584Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5715|2024-07-13T06:00:12.983Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5715</link>
      <description>The wp-eMember WordPress plugin before 10.6.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5715|2024-07-13T06:00:12.983Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5280|2024-07-13T06:00:10.160Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5280</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make non-logged in users execute an XSS payload via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5280|2024-07-13T06:00:10.160Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5442|2024-07-13T06:00:11.530Z -- unknown -- photo%20gallery%2C%20sliders%2C%20proofing%20and%20themes</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5442</link>
      <description>The Photo Gallery, Sliders, Proofing and   WordPress plugin before 3.59.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5442|2024-07-13T06:00:11.530Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5575|2024-07-13T06:00:12.200Z -- unknown -- ditty</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5575</link>
      <description>The Ditty  WordPress plugin before 3.1.43 does not sanitise and escape some of its blocks' settings, which could allow high privilege users such as authors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-5575|2024-07-13T06:00:12.200Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5284|2024-07-13T06:00:10.957Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5284</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5284|2024-07-13T06:00:10.957Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2870|2024-07-13T06:00:02.984Z -- unknown -- socialdriver-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2870</link>
      <description>The socialdriver-framework WordPress plugin before 2024.04.30 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-2870|2024-07-13T06:00:02.984Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3919|2024-07-13T06:00:05.011Z -- unknown -- openpgp%20form%20encryption%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3919</link>
      <description>The OpenPGP Form Encryption for WordPress plugin before 1.5.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-3919|2024-07-13T06:00:05.011Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6070|2024-07-13T06:00:13.366Z -- unknown -- if-so%20dynamic%20content%20personalization</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6070</link>
      <description>The If-So Dynamic Content Personalization WordPress plugin before 1.8.0.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6070|2024-07-13T06:00:13.366Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4602|2024-07-13T06:00:06.435Z -- unknown -- embed%20peertube%20playlist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4602</link>
      <description>The Embed Peertube Playlist WordPress plugin before 1.10 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4602|2024-07-13T06:00:06.435Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5076|2024-07-13T06:00:08.934Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5076</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5076|2024-07-13T06:00:08.934Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5450|2024-07-13T06:00:11.772Z -- unknown -- bug%20library</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5450</link>
      <description>The Bug Library WordPress plugin before 2.1.1 does not check the file type on user-submitted bug reports, allowing an unauthenticated user to upload PHP files</description>
      <guid isPermaLink="false">CVE-2024-5450|2024-07-13T06:00:11.772Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5472|2024-07-13T06:00:11.980Z -- unknown -- wp%20quicklatex</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5472</link>
      <description>The WP QuickLaTeX WordPress plugin before 3.8.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5472|2024-07-13T06:00:11.980Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4269|2024-07-13T06:00:05.955Z -- unknown -- svg%20block</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4269</link>
      <description>The SVG Block WordPress plugin before 1.1.20 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4269|2024-07-13T06:00:05.955Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3751|2024-07-13T06:00:04.549Z -- unknown -- seriously%20simple%20podcasting</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3751</link>
      <description>The Seriously Simple Podcasting WordPress plugin before 3.3.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3751|2024-07-13T06:00:04.549Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5627|2024-07-13T06:00:12.388Z -- unknown -- tournamatch</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5627</link>
      <description>The Tournamatch WordPress plugin before 4.6.1 does not sanitise and escape some parameters, which could allow users with a role as low as subscriber to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-5627|2024-07-13T06:00:12.388Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5282|2024-07-13T06:00:10.553Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5282</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5282|2024-07-13T06:00:10.553Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5002|2024-07-13T06:00:07.139Z -- unknown -- user%20submitted%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5002</link>
      <description>The User Submitted Posts  WordPress plugin before 20240516 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5002|2024-07-13T06:00:07.139Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5033|2024-07-13T06:00:08.044Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5033</link>
      <description>The SULly WordPress plugin before 4.3.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5033|2024-07-13T06:00:08.044Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5077|2024-07-13T06:00:09.142Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5077</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5077|2024-07-13T06:00:09.142Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5151|2024-07-13T12:00:13.958Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5151</link>
      <description>The SULly WordPress plugin before 4.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5151|2024-07-13T12:00:13.958Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6289|2024-07-15T06:00:06.081Z -- unknown -- wps%20hide%20login</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6289</link>
      <description>The WPS Hide Login WordPress plugin before 1.9.16.4 does not prevent redirects to the login page via the auth_redirect WordPress function, allowing an unauthenticated visitor to access the hidden login page.</description>
      <guid isPermaLink="false">CVE-2024-6289|2024-07-15T06:00:06.081Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6074|2024-07-15T06:00:05.374Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6074</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6074|2024-07-15T06:00:05.374Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5630|2024-07-15T06:00:02.225Z -- unknown -- insert%20or%20embed%20articulate%20content%20into%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5630</link>
      <description>The Insert or Embed Articulate Content into WordPress plugin before 4.3000000024 does not prevent authors from uploading arbitrary files to the site, which may allow them to upload PHP shells on affected sites.</description>
      <guid isPermaLink="false">CVE-2024-5630|2024-07-15T06:00:02.225Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6073|2024-07-15T06:00:04.974Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6073</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6073|2024-07-15T06:00:04.974Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6075|2024-07-15T06:00:05.607Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6075</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6075|2024-07-15T06:00:05.607Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6076|2024-07-15T06:00:05.868Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6076</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6076|2024-07-15T06:00:05.868Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6072|2024-07-15T06:00:04.074Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6072</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2024-6072|2024-07-15T06:00:04.074Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5280|2024-07-15T13:57:22.252Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5280</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make non-logged in users execute an XSS payload via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5280|2024-07-15T13:57:22.252Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5575|2024-07-15T13:50:55.441Z -- unknown -- ditty</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5575</link>
      <description>The Ditty  WordPress plugin before 3.1.43 does not sanitise and escape some of its blocks' settings, which could allow high privilege users such as authors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-5575|2024-07-15T13:50:55.441Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5450|2024-07-15T13:46:48.222Z -- unknown -- bug%20library</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5450</link>
      <description>The Bug Library WordPress plugin before 2.1.1 does not check the file type on user-submitted bug reports, allowing an unauthenticated user to upload PHP files</description>
      <guid isPermaLink="false">CVE-2024-5450|2024-07-15T13:46:48.222Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6073|2024-07-15T13:27:34.759Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6073</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6073|2024-07-15T13:27:34.759Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6074|2024-07-15T15:20:02.866Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6074</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6074|2024-07-15T15:20:02.866Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2870|2024-07-15T15:15:45.498Z -- unknown -- socialdriver-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2870</link>
      <description>The socialdriver-framework WordPress plugin before 2024.04.30 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-2870|2024-07-15T15:15:45.498Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3026|2024-07-15T17:11:25.696Z -- unknown -- wordpress%20button%20plugin%20maxbuttons</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3026</link>
      <description>The WordPress Button Plugin MaxButtons WordPress plugin before 9.7.8 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3026|2024-07-15T17:11:25.696Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4602|2024-07-15T17:08:57.586Z -- unknown -- embed%20peertube%20playlist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4602</link>
      <description>The Embed Peertube Playlist WordPress plugin before 1.10 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4602|2024-07-15T17:08:57.586Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3751|2024-07-15T17:57:46.347Z -- unknown -- seriously%20simple%20podcasting</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3751</link>
      <description>The Seriously Simple Podcasting WordPress plugin before 3.3.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3751|2024-07-15T17:57:46.347Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5167|2024-07-15T20:26:30.529Z -- unknown -- cm%20email%20registration%20blacklist%20and%20whitelist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5167</link>
      <description>The CM Email Registration Blacklist and Whitelist WordPress plugin before 1.4.9 does not have CSRF check when adding or deleting an item from the blacklist or whitelist, which could allow attackers to make a logged in admin add or delete settings from the blacklist or whitelist menu via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5167|2024-07-15T20:26:30.529Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6334|2024-07-15T20:54:55.939Z -- unknown -- easy%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6334</link>
      <description>The Easy Table of Contents WordPress plugin before 2.0.67.1 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2024-6334|2024-07-15T20:54:55.939Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4269|2024-07-15T20:27:39.826Z -- unknown -- svg%20block</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4269</link>
      <description>The SVG Block WordPress plugin before 1.1.20 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4269|2024-07-15T20:27:39.826Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5627|2024-07-15T20:25:26.337Z -- unknown -- tournamatch</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5627</link>
      <description>The Tournamatch WordPress plugin before 4.6.1 does not sanitise and escape some parameters, which could allow users with a role as low as subscriber to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-5627|2024-07-15T20:25:26.337Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6072|2024-07-15T20:34:43.203Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6072</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2024-6072|2024-07-15T20:34:43.203Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3919|2024-07-16T14:01:03.480Z -- unknown -- openpgp%20form%20encryption%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3919</link>
      <description>The OpenPGP Form Encryption for WordPress plugin before 1.5.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-3919|2024-07-16T14:01:03.480Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6022|2024-07-16T18:01:53.746Z -- unknown -- contentlock</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6022</link>
      <description>The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6022|2024-07-16T18:01:53.746Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3978|2024-07-17T14:29:27.669Z -- unknown -- wordpress%20jitsi%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3978</link>
      <description>The WordPress Jitsi Shortcode WordPress plugin through 0.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3978|2024-07-17T14:29:27.669Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6076|2024-07-17T14:11:25.546Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6076</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6076|2024-07-17T14:11:25.546Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5283|2024-07-18T15:18:40.526Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5283</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5283|2024-07-18T15:18:40.526Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0779|2024-07-18T15:22:14.879Z -- unknown -- enjoy%20social%20feed%20plugin%20for%20wordpress%20website</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0779</link>
      <description>The Enjoy Social Feed plugin for WordPress website WordPress plugin through 6.2.2 does not have authorisation and CSRF in various function hooked to admin_init, allowing unauthenticated users to call them and unlink arbitrary users Instagram Account for example</description>
      <guid isPermaLink="false">CVE-2024-0779|2024-07-18T15:22:14.879Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6205|2024-07-19T06:00:06.257Z -- unknown -- payplus%20payment%20gateway</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6205</link>
      <description>The PayPlus Payment Gateway WordPress plugin before 6.6.9 does not properly sanitise and escape a parameter before using it in a SQL statement via a WooCommerce API route available to unauthenticated users, leading to an SQL injection vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-6205|2024-07-19T06:00:06.257Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5604|2024-07-19T06:00:05.940Z -- unknown -- bug%20library</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5604</link>
      <description>The Bug Library WordPress plugin before 2.1.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5604|2024-07-19T06:00:05.940Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7268|2024-07-19T06:00:04.159Z -- unknown -- artplacer%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7268</link>
      <description>The ArtPlacer Widget WordPress plugin before 2.21.2 does not have authorisation check in place when deleting widgets,  allowing ay authenticated users, such as subscriber, to delete arbitrary widgets</description>
      <guid isPermaLink="false">CVE-2023-7268|2024-07-19T06:00:04.159Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7269|2024-07-19T06:00:05.343Z -- unknown -- artplacer%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7269</link>
      <description>The ArtPlacer Widget WordPress plugin before 2.21.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-7269|2024-07-19T06:00:05.343Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7268|2024-07-19T15:22:52.403Z -- unknown -- artplacer%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7268</link>
      <description>The ArtPlacer Widget WordPress plugin before 2.21.2 does not have authorisation check in place when deleting widgets,  allowing ay authenticated users, such as subscriber, to delete arbitrary widgets</description>
      <guid isPermaLink="false">CVE-2023-7268|2024-07-19T15:22:52.403Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3977|2024-07-19T18:44:36.214Z -- unknown -- wordpress%20jitsi%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3977</link>
      <description>The WordPress Jitsi Shortcode WordPress plugin through 0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3977|2024-07-19T18:44:36.214Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5973|2024-07-22T10:54:51.675Z -- unknown -- masterstudy%20lms%20wordpress%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5973</link>
      <description>The MasterStudy LMS WordPress Plugin  WordPress plugin before 3.3.24 does not prevent students from creating instructor accounts, which could be used to get access to functionalities they shouldn't have.</description>
      <guid isPermaLink="false">CVE-2024-5973|2024-07-22T10:54:51.675Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5715|2024-07-22T14:36:18.912Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5715</link>
      <description>The wp-eMember WordPress plugin before 10.6.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5715|2024-07-22T14:36:18.912Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6205|2024-07-22T18:08:54.403Z -- unknown -- payplus%20payment%20gateway</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6205</link>
      <description>The PayPlus Payment Gateway WordPress plugin before 6.6.9 does not properly sanitise and escape a parameter before using it in a SQL statement via a WooCommerce API route available to unauthenticated users, leading to an SQL injection vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-6205|2024-07-22T18:08:54.403Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3111|2024-07-22T18:22:57.788Z -- unknown -- interactive%20content</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3111</link>
      <description>The Interactive Content  WordPress plugin before 1.15.8 does not validate uploads which could allow a Contributors and above to update malicious SVG files, leading to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2024-3111|2024-07-22T18:22:57.788Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4260|2024-07-23T06:00:02.295Z -- unknown -- page%20builder%20gutenberg%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4260</link>
      <description>The Page Builder Gutenberg Blocks  WordPress plugin before 3.1.12 does not prevent users from pinging arbitrary hosts via some of its shortcodes, which could allow high privilege users such as contributors to perform SSRF attacks.</description>
      <guid isPermaLink="false">CVE-2024-4260|2024-07-23T06:00:02.295Z</guid>
      <pubDate>Tue, 23 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6420|2024-07-23T06:00:03.289Z -- unknown -- hide%20my%20wp%20ghost</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6420</link>
      <description>The Hide My WP Ghost  WordPress plugin before 5.2.02 does not prevent redirects to the login page via the auth_redirect WordPress function, allowing an unauthenticated visitor to access the hidden login page.</description>
      <guid isPermaLink="false">CVE-2024-6420|2024-07-23T06:00:03.289Z</guid>
      <pubDate>Tue, 23 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6231|2024-07-23T06:00:02.805Z -- unknown -- request%20a%20quote</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6231</link>
      <description>The Request a Quote WordPress plugin before 2.4.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6231|2024-07-23T06:00:02.805Z</guid>
      <pubDate>Tue, 23 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4934|2024-07-23T16:18:36.778Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4934</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.0.2 does not validate and escape some of its Quiz fields before outputting them back in a page/post where the Quiz is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4934|2024-07-23T16:18:36.778Z</guid>
      <pubDate>Mon, 01 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5004|2024-07-23T20:38:56.103Z -- unknown -- cm%20popup%20plugin%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5004</link>
      <description>The CM Popup Plugin for WordPress  WordPress plugin before 1.6.6 does not sanitise and escape some of the campaign settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5004|2024-07-23T20:38:56.103Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4290|2024-07-23T20:32:33.688Z -- unknown -- sailthru%20triggermail</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4290</link>
      <description>The Sailthru Triggermail WordPress plugin through 1.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4290|2024-07-23T20:32:33.688Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2640|2024-07-24T14:19:44.930Z -- unknown -- watu%20quiz</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2640</link>
      <description>The Watu Quiz WordPress plugin before 3.4.1.2 does not sanitise and escape some of its settings, which could allow users such as authors (if they've been authorized by admins) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2024-2640|2024-07-24T14:19:44.930Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3582|2024-07-24T17:22:38.887Z -- unknown -- ungallery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3582</link>
      <description>The UnGallery WordPress plugin through 2.2.4 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3582|2024-07-24T17:22:38.887Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5169|2024-07-24T17:44:11.724Z -- unknown -- video%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5169</link>
      <description>The Video Widget WordPress plugin through 1.2.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5169|2024-07-24T17:44:11.724Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5529|2024-07-24T16:59:06.052Z -- unknown -- wp%20quicklatex</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5529</link>
      <description>The WP QuickLaTeX WordPress plugin before 3.8.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5529|2024-07-24T16:59:06.052Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5744|2024-07-24T19:45:02.054Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5744</link>
      <description>The wp-eMember WordPress plugin before 10.6.7 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2024-5744|2024-07-24T19:45:02.054Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5284|2024-07-24T19:50:58.352Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5284</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5284|2024-07-24T19:50:58.352Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6289|2024-07-24T19:12:38.336Z -- unknown -- wps%20hide%20login</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6289</link>
      <description>The WPS Hide Login WordPress plugin before 1.9.16.4 does not prevent redirects to the login page via the auth_redirect WordPress function, allowing an unauthenticated visitor to access the hidden login page.</description>
      <guid isPermaLink="false">CVE-2024-6289|2024-07-24T19:12:38.336Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5077|2024-07-24T19:55:36.796Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5077</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5077|2024-07-24T19:55:36.796Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1076|2024-07-24T19:53:18.089Z -- unknown -- ssl%20zen</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1076</link>
      <description>The SSL Zen  WordPress plugin before 4.6.0 only relies on the use of .htaccess to prevent visitors from accessing the site's generated private keys, which allows an attacker to read them if the site runs on a server who doesn't support .htaccess files, like NGINX.</description>
      <guid isPermaLink="false">CVE-2024-1076|2024-07-24T19:53:18.089Z</guid>
      <pubDate>Wed, 08 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2470|2024-07-25T13:22:27.439Z -- unknown -- simple%20ajax%20chat</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2470</link>
      <description>The Simple Ajax Chat  WordPress plugin before 20240412 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2470|2024-07-25T13:22:27.439Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6490|2024-07-26T06:00:04.555Z -- unknown -- master%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6490</link>
      <description>During testing of the Master Slider  WordPress plugin through 3.9.10, a CSRF vulnerability was found, which allows an unauthorized user to manipulate requests on behalf of the victim and thereby delete all of the sliders inside Master Slider  WordPress plugin through 3.9.10.</description>
      <guid isPermaLink="false">CVE-2024-6490|2024-07-26T06:00:04.555Z</guid>
      <pubDate>Fri, 26 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6094|2024-07-26T17:50:45.882Z -- unknown -- wp%20ulike</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6094</link>
      <description>The WP ULike  WordPress plugin before 4.7.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-6094|2024-07-26T17:50:45.882Z</guid>
      <pubDate>Wed, 24 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5883|2024-07-29T13:32:52.913Z -- unknown -- ultimate%20classified%20listings</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5883</link>
      <description>The Ultimate Classified Listings WordPress plugin before 1.3 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5883|2024-07-29T13:32:52.913Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6366|2024-07-29T13:39:48.942Z -- unknown -- user%20profile%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6366</link>
      <description>The User Profile Builder  WordPress plugin before 3.11.8 does not have proper authorisation, allowing unauthenticated users to upload media files via the async upload functionality of WP.</description>
      <guid isPermaLink="false">CVE-2024-6366|2024-07-29T13:39:48.942Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6487|2024-07-29T13:26:05.849Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6487</link>
      <description>The Inline Related Posts WordPress plugin before 3.8.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6487|2024-07-29T13:26:05.849Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5285|2024-07-29T13:35:29.846Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5285</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.2 does not have CSRF check in place when deleting affiliates, which could allow attackers to make a logged in user change delete them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5285|2024-07-29T13:35:29.846Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6271|2024-07-29T15:43:02.582Z -- unknown -- community%20events</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6271</link>
      <description>The Community Events WordPress plugin before 1.5 does not have CSRF check in place when deleting events, which could allow attackers to make a logged in admin delete arbitrary events via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6271|2024-07-29T15:43:02.582Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6366|2024-07-29T18:35:53.964Z -- unknown -- user%20profile%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6366</link>
      <description>The User Profile Builder  WordPress plugin before 3.11.8 does not have proper authorisation, allowing unauthenticated users to upload media files via the async upload functionality of WP.</description>
      <guid isPermaLink="false">CVE-2024-6366|2024-07-29T18:35:53.964Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6420|2024-07-29T18:54:21.749Z -- unknown -- hide%20my%20wp%20ghost</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6420</link>
      <description>The Hide My WP Ghost  WordPress plugin before 5.2.02 does not prevent redirects to the login page via the auth_redirect WordPress function, allowing an unauthenticated visitor to access the hidden login page.</description>
      <guid isPermaLink="false">CVE-2024-6420|2024-07-29T18:54:21.749Z</guid>
      <pubDate>Tue, 23 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4752|2024-07-29T20:01:14.920Z -- unknown -- eventon</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4752</link>
      <description>The EventON WordPress plugin before 2.2.15 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4752|2024-07-29T20:01:14.920Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1286|2024-07-30T13:47:03.767Z -- unknown -- pmpro-membership-maps</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1286</link>
      <description>The pmpro-membership-maps WordPress plugin before 0.7 does not prevent users with at least the contributor role from leaking sensitive information about users with a membership on the site.</description>
      <guid isPermaLink="false">CVE-2024-1286|2024-07-30T13:47:03.767Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5809|2024-07-30T13:42:15.712Z -- unknown -- wp%20ajax%20contact%20form</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5809</link>
      <description>The WP Ajax Contact Form WordPress plugin through 2.2.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against admin users</description>
      <guid isPermaLink="false">CVE-2024-5809|2024-07-30T13:42:15.712Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6224|2024-07-30T13:28:44.071Z -- unknown -- send%20email%20only%20on%20reply%20to%20my%20comment</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6224</link>
      <description>The Send email only on Reply to My Comment WordPress plugin through 1.0.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6224|2024-07-30T13:28:44.071Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1287|2024-07-30T13:18:26.101Z -- unknown -- pmpro-member-directory</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1287</link>
      <description>The pmpro-member-directory WordPress plugin before 1.2.6 does not prevent users with at least the contributor role from leaking other users' sensitive information, including password hashes.</description>
      <guid isPermaLink="false">CVE-2024-1287|2024-07-30T13:18:26.101Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4096|2024-07-30T13:32:50.382Z -- unknown -- responsive%20tabs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4096</link>
      <description>The Responsive Tabs WordPress plugin through 4.0.8 does not sanitise and escape some of its Tab settings, which could allow high privilege users such as Contributors and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4096|2024-07-30T13:32:50.382Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3628|2024-07-30T15:17:06.940Z -- unknown -- easyevent</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3628</link>
      <description>The EasyEvent WordPress plugin through 1.0.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-3628|2024-07-30T15:17:06.940Z</guid>
      <pubDate>Tue, 07 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4483|2024-07-30T16:01:11.284Z -- unknown -- email%20encoder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4483</link>
      <description>The Email Encoder  WordPress plugin before 2.2.2 does not escape the WP_Email_Encoder_Bundle_options[protection_text] parameter before outputting it back in an attribute in an admin page, leading to a Stored Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-4483|2024-07-30T16:01:11.284Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1286|2024-07-30T15:28:17.011Z -- unknown -- pmpro-membership-maps</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1286</link>
      <description>The pmpro-membership-maps WordPress plugin before 0.7 does not prevent users with at least the contributor role from leaking sensitive information about users with a membership on the site.</description>
      <guid isPermaLink="false">CVE-2024-1286|2024-07-30T15:28:17.011Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5807|2024-07-30T15:46:25.577Z -- unknown -- business%20card</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5807</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not prevent high privilege users like administrators from uploading malicious PHP files, which could allow them to run arbitrary code on servers hosting their site, even in MultiSite configurations.</description>
      <guid isPermaLink="false">CVE-2024-5807|2024-07-30T15:46:25.577Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5882|2024-07-30T15:51:33.727Z -- unknown -- ultimate%20classified%20listings</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5882</link>
      <description>The Ultimate Classified Listings WordPress plugin before 1.3 does not validate the `ucl_page` and `layout` parameters allowing unauthenticated users to access PHP files on the server from the listings page</description>
      <guid isPermaLink="false">CVE-2024-5882|2024-07-30T15:51:33.727Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5765|2024-07-30T19:26:01.409Z -- unknown -- wpstickybar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5765</link>
      <description>The WpStickyBar  WordPress plugin through 2.1.0 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2024-5765|2024-07-30T19:26:01.409Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1956|2024-07-30T19:28:14.012Z -- unknown -- wpb-show-core</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1956</link>
      <description>The wpb-show-core WordPress plugin before 2.7 does not sanitise and escape the parameters before outputting it back in the response of an unauthenticated request, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-1956|2024-07-30T19:28:14.012Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6226|2024-07-30T19:20:14.781Z -- unknown -- wpstickybar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6226</link>
      <description>The WpStickyBar  WordPress plugin through 2.1.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6226|2024-07-30T19:20:14.781Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6408|2024-07-31T13:30:13.727Z -- unknown -- slider%20by%2010web</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6408</link>
      <description>The Slider by 10Web  WordPress plugin before 1.2.57 does not sanitise and escape its Slider Title, which could allow high privilege users such as editors and above to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-6408|2024-07-31T13:30:13.727Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6165|2024-07-31T13:58:59.116Z -- unknown -- wanotifier</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6165</link>
      <description>The WANotifier  WordPress plugin before 2.6.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6165|2024-07-31T13:58:59.116Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6067|2024-07-31T15:24:22.699Z -- unknown -- wp%20user%20profile%20avatar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6067</link>
      <description>The WP User Profile Avatar WordPress plugin through 1.0.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-6067|2024-07-31T15:24:22.699Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3632|2024-07-31T15:38:13.804Z -- unknown -- smart%20image%20gallery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3632</link>
      <description>The Smart Image Gallery WordPress plugin before 1.0.19 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3632|2024-07-31T15:38:13.804Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3986|2024-07-31T15:31:25.729Z -- unknown -- sportspress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3986</link>
      <description>The SportsPress  WordPress plugin before 2.7.22 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3986|2024-07-31T15:31:25.729Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1660|2024-07-31T15:19:16.546Z -- unknown -- top%20bar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1660</link>
      <description>The Top Bar WordPress plugin before 3.0.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1660|2024-07-31T15:19:16.546Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6695|2024-07-31T15:06:31.038Z -- unknown -- user%20profile%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6695</link>
      <description>it's possible for an attacker to gain administrative access without having any kind of account on the targeted site and perform unauthorized actions. This is due to improper logic flow on the user registration process.</description>
      <guid isPermaLink="false">CVE-2024-6695|2024-07-31T15:06:31.038Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1845|2024-07-31T17:22:15.089Z -- unknown -- vikrentcar%20car%20rental%20management%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1845</link>
      <description>The VikRentCar Car Rental Management System WordPress plugin before 1.3.2 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-1845|2024-07-31T17:22:15.089Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5573|2024-07-31T20:48:17.484Z -- unknown -- easy%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5573</link>
      <description>The Easy Table of Contents WordPress plugin before 2.0.66 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-5573|2024-07-31T20:48:17.484Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3983|2024-08-01T13:19:56.882Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3983</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 30.1 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting customers via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3983|2024-08-01T13:19:56.882Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4090|2024-08-01T13:36:51.336Z -- unknown -- floating%20notification%20bar%2C%20sticky%20menu%20on%20scroll%2C%20announcement%20banner%2C%20and%20sticky%20header%20for%20any%20theme</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4090</link>
      <description>The Floating Notification Bar, Sticky Menu on Scroll, Announcement Banner, and Sticky Header for Any   WordPress plugin before 2.7.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-4090|2024-08-01T13:36:51.336Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6529|2024-08-01T13:26:14.032Z -- unknown -- ultimate%20classified%20listings</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6529</link>
      <description>The Ultimate Classified Listings WordPress plugin before 1.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6529|2024-08-01T13:26:14.032Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6272|2024-08-01T15:00:41.459Z -- unknown -- spidercontacts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6272</link>
      <description>The SpiderContacts WordPress plugin through 1.1.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6272|2024-08-01T15:00:41.459Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6412|2024-08-01T17:41:48.337Z -- unknown -- html%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6412</link>
      <description>The HTML Forms  WordPress plugin before 1.3.34 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6412|2024-08-01T17:41:48.337Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2583|2024-08-01T19:18:47.959Z -- unknown -- wp%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2583</link>
      <description>The WP Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 7.0.5 does not properly escape some of its shortcodes attributes before they are echoed back to users, making it possible for users with the contributor role to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-2583|2024-08-01T19:18:47.959Z</guid>
      <pubDate>Sat, 13 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2310|2024-08-01T19:11:52.506Z -- unknown -- wp%20google%20review%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2310</link>
      <description>The WP Google Review Slider WordPress plugin before 13.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2310|2024-08-01T19:11:52.506Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2908|2024-08-01T19:25:42.171Z -- unknown -- call%20now%20button</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2908</link>
      <description>The Call Now Button  WordPress plugin before 1.4.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-2908|2024-08-01T19:25:42.171Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2470|2024-08-01T19:11:53.531Z -- unknown -- simple%20ajax%20chat</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2470</link>
      <description>The Simple Ajax Chat  WordPress plugin before 20240412 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2470|2024-08-01T19:11:53.531Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2762|2024-08-01T19:25:41.717Z -- unknown -- foogallery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2762</link>
      <description>The FooGallery  WordPress plugin before 2.4.15, foogallery-premium WordPress plugin before 2.4.15 does not validate and escape some of its Gallery settings before outputting them back in the page, which could allow users with a role as low as Author to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-2762|2024-08-01T19:25:41.717Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2439|2024-08-01T19:11:53.536Z -- unknown -- salon%20booking%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2439</link>
      <description>The Salon booking system WordPress plugin through 9.6.5 does not sanitise and escape some of its settings, which could allow high privilege users such as Editor to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2439|2024-08-01T19:11:53.536Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2376|2024-08-01T19:11:53.485Z -- unknown -- wpqa%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2376</link>
      <description>The WPQA Builder WordPress plugin before 6.1.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2376|2024-08-01T19:11:53.485Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2429|2024-08-01T19:11:53.535Z -- unknown -- salon%20booking%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2429</link>
      <description>The Salon booking system WordPress plugin through 9.6.5 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2429|2024-08-01T19:11:53.535Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2404|2024-08-01T19:11:53.446Z -- unknown -- better%20comments</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2404</link>
      <description>The Better Comments WordPress plugin before 1.5.6 does not sanitise and escape some of its settings, which could allow low privilege users such as Subscribers to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-2404|2024-08-01T19:11:53.446Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2118|2024-08-01T19:03:39.004Z -- unknown -- social%20media%20share%20buttons%20%26%20social%20sharing%20icons</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2118</link>
      <description>The Social Media Share Buttons &amp; Social Sharing Icons WordPress plugin before 2.8.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2118|2024-08-01T19:03:39.004Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2040|2024-08-01T19:03:37.841Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2040</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make users join private groups via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2040|2024-08-01T19:03:37.841Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2857|2024-08-01T19:25:42.160Z -- unknown -- simple%20buttons%20creator</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2857</link>
      <description>The Simple Buttons Creator WordPress plugin through 1.04 does not have any authorisation as well as CSRF in its add button function, allowing unauthenticated users to call them either directly or via CSRF attacks. Furthermore, due to the lack of sanitisation and escaping, it could also allow them to perform Stored Cross-Site Scripting attacks against logged in admins.</description>
      <guid isPermaLink="false">CVE-2024-2857|2024-08-01T19:25:42.160Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2441|2024-08-01T19:11:53.563Z -- unknown -- vikbooking%20hotel%20booking%20engine%20%26%20pms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2441</link>
      <description>The VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8 allows direct access to menus, allowing an authenticated user with subscriber privileges or above, to bypass authorization and access settings of the VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8's they shouldn't be allowed to.</description>
      <guid isPermaLink="false">CVE-2024-2441|2024-08-01T19:11:53.563Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3111|2024-08-01T19:32:42.873Z -- unknown -- interactive%20content</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3111</link>
      <description>The Interactive Content  WordPress plugin before 1.15.8 does not validate uploads which could allow a Contributors and above to update malicious SVG files, leading to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2024-3111|2024-08-01T19:32:42.873Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2837|2024-08-01T19:25:42.125Z -- unknown -- wp%20chat%20app</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2837</link>
      <description>The WP Chat App WordPress plugin before 3.6.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admins to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2837|2024-08-01T19:25:42.125Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2836|2024-08-01T19:25:42.038Z -- unknown -- social%20share%2C%20social%20login%20and%20social%20comments%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2836</link>
      <description>The Social Share, Social Login and Social Comments Plugin  WordPress plugin before 7.13.64 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2836|2024-08-01T19:25:42.038Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2263|2024-08-01T19:03:39.471Z -- unknown -- themify</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2263</link>
      <description>Themify  WordPress plugin before 1.4.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-2263|2024-08-01T19:03:39.471Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3075|2024-08-01T19:32:42.578Z -- unknown -- mm-email2image</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3075</link>
      <description>The MM-email2image WordPress plugin through 0.2.5 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3075|2024-08-01T19:32:42.578Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2509|2024-08-01T19:18:46.944Z -- unknown -- gutenberg%20blocks%20by%20kadence%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2509</link>
      <description>The Gutenberg Blocks by Kadence Blocks WordPress plugin before 3.2.26 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2509|2024-08-01T19:18:46.944Z</guid>
      <pubDate>Fri, 05 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2744|2024-08-01T19:25:42.000Z -- unknown -- nextgen%20gallery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2744</link>
      <description>The NextGEN Gallery  WordPress plugin before 3.59.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2744|2024-08-01T19:25:42.000Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3032|2024-08-01T19:32:42.520Z -- unknown -- themify%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3032</link>
      <description>Themify Builder WordPress plugin before 7.5.8 does not validate a parameter before redirecting the user to its value, leading to an Open Redirect issue</description>
      <guid isPermaLink="false">CVE-2024-3032|2024-08-01T19:32:42.520Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3060|2024-08-01T19:32:42.649Z -- unknown -- enl%20newsletter</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3060</link>
      <description>The ENL Newsletter WordPress plugin through 1.0.1 does not sanitize and escape a parameter before using it in a SQL statement, allowing admin+ to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2024-3060|2024-08-01T19:32:42.649Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2234|2024-08-01T19:03:39.187Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2234</link>
      <description>The Himer WordPress theme before 2.1.1 does not sanitise and escape some of its Post settings, which could allow high privilege users such as Contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2234|2024-08-01T19:03:39.187Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2505|2024-08-01T19:18:46.478Z -- unknown -- gamipress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2505</link>
      <description>The GamiPress  WordPress plugin before 6.8.9's access control mechanism fails to properly restrict access to its settings, permitting Authors to manipulate requests and extend access to lower privileged users, like Subscribers, despite initial settings prohibiting such access. This vulnerability resembles broken access control, enabling unauthorized users to modify critical GamiPress  WordPress plugin before 6.8.9 configurations.</description>
      <guid isPermaLink="false">CVE-2024-2505|2024-08-01T19:18:46.478Z</guid>
      <pubDate>Mon, 29 Apr 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2603|2024-08-01T19:18:48.123Z -- unknown -- salon%20booking%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2603</link>
      <description>The Salon booking system WordPress plugin through 9.6.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin (or editor depending on Salon booking system WordPress plugin through 9.6.5 configuration) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2603|2024-08-01T19:18:48.123Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2761|2024-08-01T19:25:41.441Z -- unknown -- genesis%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2761</link>
      <description>The Genesis Blocks WordPress plugin before 3.1.3 does not properly escape data input provided to some of its blocks, allowing using with at least contributor privileges to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-2761|2024-08-01T19:25:41.441Z</guid>
      <pubDate>Fri, 19 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2444|2024-08-01T19:11:53.590Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2444</link>
      <description>The Inline Related Posts WordPress plugin before 3.5.0 does not sanitise and escape some of its settings, which could allow high privilege users such as Admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2444|2024-08-01T19:11:53.590Z</guid>
      <pubDate>Sat, 06 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2858|2024-08-01T19:25:42.166Z -- unknown -- simple%20buttons%20creator</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2858</link>
      <description>The Simple Buttons Creator WordPress plugin through 1.04 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2858|2024-08-01T19:25:42.166Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2309|2024-08-01T19:11:53.339Z -- unknown -- wp%20staging%20wordpress%20backup%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2309</link>
      <description>The WP STAGING WordPress Backup Plugin  WordPress plugin before 3.4.0, wp-staging-pro WordPress plugin before 5.4.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2309|2024-08-01T19:11:53.339Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2696|2024-08-01T19:18:48.239Z -- unknown -- socialdriver-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2696</link>
      <description>The socialdriver-framework WordPress plugin before 2024.04.30 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2696|2024-08-01T19:18:48.239Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2231|2024-08-01T19:03:39.156Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2231</link>
      <description>The  allows any authenticated user to join a private group due to a missing authorization check on a function</description>
      <guid isPermaLink="false">CVE-2024-2231|2024-08-01T19:03:39.156Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2220|2024-08-01T19:03:39.366Z -- unknown -- button%20contact%20vr</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2220</link>
      <description>The Button contact VR WordPress plugin through 4.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2220|2024-08-01T19:03:39.366Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3059|2024-08-01T19:32:42.574Z -- unknown -- enl%20newsletter</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3059</link>
      <description>The ENL Newsletter WordPress plugin through 1.0.1 does not have CSRF checks in some places, which could allow attackers to make logged in admins delete arbitrary Campaigns via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3059|2024-08-01T19:32:42.574Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2739|2024-08-01T19:25:41.190Z -- unknown -- advanced%20search</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2739</link>
      <description>The Advanced Search WordPress plugin through 1.1.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2739|2024-08-01T19:25:41.190Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2729|2024-08-01T19:25:41.320Z -- unknown -- otter%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2729</link>
      <description>The Otter Blocks  WordPress plugin before 2.6.6 does not properly escape its mainHeadings blocks' attribute before appending it to the final rendered block, allowing contributors to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-2729|2024-08-01T19:25:41.320Z</guid>
      <pubDate>Thu, 18 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2375|2024-08-01T19:11:53.432Z -- unknown -- wpqa%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2375</link>
      <description>The WPQA Builder WordPress plugin before 6.1.1 does not sanitise and escape some of its Slider settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2375|2024-08-01T19:11:53.432Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2262|2024-08-01T19:03:39.362Z -- unknown -- themify</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2262</link>
      <description>Themify  WordPress plugin before 1.4.4 does not have CSRF check in its bulk action, which could allow attackers to make logged in users delete arbitrary filters via CSRF attack, granted they know the related filter slugs</description>
      <guid isPermaLink="false">CVE-2024-2262|2024-08-01T19:03:39.362Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3050|2024-08-01T19:32:42.587Z -- unknown -- site%20reviews</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3050</link>
      <description>The Site Reviews WordPress plugin before 7.0.0 retrieves client IP addresses from potentially untrusted headers, allowing an attacker to manipulate its value. This may be used to bypass IP-based blocking</description>
      <guid isPermaLink="false">CVE-2024-3050|2024-08-01T19:32:42.587Z</guid>
      <pubDate>Wed, 29 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2218|2024-08-01T19:03:39.405Z -- unknown -- luckywp%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2218</link>
      <description>The LuckyWP Table of Contents WordPress plugin through 2.1.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2218|2024-08-01T19:03:39.405Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2189|2024-08-01T19:03:39.100Z -- unknown -- social%20icons%20widget%20%26%20block%20by%20wpzoom</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2189</link>
      <description>The Social Icons Widget &amp; Block by WPZOOM WordPress plugin before 4.2.18 does not sanitise and escape some of its Widget settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2189|2024-08-01T19:03:39.100Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2972|2024-08-01T19:32:42.539Z -- unknown -- floating%20chat%20widget%3A%20contact%20chat%20icons%2C%20whatsapp%2C%20telegram%20chat%2C%20line%20messenger%2C%20wechat%2C%20email%2C%20sms%2C%20call%20button</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2972</link>
      <description>The Floating Chat Widget: Contact Chat Icons, WhatsApp, Telegram Chat, Line Messenger, WeChat, Email, SMS, Call Button  WordPress plugin before 3.1.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2972|2024-08-01T19:32:42.539Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3048|2024-08-01T19:32:42.570Z -- unknown -- bannerlid</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3048</link>
      <description>The Bannerlid WordPress plugin through 1.1.0 does not escape generated URLs before outputting them in attributes, leading to Reflected Cross-Site Scripting which could be used against high privilege users such as administrators</description>
      <guid isPermaLink="false">CVE-2024-3048|2024-08-01T19:32:42.570Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2870|2024-08-01T19:25:42.186Z -- unknown -- socialdriver-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2870</link>
      <description>The socialdriver-framework WordPress plugin before 2024.04.30 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-2870|2024-08-01T19:25:42.186Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2430|2024-08-01T19:11:53.499Z -- unknown -- website%20content%20in%20page%20or%20post</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2430</link>
      <description>The Website Content in Page or Post WordPress plugin before 2024.04.09 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2430|2024-08-01T19:11:53.499Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2749|2024-08-01T19:25:41.264Z -- unknown -- vikbooking%20hotel%20booking%20engine%20%26%20pms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2749</link>
      <description>The VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8's access control mechanism fails to properly restrict access to its settings, permitting any users that can access a menu to manipulate requests and perform unauthorized actions such as editing, renaming or deleting (categories for example) despite initial settings prohibiting such access. This vulnerability resembles broken access control, enabling unauthorized users to modify critical VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8 configurations.</description>
      <guid isPermaLink="false">CVE-2024-2749|2024-08-01T19:25:41.264Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1983|2024-08-01T19:17:11.130Z -- unknown -- simple%20ajax%20chat</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1983</link>
      <description>The Simple Ajax Chat  WordPress plugin before 20240223 does not prevent visitors from using malicious Names when using the chat, which will be reflected unsanitized to other users.</description>
      <guid isPermaLink="false">CVE-2024-1983|2024-08-01T19:17:11.130Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2405|2024-08-01T19:11:53.477Z -- unknown -- float%20menu</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2405</link>
      <description>The Float menu  WordPress plugin before 6.0.1 does not have CSRF check in its bulk actions, which could allow attackers to make logged in admin delete arbitrary menu via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2024-2405|2024-08-01T19:11:53.477Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2159|2024-08-01T19:03:39.309Z -- unknown -- social%20sharing%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2159</link>
      <description>The Social Sharing Plugin  WordPress plugin before 3.3.61 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2159|2024-08-01T19:03:39.309Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2697|2024-08-01T19:18:48.397Z -- unknown -- socialdriver-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2697</link>
      <description>The socialdriver-framework WordPress plugin before 2024.0.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2024-2697|2024-08-01T19:18:48.397Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2402|2024-08-01T19:11:53.525Z -- unknown -- better%20comments</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2402</link>
      <description>The Better Comments WordPress plugin before 1.5.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2402|2024-08-01T19:11:53.525Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3026|2024-08-01T19:32:42.611Z -- unknown -- wordpress%20button%20plugin%20maxbuttons</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3026</link>
      <description>The WordPress Button Plugin MaxButtons WordPress plugin before 9.7.8 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3026|2024-08-01T19:32:42.611Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2235|2024-08-01T19:03:39.198Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2235</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make users vote on any polls, including those they don't have access to via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2235|2024-08-01T19:03:39.198Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3113|2024-08-01T19:32:42.701Z -- unknown -- formflow%3A%20whatsapp%20social%20and%20advanced%20form%20builder%20with%20easy%20lead%20collection</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3113</link>
      <description>The FormFlow: WhatsApp Social and Advanced Form Builder with Easy Lead Collection WordPress plugin before 2.12.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3113|2024-08-01T19:32:42.701Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3112|2024-08-01T19:32:42.695Z -- unknown -- quotes%20and%20tips%20by%20bestwebsoft</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3112</link>
      <description>The Quotes and Tips by BestWebSoft WordPress plugin before 1.45 does not properly validate image files uploaded, allowing high privilege users such as admin to upload arbitrary files on the server even when they should not be allowed to (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3112|2024-08-01T19:32:42.695Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2907|2024-08-01T19:25:42.145Z -- unknown -- agca</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2907</link>
      <description>The AGCA  WordPress plugin before 7.2.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-2907|2024-08-01T19:25:42.145Z</guid>
      <pubDate>Thu, 25 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2428|2024-08-01T19:11:53.504Z -- unknown -- the%20ultimate%20video%20player%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2428</link>
      <description>The Ultimate Video Player For WordPress  WordPress plugin before 2.2.3 does not have proper capability check when updating its settings via a REST route, allowing Contributor and above users to update them. Furthermore, due to the lack of escaping in one of the settings, this also allows them to perform Stored XSS attacks</description>
      <guid isPermaLink="false">CVE-2024-2428|2024-08-01T19:11:53.504Z</guid>
      <pubDate>Wed, 10 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2233|2024-08-01T19:03:39.397Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2233</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks. These include declining and accepting group invitations or leaving a group</description>
      <guid isPermaLink="false">CVE-2024-2233|2024-08-01T19:03:39.397Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2101|2024-08-01T19:03:38.483Z -- unknown -- salon%20booking%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2101</link>
      <description>The Salon booking system WordPress plugin before 9.6.3 does not properly sanitize and escape the 'Mobile Phone' field when booking an appointment, allowing customers to conduct Stored Cross-Site Scripting attacks. The payload gets triggered when an admin visits the 'Customers' page and the malicious script is executed in the admin context.</description>
      <guid isPermaLink="false">CVE-2024-2101|2024-08-01T19:03:38.483Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3058|2024-08-01T19:32:42.623Z -- unknown -- enl%20newsletter</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3058</link>
      <description>The ENL Newsletter WordPress plugin through 1.0.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3058|2024-08-01T19:32:42.623Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3076|2024-08-01T19:32:42.564Z -- unknown -- mm-email2image</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3076</link>
      <description>The MM-email2image WordPress plugin through 0.2.5 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3076|2024-08-01T19:32:42.564Z</guid>
      <pubDate>Fri, 26 Apr 2024 13:23:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2369|2024-08-01T19:11:53.453Z -- unknown -- page%20builder%20gutenberg%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2369</link>
      <description>The Page Builder Gutenberg Blocks WordPress plugin before 3.1.7 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2369|2024-08-01T19:11:53.453Z</guid>
      <pubDate>Tue, 02 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2278|2024-08-01T19:11:52.117Z -- unknown -- themify</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2278</link>
      <description>Themify  WordPress plugin before 1.4.4 does not sanitise and escape some of its Filters settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2278|2024-08-01T19:11:52.117Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2322|2024-08-01T19:11:52.617Z -- unknown -- woocommerce%20cart%20abandonment%20recovery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2322</link>
      <description>The WooCommerce Cart Abandonment Recovery WordPress plugin before 1.2.27 does not have CSRF check in its bulk actions, which could allow attackers to make logged in admins delete arbitrary email templates as well as delete and unsubscribe users from abandoned orders via CSRF attacks.</description>
      <guid isPermaLink="false">CVE-2024-2322|2024-08-01T19:11:52.617Z</guid>
      <pubDate>Wed, 03 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2640|2024-08-01T19:18:48.172Z -- unknown -- watu%20quiz</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2640</link>
      <description>The Watu Quiz WordPress plugin before 3.4.1.2 does not sanitise and escape some of its settings, which could allow users such as authors (if they've been authorized by admins) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2024-2640|2024-08-01T19:18:48.172Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2102|2024-08-01T19:03:38.794Z -- unknown -- salon%20booking%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2102</link>
      <description>The Salon booking system WordPress plugin before 9.6.3 does not properly sanitize and escape the 'Mobile Phone' field and 'sms_prefix' parameter when booking an appointment, allowing customers to conduct Stored Cross-Site Scripting attacks. The payload gets triggered when an admin visits the 'Bookings' page and the malicious script is executed in the admin context.</description>
      <guid isPermaLink="false">CVE-2024-2102|2024-08-01T19:03:38.794Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5488|2024-08-01T21:11:12.790Z -- unknown -- seopress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5488</link>
      <description>The SEOPress  WordPress plugin before 7.9 does not properly protect some of its REST API routes, which combined with another Object Injection vulnerability can allow unauthenticated attackers to unserialize malicious gadget chains, compromising the site if a suitable chain is present.</description>
      <guid isPermaLink="false">CVE-2024-5488|2024-08-01T21:11:12.790Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6073|2024-08-01T21:25:03.205Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6073</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6073|2024-08-01T21:25:03.205Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5286|2024-08-01T21:11:12.434Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5286</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5286|2024-08-01T21:11:12.434Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6021|2024-08-01T21:25:03.197Z -- unknown -- donation%20block%20for%20paypal</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6021</link>
      <description>The Donation Block For PayPal WordPress plugin through 2.1.0 does not sanitise and escape form submissions, leading to a stored cross-site scripting vulnerability</description>
      <guid isPermaLink="false">CVE-2024-6021|2024-08-01T21:25:03.197Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5444|2024-08-01T21:11:12.795Z -- unknown -- bible%20text</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5444</link>
      <description>The Bible Text WordPress plugin through 0.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5444|2024-08-01T21:11:12.795Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5287|2024-08-01T21:11:12.359Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5287</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in user change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5287|2024-08-01T21:11:12.359Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5447|2024-08-01T21:11:12.768Z -- unknown -- paypal%20pay%20now%2C%20buy%20now%2C%20donation%20and%20cart%20buttons%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5447</link>
      <description>The PayPal Pay Now, Buy Now, Donation and Cart Buttons Shortcode WordPress plugin through 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5447|2024-08-01T21:11:12.768Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5155|2024-08-01T21:03:10.979Z -- unknown -- inquiry%20cart</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5155</link>
      <description>The Inquiry cart WordPress plugin through 3.4.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5155|2024-08-01T21:03:10.979Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6205|2024-08-01T21:33:05.100Z -- unknown -- payplus%20payment%20gateway</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6205</link>
      <description>The PayPlus Payment Gateway WordPress plugin before 6.6.9 does not properly sanitise and escape a parameter before using it in a SQL statement via a WooCommerce API route available to unauthenticated users, leading to an SQL injection vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-6205|2024-08-01T21:33:05.100Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5280|2024-08-01T21:11:12.346Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5280</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make non-logged in users execute an XSS payload via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5280|2024-08-01T21:11:12.346Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5028|2024-08-01T21:03:09.657Z -- unknown -- cm%20wordpress%20search%20and%20replace%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5028</link>
      <description>The CM WordPress Search And Replace Plugin WordPress plugin before 1.3.9 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5028|2024-08-01T21:03:09.657Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5151|2024-08-01T21:03:10.976Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5151</link>
      <description>The SULly WordPress plugin before 4.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5151|2024-08-01T21:03:10.976Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5765|2024-08-01T21:18:07.051Z -- unknown -- wpstickybar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5765</link>
      <description>The WpStickyBar  WordPress plugin through 2.1.0 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2024-5765|2024-08-01T21:18:07.051Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5644|2024-08-01T21:18:06.697Z -- unknown -- tournamatch</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5644</link>
      <description>The Tournamatch WordPress plugin before 4.6.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5644|2024-08-01T21:18:06.697Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5473|2024-08-01T21:11:12.795Z -- unknown -- simple%20photoswipe</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5473</link>
      <description>The Simple Photoswipe WordPress plugin through 0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5473|2024-08-01T21:11:12.795Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5809|2024-08-01T21:25:02.945Z -- unknown -- wp%20ajax%20contact%20form</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5809</link>
      <description>The WP Ajax Contact Form WordPress plugin through 2.2.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against admin users</description>
      <guid isPermaLink="false">CVE-2024-5809|2024-08-01T21:25:02.945Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5730|2024-08-01T21:18:07.116Z -- unknown -- pagerank%20tools</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5730</link>
      <description>The Pagerank tools WordPress plugin through 1.1.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5730|2024-08-01T21:18:07.116Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5341|2024-08-01T21:11:12.428Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5341</link>
      <description>The The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'size' attribute of the Heading Title widget in all versions up to, and including, 5.5.4 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2024-5341|2024-08-01T21:11:12.428Z</guid>
      <pubDate>Thu, 30 May 2024 05:33:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5744|2024-08-01T21:18:07.071Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5744</link>
      <description>The wp-eMember WordPress plugin before 10.6.7 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2024-5744|2024-08-01T21:18:07.071Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5975|2024-08-01T21:25:03.152Z -- unknown -- cz%20loan%20management</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5975</link>
      <description>The CZ Loan Management WordPress plugin through 1.1 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2024-5975|2024-08-01T21:25:03.152Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6334|2024-08-01T21:33:05.449Z -- unknown -- easy%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6334</link>
      <description>The Easy Table of Contents WordPress plugin before 2.0.67.1 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2024-6334|2024-08-01T21:33:05.449Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5074|2024-08-01T21:03:10.754Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5074</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5074|2024-08-01T21:03:10.754Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5442|2024-08-01T21:11:12.789Z -- unknown -- photo%20gallery%2C%20sliders%2C%20proofing%20and%20themes</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5442</link>
      <description>The Photo Gallery, Sliders, Proofing and   WordPress plugin before 3.59.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5442|2024-08-01T21:11:12.789Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6271|2024-08-01T21:33:05.310Z -- unknown -- community%20events</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6271</link>
      <description>The Community Events WordPress plugin before 1.5 does not have CSRF check in place when deleting events, which could allow attackers to make a logged in admin delete arbitrary events via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6271|2024-08-01T21:33:05.310Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5713|2024-08-01T21:18:07.087Z -- unknown -- if-so%20dynamic%20content%20personalization</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5713</link>
      <description>The If-So Dynamic Content Personalization WordPress plugin before 1.8.0.4 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2024-5713|2024-08-01T21:18:07.087Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5344|2024-08-01T21:11:12.452Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5344</link>
      <description>The The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the ‘forgoturl’ attribute within the plugin's WP Login &amp; Register widget in all versions up to, and including, 5.5.6 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description>
      <guid isPermaLink="false">CVE-2024-5344|2024-08-01T21:11:12.452Z</guid>
      <pubDate>Fri, 21 Jun 2024 02:05:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5727|2024-08-01T21:18:06.947Z -- unknown -- widget4call</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5727</link>
      <description>The Widget4Call WordPress plugin through 1.0.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5727|2024-08-01T21:18:06.947Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6244|2024-08-01T21:33:05.242Z -- unknown -- pz%20frontend%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6244</link>
      <description>The PZ Frontend Manager WordPress plugin before 1.0.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6244|2024-08-01T21:33:05.242Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5522|2024-08-01T21:18:05.372Z -- unknown -- html5%20video%20player</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5522</link>
      <description>The HTML5 Video Player  WordPress plugin before 2.5.27 does not sanitize and escape a parameter from a REST route before using it in a SQL statement, allowing unauthenticated users to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2024-5522|2024-08-01T21:18:05.372Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6070|2024-08-01T21:25:03.271Z -- unknown -- if-so%20dynamic%20content%20personalization</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6070</link>
      <description>The If-So Dynamic Content Personalization WordPress plugin before 1.8.0.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6070|2024-08-01T21:25:03.271Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5802|2024-08-01T21:25:02.880Z -- unknown -- url%20shortener%20by%20mythemeshop</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5802</link>
      <description>The URL Shortener by Myhop WordPress plugin through 1.0.17 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-5802|2024-08-01T21:25:02.880Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5199|2024-08-01T21:03:11.058Z -- unknown -- spotify%20play%20button</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5199</link>
      <description>The Spotify Play Button WordPress plugin through 1.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-5199|2024-08-01T21:03:11.058Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6094|2024-08-01T21:33:03.283Z -- unknown -- wp%20ulike</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6094</link>
      <description>The WP ULike  WordPress plugin before 4.7.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-6094|2024-08-01T21:33:03.283Z</guid>
      <pubDate>Wed, 24 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6130|2024-08-01T21:33:04.994Z -- unknown -- form%20maker%20by%2010web</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6130</link>
      <description>The Form Maker by 10Web  WordPress plugin before 1.15.26 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6130|2024-08-01T21:33:04.994Z</guid>
      <pubDate>Mon, 01 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6164|2024-08-01T21:33:04.599Z -- unknown -- filter%20%26%20grids</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6164</link>
      <description>The Filter &amp; Grids WordPress plugin before 2.8.33 is vulnerable to Local File Inclusion via the post_layout parameter. This makes it possible for an unauthenticated attacker to include and execute PHP files on the server, allowing the execution of any PHP code in those files.</description>
      <guid isPermaLink="false">CVE-2024-6164|2024-08-01T21:33:04.599Z</guid>
      <pubDate>Thu, 18 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5808|2024-08-01T21:25:02.970Z -- unknown -- wp%20ajax%20contact%20form</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5808</link>
      <description>The WP Ajax Contact Form WordPress plugin through 2.2.2 does not have CSRF check in place when deleting emails from the email list, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5808|2024-08-01T21:25:02.970Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5284|2024-08-01T21:11:11.021Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5284</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5284|2024-08-01T21:11:11.021Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5169|2024-08-01T21:03:11.041Z -- unknown -- video%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5169</link>
      <description>The Video Widget WordPress plugin through 1.2.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5169|2024-08-01T21:03:11.041Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6072|2024-08-01T21:25:03.322Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6072</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2024-6072|2024-08-01T21:25:03.322Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5573|2024-08-01T21:18:06.816Z -- unknown -- easy%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5573</link>
      <description>The Easy Table of Contents WordPress plugin before 2.0.66 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-5573|2024-08-01T21:18:06.816Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5079|2024-08-01T21:03:10.553Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5079</link>
      <description>The wp-eMember WordPress plugin before 10.6.7 does not sanitise and escape some of the fields when members register, which allows unauthenticated users to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5079|2024-08-01T21:03:10.553Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5071|2024-08-01T21:03:10.655Z -- unknown -- bookster</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5071</link>
      <description>The Bookster  WordPress plugin through 1.1.0 allows adding sensitive parameters when validating appointments allowing attackers to manipulate the data sent when booking an appointment (the request body) to change its status from pending to approved.</description>
      <guid isPermaLink="false">CVE-2024-5071|2024-08-01T21:03:10.655Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6075|2024-08-01T21:25:03.263Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6075</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6075|2024-08-01T21:25:03.263Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6138|2024-08-01T21:33:05.210Z -- unknown -- secure%20copy%20content%20protection%20and%20content%20locking</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6138</link>
      <description>The Secure Copy Content Protection and Content Locking WordPress plugin before 4.0.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-6138|2024-08-01T21:33:05.210Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5630|2024-08-01T21:18:06.829Z -- unknown -- insert%20or%20embed%20articulate%20content%20into%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5630</link>
      <description>The Insert or Embed Articulate Content into WordPress plugin before 4.3000000024 does not prevent authors from uploading arbitrary files to the site, which may allow them to upload PHP shells on affected sites.</description>
      <guid isPermaLink="false">CVE-2024-5630|2024-08-01T21:18:06.829Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5283|2024-08-01T21:11:11.639Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5283</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5283|2024-08-01T21:11:11.639Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5281|2024-08-01T21:11:11.576Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5281</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5281|2024-08-01T21:11:11.576Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5529|2024-08-01T21:18:06.542Z -- unknown -- wp%20quicklatex</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5529</link>
      <description>The WP QuickLaTeX WordPress plugin before 3.8.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5529|2024-08-01T21:18:06.542Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6224|2024-08-01T21:33:05.151Z -- unknown -- send%20email%20only%20on%20reply%20to%20my%20comment</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6224</link>
      <description>The Send email only on Reply to My Comment WordPress plugin through 1.0.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6224|2024-08-01T21:33:05.151Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6231|2024-08-01T21:33:05.375Z -- unknown -- request%20a%20quote</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6231</link>
      <description>The Request a Quote WordPress plugin before 2.4.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6231|2024-08-01T21:33:05.375Z</guid>
      <pubDate>Tue, 23 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5172|2024-08-01T21:03:11.067Z -- unknown -- expert%20invoice</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5172</link>
      <description>The Expert Invoice WordPress plugin through 1.0.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5172|2024-08-01T21:03:11.067Z</guid>
      <pubDate>Tue, 18 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5472|2024-08-01T21:11:12.763Z -- unknown -- wp%20quicklatex</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5472</link>
      <description>The WP QuickLaTeX WordPress plugin before 3.8.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5472|2024-08-01T21:11:12.763Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5167|2024-08-01T21:03:11.042Z -- unknown -- cm%20email%20registration%20blacklist%20and%20whitelist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5167</link>
      <description>The CM Email Registration Blacklist and Whitelist WordPress plugin before 1.4.9 does not have CSRF check when adding or deleting an item from the blacklist or whitelist, which could allow attackers to make a logged in admin add or delete settings from the blacklist or whitelist menu via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5167|2024-08-01T21:03:11.042Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5883|2024-08-01T21:25:03.165Z -- unknown -- ultimate%20classified%20listings</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5883</link>
      <description>The Ultimate Classified Listings WordPress plugin before 1.3 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5883|2024-08-01T21:25:03.165Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6366|2024-08-01T21:33:05.436Z -- unknown -- user%20profile%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6366</link>
      <description>The User Profile Builder  WordPress plugin before 3.11.8 does not have proper authorisation, allowing unauthenticated users to upload media files via the async upload functionality of WP.</description>
      <guid isPermaLink="false">CVE-2024-6366|2024-08-01T21:33:05.436Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5973|2024-08-01T21:25:03.133Z -- unknown -- masterstudy%20lms%20wordpress%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5973</link>
      <description>The MasterStudy LMS WordPress Plugin  WordPress plugin before 3.3.24 does not prevent students from creating instructor accounts, which could be used to get access to functionalities they shouldn't have.</description>
      <guid isPermaLink="false">CVE-2024-5973|2024-08-01T21:25:03.133Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5604|2024-08-01T21:18:06.836Z -- unknown -- bug%20library</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5604</link>
      <description>The Bug Library WordPress plugin before 2.1.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5604|2024-08-01T21:18:06.836Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6025|2024-08-01T21:25:03.195Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6025</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.0.5 does not sanitise and escape some of its Quiz settings, which could allow contributors and higher to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6025|2024-08-01T21:25:03.195Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5767|2024-08-01T21:18:07.035Z -- unknown -- sitetweet</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5767</link>
      <description>The sitetweet WordPress plugin through 0.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5767|2024-08-01T21:18:07.035Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5807|2024-08-01T21:25:02.833Z -- unknown -- business%20card</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5807</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not prevent high privilege users like administrators from uploading malicious PHP files, which could allow them to run arbitrary code on servers hosting their site, even in MultiSite configurations.</description>
      <guid isPermaLink="false">CVE-2024-5807|2024-08-01T21:25:02.833Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5626|2024-08-01T21:18:06.696Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5626</link>
      <description>The Inline Related Posts WordPress plugin before 3.7.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5626|2024-08-01T21:18:06.696Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5080|2024-08-01T21:03:10.803Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5080</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not validate files to be uploaded, which could allow admins to upload arbitrary files such as PHP on the server</description>
      <guid isPermaLink="false">CVE-2024-5080|2024-08-01T21:03:10.803Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6289|2024-08-01T21:33:05.447Z -- unknown -- wps%20hide%20login</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6289</link>
      <description>The WPS Hide Login WordPress plugin before 1.9.16.4 does not prevent redirects to the login page via the auth_redirect WordPress function, allowing an unauthenticated visitor to access the hidden login page.</description>
      <guid isPermaLink="false">CVE-2024-6289|2024-08-01T21:33:05.447Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5811|2024-08-01T21:25:02.669Z -- unknown -- simple%20video%20directory</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5811</link>
      <description>The Simple Video Directory WordPress plugin before 1.4.4 does not sanitise and escape some of its settings, which could allow contributors and higher to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5811|2024-08-01T21:25:02.669Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5450|2024-08-01T21:11:12.776Z -- unknown -- bug%20library</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5450</link>
      <description>The Bug Library WordPress plugin before 2.1.1 does not check the file type on user-submitted bug reports, allowing an unauthenticated user to upload PHP files</description>
      <guid isPermaLink="false">CVE-2024-5450|2024-08-01T21:11:12.776Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6490|2024-08-01T21:41:03.422Z -- unknown -- master%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6490</link>
      <description>During testing of the Master Slider  WordPress plugin through 3.9.10, a CSRF vulnerability was found, which allows an unauthorized user to manipulate requests on behalf of the victim and thereby delete all of the sliders inside Master Slider  WordPress plugin through 3.9.10.</description>
      <guid isPermaLink="false">CVE-2024-6490|2024-08-01T21:41:03.422Z</guid>
      <pubDate>Fri, 26 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6230|2024-08-01T21:33:05.315Z -- unknown -- %D9%BE%D9%84%D8%A7%DA%AF%DB%8C%D9%86%20%D9%BE%D8%B1%D8%AF%D8%A7%D8%AE%D8%AA%20%D8%AF%D9%84%D8%AE%D9%88%D8%A7%D9%87</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6230</link>
      <description>The پلاگین پرداخت دلخواه WordPress plugin through 2.9.8 does not have CSRF check in place when resetting its form fields, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6230|2024-08-01T21:33:05.315Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5077|2024-08-01T21:03:10.588Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5077</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5077|2024-08-01T21:03:10.588Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6420|2024-08-01T21:41:03.294Z -- unknown -- hide%20my%20wp%20ghost</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6420</link>
      <description>The Hide My WP Ghost  WordPress plugin before 5.2.02 does not prevent redirects to the login page via the auth_redirect WordPress function, allowing an unauthenticated visitor to access the hidden login page.</description>
      <guid isPermaLink="false">CVE-2024-6420|2024-08-01T21:41:03.294Z</guid>
      <pubDate>Tue, 23 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5475|2024-08-01T21:11:12.785Z -- unknown -- responsive%20video%20embed</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5475</link>
      <description>The Responsive video embed WordPress plugin before 0.5.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-5475|2024-08-01T21:11:12.785Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6223|2024-08-01T21:33:05.217Z -- unknown -- send%20email%20only%20on%20reply%20to%20my%20comment</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6223</link>
      <description>The Send email only on Reply to My Comment WordPress plugin through 1.0.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6223|2024-08-01T21:33:05.217Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5282|2024-08-01T21:11:11.639Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5282</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5282|2024-08-01T21:11:11.639Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5570|2024-08-01T21:18:06.390Z -- unknown -- simple%20photoswipe</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5570</link>
      <description>The Simple Photoswipe WordPress plugin through 0.1 does not have authorisation check when updating its settings, which could allow any authenticated users, such as subscriber to update them</description>
      <guid isPermaLink="false">CVE-2024-5570|2024-08-01T21:18:06.390Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5075|2024-08-01T21:03:10.348Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5075</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5075|2024-08-01T21:03:10.348Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5715|2024-08-01T21:18:06.857Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5715</link>
      <description>The wp-eMember WordPress plugin before 10.6.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5715|2024-08-01T21:18:06.857Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6487|2024-08-01T21:41:03.293Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6487</link>
      <description>The Inline Related Posts WordPress plugin before 3.8.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6487|2024-08-01T21:41:03.293Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6022|2024-08-01T21:25:03.198Z -- unknown -- contentlock</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6022</link>
      <description>The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6022|2024-08-01T21:25:03.198Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5729|2024-08-01T21:18:07.060Z -- unknown -- simple%20al%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5729</link>
      <description>The Simple AL Slider WordPress plugin through 1.2.10 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5729|2024-08-01T21:18:07.060Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6074|2024-08-01T21:25:03.266Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6074</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6074|2024-08-01T21:25:03.266Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6362|2024-08-01T21:33:05.331Z -- unknown -- ultimate%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6362</link>
      <description>The Ultimate Blocks  WordPress plugin before 3.2.0 does not validate and escape some of its post-grid block attributes before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6362|2024-08-01T21:33:05.331Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5032|2024-08-01T21:03:09.647Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5032</link>
      <description>The SULly WordPress plugin before 4.3.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5032|2024-08-01T21:03:09.647Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5076|2024-08-01T21:03:10.703Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5076</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5076|2024-08-01T21:03:10.703Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6243|2024-08-01T21:33:05.323Z -- unknown -- html%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6243</link>
      <description>The HTML Forms  WordPress plugin before 1.3.33 does not sanitize and escape the form message inputs, allowing high-privilege users, such as administrators, to perform Stored Cross-Site Scripting (XSS) attacks even when the unfiltered_html capability is disabled.</description>
      <guid isPermaLink="false">CVE-2024-6243|2024-08-01T21:33:05.323Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5034|2024-08-01T21:03:09.640Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5034</link>
      <description>The SULly WordPress plugin before 4.3.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5034|2024-08-01T21:03:09.640Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5448|2024-08-01T21:11:12.780Z -- unknown -- paypal%20pay%20now%2C%20buy%20now%2C%20donation%20and%20cart%20buttons%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5448</link>
      <description>The PayPal Pay Now, Buy Now, Donation and Cart Buttons Shortcode WordPress plugin through 1.7 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5448|2024-08-01T21:11:12.780Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6226|2024-08-01T21:33:05.329Z -- unknown -- wpstickybar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6226</link>
      <description>The WpStickyBar  WordPress plugin through 2.1.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6226|2024-08-01T21:33:05.329Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5606|2024-08-01T21:18:06.591Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5606</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.0.2 is vulnerable does not validate and escape the question_id parameter in the qsm_bulk_delete_question_from_database AJAX action, leading to a SQL injection exploitable by Contributors and above role</description>
      <guid isPermaLink="false">CVE-2024-5606|2024-08-01T21:18:06.591Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5882|2024-08-01T21:25:02.969Z -- unknown -- ultimate%20classified%20listings</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5882</link>
      <description>The Ultimate Classified Listings WordPress plugin before 1.3 does not validate the `ucl_page` and `layout` parameters allowing unauthenticated users to access PHP files on the server from the listings page</description>
      <guid isPermaLink="false">CVE-2024-5882|2024-08-01T21:25:02.969Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5285|2024-08-01T21:11:11.619Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5285</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.2 does not have CSRF check in place when deleting affiliates, which could allow attackers to make a logged in user change delete them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5285|2024-08-01T21:11:11.619Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5575|2024-08-01T21:18:06.451Z -- unknown -- ditty</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5575</link>
      <description>The Ditty  WordPress plugin before 3.1.43 does not sanitise and escape some of its blocks' settings, which could allow high privilege users such as authors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-5575|2024-08-01T21:18:06.451Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6076|2024-08-01T21:25:03.197Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6076</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6076|2024-08-01T21:25:03.197Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5455|2024-08-01T21:11:12.785Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5455</link>
      <description>The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 5.5.4 via the 'magazine_style' parameter within the Dynamic Smart Showcase widget. This makes it possible for authenticated attackers, with Contributor-level access and above, to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other “safe” file types can be uploaded and included.</description>
      <guid isPermaLink="false">CVE-2024-5455|2024-08-01T21:11:12.785Z</guid>
      <pubDate>Fri, 21 Jun 2024 03:24:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5627|2024-08-01T21:18:06.830Z -- unknown -- tournamatch</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5627</link>
      <description>The Tournamatch WordPress plugin before 4.6.1 does not sanitise and escape some parameters, which could allow users with a role as low as subscriber to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-5627|2024-08-01T21:18:06.830Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5033|2024-08-01T21:03:09.723Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5033</link>
      <description>The SULly WordPress plugin before 4.3.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5033|2024-08-01T21:03:09.723Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6024|2024-08-01T21:25:03.203Z -- unknown -- contentlock</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6024</link>
      <description>The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when deleting groups or emails, which could allow attackers to make a logged in admin remove them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6024|2024-08-01T21:25:03.203Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6026|2024-08-01T21:25:03.207Z -- unknown -- slider%20by%2010web</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6026</link>
      <description>The Slider by 10Web  WordPress plugin before 1.2.56 does not sanitise and escape some of its Slide options, which could allow authenticated users with access to the Sliders (by default Administrator, however this can be changed via the Slider by 10Web  WordPress plugin before 1.2.56's options) and the ability to add images (Editor+) to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6026|2024-08-01T21:25:03.207Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5728|2024-08-01T21:18:07.034Z -- unknown -- animated%20al%20list</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5728</link>
      <description>The Animated AL List WordPress plugin through 1.0.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5728|2024-08-01T21:18:07.034Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6023|2024-08-01T21:25:03.160Z -- unknown -- contentlock</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6023</link>
      <description>The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when adding emails, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6023|2024-08-01T21:25:03.160Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6536|2024-08-01T21:41:03.512Z -- unknown -- zephyr%20project%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6536</link>
      <description>The Zephyr Project Manager WordPress plugin before 3.3.99 does not sanitise and escape some of its settings, which could allow high privilege users such as editors and admins to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6536|2024-08-01T21:41:03.512Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5595|2024-08-02T06:00:06.949Z -- unknown -- essential%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5595</link>
      <description>The Essential Blocks  WordPress plugin before 4.7.0 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5595|2024-08-02T06:00:06.949Z</guid>
      <pubDate>Fri, 02 Aug 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7252|2024-08-02T08:57:35.052Z -- unknown -- tickera</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7252</link>
      <description>The Tickera  WordPress plugin before 3.5.2.5 does not prevent users from leaking other users' tickets.</description>
      <guid isPermaLink="false">CVE-2023-7252|2024-08-02T08:57:35.052Z</guid>
      <pubDate>Mon, 22 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7164|2024-08-02T08:50:08.324Z -- unknown -- backwpup</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7164</link>
      <description>The BackWPup WordPress plugin before 4.0.4 does not prevent visitors from leaking key information about ongoing backups, allowing unauthenticated attackers to download backups of a site's database.</description>
      <guid isPermaLink="false">CVE-2023-7164|2024-08-02T08:50:08.324Z</guid>
      <pubDate>Mon, 08 Apr 2024 17:28:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6257|2024-08-02T08:28:20.199Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6257</link>
      <description>The Inline Related Posts WordPress plugin before 3.6.0 does not ensure that post content displayed via an AJAX action are accessible to the user, allowing any authenticated user, such as subscriber to retrieve the content of password protected posts</description>
      <guid isPermaLink="false">CVE-2023-6257|2024-08-02T08:28:20.199Z</guid>
      <pubDate>Thu, 11 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7253|2024-08-02T08:57:35.106Z -- unknown -- import%20wp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7253</link>
      <description>The Import WP  WordPress plugin before 2.13.1 does not prevent users with the administrator role from pinging conducting SSRF attacks, which may be a problem in multisite configurations.</description>
      <guid isPermaLink="false">CVE-2023-7253|2024-08-02T08:57:35.106Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6067|2024-08-02T08:21:17.215Z -- unknown -- wp%20user%20profile%20avatar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6067</link>
      <description>The WP User Profile Avatar WordPress plugin through 1.0.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-6067|2024-08-02T08:21:17.215Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5971|2024-08-02T08:14:25.115Z -- unknown -- save%20as%20pdf%20plugin%20by%20pdfcrowd</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-5971</link>
      <description>The Save as PDF Plugin by Pdfcrowd WordPress plugin before 3.2.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-5971|2024-08-02T08:14:25.115Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7247|2024-08-02T08:57:35.034Z -- unknown -- login%20as%20user%20or%20customer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7247</link>
      <description>The Login as User or Customer WordPress plugin through 3.8 does not prevent users to log in as any other user on the site.</description>
      <guid isPermaLink="false">CVE-2023-7247|2024-08-02T08:57:35.034Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7201|2024-08-02T08:57:34.095Z -- unknown -- everest%20backup</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7201</link>
      <description>The Everest Backup  WordPress plugin before 2.2.5 does not properly validate backup files to be uploaded, allowing high privilege users such as admin to upload arbitrary files on the server even when they should not be allowed to (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-7201|2024-08-02T08:57:34.095Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7232|2024-08-02T08:57:35.189Z -- unknown -- backup%20and%20restore%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7232</link>
      <description>The Backup and Restore WordPress  WordPress plugin through 1.45 does not protect some log files containing sensitive information such as site configuration etc, allowing unauthenticated users to access such data</description>
      <guid isPermaLink="false">CVE-2023-7232|2024-08-02T08:57:35.189Z</guid>
      <pubDate>Tue, 26 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6444|2024-08-02T08:28:21.818Z -- unknown -- seriously%20simple%20podcasting</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6444</link>
      <description>The Seriously Simple Podcasting WordPress plugin before 3.0.0 discloses the Podcast owner's email address (which by default is the admin email address) via an unauthenticated crafted request.</description>
      <guid isPermaLink="false">CVE-2023-6444|2024-08-02T08:28:21.818Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6821|2024-08-02T08:42:07.513Z -- unknown -- error%20log%20viewer%20by%20bestwebsoft</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6821</link>
      <description>The Error Log Viewer by BestWebSoft WordPress plugin before 1.1.3 contains a vulnerability that allows you to read and download PHP logs without authorization</description>
      <guid isPermaLink="false">CVE-2023-6821|2024-08-02T08:42:07.513Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7269|2024-08-02T08:57:35.220Z -- unknown -- artplacer%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7269</link>
      <description>The ArtPlacer Widget WordPress plugin before 2.21.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-7269|2024-08-02T08:57:35.220Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7236|2024-08-02T08:57:35.245Z -- unknown -- backup%20bolt</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7236</link>
      <description>The Backup Bolt WordPress plugin through 1.3.0 is vulnerable to Information Exposure via the unprotected access of debug logs. This makes it possible for unauthenticated attackers to retrieve the debug log which may contain information like system errors which could contain sensitive information.</description>
      <guid isPermaLink="false">CVE-2023-7236|2024-08-02T08:57:35.245Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6385|2024-08-02T08:28:21.786Z -- unknown -- wordpress%20ping%20optimizer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6385</link>
      <description>The WordPress Ping Optimizer WordPress plugin through 2.35.1.3.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as clearing logs.</description>
      <guid isPermaLink="false">CVE-2023-6385|2024-08-02T08:28:21.786Z</guid>
      <pubDate>Wed, 10 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7246|2024-08-02T08:57:34.750Z -- unknown -- system%20dashboard</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7246</link>
      <description>The System Dashboard WordPress plugin before 2.8.10 does not sanitize and escape some parameters, which could allow administrators in multisite WordPress configurations to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-7246|2024-08-02T08:57:34.750Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7268|2024-08-02T08:57:35.460Z -- unknown -- artplacer%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7268</link>
      <description>The ArtPlacer Widget WordPress plugin before 2.21.2 does not have authorisation check in place when deleting widgets,  allowing ay authenticated users, such as subscriber, to delete arbitrary widgets</description>
      <guid isPermaLink="false">CVE-2023-7268|2024-08-02T08:57:35.460Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7085|2024-08-02T08:50:07.997Z -- unknown -- scalable%20vector%20graphics%20%28svg%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7085</link>
      <description>The Scalable Vector Graphics (SVG) WordPress plugin through 3.4 does not sanitize uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2023-7085|2024-08-02T08:50:07.997Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5595|2024-08-02T16:12:09.234Z -- unknown -- essential%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5595</link>
      <description>The Essential Blocks  WordPress plugin before 4.7.0 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5595|2024-08-02T16:12:09.234Z</guid>
      <pubDate>Fri, 02 Aug 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2872|2024-08-02T18:50:24.448Z -- unknown -- socialdriver-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2872</link>
      <description>The socialdriver-framework WordPress plugin before 2024.04.30 does not sanitise and escape some of its settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2872|2024-08-02T18:50:24.448Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6390|2024-08-03T06:00:05.411Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6390</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.1.0 does not properly sanitise and escape some of its Quizz settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6390|2024-08-03T06:00:05.411Z</guid>
      <pubDate>Sat, 03 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6477|2024-08-03T06:00:05.955Z -- unknown -- userswp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6477</link>
      <description>The UsersWP  WordPress plugin before 1.2.12 uses predictable filenames when an admin generates an export, which could allow unauthenticated attackers to download them and retrieve sensitive information such as IP, username, and email address</description>
      <guid isPermaLink="false">CVE-2024-6477|2024-08-03T06:00:05.955Z</guid>
      <pubDate>Sat, 03 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5081|2024-08-05T06:00:07.283Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5081</link>
      <description>The wp-eMember WordPress plugin before v10.7.0 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5081|2024-08-05T06:00:07.283Z</guid>
      <pubDate>Mon, 05 Aug 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6498|2024-08-05T06:00:08.047Z -- unknown -- chatbot%20for%20wordpress%20by%20collect.chat%20%E2%9A%A1%EF%B8%8F</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6498</link>
      <description>The Chatbot for WordPress by Collect.chat ⚡️ WordPress plugin before 2.4.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-6498|2024-08-05T06:00:08.047Z</guid>
      <pubDate>Mon, 05 Aug 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3636|2024-08-05T06:00:01.893Z -- unknown -- pinpoint%20booking%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3636</link>
      <description>The Pinpoint Booking System  WordPress plugin before 2.9.9.4.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3636|2024-08-05T06:00:01.893Z</guid>
      <pubDate>Mon, 05 Aug 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6270|2024-08-05T06:00:07.727Z -- unknown -- community%20events</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6270</link>
      <description>The Community Events WordPress plugin before 1.5.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6270|2024-08-05T06:00:07.727Z</guid>
      <pubDate>Mon, 05 Aug 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2232|2024-08-05T06:00:01.247Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2232</link>
      <description>The  lacks CSRF checks allowing a user to invite any user to any group (including private groups)</description>
      <guid isPermaLink="false">CVE-2024-2232|2024-08-05T06:00:01.247Z</guid>
      <pubDate>Mon, 05 Aug 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6710|2024-08-05T06:00:08.327Z -- unknown -- ditty</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6710</link>
      <description>The Ditty  WordPress plugin before 3.1.45 does not sanitise and escape some parameters, which could allow users with a role as low as Contributor to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-6710|2024-08-05T06:00:08.327Z</guid>
      <pubDate>Mon, 05 Aug 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6270|2024-08-05T13:22:38.228Z -- unknown -- community%20events</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6270</link>
      <description>The Community Events WordPress plugin before 1.5.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6270|2024-08-05T13:22:38.228Z</guid>
      <pubDate>Mon, 05 Aug 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7246|2024-08-05T15:32:24.317Z -- unknown -- system%20dashboard</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7246</link>
      <description>The System Dashboard WordPress plugin before 2.8.10 does not sanitize and escape some parameters, which could allow administrators in multisite WordPress configurations to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-7246|2024-08-05T15:32:24.317Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6444|2024-08-05T17:48:43.813Z -- unknown -- seriously%20simple%20podcasting</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6444</link>
      <description>The Seriously Simple Podcasting WordPress plugin before 3.0.0 discloses the Podcast owner's email address (which by default is the admin email address) via an unauthenticated crafted request.</description>
      <guid isPermaLink="false">CVE-2023-6444|2024-08-05T17:48:43.813Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-7084|2024-08-06T06:00:07.489Z -- unknown -- ajax%20search%20lite</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-7084</link>
      <description>The Ajax Search Lite WordPress plugin before 4.12.1 does not sanitise and escape some parameters, which could allow users with a role as low as Admin+ to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-7084|2024-08-06T06:00:07.489Z</guid>
      <pubDate>Tue, 06 Aug 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6651|2024-08-06T06:00:02.684Z -- unknown -- wordpress%20file%20upload</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6651</link>
      <description>The WordPress File Upload WordPress plugin before 4.24.8 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6651|2024-08-06T06:00:02.684Z</guid>
      <pubDate>Tue, 06 Aug 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-7082|2024-08-06T06:00:07.251Z -- unknown -- easy%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-7082</link>
      <description>The Easy Table of Contents WordPress plugin before 2.0.68 does not sanitise and escape some parameters, which could allow users with a role as low as Editor to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-7082|2024-08-06T06:00:07.251Z</guid>
      <pubDate>Tue, 06 Aug 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6766|2024-08-06T06:00:06.735Z -- unknown -- shortcodes-ultimate-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6766</link>
      <description>The shortcodes-ultimate-pro WordPress plugin before 7.2.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6766|2024-08-06T06:00:06.735Z</guid>
      <pubDate>Tue, 06 Aug 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6766|2024-08-06T13:29:57.531Z -- unknown -- shortcodes-ultimate-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6766</link>
      <description>The shortcodes-ultimate-pro WordPress plugin before 7.2.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6766|2024-08-06T13:29:57.531Z</guid>
      <pubDate>Tue, 06 Aug 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6720|2024-08-06T15:28:44.640Z -- unknown -- light%20poll</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6720</link>
      <description>The Light Poll WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6720|2024-08-06T15:28:44.640Z</guid>
      <pubDate>Tue, 06 Aug 2024 15:28:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-7082|2024-08-06T15:31:23.839Z -- unknown -- easy%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-7082</link>
      <description>The Easy Table of Contents WordPress plugin before 2.0.68 does not sanitise and escape some parameters, which could allow users with a role as low as Editor to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-7082|2024-08-06T15:31:23.839Z</guid>
      <pubDate>Tue, 06 Aug 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3973|2024-08-07T06:00:05.491Z -- unknown -- house%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3973</link>
      <description>The House Manager  WordPress plugin through 1.0.8.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3973|2024-08-07T06:00:05.491Z</guid>
      <pubDate>Wed, 07 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6494|2024-08-07T06:00:06.219Z -- unknown -- wordpress%20file%20upload</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6494</link>
      <description>The WordPress File Upload WordPress plugin before 4.24.8 does not properly sanitize and escape certain parameters, which could allow unauthenticated users to execute stored cross-site scripting (XSS) attacks.</description>
      <guid isPermaLink="false">CVE-2024-6494|2024-08-07T06:00:06.219Z</guid>
      <pubDate>Wed, 07 Aug 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3973|2024-08-07T14:07:49.030Z -- unknown -- house%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3973</link>
      <description>The House Manager  WordPress plugin through 1.0.8.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3973|2024-08-07T14:07:49.030Z</guid>
      <pubDate>Wed, 07 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2843|2024-08-07T20:03:11.414Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2843</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 30.1 does not have CSRF checks in some places, which could allow attackers to make logged in admin users delete users via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2843|2024-08-07T20:03:11.414Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6710|2024-08-07T20:27:21.053Z -- unknown -- ditty</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6710</link>
      <description>The Ditty  WordPress plugin before 3.1.45 does not sanitise and escape some parameters, which could allow users with a role as low as Contributor to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-6710|2024-08-07T20:27:21.053Z</guid>
      <pubDate>Mon, 05 Aug 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6481|2024-08-08T13:16:42.199Z -- unknown -- search%20%26%20filter%20pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6481</link>
      <description>The Search &amp; Filter Pro WordPress plugin before 2.5.18 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6481|2024-08-08T13:16:42.199Z</guid>
      <pubDate>Thu, 08 Aug 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6884|2024-08-08T18:27:36.888Z -- unknown -- gutenberg%20blocks%20with%20ai%20by%20kadence%20wp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6884</link>
      <description>The Gutenberg Blocks with AI by Kadence WP  WordPress plugin before 3.2.39 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6884|2024-08-08T18:27:36.888Z</guid>
      <pubDate>Thu, 08 Aug 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0399|2024-08-08T20:33:40.528Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0399</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 29.7 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to an SQL injection exploitable by Subscriber+ role.</description>
      <guid isPermaLink="false">CVE-2024-0399|2024-08-08T20:33:40.528Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2444|2024-08-08T20:44:29.314Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2444</link>
      <description>The Inline Related Posts WordPress plugin before 3.5.0 does not sanitise and escape some of its settings, which could allow high privilege users such as Admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2444|2024-08-08T20:44:29.314Z</guid>
      <pubDate>Sat, 06 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6487|2024-08-08T20:43:59.315Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6487</link>
      <description>The Inline Related Posts WordPress plugin before 3.8.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6487|2024-08-08T20:43:59.315Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5626|2024-08-08T20:44:06.230Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5626</link>
      <description>The Inline Related Posts WordPress plugin before 3.7.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5626|2024-08-08T20:44:06.230Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0365|2024-08-08T20:38:59.032Z -- unknown -- fancy%20product%20designer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0365</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.5 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by adminstrators.</description>
      <guid isPermaLink="false">CVE-2024-0365|2024-08-08T20:38:59.032Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6136|2024-08-09T12:50:19.497Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6136</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6136|2024-08-09T12:50:19.497Z</guid>
      <pubDate>Fri, 09 Aug 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2231|2024-08-09T18:43:43.462Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2231</link>
      <description>The  allows any authenticated user to join a private group due to a missing authorization check on a function</description>
      <guid isPermaLink="false">CVE-2024-2231|2024-08-09T18:43:43.462Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2857|2024-08-09T18:43:11.239Z -- unknown -- simple%20buttons%20creator</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2857</link>
      <description>The Simple Buttons Creator WordPress plugin through 1.04 does not have any authorisation as well as CSRF in its add button function, allowing unauthenticated users to call them either directly or via CSRF attacks. Furthermore, due to the lack of sanitisation and escaping, it could also allow them to perform Stored Cross-Site Scripting attacks against logged in admins.</description>
      <guid isPermaLink="false">CVE-2024-2857|2024-08-09T18:43:11.239Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2404|2024-08-09T18:46:43.786Z -- unknown -- better%20comments</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2404</link>
      <description>The Better Comments WordPress plugin before 1.5.6 does not sanitise and escape some of its settings, which could allow low privilege users such as Subscribers to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-2404|2024-08-09T18:46:43.786Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0719|2024-08-09T18:41:12.349Z -- unknown -- tabs%20shortcode%20and%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0719</link>
      <description>The Tabs Shortcode and Widget WordPress plugin through 1.17 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-0719|2024-08-09T18:41:12.349Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3920|2024-08-09T18:54:30.448Z -- unknown -- flattr</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3920</link>
      <description>The Flattr WordPress plugin through 1.2.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3920|2024-08-09T18:54:30.448Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4616|2024-08-09T18:46:12.718Z -- unknown -- widget%20bundle</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4616</link>
      <description>The Widget Bundle WordPress plugin through 2.0.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against only unauthenticated users</description>
      <guid isPermaLink="false">CVE-2024-4616|2024-08-09T18:46:12.718Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0868|2024-08-09T20:03:49.776Z -- unknown -- coreactivity%3A%20activity%20logging%20plugin%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0868</link>
      <description>The coreActivity: Activity Logging plugin for WordPress plugin before 2.1 retrieved IP addresses of requests via headers such X-FORWARDED to log them, allowing users to spoof them by providing an arbitrary value</description>
      <guid isPermaLink="false">CVE-2024-0868|2024-08-09T20:03:49.776Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1232|2024-08-09T20:00:16.433Z -- unknown -- cm%20download%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1232</link>
      <description>The CM Download Manager  WordPress plugin before 2.9.0 does not have CSRF checks in some places, which could allow attackers to make logged in admins delete downloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-1232|2024-08-09T20:00:16.433Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7201|2024-08-09T20:01:33.240Z -- unknown -- everest%20backup</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7201</link>
      <description>The Everest Backup  WordPress plugin before 2.2.5 does not properly validate backup files to be uploaded, allowing high privilege users such as admin to upload arbitrary files on the server even when they should not be allowed to (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-7201|2024-08-09T20:01:33.240Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2429|2024-08-09T20:00:15.839Z -- unknown -- salon%20booking%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2429</link>
      <description>The Salon booking system WordPress plugin through 9.6.5 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2429|2024-08-09T20:00:15.839Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1564|2024-08-09T20:21:19.739Z -- unknown -- wp-schema-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1564</link>
      <description>The wp-schema-pro WordPress plugin before 2.7.16 does not validate post access allowing a contributor user to access custom fields on any post regardless of post type or status via a shortcode</description>
      <guid isPermaLink="false">CVE-2024-1564|2024-08-09T20:21:19.739Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1306|2024-08-09T20:00:43.921Z -- unknown -- smart%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1306</link>
      <description>The Smart Forms  WordPress plugin before 2.6.94 does not have CSRF checks in some places, which could allow attackers to make logged-in users perform unwanted actions via CSRF attacks, such as editing entries, and we consider it a medium risk.</description>
      <guid isPermaLink="false">CVE-2024-1306|2024-08-09T20:00:43.921Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7247|2024-08-11T13:36:09.877Z -- unknown -- login%20as%20user%20or%20customer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7247</link>
      <description>The Login as User or Customer WordPress plugin through 3.8 does not prevent users to log in as any other user on the site.</description>
      <guid isPermaLink="false">CVE-2023-7247|2024-08-11T13:36:09.877Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5971|2024-08-12T19:37:42.596Z -- unknown -- save%20as%20pdf%20plugin%20by%20pdfcrowd</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-5971</link>
      <description>The Save as PDF Plugin by Pdfcrowd WordPress plugin before 3.2.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-5971|2024-08-12T19:37:42.596Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6158|2024-08-13T14:25:37.044Z -- unknown -- category%20posts%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6158</link>
      <description>The Category Posts Widget WordPress plugin before 4.9.17, term-and-category-based-posts-widget WordPress plugin before 4.9.13 does not validate and escape some of its "Category Posts" widget settings before outputting them back in a page/post where the Widget is embed, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6158|2024-08-13T14:25:37.044Z</guid>
      <pubDate>Fri, 09 Aug 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6724|2024-08-13T14:26:06.464Z -- unknown -- generate%20images</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6724</link>
      <description>The Generate Images  WordPress plugin before 5.2.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6724|2024-08-13T14:26:06.464Z</guid>
      <pubDate>Tue, 13 Aug 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6134|2024-08-16T16:16:40.761Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6134</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6134|2024-08-16T16:16:40.761Z</guid>
      <pubDate>Sat, 10 Aug 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6451|2024-08-19T06:00:05.024Z -- unknown -- ai%20engine</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6451</link>
      <description>AI Engine &lt; 2.4.3 is susceptible to remote-code-execution (RCE) via Log Poisoning. The AI Engine WordPress plugin before 2.5.1 fails to validate the file extension of "logs_path", allowing Administrators to change log filetypes from .log to .php.</description>
      <guid isPermaLink="false">CVE-2024-6451|2024-08-19T06:00:05.024Z</guid>
      <pubDate>Mon, 19 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6843|2024-08-19T06:00:05.662Z -- unknown -- chatbot%20with%20chatgpt%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6843</link>
      <description>The Chatbot with ChatGPT WordPress plugin before 2.4.5 does not sanitise and escape user inputs, which could allow unauthenticated users to perform Stored Cross-Site Scripting attacks against admins</description>
      <guid isPermaLink="false">CVE-2024-6843|2024-08-19T06:00:05.662Z</guid>
      <pubDate>Mon, 19 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6330|2024-08-19T06:00:02.982Z -- unknown -- geo%20my%20wp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6330</link>
      <description>The GEO my WP WordPress plugin before 4.5.0.2 does not prevent unauthenticated attackers from including arbitrary files in PHP's execution context, which leads to Remote Code Execution.</description>
      <guid isPermaLink="false">CVE-2024-6330|2024-08-19T06:00:02.982Z</guid>
      <pubDate>Mon, 19 Aug 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6451|2024-08-19T17:10:21.720Z -- unknown -- ai%20engine</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6451</link>
      <description>AI Engine &lt; 2.4.3 is susceptible to remote-code-execution (RCE) via Log Poisoning. The AI Engine WordPress plugin before 2.5.1 fails to validate the file extension of "logs_path", allowing Administrators to change log filetypes from .log to .php.</description>
      <guid isPermaLink="false">CVE-2024-6451|2024-08-19T17:10:21.720Z</guid>
      <pubDate>Mon, 19 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6847|2024-08-20T18:50:30.236Z -- unknown -- chatbot%20with%20chatgpt%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6847</link>
      <description>The Chatbot with ChatGPT WordPress plugin before 2.4.5 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by unauthenticated users when submitting messages to the chatbot.</description>
      <guid isPermaLink="false">CVE-2024-6847|2024-08-20T18:50:30.236Z</guid>
      <pubDate>Tue, 20 Aug 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3590|2024-08-21T20:51:24.611Z -- unknown -- letterpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3590</link>
      <description>The LetterPress  WordPress plugin through 1.2.2 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks, such as delete arbitrary subscribers</description>
      <guid isPermaLink="false">CVE-2024-3590|2024-08-21T20:51:24.611Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1231|2024-08-22T19:14:49.596Z -- unknown -- cm%20download%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1231</link>
      <description>The CM Download Manager  WordPress plugin before 2.9.0 does not have CSRF checks in some places, which could allow attackers to make logged in admins unpublish downloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-1231|2024-08-22T19:14:49.596Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0559|2024-08-22T19:08:43.775Z -- unknown -- enhanced%20text%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0559</link>
      <description>The Enhanced Text Widget WordPress plugin before 1.6.6 does not validate and escape some of its Widget options before outputting them back in attributes, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0559|2024-08-22T19:08:43.775Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3282|2024-08-23T14:14:30.597Z -- unknown -- wp%20table%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3282</link>
      <description>The WP Table Builder  WordPress plugin through 1.5.0 does not sanitise and escape some of its Table data, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3282|2024-08-23T14:14:30.597Z</guid>
      <pubDate>Fri, 23 Aug 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6715|2024-08-26T14:12:50.015Z -- unknown -- ditty</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6715</link>
      <description>The Ditty  WordPress plugin before 3.1.46 re-introduced a previously fixed security issue (https://wpscan.com/vulnerability/80a9eb3a-2cb1-4844-9004-ba2554b2d46c/) in v3.1.39</description>
      <guid isPermaLink="false">CVE-2024-6715|2024-08-26T14:12:50.015Z</guid>
      <pubDate>Fri, 23 Aug 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1068|2024-08-26T18:17:29.237Z -- unknown -- 404%20solution</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1068</link>
      <description>The 404 Solution WordPress plugin before 2.35.8 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2024-1068|2024-08-26T18:17:29.237Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7085|2024-08-28T15:36:59.154Z -- unknown -- scalable%20vector%20graphics%20%28svg%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7085</link>
      <description>The Scalable Vector Graphics (SVG) WordPress plugin through 3.4 does not sanitize uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2023-7085|2024-08-28T15:36:59.154Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0973|2024-08-28T15:30:28.159Z -- unknown -- widget%20for%20social%20page%20feeds</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0973</link>
      <description>The Widget for Social Page Feeds WordPress plugin before 6.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0973|2024-08-28T15:30:28.159Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1273|2024-08-28T15:23:30.948Z -- unknown -- starbox</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1273</link>
      <description>The Starbox WordPress plugin before 3.5.0 does not sanitise and escape some parameters, which could allow users with a role as low as Contributor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1273|2024-08-28T15:23:30.948Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0780|2024-08-28T15:36:07.595Z -- unknown -- enjoy%20social%20feed%20plugin%20for%20wordpress%20website</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0780</link>
      <description>The Enjoy Social Feed plugin for WordPress website WordPress plugin through 6.2.2 does not have authorisation when resetting its database, allowing any authenticated users, such as subscriber to perform such action</description>
      <guid isPermaLink="false">CVE-2024-0780|2024-08-28T15:36:07.595Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1331|2024-08-28T15:25:07.477Z -- unknown -- team%20members</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1331</link>
      <description>The Team Members WordPress plugin before 5.3.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the author role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-1331|2024-08-28T15:25:07.477Z</guid>
      <pubDate>Mon, 18 Mar 2024 15:15:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0779|2024-08-28T15:36:30.412Z -- unknown -- enjoy%20social%20feed%20plugin%20for%20wordpress%20website</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0779</link>
      <description>The Enjoy Social Feed plugin for WordPress website WordPress plugin through 6.2.2 does not have authorisation and CSRF in various function hooked to admin_init, allowing unauthenticated users to call them and unlink arbitrary users Instagram Account for example</description>
      <guid isPermaLink="false">CVE-2024-0779|2024-08-28T15:36:30.412Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1316|2024-08-28T15:21:35.718Z -- unknown -- event%20tickets%20and%20registration</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1316</link>
      <description>The Event Tickets and Registration WordPress plugin before 5.8.1, Events Tickets Plus WordPress plugin before 5.9.1 does not prevent users with at least the contributor role from leaking the existence of certain events they shouldn't have access to. (e.g. draft, private, pending review, pw-protected, and trashed events).</description>
      <guid isPermaLink="false">CVE-2024-1316|2024-08-28T15:21:35.718Z</guid>
      <pubDate>Mon, 04 Mar 2024 21:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0973|2024-08-28T21:07:30.092Z -- unknown -- widget%20for%20social%20page%20feeds</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0973</link>
      <description>The Widget for Social Page Feeds WordPress plugin before 6.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0973|2024-08-28T21:07:30.092Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-7132|2024-08-29T06:00:03.395Z -- unknown -- page%20builder%20gutenberg%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-7132</link>
      <description>The Page Builder Gutenberg Blocks  WordPress plugin before 3.1.13 does not escape the content of post embed via one of its block, which could allow users with the capability to publish posts (editor and admin by default) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-7132|2024-08-29T06:00:03.395Z</guid>
      <pubDate>Thu, 29 Aug 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6927|2024-08-29T06:00:03.179Z -- unknown -- viral%20signup</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6927</link>
      <description>The Viral Signup  WordPress plugin through 2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6927|2024-08-29T06:00:03.179Z</guid>
      <pubDate>Thu, 29 Aug 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5417|2024-08-29T06:00:02.726Z -- unknown -- gutentor</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5417</link>
      <description>The Gutentor  WordPress plugin before 3.3.6 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5417|2024-08-29T06:00:02.726Z</guid>
      <pubDate>Thu, 29 Aug 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-7132|2024-08-29T13:57:12.080Z -- unknown -- page%20builder%20gutenberg%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-7132</link>
      <description>The Page Builder Gutenberg Blocks  WordPress plugin before 3.1.13 does not escape the content of post embed via one of its block, which could allow users with the capability to publish posts (editor and admin by default) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-7132|2024-08-29T13:57:12.080Z</guid>
      <pubDate>Thu, 29 Aug 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6927|2024-08-29T14:01:43.225Z -- unknown -- viral%20signup</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6927</link>
      <description>The Viral Signup  WordPress plugin through 2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6927|2024-08-29T14:01:43.225Z</guid>
      <pubDate>Thu, 29 Aug 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5417|2024-08-29T14:03:28.662Z -- unknown -- gutentor</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5417</link>
      <description>The Gutentor  WordPress plugin before 3.3.6 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5417|2024-08-29T14:03:28.662Z</guid>
      <pubDate>Thu, 29 Aug 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6460|2024-08-29T20:21:52.415Z -- unknown -- grow%20by%20tradedoubler</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6460</link>
      <description>The Grow by Tradedoubler  WordPress plugin through 2.0.21 is vulnerable to Local File Inclusion via the component parameter. This makes it possible for attackers to include and execute PHP files on the server, allowing the execution of any PHP code in those files.</description>
      <guid isPermaLink="false">CVE-2024-6460|2024-08-29T20:21:52.415Z</guid>
      <pubDate>Fri, 16 Aug 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6821|2024-08-30T07:48:40.648Z -- unknown -- error%20log%20viewer%20by%20bestwebsoft</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6821</link>
      <description>The Error Log Viewer by BestWebSoft WordPress plugin before 1.1.3 is affected by a Directory Listing issue, allowing users to read and download PHP logs without authorization</description>
      <guid isPermaLink="false">CVE-2023-6821|2024-08-30T07:48:40.648Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6257|2024-08-30T07:58:14.340Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6257</link>
      <description>The Inline Related Posts WordPress plugin before 3.6.0 is missing authorization in an AJAX action to ensure that users are allowed to see the content of the posts displayed, allowing any authenticated user, such as subscriber to retrieve the content of password protected posts</description>
      <guid isPermaLink="false">CVE-2023-6257|2024-08-30T07:58:14.340Z</guid>
      <pubDate>Thu, 11 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7164|2024-08-30T09:09:47.349Z -- unknown -- backwpup</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7164</link>
      <description>The BackWPup WordPress plugin before 4.0.4 does not prevent Directory Listing in its temporary backup folder, allowing unauthenticated attackers to download backups of a site's database.</description>
      <guid isPermaLink="false">CVE-2023-7164|2024-08-30T09:09:47.349Z</guid>
      <pubDate>Mon, 08 Apr 2024 17:28:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1076|2024-08-30T13:09:20.474Z -- unknown -- ssl%20zen</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1076</link>
      <description>The SSL Zen  WordPress plugin before 4.6.0 does not properly prevent directory listing of the private keys folder, as it only relies on the use of .htaccess to prevent visitors from accessing the site's generated private keys, which allows an attacker to read them if the site runs on a server who doesn't support .htaccess files, like NGINX.</description>
      <guid isPermaLink="false">CVE-2024-1076|2024-08-30T13:09:20.474Z</guid>
      <pubDate>Wed, 08 May 2024 06:00:02 +0000</pubDate>
    </item>
  </channel>
</rss>

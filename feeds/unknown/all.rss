<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Unknown -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/unknown/all.rss</link>
    <description>The latest CVEs for Unknown -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 11:19:56 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-4749|2024-08-03T01:48:40.195Z -- unknown -- posts%20list%20designer%20by%20category
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4749</link>
      <description>The Posts List Designer by Category WordPress plugin before 3.2 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4749|2024-08-03T01:48:40.195Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4717|2024-08-03T01:48:40.204Z -- unknown -- strong%20testimonials
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4717</link>
      <description>The Strong Testimonials WordPress plugin before 3.0.3 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4717|2024-08-03T01:48:40.204Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3694|2024-08-03T01:14:03.342Z -- unknown -- syncee
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3694</link>
      <description>The Syncee WordPress plugin before 1.0.10 leaks the administrator token that can be used to take over the administrator's account.</description>
      <guid isPermaLink="false">CVE-2022-3694|2024-08-03T01:14:03.342Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2071|2024-08-03T00:24:44.139Z -- unknown -- name%20directory
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2071</link>
      <description>The Name Directory WordPress plugin before 1.25.4 does not have CSRF check when importing names, and is also lacking sanitisation as well as escaping in some of the imported data, which could allow attackers to make a logged in admin import arbitrary names with XSS payloads in them.</description>
      <guid isPermaLink="false">CVE-2022-2071|2024-08-03T00:24:44.139Z</guid>
      <pubDate>Mon, 25 Jul 2022 12:46:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4544|2024-08-03T01:41:45.451Z -- unknown -- social%20media%20share%20buttons%20%7C%20mashshare
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4544</link>
      <description>The MashShare WordPress plugin before 3.8.7 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4544|2024-08-03T01:41:45.451Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4451|2024-08-03T01:41:44.692Z -- unknown -- social%20sharing%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4451</link>
      <description>The Social Sharing WordPress plugin before 3.3.45 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4451|2024-08-03T01:41:44.692Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2912|2024-08-03T00:52:59.857Z -- unknown -- craw%20data
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2912</link>
      <description>The Craw Data WordPress plugin through 1.0.0 does not implement nonce checks, which could allow attackers to make a logged in admin change the url value performing unwanted crawls on third-party sites (SSRF).</description>
      <guid isPermaLink="false">CVE-2022-2912|2024-08-03T00:52:59.857Z</guid>
      <pubDate>Fri, 16 Sep 2022 08:40:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4330|2024-08-03T01:34:50.170Z -- unknown -- wp%20attachments
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4330</link>
      <description>The WP Attachments WordPress plugin before 5.0.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4330|2024-08-03T01:34:50.170Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4061|2024-08-03T01:27:54.227Z -- unknown -- jobboardwp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4061</link>
      <description>The JobBoardWP WordPress plugin before 1.2.2 does not properly validate file names and types in its file upload functionalities, allowing unauthenticated users to upload arbitrary files such as PHP.</description>
      <guid isPermaLink="false">CVE-2022-4061|2024-08-03T01:27:54.227Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4306|2024-08-03T01:34:50.052Z -- unknown -- panda%20pods%20repeater%20field
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4306</link>
      <description>The Panda Pods Repeater Field WordPress plugin before 1.5.4 does not sanitize and escapes a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against a user having at least Contributor permission.</description>
      <guid isPermaLink="false">CVE-2022-4306|2024-08-03T01:34:50.052Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2981|2024-08-03T00:52:59.918Z -- unknown -- download%20monitor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2981</link>
      <description>The Download Monitor WordPress plugin before 4.5.98 does not ensure that files to be downloaded are inside the blog folders, and not sensitive, allowing high privilege users such as admin to download the wp-config.php or /etc/passwd even in an hardened environment or multisite setup.</description>
      <guid isPermaLink="false">CVE-2022-2981|2024-08-03T00:52:59.918Z</guid>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2559|2024-08-03T00:39:08.111Z -- unknown -- fluent%20support%20%E2%80%93%20wordpress%20helpdesk%20and%20customer%20support%20ticket%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2559</link>
      <description>The Fluent Support WordPress plugin before 1.5.8 does not properly sanitise, validate and escape various parameters before using them in an SQL statement, leading to an SQL Injection vulnerability exploitable by high privilege users</description>
      <guid isPermaLink="false">CVE-2022-2559|2024-08-03T00:39:08.111Z</guid>
      <pubDate>Mon, 29 Aug 2022 17:15:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4578|2024-08-03T01:41:45.671Z -- unknown -- video%20conferencing%20with%20zoom
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4578</link>
      <description>The Video Conferencing with Zoom WordPress plugin before 4.0.10 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4578|2024-08-03T01:41:45.671Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1645|2024-08-03T00:10:03.746Z -- unknown -- amazon%20link
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1645</link>
      <description>The Amazon Link WordPress plugin through 3.2.10 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-1645|2024-08-03T00:10:03.746Z</guid>
      <pubDate>Mon, 30 May 2022 08:36:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4465|2024-08-03T01:41:45.002Z -- unknown -- wp%20video%20lightbox
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4465</link>
      <description>The WP Video Lightbox WordPress plugin before 1.9.7 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2022-4465|2024-08-03T01:41:45.002Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2798|2024-08-03T00:46:04.536Z -- unknown -- affiliates%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2798</link>
      <description>The Affiliates Manager WordPress plugin before 2.9.14 does not validate and sanitise the affiliate data, which could allow users registering as affiliate to perform CSV injection attacks against an admin exporting the data</description>
      <guid isPermaLink="false">CVE-2022-2798|2024-08-03T00:46:04.536Z</guid>
      <pubDate>Fri, 16 Sep 2022 08:40:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2387|2024-08-03T00:39:06.976Z -- unknown -- easy%20digital%20downloads%20%E2%80%93%20simple%20ecommerce%20for%20selling%20digital%20files
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2387</link>
      <description>The Easy Digital Downloads WordPress plugin before 3.0 does not have CSRF check in place when deleting payment history, and does not ensure that the post to be deleted is actually a payment history. As a result, attackers could make a logged in admin delete arbitrary post via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-2387|2024-08-03T00:39:06.976Z</guid>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4675|2024-08-03T01:48:39.832Z -- unknown -- mongoose%20page%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4675</link>
      <description>The Mongoose Page Plugin WordPress plugin before 1.9.0 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4675|2024-08-03T01:48:39.832Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1957|2024-08-03T00:24:44.237Z -- unknown -- comment%20license
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1957</link>
      <description>The Comment License WordPress plugin before 1.4.0 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1957|2024-08-03T00:24:44.237Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:57:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1532|2024-08-03T00:10:02.923Z -- unknown -- themify%20%E2%80%93%20woocommerce%20product%20filter
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1532</link>
      <description>Themify WordPress plugin before 1.3.8 does not sanitise and escape the page parameter before outputting it back in an attribute in an admin page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-1532|2024-08-03T00:10:02.923Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:41:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1609|2024-08-03T00:10:03.591Z -- unknown -- school-management-pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1609</link>
      <description>The School Management WordPress plugin before 9.9.7 contains an obfuscated backdoor injected in it's license checking code that registers a REST API handler, allowing an unauthenticated attacker to execute arbitrary PHP code on the site.</description>
      <guid isPermaLink="false">CVE-2022-1609|2024-08-03T00:10:03.591Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:52:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2046|2024-08-03T00:24:43.957Z -- unknown -- directorist%20%E2%80%93%20wordpress%20business%20directory%20plugin%20with%20classified%20ads%20listings
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2046</link>
      <description>The Directorist WordPress plugin before 7.2.3 allows administrators to download other plugins from the same vendor directly to the site, but does not check the URL domain it gets the zip files from. This could allow administrators to run code on the server, which is a problem in multisite configurations.</description>
      <guid isPermaLink="false">CVE-2022-2046|2024-08-03T00:24:43.957Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:46:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3469|2024-08-03T01:14:01.402Z -- unknown -- wp%20attachments
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3469</link>
      <description>The WP Attachments WordPress plugin before 5.0.5 does not sanitize and escapes some of its settings, which could allow high-privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example, in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3469|2024-08-03T01:14:01.402Z</guid>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1685|2024-08-03T00:10:03.847Z -- unknown -- five%20minute%20webshop
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1685</link>
      <description>The Five Minute Webshop WordPress plugin through 1.3.2 does not properly validate and sanitise the orderby parameter before using it in a SQL statement via the Manage Products admin page, leading to an SQL Injection</description>
      <guid isPermaLink="false">CVE-2022-1685|2024-08-03T00:10:03.847Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-22734|2024-08-03T03:21:48.945Z -- unknown -- simple%20quotation
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-22734</link>
      <description>The Simple Quotation WordPress plugin through 1.3.2 does not have CSRF check when creating or editing a quote and does not sanitise and escape Quotes. As a result, attacker could make a logged in admin create or edit arbitrary quote, and put Cross-Site Scripting payloads in them</description>
      <guid isPermaLink="false">CVE-2022-22734|2024-08-03T03:21:48.945Z</guid>
      <pubDate>Mon, 14 Mar 2022 14:41:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4760|2024-08-03T01:48:40.480Z -- unknown -- oneclick%20chat%20to%20order
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4760</link>
      <description>The OneClick Chat to Order WordPress plugin before 1.0.4.2 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4760|2024-08-03T01:48:40.480Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2350|2024-08-03T00:32:09.701Z -- unknown -- disable%20user%20login
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2350</link>
      <description>The Disable User Login WordPress plugin through 1.0.1 does not have authorisation and CSRF checks when updating its settings, allowing unauthenticated attackers to block (or unblock) users at will.</description>
      <guid isPermaLink="false">CVE-2022-2350|2024-08-03T00:32:09.701Z</guid>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4459|2024-08-03T01:41:44.734Z -- unknown -- wp%20show%20posts
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4459</link>
      <description>The WP Show Posts WordPress plugin before 1.1.4 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4459|2024-08-03T01:41:44.734Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1956|2024-08-03T00:24:43.993Z -- unknown -- shortcut%20macros
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1956</link>
      <description>The Shortcut Macros WordPress plugin through 1.3 does not have authorisation and CSRF checks in place when updating its settings, which could allow any authenticated users, such as subscriber, to update them.</description>
      <guid isPermaLink="false">CVE-2022-1956|2024-08-03T00:24:43.993Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:56:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4497|2024-08-03T01:41:45.003Z -- unknown -- jetpack%20crm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4497</link>
      <description>The Jetpack CRM WordPress plugin before 5.5 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins</description>
      <guid isPermaLink="false">CVE-2022-4497|2024-08-03T01:41:45.003Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2367|2024-08-03T00:32:09.766Z -- unknown -- wsm%20downloader
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2367</link>
      <description>The WSM Downloader WordPress plugin through 1.4.0 allows only specific popular websites to download images/files from, this can be bypassed due to the lack of good "link" parameter validation</description>
      <guid isPermaLink="false">CVE-2022-2367|2024-08-03T00:32:09.766Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:47:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1831|2024-08-03T00:17:00.474Z -- unknown -- wplite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1831</link>
      <description>The WPlite WordPress plugin through 1.3.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1831|2024-08-03T00:17:00.474Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2351|2024-08-03T00:32:09.569Z -- unknown -- post%20smtp%20mailer%2Femail%20log
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2351</link>
      <description>The Post SMTP Mailer/Email Log WordPress plugin before 2.1.4 does not escape some of its settings before outputting them in the admins dashboard, allowing high privilege users to perform Cross-Site Scripting attacks against other users even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2351|2024-08-03T00:32:09.569Z</guid>
      <pubDate>Fri, 16 Sep 2022 08:40:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3494|2024-08-03T01:14:01.457Z -- unknown -- complianz%20%E2%80%93%20gdpr%2Fccpa%20cookie%20consent
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3494</link>
      <description>The Complianz WordPress plugin before 6.3.4, and Complianz Premium WordPress plugin before 6.3.6 allow a translators to inject arbitrary SQL through an unsanitized translation. SQL can be injected through an infected translation file, or by a user with a translator role through translation plugins such as Loco Translate or WPML.</description>
      <guid isPermaLink="false">CVE-2022-3494|2024-08-03T01:14:01.457Z</guid>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3720|2024-08-03T01:20:57.121Z -- unknown -- event%20monster
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3720</link>
      <description>The Event Monster WordPress plugin before 1.2.0 does not validate and escape some parameters before using them in SQL statements, which could lead to SQL Injection exploitable by high privilege users</description>
      <guid isPermaLink="false">CVE-2022-3720|2024-08-03T01:20:57.121Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3440|2024-08-03T01:07:06.588Z -- unknown -- rock%20convert
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3440</link>
      <description>The Rock Convert WordPress plugin before 2.11.0 does not sanitise and escape an URL before outputting it back in an attribute when a specific widget is present on a page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-3440|2024-08-03T01:07:06.588Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1777|2024-08-03T00:16:59.974Z -- unknown -- filr%20%E2%80%93%20secure%20document%20library
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1777</link>
      <description>The Filr WordPress plugin before 1.2.2.1 does not have authorisation check in two of its AJAX actions, allowing them to be called by any authenticated users, such as subscriber. They are are protected with a nonce, however the nonce is leaked on the dashboard. This could allow them to upload arbitrary HTML files as well as delete all files or arbitrary ones.</description>
      <guid isPermaLink="false">CVE-2022-1777|2024-08-03T00:16:59.974Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4837|2024-08-03T01:55:45.780Z -- unknown -- cpo%20companion
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4837</link>
      <description>The CPO Companion WordPress plugin before 1.1.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4837|2024-08-03T01:55:45.780Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2181|2024-08-03T00:32:08.747Z -- unknown -- advanced%20wordpress%20reset
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2181</link>
      <description>The Advanced WordPress Reset WordPress plugin before 1.6 does not escape some generated URLs before outputting them back in href attributes of admin dashboard pages, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2181|2024-08-03T00:32:08.747Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:49:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4236|2024-08-03T01:34:49.922Z -- unknown -- welcart%20e-commerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4236</link>
      <description>The Welcart e-Commerce WordPress plugin before 2.8.5 does not validate user input before using it to output the content of a file via an AJAX action available to any authenticated users, which could allow users with a role as low as subscriber to read arbitrary files on the server.</description>
      <guid isPermaLink="false">CVE-2022-4236|2024-08-03T01:34:49.922Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4512|2024-08-03T01:41:45.617Z -- unknown -- better%20font%20awesome
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4512</link>
      <description>The Better Font Awesome WordPress plugin before 2.0.4 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-4512|2024-08-03T01:41:45.617Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4124|2024-08-03T01:27:54.486Z -- unknown -- popup%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4124</link>
      <description>The Popup Manager WordPress plugin through 1.6.6 does not have authorisation and CSRF checks when deleting popups, which could allow unauthenticated users to delete them</description>
      <guid isPermaLink="false">CVE-2022-4124|2024-08-03T01:27:54.486Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1546|2024-08-03T00:10:02.946Z -- unknown -- woocommerce%20%E2%80%93%20product%20importer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1546</link>
      <description>The WooCommerce - Product Importer WordPress plugin through 1.5.2 does not sanitise and escape the imported data before outputting it back in the page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-1546|2024-08-03T00:10:02.946Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:55:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2538|2024-08-03T00:39:08.067Z -- unknown -- wp%20hide%20%26%20security%20enhancer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2538</link>
      <description>The WP Hide &amp; Security Enhancer WordPress plugin before 1.8 does not escape a parameter before outputting it back in an attribute of a backend page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2538|2024-08-03T00:39:08.067Z</guid>
      <pubDate>Mon, 29 Aug 2022 17:15:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3688|2024-08-03T01:14:03.351Z -- unknown -- wpqa%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3688</link>
      <description>The WPQA Builder WordPress plugin before 5.9 does not have CSRF check when following and unfollowing users, which could allow attackers to make logged in users perform such actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2022-3688|2024-08-03T01:14:03.351Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1527|2024-08-03T00:10:02.821Z -- unknown -- wp%202fa%20%E2%80%93%20two-factor%20authentication%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1527</link>
      <description>The WP 2FA WordPress plugin before 2.2.1 does not sanitise and escape a parameter before outputting it back in an admin page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-1527|2024-08-03T00:10:02.821Z</guid>
      <pubDate>Mon, 30 May 2022 08:35:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2413|2024-08-03T00:39:07.571Z -- unknown -- slide%20anything
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2413</link>
      <description>The Slide Anything WordPress plugin before 2.3.47 does not properly sanitize or escape the slide title before outputting it in the admin pages, allowing a logged in user with roles as low as Author to inject a javascript payload into the slide title even when the unfiltered_html capability is disabled.</description>
      <guid isPermaLink="false">CVE-2022-2413|2024-08-03T00:39:07.571Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:49:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4669|2024-08-03T01:48:39.837Z -- unknown -- page%20builder%3A%20live%20composer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4669</link>
      <description>The Page Builder: Live Composer WordPress plugin before 1.5.23 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-4669|2024-08-03T01:48:39.837Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4762|2024-08-03T01:48:40.287Z -- unknown -- materialis%20companion
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4762</link>
      <description>The Materialis Companion WordPress plugin before 1.3.40 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4762|2024-08-03T01:48:40.287Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4060|2024-08-03T01:27:54.404Z -- unknown -- user%20post%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4060</link>
      <description>The User Post Gallery WordPress plugin through 2.19 does not limit what callback functions can be called by users, making it possible to any visitors to run code on sites running it.</description>
      <guid isPermaLink="false">CVE-2022-4060|2024-08-03T01:27:54.404Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3578|2024-08-03T01:14:02.603Z -- unknown -- profilegrid%20%E2%80%93%20user%20profiles%2C%20memberships%2C%20groups%20and%20communities
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3578</link>
      <description>The ProfileGrid WordPress plugin before 5.1.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-3578|2024-08-03T01:14:02.603Z</guid>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2261|2024-08-03T00:32:09.674Z -- unknown -- wpide%20%E2%80%93%20file%20manager%20%26%20code%20editor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2261</link>
      <description>The WPIDE WordPress plugin before 3.0 does not sanitize and validate the filename parameter before using it in a require statement in the admin dashboard, leading to a Local File Inclusion issue.</description>
      <guid isPermaLink="false">CVE-2022-2261|2024-08-03T00:32:09.674Z</guid>
      <pubDate>Mon, 29 Aug 2022 17:15:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2891|2024-08-03T00:53:00.501Z -- unknown -- wp%202fa
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2891</link>
      <description>The WP 2FA WordPress plugin before 2.3.0 uses comparison operators that don't mitigate time-based attacks, which could be abused to leak information about the authentication codes being compared.</description>
      <guid isPermaLink="false">CVE-2022-2891|2024-08-03T00:53:00.501Z</guid>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4786|2024-08-03T01:48:40.432Z -- unknown -- video.js
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4786</link>
      <description>The Video.js WordPress plugin through 4.5.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4786|2024-08-03T01:48:40.432Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4120|2024-08-03T01:27:54.483Z -- unknown -- stop%20spammers%20security%20%7C%20block%20spam%20users%2C%20comments%2C%20forms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4120</link>
      <description>The Stop Spammers Security | Block Spam Users, Comments, Forms WordPress plugin before 2022.6 passes base64 encoded user input to the unserialize() PHP function when CAPTCHA are used as second challenge, which could lead to PHP Object injection if a plugin installed on the blog has a suitable gadget chain</description>
      <guid isPermaLink="false">CVE-2022-4120|2024-08-03T01:27:54.483Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3601|2024-08-03T01:14:03.204Z -- unknown -- image%20hover%20effects%20css3
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3601</link>
      <description>The Image Hover Effects Css3 WordPress plugin through 4.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3601|2024-08-03T01:14:03.204Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4165|2024-08-03T01:34:48.816Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4165</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the cg_order POST parameter before concatenating it to an SQL query in order-custom-fields-with-and-without-search.php. This may allow malicious users with at least author privilege to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4165|2024-08-03T01:34:48.816Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4372|2024-08-03T01:34:50.179Z -- unknown -- web%20invoice
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4372</link>
      <description>The Web Invoice WordPress plugin through 2.1.3 does not properly sanitize and escape a parameter before using it in a SQL statement, leading to a SQL Injection exploitable by high privilege users such as admin by default. However, depending on the plugin configuration, other users, such as subscriber could exploit this as well</description>
      <guid isPermaLink="false">CVE-2022-4372|2024-08-03T01:34:50.179Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2093|2024-08-03T00:24:44.260Z -- unknown -- wp%20duplicate%20page
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2093</link>
      <description>The WP Duplicate Page WordPress plugin before 1.3 does not sanitize and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2093|2024-08-03T00:24:44.260Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:57:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2340|2024-08-03T00:32:09.356Z -- unknown -- w-dalil
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2340</link>
      <description>The W-DALIL WordPress plugin through 2.0 does not sanitise and escape some of its fields, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2340|2024-08-03T00:32:09.356Z</guid>
      <pubDate>Mon, 25 Jul 2022 12:48:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4362|2024-08-03T01:34:50.159Z -- unknown -- popup%20maker
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4362</link>
      <description>The Popup Maker WordPress plugin before 1.16.9 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4362|2024-08-03T01:34:50.159Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4447|2024-08-03T01:41:44.594Z -- unknown -- fontsy
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4447</link>
      <description>The Fontsy WordPress plugin through 1.8.6 does not properly sanitize and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection.</description>
      <guid isPermaLink="false">CVE-2022-4447|2024-08-03T01:41:44.594Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3828|2024-08-03T01:20:58.378Z -- unknown -- video%20thumbnails
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3828</link>
      <description>The Video Thumbnails WordPress plugin through 2.12.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3828|2024-08-03T01:20:58.378Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1830|2024-08-03T00:17:00.377Z -- unknown -- amazon%20einzeltitellinks
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1830</link>
      <description>The Amazon Einzeltitellinks WordPress plugin through 1.3.3 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping</description>
      <guid isPermaLink="false">CVE-2022-1830|2024-08-03T00:17:00.377Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4321|2024-08-03T01:34:50.062Z -- unknown -- pdf%20generator%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4321</link>
      <description>The PDF Generator for WordPress plugin before 1.1.2 includes a vendored dompdf example file which is susceptible to Reflected Cross-Site Scripting and could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2022-4321|2024-08-03T01:34:50.062Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3750|2024-08-03T01:20:58.378Z -- unknown -- ask%20me
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3750</link>
      <description>The  has a CSRF vulnerability that allows the deletion of a post without using a nonce or prompting for confirmation.</description>
      <guid isPermaLink="false">CVE-2022-3750|2024-08-03T01:20:58.378Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4357|2024-08-03T01:34:50.165Z -- unknown -- letsrecover
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4357</link>
      <description>The LetsRecover WordPress plugin before 1.2.0 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection.</description>
      <guid isPermaLink="false">CVE-2022-4357|2024-08-03T01:34:50.165Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4265|2024-08-03T01:34:49.903Z -- unknown -- replyable
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4265</link>
      <description>The Replyable WordPress plugin before 2.2.10 does not validate the class name submitted by the request when instantiating an object in the prompt_dismiss_notice action and also lacks CSRF check in the related action. This could allow any authenticated users, such as subscriber to perform Object Injection attacks. The attack could also be done via a CSRF vector against any authenticated user</description>
      <guid isPermaLink="false">CVE-2022-4265|2024-08-03T01:34:49.903Z</guid>
      <pubDate>Mon, 06 Mar 2023 13:33:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3823|2024-08-03T01:20:58.795Z -- unknown -- beautiful%20cookie%20consent%20banner
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3823</link>
      <description>The Beautiful Cookie Consent Banner WordPress plugin before 2.9.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3823|2024-08-03T01:20:58.795Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3961|2024-08-03T01:27:53.132Z -- unknown -- directorist
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3961</link>
      <description>The Directorist WordPress plugin before 7.4.4 does not prevent users with low privileges (like subscribers) from accessing sensitive system information.</description>
      <guid isPermaLink="false">CVE-2022-3961|2024-08-03T01:27:53.132Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1601|2024-08-03T00:10:03.701Z -- unknown -- user%20access%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1601</link>
      <description>The User Access Manager WordPress plugin before 2.2.18 prioritizes getting a visitor's IP from certain HTTP headers over PHP's REMOTE_ADDR, which makes it possible for attackers to access restricted content in certain situations.</description>
      <guid isPermaLink="false">CVE-2022-1601|2024-08-03T00:10:03.701Z</guid>
      <pubDate>Wed, 30 Aug 2023 14:22:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1557|2024-08-03T00:10:02.962Z -- unknown -- uleak%20security%20%26%20monitoring%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1557</link>
      <description>The ULeak Security &amp; Monitoring WordPress plugin through 1.2.3 does not have authorisation and CSRF checks when updating its settings, and is also lacking sanitisation as well as escaping in some of them, which could allow any authenticated users such as subscriber to perform Stored Cross-Site Scripting attacks against admins viewing the settings</description>
      <guid isPermaLink="false">CVE-2022-1557|2024-08-03T00:10:02.962Z</guid>
      <pubDate>Mon, 16 May 2022 14:31:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2080|2024-08-03T00:24:44.176Z -- unknown -- sensei%20lms%20%E2%80%93%20online%20courses%2C%20quizzes%2C%20%26%20learning
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2080</link>
      <description>The Sensei LMS WordPress plugin before 4.5.2 does not ensure that the sender of a private message is either the teacher or the original sender, allowing any authenticated user to send messages to arbitrary private conversation via a IDOR attack. Note: Attackers are not able to see responses/messages between the teacher and student</description>
      <guid isPermaLink="false">CVE-2022-2080|2024-08-03T00:24:44.176Z</guid>
      <pubDate>Mon, 29 Aug 2022 14:40:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-25812|2024-08-03T04:49:43.741Z -- unknown -- transposh%20wordpress%20translation
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-25812</link>
      <description>The Transposh WordPress Translation WordPress plugin before 1.0.8 does not validate its debug settings, which could allow allowing high privilege users such as admin to perform RCE</description>
      <guid isPermaLink="false">CVE-2022-25812|2024-08-03T04:49:43.741Z</guid>
      <pubDate>Mon, 22 Aug 2022 14:59:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1603|2024-08-03T00:10:03.703Z -- unknown -- mail%20subscribe%20list
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1603</link>
      <description>The Mail Subscribe List WordPress plugin before 2.1.4 does not have CSRF check in place when deleting subscribed users, which could allow attackers to make a logged in admin perform such action and delete arbitrary users from the subscribed list</description>
      <guid isPermaLink="false">CVE-2022-1603|2024-08-03T00:10:03.703Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:25:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1995|2024-08-03T00:24:43.913Z -- unknown -- malware%20scanner
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1995</link>
      <description>The Malware Scanner WordPress plugin before 4.5.2 does not sanitise and escape some of its settings, leading to malicious users with administrator privileges to store malicious Javascript code leading to Cross-Site Scripting attacks when unfiltered_html is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-1995|2024-08-03T00:24:43.913Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:59:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1591|2024-08-03T00:10:03.505Z -- unknown -- wordpress%20ping%20optimizer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1591</link>
      <description>The WordPress Ping Optimizer WordPress plugin before 2.35.1.3.0 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1591|2024-08-03T00:10:03.505Z</guid>
      <pubDate>Mon, 19 Sep 2022 14:00:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2449|2024-08-03T00:39:07.578Z -- unknown -- resmush.it%20%3A%20the%20only%20free%20image%20optimizer%20%26%20compress%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2449</link>
      <description>The reSmush.it : the only free Image Optimizer &amp; compress plugin WordPress plugin before 0.4.4 does not perform CSRF checks for any of its AJAX actions, allowing an attackers to trick logged in users to perform various actions on their behalf on the site.</description>
      <guid isPermaLink="false">CVE-2022-2449|2024-08-03T00:39:07.578Z</guid>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1558|2024-08-03T00:10:02.951Z -- unknown -- curtain
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1558</link>
      <description>The Curtain WordPress plugin through 1.0.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1558|2024-08-03T00:10:02.951Z</guid>
      <pubDate>Mon, 23 May 2022 07:15:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4507|2024-08-03T01:41:45.615Z -- unknown -- real%20cookie%20banner%3A%20gdpr%20%28dsgvo%29%20%26%20eprivacy%20cookie%20consent
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4507</link>
      <description>The Real Cookie Banner WordPress plugin before 3.4.10 does not validate and escapes some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as a contributor to perform Stored Cross-Site Scripting attacks against logged-in admins.</description>
      <guid isPermaLink="false">CVE-2022-4507|2024-08-03T01:41:45.615Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4682|2024-08-03T01:48:39.936Z -- unknown -- lightbox%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4682</link>
      <description>The Lightbox Gallery WordPress plugin before 0.9.5 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4682|2024-08-03T01:48:39.936Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4580|2024-08-03T01:41:45.676Z -- unknown -- twenty20%20image%20before-after
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4580</link>
      <description>The Twenty20 Image Before-After WordPress plugin through 1.5.9 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4580|2024-08-03T01:41:45.676Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3209|2024-08-03T01:00:10.808Z -- unknown -- soledad
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3209</link>
      <description>The soledad WordPress theme before 8.2.5 does not sanitise the {id,datafilter[type],...} parameters in its penci_more_slist_post_ajax AJAX action, leading to a Reflected Cross-Site Scripting (XSS) vulnerability.</description>
      <guid isPermaLink="false">CVE-2022-3209|2024-08-03T01:00:10.808Z</guid>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1556|2024-08-03T00:10:03.475Z -- unknown -- stafflist
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1556</link>
      <description>The StaffList WordPress plugin before 3.1.5 does not properly sanitise and escape a parameter before using it in a SQL statement when searching for Staff in the admin dashboard, leading to an SQL Injection</description>
      <guid isPermaLink="false">CVE-2022-1556|2024-08-03T00:10:03.475Z</guid>
      <pubDate>Mon, 30 May 2022 08:35:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3282|2024-08-03T01:07:06.479Z -- unknown -- drag%20and%20drop%20multiple%20file%20upload%20%E2%80%93%20contact%20form%207
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3282</link>
      <description>The Drag and Drop Multiple File Upload WordPress plugin before 1.3.6.5 does not properly check for the upload size limit set in forms, taking the value from user input sent when submitting the form. As a result, attackers could control the file length limit and bypass the limit set by admins in the contact form.</description>
      <guid isPermaLink="false">CVE-2022-3282|2024-08-03T01:07:06.479Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3921|2024-08-03T01:20:59.118Z -- unknown -- listingo
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3921</link>
      <description>The Listingo WordPress theme before 3.2.7 does not validate files to be uploaded via an AJAX action available to unauthenticated users, which could allow them to upload arbitrary files and lead to RCE</description>
      <guid isPermaLink="false">CVE-2022-3921|2024-08-03T01:20:59.118Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:57:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1614|2024-08-03T00:10:03.664Z -- unknown -- wp-email
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1614</link>
      <description>The WP-EMail WordPress plugin before 2.69.0 prioritizes getting a visitor's IP from certain HTTP headers over PHP's REMOTE_ADDR, which makes it possible to bypass IP-based anti-spamming restrictions.</description>
      <guid isPermaLink="false">CVE-2022-1614|2024-08-03T00:10:03.664Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:25:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4764|2024-08-03T01:48:40.421Z -- unknown -- simple%20file%20downloader
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4764</link>
      <description>The Simple File Downloader WordPress plugin through 1.0.4 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4764|2024-08-03T01:48:40.421Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1617|2024-08-03T00:10:03.762Z -- unknown -- wp-invoice
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1617</link>
      <description>The WP-Invoice WordPress plugin through 4.3.1 does not have CSRF check in place when updating its settings, and is lacking sanitisation as well as escaping in some of them, allowing attacker to make a logged in admin change them and add XSS payload in them</description>
      <guid isPermaLink="false">CVE-2022-1617|2024-08-03T00:10:03.762Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:52:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4226|2024-08-03T01:34:49.844Z -- unknown -- simple%20basic%20contact%20form
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4226</link>
      <description>The Simple Basic Contact Form WordPress plugin before 20221201 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4226|2024-08-03T01:34:49.844Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4309|2024-08-03T01:34:50.143Z -- unknown -- subscribe2
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4309</link>
      <description>The Subscribe2 WordPress plugin before 10.38 does not have CSRF check when deleting users, which could allow attackers to make a logged in admin delete arbitrary users by knowing their email via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2022-4309|2024-08-03T01:34:50.143Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3933|2024-08-03T01:27:53.029Z -- unknown -- essential%20real%20estate
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3933</link>
      <description>The Essential Real Estate WordPress plugin before 3.9.6 does not sanitize and escapes some parameters, which could allow users with a role as low as Admin to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-3933|2024-08-03T01:27:53.029Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3021|2024-08-03T00:52:59.860Z -- unknown -- slickr%20flickr
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3021</link>
      <description>The Slickr Flickr WordPress plugin through 2.8.1 does not sanitise and escape its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-3021|2024-08-03T00:52:59.860Z</guid>
      <pubDate>Mon, 19 Sep 2022 14:01:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2654|2024-08-03T00:46:03.475Z -- unknown -- classified%20listing%20%E2%80%93%20classified%20ads%20%26%20business%20directory%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2654</link>
      <description>The Classima WordPress theme before 2.1.11 and some of its required plugins (Classified Listing before 2.2.14, Classified Listing Pro before 2.0.20, Classified Listing Store &amp; Membership before 1.4.20 and Classima Core before 1.10) do not escape a parameter before outputting it back in attributes, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2654|2024-08-03T00:46:03.475Z</guid>
      <pubDate>Fri, 16 Sep 2022 08:40:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4158|2024-08-03T01:27:54.533Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4158</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the cg_Fields POST parameter before concatenating it to an SQL query in users-registry-check-registering-and-login.php. This may allow malicious visitors to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4158|2024-08-03T01:27:54.533Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3839|2024-08-03T01:20:58.796Z -- unknown -- analytics%20for%20wp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3839</link>
      <description>The Analytics for WP WordPress plugin through 1.5.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3839|2024-08-03T01:20:58.796Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2709|2024-08-03T00:46:03.629Z -- unknown -- float%20to%20top%20button
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2709</link>
      <description>The Float to Top Button WordPress plugin through 2.3.6 does not escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2709|2024-08-03T00:46:03.629Z</guid>
      <pubDate>Mon, 19 Sep 2022 14:00:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4356|2024-08-03T01:34:50.137Z -- unknown -- letsrecover
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4356</link>
      <description>The LetsRecover WordPress plugin before 1.2.0 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2022-4356|2024-08-03T01:34:50.137Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2638|2024-08-03T00:46:03.231Z -- unknown -- export%20all%20urls
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2638</link>
      <description>The Export All URLs WordPress plugin before 4.4 does not validate the path of the file to be removed on the system which is supposed to be the CSV file. This could allow high privilege users to delete arbitrary file from the server</description>
      <guid isPermaLink="false">CVE-2022-2638|2024-08-03T00:46:03.231Z</guid>
      <pubDate>Mon, 29 Aug 2022 17:15:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2460|2024-08-03T00:39:07.706Z -- unknown -- wpdating
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2460</link>
      <description>The WPDating WordPress plugin before 7.4.0 does not properly escape user input before concatenating it to certain SQL queries, leading to multiple SQL injection vulnerabilities exploitable by unauthenticated users</description>
      <guid isPermaLink="false">CVE-2022-2460|2024-08-03T00:39:07.706Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:51:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4835|2024-08-03T01:55:45.831Z -- unknown -- social%20sharing%20toolkit
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4835</link>
      <description>The Social Sharing Toolkit WordPress plugin through 2.6 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4835|2024-08-03T01:55:45.831Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4653|2024-08-03T01:48:38.872Z -- unknown -- greenshift
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4653</link>
      <description>The Greenshift WordPress plugin before 4.8.9 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4653|2024-08-03T01:48:38.872Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4153|2024-08-03T01:27:54.477Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4153</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the upload[] POST parameter before concatenating it to an SQL query in get-data-create-upload-v10.php. This may allow malicious users with at least author privilege to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4153|2024-08-03T01:27:54.477Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:27:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2361|2024-08-03T00:32:09.618Z -- unknown -- wp%20social%20chat%20%E2%80%93%20click%20to%20chat%20app
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2361</link>
      <description>The WP Social Chat WordPress plugin before 6.0.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-2361|2024-08-03T00:32:09.618Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:01:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1589|2024-08-03T00:10:03.626Z -- unknown -- change%20wp-admin%20login
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1589</link>
      <description>The Change wp-admin login WordPress plugin before 1.1.0 does not properly check for authorisation and is also missing CSRF check when updating its settings, which could allow unauthenticated users to change the settings. The attacked could also be performed via a CSRF vector</description>
      <guid isPermaLink="false">CVE-2022-1589|2024-08-03T00:10:03.626Z</guid>
      <pubDate>Mon, 30 May 2022 08:36:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3420|2024-08-03T01:07:06.587Z -- unknown -- official%20integration%20for%20billingo
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3420</link>
      <description>The Official Integration for Billingo WordPress plugin before 3.4.0 does not sanitise and escape some of its settings, which could allow high privilege users with a role as low as Shop Manager to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-3420|2024-08-03T01:07:06.587Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4781|2024-08-03T01:48:40.315Z -- unknown -- accordion%20shortcodes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4781</link>
      <description>The Accordion Shortcodes WordPress plugin through 2.4.2 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4781|2024-08-03T01:48:40.315Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2240|2024-08-03T00:32:09.260Z -- unknown -- request%20a%20quote
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2240</link>
      <description>The Request a Quote WordPress plugin through 2.3.7 does not validate uploaded CSV files, allowing unauthenticated users to attach a malicious CSV file to a quote, which could lead to a CSV injection once an admin download and open it</description>
      <guid isPermaLink="false">CVE-2022-2240|2024-08-03T00:32:09.260Z</guid>
      <pubDate>Mon, 25 Jul 2022 12:47:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2241|2024-08-03T00:32:09.268Z -- unknown -- featured%20image%20from%20url%20%28fifu%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2241</link>
      <description>The Featured Image from URL (FIFU) WordPress plugin before 4.0.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack. Furthermore, due to the lack of validation, sanitisation and escaping in some of them, it could also lead to Stored XSS issues</description>
      <guid isPermaLink="false">CVE-2022-2241|2024-08-03T00:32:09.268Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:50:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2089|2024-08-03T00:24:44.232Z -- unknown -- bold%20page%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2089</link>
      <description>The Bold Page Builder WordPress plugin before 4.3.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2089|2024-08-03T00:24:44.232Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:57:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4156|2024-08-03T01:27:54.540Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4156</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the user_id POST parameter before concatenating it to an SQL query in ajax-functions-backend.php. This may allow malicious users with at least author privilege to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4156|2024-08-03T01:27:54.540Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4097|2024-08-03T01:27:54.385Z -- unknown -- all-in-one%20security%20%28aios%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4097</link>
      <description>The All-In-One Security (AIOS) WordPress plugin before 5.0.8 is susceptible to IP Spoofing attacks, which can lead to bypassed security features (like IP blocks, rate limiting, brute force protection, and more).</description>
      <guid isPermaLink="false">CVE-2022-4097|2024-08-03T01:27:54.385Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2426|2024-08-03T00:39:07.036Z -- unknown -- thinkific%20uploader
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2426</link>
      <description>The Thinkific Uploader WordPress plugin through 1.0.0 does not sanitise and escape its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks against other administrators.</description>
      <guid isPermaLink="false">CVE-2022-2426|2024-08-03T00:39:07.036Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:51:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4114|2024-08-03T01:27:54.443Z -- unknown -- superio
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4114</link>
      <description>The Superio WordPress theme does not sanitise and escape some parameters, which could allow users with a role as low as a subscriber to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-4114|2024-08-03T01:27:54.443Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3987|2024-08-03T01:27:54.167Z -- unknown -- responsive%20lightbox2
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3987</link>
      <description>The Responsive Lightbox2 WordPress plugin before 1.0.4 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-3987|2024-08-03T01:27:54.167Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3300|2024-08-03T01:07:06.454Z -- unknown -- form%20maker%20by%2010web%20%E2%80%93%20mobile-friendly%20drag%20%26%20drop%20contact%20form%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3300</link>
      <description>The Form Maker by 10Web WordPress plugin before 1.15.6 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2022-3300|2024-08-03T01:07:06.454Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2144|2024-08-03T00:24:44.277Z -- unknown -- jquery%20validation%20for%20contact%20form%207
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2144</link>
      <description>The Jquery Validation For Contact Form 7 WordPress plugin before 5.3 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change Blog options like default_role, users_can_register via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-2144|2024-08-03T00:24:44.277Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:36:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1598|2024-08-03T00:10:03.660Z -- unknown -- wpqa%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1598</link>
      <description>The WPQA Builder WordPress plugin before 5.5 which is a companion to the Discy and Himer , lacks authentication in a REST API endpoint, allowing unauthenticated users to discover private questions sent between users on the site.</description>
      <guid isPermaLink="false">CVE-2022-1598|2024-08-03T00:10:03.660Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4374|2024-08-03T01:41:44.352Z -- unknown -- bg%20bible%20references
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4374</link>
      <description>The Bg Bible References WordPress plugin through 3.8.14 does not sanitize and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2022-4374|2024-08-03T01:41:44.352Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4157|2024-08-03T01:27:54.526Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4157</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the cg_option_id POST parameter before concatenating it to an SQL query in export-votes-all.php. This may allow malicious users with administrator privileges (i.e. on multisite WordPress configurations) to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4157|2024-08-03T01:27:54.526Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:27:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3243|2024-08-03T01:00:10.864Z -- unknown -- import%20all%20xml%2C%20csv%20%26%20txt%20into%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3243</link>
      <description>The Import all XML, CSV &amp; TXT WordPress plugin before 6.5.8 does not properly sanitise and escape imported data before using them back SQL statements, leading to SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2022-3243|2024-08-03T01:00:10.864Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1541|2024-08-03T00:10:02.951Z -- unknown -- video%20slider%20%E2%80%93%20slider%20carousel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1541</link>
      <description>The Video Slider WordPress plugin before 1.4.8 does not sanitize or escape some of its video settings, which could allow high-privileged users to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1541|2024-08-03T00:10:02.951Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1597|2024-08-03T00:10:03.533Z -- unknown -- wpqa%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1597</link>
      <description>The WPQA Builder WordPress plugin before 5.4, used as a companion for the Discy and Himer , does not sanitise and escape a parameter on its reset password form which makes it possible to perform Reflected Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-1597|2024-08-03T00:10:03.533Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4481|2024-08-03T01:41:44.704Z -- unknown -- mesmerize%20companion
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4481</link>
      <description>The Mesmerize Companion WordPress plugin before 1.6.135 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4481|2024-08-03T01:41:44.704Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3360|2024-08-03T01:07:06.555Z -- unknown -- learnpress%20%E2%80%93%20wordpress%20lms%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3360</link>
      <description>The LearnPress WordPress plugin before 4.1.7.2 unserialises user input in a REST API endpoint available to unauthenticated users, which could lead to PHP Object Injection when a suitable gadget is present, leadint to remote code execution (RCE). To successfully exploit this vulnerability attackers must have knowledge of the site secrets, allowing them to generate a valid hash via the wp_hash() function.</description>
      <guid isPermaLink="false">CVE-2022-3360|2024-08-03T01:07:06.555Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1559|2024-08-03T00:10:03.423Z -- unknown -- clipr
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1559</link>
      <description>The Clipr WordPress plugin through 1.2.3 does not sanitise and escape its API Key settings before outputting it in an attribute, leading to a Stored Cross-Site Scripting issue even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1559|2024-08-03T00:10:03.423Z</guid>
      <pubDate>Mon, 16 May 2022 14:31:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1759|2024-08-03T00:16:59.833Z -- unknown -- rb%20internal%20links
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1759</link>
      <description>The RB Internal Links WordPress plugin through 2.0.16 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack, as well as perform Stored Cross-Site Scripting attacks due to the lack of sanitisation and escaping</description>
      <guid isPermaLink="false">CVE-2022-1759|2024-08-03T00:16:59.833Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4352|2024-08-03T01:34:50.159Z -- unknown -- qe%20seo%20handyman
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4352</link>
      <description>The Qe SEO Handyman WordPress plugin through 1.0 does not properly sanitize and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2022-4352|2024-08-03T01:34:50.159Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4010|2024-08-03T01:27:54.128Z -- unknown -- image%20hover%20effects
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4010</link>
      <description>The Image Hover Effects WordPress plugin before 5.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4010|2024-08-03T01:27:54.128Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3425|2024-08-03T01:07:06.568Z -- unknown -- analyticator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3425</link>
      <description>The Analyticator WordPress plugin before 6.5.6 unserializes user input provided via the settings, which could allow high-privilege users such as admin to perform PHP Object Injection when a suitable gadget is present.</description>
      <guid isPermaLink="false">CVE-2022-3425|2024-08-03T01:07:06.568Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4476|2024-08-03T01:41:45.000Z -- unknown -- download%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4476</link>
      <description>The Download Manager WordPress plugin before 3.2.62 does not validate and escapes some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as a contributor to perform Stored Cross-Site Scripting attacks against logged-in admins.</description>
      <guid isPermaLink="false">CVE-2022-4476|2024-08-03T01:41:45.000Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2543|2024-08-03T00:39:07.976Z -- unknown -- visual%20portfolio%2C%20photo%20gallery%20%26%20post%20grid
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2543</link>
      <description>The Visual Portfolio, Photo Gallery &amp; Post Grid WordPress plugin before 2.18.0 does not have proper authorisation checks in some of its REST endpoints, allowing unauthenticated users to call them and inject arbitrary CSS in arbitrary saved layouts</description>
      <guid isPermaLink="false">CVE-2022-2543|2024-08-03T00:39:07.976Z</guid>
      <pubDate>Mon, 05 Sep 2022 12:35:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4370|2024-08-03T01:34:50.125Z -- unknown -- multimedial%20images
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4370</link>
      <description>The multimedial images WordPress plugin through 1.0b does not properly sanitize and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as Admin.</description>
      <guid isPermaLink="false">CVE-2022-4370|2024-08-03T01:34:50.125Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2383|2024-08-03T00:39:06.347Z -- unknown -- feed%20them%20social%20%E2%80%93%20for%20twitter%20feed%2C%20youtube%20and%20more
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2383</link>
      <description>The Feed Them Social WordPress plugin before 3.0.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2383|2024-08-03T00:39:06.347Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:02:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3834|2024-08-03T01:20:58.477Z -- unknown -- google%20forms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3834</link>
      <description>The Google Forms WordPress plugin through 0.95 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3834|2024-08-03T01:20:58.477Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1787|2024-08-03T00:16:59.877Z -- unknown -- sideblog%20wordpress%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1787</link>
      <description>The Sideblog WordPress plugin through 6.0 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping</description>
      <guid isPermaLink="false">CVE-2022-1787|2024-08-03T00:16:59.877Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1686|2024-08-03T00:10:03.913Z -- unknown -- five%20minute%20webshop
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1686</link>
      <description>The Five Minute Webshop WordPress plugin through 1.3.2 does not sanitise and escape the id parameter before using it in a SQL statement when editing a product via the admin dashboard, leading to an SQL Injection</description>
      <guid isPermaLink="false">CVE-2022-1686|2024-08-03T00:10:03.913Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3119|2024-08-03T01:00:10.532Z -- unknown -- oauth%20client%20single%20sign%20on%20for%20wordpress%20%28%20oauth%202.0%20sso%20%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3119</link>
      <description>The OAuth client Single Sign On WordPress plugin before 3.0.4 does not have authorisation and CSRF when updating its settings, which could allow unauthenticated attackers to update them and change the OAuth endpoints to ones they controls, allowing them to then be authenticated as admin if they know the correct email address</description>
      <guid isPermaLink="false">CVE-2022-3119|2024-08-03T01:00:10.532Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3605|2024-08-03T01:14:02.026Z -- unknown -- wp%20csv%20exporter
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3605</link>
      <description>The WP CSV Exporter WordPress plugin before 1.3.7 does not properly escape the fields when exporting data as CSV, leading to a CSV injection vulnerability.</description>
      <guid isPermaLink="false">CVE-2022-3605|2024-08-03T01:14:02.026Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3739|2024-08-03T01:20:57.523Z -- unknown -- wp%20best%20quiz
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3739</link>
      <description>The WP Best Quiz WordPress plugin through 1.0 does not sanitize and escape some parameters, which could allow users with a role as low as Author to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-3739|2024-08-03T01:20:57.523Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:53:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1691|2024-08-03T00:10:03.803Z -- unknown -- realty%20workstation
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1691</link>
      <description>The Realty Workstation WordPress plugin before 1.0.15 does not sanitise and escape the trans_edit parameter before using it in a SQL statement when an agent edit a transaction, leading to an SQL injection</description>
      <guid isPermaLink="false">CVE-2022-1691|2024-08-03T00:10:03.803Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4449|2024-08-03T01:41:44.457Z -- unknown -- page%20scroll%20to%20id
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4449</link>
      <description>The Page scroll to id WordPress plugin before 1.7.6 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4449|2024-08-03T01:41:44.457Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4298|2024-08-03T01:34:50.063Z -- unknown -- wholesale%20market
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4298</link>
      <description>The Wholesale Market WordPress plugin before 2.2.1 does not have authorisation check, as well as does not validate user input used to generate system path, allowing unauthenticated attackers to download arbitrary file from the server.</description>
      <guid isPermaLink="false">CVE-2022-4298|2024-08-03T01:34:50.063Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3853|2024-08-03T01:20:58.385Z -- unknown -- supra%20csv
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3853</link>
      <description>Cross-site Scripting (XSS) is a client-side code injection attack. The attacker aims to execute malicious scripts in a web browser of the victim by including malicious code in a legitimate web page or web application.</description>
      <guid isPermaLink="false">CVE-2022-3853|2024-08-03T01:20:58.385Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4547|2024-08-03T01:41:45.616Z -- unknown -- conditional%20payment%20methods%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4547</link>
      <description>The Conditional Payment Methods for WooCommerce WordPress plugin through 1.0 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by [high privilege users such as admin|users with a role as low as admin.</description>
      <guid isPermaLink="false">CVE-2022-4547|2024-08-03T01:41:45.616Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2222|2024-08-03T00:32:08.748Z -- unknown -- download%20monitor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2222</link>
      <description>The Download Monitor WordPress plugin before 4.5.91 does not ensure that files to be downloaded are inside the blog folders, and not sensitive, allowing high privilege users such as admin to download the wp-config.php or /etc/passwd even in an hardened environment or multisite setup.</description>
      <guid isPermaLink="false">CVE-2022-2222|2024-08-03T00:32:08.748Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:37:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4043|2024-08-03T01:27:54.012Z -- unknown -- wp%20custom%20admin%20interface
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4043</link>
      <description>The WP Custom Admin Interface WordPress plugin before 7.29 unserialize user input provided via the settings, which could allow high privilege users such as admin to perform PHP Object Injection when a suitable gadget is present.</description>
      <guid isPermaLink="false">CVE-2022-4043|2024-08-03T01:27:54.012Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4627|2024-08-03T01:48:38.915Z -- unknown -- shiftnav
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4627</link>
      <description>The ShiftNav WordPress plugin before 1.7.2 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4627|2024-08-03T01:48:38.915Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3769|2024-08-03T01:20:58.299Z -- unknown -- owm%20weather
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3769</link>
      <description>The OWM Weather WordPress plugin before 5.6.9 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as contributor</description>
      <guid isPermaLink="false">CVE-2022-3769|2024-08-03T01:20:58.299Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1583|2024-08-03T00:10:03.760Z -- unknown -- external%20links%20in%20new%20window%20%2F%20new%20tab
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1583</link>
      <description>The External Links in New Window / New Tab WordPress plugin before 1.43 does not ensure window.opener is set to "null" when links to external sites are clicked, which may enable tabnabbing attacks to occur.</description>
      <guid isPermaLink="false">CVE-2022-1583|2024-08-03T00:10:03.760Z</guid>
      <pubDate>Mon, 30 May 2022 08:36:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3822|2024-08-03T01:20:58.372Z -- unknown -- donations%20via%20paypal
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3822</link>
      <description>The Donations via PayPal WordPress plugin before 1.9.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3822|2024-08-03T01:20:58.372Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4392|2024-08-03T01:41:44.427Z -- unknown -- ipanorama%20360%20wordpress%20virtual%20tour%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4392</link>
      <description>The iPanorama 360 WordPress Virtual Tour Builder plugin through 1.6.29 does not sanitise and escape some of its settings, which could allow users such as contributor+ to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-4392|2024-08-03T01:41:44.427Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4831|2024-08-03T01:55:44.991Z -- unknown -- custom%20user%20profile%20fields%20for%20user%20registration%20%26%20member%20frontend%20profiles%20with%20paid%20memberships%20pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4831</link>
      <description>The Custom User Profile Fields for User Registration WordPress plugin before 1.8.1 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4831|2024-08-03T01:55:44.991Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1994|2024-08-03T00:24:43.944Z -- unknown -- login%20with%20otp%20over%20sms%2C%20email%2C%20whatsapp%20and%20google%20authenticator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1994</link>
      <description>The Login With OTP Over SMS, Email, WhatsApp and Google Authenticator WordPress plugin before 1.0.8 does not escape its settings, allowing high privilege users such as admin to perform Cross-Site Scripting attacks even when the unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1994|2024-08-03T00:24:43.944Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:59:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4385|2024-08-03T01:41:44.445Z -- unknown -- intuitive%20custom%20post%20order
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4385</link>
      <description>The Intuitive Custom Post Order WordPress plugin before 3.1.4 does not check for authorization in the update-menu-order ajax action, allowing any logged in user (with roles as low as Subscriber) to update the menu order</description>
      <guid isPermaLink="false">CVE-2022-4385|2024-08-03T01:41:44.445Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3393|2024-08-03T01:07:06.503Z -- unknown -- post%20to%20csv%20by%20bestwebsoft
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3393</link>
      <description>The Post to CSV by BestWebSoft WordPress plugin through 1.4.0 does not properly escape fields when exporting data as CSV, leading to a CSV injection</description>
      <guid isPermaLink="false">CVE-2022-3393|2024-08-03T01:07:06.503Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4946|2024-08-03T01:55:46.120Z -- unknown -- frontend%20post%20wordpress%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4946</link>
      <description>The Frontend Post WordPress Plugin WordPress plugin through 2.8.4 does not validate an attribute of one of its shortcode, which could allow users with a role as low as contributor to add a malicious shortcode to a page/post, which will redirect users to an arbitrary domain.</description>
      <guid isPermaLink="false">CVE-2022-4946|2024-08-03T01:55:46.120Z</guid>
      <pubDate>Mon, 05 Jun 2023 13:39:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4103|2024-08-03T01:27:54.457Z -- unknown -- royal%20elementor%20addons%20%28elementor%20templates%2C%20post%20grid%2C%20mega%20menu%20%26%20header%20footer%20builder%2C%20woocommerce%20builder%2C%20product%20grid%2C%20slider%2C%20parallax%20image%20%26%20other%20free%20elementor%20widgets%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4103</link>
      <description>The Royal Elementor Addons WordPress plugin before 1.3.56 does not have authorisation and CSRF checks when creating a template, and does not ensure that the post created is a template. This could allow any authenticated users, such as subscriber to create a post (as well as any post type) with an arbitrary title</description>
      <guid isPermaLink="false">CVE-2022-4103|2024-08-03T01:27:54.457Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4553|2024-08-03T01:41:45.636Z -- unknown -- fl3r%20feelbox
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4553</link>
      <description>The FL3R FeelBox WordPress plugin through 8.1 does not have CSRF check when updating reseting moods  which could allow attackers to make logged in admins perform such action via a CSRF attack and delete the lydl_posts &amp; lydl_poststimestamp DB tables</description>
      <guid isPermaLink="false">CVE-2022-4553|2024-08-03T01:41:45.636Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2846|2024-08-03T00:52:59.515Z -- unknown -- calendar%20event%20multi%20view
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2846</link>
      <description>The Calendar Event Multi View WordPress plugin before 1.4.07 does not have any authorisation and CSRF checks in place when creating an event, and is also lacking sanitisation as well as escaping in some of the event fields. This could allow unauthenticated attackers to create arbitrary events and put Cross-Site Scripting payloads in it.</description>
      <guid isPermaLink="false">CVE-2022-2846|2024-08-03T00:52:59.515Z</guid>
      <pubDate>Tue, 16 Aug 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4479|2024-08-03T01:41:45.246Z -- unknown -- table%20of%20contents%20plus
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4479</link>
      <description>The Table of Contents Plus WordPress plugin before 2212 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4479|2024-08-03T01:41:45.246Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3149|2024-08-03T01:00:10.535Z -- unknown -- wp%20custom%20cursors
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3149</link>
      <description>The WP Custom Cursors WordPress plugin before 3.0.1 does not have CSRF check in place when creating and editing cursors, which could allow attackers to made a logged in admin perform such actions via CSRF attacks. Furthermore, due to the lack of sanitisation and escaping in some of the cursor options, it could also lead to Stored Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-3149|2024-08-03T01:00:10.535Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4826|2024-08-03T01:55:44.206Z -- unknown -- simple%20tooltips
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4826</link>
      <description>The Simple Tooltips WordPress plugin before 2.1.4 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4826|2024-08-03T01:55:44.206Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4953|2024-08-03T01:55:46.165Z -- unknown -- elementor%20website%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4953</link>
      <description>The Elementor Website Builder WordPress plugin before 3.5.5 does not filter out user-controlled URLs from being loaded into the DOM. This could be used to inject rogue iframes that point to malicious URLs.</description>
      <guid isPermaLink="false">CVE-2022-4953|2024-08-03T01:55:46.165Z</guid>
      <pubDate>Mon, 14 Aug 2023 19:10:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2405|2024-08-03T00:39:07.244Z -- unknown -- wp%20popup%20builder%20%E2%80%93%20popup%20forms%20%2C%20marketing%20popup%20%26%20%20newsletter
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2405</link>
      <description>The WP Popup Builder WordPress plugin before 1.2.9 does not have authorisation and CSRF check in an AJAX action, allowing any authenticated users, such as subscribers to delete arbitrary Popup</description>
      <guid isPermaLink="false">CVE-2022-2405|2024-08-03T00:39:07.244Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2863|2024-08-03T00:52:58.992Z -- unknown -- migration%2C%20backup%2C%20staging%20%E2%80%93%20wpvivid
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2863</link>
      <description>The Migration, Backup, Staging WordPress plugin before 0.9.76 does not sanitise and validate a parameter before using it to read the content of a file, allowing high privilege users to read any file from the web server via a Traversal attack</description>
      <guid isPermaLink="false">CVE-2022-2863|2024-08-03T00:52:58.992Z</guid>
      <pubDate>Fri, 16 Sep 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3441|2024-08-03T01:07:06.609Z -- unknown -- rock%20convert
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3441</link>
      <description>The Rock Convert WordPress plugin before 2.11.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3441|2024-08-03T01:07:06.609Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1780|2024-08-03T00:16:59.855Z -- unknown -- latex%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1780</link>
      <description>The LaTeX for WordPress plugin through 3.4.10 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack which could also lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping</description>
      <guid isPermaLink="false">CVE-2022-1780|2024-08-03T00:16:59.855Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2555|2024-08-03T00:39:07.995Z -- unknown -- yotpo%20reviews%20for%20woocommerce%20%28unofficial%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2555</link>
      <description>The Yotpo Reviews for WooCommerce WordPress plugin through 2.0.4 lacks nonce check when updating its settings, which could allow attacker to make a logged in admin change them via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2022-2555|2024-08-03T00:39:07.995Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:04:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3925|2024-08-03T01:20:58.822Z -- unknown -- buddybadges
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3925</link>
      <description>The buddybadges WordPress plugin through 1.0.0 does not sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users</description>
      <guid isPermaLink="false">CVE-2022-3925|2024-08-03T01:20:58.822Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4323|2024-08-03T01:34:50.147Z -- unknown -- analyticator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4323</link>
      <description>The Analyticator WordPress plugin before 6.5.6 unserializes user input provided via the settings, which could allow high privilege users such as admin to perform PHP Object Injection when a suitable gadget is present</description>
      <guid isPermaLink="false">CVE-2022-4323|2024-08-03T01:34:50.147Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4782|2024-08-03T01:48:40.494Z -- unknown -- clickfunnels
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4782</link>
      <description>The ClickFunnels WordPress plugin through 3.1.1 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4782|2024-08-03T01:48:40.494Z</guid>
      <pubDate>Wed, 16 Aug 2023 11:03:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2186|2024-08-03T00:32:08.635Z -- unknown -- simple%20post%20notes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2186</link>
      <description>The Simple Post Notes WordPress plugin before 1.7.6 does not sanitise and escape its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2186|2024-08-03T00:32:08.635Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:37:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1779|2024-08-03T00:16:59.906Z -- unknown -- auto%20delete%20posts
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1779</link>
      <description>The Auto Delete Posts WordPress plugin through 1.3.0 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and delete specific posts, categories and attachments at once.</description>
      <guid isPermaLink="false">CVE-2022-1779|2024-08-03T00:16:59.906Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1605|2024-08-03T00:10:03.598Z -- unknown -- email%20users
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1605</link>
      <description>The Email Users WordPress plugin through 4.8.8 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and change the notification settings of arbitrary users</description>
      <guid isPermaLink="false">CVE-2022-1605|2024-08-03T00:10:03.598Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3481|2024-08-03T01:14:01.440Z -- unknown -- woocommerce%20dropshipping
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3481</link>
      <description>The WooCommerce Dropshipping WordPress plugin before 4.4 does not properly sanitise and escape a parameter before using it in a SQL statement via a REST endpoint available to unauthenticated users, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2022-3481|2024-08-03T01:14:01.440Z</guid>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3462|2024-08-03T01:07:06.715Z -- unknown -- highlight%20focus
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3462</link>
      <description>The Highlight Focus WordPress plugin through 1.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3462|2024-08-03T01:07:06.715Z</guid>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4788|2024-08-03T01:48:40.473Z -- unknown -- embed%20pdf
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4788</link>
      <description>The Embed PDF WordPress plugin through 1.0.6 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4788|2024-08-03T01:48:40.473Z</guid>
      <pubDate>Mon, 27 Feb 2023 15:24:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2091|2024-08-03T00:24:44.215Z -- unknown -- cache%20images
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2091</link>
      <description>The Cache Images WordPress plugin before 3.2.1 does not implement nonce checks, which could allow attackers to make any logged user upload images via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2022-2091|2024-08-03T00:24:44.215Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:57:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4672|2024-08-03T01:48:39.586Z -- unknown -- wordpress%20simple%20shopping%20cart
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4672</link>
      <description>The WordPress Simple Shopping Cart WordPress plugin before 4.6.2 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4672|2024-08-03T01:48:39.586Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4373|2024-08-03T01:34:50.188Z -- unknown -- quote-o-matic
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4373</link>
      <description>The Quote-O-Matic WordPress plugin through 1.0.5 does not properly sanitize and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2022-4373|2024-08-03T01:34:50.188Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1951|2024-08-03T00:24:43.611Z -- unknown -- core%20plugin%20for%20kitestudio%20themes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1951</link>
      <description>The core plugin for kitestudio WordPress plugin before 2.3.1 does not sanitise and escape some parameters before outputting them back in a response of an AJAX action, available to both unauthenticated and authenticated users when a premium theme from the vendor is active, leading to a Reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2022-1951|2024-08-03T00:24:43.611Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:56:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3930|2024-08-03T01:27:53.132Z -- unknown -- directorist
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3930</link>
      <description>The Directorist WordPress plugin before 7.4.2.2 suffers from an IDOR vulnerability which an attacker can exploit to change the password  of arbitrary users instead of his own.</description>
      <guid isPermaLink="false">CVE-2022-3930|2024-08-03T01:27:53.132Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2597|2024-08-03T00:46:03.062Z -- unknown -- visual%20portfolio%2C%20photo%20gallery%20%26%20post%20grid
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2597</link>
      <description>The Visual Portfolio, Photo Gallery &amp; Post Grid WordPress plugin before 2.19.0 does not have proper authorisation checks in some of its REST endpoints, allowing users with a role as low as contributor to call them and inject arbitrary CSS in arbitrary saved layouts</description>
      <guid isPermaLink="false">CVE-2022-2597|2024-08-03T00:46:03.062Z</guid>
      <pubDate>Mon, 05 Sep 2022 12:35:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2395|2024-08-03T00:39:06.395Z -- unknown -- weforms%20%E2%80%93%20easy%20drag%20%26%20drop%20contact%20form%20builder%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2395</link>
      <description>The weForms WordPress plugin before 1.6.14 does not sanitise and escape its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2395|2024-08-03T00:39:06.395Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:48:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4230|2024-08-03T01:34:49.929Z -- unknown -- wp%20statistics
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4230</link>
      <description>The WP Statistics WordPress plugin before 13.2.9 does not escape a parameter, which could allow authenticated users to perform SQL Injection attacks. By default, the affected feature is available to users with the manage_options capability (admin+), however the plugin has a settings to allow low privilege users to access it as well.</description>
      <guid isPermaLink="false">CVE-2022-4230|2024-08-03T01:34:49.929Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4160|2024-08-03T01:34:48.801Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4160</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the cg_copy_id POST parameter before concatenating it to an SQL query in  cg-copy-comments.php and cg-copy-rating.php. This may allow malicious users with at least author privilege to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4160|2024-08-03T01:34:48.801Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2710|2024-08-03T00:46:03.416Z -- unknown -- scroll%20to%20top
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2710</link>
      <description>The Scroll To Top WordPress plugin before 1.4.1 does not escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2710|2024-08-03T00:46:03.416Z</guid>
      <pubDate>Mon, 19 Sep 2022 14:00:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1690|2024-08-03T00:10:03.752Z -- unknown -- note%20press
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1690</link>
      <description>The Note Press WordPress plugin through 0.1.10 does not sanitise and escape the ids from the bulk actions before using them in a SQL statement in an admin page, leading to an SQL injection</description>
      <guid isPermaLink="false">CVE-2022-1690|2024-08-03T00:10:03.752Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2382|2024-08-03T00:39:06.347Z -- unknown -- product%20slider%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2382</link>
      <description>The Product Slider for WooCommerce WordPress plugin before 2.5.7 has flawed CSRF checks and lack authorisation in some of its AJAX actions, allowing any authenticated users, such as subscriber to call them. One in particular could allow them to delete arbitrary blog options.</description>
      <guid isPermaLink="false">CVE-2022-2382|2024-08-03T00:39:06.347Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:02:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1971|2024-08-03T00:24:44.067Z -- unknown -- nextcellent%20gallery%20%E2%80%93%20nextgen%20legacy
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1971</link>
      <description>The NextCellent Gallery WordPress plugin through 1.9.35 does not sanitise and escape some of its image settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-1971|2024-08-03T00:24:44.067Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:59:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4753|2024-08-03T01:48:40.287Z -- unknown -- print-o-matic
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4753</link>
      <description>The Print-O-Matic WordPress plugin before 2.1.8 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4753|2024-08-03T01:48:40.287Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1644|2024-08-03T00:10:03.792Z -- unknown -- call%26book%20mobile%20bar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1644</link>
      <description>The Call&amp;Book Mobile Bar WordPress plugin through 1.2.2 does not sanitize and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-1644|2024-08-03T00:10:03.792Z</guid>
      <pubDate>Mon, 30 May 2022 08:36:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3989|2024-08-03T01:27:54.119Z -- unknown -- motors
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3989</link>
      <description>The Motors WordPress plugin before 1.4.4 does not properly validate uploaded files for dangerous file types (such as .php) in an AJAX action, allowing an attacker to sign up on a victim's WordPress instance, upload a malicious PHP file and attempt to launch a brute-force attack to discover the uploaded payload.</description>
      <guid isPermaLink="false">CVE-2022-3989|2024-08-03T01:27:54.119Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4680|2024-08-03T01:48:39.943Z -- unknown -- revive%20old%20posts
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4680</link>
      <description>The Revive Old Posts WordPress plugin before 9.0.11 unserializes user input provided via the settings, which could allow high privilege users such as admin to perform PHP Object Injection when a suitable gadget is present.</description>
      <guid isPermaLink="false">CVE-2022-4680|2024-08-03T01:48:39.943Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2389|2024-08-03T00:39:07.097Z -- unknown -- abandoned%20cart%20recovery%20for%20woocommerce%2C%20follow%20up%20emails%2C%20newsletter%20builder%20%26%20marketing%20automation%20by%20autonami
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2389</link>
      <description>The Abandoned Cart Recovery for WooCommerce, Follow Up Emails, Newsletter Builder &amp; Marketing Automation By Autonami WordPress plugin before 2.1.2 does not have authorisation and CSRF checks in one of its AJAX action, allowing any authenticated users, such as subscriber to create automations</description>
      <guid isPermaLink="false">CVE-2022-2389|2024-08-03T00:39:07.097Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:02:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4758|2024-08-03T01:48:40.408Z -- unknown -- 10webmapbuilder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4758</link>
      <description>The 10WebMapBuilder WordPress plugin before 1.0.72 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4758|2024-08-03T01:48:40.408Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1938|2024-08-03T00:24:42.640Z -- unknown -- awin%20data%20feed
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1938</link>
      <description>The Awin Data Feed WordPress plugin before 1.8 does not sanitise and escape a header when processing request to generate analytics data, allowing unauthenticated users to perform Stored Cross-Site Scripting attacks against a logged in admin viewing the plugin's settings</description>
      <guid isPermaLink="false">CVE-2022-1938|2024-08-03T00:24:42.640Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:56:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1709|2024-08-03T00:10:03.915Z -- unknown -- throws%20spam%20away
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1709</link>
      <description>The Throws SPAM Away WordPress plugin before 3.3.1 does not have CSRF checks in place when deleting comments (either all, spam, or pending), allowing attackers to make a logged in admin delete comments via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1709|2024-08-03T00:10:03.915Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4562|2024-08-03T01:41:45.613Z -- unknown -- meks%20flexible%20shortcodes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4562</link>
      <description>The Meks Flexible Shortcodes WordPress plugin before 1.3.5 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4562|2024-08-03T01:41:45.613Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4358|2024-08-03T01:34:50.207Z -- unknown -- wp%20rss%20by%20publishers
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4358</link>
      <description>The WP RSS By Publishers WordPress plugin through 0.1 does not properly sanitize and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2022-4358|2024-08-03T01:34:50.207Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4834|2024-08-03T01:55:45.645Z -- unknown -- cpt%20bootstrap%20carousel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4834</link>
      <description>The CPT Bootstrap Carousel WordPress plugin through 1.12 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4834|2024-08-03T01:55:45.645Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4159|2024-08-03T01:34:48.817Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4159</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the cg_id POST parameter before concatenating it to an SQL query in 0_change-gallery.php. This may allow malicious users with at least author privilege to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4159|2024-08-03T01:34:48.817Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4486|2024-08-03T01:41:45.042Z -- unknown -- meteor%20slides
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4486</link>
      <description>The Meteor Slides WordPress plugin before 1.5.7 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4486|2024-08-03T01:41:45.042Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3849|2024-08-03T01:20:59.035Z -- unknown -- wp%20user%20merger
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3849</link>
      <description>The WP User Merger WordPress plugin before 1.5.3 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as admin</description>
      <guid isPermaLink="false">CVE-2022-3849|2024-08-03T01:20:59.035Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3994|2024-08-03T01:27:53.743Z -- unknown -- authenticator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3994</link>
      <description>The Authenticator WordPress plugin before 1.3.1 does not prevent subscribers from updating a site's feed access token, which may deny other users access to the functionality in certain configurations.</description>
      <guid isPermaLink="false">CVE-2022-3994|2024-08-03T01:27:53.743Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4549|2024-08-03T01:41:45.670Z -- unknown -- tickera
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4549</link>
      <description>The Tickera WordPress plugin before 3.5.1.0 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged-in admin change them via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2022-4549|2024-08-03T01:41:45.670Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4478|2024-08-03T01:41:45.428Z -- unknown -- font%20awesome
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4478</link>
      <description>The Font Awesome WordPress plugin before 4.3.2 does not validate and escapes some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as a contributor to perform Stored Cross-Site Scripting attacks against logged-in admins.</description>
      <guid isPermaLink="false">CVE-2022-4478|2024-08-03T01:41:45.428Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1765|2024-08-03T00:16:59.872Z -- unknown -- hot%20linked%20image%20cacher
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1765</link>
      <description>The Hot Linked Image Cacher WordPress plugin through 1.16 is vulnerable to CSRF. This can be used to store / cache images from external domains on the server, which could lead to legal risks (due to copyright violations or licensing rules).</description>
      <guid isPermaLink="false">CVE-2022-1765|2024-08-03T00:16:59.872Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4655|2024-08-03T01:48:39.582Z -- unknown -- welcart%20e-commerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4655</link>
      <description>The Welcart e-Commerce WordPress plugin before 2.8.9 does not validate and escapes one of its shortcode attributes, which could allow users with a role as low as a contributor to perform a Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4655|2024-08-03T01:48:39.582Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2574|2024-08-03T00:39:08.073Z -- unknown -- meks%20easy%20social%20share
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2574</link>
      <description>The Meks Easy Social Share WordPress plugin before 1.2.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2574|2024-08-03T00:39:08.073Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4196|2024-08-03T01:34:49.612Z -- unknown -- multi%20step%20form
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4196</link>
      <description>The Multi Step Form WordPress plugin before 1.7.8 does not sanitise and escape some of its form fields, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4196|2024-08-03T01:34:49.612Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4295|2024-08-03T01:34:50.095Z -- unknown -- show%20all%20comments
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4295</link>
      <description>The Show All Comments WordPress plugin before 7.0.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against a logged in high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2022-4295|2024-08-03T01:34:50.095Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3246|2024-08-03T01:07:05.561Z -- unknown -- blog2social%3A%20social%20media%20auto%20post%20%26%20scheduler
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3246</link>
      <description>The Blog2Social: Social Media Auto Post &amp; Scheduler WordPress plugin before 6.9.10 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by any authenticated users, such as subscribers</description>
      <guid isPermaLink="false">CVE-2022-3246|2024-08-03T01:07:05.561Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3936|2024-08-03T01:27:52.941Z -- unknown -- team%20members
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3936</link>
      <description>The Team Members WordPress plugin before 5.2.1 does not sanitize and escapes some of its settings, which could allow high-privilege users such as editors to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example, in a multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3936|2024-08-03T01:27:52.941Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4484|2024-08-03T01:41:44.920Z -- unknown -- social%20share%2C%20social%20login%20and%20social%20comments%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4484</link>
      <description>The Social Share, Social Login and Social Comments Plugin WordPress plugin before 7.13.44 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4484|2024-08-03T01:41:44.920Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4774|2024-08-03T01:48:40.397Z -- unknown -- bit%20form
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4774</link>
      <description>The Bit Form WordPress plugin before 1.9 does not validate the file types uploaded via it's file upload form field, allowing unauthenticated users to upload arbitrary files types such as PHP or HTML files to the server, leading to Remote Code Execution.</description>
      <guid isPermaLink="false">CVE-2022-4774|2024-08-03T01:48:40.397Z</guid>
      <pubDate>Mon, 15 May 2023 12:15:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1792|2024-08-03T00:16:59.933Z -- unknown -- quick%20subscribe
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1792</link>
      <description>The Quick Subscribe WordPress plugin through 1.7.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and leading to Stored XSS due to the lack of sanitisation and escaping in some of them</description>
      <guid isPermaLink="false">CVE-2022-1792|2024-08-03T00:16:59.933Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:43:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1647|2024-08-03T00:10:03.693Z -- unknown -- formcraft%20%E2%80%93%20contact%20form%20builder%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1647</link>
      <description>The FormCraft WordPress plugin before 1.2.6 does not sanitise and escape Field Labels, allowing high privilege users such as admin to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-1647|2024-08-03T00:10:03.693Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4355|2024-08-03T01:34:50.161Z -- unknown -- letsrecover
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4355</link>
      <description>The LetsRecover WordPress plugin before 1.2.0 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2022-4355|2024-08-03T01:34:50.161Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1566|2024-08-03T00:10:03.472Z -- unknown -- quotes%20llama
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1566</link>
      <description>The Quotes llama WordPress plugin before 1.0.0 does not sanitise and escape Quotes, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed. The attack could also be performed by tricking an admin to import a malicious CSV file</description>
      <guid isPermaLink="false">CVE-2022-1566|2024-08-03T00:10:03.472Z</guid>
      <pubDate>Mon, 30 May 2022 08:35:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1581|2024-08-03T00:10:03.682Z -- unknown -- wp-polls
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1581</link>
      <description>The WP-Polls WordPress plugin before 2.76.0 prioritizes getting a visitor's IP from certain HTTP headers over PHP's REMOTE_ADDR, which makes it possible to bypass IP-based limitations to vote in certain situations.</description>
      <guid isPermaLink="false">CVE-2022-1581|2024-08-03T00:10:03.682Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2352|2024-08-03T00:32:09.763Z -- unknown -- post%20smtp%20mailer%2Femail%20log
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2352</link>
      <description>The Post SMTP Mailer/Email Log WordPress plugin before 2.1.7 does not have proper authorisation in some AJAX actions, which could allow high privilege users such as admin to perform blind SSRF on multisite installations for example.</description>
      <guid isPermaLink="false">CVE-2022-2352|2024-08-03T00:32:09.763Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3865|2024-08-03T01:20:58.599Z -- unknown -- wp%20user%20merger
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3865</link>
      <description>The WP User Merger WordPress plugin before 1.5.3 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as admin</description>
      <guid isPermaLink="false">CVE-2022-3865|2024-08-03T01:20:58.599Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:50:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2133|2024-08-03T00:24:44.224Z -- unknown -- oauth%20single%20sign%20on%20%E2%80%93%20sso%20%28oauth%20client%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2133</link>
      <description>The OAuth Single Sign On WordPress plugin before 6.22.6 doesn't validate that OAuth access token requests are legitimate, which allows attackers to log onto the site with the only knowledge of a user's email address.</description>
      <guid isPermaLink="false">CVE-2022-2133|2024-08-03T00:24:44.224Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:36:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4320|2024-08-03T01:34:50.061Z -- unknown -- wordpress%20events%20calendar%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4320</link>
      <description>The WordPress Events Calendar WordPress plugin before 1.4.5 does not sanitize and escapes a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against both unauthenticated and authenticated users (such as high-privilege ones like admin).</description>
      <guid isPermaLink="false">CVE-2022-4320|2024-08-03T01:34:50.061Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4699|2024-08-03T01:48:39.997Z -- unknown -- mediaelement.js
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4699</link>
      <description>The MediaElement.js WordPress plugin through 4.2.8 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high-privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4699|2024-08-03T01:48:39.997Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3070|2024-08-03T01:00:10.579Z -- unknown -- generate%20pdf%20using%20contact%20form%207
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3070</link>
      <description>The Generate PDF WordPress plugin before 3.6 does not sanitise and escape its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-3070|2024-08-03T01:00:10.579Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3847|2024-08-03T01:20:58.782Z -- unknown -- showing%20url%20in%20qr%20code
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3847</link>
      <description>The Showing URL in QR Code WordPress plugin through 0.0.1 does not have CSRF check when updating its settings, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin or editor add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-3847|2024-08-03T01:20:58.782Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:50:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4142|2024-08-03T01:27:54.543Z -- unknown -- wordpress%20filter%20gallery%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4142</link>
      <description>The WordPress Filter Gallery Plugin WordPress plugin before 0.1.6 does not properly escape the filters passed in the ufg_gallery_filters ajax action before outputting them on the page, allowing a high privileged user such as an administrator to inject HTML or javascript to the plugin settings page, even when the unfiltered_html capability is disabled.</description>
      <guid isPermaLink="false">CVE-2022-4142|2024-08-03T01:27:54.543Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2276|2024-08-03T00:32:09.597Z -- unknown -- wp%20edit%20menu
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2276</link>
      <description>The WP Edit Menu WordPress plugin before 1.5.0 does not have authorisation and CSRF in an AJAX action, which could allow unauthenticated attackers to delete arbitrary posts/pages from the blog</description>
      <guid isPermaLink="false">CVE-2022-2276|2024-08-03T00:32:09.597Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:00:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4830|2024-08-03T01:55:45.614Z -- unknown -- paid%20memberships%20pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4830</link>
      <description>The Paid Memberships Pro WordPress plugin before 2.9.9 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4830|2024-08-03T01:55:45.614Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1572|2024-08-03T00:10:03.642Z -- unknown -- html2wp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1572</link>
      <description>The HTML2WP WordPress plugin through 1.0.0 does not have authorisation and CSRF checks in an AJAX action, available to any authenticated users such as subscriber, which could allow them to delete arbitrary file</description>
      <guid isPermaLink="false">CVE-2022-1572|2024-08-03T00:10:03.642Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:56:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4166|2024-08-03T01:34:48.788Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4166</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the addCountS POST parameter before concatenating it to an SQL query in 4_activate.php. This may allow malicious users with at least author privilege to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4166|2024-08-03T01:34:48.788Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3247|2024-08-03T01:07:05.647Z -- unknown -- blog2social%3A%20social%20media%20auto%20post%20%26%20scheduler
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3247</link>
      <description>The Blog2Social: Social Media Auto Post &amp; Scheduler WordPress plugin before 6.9.10 does not have authorisation in an AJAX action, and does not ensure that the URL to make a request to is an external one. As a result, any authenticated users, such as subscriber could perform SSRF attacks</description>
      <guid isPermaLink="false">CVE-2022-3247|2024-08-03T01:07:05.647Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4480|2024-08-03T01:41:45.004Z -- unknown -- click%20to%20chat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4480</link>
      <description>The Click to Chat WordPress plugin before 3.18.1 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4480|2024-08-03T01:41:45.004Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4784|2024-08-03T01:48:40.467Z -- unknown -- hueman%20addons
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4784</link>
      <description>The Hueman Addons WordPress plugin through 2.3.3 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4784|2024-08-03T01:48:40.467Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3137|2024-08-03T01:00:10.436Z -- unknown -- taskbuilder%20%E2%80%93%20wordpress%20project%20%26%20task%20management%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3137</link>
      <description>The Taskbuilder WordPress plugin before 1.0.8 does not validate and sanitise task's attachments, which could allow any authenticated user (such as subscriber) creating a task to perform Stored Cross-Site Scripting by attaching a malicious SVG file</description>
      <guid isPermaLink="false">CVE-2022-3137|2024-08-03T01:00:10.436Z</guid>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3194|2024-08-03T01:00:10.810Z -- unknown -- dokan
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3194</link>
      <description>The Dokan WordPress plugin before 3.6.4 allows vendors to inject arbitrary javascript in product reviews, which may allow them to run stored XSS attacks against other users like site administrators.</description>
      <guid isPermaLink="false">CVE-2022-3194|2024-08-03T01:00:10.810Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:53:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4471|2024-08-03T01:41:44.920Z -- unknown -- yarpp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4471</link>
      <description>The YARPP WordPress plugin before 5.30.3 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4471|2024-08-03T01:41:44.920Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1627|2024-08-03T00:10:03.670Z -- unknown -- my%20private%20site
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1627</link>
      <description>The My Private Site WordPress plugin before 3.0.8 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1627|2024-08-03T00:10:03.670Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:57:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3302|2024-08-03T01:07:06.448Z -- unknown -- spam%20protection%2C%20antispam%2C%20firewall%20by%20cleantalk
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3302</link>
      <description>The Spam protection, AntiSpam, FireWall by CleanTalk WordPress plugin before 5.185.1 does not validate ids before using them in a SQL statement, which could lead to SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2022-3302|2024-08-03T01:07:06.448Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1832|2024-08-03T00:17:00.782Z -- unknown -- capa%20protect
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1832</link>
      <description>The CaPa Protect WordPress plugin through 0.5.8.2 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and disable the applied protection.</description>
      <guid isPermaLink="false">CVE-2022-1832|2024-08-03T00:17:00.782Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2386|2024-08-03T00:39:07.934Z -- unknown -- crowdsignal%20dashboard%20%E2%80%93%20polls%2C%20surveys%20%26%20more
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2386</link>
      <description>The Crowdsignal Dashboard WordPress plugin before 3.0.8 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2386|2024-08-03T00:39:07.934Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:48:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3124|2024-08-03T01:00:10.519Z -- unknown -- frontend%20file%20manager%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3124</link>
      <description>The Frontend File Manager Plugin WordPress plugin before 21.3 allows any unauthenticated user to rename uploaded files from users. Furthermore, due to the lack of validation in the destination filename, this could allow allow them to change the content of arbitrary files on the web server</description>
      <guid isPermaLink="false">CVE-2022-3124|2024-08-03T01:00:10.519Z</guid>
      <pubDate>Mon, 03 Oct 2022 13:45:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1563|2024-08-03T00:10:03.470Z -- unknown -- wp-graphql-woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1563</link>
      <description>The WPGraphQL WooCommerce WordPress plugin before 0.12.4 does not prevent unauthenticated attackers from enumerating a shop's coupon codes and values via GraphQL.</description>
      <guid isPermaLink="false">CVE-2022-1563|2024-08-03T00:10:03.470Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:50:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1724|2024-08-03T00:16:58.963Z -- unknown -- simple%20membership
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1724</link>
      <description>The Simple Membership WordPress plugin before 4.1.1 does not properly sanitise and escape parameters before outputting them back in AJAX actions, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-1724|2024-08-03T00:16:58.963Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3451|2024-08-03T01:07:06.695Z -- unknown -- product%20stock%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3451</link>
      <description>The Product Stock Manager WordPress plugin before 1.0.5 does not have authorisation and proper CSRF checks in multiple AJAX actions, allowing users with a role as low as subscriber to call them. One action in particular could allow to update arbitrary options</description>
      <guid isPermaLink="false">CVE-2022-3451|2024-08-03T01:07:06.695Z</guid>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3912|2024-08-03T01:20:58.758Z -- unknown -- user%20registration
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3912</link>
      <description>The User Registration WordPress plugin before 2.2.4.1 does not properly restrict the files to be uploaded via an AJAX action available to both unauthenticated and authenticated users, which could allow unauthenticated users to upload PHP files for example.</description>
      <guid isPermaLink="false">CVE-2022-3912|2024-08-03T01:20:58.758Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4670|2024-08-03T01:48:39.487Z -- unknown -- pdf.js%20viewer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4670</link>
      <description>The PDF.js Viewer WordPress plugin before 2.1.8 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-4670|2024-08-03T01:48:39.487Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3131|2024-08-03T01:00:09.699Z -- unknown -- search%20logger%20%E2%80%93%20know%20what%20your%20visitors%20search
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3131</link>
      <description>The Search Logger WordPress plugin through 0.9 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users</description>
      <guid isPermaLink="false">CVE-2022-3131|2024-08-03T01:00:09.699Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1967|2024-08-03T00:24:43.403Z -- unknown -- wp%20championship
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1967</link>
      <description>The WP Championship WordPress plugin before 9.3 is lacking CSRF checks in various places, allowing attackers to make a logged in admin perform unwanted actions, such as create and delete arbitrary teams as well as update the plugin's settings. Due to the lack of sanitisation and escaping, it could also lead to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2022-1967|2024-08-03T00:24:43.403Z</guid>
      <pubDate>Mon, 04 Jul 2022 13:05:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4658|2024-08-03T01:48:40.085Z -- unknown -- rssimport
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4658</link>
      <description>The RSSImport WordPress plugin through 4.6.1 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4658|2024-08-03T01:48:40.085Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2563|2024-08-03T00:39:08.066Z -- unknown -- tutor%20lms%20%E2%80%93%20elearning%20and%20online%20course%20solution
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2563</link>
      <description>The Tutor LMS WordPress plugin before 2.0.10 does not escape some course parameters, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2563|2024-08-03T00:39:08.066Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3824|2024-08-03T01:20:58.448Z -- unknown -- wp%20admin%20ui%20customize
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3824</link>
      <description>The WP Admin UI Customize WordPress plugin before 1.5.13 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3824|2024-08-03T01:20:58.448Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2546|2024-08-03T00:39:07.984Z -- unknown -- all-in-one%20wp%20migration
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2546</link>
      <description>The All-in-One WP Migration WordPress plugin before 7.63 uses the wrong content type, and does not properly escape the response from the ai1wm_export AJAX action, allowing an attacker to craft a request that when submitted by any visitor will inject arbitrary html or javascript into the response that will be executed in the victims session. Note: This requires knowledge of a static secret key</description>
      <guid isPermaLink="false">CVE-2022-2546|2024-08-03T00:39:07.984Z</guid>
      <pubDate>Thu, 02 Feb 2023 08:28:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4023|2024-08-03T01:27:54.410Z -- unknown -- 3dprint
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4023</link>
      <description>The 3DPrint WordPress plugin before 3.5.6.9 does not protect against CSRF attacks in the modified version of Tiny File Manager included with the plugin, allowing an attacker to craft a malicious request that will create an archive of any files or directories on the target server by tricking a logged in admin into submitting a form. Furthermore the created archive has a predictable location and name, allowing the attacker to download the file if they know the time at which the form was submitted, making it possible to leak sensitive files like the WordPress configuration containing database credentials and secrets.</description>
      <guid isPermaLink="false">CVE-2022-4023|2024-08-03T01:27:54.410Z</guid>
      <pubDate>Mon, 17 Jul 2023 13:29:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4674|2024-08-03T01:48:39.549Z -- unknown -- ibtana
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4674</link>
      <description>The Ibtana WordPress plugin before 1.1.8.8 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack</description>
      <guid isPermaLink="false">CVE-2022-4674|2024-08-03T01:48:39.549Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2737|2024-08-03T00:46:04.156Z -- unknown -- wp%20staging%20%E2%80%93%20backup%20duplicator%20%26%20migration
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2737</link>
      <description>The WP STAGING WordPress plugin before 2.9.18 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2737|2024-08-03T00:46:04.156Z</guid>
      <pubDate>Fri, 16 Sep 2022 08:40:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4299|2024-08-03T01:34:50.111Z -- unknown -- metricool
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4299</link>
      <description>The Metricool WordPress plugin before 1.18 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4299|2024-08-03T01:34:50.111Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3408|2024-08-03T01:07:06.513Z -- unknown -- wp%20word%20count
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3408</link>
      <description>The WP Word Count WordPress plugin through 3.2.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-3408|2024-08-03T01:07:06.513Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4119|2024-08-03T01:27:54.415Z -- unknown -- image%20optimizer%2C%20resizer%20and%20cdn
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4119</link>
      <description>The Image Optimizer, Resizer and CDN WordPress plugin before 6.8.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4119|2024-08-03T01:27:54.415Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3244|2024-08-03T01:00:10.691Z -- unknown -- import%20all%20xml%2C%20csv%20%26%20txt%20into%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3244</link>
      <description>The Import all XML, CSV &amp; TXT WordPress plugin before 6.5.8 does not have authorisation in some places, which could allow any authenticated users to access some of the plugin features if they manage to get the related nonce</description>
      <guid isPermaLink="false">CVE-2022-3244|2024-08-03T01:00:10.691Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1599|2024-08-03T00:10:03.993Z -- unknown -- admin%20management%20xtended
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1599</link>
      <description>The Admin Management Xtended WordPress plugin before 2.4.5 does not have CSRF checks in some of its AJAX actions, allowing attackers to make a logged users with the right capabilities to call them. This can lead to changes in post status (draft, published), slug, post date, comment status (enabled, disabled) and more.</description>
      <guid isPermaLink="false">CVE-2022-1599|2024-08-03T00:10:03.993Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:56:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1542|2024-08-03T00:10:02.947Z -- unknown -- hpb%20dashboard
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1542</link>
      <description>The HPB Dashboard WordPress plugin through 1.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-1542|2024-08-03T00:10:02.947Z</guid>
      <pubDate>Mon, 30 May 2022 08:35:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4150|2024-08-03T01:27:54.549Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4150</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the option_id POST parameter before concatenating it to an SQL query in order-custom-fields-with-and-without-search.php. This may allow malicious users with at least author privilege to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4150|2024-08-03T01:27:54.549Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1562|2024-08-03T00:10:03.556Z -- unknown -- enable%20svg
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1562</link>
      <description>The Enable SVG WordPress plugin before 1.4.0 does not sanitise uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads</description>
      <guid isPermaLink="false">CVE-2022-1562|2024-08-03T00:10:03.556Z</guid>
      <pubDate>Mon, 30 May 2022 08:35:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3691|2024-08-03T01:14:03.244Z -- unknown -- deepl%20pro%20api%20translation%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3691</link>
      <description>The DeepL Pro API translation plugin WordPress plugin before 1.7.5 discloses sensitive information (including the DeepL API key) in files that are publicly accessible to an external, unauthenticated visitor.</description>
      <guid isPermaLink="false">CVE-2022-3691|2024-08-03T01:14:03.244Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1895|2024-08-03T00:17:00.918Z -- unknown -- underconstruction
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1895</link>
      <description>The underConstruction WordPress plugin before 1.20 does not have CSRF check in place when deactivating the construction mode, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1895|2024-08-03T00:17:00.918Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4673|2024-08-03T01:48:39.844Z -- unknown -- rate%20my%20post
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4673</link>
      <description>The Rate my Post WordPress plugin before 3.3.9 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4673|2024-08-03T01:48:39.844Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4754|2024-08-03T01:48:40.322Z -- unknown -- easy%20social%20box%20%2F%20page%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4754</link>
      <description>The Easy Social Box / Page Plugin WordPress plugin through 4.1.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4754|2024-08-03T01:48:40.322Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:51:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1846|2024-08-03T00:17:00.834Z -- unknown -- tiny%20contact%20form
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1846</link>
      <description>The Tiny Contact Form WordPress plugin through 0.7 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1846|2024-08-03T00:17:00.834Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:58:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2913|2024-08-03T00:52:59.981Z -- unknown -- login%20no%20captcha%20recaptcha
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2913</link>
      <description>The Login No Captcha reCAPTCHA WordPress plugin before 1.7 doesn't check the proper IP address allowing attackers to spoof IP addresses on the allow list and bypass the need for captcha on the login screen.</description>
      <guid isPermaLink="false">CVE-2022-2913|2024-08-03T00:52:59.981Z</guid>
      <pubDate>Fri, 16 Sep 2022 08:40:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3632|2024-08-03T01:14:02.950Z -- unknown -- oauth%20client%20by%20digitialpixies
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3632</link>
      <description>The OAuth Client by DigitialPixies WordPress plugin through 1.1.0 does not have CSRF checks in some places, which could allow attackers to make logged-in users perform unwanted actions.</description>
      <guid isPermaLink="false">CVE-2022-3632|2024-08-03T01:14:02.950Z</guid>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2532|2024-08-03T00:39:07.947Z -- unknown -- feed%20them%20social%20%E2%80%93%20for%20twitter%20feed%2C%20youtube%20and%20more
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2532</link>
      <description>The Feed Them Social WordPress plugin before 3.0.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2532|2024-08-03T00:39:07.947Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:03:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2381|2024-08-03T00:39:06.339Z -- unknown -- e%20unlocked%20%E2%80%93%20student%20result
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2381</link>
      <description>The E Unlocked - Student Result WordPress plugin through 1.0.4 is lacking CSRF and validation when uploading the School logo, which could allow attackers to make a logged in admin upload arbitrary files, such as PHP via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-2381|2024-08-03T00:39:06.339Z</guid>
      <pubDate>Mon, 15 Aug 2022 08:37:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3831|2024-08-03T01:20:58.383Z -- unknown -- recaptcha
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3831</link>
      <description>The reCAPTCHA WordPress plugin through 1.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3831|2024-08-03T01:20:58.383Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1772|2024-08-03T00:16:59.892Z -- unknown -- google%20places%20reviews
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1772</link>
      <description>The Google Places Reviews WordPress plugin before 2.0.0 does not properly escape its Google API key setting, which is reflected on the site's administration panel. A malicious administrator could abuse this bug, in a multisite WordPress configuration, to trick super-administrators into viewing the booby-trapped payload and taking over their account.</description>
      <guid isPermaLink="false">CVE-2022-1772|2024-08-03T00:16:59.892Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4346|2024-08-03T01:34:50.170Z -- unknown -- all-in-one%20security%20%28aios%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4346</link>
      <description>The All-In-One Security (AIOS) WordPress plugin before 5.1.3 leaked settings of the plugin publicly, including the used email address.</description>
      <guid isPermaLink="false">CVE-2022-4346|2024-08-03T01:34:50.170Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2903|2024-08-03T00:53:00.439Z -- unknown -- ninja%20forms%20contact%20form%20%E2%80%93%20the%20drag%20and%20drop%20form%20builder%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2903</link>
      <description>The Ninja Forms Contact Form WordPress plugin before 3.6.13 unserialises the content of an imported file, which could lead to PHP object injections issues when an admin import (intentionally or not) a malicious file and a suitable gadget chain is present on the blog.</description>
      <guid isPermaLink="false">CVE-2022-2903|2024-08-03T00:53:00.439Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2423|2024-08-03T00:39:07.417Z -- unknown -- dw%20promobar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2423</link>
      <description>The DW Promobar WordPress plugin through 1.0.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2423|2024-08-03T00:39:07.417Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:50:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3220|2024-08-03T01:00:10.606Z -- unknown -- advanced%20comment%20form
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3220</link>
      <description>The Advanced Comment Form WordPress plugin before 1.2.1 does not sanitise and escape its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-3220|2024-08-03T01:00:10.606Z</guid>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4745|2024-08-03T01:48:40.413Z -- unknown -- wp%20customer%20area
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4745</link>
      <description>The WP Customer Area WordPress plugin before 8.1.4 does not have CSRF checks when performing some actions such as chmod, mkdir and copy, which could allow attackers to make a logged-in admin perform them and create arbitrary folders, copy file for example.</description>
      <guid isPermaLink="false">CVE-2022-4745|2024-08-03T01:48:40.413Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4110|2024-08-03T01:27:54.410Z -- unknown -- eventify%E2%84%A2
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4110</link>
      <description>The Eventify™ WordPress plugin through 2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4110|2024-08-03T01:27:54.410Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3207|2024-08-03T01:00:10.617Z -- unknown -- simple%20file%20list
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3207</link>
      <description>The Simple File List WordPress plugin before 4.4.12 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3207|2024-08-03T01:00:10.617Z</guid>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1818|2024-08-03T00:17:00.207Z -- unknown -- multi-page%20toolkit
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1818</link>
      <description>The Multi-page Toolkit WordPress plugin through 2.6 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping as well</description>
      <guid isPermaLink="false">CVE-2022-1818|2024-08-03T00:17:00.207Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3357|2024-08-03T01:07:06.526Z -- unknown -- smart%20slider%203
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3357</link>
      <description>The Smart Slider 3 WordPress plugin before 3.5.1.11 unserialises the content of an imported file, which could lead to PHP object injection issues when a user import (intentionally or not) a malicious file, and a suitable gadget chain is present on the site.</description>
      <guid isPermaLink="false">CVE-2022-3357|2024-08-03T01:07:06.526Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1964|2024-08-03T00:24:43.600Z -- unknown -- easy%20svg%20support
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1964</link>
      <description>The Easy SVG Support WordPress plugin before 3.3.0 does not sanitise uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads</description>
      <guid isPermaLink="false">CVE-2022-1964|2024-08-03T00:24:43.600Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:58:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3096|2024-08-03T01:00:10.099Z -- unknown -- wp%20total%20hacks
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3096</link>
      <description>The WP Total Hacks WordPress plugin through 4.7.2 does not prevent low privilege users from modifying the plugin's settings. This could allow users such as subscribers to perform Stored Cross-Site Scripting attacks against other users, like administrators, due to the lack of sanitisation and escaping as well.</description>
      <guid isPermaLink="false">CVE-2022-3096|2024-08-03T01:00:10.099Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4897|2024-08-03T01:55:46.053Z -- unknown -- backupbuddy
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4897</link>
      <description>The BackupBuddy WordPress plugin before 8.8.3 does not sanitise and escape some parameters before outputting them back in various places, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-4897|2024-08-03T01:55:46.053Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3981|2024-08-03T01:27:53.947Z -- unknown -- icegram%20express
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3981</link>
      <description>The Icegram Express WordPress plugin before 5.5.1 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by any authenticated users, such as subscriber</description>
      <guid isPermaLink="false">CVE-2022-3981|2024-08-03T01:27:53.947Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1755|2024-08-03T00:16:59.865Z -- unknown -- svg%20support
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1755</link>
      <description>The SVG Support WordPress plugin before 2.5 does not properly handle SVG added via an URL, which could allow users with a role as low as author to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-1755|2024-08-03T00:16:59.865Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2558|2024-08-03T00:39:08.163Z -- unknown -- simple%20job%20board
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2558</link>
      <description>The Simple Job Board WordPress plugin before 2.10.0 is susceptible to Directory Listing which allows the public listing of uploaded resumes in certain configurations.</description>
      <guid isPermaLink="false">CVE-2022-2558|2024-08-03T00:39:08.163Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:04:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1551|2024-08-03T00:10:03.030Z -- unknown -- sp%20project%20%26%20document%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1551</link>
      <description>The SP Project &amp; Document Manager WordPress plugin before 4.58 uses an easily guessable path to store user files, bad actors could use that to access other users' sensitive files.</description>
      <guid isPermaLink="false">CVE-2022-1551|2024-08-03T00:10:03.030Z</guid>
      <pubDate>Mon, 25 Jul 2022 12:46:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1904|2024-08-03T00:17:00.911Z -- unknown -- pricing%20tables%20wordpress%20plugin%20%E2%80%93%20easy%20pricing%20tables
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1904</link>
      <description>The Pricing Tables WordPress Plugin WordPress plugin before 3.2.1 does not sanitise and escape parameter before outputting it back in a page available to any user (both authenticated and unauthenticated) when a specific setting is enabled, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-1904|2024-08-03T00:17:00.911Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:58:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2711|2024-08-03T00:46:03.827Z -- unknown -- import%20any%20xml%20or%20csv%20file%20to%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2711</link>
      <description>The Import any XML or CSV File to WordPress plugin before 3.6.9 is not validating the paths of files contained in uploaded zip archives, allowing highly privileged users, such as admins, to write arbitrary files to any part of the file system accessible by the web server via a path traversal vector.</description>
      <guid isPermaLink="false">CVE-2022-2711|2024-08-03T00:46:03.827Z</guid>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4626|2024-08-03T01:48:40.374Z -- unknown -- ppwp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4626</link>
      <description>The PPWP WordPress plugin before 1.8.6 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4626|2024-08-03T01:48:40.374Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1578|2024-08-03T00:10:03.399Z -- unknown -- my%20wpdb
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1578</link>
      <description>The My wpdb WordPress plugin before 2.5 is missing CSRF check when running SQL queries, which could allow attacker to make a logged in admin run arbitrary SQL query via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1578|2024-08-03T00:10:03.399Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4714|2024-08-03T01:48:40.301Z -- unknown -- wp%20dark%20mode
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4714</link>
      <description>The WP Dark Mode WordPress plugin before 4.0.0 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack</description>
      <guid isPermaLink="false">CVE-2022-4714|2024-08-03T01:48:40.301Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:51:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1717|2024-08-03T00:10:03.938Z -- unknown -- custom%20share%20buttons%20with%20floating%20sidebar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1717</link>
      <description>The Custom Share Buttons with Floating Sidebar WordPress plugin before 4.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1717|2024-08-03T00:10:03.938Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:25:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2655|2024-08-03T00:46:03.372Z -- unknown -- classified%20listing%20pro%20-%20classified%20ads%20%26%20business%20directory%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2655</link>
      <description>The Classified Listing Pro WordPress plugin before 2.0.20 does not escape a generated URL before outputting it back in an attribute in an admin page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2655|2024-08-03T00:46:03.372Z</guid>
      <pubDate>Fri, 16 Sep 2022 08:40:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2040|2024-08-03T00:24:44.147Z -- unknown -- brizy%20%E2%80%93%20page%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2040</link>
      <description>The Brizy WordPress plugin before 2.4.2 does not sanitise and escape some element URL, which could allow users with a role as low as Contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-2040|2024-08-03T00:24:44.147Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:59:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2072|2024-08-03T00:24:44.324Z -- unknown -- name%20directory
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2072</link>
      <description>The Name Directory WordPress plugin before 1.25.3 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting. Furthermore, as the payload is also saved into the database after the request, it leads to a Stored XSS as well</description>
      <guid isPermaLink="false">CVE-2022-2072|2024-08-03T00:24:44.324Z</guid>
      <pubDate>Mon, 25 Jul 2022 12:46:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2275|2024-08-03T00:32:09.357Z -- unknown -- wp%20edit%20menu
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2275</link>
      <description>The WP Edit Menu WordPress plugin before 1.5.0 does not have CSRF in an AJAX action, which could allow attackers to make a logged in admin delete arbitrary posts/pages from the blog via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-2275|2024-08-03T00:32:09.357Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:00:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2325|2024-08-03T00:32:09.684Z -- unknown -- invitation%20based%20registrations
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2325</link>
      <description>The Invitation Based Registrations WordPress plugin through 2.2.84 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2325|2024-08-03T00:32:09.684Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:52:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1894|2024-08-03T00:17:00.933Z -- unknown -- popup%20builder%20%E2%80%93%20create%20highly%20converting%2C%20mobile%20friendly%20marketing%20popups.
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1894</link>
      <description>The Popup Builder WordPress plugin before 4.1.11 does not escape and sanitize some settings, which could allow high privilege users to perform Stored Cross-Site Scripting attacks when the unfiltred_html is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1894|2024-08-03T00:17:00.933Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:56:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1688|2024-08-03T00:10:03.815Z -- unknown -- note%20press
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1688</link>
      <description>The Note Press WordPress plugin through 0.1.10 does not sanitise and escape the id parameter before using it in various SQL statement via the admin dashboard, leading to SQL Injections</description>
      <guid isPermaLink="false">CVE-2022-1688|2024-08-03T00:10:03.815Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3574|2024-08-03T01:14:02.085Z -- unknown -- wpforms%20pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3574</link>
      <description>The WPForms Pro WordPress plugin before 1.7.7 does not validate its form data when generating the exported CSV, which could lead to CSV injection.</description>
      <guid isPermaLink="false">CVE-2022-3574|2024-08-03T01:14:02.085Z</guid>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2384|2024-08-03T00:39:07.356Z -- unknown -- digital%20publications%20by%20supsystic
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2384</link>
      <description>The Digital Publications by Supsystic WordPress plugin before 1.7.4 does not sanitise and escape its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2384|2024-08-03T00:39:07.356Z</guid>
      <pubDate>Mon, 15 Aug 2022 08:37:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3366|2024-08-03T01:07:06.472Z -- unknown -- publishpress%20capabilities%20%E2%80%93%20user%20role%20access%2C%20editor%20permissions%2C%20admin%20menus
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3366</link>
      <description>The PublishPress Capabilities WordPress plugin before 2.5.2, PublishPress Capabilities Pro WordPress plugin before 2.5.2 unserializes the content of imported files, which could lead to PHP object injection attacks by administrators, on multisite WordPress configurations. Successful exploitation in this case requires other plugins with a suitable gadget chain to be present on the site.</description>
      <guid isPermaLink="false">CVE-2022-3366|2024-08-03T01:07:06.472Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-25810|2024-08-03T04:49:43.477Z -- unknown -- transposh%20wordpress%20translation
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-25810</link>
      <description>The Transposh WordPress Translation WordPress plugin through 1.0.8 exposes a couple of sensitive actions such has “tp_reset” under the Utilities tab (/wp-admin/admin.php?page=tp_utils), which can be used/executed as the lowest-privileged user. Basically all Utilities functionalities are vulnerable this way, which involves resetting configurations and backup/restore operations.</description>
      <guid isPermaLink="false">CVE-2022-25810|2024-08-03T04:49:43.477Z</guid>
      <pubDate>Mon, 22 Aug 2022 14:58:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4485|2024-08-03T01:41:45.576Z -- unknown -- page-list
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4485</link>
      <description>The Page-list WordPress plugin before 5.3 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4485|2024-08-03T01:41:45.576Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4467|2024-08-03T01:41:45.364Z -- unknown -- search%20%26%20filter
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4467</link>
      <description>The Search &amp; Filter WordPress plugin before 1.2.16 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2022-4467|2024-08-03T01:41:45.364Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4024|2024-08-03T01:27:54.143Z -- unknown -- registration%20forms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4024</link>
      <description>The Registration Forms WordPress plugin before 3.8.1.3 does not have authorisation and CSRF when deleting users via an init action handler, allowing unauthenticated attackers to delete arbitrary users (along with their posts)</description>
      <guid isPermaLink="false">CVE-2022-4024|2024-08-03T01:27:54.143Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3935|2024-08-03T01:27:53.085Z -- unknown -- welcart%20e-commerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3935</link>
      <description>The Welcart e-Commerce WordPress plugin before 2.8.4 does not sanitise and escape some parameters, which could allow any authenticated users, such as subscriber to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-3935|2024-08-03T01:27:53.085Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1600|2024-08-03T00:10:03.637Z -- unknown -- yop%20poll
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1600</link>
      <description>The YOP Poll WordPress plugin before 6.4.3 prioritizes getting a visitor's IP from certain HTTP headers over PHP's REMOTE_ADDR, which makes it possible to bypass IP-based limitations to vote in certain situations.</description>
      <guid isPermaLink="false">CVE-2022-1600|2024-08-03T00:10:03.637Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:48:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3025|2024-08-03T00:53:00.515Z -- unknown -- bitcoin%20%2F%20altcoin%20faucet
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3025</link>
      <description>The Bitcoin / Altcoin Faucet WordPress plugin through 1.6.0 does not have any CSRF check when saving its settings, allowing attacker to make a logged in admin change them via a CSRF attack. Furthermore, due to the lack of sanitisation and escaping, it could also lead to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2022-3025|2024-08-03T00:53:00.515Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3136|2024-08-03T01:00:10.318Z -- unknown -- social%20rocket%20%E2%80%93%20social%20sharing%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3136</link>
      <description>The Social Rocket WordPress plugin before 1.3.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3136|2024-08-03T01:00:10.318Z</guid>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4650|2024-08-03T01:48:38.923Z -- unknown -- hashbar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4650</link>
      <description>The HashBar WordPress plugin before 1.3.6 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4650|2024-08-03T01:48:38.923Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2172|2024-08-03T00:32:08.540Z -- unknown -- linkworth%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2172</link>
      <description>The LinkWorth WordPress plugin before 3.3.4 does not implement nonce checks, which could allow attackers to make a logged in admin change settings via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2022-2172|2024-08-03T00:32:08.540Z</guid>
      <pubDate>Mon, 22 Aug 2022 14:59:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2184|2024-08-03T00:32:08.609Z -- unknown -- captcha%204wp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2184</link>
      <description>The CAPTCHA 4WP WordPress plugin before 7.1.0 lets user input reach a sensitive require_once call in one of its admin-side templates. This can be abused by attackers, via a Cross-Site Request Forgery attack to run arbitrary code on the server.</description>
      <guid isPermaLink="false">CVE-2022-2184|2024-08-03T00:32:08.609Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:50:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4545|2024-08-03T01:41:45.634Z -- unknown -- sitemap
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4545</link>
      <description>The Sitemap WordPress plugin before 4.4 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4545|2024-08-03T01:41:45.634Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1776|2024-08-03T00:16:59.614Z -- unknown -- popups%2C%20welcome%20bar%2C%20optins%20and%20lead%20generation%20plugin%20%E2%80%93%20icegram
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1776</link>
      <description>The Popups, Welcome Bar, Optins and Lead Generation Plugin WordPress plugin before 2.1.8 does not sanitize and escape some campaign parameters, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-1776|2024-08-03T00:16:59.614Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:57:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1608|2024-08-03T00:10:03.660Z -- unknown -- onepress%20social%20locker
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1608</link>
      <description>The OnePress Social Locker WordPress plugin through 5.6.2 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1608|2024-08-03T00:10:03.660Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1712|2024-08-03T00:10:03.917Z -- unknown -- livesync%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1712</link>
      <description>The LiveSync for WordPress plugin through 1.0 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1712|2024-08-03T00:10:03.917Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2450|2024-08-03T00:39:07.624Z -- unknown -- resmush.it%20%3A%20the%20only%20free%20image%20optimizer%20%26%20compress%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2450</link>
      <description>The reSmush.it : the only free Image Optimizer &amp; compress plugin WordPress plugin before 0.4.4 lacks authorization in various AJAX actions, allowing any logged-in users, such as subscribers to call them.</description>
      <guid isPermaLink="false">CVE-2022-2450|2024-08-03T00:39:07.624Z</guid>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4448|2024-08-03T01:41:44.722Z -- unknown -- givewp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4448</link>
      <description>The GiveWP WordPress plugin before 2.24.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4448|2024-08-03T01:41:44.722Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2600|2024-08-03T00:46:03.164Z -- unknown -- auto-hyperlink%20urls
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2600</link>
      <description>The Auto-hyperlink URLs WordPress plugin through 5.4.1 does not set rel="noopener noreferer" on generated links, which can lead to Tab Nabbing by giving the target site access to the source tab through the window.opener DOM object.</description>
      <guid isPermaLink="false">CVE-2022-2600|2024-08-03T00:46:03.164Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:05:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4676|2024-08-03T01:48:39.653Z -- unknown -- osm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4676</link>
      <description>The OSM WordPress plugin through 6.01 does not validate and escape some of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4676|2024-08-03T01:48:39.653Z</guid>
      <pubDate>Tue, 30 May 2023 07:49:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2376|2024-08-03T00:32:09.699Z -- unknown -- directorist%20%E2%80%93%20wordpress%20business%20directory%20plugin%20with%20classified%20ads%20listings
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2376</link>
      <description>The Directorist WordPress plugin before 7.3.1 discloses the email address of all users in an AJAX action available to both unauthenticated and any authenticated users</description>
      <guid isPermaLink="false">CVE-2022-2376|2024-08-03T00:32:09.699Z</guid>
      <pubDate>Mon, 05 Sep 2022 12:35:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3206|2024-08-03T01:00:10.811Z -- unknown -- passster
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3206</link>
      <description>The Passster WordPress plugin before 3.5.5.5.2 stores the password inside a cookie named "passster" using base64 encoding method which is easy to decode. This puts the password at risk in case the cookies get leaked.</description>
      <guid isPermaLink="false">CVE-2022-3206|2024-08-03T01:00:10.811Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1910|2024-08-03T00:17:00.886Z -- unknown -- shortcodes%20and%20extra%20features%20for%20phlox%20theme
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1910</link>
      <description>The Shortcodes and extra features for Phlox WordPress plugin before 2.9.8 does not sanitise and escape a parameter before outputting it back in the response, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-1910|2024-08-03T00:17:00.886Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:56:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1577|2024-08-03T00:10:03.450Z -- unknown -- database%20backup%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1577</link>
      <description>The Database Backup for WordPress plugin before 2.5.2 does not have CSRF check in place when updating the schedule backup settings, which could allow an attacker to make a logged in admin change them via a CSRF attack. This could lead to cases where attackers can send backup notification emails to themselves, which contain more details. Or disable the automatic backup schedule</description>
      <guid isPermaLink="false">CVE-2022-1577|2024-08-03T00:10:03.450Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1646|2024-08-03T00:10:03.715Z -- unknown -- simple%20real%20estate%20pack
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1646</link>
      <description>The Simple Real Estate Pack WordPress plugin through 1.4.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1646|2024-08-03T00:10:03.715Z</guid>
      <pubDate>Mon, 30 May 2022 08:36:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2391|2024-08-03T00:39:06.371Z -- unknown -- inspiro%20pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2391</link>
      <description>The Inspiro PRO WordPress plugin does not sanitize the portfolio slider description, allowing users with privileges as low as Contributor to inject JavaScript into the description.</description>
      <guid isPermaLink="false">CVE-2022-2391|2024-08-03T00:39:06.371Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:48:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4775|2024-08-03T01:48:40.398Z -- unknown -- geodirectory
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4775</link>
      <description>The GeoDirectory WordPress plugin before 2.2.22 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4775|2024-08-03T01:48:40.398Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:32:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4371|2024-08-03T01:34:50.156Z -- unknown -- web%20invoice
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4371</link>
      <description>The Web Invoice WordPress plugin through 2.1.3 does not properly sanitize and escape a parameter before using it in a SQL statement, leading to a SQL Injection exploitable by high privilege users such as admin by default. However, depending on the plugin configuration, other users, such as subscriber could exploit this as well</description>
      <guid isPermaLink="false">CVE-2022-4371|2024-08-03T01:34:50.156Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4475|2024-08-03T01:41:44.940Z -- unknown -- collapse-o-matic
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4475</link>
      <description>The Collapse-O-Matic WordPress plugin before 1.8.3 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2022-4475|2024-08-03T01:41:44.940Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4050|2024-08-03T01:27:54.503Z -- unknown -- joomsport
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4050</link>
      <description>The JoomSport WordPress plugin before 5.2.8 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by unauthenticated users</description>
      <guid isPermaLink="false">CVE-2022-4050|2024-08-03T01:27:54.503Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3832|2024-08-03T01:20:58.300Z -- unknown -- external%20media
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3832</link>
      <description>The External Media WordPress plugin before 1.0.36 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3832|2024-08-03T01:20:58.300Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4794|2024-08-03T01:48:40.613Z -- unknown -- aawp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4794</link>
      <description>The AAWP WordPress plugin before 3.12.3 can be used to abuse trusted domains to load malware or other files through it (Reflected File Download) to bypass firewall rules in companies.</description>
      <guid isPermaLink="false">CVE-2022-4794|2024-08-03T01:48:40.613Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1576|2024-08-03T00:10:03.924Z -- unknown -- wp%20maintenance%20mode%20%26%20coming%20soon
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1576</link>
      <description>The WP Maintenance Mode &amp; Coming Soon WordPress plugin before 2.4.5 is lacking CSRF when emptying the subscribed users list, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1576|2024-08-03T00:10:03.924Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:55:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1764|2024-08-03T00:17:00.538Z -- unknown -- wp-chgfontsize
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1764</link>
      <description>The WP-chgFontSize WordPress plugin through 1.8 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping</description>
      <guid isPermaLink="false">CVE-2022-1764|2024-08-03T00:17:00.538Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4442|2024-08-03T01:41:44.606Z -- unknown -- custom%20post%20types%20and%20custom%20fields%20creator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4442</link>
      <description>The Custom Post Types and Custom Fields creator WordPress plugin before 2.3.3 does not sanitize and escape some of its settings, which could allow high-privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example, in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4442|2024-08-03T01:41:44.606Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4417|2024-08-03T01:41:44.631Z -- unknown -- wp%20cerber%20security%2C%20anti-spam%20%26%20malware%20scan
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4417</link>
      <description>The WP Cerber Security, Anti-spam &amp; Malware Scan WordPress plugin before 9.3.3 does not properly block access to the REST API users endpoint when the blog is in a subdirectory, which could allow attackers to bypass the restriction in place and list users</description>
      <guid isPermaLink="false">CVE-2022-4417|2024-08-03T01:41:44.631Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1905|2024-08-03T00:17:00.944Z -- unknown -- events%20made%20easy
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1905</link>
      <description>The Events Made Easy WordPress plugin before 2.2.81 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2022-1905|2024-08-03T00:17:00.944Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2763|2024-08-03T00:46:04.506Z -- unknown -- wp%20socializer%20%E2%80%93%20simple%20%26%20easy%20social%20media%20share%20icons
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2763</link>
      <description>The WP Socializer WordPress plugin before 7.3 does not sanitise and escape some of its Icons settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2763|2024-08-03T00:46:04.506Z</guid>
      <pubDate>Mon, 03 Oct 2022 13:45:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3848|2024-08-03T01:20:58.449Z -- unknown -- wp%20user%20merger
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3848</link>
      <description>The WP User Merger WordPress plugin before 1.5.3 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as admin</description>
      <guid isPermaLink="false">CVE-2022-3848|2024-08-03T01:20:58.449Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1643|2024-08-03T00:10:03.791Z -- unknown -- birthdays%20widget
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1643</link>
      <description>The Birthdays Widget WordPress plugin through 1.7.18 does not sanitise and escape some of its fields, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1643|2024-08-03T00:10:03.791Z</guid>
      <pubDate>Mon, 30 May 2022 08:36:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1593|2024-08-03T00:10:03.565Z -- unknown -- site%20offline%20or%20coming%20soon
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1593</link>
      <description>The Site Offline or Coming Soon WordPress plugin through 1.6.6 does not have CSRF check in place when updating its settings, and it also lacking sanitisation as well as escaping in some of them. As a result, attackers could make a logged in admin change them and put Cross-Site Scripting payloads in them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1593|2024-08-03T00:10:03.565Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:57:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2148|2024-08-03T00:24:44.311Z -- unknown -- linkedin%20company%20updates
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2148</link>
      <description>The LinkedIn Company Updates WordPress plugin through 1.5.3 does not sanitise and escape its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2148|2024-08-03T00:24:44.311Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:36:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4664|2024-08-03T01:48:39.689Z -- unknown -- logo%20slider
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4664</link>
      <description>The Logo Slider WordPress plugin before 3.6.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4664|2024-08-03T01:48:39.689Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4324|2024-08-03T01:34:50.061Z -- unknown -- custom%20field%20template
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4324</link>
      <description>The Custom Field Template WordPress plugin before 2.5.8 unserialises the content of an imported file, which could lead to PHP object injections issues when a high privilege user import (intentionally or not) a malicious Customizer Styling file and a suitable gadget chain is present on the blog.</description>
      <guid isPermaLink="false">CVE-2022-4324|2024-08-03T01:34:50.061Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3419|2024-08-03T01:07:06.705Z -- unknown -- automatic%20user%20roles%20switcher
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3419</link>
      <description>The Automatic User Roles Switcher WordPress plugin before 1.1.2 does not have authorisation and proper CSRF checks, allowing any authenticated users like subscriber to add any role to themselves, such as administrator</description>
      <guid isPermaLink="false">CVE-2022-3419|2024-08-03T01:07:06.705Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4359|2024-08-03T01:34:50.174Z -- unknown -- wp%20rss%20by%20publishers
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4359</link>
      <description>The WP RSS By Publishers WordPress plugin through 0.1 does not properly sanitize and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2022-4359|2024-08-03T01:34:50.174Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1843|2024-08-03T00:17:00.824Z -- unknown -- mailpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1843</link>
      <description>The MailPress WordPress plugin through 7.2.1 does not have CSRF checks in various places, which could allow attackers to make a logged in admin change the settings, purge log files and more via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2022-1843|2024-08-03T00:17:00.824Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:57:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3923|2024-08-03T01:20:59.111Z -- unknown -- activecampaign%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3923</link>
      <description>The ActiveCampaign for WooCommerce WordPress plugin before 1.9.8 does not have authorisation check when cleaning up its error logs via an AJAX action, which could allow any authenticated users, such as subscriber to call it and remove error logs.</description>
      <guid isPermaLink="false">CVE-2022-3923|2024-08-03T01:20:59.111Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2409|2024-08-03T00:39:07.672Z -- unknown -- rough%20chart
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2409</link>
      <description>The Rough Chart WordPress plugin through 1.0.0 does not properly escape chart data label, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2409|2024-08-03T00:39:07.672Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:49:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4827|2024-08-03T01:55:45.347Z -- unknown -- wp%20tiles
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4827</link>
      <description>The WP Tiles WordPress plugin through 1.1.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4827|2024-08-03T01:55:45.347Z</guid>
      <pubDate>Mon, 10 Apr 2023 13:18:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2190|2024-08-03T00:32:08.736Z -- unknown -- gallery%20plugin%20for%20wordpress%20%E2%80%93%20envira%20photo%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2190</link>
      <description>The Gallery Plugin for WordPress plugin before 1.8.4.7 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2022-2190|2024-08-03T00:32:08.736Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1801|2024-08-03T00:16:59.881Z -- unknown -- very%20simple%20contact%20form
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1801</link>
      <description>The Very Simple Contact Form WordPress plugin before 11.6 exposes the solution to the captcha in the rendered contact form, both as hidden input fields and as plain text in the page, making it very easy for bots to bypass the captcha check, rendering the page a likely target for spam bots.</description>
      <guid isPermaLink="false">CVE-2022-1801|2024-08-03T00:16:59.881Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:25:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2375|2024-08-03T00:32:09.626Z -- unknown -- wp%20sticky%20button%20%E2%80%93%20click%20to%20chat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2375</link>
      <description>The WP Sticky Button WordPress plugin before 1.4.1 does not have authorisation and CSRF checks when saving its settings, allowing unauthenticated users to update them. Furthermore, due to the lack of escaping in some of them, it could lead to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2022-2375|2024-08-03T00:32:09.626Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:01:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4466|2024-08-03T01:41:45.000Z -- unknown -- wordpress%20infinite%20scroll
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4466</link>
      <description>The WordPress Infinite Scroll WordPress plugin before 5.6.0.3 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-4466|2024-08-03T01:41:45.000Z</guid>
      <pubDate>Mon, 13 Mar 2023 16:03:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1574|2024-08-03T00:10:03.721Z -- unknown -- html2wp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1574</link>
      <description>The HTML2WP WordPress plugin through 1.0.0 does not have authorisation and CSRF checks when importing files, and does not validate them, as a result, unauthenticated attackers can upload arbitrary files (such as PHP) on the remote server</description>
      <guid isPermaLink="false">CVE-2022-1574|2024-08-03T00:10:03.721Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:57:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2355|2024-08-03T00:32:09.598Z -- unknown -- easy%20username%20updater
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2355</link>
      <description>The Easy Username Updater WordPress plugin before 1.0.5 does not implement CSRF checks, which could allow attackers to make a logged in admin change any user's username includes the admin</description>
      <guid isPermaLink="false">CVE-2022-2355|2024-08-03T00:32:09.598Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:46:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1762|2024-08-03T00:16:59.806Z -- unknown -- iq%20block%20country
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1762</link>
      <description>The iQ Block Country WordPress plugin before 1.2.20 does not properly checks HTTP headers in order to validate the origin IP address, allowing threat actors to bypass it's block feature by spoofing the headers.</description>
      <guid isPermaLink="false">CVE-2022-1762|2024-08-03T00:16:59.806Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4763|2024-08-03T01:48:40.363Z -- unknown -- icon%20widget
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4763</link>
      <description>The Icon Widget WordPress plugin before 1.3.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4763|2024-08-03T01:48:40.363Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2370|2024-08-03T00:32:09.695Z -- unknown -- yaysmtp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2370</link>
      <description>The YaySMTP WordPress plugin before 2.2.1 does not have capability check before displaying the Mailer Credentials in JS code for the settings, allowing any authenticated users, such as subscriber to retrieve them</description>
      <guid isPermaLink="false">CVE-2022-2370|2024-08-03T00:32:09.695Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:52:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3850|2024-08-03T01:20:58.384Z -- unknown -- find%20and%20replace%20all
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3850</link>
      <description>The Find and Replace All WordPress plugin before 1.3 does not have CSRF check when replacing string, which could allow attackers to make a logged admin replace arbitrary string in database tables via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-3850|2024-08-03T01:20:58.384Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2100|2024-08-03T00:24:44.173Z -- unknown -- page%20generator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2100</link>
      <description>The Page Generator WordPress plugin before 1.6.5 does not sanitise and escape its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2100|2024-08-03T00:24:44.173Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:35:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3374|2024-08-03T01:07:06.519Z -- unknown -- ocean%20extra
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3374</link>
      <description>The Ocean Extra WordPress plugin before 2.0.5 unserialises the content of an imported file, which could lead to PHP object injections issues when a high privilege user import (intentionally or not) a malicious Customizer Styling file and a suitable gadget chain is present on the blog.</description>
      <guid isPermaLink="false">CVE-2022-3374|2024-08-03T01:07:06.519Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4115|2024-08-03T01:27:54.445Z -- unknown -- editorial%20calendar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4115</link>
      <description>The Editorial Calendar WordPress plugin before 3.8.3 does not sanitise and escape its settings, allowing users with roles as low as contributor to inject arbitrary web scripts in the plugin admin panel, enabling a Stored Cross-Site Scripting vulnerability targeting higher privileged users.</description>
      <guid isPermaLink="false">CVE-2022-4115|2024-08-03T01:27:54.445Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1990|2024-08-03T00:24:44.129Z -- unknown -- nested%20pages
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1990</link>
      <description>The Nested Pages WordPress plugin before 3.1.21 does not escape and sanitize the some of its settings, which could allow high privilege users to perform Stored Cross-Site Scripting attacks when the unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1990|2024-08-03T00:24:44.129Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:59:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1977|2024-08-03T00:24:44.033Z -- unknown -- import%20export%20all%20wordpress%20images%2C%20users%20%26%20post%20types
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1977</link>
      <description>The Import Export All WordPress Images, Users &amp; Post Types WordPress plugin before 6.5.3 does not fully validate the file to be imported via an URL before making an HTTP request to it, which could allow high privilege users such as admin to perform Blind SSRF attacks</description>
      <guid isPermaLink="false">CVE-2022-1977|2024-08-03T00:24:44.033Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:59:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4458|2024-08-03T01:41:44.608Z -- unknown -- amr%20shortcode%20any%20widget
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4458</link>
      <description>The amr shortcode any widget WordPress plugin through 4.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4458|2024-08-03T01:41:44.608Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3359|2024-08-03T01:07:06.571Z -- unknown -- shortcodes%20and%20extra%20features%20for%20phlox%20theme
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3359</link>
      <description>The Shortcodes and extra features for Phlox theme WordPress plugin before 2.10.7 unserializes the content of an imported file, which could lead to PHP object injection when a user imports (intentionally or not) a malicious file and a suitable gadget chain is present on the blog.</description>
      <guid isPermaLink="false">CVE-2022-3359|2024-08-03T01:07:06.571Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2628|2024-08-03T00:46:03.288Z -- unknown -- dsgvo%20all%20in%20one%20for%20wp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2628</link>
      <description>The DSGVO All in one for WP WordPress plugin before 4.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2628|2024-08-03T00:46:03.288Z</guid>
      <pubDate>Mon, 03 Oct 2022 13:45:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4833|2024-08-03T01:55:46.192Z -- unknown -- yourchannel%3A%20everything%20you%20want%20in%20a%20youtube%20plugin.
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4833</link>
      <description>The YourChannel: Everything you want in a YouTube plugin WordPress plugin before 1.2.3 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4833|2024-08-03T01:55:46.192Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2034|2024-08-03T00:24:43.797Z -- unknown -- sensei%20lms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2034</link>
      <description>The Sensei LMS WordPress plugin before 4.5.0 does not have proper permissions set in one of its REST endpoint, allowing unauthenticated users to access private messages sent to teachers</description>
      <guid isPermaLink="false">CVE-2022-2034|2024-08-03T00:24:43.797Z</guid>
      <pubDate>Mon, 29 Aug 2022 14:40:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3380|2024-08-03T01:07:06.554Z -- unknown -- customizer%20export%2Fimport
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3380</link>
      <description>The Customizer Export/Import WordPress plugin before 0.9.5 unserializes the content of an imported file, which could lead to PHP object injection issues when an admin imports (intentionally or not) a malicious file and a suitable gadget chain is present on the blog.</description>
      <guid isPermaLink="false">CVE-2022-3380|2024-08-03T01:07:06.554Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4148|2024-08-03T01:27:54.502Z -- unknown -- wp%20oauth%20server%20%28oauth%20authentication%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4148</link>
      <description>The WP OAuth Server (OAuth Authentication) WordPress plugin before 4.3.0 has a flawed CSRF and authorisation check when deleting a client, which could allow any authenticated users, such as subscriber to delete arbitrary client.</description>
      <guid isPermaLink="false">CVE-2022-4148|2024-08-03T01:27:54.502Z</guid>
      <pubDate>Mon, 20 Mar 2023 15:52:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3610|2024-08-03T01:14:02.540Z -- unknown -- jeeng%20push%20notifications
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3610</link>
      <description>The Jeeng Push Notifications WordPress plugin before 2.0.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3610|2024-08-03T01:14:02.540Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3906|2024-08-03T01:20:58.477Z -- unknown -- easy%20form%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3906</link>
      <description>The Easy Form Builder WordPress plugin before 3.4.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3906|2024-08-03T01:20:58.477Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1845|2024-08-03T00:17:00.813Z -- unknown -- wp%20post%20styling
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1845</link>
      <description>The WP Post Styling WordPress plugin before 1.3.1 does not have CSRF checks in various actions, which could allow attackers to make a logged in admin delete plugin's data, update the settings, add new entries and more via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2022-1845|2024-08-03T00:17:00.813Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:57:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4305|2024-08-03T01:34:50.042Z -- unknown -- login%20as%20user%20or%20customer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4305</link>
      <description>The Login as User or Customer WordPress plugin before 3.3 lacks authorization checks to ensure that users are allowed to log in as another one, which could allow unauthenticated attackers to obtain a valid admin session.</description>
      <guid isPermaLink="false">CVE-2022-4305|2024-08-03T01:34:50.042Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4057|2024-08-03T01:27:54.476Z -- unknown -- autoptimize
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4057</link>
      <description>The Autoptimize WordPress plugin before 3.1.0 uses an easily guessable path to store plugin's exported settings and logs.</description>
      <guid isPermaLink="false">CVE-2022-4057|2024-08-03T01:27:54.476Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2114|2024-08-03T00:24:44.274Z -- unknown -- data%20tables%20generator%20by%20supsystic
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2114</link>
      <description>The Data Tables Generator by Supsystic WordPress plugin before 1.10.20 does not sanitise and escape some of its Table settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2114|2024-08-03T00:24:44.274Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:36:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1625|2024-08-03T00:10:03.782Z -- unknown -- new%20user%20approve
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1625</link>
      <description>The New User Approve WordPress plugin before 2.4 does not have CSRF check in place when updating its settings and adding invitation codes, which could allow attackers to add invitation codes (for bypassing the provided restrictions) and to change plugin settings by tricking admin users into visiting specially crafted websites.</description>
      <guid isPermaLink="false">CVE-2022-1625|2024-08-03T00:10:03.782Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:57:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2151|2024-08-03T00:24:44.266Z -- unknown -- best%20contact%20management%20software%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2151</link>
      <description>The Best Contact Management Software WordPress plugin through 3.7.3 does not sanitise and escape its settings, allowing high privilege users such as admin to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2151|2024-08-03T00:24:44.266Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:36:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1573|2024-08-03T00:10:03.374Z -- unknown -- html2wp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1573</link>
      <description>The HTML2WP WordPress plugin through 1.0.0 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them</description>
      <guid isPermaLink="false">CVE-2022-1573|2024-08-03T00:10:03.374Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:56:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4383|2024-08-03T01:41:44.402Z -- unknown -- cbx%20petition%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4383</link>
      <description>The CBX Petition for WordPress plugin through 1.0.3 does not properly sanitize and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection.</description>
      <guid isPermaLink="false">CVE-2022-4383|2024-08-03T01:41:44.402Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1580|2024-08-03T00:10:03.579Z -- unknown -- site%20offline%20or%20coming%20soon%20or%20maintenance%20mode
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1580</link>
      <description>The Site Offline Or Coming Soon Or Maintenance Mode WordPress plugin before 1.5.3 prevents users from accessing a website but does not do so if the URL contained certain keywords. Adding those keywords to the URL's query string would bypass the plugin's main feature.</description>
      <guid isPermaLink="false">CVE-2022-1580|2024-08-03T00:10:03.579Z</guid>
      <pubDate>Mon, 19 Sep 2022 14:00:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2369|2024-08-03T00:32:09.470Z -- unknown -- yaysmtp%20%E2%80%93%20simple%20wp%20smtp%20mail
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2369</link>
      <description>The YaySMTP WordPress plugin before 2.2.1 does not have capability check in an AJAX action, allowing any logged in users, such as subscriber to view the Logs of the plugin</description>
      <guid isPermaLink="false">CVE-2022-2369|2024-08-03T00:32:09.470Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:52:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1757|2024-08-03T00:16:59.901Z -- unknown -- pagebar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1757</link>
      <description>The pagebar WordPress plugin before 2.70 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack. Furthermore, due to the lack of sanitisation in some of them, it could also lead to Stored XSS issues</description>
      <guid isPermaLink="false">CVE-2022-1757|2024-08-03T00:16:59.901Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:56:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1672|2024-08-03T00:10:03.792Z -- unknown -- insights%20from%20google%20pagespeed
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1672</link>
      <description>The Insights from Google PageSpeed WordPress plugin before 4.0.7 does not verify for CSRF before doing various actions such as deleting Custom URLs, which could allow attackers to make a logged in admin perform such actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2022-1672|2024-08-03T00:10:03.792Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:35:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4757|2024-08-03T01:48:40.187Z -- unknown -- list%20pages%20shortcode
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4757</link>
      <description>The List Pages Shortcode WordPress plugin before 1.7.6 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4757|2024-08-03T01:48:40.187Z</guid>
      <pubDate>Mon, 27 Feb 2023 15:24:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2775|2024-08-03T00:46:04.434Z -- unknown -- fast%20flow
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2775</link>
      <description>The Fast Flow WordPress plugin before 1.2.13 does not sanitise and escape some of its Widget settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2775|2024-08-03T00:46:04.434Z</guid>
      <pubDate>Mon, 05 Sep 2022 12:35:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2398|2024-08-03T00:39:06.414Z -- unknown -- wordpress%20comments%20fields
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2398</link>
      <description>The WordPress Comments Fields WordPress plugin before 4.1 does not escape Field Error Message, which could allow high-privileged users to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2022-2398|2024-08-03T00:39:06.414Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:48:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1684|2024-08-03T00:10:03.810Z -- unknown -- cube%20slider
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1684</link>
      <description>The Cube Slider WordPress plugin through 1.2 does not sanitise and escape the idslider parameter before using it in various SQL queries, leading to SQL Injections exploitable by high privileged users such as admin</description>
      <guid isPermaLink="false">CVE-2022-1684|2024-08-03T00:10:03.810Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1889|2024-08-03T00:17:00.922Z -- unknown -- newsletter%20%E2%80%93%20send%20awesome%20emails%20from%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1889</link>
      <description>The Newsletter WordPress plugin before 7.4.6 does not escape and sanitise the preheader_text setting, which could allow high privilege users to perform Stored Cross-Site Scripting attacks when the unfilteredhtml is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1889|2024-08-03T00:17:00.922Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4470|2024-08-03T01:41:44.708Z -- unknown -- widgets%20for%20google%20reviews
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4470</link>
      <description>The Widgets for Google Reviews WordPress plugin before 9.8 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4470|2024-08-03T01:41:44.708Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3024|2024-08-03T00:53:00.695Z -- unknown -- bitcoin%20satoshi%20tools%20%3A%20%20faucets%2C%20visitor%20rewarder%2C%20satoshi%20games%2C%20referral%20program
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3024</link>
      <description>The Simple Bitcoin Faucets WordPress plugin through 1.7.0 does not have any authorisation and CSRF in an AJAX action, allowing any authenticated users, such as subscribers to call it and add/delete/edit Bonds. Furthermore, due to the lack of sanitisation and escaping, it could also lead to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2022-3024|2024-08-03T00:53:00.695Z</guid>
      <pubDate>Mon, 26 Sep 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3350|2024-08-03T01:07:06.697Z -- unknown -- contact%20bank%20%E2%80%93%20contact%20form%20builder%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3350</link>
      <description>The Contact Bank WordPress plugin through 3.0.30 does not sanitise and escape some of its Form settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3350|2024-08-03T01:07:06.697Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4155|2024-08-03T01:27:54.493Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4155</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the wp_user_id GET parameter before concatenating it to an SQL query in management-show-user.php. This may allow malicious users with administrator privileges (i.e. on multisite WordPress configurations) to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4155|2024-08-03T01:27:54.493Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:27:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3907|2024-08-03T01:20:58.790Z -- unknown -- clerk
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3907</link>
      <description>The Clerk WordPress plugin before 4.0.0 is affected by time-based attacks in the validation function for all API requests due to the usage of comparison operators to verify API keys against the ones stored in the site options.</description>
      <guid isPermaLink="false">CVE-2022-3907|2024-08-03T01:20:58.790Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4577|2024-08-03T01:41:45.642Z -- unknown -- easy%20testimonials
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4577</link>
      <description>The Easy Testimonials WordPress plugin before 3.9.3 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4577|2024-08-03T01:41:45.642Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2219|2024-08-03T00:32:08.902Z -- unknown -- unyson
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2219</link>
      <description>The Unyson WordPress plugin before 2.7.27 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2219|2024-08-03T00:32:08.902Z</guid>
      <pubDate>Mon, 25 Jul 2022 12:47:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3343|2024-08-03T01:07:06.532Z -- unknown -- wpqa%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3343</link>
      <description>The WPQA Builder WordPress plugin before 5.9.3 (which is a companion plugin used with Discy and Himer Discy WordPress themes) incorrectly tries to validate that a user already follows another in the wpqa_following_you_ajax action, allowing a user to inflate their score on the site by having another user send repeated follow actions to them.</description>
      <guid isPermaLink="false">CVE-2022-3343|2024-08-03T01:07:06.532Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2388|2024-08-03T00:39:06.410Z -- unknown -- wp%20coder%20%E2%80%93%20add%20custom%20html%2C%20css%20and%20js%20code
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2388</link>
      <description>The WP Coder WordPress plugin before 2.5.3 does not have CSRF check in place when deleting code created by the plugin, which could allow attackers to make a logged in admin delete arbitrary ones via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-2388|2024-08-03T00:39:06.410Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:02:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4464|2024-08-03T01:41:44.633Z -- unknown -- themify%20portfolio%20post
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4464</link>
      <description>Themify Portfolio Post WordPress plugin before 1.2.1 does not validate and escapes some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as a contributor to perform Stored Cross-Site Scripting attacks, which could be used against high privileged users such as admin.</description>
      <guid isPermaLink="false">CVE-2022-4464|2024-08-03T01:41:44.633Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3856|2024-08-03T01:20:58.384Z -- unknown -- comic%20book%20management%20system
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3856</link>
      <description>The Comic Book Management System WordPress plugin before 2.2.0 does not sanitize and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as Admin.</description>
      <guid isPermaLink="false">CVE-2022-3856|2024-08-03T01:20:58.384Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3490|2024-08-03T01:14:01.484Z -- unknown -- checkout%20field%20editor%20%28checkout%20manager%29%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3490</link>
      <description>The Checkout Field Editor (Checkout Manager) for WooCommerce WordPress plugin before 1.8.0 unserializes user input provided via the settings, which could allow high privilege users such as admin to perform PHP Object Injection when a suitable gadget is present</description>
      <guid isPermaLink="false">CVE-2022-3490|2024-08-03T01:14:01.484Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2198|2024-08-03T00:32:08.752Z -- unknown -- wpqa%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2198</link>
      <description>The WPQA Builder WordPress plugin before 5.7 which is a companion plugin to the Hilmer and Discy , does not check authorization before displaying private messages, allowing any logged in user to read other users private message using the message id, which can easily be brute forced.</description>
      <guid isPermaLink="false">CVE-2022-2198|2024-08-03T00:32:08.752Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:00:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4678|2024-08-03T01:48:39.494Z -- unknown -- templatesnext%20toolkit
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4678</link>
      <description>The TemplatesNext ToolKit WordPress plugin before 3.2.8 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-4678|2024-08-03T01:48:39.494Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2341|2024-08-03T00:32:09.764Z -- unknown -- simple%20page%20transition
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2341</link>
      <description>The Simple Page Transition WordPress plugin through 1.4.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2341|2024-08-03T00:32:09.764Z</guid>
      <pubDate>Mon, 25 Jul 2022 12:48:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4443|2024-08-03T01:41:44.426Z -- unknown -- brutebank
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4443</link>
      <description>The BruteBank WordPress plugin before 1.9 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged-in admin change them via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2022-4443|2024-08-03T01:41:44.426Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4491|2024-08-03T01:41:45.144Z -- unknown -- wp-table%20reloaded
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4491</link>
      <description>The WP-Table Reloaded WordPress plugin through 1.9.4 does not validate and escapes some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as a contributor to perform Stored Cross-Site Scripting attacks, which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4491|2024-08-03T01:41:45.144Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2424|2024-08-03T00:39:07.557Z -- unknown -- google%20maps%20anywhere
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2424</link>
      <description>The Google Maps Anywhere WordPress plugin through 1.2.6.3 does not sanitise and escape any of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2424|2024-08-03T00:39:07.557Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:50:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3208|2024-08-03T01:00:10.619Z -- unknown -- simple%20file%20list
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3208</link>
      <description>The Simple File List WordPress plugin before 4.4.12 does not implement nonce checks, which could allow attackers to make a logged in admin create new page and change it's content via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2022-3208|2024-08-03T01:00:10.619Z</guid>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2167|2024-08-03T00:32:07.967Z -- unknown -- newspaper
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2167</link>
      <description>The Newspaper WordPress theme before 12 does not sanitise a parameter before outputting it back in an HTML attribute via an AJAX action, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2167|2024-08-03T00:32:07.967Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4487|2024-08-03T01:41:45.425Z -- unknown -- easy%20accordion
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4487</link>
      <description>The Easy Accordion WordPress plugin before 2.2.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4487|2024-08-03T01:41:45.425Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4099|2024-08-03T01:27:54.387Z -- unknown -- joy%20of%20text%20lite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4099</link>
      <description>The Joy Of Text Lite WordPress plugin before 2.3.1 does not properly sanitise and escape some parameters before using them in SQL statements accessible to unauthenticated users, leading to unauthenticated SQL injection</description>
      <guid isPermaLink="false">CVE-2022-4099|2024-08-03T01:27:54.387Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2554|2024-08-03T00:39:08.043Z -- unknown -- enable%20media%20replace
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2554</link>
      <description>The Enable Media Replace WordPress plugin before 4.0.0 does not ensure that renamed files are moved to the Upload folder, which could allow high privilege users such as admin to move them outside to the web root directory via a path traversal attack for example</description>
      <guid isPermaLink="false">CVE-2022-2554|2024-08-03T00:39:08.043Z</guid>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3634|2024-08-03T01:14:03.303Z -- unknown -- contact%20form%207%20database%20addon
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3634</link>
      <description>The Contact Form 7 Database Addon WordPress plugin before 1.2.6.5 does not validate data when output it back in a CSV file, which could lead to CSV injection</description>
      <guid isPermaLink="false">CVE-2022-3634|2024-08-03T01:14:03.303Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4395|2024-08-03T01:41:44.387Z -- unknown -- membership%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4395</link>
      <description>The Membership For WooCommerce WordPress plugin before 2.1.7 does not validate uploaded files, which could allow unauthenticated users to upload arbitrary files, such as malicious PHP code, and achieve RCE.</description>
      <guid isPermaLink="false">CVE-2022-4395|2024-08-03T01:41:44.387Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2362|2024-08-03T00:32:09.513Z -- unknown -- download%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2362</link>
      <description>The Download Manager WordPress plugin before 3.2.50 prioritizes getting a visitor's IP from certain HTTP headers over PHP's REMOTE_ADDR, which makes it possible to bypass IP-based download blocking restrictions.</description>
      <guid isPermaLink="false">CVE-2022-2362|2024-08-03T00:32:09.513Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:01:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4445|2024-08-03T01:41:44.481Z -- unknown -- fl3r%20feelbox
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4445</link>
      <description>The FL3R FeelBox WordPress plugin through 8.1 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection.</description>
      <guid isPermaLink="false">CVE-2022-4445|2024-08-03T01:41:44.481Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4552|2024-08-03T01:41:45.631Z -- unknown -- fl3r%20feelbox
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4552</link>
      <description>The FL3R FeelBox WordPress plugin through 8.1 does not have CSRF check when updating its settings, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-4552|2024-08-03T01:41:45.631Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3417|2024-08-03T01:07:06.583Z -- unknown -- wptouch
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3417</link>
      <description>The WPtouch WordPress plugin before 4.3.45 unserialises the content of an imported settings file, which could lead to PHP object injections issues when an user import (intentionally or not) a malicious settings file and a suitable gadget chain is present on the blog.</description>
      <guid isPermaLink="false">CVE-2022-3417|2024-08-03T01:07:06.583Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1953|2024-08-03T00:24:42.631Z -- unknown -- product%20configurator%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1953</link>
      <description>The Product Configurator for WooCommerce WordPress plugin before 1.2.32 suffers from an arbitrary file deletion vulnerability via an AJAX action, accessible to unauthenticated users, which accepts user input that is being used in a path and passed to unlink() without validation first</description>
      <guid isPermaLink="false">CVE-2022-1953|2024-08-03T00:24:42.631Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:58:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3036|2024-08-03T01:00:08.564Z -- unknown -- gettext%20override%20translations
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3036</link>
      <description>The Gettext override translations WordPress plugin before 2.0.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3036|2024-08-03T01:00:08.564Z</guid>
      <pubDate>Mon, 19 Sep 2022 14:01:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3934|2024-08-03T01:27:53.042Z -- unknown -- flatpm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3934</link>
      <description>The FlatPM WordPress plugin before 3.0.13 does not sanitise and escape some parameters before outputting them back in pages, leading to Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2022-3934|2024-08-03T01:27:53.042Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4297|2024-08-03T01:34:49.994Z -- unknown -- wp%20autocomplete%20search
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4297</link>
      <description>The WP AutoComplete Search WordPress plugin through 1.0.4 does not sanitise and escape a parameter before using it in a SQL statement via an AJAX available to unauthenticated users, leading to an unauthenticated SQL injection</description>
      <guid isPermaLink="false">CVE-2022-4297|2024-08-03T01:34:49.994Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4017|2024-08-03T01:27:54.119Z -- unknown -- booster%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4017</link>
      <description>The Booster for WooCommerce WordPress plugin before 6.0.1, Booster Plus for WooCommerce WordPress plugin before 6.0.1, Booster Elite for WooCommerce WordPress plugin before 6.0.1 have either flawed CSRF checks or are missing them completely in numerous places, allowing attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2022-4017|2024-08-03T01:27:54.119Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4063|2024-08-03T01:27:54.195Z -- unknown -- inpost%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4063</link>
      <description>The InPost Gallery WordPress plugin before 2.1.4.1 insecurely uses PHP's extract() function when rendering HTML views, allowing attackers to force the inclusion of malicious files &amp; URLs, which may enable them to run code on servers.</description>
      <guid isPermaLink="false">CVE-2022-4063|2024-08-03T01:27:54.195Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1618|2024-08-03T00:10:03.797Z -- unknown -- coru%20lfmember
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1618</link>
      <description>The Coru LFMember WordPress plugin through 1.0.2 does not have CSRF check in place when adding a new game, and is lacking sanitisation as well as escaping in their settings, allowing attacker to make a logged in admin add an arbitrary game with XSS payloads</description>
      <guid isPermaLink="false">CVE-2022-1618|2024-08-03T00:10:03.797Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:52:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4625|2024-08-03T01:48:39.505Z -- unknown -- login%20logout%20menu
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4625</link>
      <description>The Login Logout Menu WordPress plugin before 1.4.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4625|2024-08-03T01:48:39.505Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3855|2024-08-03T01:20:58.657Z -- unknown -- 404%20to%20start
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3855</link>
      <description>The 404 to Start WordPress plugin through 1.6.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3855|2024-08-03T01:20:58.657Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4381|2024-08-03T01:41:44.631Z -- unknown -- popup%20maker
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4381</link>
      <description>The Popup Maker WordPress plugin before 1.16.9 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4381|2024-08-03T01:41:44.631Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4268|2024-08-03T01:34:49.939Z -- unknown -- plugin%20logic
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4268</link>
      <description>The Plugin Logic WordPress plugin before 1.0.8 does not sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2022-4268|2024-08-03T01:34:49.939Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:27:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1939|2024-08-03T00:24:42.623Z -- unknown -- allow%20svg%20files
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1939</link>
      <description>The Allow svg files WordPress plugin before 1.1 does not properly validate uploaded files, which could allow high privilege users such as admin to upload PHP files even when they are not allowed to</description>
      <guid isPermaLink="false">CVE-2022-1939|2024-08-03T00:24:42.623Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2173|2024-08-03T00:32:08.615Z -- unknown -- advanced%20database%20cleaner
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2173</link>
      <description>The Advanced Database Cleaner WordPress plugin before 3.1.1 does not escape numerous generated URLs before outputting them back in href attributes of admin dashboard pages, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2173|2024-08-03T00:32:08.615Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:36:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1763|2024-08-03T00:16:59.872Z -- unknown -- static%20page%20extended
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1763</link>
      <description>Due to missing checks the Static Page eXtended WordPress plugin through 2.1 is vulnerable to CSRF attacks which allows changing the plugin settings, including required user levels for specific features. This could also lead to Stored Cross-Site Scripting due to the lack of escaping in some of the settings</description>
      <guid isPermaLink="false">CVE-2022-1763|2024-08-03T00:16:59.872Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4509|2024-08-03T01:41:45.020Z -- unknown -- content%20control
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4509</link>
      <description>The Content Control WordPress plugin before 1.1.10 does not validate and escapes some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as a contributor to perform Stored Cross-Site Scripting attacks, which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4509|2024-08-03T01:41:45.020Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4668|2024-08-03T01:48:39.789Z -- unknown -- easy%20appointments
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4668</link>
      <description>The Easy Appointments WordPress plugin before 3.11.2 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4668|2024-08-03T01:48:39.789Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3603|2024-08-03T01:14:03.251Z -- unknown -- export%20customers%20list%20csv%20for%20woocommerce%2C%20wordpress%20users%20csv%2C%20export%20guest%20customer%20list
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3603</link>
      <description>The Export customers list csv for WooCommerce, WordPress users csv, export Guest customer list WordPress plugin before 2.0.69 does not validate data when outputting it back in a CSV file, which could lead to CSV injection.</description>
      <guid isPermaLink="false">CVE-2022-3603|2024-08-03T01:14:03.251Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1630|2024-08-03T00:10:03.946Z -- unknown -- wp-email
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1630</link>
      <description>The WP-EMail WordPress plugin before 2.69.0 does not protect its log deletion functionality with nonce checks, allowing attacker to make a logged in admin delete logs via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1630|2024-08-03T00:10:03.946Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:25:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1933|2024-08-03T00:17:01.043Z -- unknown -- cdi%20%E2%80%93%20collect%20and%20deliver%20interface%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1933</link>
      <description>The CDI WordPress plugin before 5.1.9 does not sanitise and escape a parameter before outputting it back in the response of an AJAX action (available to both unauthenticated and authenticated users), leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-1933|2024-08-03T00:17:01.043Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:35:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1903|2024-08-03T00:17:00.971Z -- unknown -- armember%20%E2%80%93%20membership%20plugin%2C%20content%20restriction%2C%20member%20levels%2C%20user%20profile%20%26%20user%20signup
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1903</link>
      <description>The ARMember WordPress plugin before 3.4.8 is vulnerable to account takeover (even the administrator) due to missing nonce and authorization checks in an AJAX action available to unauthenticated users, allowing them to change the password of arbitrary users by knowing their username</description>
      <guid isPermaLink="false">CVE-2022-1903|2024-08-03T00:17:00.971Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:58:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4838|2024-08-03T01:55:45.769Z -- unknown -- clean%20login
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4838</link>
      <description>The Clean Login WordPress plugin before 1.13.7 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4838|2024-08-03T01:55:45.769Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3600|2024-08-03T01:14:02.102Z -- unknown -- easy%20digital%20downloads
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3600</link>
      <description>The Easy Digital Downloads WordPress plugin before 3.1.0.2 does not validate data when its output in a CSV file, which could lead to CSV injection.</description>
      <guid isPermaLink="false">CVE-2022-3600|2024-08-03T01:14:02.102Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4102|2024-08-03T01:27:54.498Z -- unknown -- royal%20elementor%20addons%20%28elementor%20templates%2C%20post%20grid%2C%20mega%20menu%20%26%20header%20footer%20builder%2C%20woocommerce%20builder%2C%20product%20grid%2C%20slider%2C%20parallax%20image%20%26%20other%20free%20elementor%20widgets%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4102</link>
      <description>The Royal Elementor Addons WordPress plugin before 1.3.56 does not have authorization and CSRF checks when deleting a template and does not ensure that the post to be deleted is a template. This could allow any authenticated users, such as subscribers, to delete arbitrary posts assuming they know the related slug.</description>
      <guid isPermaLink="false">CVE-2022-4102|2024-08-03T01:27:54.498Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4783|2024-08-03T01:48:40.579Z -- unknown -- youtube%20channel%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4783</link>
      <description>The Youtube Channel Gallery WordPress plugin through 2.4 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4783|2024-08-03T01:48:40.579Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3860|2024-08-03T01:20:58.327Z -- unknown -- visual%20email%20designer%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3860</link>
      <description>The Visual Email Designer for WooCommerce WordPress plugin before 1.7.2 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as author.</description>
      <guid isPermaLink="false">CVE-2022-3860|2024-08-03T01:20:58.327Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:53:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4623|2024-08-03T01:48:40.387Z -- unknown -- nd%20shortcodes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4623</link>
      <description>The ND Shortcodes WordPress plugin before 7.0 does not validate and escape numerous of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4623|2024-08-03T01:48:40.387Z</guid>
      <pubDate>Tue, 04 Jul 2023 07:23:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3128|2024-08-03T01:00:10.523Z -- unknown -- donation%20thermometer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3128</link>
      <description>The Donation Thermometer WordPress plugin before 2.1.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3128|2024-08-03T01:00:10.523Z</guid>
      <pubDate>Mon, 03 Oct 2022 13:45:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2260|2024-08-03T00:32:09.543Z -- unknown -- givewp%20%E2%80%93%20donation%20plugin%20and%20fundraising%20platform
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2260</link>
      <description>The GiveWP WordPress plugin before 2.21.3 does not have CSRF in place when exporting data, and does not validate the exporting parameters such as dates, which could allow attackers to make a logged in admin DoS the web server via a CSRF attack as the plugin will try to retrieve data from the database many times which leads to overwhelm the target's CPU.</description>
      <guid isPermaLink="false">CVE-2022-2260|2024-08-03T00:32:09.543Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:50:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3125|2024-08-03T01:00:10.419Z -- unknown -- frontend%20file%20manager%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3125</link>
      <description>The Frontend File Manager Plugin WordPress plugin before 21.3 allows any authenticated users, such as subscriber, to rename a file to an arbitrary extension, like PHP, which could allow them to basically be able to upload arbitrary files on the server and achieve RCE</description>
      <guid isPermaLink="false">CVE-2022-3125|2024-08-03T01:00:10.419Z</guid>
      <pubDate>Mon, 03 Oct 2022 13:45:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1844|2024-08-03T00:17:00.742Z -- unknown -- wp%20sentry
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1844</link>
      <description>The WP Sentry WordPress plugin through 1.0 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping as well</description>
      <guid isPermaLink="false">CVE-2022-1844|2024-08-03T00:17:00.742Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:57:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3142|2024-08-03T01:00:10.258Z -- unknown -- nex-forms%20%E2%80%93%20ultimate%20form%20builder%20%E2%80%93%20contact%20forms%20and%20much%20more
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3142</link>
      <description>The NEX-Forms WordPress plugin before 7.9.7 does not properly sanitise and escape user input before using it in SQL statements, leading to SQL injections. The attack can be executed by anyone who is permitted to view the forms statistics chart, by default administrators, however can be configured otherwise via the plugin settings.</description>
      <guid isPermaLink="false">CVE-2022-3142|2024-08-03T01:00:10.258Z</guid>
      <pubDate>Mon, 19 Sep 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4453|2024-08-03T01:41:44.633Z -- unknown -- 3d%20flipbook
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4453</link>
      <description>The 3D FlipBook WordPress plugin through 1.13.2 does not validate or escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as Contributor to perform Stored Cross-Site Scripting attacks against high privilege users like administrators.</description>
      <guid isPermaLink="false">CVE-2022-4453|2024-08-03T01:41:44.633Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3511|2024-08-03T01:14:02.488Z -- unknown -- awesome%20support
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3511</link>
      <description>The Awesome Support WordPress plugin before 6.1.2 does not ensure that the exported tickets archive to be downloaded belongs to the user making the request, allowing a low privileged user, such as subscriber to download arbitrary exported tickets via an IDOR vector</description>
      <guid isPermaLink="false">CVE-2022-3511|2024-08-03T01:14:02.488Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3830|2024-08-03T01:20:58.335Z -- unknown -- wp%20page%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3830</link>
      <description>The WP Page Builder WordPress plugin through 1.2.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3830|2024-08-03T01:20:58.335Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3679|2024-08-03T01:14:03.236Z -- unknown -- starter%20templates%20by%20kadence%20wp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3679</link>
      <description>The Starter Templates by Kadence WP WordPress plugin before 1.2.17 unserialises the content of an imported file, which could lead to PHP object injection issues when an admin import (intentionally or not) a malicious file and a suitable gadget chain is present on the blog.</description>
      <guid isPermaLink="false">CVE-2022-3679|2024-08-03T01:14:03.236Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2180|2024-08-03T00:32:08.913Z -- unknown -- greyd_suite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2180</link>
      <description>The GREYD.SUITE WordPress theme does not properly validate uploaded custom font packages, and does not perform any authorization or csrf checks, allowing an unauthenticated attacker to upload arbitrary files including php source files, leading to possible remote code execution (RCE).</description>
      <guid isPermaLink="false">CVE-2022-2180|2024-08-03T00:32:08.913Z</guid>
      <pubDate>Mon, 15 Aug 2022 08:36:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3909|2024-08-03T01:20:58.777Z -- unknown -- add%20comments
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3909</link>
      <description>The Add Comments WordPress plugin through 1.0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3909|2024-08-03T01:20:58.777Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1814|2024-08-03T00:17:00.389Z -- unknown -- wp%20admin%20style
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1814</link>
      <description>The WP Admin Style WordPress plugin through 0.1.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1814|2024-08-03T00:17:00.389Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:43:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2123|2024-08-03T00:24:44.249Z -- unknown -- wp%20opt-in
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2123</link>
      <description>The WP Opt-in WordPress plugin through 1.4.1 is vulnerable to CSRF which allows changed plugin settings and can be used for sending spam emails.</description>
      <guid isPermaLink="false">CVE-2022-2123|2024-08-03T00:24:44.249Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:57:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1828|2024-08-03T00:17:00.745Z -- unknown -- pdf24%20articles%20to%20pdf
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1828</link>
      <description>The PDF24 Articles To PDF WordPress plugin through 4.2.2 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1828|2024-08-03T00:17:00.745Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4656|2024-08-03T01:48:38.893Z -- unknown -- wp%20visitor%20statistics%20%28real%20time%20traffic%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4656</link>
      <description>The WP Visitor Statistics (Real Time Traffic) WordPress plugin before 6.5 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4656|2024-08-03T01:48:38.893Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2146|2024-08-03T00:24:44.217Z -- unknown -- import%20csv%20files
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2146</link>
      <description>The Import CSV Files WordPress plugin through 1.0 does not sanitise and escaped imported data before outputting them back in a page, and is lacking CSRF check when performing such action as well, resulting in a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2146|2024-08-03T00:24:44.217Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:36:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4747|2024-08-03T01:48:40.186Z -- unknown -- post%20category%20image%20with%20grid%20and%20slider
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4747</link>
      <description>The Post Category Image With Grid and Slider WordPress plugin before 1.4.8 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4747|2024-08-03T01:48:40.186Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2599|2024-08-03T00:46:03.068Z -- unknown -- anti-malware%20security%20and%20brute-force%20firewall
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2599</link>
      <description>The Anti-Malware Security and Brute-Force Firewall WordPress plugin before 4.21.83 does not sanitise and escape some parameters before outputting them back in an admin dashboard, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2599|2024-08-03T00:46:03.068Z</guid>
      <pubDate>Mon, 29 Aug 2022 17:15:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4657|2024-08-03T01:48:39.494Z -- unknown -- restaurant%20menu
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4657</link>
      <description>The Restaurant Menu WordPress plugin before 2.3.6 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4657|2024-08-03T01:48:39.494Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1896|2024-08-03T00:17:00.962Z -- unknown -- underconstruction
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1896</link>
      <description>The underConstruction WordPress plugin before 1.21 does not sanitise or escape the "Display a custom page using your own HTML" setting before outputting it, allowing high privilege users to perform Cross-Site Scripting attacks even when the unfiletred_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-1896|2024-08-03T00:17:00.962Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4242|2024-08-03T01:34:49.867Z -- unknown -- wp%20google%20review%20slider
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4242</link>
      <description>The WP Google Review Slider WordPress plugin before 11.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4242|2024-08-03T01:34:49.867Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2152|2024-08-03T00:24:44.254Z -- unknown -- duplicate%20page%20and%20post
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2152</link>
      <description>The Duplicate Page and Post WordPress plugin before 2.8 does not sanitise and escape its settings, allowing high privilege users such as admin to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2152|2024-08-03T00:24:44.254Z</guid>
      <pubDate>Mon, 15 Aug 2022 08:36:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4872|2024-08-03T01:55:46.089Z -- unknown -- chained%20products
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4872</link>
      <description>The Chained Products WordPress plugin before 2.12.0 does not have authorisation and CSRF checks, as well as does not ensure that the option to be updated belong to the plugin, allowing unauthenticated attackers to set arbitrary options to 'no'</description>
      <guid isPermaLink="false">CVE-2022-4872|2024-08-03T01:55:46.089Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3837|2024-08-03T01:20:58.405Z -- unknown -- uji%20countdown
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3837</link>
      <description>The Uji Countdown WordPress plugin before 2.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3837|2024-08-03T01:20:58.405Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4777|2024-08-03T01:48:40.437Z -- unknown -- bootstrap%20shortcodes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4777</link>
      <description>The Bootstrap Shortcodes WordPress plugin through 3.4.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4777|2024-08-03T01:48:40.437Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2823|2024-08-03T00:52:59.620Z -- unknown -- slider%2C%20gallery%2C%20and%20carousel%20by%20metaslider%20%E2%80%93%20responsive%20wordpress%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2823</link>
      <description>The Slider, Gallery, and Carousel by MetaSlider WordPress plugin before 3.27.9 does not sanitise and escape some of its Gallery Image parameters, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2823|2024-08-03T00:52:59.620Z</guid>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4302|2024-08-03T01:34:50.153Z -- unknown -- white%20label%20cms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4302</link>
      <description>The White Label CMS WordPress plugin before 2.5 unserializes user input provided via the settings, which could allow high-privilege users such as admin to perform PHP Object Injection when a suitable gadget is present.</description>
      <guid isPermaLink="false">CVE-2022-4302|2024-08-03T01:34:50.153Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4460|2024-08-03T01:41:44.570Z -- unknown -- sidebar%20widgets%20by%20codelights
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4460</link>
      <description>The Sidebar Widgets by CodeLights WordPress plugin through 1.4 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as a contributor to perform Stored Cross-Site Scripting attacks, which could be used against high-privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4460|2024-08-03T01:41:44.570Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2887|2024-08-03T00:52:59.877Z -- unknown -- wp%20server%20health%20stats
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2887</link>
      <description>The WP Server Health Stats WordPress plugin before 1.7.0 does not escape some of its settings, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2887|2024-08-03T00:52:59.877Z</guid>
      <pubDate>Fri, 16 Sep 2022 08:40:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2312|2024-08-03T00:32:09.589Z -- unknown -- student%20result%20or%20employee%20database
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2312</link>
      <description>The Student Result or Employee Database WordPress plugin before 1.7.5 does not have CSRF in its AJAX actions, allowing attackers to make logged in user with a role as low as contributor to add/edit and delete students via CSRF attacks. Furthermore, due to the lack of sanitisation and escaping, it could also lead to Stored Cross-Site scripting</description>
      <guid isPermaLink="false">CVE-2022-2312|2024-08-03T00:32:09.589Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:01:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1547|2024-08-03T00:10:03.549Z -- unknown -- check%20%26%20log%20email
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1547</link>
      <description>The Check &amp; Log Email WordPress plugin before 1.0.6 does not sanitise and escape a parameter before outputting it back in an attribute in an admin page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-1547|2024-08-03T00:10:03.549Z</guid>
      <pubDate>Mon, 23 May 2022 07:15:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3753|2024-08-03T01:20:57.583Z -- unknown -- evaluate
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3753</link>
      <description>The Evaluate WordPress plugin through 1.0 does not sanitize and escapes some of its settings, which could allow high-privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example, in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3753|2024-08-03T01:20:57.583Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4431|2024-08-03T01:41:44.449Z -- unknown -- woocs
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4431</link>
      <description>The WOOCS WordPress plugin before 1.3.9.4 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4431|2024-08-03T01:41:44.449Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3097|2024-08-03T01:00:10.709Z -- unknown -- plugin%20lbstopattack
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3097</link>
      <description>The Plugin LBstopattack WordPress plugin before 1.1.3 does not use nonces when saving its settings, making it possible for attackers to conduct CSRF attacks. This could allow attackers to disable the plugin's protections.</description>
      <guid isPermaLink="false">CVE-2022-3097|2024-08-03T01:00:10.709Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3677|2024-08-03T01:14:03.297Z -- unknown -- advanced%20import%20%3A%20one%20click%20import%20for%20wordpress%20or%20theme%20demo%20data
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3677</link>
      <description>The Advanced Import WordPress plugin before 1.3.8 does not have CSRF check when installing and activating plugins, which could allow attackers to make a logged in admin install arbitrary plugins from WordPress.org, and activate arbitrary ones from the blog via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2022-3677|2024-08-03T01:14:03.297Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2356|2024-08-03T00:32:09.645Z -- unknown -- frontend%20file%20manager%20%26%20sharing%20%E2%80%93%20user%20private%20files
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2356</link>
      <description>The Frontend File Manager &amp; Sharing WordPress plugin before 1.1.3 does not filter file extensions when letting users upload files on the server, which may lead to malicious code being uploaded.</description>
      <guid isPermaLink="false">CVE-2022-2356|2024-08-03T00:32:09.645Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:46:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2169|2024-08-03T00:32:08.553Z -- unknown -- loading%20page%20with%20loading%20screen
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2169</link>
      <description>The Loading Page with Loading Screen WordPress plugin before 1.0.83 does not escape its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2169|2024-08-03T00:32:08.553Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:36:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2404|2024-08-03T00:39:07.581Z -- unknown -- wp%20popup%20builder%20%E2%80%93%20popup%20forms%20%2C%20marketing%20popup%20%26%20%20newsletter
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2404</link>
      <description>The WP Popup Builder WordPress plugin before 1.2.9 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2404|2024-08-03T00:39:07.581Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3984|2024-08-03T01:27:54.384Z -- unknown -- flowplayer%20video%20player
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3984</link>
      <description>The Flowplayer Video Player WordPress plugin before 1.0.5 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-3984|2024-08-03T01:27:54.384Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3241|2024-08-03T01:00:10.547Z -- unknown -- build%20app%20online
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3241</link>
      <description>The Build App Online WordPress plugin before 1.0.19 does not properly sanitise and escape some parameters before using them in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2022-3241|2024-08-03T01:00:10.547Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4652|2024-08-03T01:48:39.560Z -- unknown -- video%20background
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4652</link>
      <description>The Video Background WordPress plugin before 2.7.5 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4652|2024-08-03T01:48:39.560Z</guid>
      <pubDate>Mon, 13 Mar 2023 16:03:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3394|2024-08-03T01:07:06.598Z -- unknown -- wp%20all%20export%20pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3394</link>
      <description>The WP All Export Pro WordPress plugin before 1.7.9 does not limit some functionality during exports only to users with the Administrator role, allowing any logged in user which has been given privileges to perform exports to execute arbitrary code on the site. By default only administrators can run exports, but the privilege can be delegated to lower privileged users.</description>
      <guid isPermaLink="false">CVE-2022-3394|2024-08-03T01:07:06.598Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4426|2024-08-03T01:41:44.630Z -- unknown -- mautic%20integration%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4426</link>
      <description>The Mautic Integration for WooCommerce WordPress plugin before 1.0.3 does not have proper CSRF check when updating settings, and does not ensure that the options to be updated belong to the plugin, allowing attackers to make a logged in admin change arbitrary blog options via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2022-4426|2024-08-03T01:41:44.630Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1611|2024-08-03T00:10:03.748Z -- unknown -- bulk%20page%20creator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1611</link>
      <description>The Bulk Page Creator WordPress plugin before 1.1.4 does not protect its page creation functionalities with nonce checks, which makes them vulnerable to CSRF.</description>
      <guid isPermaLink="false">CVE-2022-1611|2024-08-03T00:10:03.748Z</guid>
      <pubDate>Mon, 30 May 2022 08:36:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1826|2024-08-03T00:17:00.594Z -- unknown -- cross-linker
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1826</link>
      <description>The Cross-Linker WordPress plugin through 3.0.1.9 does not have CSRF check in place when creating Cross-Links, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1826|2024-08-03T00:17:00.594Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4325|2024-08-03T01:34:50.167Z -- unknown -- post%20status%20notifier%20lite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4325</link>
      <description>The Post Status Notifier Lite WordPress plugin before 1.10.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which can be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2022-4325|2024-08-03T01:34:50.167Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4790|2024-08-03T01:48:40.412Z -- unknown -- wp%20google%20my%20business%20auto%20publish
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4790</link>
      <description>The WP Google My Business Auto Publish WordPress plugin before 3.4 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4790|2024-08-03T01:48:40.412Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4765|2024-08-03T01:48:40.395Z -- unknown -- portfolio%20for%20elementor%2C%20image%20gallery%20%26%20post%20grid%20%20%7C%20powerfolio
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4765</link>
      <description>The Portfolio for Elementor WordPress plugin before 2.3.1 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4765|2024-08-03T01:48:40.395Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3811|2024-08-03T01:20:58.446Z -- unknown -- eu%20cookie%20law%20for%20gdpr%2Fccpa
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3811</link>
      <description>The EU Cookie Law for GDPR/CCPA WordPress plugin through 3.1.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3811|2024-08-03T01:20:58.446Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1937|2024-08-03T00:24:42.589Z -- unknown -- awin%20data%20feed
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1937</link>
      <description>The Awin Data Feed WordPress plugin before 1.8 does not sanitise and escape a parameter before outputting it back via an AJAX action (available to both unauthenticated and authenticated users), leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-1937|2024-08-03T00:24:42.589Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:56:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1950|2024-08-03T00:24:43.422Z -- unknown -- youzify%20%E2%80%93%20buddypress%20community%2C%20user%20profile%2C%20social%20network%20%26%20membership%20plugin%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1950</link>
      <description>The Youzify WordPress plugin before 1.2.0 does not sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to an unauthenticated SQL injection</description>
      <guid isPermaLink="false">CVE-2022-1950|2024-08-03T00:24:43.422Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:49:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3426|2024-08-03T01:07:06.546Z -- unknown -- advanced%20wp%20columns
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3426</link>
      <description>The Advanced WP Columns WordPress plugin through 2.0.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3426|2024-08-03T01:07:06.546Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4199|2024-08-03T01:34:49.944Z -- unknown -- link%20library
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4199</link>
      <description>The Link Library WordPress plugin before 7.4.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4199|2024-08-03T01:34:49.944Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2171|2024-08-03T00:32:07.973Z -- unknown -- progressive%20license
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2171</link>
      <description>The Progressive License WordPress plugin through 1.1.0 is lacking any CSRF check when saving its settings, which could allow attackers to make a logged in admin change them. Furthermore, as the plugin allows arbitrary HTML to be inserted in one of the settings, this could lead to Stored XSS issue which will be triggered in the frontend as well.</description>
      <guid isPermaLink="false">CVE-2022-2171|2024-08-03T00:32:07.973Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:49:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4836|2024-08-03T01:55:45.699Z -- unknown -- breadcrumb
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4836</link>
      <description>The Breadcrumb WordPress plugin before 1.5.33 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4836|2024-08-03T01:55:45.699Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4386|2024-08-03T01:41:44.404Z -- unknown -- intuitive%20custom%20post%20order
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4386</link>
      <description>The Intuitive Custom Post Order WordPress plugin before 3.1.4 lacks CSRF protection in its update-menu-order ajax action, allowing an attacker to trick any user to change the menu order via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-4386|2024-08-03T01:41:44.404Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:51:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3911|2024-08-03T01:20:58.806Z -- unknown -- iubenda%20%7C%20all-in-one%20compliance%20for%20gdpr%20%2F%20ccpa%20cookie%20consent%20%2B%20more
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3911</link>
      <description>The iubenda WordPress plugin before 3.3.3 does does not have authorisation and CSRF in an AJAX action, and does not ensure that the options to be updated belong to the plugin as long as they are arrays. As a result, any authenticated users, such as subscriber can grant themselves any privileges, such as edit_plugins etc</description>
      <guid isPermaLink="false">CVE-2022-3911|2024-08-03T01:20:58.806Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4200|2024-08-03T01:34:49.549Z -- unknown -- login%20with%20cognito
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4200</link>
      <description>The Login with Cognito WordPress plugin through 1.4.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4200|2024-08-03T01:34:49.549Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4629|2024-08-03T01:48:39.058Z -- unknown -- product%20slider%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4629</link>
      <description>The Product Slider for WooCommerce WordPress plugin before 2.6.4 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4629|2024-08-03T01:48:39.058Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3900|2024-08-03T01:20:58.476Z -- unknown -- cooked%20pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3900</link>
      <description>The Cooked Pro WordPress plugin before 1.7.5.7 does not properly validate or sanitize the recipe_args parameter before unserializing it in the cooked_loadmore action, allowing an unauthenticated attacker to trigger a PHP Object injection vulnerability.</description>
      <guid isPermaLink="false">CVE-2022-3900|2024-08-03T01:20:58.476Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:57:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1695|2024-08-03T00:10:03.866Z -- unknown -- wp%20simple%20adsense%20insertion
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1695</link>
      <description>The WP Simple Adsense Insertion WordPress plugin before 2.1 does not perform CSRF checks on updates to its admin page, allowing an attacker to trick a logged in user to manipulate ads and inject arbitrary javascript via submitting a form.</description>
      <guid isPermaLink="false">CVE-2022-1695|2024-08-03T00:10:03.866Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2552|2024-08-03T00:39:08.064Z -- unknown -- duplicator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2552</link>
      <description>The Duplicator WordPress plugin before 1.4.7 does not authenticate or authorize visitors before displaying information about the system such as server software, php version and full file system path to the site.</description>
      <guid isPermaLink="false">CVE-2022-2552|2024-08-03T00:39:08.064Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:04:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3392|2024-08-03T01:07:06.511Z -- unknown -- wp%20humans.txt
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3392</link>
      <description>The WP Humans.txt WordPress plugin through 1.0.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3392|2024-08-03T01:07:06.511Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2575|2024-08-03T00:39:08.118Z -- unknown -- wbw%20currency%20switcher%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2575</link>
      <description>The WBW Currency Switcher for WooCommerce WordPress plugin before 1.6.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2575|2024-08-03T00:39:08.118Z</guid>
      <pubDate>Fri, 16 Sep 2022 08:40:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3391|2024-08-03T01:07:06.531Z -- unknown -- retain%20live%20chat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3391</link>
      <description>The Retain Live Chat WordPress plugin through 0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3391|2024-08-03T01:07:06.531Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1790|2024-08-03T00:16:59.968Z -- unknown -- new%20user%20email%20set%20up
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1790</link>
      <description>The New User Email Set Up WordPress plugin through 0.5.2 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1790|2024-08-03T00:16:59.968Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1673|2024-08-03T00:10:03.856Z -- unknown -- woocommerce%20green%20wallet%20gateway
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1673</link>
      <description>The WooCommerce Green Wallet Gateway WordPress plugin before 1.0.2 does not escape the error_envision query parameter before outputting it to the page, leading to a Reflected Cross-Site Scripting vulnerability.</description>
      <guid isPermaLink="false">CVE-2022-1673|2024-08-03T00:10:03.856Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4824|2024-08-03T01:55:44.216Z -- unknown -- wp%20blog%20and%20widgets
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4824</link>
      <description>The WP Blog and Widgets WordPress plugin before 2.3.1 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4824|2024-08-03T01:55:44.216Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4677|2024-08-03T01:48:39.574Z -- unknown -- leaflet%20maps%20marker%20%28google%20maps%2C%20openstreetmap%2C%20bing%20maps%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4677</link>
      <description>The Leaflet Maps Marker WordPress plugin before 3.12.7 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4677|2024-08-03T01:48:39.574Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2377|2024-08-03T00:32:09.474Z -- unknown -- directorist%20%E2%80%93%20wordpress%20business%20directory%20plugin%20with%20classified%20ads%20listings
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2377</link>
      <description>The Directorist WordPress plugin before 7.3.0 does not have authorisation and CSRF checks in an AJAX action, allowing any authenticated users to send arbitrary emails on behalf of the blog</description>
      <guid isPermaLink="false">CVE-2022-2377|2024-08-03T00:32:09.474Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:02:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4393|2024-08-03T01:41:44.361Z -- unknown -- imagelinks%20interactive%20image%20builder%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4393</link>
      <description>The ImageLinks Interactive Image Builder for WordPress plugin through 1.5.3 does not sanitise and escape some of its settings, which could allow users such as contributor+ to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-4393|2024-08-03T01:41:44.361Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2245|2024-08-03T00:32:09.532Z -- unknown -- counter%20box%20%E2%80%93%20wordpress%20%20plugin%20for%20countdown%2C%20timer%2C%20counter
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2245</link>
      <description>The Counter Box WordPress plugin before 1.2.1 is lacking CSRF check when activating and deactivating counters, which could allow attackers to make a logged in admin perform such actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2022-2245|2024-08-03T00:32:09.532Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:50:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4706|2024-08-03T01:48:40.372Z -- unknown -- genesis%20columns%20advanced
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4706</link>
      <description>The Genesis Columns Advanced WordPress plugin before 2.0.4 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as a contributor to perform Stored Cross-Site Scripting attacks which could be used against high-privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4706|2024-08-03T01:48:40.372Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4550|2024-08-03T01:41:45.692Z -- unknown -- user%20activity
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4550</link>
      <description>The User Activity WordPress plugin through 1.0.1 checks headers such as the X-Forwarded-For to retrieve the IP address of the request, which could lead to IP spoofing</description>
      <guid isPermaLink="false">CVE-2022-4550|2024-08-03T01:41:45.692Z</guid>
      <pubDate>Mon, 27 Feb 2023 15:24:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1570|2024-08-03T00:10:03.619Z -- unknown -- files%20download%20delay
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1570</link>
      <description>The Files Download Delay WordPress plugin before 1.0.7 does not have authorisation and CSRF checks when reseting its settings, which could allow any authenticated users, such as subscriber to perform such action.</description>
      <guid isPermaLink="false">CVE-2022-1570|2024-08-03T00:10:03.619Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3764|2024-08-03T01:20:58.326Z -- unknown -- form%20vibes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3764</link>
      <description>The plugin does not filter the "delete_entries" parameter from user requests, leading to an SQL Injection vulnerability.</description>
      <guid isPermaLink="false">CVE-2022-3764|2024-08-03T01:20:58.326Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:50:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2448|2024-08-03T00:39:07.739Z -- unknown -- resmush.it%20%3A%20the%20only%20free%20image%20optimizer%20%26%20compress%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2448</link>
      <description>The reSmush.it WordPress plugin before 0.4.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2448|2024-08-03T00:39:07.739Z</guid>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4328|2024-08-03T01:34:50.063Z -- unknown -- woocommerce%20checkout%20field%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4328</link>
      <description>The WooCommerce Checkout Field Manager WordPress plugin before 18.0 does not validate files to be uploaded, which could allow unauthenticated attackers to upload arbitrary files such as PHP on the server</description>
      <guid isPermaLink="false">CVE-2022-4328|2024-08-03T01:34:50.063Z</guid>
      <pubDate>Mon, 06 Mar 2023 13:34:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4047|2024-08-03T01:27:54.233Z -- unknown -- return%20refund%20and%20exchange%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4047</link>
      <description>The Return Refund and Exchange For WooCommerce WordPress plugin before 4.0.9 does not validate attachment files to be uploaded via an AJAX action available to unauthenticated users, which could allow them to upload arbitrary files such as PHP and lead to RCE</description>
      <guid isPermaLink="false">CVE-2022-4047|2024-08-03T01:27:54.233Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4750|2024-08-03T01:48:40.492Z -- unknown -- wp%20responsive%20testimonials%20slider%20and%20widget
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4750</link>
      <description>The WP Responsive Testimonials Slider And Widget WordPress plugin through 1.5 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4750|2024-08-03T01:48:40.492Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3249|2024-08-03T01:07:05.559Z -- unknown -- wp%20csv%20exporter
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3249</link>
      <description>The WP CSV Exporter WordPress plugin before 1.3.7 does not properly sanitise and escape some parameters before using them in a SQL statement, allowing high privilege users such as admin to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2022-3249|2024-08-03T01:07:05.559Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4059|2024-08-03T01:27:54.184Z -- unknown -- cryptocurrency%20widgets%20pack
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4059</link>
      <description>The Cryptocurrency Widgets Pack WordPress plugin before 2.0 does not sanitise and escape some parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection.</description>
      <guid isPermaLink="false">CVE-2022-4059|2024-08-03T01:27:54.184Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2657|2024-08-03T00:46:03.260Z -- unknown -- multivendor%20marketplace%20solution%20for%20woocommerce%20%E2%80%93%20wc%20marketplace
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2657</link>
      <description>The Multivendor Marketplace Solution for WooCommerce WordPress plugin before 3.8.12 is lacking authorisation and CSRF in multiple AJAX actions, which could allow any authenticated users, such as subscriber to call them and suspend vendors (reporter by the submitter) or update arbitrary order status (identified by WPScan when verifying the issue) for example. Other unauthenticated attacks are also possible, either directly or via CSRF</description>
      <guid isPermaLink="false">CVE-2022-2657|2024-08-03T00:46:03.260Z</guid>
      <pubDate>Mon, 05 Sep 2022 12:35:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2840|2024-08-03T00:52:59.448Z -- unknown -- zephyr%20project%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2840</link>
      <description>The Zephyr Project Manager WordPress plugin before 3.2.5 does not sanitise and escape various parameters before using them in SQL statements via various AJAX actions available to both unauthenticated and authenticated users, leading to SQL injections</description>
      <guid isPermaLink="false">CVE-2022-2840|2024-08-03T00:52:59.448Z</guid>
      <pubDate>Mon, 19 Sep 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3908|2024-08-03T01:20:58.795Z -- unknown -- plug%20your%20woocommerce%20into%20the%20largest%20catalog%20of%20customized%20print%20products%20from%20helloprint
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3908</link>
      <description>The Helloprint WordPress plugin before 1.4.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-3908|2024-08-03T01:20:58.795Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3881|2024-08-03T01:20:58.659Z -- unknown -- wp%20tools%20increase%20maximum%20limits%2C%20repair%2C%20server%20php%20info%2C%20javascript%20errors%2C%20file%20permissions%2C%20transients%2C%20error%20log
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3881</link>
      <description>The WP Tools Increase Maximum Limits, Repair, Server PHP Info, Javascript errors, File Permissions, Transients, Error Log WordPress plugin before 3.43 does not have proper authorisation and CSRF in an AJAX action, allowing any authenticated users, such as subscriber to call it and install and activate arbitrary plugins from wordpress.org</description>
      <guid isPermaLink="false">CVE-2022-3881|2024-08-03T01:20:58.659Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4394|2024-08-03T01:41:44.467Z -- unknown -- ipages%20flipbook%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4394</link>
      <description>The iPages Flipbook For WordPress plugin through 1.4.6 does not sanitise and escape some of its settings, which could allow users such as contributor+ to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-4394|2024-08-03T01:41:44.467Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3833|2024-08-03T01:20:58.600Z -- unknown -- fancier%20author%20box%20by%20thematosoup
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3833</link>
      <description>The Fancier Author Box by ThematoSoup WordPress plugin through 1.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3833|2024-08-03T01:20:58.600Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4508|2024-08-03T01:41:45.515Z -- unknown -- convertkit
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4508</link>
      <description>The ConvertKit WordPress plugin before 2.0.5 does not validate and escapes some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as a contributor to perform Stored Cross-Site Scripting attacks, which could be used against high-privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4508|2024-08-03T01:41:45.515Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2374|2024-08-03T00:32:09.669Z -- unknown -- simply%20schedule%20appointments%20%E2%80%93%20wordpress%20booking%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2374</link>
      <description>The Simply Schedule Appointments WordPress plugin before 1.5.7.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2374|2024-08-03T00:32:09.669Z</guid>
      <pubDate>Mon, 29 Aug 2022 17:15:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1579|2024-08-03T00:10:03.558Z -- unknown -- login%20block%20ips
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1579</link>
      <description>The function check_is_login_page() uses headers for the IP check, which can be easily spoofed.</description>
      <guid isPermaLink="false">CVE-2022-1579|2024-08-03T00:10:03.558Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4628|2024-08-03T01:48:39.056Z -- unknown -- easy%20paypal%20buy%20now%20button
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4628</link>
      <description>The Easy PayPal Buy Now Button WordPress plugin before 1.7.4 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4628|2024-08-03T01:48:39.056Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1582|2024-08-03T00:10:03.636Z -- unknown -- external%20links%20in%20new%20window%20%2F%20new%20tab
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1582</link>
      <description>The External Links in New Window / New Tab WordPress plugin before 1.43 does not properly escape URLs it concatenates to onclick event handlers, which makes Stored Cross-Site Scripting attacks possible.</description>
      <guid isPermaLink="false">CVE-2022-1582|2024-08-03T00:10:03.636Z</guid>
      <pubDate>Mon, 30 May 2022 08:36:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4654|2024-08-03T01:48:39.735Z -- unknown -- pricing%20tables%20wordpress%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4654</link>
      <description>The Pricing Tables WordPress Plugin WordPress plugin before 3.2.3 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4654|2024-08-03T01:48:39.735Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4477|2024-08-03T01:41:44.829Z -- unknown -- smash%20balloon%20social%20post%20feed
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4477</link>
      <description>The Smash Balloon Social Post Feed WordPress plugin before 4.1.6 does not validate and escapes some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as a contributor to perform Stored Cross-Site Scripting attacks against logged-in admins.</description>
      <guid isPermaLink="false">CVE-2022-4477|2024-08-03T01:41:44.829Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1885|2024-08-03T00:17:00.942Z -- unknown -- cimy%20header%20image%20rotator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1885</link>
      <description>The Cimy Header Image Rotator WordPress plugin through 6.1.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1885|2024-08-03T00:17:00.942Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:58:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1932|2024-08-03T00:17:00.977Z -- unknown -- rezgo%20online%20booking
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1932</link>
      <description>The Rezgo Online Booking WordPress plugin before 4.1.8 does not sanitise and escape some parameters before outputting them back in a page, leading to a Reflected Cross-Site Scripting, which can be exploited either via a LFI in an AJAX action, or direct call to the affected file</description>
      <guid isPermaLink="false">CVE-2022-1932|2024-08-03T00:17:00.977Z</guid>
      <pubDate>Mon, 22 Aug 2022 14:58:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4004|2024-08-03T01:27:54.056Z -- unknown -- donation%20button
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4004</link>
      <description>The Donation Button WordPress plugin through 4.0.0 does not properly check for privileges and nonce tokens in its "donation_button_twilio_send_test_sms" AJAX action, which may allow any users with an account on the affected site, like subscribers, to use the plugin's Twilio integration to send SMSes to arbitrary phone numbers.</description>
      <guid isPermaLink="false">CVE-2022-4004|2024-08-03T01:27:54.056Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4715|2024-08-03T01:48:39.613Z -- unknown -- structured%20content%20%28json-ld%29%20%23wpsc
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4715</link>
      <description>The Structured Content WordPress plugin before 1.5.1 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4715|2024-08-03T01:48:39.613Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2535|2024-08-03T00:39:08.017Z -- unknown -- searchwp%20live%20ajax%20search
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2535</link>
      <description>The SearchWP Live Ajax Search WordPress plugin before 1.6.2 does not ensure that users making a live search are limited to published posts only, allowing unauthenticated users to make a crafted query disclosing private/draft/pending post titles along with their permalink</description>
      <guid isPermaLink="false">CVE-2022-2535|2024-08-03T00:39:08.017Z</guid>
      <pubDate>Mon, 15 Aug 2022 08:38:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4042|2024-08-03T01:27:54.086Z -- unknown -- paytium%3A%20mollie%20payment%20forms%20%26%20donations
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4042</link>
      <description>The Paytium: Mollie payment forms &amp; donations WordPress plugin before 4.3.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4042|2024-08-03T01:27:54.086Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:27:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4473|2024-08-03T01:41:44.733Z -- unknown -- widget%20shortcode
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4473</link>
      <description>The Widget Shortcode WordPress plugin through 0.3.5 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4473|2024-08-03T01:41:44.733Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:31:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4310|2024-08-03T01:34:50.117Z -- unknown -- slimstat%20analytics
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4310</link>
      <description>The Slimstat Analytics WordPress plugin before 4.9.3 does not sanitise and escape the URI when logging requests, which could allow unauthenticated attackers to perform Stored Cross-Site Scripting attacks against logged in admin viewing the logs</description>
      <guid isPermaLink="false">CVE-2022-4310|2024-08-03T01:34:50.117Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4267|2024-08-03T01:34:50.000Z -- unknown -- bulk%20delete%20users%20by%20email
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4267</link>
      <description>The Bulk Delete Users by Email WordPress plugin through 1.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-4267|2024-08-03T01:34:50.000Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4791|2024-08-03T01:48:40.418Z -- unknown -- product%20slider%20and%20carousel%20with%20category%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4791</link>
      <description>The Product Slider and Carousel with Category for WooCommerce WordPress plugin before 2.8 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4791|2024-08-03T01:48:40.418Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2839|2024-08-03T00:52:59.468Z -- unknown -- zephyr%20project%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2839</link>
      <description>The Zephyr Project Manager WordPress plugin before 3.2.55 does not have any authorisation as well as CSRF in all its AJAX actions, allowing unauthenticated users to call them either directly or via CSRF attacks. Furthermore, due to the lack of sanitisation and escaping, it could also allow them to perform Stored Cross-Site Scripting attacks against logged in admins.</description>
      <guid isPermaLink="false">CVE-2022-2839|2024-08-03T00:52:59.468Z</guid>
      <pubDate>Mon, 03 Oct 2022 13:45:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3846|2024-08-03T01:20:58.635Z -- unknown -- workreap
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3846</link>
      <description>The Workreap WordPress theme before 2.6.3 has a vulnerability with the notifications feature as it's possible to read any user's notification (employer or freelancer) as the notification ID is brute-forceable.</description>
      <guid isPermaLink="false">CVE-2022-3846|2024-08-03T01:20:58.635Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:51:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4679|2024-08-03T01:48:39.517Z -- unknown -- wufoo%20shortcode
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4679</link>
      <description>The Wufoo Shortcode WordPress plugin before 1.52 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4679|2024-08-03T01:48:39.517Z</guid>
      <pubDate>Mon, 27 Feb 2023 15:24:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2170|2024-08-03T00:32:08.642Z -- unknown -- microsoft%20advertising%20universal%20event%20tracking%20%28uet%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2170</link>
      <description>The Microsoft Advertising Universal Event Tracking (UET) WordPress plugin before 1.0.4 does not sanitise and escape its settings, allowing high privilege users such as admin to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed. Due to the nature of this plugin, well crafted XSS can also leak into the frontpage.</description>
      <guid isPermaLink="false">CVE-2022-2170|2024-08-03T00:32:08.642Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:49:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3418|2024-08-03T01:07:06.584Z -- unknown -- import%20any%20xml%20or%20csv%20file%20to%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3418</link>
      <description>The Import any XML or CSV File to WordPress plugin before 3.6.9 is not properly filtering which file extensions are allowed to be imported on the server, which could allow administrators in multi-site WordPress installations to upload arbitrary files</description>
      <guid isPermaLink="false">CVE-2022-3418|2024-08-03T01:07:06.584Z</guid>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2116|2024-08-03T00:24:44.325Z -- unknown -- contact%20form%20db%20%E2%80%93%20elementor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2116</link>
      <description>The Contact Form DB WordPress plugin before 1.8.0 does not sanitise and escape some parameters before outputting them back in attributes, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2116|2024-08-03T00:24:44.325Z</guid>
      <pubDate>Mon, 15 Aug 2022 08:35:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2629|2024-08-03T00:46:03.313Z -- unknown -- top%20bar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2629</link>
      <description>The Top Bar WordPress plugin before 3.0.4 does not sanitise and escape some of its settings before outputting them in frontend pages, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2629|2024-08-03T00:46:03.313Z</guid>
      <pubDate>Mon, 10 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1793|2024-08-03T00:16:59.915Z -- unknown -- private%20files
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1793</link>
      <description>The Private Files WordPress plugin through 0.40 is missing CSRF check when disabling the protection, which could allow attackers to make a logged in admin perform such action via a CSRF attack and make the blog public</description>
      <guid isPermaLink="false">CVE-2022-1793|2024-08-03T00:16:59.915Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:43:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3892|2024-08-03T01:20:58.441Z -- unknown -- wp%20oauth%20server%20%28oauth%20authentication%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3892</link>
      <description>The WP OAuth Server (OAuth Authentication) WordPress plugin before 4.2.2 does not sanitize and escape Client IDs, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3892|2024-08-03T01:20:58.441Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3840|2024-08-03T01:20:58.778Z -- unknown -- login%20for%20google%20apps
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3840</link>
      <description>The Login for Google Apps WordPress plugin before 3.4.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3840|2024-08-03T01:20:58.778Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4756|2024-08-03T01:48:40.088Z -- unknown -- my%20youtube%20channel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4756</link>
      <description>The My YouTube Channel WordPress plugin before 3.23.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4756|2024-08-03T01:48:40.088Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1760|2024-08-03T00:16:59.995Z -- unknown -- core%20control
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1760</link>
      <description>The Core Control WordPress plugin through 1.2.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1760|2024-08-03T00:16:59.995Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:52:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3538|2024-08-03T01:14:02.359Z -- unknown -- webmaster%20tools%20verification
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3538</link>
      <description>The Webmaster Tools Verification WordPress plugin through 1.2 does not have authorisation and CSRF checks when disabling plugins, allowing unauthenticated users to disable arbitrary plugins</description>
      <guid isPermaLink="false">CVE-2022-3538|2024-08-03T01:14:02.359Z</guid>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4152|2024-08-03T01:27:54.519Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4152</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5, Contest Gallery Pro WordPress plugin before 19.1.5 do not escape the option_id POST parameter before concatenating it to an SQL query in edit-options.php. This may allow malicious users with at least author privilege to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4152|2024-08-03T01:27:54.519Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1612|2024-08-03T00:10:03.626Z -- unknown -- webriti%20smtp%20mail
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1612</link>
      <description>The Webriti SMTP Mail WordPress plugin through 1.0 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1612|2024-08-03T00:10:03.626Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3151|2024-08-03T01:00:10.529Z -- unknown -- wp%20custom%20cursors
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3151</link>
      <description>The WP Custom Cursors WordPress plugin before 3.0.1 does not have CSRF check in place when deleting cursors, which could allow attackers to made a logged in admin delete arbitrary cursors via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2022-3151|2024-08-03T01:00:10.529Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4542|2024-08-03T01:41:45.623Z -- unknown -- compact%20wp%20audio%20player
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4542</link>
      <description>The Compact WP Audio Player WordPress plugin before 1.9.8 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4542|2024-08-03T01:41:45.623Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2987|2024-08-03T00:53:00.514Z -- unknown -- ldap%20wp%20login%20%2F%20active%20directory%20integration
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2987</link>
      <description>The Ldap WP Login / Active Directory Integration WordPress plugin before 3.0.2 does not have any authorisation and CSRF checks when updating it's settings (which are hooked to the init action), allowing unauthenticated attackers to update them. Attackers could set their own LDAP server to be used to authenticated users, therefore bypassing the current authentication</description>
      <guid isPermaLink="false">CVE-2022-2987|2024-08-03T00:53:00.514Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4489|2024-08-03T01:41:45.022Z -- unknown -- husky
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4489</link>
      <description>The HUSKY WordPress plugin before 1.3.2 unserializes user input provided via the settings, which could allow high privilege users such as admin to perform PHP Object Injection when a suitable gadget is present.</description>
      <guid isPermaLink="false">CVE-2022-4489|2024-08-03T01:41:45.022Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1604|2024-08-03T00:10:03.757Z -- unknown -- mailerlite%20%E2%80%93%20signup%20forms%20%28official%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1604</link>
      <description>The MailerLite WordPress plugin before 1.5.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-1604|2024-08-03T00:10:03.757Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2273|2024-08-03T00:32:09.608Z -- unknown -- simple%20membership
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2273</link>
      <description>The Simple Membership WordPress plugin before 4.1.3 does not properly validate the membership_level parameter when editing a profile, allowing members to escalate to a higher membership level by using a crafted POST request.</description>
      <guid isPermaLink="false">CVE-2022-2273|2024-08-03T00:32:09.608Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:51:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4140|2024-08-03T01:27:54.492Z -- unknown -- welcart%20e-commerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4140</link>
      <description>The Welcart e-Commerce WordPress plugin before 2.8.5 does not validate user input before using it to output the content of a file, which could allow unauthenticated attacker to read arbitrary files on the server</description>
      <guid isPermaLink="false">CVE-2022-4140|2024-08-03T01:27:54.492Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2092|2024-08-03T00:24:44.204Z -- unknown -- woocommerce%20pdf%20invoices%20%26%20packing%20slips
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2092</link>
      <description>The WooCommerce PDF Invoices &amp; Packing Slips WordPress plugin before 2.16.0 doesn't escape a parameter on its setting page, making it possible for attackers to conduct reflected cross-site scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-2092|2024-08-03T00:24:44.204Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:57:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2372|2024-08-03T00:32:09.568Z -- unknown -- yaysmtp%20%E2%80%93%20simple%20wp%20smtp%20mail
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2372</link>
      <description>The YaySMTP WordPress plugin before 2.2.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2372|2024-08-03T00:32:09.568Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:47:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2041|2024-08-03T00:24:44.273Z -- unknown -- brizy%20%E2%80%93%20page%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2041</link>
      <description>The Brizy WordPress plugin before 2.4.2 does not sanitise and escape some element content, which could allow users with a role as low as Contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-2041|2024-08-03T00:24:44.273Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:59:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1595|2024-08-03T00:10:03.550Z -- unknown -- hc%20custom%20wp-admin%20url
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1595</link>
      <description>The HC Custom WP-Admin URL WordPress plugin through 1.4 leaks the secret login URL when sending a specific crafted request</description>
      <guid isPermaLink="false">CVE-2022-1595|2024-08-03T00:10:03.550Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1914|2024-08-03T00:17:00.972Z -- unknown -- clean-contact
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1914</link>
      <description>The Clean-Contact WordPress plugin through 1.6 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and lead to Stored XSS due to the lack of sanitisation and escaping as well</description>
      <guid isPermaLink="false">CVE-2022-1914|2024-08-03T00:17:00.972Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:58:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2412|2024-08-03T00:39:06.990Z -- unknown -- better%20tag%20cloud
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2412</link>
      <description>The Better Tag Cloud WordPress plugin through 0.99.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2412|2024-08-03T00:39:06.990Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:50:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1687|2024-08-03T00:10:03.810Z -- unknown -- logo%20slider
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1687</link>
      <description>The Logo Slider WordPress plugin through 1.4.8 does not sanitise and escape the lsp_slider_id parameter before using it in a SQL statement via the Manage Slider Images admin page, leading to an SQL Injection</description>
      <guid isPermaLink="false">CVE-2022-1687|2024-08-03T00:10:03.810Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3069|2024-08-03T01:00:10.349Z -- unknown -- wordlift%20%E2%80%93%20ai%20powered%20seo%20%E2%80%93%20schema
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3069</link>
      <description>The WordLift WordPress plugin before 3.37.2 does not sanitise and escape its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-3069|2024-08-03T01:00:10.349Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3946|2024-08-03T01:27:53.116Z -- unknown -- welcart%20e-commerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3946</link>
      <description>The Welcart e-Commerce WordPress plugin before 2.8.4 does not have authorisation and CSRF in an AJAX action, allowing any logged-in user to create, update and delete shipping methods.</description>
      <guid isPermaLink="false">CVE-2022-3946|2024-08-03T01:27:53.116Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1788|2024-08-03T00:16:59.905Z -- unknown -- change%20uploaded%20file%20permissions
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1788</link>
      <description>Due to missing checks the Change Uploaded File Permissions WordPress plugin through 4.0.0 is vulnerable to CSRF attacks. This can be used to change the file and folder permissions of any folder. This could be problematic when specific files like ini files are made readable for everyone due to this.</description>
      <guid isPermaLink="false">CVE-2022-1788|2024-08-03T00:16:59.905Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1692|2024-08-03T00:10:03.848Z -- unknown -- cp%20image%20store%20with%20slideshow
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1692</link>
      <description>The CP Image Store with Slideshow WordPress plugin before 1.0.68 does not sanitise and escape the ordering_by query parameter before using it in a SQL statement in pages where the [codepeople-image-store] is embed, allowing unauthenticated users to perform an SQL injection attack</description>
      <guid isPermaLink="false">CVE-2022-1692|2024-08-03T00:10:03.848Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2311|2024-08-03T00:32:09.387Z -- unknown -- find%20and%20replace%20all
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2311</link>
      <description>The Find and Replace All WordPress plugin before 1.3 does not sanitize and escape some parameters from its setting page before outputting them back to the user, leading to a Reflected Cross-Site Scripting issue.</description>
      <guid isPermaLink="false">CVE-2022-2311|2024-08-03T00:32:09.387Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3132|2024-08-03T01:00:10.506Z -- unknown -- goolytics%20%E2%80%93%20simple%20google%20analytics
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3132</link>
      <description>The Goolytics WordPress plugin before 1.1.2 does not sanitise and escape some of its settings, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-3132|2024-08-03T01:00:10.506Z</guid>
      <pubDate>Mon, 03 Oct 2022 13:45:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3150|2024-08-03T01:00:10.464Z -- unknown -- wp%20custom%20cursors%20%7C%20wordpress%20cursor%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3150</link>
      <description>The WP Custom Cursors WordPress plugin before 3.2 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privileged users such as admin</description>
      <guid isPermaLink="false">CVE-2022-3150|2024-08-03T01:00:10.464Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4888|2024-08-03T01:55:45.935Z -- unknown -- checkout%20fields%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4888</link>
      <description>The Checkout Fields Manager WordPress plugin before 1.0.2, Abandoned Cart Recovery WordPress plugin before 1.2.5, Custom Fields for WooCommerce WordPress plugin before 1.0.4, Custom Order Number WordPress plugin through 1.0.1, Custom Registration Forms Builder WordPress plugin before 1.0.2, Advanced Free Gifts WordPress plugin before 1.0.2, Gift Registry for WooCommerce WordPress plugin through 1.0.1, Image Watermark for WooCommerce WordPress plugin before 1.0.1, Order Approval for WooCommerce WordPress plugin before 1.1.0, Order Tracking for WooCommerce WordPress plugin before 1.0.2, Price Calculator for WooCommerce WordPress plugin through 1.0.3, Product Dynamic Pricing and Discounts WordPress plugin through 1.0.6, Product Labels and Stickers WordPress plugin through 1.0.1 have flawed CSRF checks in various places, which could allow attackers to make logged in users perform unwanted actions</description>
      <guid isPermaLink="false">CVE-2022-4888|2024-08-03T01:55:45.935Z</guid>
      <pubDate>Mon, 31 Jul 2023 09:37:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1773|2024-08-03T00:16:59.886Z -- unknown -- wp%20athletics
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1773</link>
      <description>The WP Athletics WordPress plugin through 1.1.7 does not sanitise and escape a parameter before outputting back in an admin page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-1773|2024-08-03T00:16:59.886Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4666|2024-08-03T01:48:39.613Z -- unknown -- markup%20%28json-ld%29%20structured%20in%20schema.org
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4666</link>
      <description>The Markup (JSON-LD) structured in schema.org WordPress plugin through 4.8.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-4666|2024-08-03T01:48:39.613Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:51:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1568|2024-08-03T00:10:03.533Z -- unknown -- team%20members
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1568</link>
      <description>The Team Members WordPress plugin before 5.1.1 does not escape some of its Team settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1568|2024-08-03T00:10:03.533Z</guid>
      <pubDate>Mon, 30 May 2022 08:36:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1710|2024-08-03T00:10:03.840Z -- unknown -- appointment%20hour%20booking%20%E2%80%93%20wordpress%20booking%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1710</link>
      <description>The Appointment Hour Booking WordPress plugin before 1.3.56 does not sanitise and escape a settings of its Calendar fields, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-1710|2024-08-03T00:10:03.840Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3141|2024-08-03T01:00:10.566Z -- unknown -- translate%20multilingual%20sites%20%E2%80%93%20translatepress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3141</link>
      <description>The Translate Multilingual sites WordPress plugin before 2.3.3 is vulnerable to an authenticated SQL injection. By adding a new language (via the settings page) containing specific special characters, the backticks in the SQL query can be surpassed and a time-based blind payload can be injected.</description>
      <guid isPermaLink="false">CVE-2022-3141|2024-08-03T01:00:10.566Z</guid>
      <pubDate>Mon, 19 Sep 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4164|2024-08-03T01:34:48.802Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4164</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the cg_multiple_files_for_post POST parameter before concatenating it to an SQL query in 0_change-gallery.php. This may allow malicious users with at least author privilege to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4164|2024-08-03T01:34:48.802Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3415|2024-08-03T01:07:06.696Z -- unknown -- chat%20bubble%20%E2%80%93%20floating%20chat%20with%20contact%20chat%20icons%2C%20messages%2C%20telegram%2C%20email%2C%20sms%2C%20call%20me%20back
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3415</link>
      <description>The Chat Bubble WordPress plugin before 2.3 does not sanitise and escape some contact parameters, which could allow unauthenticated attackers to set Stored Cross-Site Scripting payloads in them, which will trigger when an admin view the related contact message</description>
      <guid isPermaLink="false">CVE-2022-3415|2024-08-03T01:07:06.696Z</guid>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3139|2024-08-03T01:00:10.637Z -- unknown -- we%E2%80%99re%20open%21
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3139</link>
      <description>The We’re Open! WordPress plugin before 1.42 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3139|2024-08-03T01:00:10.637Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1689|2024-08-03T00:10:03.847Z -- unknown -- note%20press
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1689</link>
      <description>The Note Press WordPress plugin through 0.1.10 does not sanitise and escape the Update parameter before using it in a SQL statement when updating a note via the admin dashboard, leading to an SQL injection</description>
      <guid isPermaLink="false">CVE-2022-1689|2024-08-03T00:10:03.847Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2958|2024-08-03T00:52:59.878Z -- unknown -- badgeos
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2958</link>
      <description>The BadgeOS WordPress plugin before 3.7.1.3 does not sanitise and escape parameters before using them in SQL statements via AJAX actions available to any authenticated users, leading to SQL Injections</description>
      <guid isPermaLink="false">CVE-2022-2958|2024-08-03T00:52:59.878Z</guid>
      <pubDate>Mon, 19 Sep 2022 14:01:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4016|2024-08-03T01:27:54.122Z -- unknown -- booster%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4016</link>
      <description>The Booster for WooCommerce WordPress plugin before 5.6.7, Booster Plus for WooCommerce WordPress plugin before 5.6.6, Booster Elite for WooCommerce WordPress plugin before 1.1.8 does not properly check for CSRF when creating and deleting Customer roles, allowing attackers to make logged admins create and delete arbitrary custom roles via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2022-4016|2024-08-03T01:27:54.122Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:57:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2565|2024-08-03T00:39:08.081Z -- unknown -- simple%20payment%20donations%20%26%20subscriptions%20plugin%20by%20paymattic%20%E2%80%93%20best%20payments%20plugin%20for%20wp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2565</link>
      <description>The Simple Payment Donations &amp; Subscriptions WordPress plugin before 4.2.1 does not sanitise and escape user input given in its forms, which could allow unauthenticated attackers to perform Cross-Site Scripting attacks against admins</description>
      <guid isPermaLink="false">CVE-2022-2565|2024-08-03T00:39:08.081Z</guid>
      <pubDate>Mon, 05 Sep 2022 12:35:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3999|2024-08-03T01:27:54.067Z -- unknown -- dpd%20baltic%20shipping
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3999</link>
      <description>The DPD Baltic Shipping WordPress plugin before 1.2.57 does not have authorisation and CSRF in an AJAX action, which could allow any authenticated users, such as subscriber to delete arbitrary options from the blog, which could make the blog unavailable.</description>
      <guid isPermaLink="false">CVE-2022-3999|2024-08-03T01:27:54.067Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2118|2024-08-03T00:24:44.265Z -- unknown -- 404s
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2118</link>
      <description>The 404s WordPress plugin before 3.5.1 does not sanitise and escape its fields, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2118|2024-08-03T00:24:44.265Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:36:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3926|2024-08-03T01:27:53.908Z -- unknown -- wp%20oauth%20server%20%28oauth%20authentication%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3926</link>
      <description>The WP OAuth Server (OAuth Authentication) WordPress plugin before 3.4.2 does not have CSRF check when regenerating secrets, which could allow attackers to make logged in admins regenerate the secret of an arbitrary client given they know the client ID</description>
      <guid isPermaLink="false">CVE-2022-3926|2024-08-03T01:27:53.908Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2567|2024-08-03T00:39:08.088Z -- unknown -- form%20builder%20cp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2567</link>
      <description>The Form Builder CP WordPress plugin before 1.2.32 does not sanitise and escape some of its form settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2567|2024-08-03T00:39:08.088Z</guid>
      <pubDate>Mon, 19 Sep 2022 14:00:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4198|2024-08-03T01:34:49.637Z -- unknown -- wp%20social%20sharing
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4198</link>
      <description>The WP Social Sharing WordPress plugin through 2.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4198|2024-08-03T01:34:49.637Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3062|2024-08-03T01:00:10.359Z -- unknown -- simple%20file%20list
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3062</link>
      <description>The Simple File List WordPress plugin before 4.4.12 does not escape parameters before outputting them back in attributes, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-3062|2024-08-03T01:00:10.359Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1585|2024-08-03T00:10:03.753Z -- unknown -- wordpress%20project%20source%20code%20download
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1585</link>
      <description>The Project Source Code Download WordPress plugin through 1.0.0 does not protect its backup generation and download functionalities, which may allow any visitors on the site to download the entire site, including sensitive files like wp-config.php.</description>
      <guid isPermaLink="false">CVE-2022-1585|2024-08-03T00:10:03.753Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:48:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3237|2024-08-03T01:00:10.771Z -- unknown -- wp%20contact%20slider
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3237</link>
      <description>The WP Contact Slider WordPress plugin before 2.4.8 does not sanitize and escape its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-3237|2024-08-03T01:00:10.771Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3891|2024-08-03T01:20:58.483Z -- unknown -- wp%20fullcalendar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3891</link>
      <description>The WP FullCalendar WordPress plugin before 1.5 does not ensure that the post retrieved via an AJAX action is public and can be accessed by the user making the request, allowing unauthenticated attackers to get the content of arbitrary posts, including draft/private as well as password-protected ones.</description>
      <guid isPermaLink="false">CVE-2022-3891|2024-08-03T01:20:58.483Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1756|2024-08-03T00:16:59.701Z -- unknown -- newsletter%20%E2%80%93%20send%20awesome%20emails%20from%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1756</link>
      <description>The Newsletter WordPress plugin before 7.4.5 does not sanitize and escape the $_SERVER['REQUEST_URI'] before echoing it back in admin pages. Although this uses addslashes, and most modern browsers automatically URLEncode requests, this is still vulnerable to Reflected XSS in older browsers such as Internet Explorer 9 or below.</description>
      <guid isPermaLink="false">CVE-2022-1756|2024-08-03T00:16:59.701Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4792|2024-08-03T01:48:40.438Z -- unknown -- news%20%26%20blog%20designer%20pack
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4792</link>
      <description>The News &amp; Blog Designer Pack WordPress plugin before 3.3 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4792|2024-08-03T01:48:40.438Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3254|2024-08-03T01:07:05.871Z -- unknown -- wordpress%20classifieds%20plugin%20%E2%80%93%20ad%20directory%20%26%20listings%20by%20awp%20classifieds
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3254</link>
      <description>The WordPress Classifieds Plugin WordPress plugin before 4.3 does not properly sanitise and escape some parameters before using them in a SQL statement via an AJAX action available to unauthenticated users and when a specific premium module is active, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2022-3254|2024-08-03T01:07:05.871Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1569|2024-08-03T00:10:03.277Z -- unknown -- drag%20%26%20drop%20builder%2C%20human%20face%20detector%2C%20pre-built%20templates%2C%20spam%20protection%2C%20user%20email%20notifications%20%26%20more%21
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1569</link>
      <description>The Drag &amp; Drop Builder, Human Face Detector, Pre-built Templates, Spam Protection, User Email Notifications &amp; more! WordPress plugin before 1.4.9.4 does not sanitise and escape some of its form fields, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1569|2024-08-03T00:10:03.277Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4360|2024-08-03T01:34:50.189Z -- unknown -- wp%20rss%20by%20publishers
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4360</link>
      <description>The WP RSS By Publishers WordPress plugin through 0.1 does not properly sanitize and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2022-4360|2024-08-03T01:34:50.189Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2189|2024-08-03T00:32:08.665Z -- unknown -- wp%20video%20lightbox
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2189</link>
      <description>The WP Video Lightbox WordPress plugin before 1.9.5 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2022-2189|2024-08-03T00:32:08.665Z</guid>
      <pubDate>Mon, 25 Jul 2022 12:47:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3334|2024-08-03T01:07:06.431Z -- unknown -- easy%20wp%20smtp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3334</link>
      <description>The Easy WP SMTP WordPress plugin before 1.5.0 unserialises the content of an imported file, which could lead to PHP object injection issue when an admin import (intentionally or not) a malicious file and a suitable gadget chain is present on the blog.</description>
      <guid isPermaLink="false">CVE-2022-3334|2024-08-03T01:07:06.431Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1528|2024-08-03T00:10:03.230Z -- unknown -- vikbooking%20hotel%20booking%20engine%20%26%20pms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1528</link>
      <description>The VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.5.9 does not escape the current URL before putting it back in a JavaScript context, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-1528|2024-08-03T00:10:03.230Z</guid>
      <pubDate>Mon, 30 May 2022 08:35:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4571|2024-08-03T01:41:45.796Z -- unknown -- seriously%20simple%20podcasting
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4571</link>
      <description>The Seriously Simple Podcasting WordPress plugin before 2.19.1 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4571|2024-08-03T01:41:45.796Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2799|2024-08-03T00:46:04.581Z -- unknown -- affiliates%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2799</link>
      <description>The Affiliates Manager WordPress plugin before 2.9.14 does not sanitise and escape some of its settings, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2799|2024-08-03T00:46:04.581Z</guid>
      <pubDate>Fri, 16 Sep 2022 08:40:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4469|2024-08-03T01:41:44.709Z -- unknown -- simple%20membership
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4469</link>
      <description>The Simple Membership WordPress plugin before 4.2.2 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2022-4469|2024-08-03T01:41:44.709Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2373|2024-08-03T00:32:09.698Z -- unknown -- simply%20schedule%20appointments%20%E2%80%93%20wordpress%20booking%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2373</link>
      <description>The Simply Schedule Appointments WordPress plugin before 1.5.7.7 is missing authorisation in a REST endpoint, allowing unauthenticated users to retrieve WordPress users details such as name and email address</description>
      <guid isPermaLink="false">CVE-2022-2373|2024-08-03T00:32:09.698Z</guid>
      <pubDate>Mon, 29 Aug 2022 17:15:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3986|2024-08-03T01:27:53.979Z -- unknown -- wp%20stripe%20checkout
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3986</link>
      <description>The WP Stripe Checkout WordPress plugin before 1.2.2.21 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-3986|2024-08-03T01:27:53.979Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2877|2024-08-03T00:52:59.794Z -- unknown -- titan%20anti-spam%20%26%20security
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2877</link>
      <description>The Titan Anti-spam &amp; Security WordPress plugin before 7.3.1 does not properly checks HTTP headers in order to validate the origin IP address, allowing threat actors to bypass it's block feature by spoofing the headers.</description>
      <guid isPermaLink="false">CVE-2022-2877|2024-08-03T00:52:59.794Z</guid>
      <pubDate>Fri, 16 Sep 2022 08:40:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2299|2024-08-03T00:32:09.608Z -- unknown -- allow%20svg%20files
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2299</link>
      <description>The Allow SVG Files WordPress plugin through 1.1 does not sanitise uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads</description>
      <guid isPermaLink="false">CVE-2022-2299|2024-08-03T00:32:09.608Z</guid>
      <pubDate>Mon, 25 Jul 2022 12:48:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4000|2024-08-03T01:27:54.040Z -- unknown -- woocommerce%20shipping
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4000</link>
      <description>The WooCommerce Shipping WordPress plugin through 1.2.11 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4000|2024-08-03T01:27:54.040Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3829|2024-08-03T01:20:58.480Z -- unknown -- font%20awesome%204%20menus
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3829</link>
      <description>The Font Awesome 4 Menus WordPress plugin through 4.7.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3829|2024-08-03T01:20:58.480Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:53:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4681|2024-08-03T01:48:39.655Z -- unknown -- hide%20my%20wp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4681</link>
      <description>The Hide My WP WordPress plugin before 6.2.9 does not properly sanitize and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection.</description>
      <guid isPermaLink="false">CVE-2022-4681|2024-08-03T01:48:39.655Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4384|2024-08-03T01:41:44.451Z -- unknown -- stream
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4384</link>
      <description>The Stream WordPress plugin before 3.9.2 does not prevent users with little privileges on the site (like subscribers) from using its alert creation functionality, which may enable them to leak sensitive information.</description>
      <guid isPermaLink="false">CVE-2022-4384|2024-08-03T01:41:44.451Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2305|2024-08-03T00:32:09.697Z -- unknown -- popups%20%E2%80%93%20wordpress%20popup
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2305</link>
      <description>The WordPress Popup WordPress plugin through 1.9.3.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2305|2024-08-03T00:32:09.697Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:51:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4667|2024-08-03T01:48:39.430Z -- unknown -- rss%20aggregator%20by%20feedzy
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4667</link>
      <description>The RSS Aggregator by Feedzy WordPress plugin before 4.1.1 does not validate and escape some of its block options before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4667|2024-08-03T01:48:39.430Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4197|2024-08-03T01:34:49.676Z -- unknown -- sliderby10web
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4197</link>
      <description>The Sliderby10Web WordPress plugin before 1.2.53 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4197|2024-08-03T01:34:49.676Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2658|2024-08-03T00:46:03.605Z -- unknown -- wp%20spell%20check
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2658</link>
      <description>The WP Spell Check WordPress plugin before 9.13 does not escape ignored words, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2658|2024-08-03T00:46:03.605Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3604|2024-08-03T01:14:02.663Z -- unknown -- contact%20form%20entries
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3604</link>
      <description>The Contact Form Entries WordPress plugin before 1.3.0 does not validate data when its output in a CSV file, which could lead to CSV injection.</description>
      <guid isPermaLink="false">CVE-2022-3604|2024-08-03T01:14:02.663Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:52:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3631|2024-08-03T01:14:03.205Z -- unknown -- oauth%20client%20by%20digitialpixies
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3631</link>
      <description>The OAuth Client by DigitialPixies WordPress plugin through 1.1.0 does not sanitize and escapes some of its settings, which could allow high-privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example, in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3631|2024-08-03T01:14:03.205Z</guid>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3558|2024-08-03T01:14:01.544Z -- unknown -- import%20and%20export%20users%20and%20customers
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3558</link>
      <description>The Import and export users and customers WordPress plugin before 1.20.5 does not properly escape data when exporting it via CSV files.</description>
      <guid isPermaLink="false">CVE-2022-3558|2024-08-03T01:14:01.544Z</guid>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-25811|2024-08-03T04:49:44.141Z -- unknown -- transposh%20wordpress%20translation
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-25811</link>
      <description>The Transposh WordPress Translation WordPress plugin through 1.0.8 does not sanitise and escape the order and orderby parameters before using them in a SQL statement, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2022-25811|2024-08-03T04:49:44.141Z</guid>
      <pubDate>Mon, 22 Aug 2022 14:58:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1539|2024-08-03T00:10:03.492Z -- unknown -- exports%20and%20reports
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1539</link>
      <description>The Exports and Reports WordPress plugin before 0.9.2 does not sanitize and validate data when generating the CSV to export, which could lead to a CSV injection, by the use of Microsoft Excel DDE function, or to leak data via maliciously injected hyperlinks.</description>
      <guid isPermaLink="false">CVE-2022-1539|2024-08-03T00:10:03.492Z</guid>
      <pubDate>Mon, 25 Jul 2022 12:46:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4472|2024-08-03T01:41:44.879Z -- unknown -- simple%20sitemap
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4472</link>
      <description>The Simple Sitemap WordPress plugin before 3.5.8 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4472|2024-08-03T01:41:44.879Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1946|2024-08-03T00:24:43.005Z -- unknown -- gallery%20%E2%80%93%20image%20and%20video%20gallery%20with%20thumbnails
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1946</link>
      <description>The Gallery WordPress plugin before 2.0.0 does not sanitise and escape a parameter before outputting it back in the response of an AJAX action (available to both unauthenticated and authenticated users), leading to a Reflected Cross-Site Scripting issue</description>
      <guid isPermaLink="false">CVE-2022-1946|2024-08-03T00:24:43.005Z</guid>
      <pubDate>Mon, 04 Jul 2022 13:05:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2537|2024-08-03T00:39:08.074Z -- unknown -- woocommerce%20pdf%20invoices%20%26%20packing%20slips
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2537</link>
      <description>The WooCommerce PDF Invoices &amp; Packing Slips WordPress plugin before 3.0.1 does not sanitise and escape some parameters before outputting them back in an attributes of an admin page, leading to Reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2022-2537|2024-08-03T00:39:08.074Z</guid>
      <pubDate>Mon, 29 Aug 2022 17:15:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3416|2024-08-03T01:07:06.515Z -- unknown -- wptouch
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3416</link>
      <description>The WPtouch WordPress plugin before 4.3.45 does not properly validate images to be uploaded, allowing high privilege users such as admin to upload arbitrary files on the server even when they should not be allowed to (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3416|2024-08-03T01:07:06.515Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4832|2024-08-03T01:55:45.578Z -- unknown -- store%20locator%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4832</link>
      <description>The Store Locator WordPress plugin before 1.4.9 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4832|2024-08-03T01:55:45.578Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4828|2024-08-03T01:55:45.184Z -- unknown -- bold%20timeline%20lite
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4828</link>
      <description>The Bold Timeline Lite WordPress plugin before 1.1.5 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4828|2024-08-03T01:55:45.184Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4789|2024-08-03T01:48:40.490Z -- unknown -- wpzoom%20portfolio
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4789</link>
      <description>The WPZOOM Portfolio WordPress plugin before 1.2.2 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4789|2024-08-03T01:48:40.490Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4648|2024-08-03T01:48:39.663Z -- unknown -- real%20testimonials
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4648</link>
      <description>The Real Testimonials WordPress plugin before 2.6.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4648|2024-08-03T01:48:39.663Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4661|2024-08-03T01:48:38.951Z -- unknown -- widgets%20for%20woocommerce%20products%20on%20elementor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4661</link>
      <description>The Widgets for WooCommerce Products on Elementor WordPress plugin before 1.0.8 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4661|2024-08-03T01:48:38.951Z</guid>
      <pubDate>Mon, 13 Mar 2023 16:03:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4351|2024-08-03T01:34:50.133Z -- unknown -- qe%20seo%20handyman
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4351</link>
      <description>The Qe SEO Handyman WordPress plugin through 1.0 does not properly sanitize and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2022-4351|2024-08-03T01:34:50.133Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4340|2024-08-03T01:34:50.175Z -- unknown -- bookingpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4340</link>
      <description>The BookingPress WordPress plugin before 1.0.31 suffers from an Insecure Direct Object Reference (IDOR) vulnerability in it's thank you page, allowing any visitor to display information about any booking, including full name, date, time and service booked, by manipulating the appointment_id query parameter.</description>
      <guid isPermaLink="false">CVE-2022-4340|2024-08-03T01:34:50.175Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2410|2024-08-03T00:39:07.785Z -- unknown -- mtouch%20quiz
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2410</link>
      <description>The mTouch Quiz WordPress plugin through 3.1.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2410|2024-08-03T00:39:07.785Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:49:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4793|2024-08-03T01:48:40.465Z -- unknown -- blog%20designer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4793</link>
      <description>The Blog Designer WordPress plugin before 2.4.1 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4793|2024-08-03T01:48:40.465Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2328|2024-08-03T00:32:09.342Z -- unknown -- flexi%20quote%20rotator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2328</link>
      <description>The Flexi Quote Rotator WordPress plugin through 0.9.4 does not sanitise and escape its settings, allowing high privilege users such as admin to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2328|2024-08-03T00:32:09.342Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:52:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3395|2024-08-03T01:07:06.527Z -- unknown -- wp%20all%20export%20pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3395</link>
      <description>The WP All Export Pro WordPress plugin before 1.7.9 uses the contents of the cc_sql POST parameter directly as a database query, allowing users which has been given permission to run exports to execute arbitrary SQL statements, leading to a SQL Injection vulnerability. By default only users with the Administrator role can perform exports, but this can be delegated to lower privileged users as well.</description>
      <guid isPermaLink="false">CVE-2022-3395|2024-08-03T01:07:06.527Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2669|2024-08-03T00:46:04.080Z -- unknown -- wp%20taxonomy%20import
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2669</link>
      <description>The WP Taxonomy Import WordPress plugin through 1.0.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2669|2024-08-03T00:46:04.080Z</guid>
      <pubDate>Fri, 16 Sep 2022 08:40:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4368|2024-08-03T01:34:50.163Z -- unknown -- wp%20csv
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4368</link>
      <description>The WP CSV WordPress plugin through 1.8.0.0 does not sanitize and escape a parameter before outputting it back in the page when importing a CSV, and doe snot have CSRF checks in place as well, leading to a Reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2022-4368|2024-08-03T01:34:50.163Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2115|2024-08-03T00:24:44.274Z -- unknown -- popup%20anything%20%E2%80%93%20a%20marketing%20popup%20and%20lead%20generation%20conversions
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2115</link>
      <description>The Popup Anything WordPress plugin before 2.1.7 does not sanitise and escape a parameter before outputting it back in a frontend page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2115|2024-08-03T00:24:44.274Z</guid>
      <pubDate>Mon, 25 Jul 2022 12:46:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3894|2024-08-03T01:20:58.779Z -- unknown -- wp%20oauth%20server%20%28oauth%20authentication%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3894</link>
      <description>The WP OAuth Server (OAuth Authentication) WordPress plugin before 4.2.5 does not have CSRF check when deleting a client, and does not ensure that the object to be deleted is actually a client, which could allow attackers to make a logged in admin delete arbitrary client and post via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2022-3894|2024-08-03T01:20:58.779Z</guid>
      <pubDate>Mon, 20 Mar 2023 15:52:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1560|2024-08-03T00:10:03.383Z -- unknown -- amministrazione%20aperta
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1560</link>
      <description>The Amministrazione Aperta WordPress plugin before 3.8 does not validate the open parameter before using it in an include statement, leading to a Local File Inclusion issue. The original advisory mentions that unauthenticated users can exploit this, however the affected file generates a fatal error when accessed directly and the affected code is not reached. The issue can be exploited via the dashboard when logged in as an admin, or by making a logged in admin open a malicious link</description>
      <guid isPermaLink="false">CVE-2022-1560|2024-08-03T00:10:03.383Z</guid>
      <pubDate>Mon, 16 May 2022 14:31:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2094|2024-08-03T00:24:44.174Z -- unknown -- yellow%20yard%20searchbar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2094</link>
      <description>The Yellow Yard Searchbar WordPress plugin before 2.8.2 does not escape some URL parameters before outputting them back to the user, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2094|2024-08-03T00:24:44.174Z</guid>
      <pubDate>Wed, 08 Feb 2023 09:27:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-23179|2024-08-03T03:36:20.059Z -- unknown -- contact%20form%20%26%20lead%20form%20elementor%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-23179</link>
      <description>The Contact Form &amp; Lead Form Elementor Builder WordPress plugin before 1.7.0 does not escape some of its form fields before outputting them in attributes, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2022-23179|2024-08-03T03:36:20.059Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:52:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4109|2024-08-03T01:27:54.413Z -- unknown -- wholesale%20market%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4109</link>
      <description>The Wholesale Market for WooCommerce WordPress plugin before 2.0.0 does not validate user input against path traversal attacks, allowing high privilege users such as admin to download arbitrary logs from the server even when they should not be able to (for example in multisite)</description>
      <guid isPermaLink="false">CVE-2022-4109|2024-08-03T01:27:54.413Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4776|2024-08-03T01:48:40.426Z -- unknown -- cc%20child%20pages
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4776</link>
      <description>The CC Child Pages WordPress plugin before 1.43 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4776|2024-08-03T01:48:40.426Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4548|2024-08-03T01:41:45.614Z -- unknown -- optimize%20images%20alt%20text%20%28alt%20tag%29%20%26%20names%20for%20seo%20using%20ai
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4548</link>
      <description>The Optimize images ALT Text &amp; names for SEO using AI WordPress plugin before 2.0.8 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged-in admin change them via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2022-4548|2024-08-03T01:41:45.614Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2354|2024-08-03T00:32:09.812Z -- unknown -- wp-dbmanager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2354</link>
      <description>The WP-DBManager WordPress plugin before 2.80.8 does not prevent administrators from running arbitrary commands on the server in multisite installations, where only super-administrators should.</description>
      <guid isPermaLink="false">CVE-2022-2354|2024-08-03T00:32:09.812Z</guid>
      <pubDate>Mon, 15 Aug 2022 08:36:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3690|2024-08-03T01:14:03.298Z -- unknown -- popup%20maker
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3690</link>
      <description>The Popup Maker WordPress plugin before 1.16.11 does not sanitise and escape some of its Popup options, which could allow users with a role as low as Contributor to perform Stored Cross-Site Scripting attacks, which could be used against admins</description>
      <guid isPermaLink="false">CVE-2022-3690|2024-08-03T01:14:03.298Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4751|2024-08-03T01:48:40.233Z -- unknown -- word%20balloon
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4751</link>
      <description>The Word Balloon WordPress plugin before 4.19.3 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4751|2024-08-03T01:48:40.233Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2557|2024-08-03T00:39:08.000Z -- unknown -- team%20%E2%80%93%20wordpress%20team%20members%20showcase%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2557</link>
      <description>The Team WordPress plugin before 4.1.2 contains a file which could allow any authenticated users to download arbitrary files from the server via a path traversal vector. Furthermore, the file will also be deleted after its content is returned to the user</description>
      <guid isPermaLink="false">CVE-2022-2557|2024-08-03T00:39:08.000Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:04:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4266|2024-08-03T01:34:49.994Z -- unknown -- bulk%20delete%20users%20by%20email
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4266</link>
      <description>The Bulk Delete Users by Email WordPress plugin through 1.2 does not have CSRF check when deleting users, which could allow attackers to make a logged in admin delete non admin users by knowing their email via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-4266|2024-08-03T01:34:49.994Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1683|2024-08-03T00:10:03.749Z -- unknown -- amtythumb
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1683</link>
      <description>The amtyThumb WordPress plugin through 4.2.0 does not sanitise and escape a parameter before using it in a SQL statement via its shortcode, leading to an SQL injection and is exploitable by any authenticated user (and not just Author+ like the original advisory mention) due to the fact that they can execute shortcodes via an AJAX action</description>
      <guid isPermaLink="false">CVE-2022-1683|2024-08-03T00:10:03.749Z</guid>
      <pubDate>Mon, 06 Jun 2022 08:51:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4106|2024-08-03T01:27:54.544Z -- unknown -- wholesale%20market%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4106</link>
      <description>The Wholesale Market for WooCommerce WordPress plugin before 1.0.7 does not have authorisation check, as well as does not validate user input used to generate system path, allowing unauthenticated attackers to download arbitrary file from the server.</description>
      <guid isPermaLink="false">CVE-2022-4106|2024-08-03T01:27:54.544Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4488|2024-08-03T01:41:45.024Z -- unknown -- widgets%20on%20pages
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4488</link>
      <description>The Widgets on Pages WordPress plugin before 1.8.0 does not validate and escape its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4488|2024-08-03T01:41:45.024Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1847|2024-08-03T00:17:00.404Z -- unknown -- rotating%20posts
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1847</link>
      <description>The Rotating Posts WordPress plugin through 1.11 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1847|2024-08-03T00:17:00.404Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:58:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1624|2024-08-03T00:10:03.893Z -- unknown -- latest%20tweets%20widget
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1624</link>
      <description>The Latest Tweets Widget WordPress plugin through 1.1.4 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1624|2024-08-03T00:10:03.893Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1564|2024-08-03T00:10:03.623Z -- unknown -- form%20maker%20by%2010web%20%E2%80%93%20mobile-friendly%20drag%20%26%20drop%20contact%20form%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1564</link>
      <description>The Form Maker by 10Web WordPress plugin before 1.14.12 does not sanitize and escape the Custom Text settings, which could allow high privilege user such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2022-1564|2024-08-03T00:10:03.623Z</guid>
      <pubDate>Mon, 30 May 2022 08:35:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2834|2024-08-03T00:52:58.931Z -- unknown -- helpful
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2834</link>
      <description>The Helpful WordPress plugin before 4.5.26 puts the exported logs and feedbacks in a publicly accessible location and guessable names, which could allow attackers to download them and retrieve sensitive information such as IP, Names and Email Address depending on the plugin's settings</description>
      <guid isPermaLink="false">CVE-2022-2834|2024-08-03T00:52:58.931Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3919|2024-08-03T01:20:58.778Z -- unknown -- jetpack%20crm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3919</link>
      <description>The Jetpack CRM WordPress plugin before 5.4.3 does not sanitise and escape its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-3919|2024-08-03T01:20:58.778Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4693|2024-08-03T01:48:39.545Z -- unknown -- user%20verification
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4693</link>
      <description>The User Verification WordPress plugin before 1.0.94 was affected by an Auth Bypass security vulnerability. To bypass authentication, we only need to know the user’s username. Depending on whose username we know, which can be easily queried because it is usually public data, we may even be given an administrative role on the website.</description>
      <guid isPermaLink="false">CVE-2022-4693|2024-08-03T01:48:39.545Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3126|2024-08-03T01:00:09.662Z -- unknown -- frontend%20file%20manager%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3126</link>
      <description>The Frontend File Manager Plugin WordPress plugin before 21.4 does not have CSRF check when uploading files, which could allow attackers to make logged in users upload files on their behalf</description>
      <guid isPermaLink="false">CVE-2022-3126|2024-08-03T01:00:09.662Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4151|2024-08-03T01:27:54.463Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4151</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the option_id GET parameter before concatenating it to an SQL query in export-images-data.php. This may allow malicious users with at least author privilege to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4151|2024-08-03T01:27:54.463Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3539|2024-08-03T01:14:02.480Z -- unknown -- testimonials
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3539</link>
      <description>The Testimonials WordPress plugin before 2.7, super-testimonial-pro WordPress plugin before 1.0.8 do not sanitize and escape its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-3539|2024-08-03T01:14:02.480Z</guid>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2314|2024-08-03T00:32:09.676Z -- unknown -- vr%20calendar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2314</link>
      <description>The VR Calendar WordPress plugin through 2.3.2 lets any user execute arbitrary PHP functions on the site.</description>
      <guid isPermaLink="false">CVE-2022-2314|2024-08-03T00:32:09.676Z</guid>
      <pubDate>Mon, 15 Aug 2022 08:36:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1960|2024-08-03T00:24:43.987Z -- unknown -- mycss
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1960</link>
      <description>The MyCSS WordPress plugin through 1.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1960|2024-08-03T00:24:43.987Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:58:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1829|2024-08-03T00:16:59.969Z -- unknown -- inline%20google%20maps
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1829</link>
      <description>The Inline Google Maps WordPress plugin through 5.11 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack, and lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping</description>
      <guid isPermaLink="false">CVE-2022-1829|2024-08-03T00:16:59.969Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2268|2024-08-03T00:32:09.466Z -- unknown -- import%20any%20xml%20or%20csv%20file%20to%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2268</link>
      <description>The Import any XML or CSV File to WordPress plugin before 3.6.8 accepts all zip files and automatically extracts the zip file without validating the extracted file type. Allowing high privilege users such as admin to upload an arbitrary file like PHP, leading to RCE</description>
      <guid isPermaLink="false">CVE-2022-2268|2024-08-03T00:32:09.466Z</guid>
      <pubDate>Mon, 04 Jul 2022 13:06:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4049|2024-08-03T01:27:54.126Z -- unknown -- wp%20user
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4049</link>
      <description>The WP User WordPress plugin through 7.0 does not properly sanitize and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by unauthenticated users.</description>
      <guid isPermaLink="false">CVE-2022-4049|2024-08-03T01:27:54.126Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4829|2024-08-03T01:55:45.912Z -- unknown -- show-hide%20%2F%20collapse-expand
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4829</link>
      <description>The Show-Hide / Collapse-Expand WordPress plugin before 1.3.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4829|2024-08-03T01:55:45.912Z</guid>
      <pubDate>Mon, 27 Feb 2023 15:24:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1915|2024-08-03T00:17:00.931Z -- unknown -- wp%20zillow%20review%20slider
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1915</link>
      <description>The WP Zillow Review Slider WordPress plugin before 2.4 does not escape a settings, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite)</description>
      <guid isPermaLink="false">CVE-2022-1915|2024-08-03T00:17:00.931Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4718|2024-08-03T01:48:39.977Z -- unknown -- landing%20page%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4718</link>
      <description>The Landing Page Builder WordPress plugin before 1.4.9.9 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4718|2024-08-03T01:48:39.977Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:32:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3618|2024-08-03T01:14:02.855Z -- unknown -- spacer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3618</link>
      <description>The Spacer WordPress plugin before 3.0.7 does not sanitize and escapes some of its settings, which could allow high-privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example, in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3618|2024-08-03T01:14:02.855Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2983|2024-08-03T00:52:59.872Z -- unknown -- salat%20times
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2983</link>
      <description>The Salat Times WordPress plugin before 3.2.2 does not sanitize and escapes its settings, allowing high-privilege users such as admin to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2983|2024-08-03T00:52:59.872Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1758|2024-08-03T00:16:59.867Z -- unknown -- genki%20pre-publish%20reminder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1758</link>
      <description>The Genki Pre-Publish Reminder WordPress plugin through 1.4.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and lead to Stored XSS as well as RCE when custom code is added via the plugin settings.</description>
      <guid isPermaLink="false">CVE-2022-1758|2024-08-03T00:16:59.867Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4474|2024-08-03T01:41:44.982Z -- unknown -- easy%20social%20feed
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4474</link>
      <description>The Easy Social Feed WordPress plugin before 6.4.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2022-4474|2024-08-03T01:41:44.982Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2371|2024-08-03T00:32:09.561Z -- unknown -- yaysmtp%20%E2%80%93%20simple%20wp%20smtp%20mail
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2371</link>
      <description>The YaySMTP WordPress plugin before 2.2.1 does not have proper authorisation when saving its settings, allowing users with a role as low as subscriber to change them, and use that to conduct Stored Cross-Site Scripting attack due to the lack of escaping in them as well.</description>
      <guid isPermaLink="false">CVE-2022-2371|2024-08-03T00:32:09.561Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:47:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2544|2024-08-03T00:39:08.036Z -- unknown -- ninja%20job%20board%20%E2%80%93%20ultimate%20wordpress%20job%20board%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2544</link>
      <description>The Ninja Job Board WordPress plugin before 1.3.3 does not protect the directory where it stores uploaded resumes, making it vulnerable to unauthenticated Directory Listing which allows the download of uploaded resumes.</description>
      <guid isPermaLink="false">CVE-2022-2544|2024-08-03T00:39:08.036Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:03:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4482|2024-08-03T01:41:44.749Z -- unknown -- carousel%2C%20slider%2C%20gallery%20by%20wp%20carousel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4482</link>
      <description>The Carousel, Slider, Gallery by WP Carousel WordPress plugin before 2.5.3 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4482|2024-08-03T01:41:44.749Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2627|2024-08-03T00:46:03.419Z -- unknown -- newspaper
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2627</link>
      <description>The Newspaper WordPress theme before 12 does not sanitise a parameter before outputting it back in an HTML attribute via an AJAX action, leading to a Reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2022-2627|2024-08-03T00:46:03.419Z</guid>
      <pubDate>Mon, 31 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2635|2024-08-03T00:46:03.470Z -- unknown -- autoptimize
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2635</link>
      <description>The Autoptimize WordPress plugin before 3.1.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2635|2024-08-03T00:46:03.470Z</guid>
      <pubDate>Fri, 16 Sep 2022 08:40:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4759|2024-08-03T01:48:40.413Z -- unknown -- gigpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4759</link>
      <description>The GigPress WordPress plugin before 2.3.28 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4759|2024-08-03T01:48:40.413Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2926|2024-08-03T00:52:59.919Z -- unknown -- download%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2926</link>
      <description>The Download Manager WordPress plugin before 3.2.55 does not validate one of its settings, which could allow high privilege users such as admin to list and read arbitrary files and folders outside of the blog directory</description>
      <guid isPermaLink="false">CVE-2022-2926|2024-08-03T00:52:59.919Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2762|2024-08-03T00:46:04.494Z -- unknown -- adminpad
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2762</link>
      <description>The AdminPad WordPress plugin before 2.2 does not have CSRF check when updating admin's note, allowing attackers to make a logged in admin update their notes via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-2762|2024-08-03T00:46:04.494Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3074|2024-08-03T01:00:10.538Z -- unknown -- slider%20hero%20with%20animation%2C%20video%20background
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3074</link>
      <description>The Slider Hero WordPress plugin before 8.4.4 does not escape the slider Name, which could allow high-privileged users to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-3074|2024-08-03T01:00:10.538Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4329|2024-08-03T01:34:50.140Z -- unknown -- product%20list%20widget%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4329</link>
      <description>The Product list Widget for Woocommerce WordPress plugin through 1.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against both unauthenticated and authenticated users (such as high privilege one like admin).</description>
      <guid isPermaLink="false">CVE-2022-4329|2024-08-03T01:34:50.140Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2593|2024-08-03T00:39:07.994Z -- unknown -- better%20search%20replace
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2593</link>
      <description>The Better Search Replace WordPress plugin before 1.4.1 does not properly sanitise and escape table data before inserting it into a SQL query, which could allow high privilege users to perform SQL Injection attacks</description>
      <guid isPermaLink="false">CVE-2022-2593|2024-08-03T00:39:07.994Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:04:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4301|2024-08-03T01:34:50.057Z -- unknown -- sunshine%20photo%20cart
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4301</link>
      <description>The Sunshine Photo Cart WordPress plugin before 2.9.15 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2022-4301|2024-08-03T01:34:50.057Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4101|2024-08-03T01:27:54.487Z -- unknown -- images%20optimize%20and%20upload%20cf7
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4101</link>
      <description>The Images Optimize and Upload CF7 WordPress plugin through 2.1.4 does not validate the file to be deleted via an AJAX action available to unauthenticated users, which could allow them to delete arbitrary files on the server via path traversal attack.</description>
      <guid isPermaLink="false">CVE-2022-4101|2024-08-03T01:27:54.487Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3762|2024-08-03T01:20:57.608Z -- unknown -- booster%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3762</link>
      <description>The Booster for WooCommerce WordPress plugin before 5.6.7, Booster Plus for WooCommerce WordPress plugin before 5.6.5, Booster Elite for WooCommerce WordPress plugin before 1.1.7 do not validate files to download in some of its modules, which could allow ShopManager and Admin to download arbitrary files from the server even when they are not supposed to be able to (for example in multisite)</description>
      <guid isPermaLink="false">CVE-2022-3762|2024-08-03T01:20:57.608Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4107|2024-08-03T01:27:54.474Z -- unknown -- smsa%20shipping%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4107</link>
      <description>The SMSA Shipping for WooCommerce WordPress plugin before 1.0.5 does not have authorisation and proper CSRF checks, as well as does not validate the file to be downloaded, allowing any authenticated users, such as subscriber to download arbitrary file from the server</description>
      <guid isPermaLink="false">CVE-2022-4107|2024-08-03T01:27:54.474Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4162|2024-08-03T01:34:48.806Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4162</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the cg_row POST parameter before concatenating it to an SQL query in 3_row-order.php. This may allow malicious users with at least author privilege to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4162|2024-08-03T01:34:48.806Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4161|2024-08-03T01:34:48.791Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4161</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the cg_copy_start POST parameter before concatenating it to an SQL query in copy-gallery-images.php. This may allow malicious users with at least author privilege to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4161|2024-08-03T01:34:48.791Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:27:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2378|2024-08-03T00:39:06.235Z -- unknown -- easy%20student%20results
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2378</link>
      <description>The Easy Student Results WordPress plugin through 2.2.8 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2378|2024-08-03T00:39:06.235Z</guid>
      <pubDate>Mon, 15 Aug 2022 08:37:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2099|2024-08-03T00:24:44.425Z -- unknown -- woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2099</link>
      <description>The WooCommerce WordPress plugin before 6.6.0 is vulnerable to stored HTML injection due to lack of escaping and sanitizing in the payment gateway titles</description>
      <guid isPermaLink="false">CVE-2022-2099|2024-08-03T00:24:44.425Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:35:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2411|2024-08-03T00:39:07.269Z -- unknown -- auto%20more%20tag
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2411</link>
      <description>The Auto More Tag WordPress plugin through 4.0.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2411|2024-08-03T00:39:07.269Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:49:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1827|2024-08-03T00:17:00.867Z -- unknown -- pdf24%20article%20to%20pdf
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1827</link>
      <description>The PDF24 Article To PDF WordPress plugin through 4.2.2 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1827|2024-08-03T00:17:00.867Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4307|2024-08-03T01:34:50.151Z -- unknown -- %D9%BE%D9%84%D8%A7%DA%AF%DB%8C%D9%86%20%D9%BE%D8%B1%D8%AF%D8%A7%D8%AE%D8%AA%20%D8%AF%D9%84%D8%AE%D9%88%D8%A7%D9%87
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4307</link>
      <description>The پلاگین پرداخت دلخواه WordPress plugin before 2.9.3 does not sanitise and escape some parameters, allowing unauthenticated attackers to send a request with XSS payloads, which will be triggered when a high privilege users such as admin visits a page from the plugin.</description>
      <guid isPermaLink="false">CVE-2022-4307|2024-08-03T01:34:50.151Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4787|2024-08-03T01:48:40.469Z -- unknown -- themify%20shortcodes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4787</link>
      <description>Themify Shortcodes WordPress plugin before 2.0.8 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4787|2024-08-03T01:48:40.469Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4622|2024-08-03T01:48:40.411Z -- unknown -- login%20logout%20menu
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4622</link>
      <description>The Login Logout Menu WordPress plugin through 1.3.3 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4622|2024-08-03T01:48:40.411Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4825|2024-08-03T01:55:44.211Z -- unknown -- wp-showhide
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4825</link>
      <description>The WP-ShowHide WordPress plugin before 1.05 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4825|2024-08-03T01:55:44.211Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-23180|2024-08-03T03:36:19.950Z -- unknown -- contact%20form%20%26%20lead%20form%20elementor%20builder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-23180</link>
      <description>The Contact Form &amp; Lead Form Elementor Builder WordPress plugin before 1.7.4 doesn't have authorisation and nonce checks, which could allow any authenticated users, such as subscriber to update and change various settings</description>
      <guid isPermaLink="false">CVE-2022-23180|2024-08-03T03:36:19.950Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:52:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3858|2024-08-03T01:20:58.467Z -- unknown -- floating%20chat%20widget%3A%20contact%20chat%20icons%2C%20telegram%20chat%2C%20line%2C%20wechat%2C%20email%2C%20sms%2C%20call%20button
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3858</link>
      <description>The Floating Chat Widget: Contact Chat Icons, Telegram Chat, Line, WeChat, Email, SMS, Call Button WordPress plugin before 3.0.3 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as admin.</description>
      <guid isPermaLink="false">CVE-2022-3858|2024-08-03T01:20:58.467Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1791|2024-08-03T00:17:00.794Z -- unknown -- one%20click%20plugin%20updater
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1791</link>
      <description>The One Click Plugin Updater WordPress plugin through 2.4.14 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and disable / hide the badge of the available updates and the related check.</description>
      <guid isPermaLink="false">CVE-2022-1791|2024-08-03T00:17:00.794Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4256|2024-08-03T01:34:49.870Z -- unknown -- all-in-one%20addons%20for%20elementor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4256</link>
      <description>The All-in-One Addons for Elementor WordPress plugin before 2.4.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-4256|2024-08-03T01:34:49.870Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1663|2024-08-03T00:10:03.842Z -- unknown -- stop%20spam%20comments
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1663</link>
      <description>The Stop Spam Comments WordPress plugin through 0.2.1.2 does not properly generate the Javascript access token for preventing abuse of comment section, allowing threat authors to easily collect the value and add it to the request.</description>
      <guid isPermaLink="false">CVE-2022-1663|2024-08-03T00:10:03.842Z</guid>
      <pubDate>Mon, 29 Aug 2022 14:40:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4112|2024-08-03T01:27:54.529Z -- unknown -- quizlord
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4112</link>
      <description>The Quizlord WordPress plugin through 2.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4112|2024-08-03T01:27:54.529Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3609|2024-08-03T01:14:02.093Z -- unknown -- getyourguide%20ticketing
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3609</link>
      <description>The GetYourGuide Ticketing WordPress plugin before 1.0.4 does not sanitise and escape some parameters, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3609|2024-08-03T01:14:02.093Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4546|2024-08-03T01:41:45.607Z -- unknown -- mapwiz
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4546</link>
      <description>The Mapwiz WordPress plugin through 1.0.1 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2022-4546|2024-08-03T01:41:45.607Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4785|2024-08-03T01:48:40.394Z -- unknown -- video%20sidebar%20widgets
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4785</link>
      <description>The Video Sidebar Widgets WordPress plugin through 6.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4785|2024-08-03T01:48:40.394Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1800|2024-08-03T00:17:00.638Z -- unknown -- export%20any%20wordpress%20data%20to%20xml%2Fcsv
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1800</link>
      <description>The Export any WordPress data to XML/CSV WordPress plugin before 1.3.5 does not sanitize the cpt POST parameter when exporting post data before using it in a database query, leading to an SQL injection vulnerability.</description>
      <guid isPermaLink="false">CVE-2022-1800|2024-08-03T00:17:00.638Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:43:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2278|2024-08-03T00:32:09.669Z -- unknown -- featured%20image%20from%20url%20%28fifu%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2278</link>
      <description>The Featured Image from URL (FIFU) WordPress plugin before 4.0.1 does not validate, sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2278|2024-08-03T00:32:09.669Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:51:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4260|2024-08-03T01:34:49.926Z -- unknown -- wp-ban
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4260</link>
      <description>The WP-Ban WordPress plugin before 1.69.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4260|2024-08-03T01:34:49.926Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4651|2024-08-03T01:48:39.416Z -- unknown -- justified%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4651</link>
      <description>The Justified Gallery WordPress plugin before 1.7.1 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4651|2024-08-03T01:48:39.416Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3985|2024-08-03T01:27:54.278Z -- unknown -- videojs%20html5%20player
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3985</link>
      <description>The Videojs HTML5 Player WordPress plugin before 1.1.9 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-3985|2024-08-03T01:27:54.278Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4468|2024-08-03T01:41:44.735Z -- unknown -- wp%20recipe%20maker
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4468</link>
      <description>The WP Recipe Maker WordPress plugin before 8.6.1 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2022-4468|2024-08-03T01:41:44.735Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4154|2024-08-03T01:27:54.540Z -- unknown -- contest%20gallery%20pro
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4154</link>
      <description>The Contest Gallery Pro WordPress plugin before 19.1.5 does not escape the wp_user_id GET parameter before concatenating it to an SQL query in management-show-user.php. This may allow malicious users with at administrator privileges (i.e. on multisite WordPress configurations) to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4154|2024-08-03T01:27:54.540Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4058|2024-08-03T01:27:54.541Z -- unknown -- photo%20gallery%20by%2010web
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4058</link>
      <description>The Photo Gallery by 10Web WordPress plugin before 1.8.3 does not validate and escape some parameters before outputting them back in in JS code later on in another page, which could lead to Stored XSS issue when an attacker makes a logged in admin open a malicious URL or page under their control.</description>
      <guid isPermaLink="false">CVE-2022-4058|2024-08-03T01:27:54.541Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3836|2024-08-03T01:20:58.299Z -- unknown -- seed%20social
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3836</link>
      <description>The Seed Social WordPress plugin before 2.0.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3836|2024-08-03T01:20:58.299Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:50:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4369|2024-08-03T01:34:50.166Z -- unknown -- wp-lister%20lite%20for%20amazon
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4369</link>
      <description>The WP-Lister Lite for Amazon WordPress plugin before 2.4.4 does not sanitize and escapes a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which can be used against high-privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2022-4369|2024-08-03T01:34:50.166Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2425|2024-08-03T00:39:07.629Z -- unknown -- wp%20ds%20blog%20map
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2425</link>
      <description>The WP DS Blog Map WordPress plugin through 3.1.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2425|2024-08-03T00:39:07.629Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:50:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4391|2024-08-03T01:41:44.485Z -- unknown -- vision%20interactive%20for%20wordpress
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4391</link>
      <description>The Vision Interactive For WordPress plugin through 1.5.3 does not sanitise and escape some of its settings, which could allow users such as contributor+ to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-4391|2024-08-03T01:41:44.485Z</guid>
      <pubDate>Mon, 09 Jan 2023 22:13:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3922|2024-08-03T01:20:58.803Z -- unknown -- broken%20link%20checker
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3922</link>
      <description>The Broken Link Checker WordPress plugin before 1.11.20 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3922|2024-08-03T01:20:58.803Z</guid>
      <pubDate>Wed, 28 Dec 2022 10:37:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2187|2024-08-03T00:32:08.696Z -- unknown -- contact%20form%207%20captcha
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2187</link>
      <description>The Contact Form 7 Captcha WordPress plugin before 0.1.2 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2022-2187|2024-08-03T00:32:08.696Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:37:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4483|2024-08-03T01:41:45.237Z -- unknown -- insert%20pages
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4483</link>
      <description>The Insert Pages WordPress plugin before 3.7.5 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4483|2024-08-03T01:41:45.237Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:38:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1540|2024-08-03T00:10:03.363Z -- unknown -- postmagthemes%20demo%20import
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1540</link>
      <description>The PostmagThemes Demo Import WordPress plugin through 1.0.7 does not validate the imported file, allowing high-privilege users such as admin to upload arbitrary files (such as PHP) leading to RCE.</description>
      <guid isPermaLink="false">CVE-2022-1540|2024-08-03T00:10:03.363Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4005|2024-08-03T01:27:54.146Z -- unknown -- donation%20button
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4005</link>
      <description>The Donation Button WordPress plugin through 4.0.0 does not sanitize and escapes some parameters, which could allow users with a role as low as Contributor to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-4005|2024-08-03T01:27:54.146Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3484|2024-08-03T01:14:01.486Z -- unknown -- wpb-show-core
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3484</link>
      <description>The WPB Show Core WordPress plugin does not sanitize and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2022-3484|2024-08-03T01:14:01.486Z</guid>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4761|2024-08-03T01:48:40.403Z -- unknown -- post%20views%20count%20%28support%20caching%20plugins%21%29
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4761</link>
      <description>The Post Views Count WordPress plugin through 3.0.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4761|2024-08-03T01:48:40.403Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3983|2024-08-03T01:27:54.098Z -- unknown -- checkout%20for%20paypal
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3983</link>
      <description>The Checkout for PayPal WordPress plugin before 1.0.14 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-3983|2024-08-03T01:27:54.098Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2753|2024-08-03T00:46:04.516Z -- unknown -- ketchup%20restaurant%20reservations
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2753</link>
      <description>The Ketchup Restaurant Reservations WordPress plugin through 1.0.0 does not sanitise and escape some of the reservation user inputs, allowing unauthenticated attackers to perform Cross-Site Scripting attacks logged in admin viewing the malicious reservation made</description>
      <guid isPermaLink="false">CVE-2022-2753|2024-08-03T00:46:04.516Z</guid>
      <pubDate>Mon, 19 Sep 2022 14:01:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4237|2024-08-03T01:34:49.984Z -- unknown -- welcart%20e-commerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4237</link>
      <description>The Welcart e-Commerce WordPress plugin before 2.8.6 does not validate user input before using it in file_exist() functions via various AJAX actions available to any authenticated users, which could allow users with a role as low as subscriber to perform PHAR deserialisation when they can upload a file and a suitable gadget chain is present on the blog</description>
      <guid isPermaLink="false">CVE-2022-4237|2024-08-03T01:34:49.984Z</guid>
      <pubDate>Mon, 02 Jan 2023 21:49:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3336|2024-08-03T01:07:06.547Z -- unknown -- event%20monster
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3336</link>
      <description>The Event Monster WordPress plugin before 1.2.0 does not have CSRF check when deleting visitors, which could allow attackers to make logged in admin delete arbitrary visitors via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-3336|2024-08-03T01:07:06.547Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2083|2024-08-03T00:24:44.125Z -- unknown -- simple%20single%20sign%20on
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2083</link>
      <description>The Simple Single Sign On WordPress plugin through 4.1.0 leaks its OAuth client_secret, which could be used by attackers to gain unauthorized access to the site.</description>
      <guid isPermaLink="false">CVE-2022-2083|2024-08-03T00:24:44.125Z</guid>
      <pubDate>Mon, 05 Sep 2022 12:35:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2194|2024-08-03T00:32:08.626Z -- unknown -- accept%20stripe%20payments
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2194</link>
      <description>The Accept Stripe Payments WordPress plugin before 2.0.64 does not sanitize and escape some of its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2194|2024-08-03T00:32:08.626Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:37:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4117|2024-08-03T01:27:54.505Z -- unknown -- iws
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4117</link>
      <description>The IWS WordPress plugin through 1.0 does not properly escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to an unauthenticated SQL injection.</description>
      <guid isPermaLink="false">CVE-2022-4117|2024-08-03T01:27:54.505Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2407|2024-08-03T00:39:07.097Z -- unknown -- wp%20phpmyadmin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2407</link>
      <description>The WP phpMyAdmin WordPress plugin before 5.2.0.4 does not escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2407|2024-08-03T00:39:07.097Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:03:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2271|2024-08-03T00:32:09.545Z -- unknown -- wp%20database%20backup
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2271</link>
      <description>The WP Database Backup WordPress plugin before 5.9 does not escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2271|2024-08-03T00:32:09.545Z</guid>
      <pubDate>Mon, 05 Sep 2022 12:35:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4108|2024-08-03T01:27:54.475Z -- unknown -- wholesale%20market%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4108</link>
      <description>The Wholesale Market for WooCommerce WordPress plugin before 1.0.8 does not validate user input used to generate system path, allowing high privilege users such as admin to download arbitrary file from the server even when they should not be able to (for example in multisite)</description>
      <guid isPermaLink="false">CVE-2022-4108|2024-08-03T01:27:54.475Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4649|2024-08-03T01:48:39.617Z -- unknown -- wp%20extended%20search
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4649</link>
      <description>The WP Extended Search WordPress plugin before 2.1.2 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2022-4649|2024-08-03T01:48:39.617Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3937|2024-08-03T01:27:53.880Z -- unknown -- easy%20video%20player
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3937</link>
      <description>The Easy Video Player WordPress plugin before 1.2.2.3 does not sanitize and escapes some parameters, which could allow users with a role as low as Contributor to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2022-3937|2024-08-03T01:27:53.880Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2754|2024-08-03T00:46:04.319Z -- unknown -- ketchup%20restaurant%20reservations
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2754</link>
      <description>The Ketchup Restaurant Reservations WordPress plugin through 1.0.0 does not validate and escape some reservation parameters before using them in SQL statements, which could allow unauthenticated attackers to perform SQL Injection attacks</description>
      <guid isPermaLink="false">CVE-2022-2754|2024-08-03T00:46:04.319Z</guid>
      <pubDate>Mon, 19 Sep 2022 14:01:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3982|2024-08-03T01:27:54.241Z -- unknown -- booking%20calendar%2C%20appointment%20booking%20system
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3982</link>
      <description>The Booking calendar, Appointment Booking System WordPress plugin before 3.2.2 does not validate uploaded files, which could allow unauthenticated users to upload arbitrary files, such as PHP and achieve RCE</description>
      <guid isPermaLink="false">CVE-2022-3982|2024-08-03T01:27:54.241Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4551|2024-08-03T01:41:45.582Z -- unknown -- rich%20table%20of%20contents
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4551</link>
      <description>The Rich Table of Contents WordPress plugin before 1.3.9 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4551|2024-08-03T01:41:45.582Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3838|2024-08-03T01:20:58.762Z -- unknown -- wpupper%20share%20buttons
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3838</link>
      <description>The WPUpper Share Buttons WordPress plugin through 3.42 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3838|2024-08-03T01:20:58.762Z</guid>
      <pubDate>Mon, 05 Dec 2022 16:50:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3098|2024-08-03T01:00:10.522Z -- unknown -- login%20block%20ips
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3098</link>
      <description>The Login Block IPs WordPress plugin through 1.0.0 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-3098|2024-08-03T01:00:10.522Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4746|2024-08-03T01:48:40.395Z -- unknown -- fluentauth
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4746</link>
      <description>The FluentAuth WordPress plugin before 1.0.2 prioritizes getting a visitor's IP address from certain HTTP headers over PHP's REMOTE_ADDR, which makes it possible to bypass the IP-based blocks set by the plugin.</description>
      <guid isPermaLink="false">CVE-2022-4746|2024-08-03T01:48:40.395Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4163|2024-08-03T01:34:48.814Z -- unknown -- contest%20gallery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4163</link>
      <description>The Contest Gallery WordPress plugin before 19.1.5.1, Contest Gallery Pro WordPress plugin before 19.1.5.1 do not escape the cg_deactivate and cg_activate POST parameters before concatenating it to an SQL query in  2_deactivate.php and 4_activate.php, respectively. This may allow malicious users with at least author privilege to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2022-4163|2024-08-03T01:34:48.814Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4125|2024-08-03T01:27:54.511Z -- unknown -- popup%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4125</link>
      <description>The Popup Manager WordPress plugin through 1.6.6 does not have authorisation and CSRF check when creating/updating popups, and is missing sanitisation as well as escaping, which could allow unauthenticated attackers to create arbitrary popups and add Stored XSS payloads as well</description>
      <guid isPermaLink="false">CVE-2022-4125|2024-08-03T01:27:54.511Z</guid>
      <pubDate>Mon, 19 Dec 2022 13:41:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2379|2024-08-03T00:39:06.362Z -- unknown -- easy%20student%20results
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2379</link>
      <description>The Easy Student Results WordPress plugin through 2.2.8 lacks authorisation in its REST API, allowing unauthenticated users to retrieve information related to the courses, exams, departments as well as student's grades and PII such as email address, physical address, phone number etc</description>
      <guid isPermaLink="false">CVE-2022-2379|2024-08-03T00:39:06.362Z</guid>
      <pubDate>Mon, 15 Aug 2022 08:37:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1549|2024-08-03T00:10:03.671Z -- unknown -- wp%20athletics
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1549</link>
      <description>The WP Athletics WordPress plugin through 1.1.7 does not sanitize parameters before storing them in the database, nor does it escape the values when outputting them back in the admin dashboard, leading to a Stored Cross-Site Scripting vulnerability.</description>
      <guid isPermaLink="false">CVE-2022-1549|2024-08-03T00:10:03.671Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:41:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2267|2024-08-03T00:32:09.262Z -- unknown -- mailchimp%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2267</link>
      <description>The Mailchimp for WooCommerce WordPress plugin before 2.7.1 has an AJAX action that allows any logged in users (such as subscriber) to perform a POST request on behalf of the server to the internal network/LAN, the body of the request is also appended to the response so it can be used to scan private network for example</description>
      <guid isPermaLink="false">CVE-2022-2267|2024-08-03T00:32:09.262Z</guid>
      <pubDate>Mon, 29 Aug 2022 17:15:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1653|2024-08-03T00:10:03.754Z -- unknown -- social%20share%20buttons%20by%20supsystic
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1653</link>
      <description>The Social Share Buttons by Supsystic WordPress plugin before 2.2.4 does not perform CSRF checks in it's ajax endpoints and admin pages, allowing an attacker to trick any logged in user to manipulate or change the plugin settings, as well as create, delete and rename projects and networks.</description>
      <guid isPermaLink="false">CVE-2022-1653|2024-08-03T00:10:03.754Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:57:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3899|2024-08-03T01:20:58.555Z -- unknown -- 3dprint
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3899</link>
      <description>The 3dprint WordPress plugin before 3.5.6.9 does not protect against CSRF attacks in the modified version of Tiny File Manager included with the plugin, allowing an attacker to craft a malicious request that will delete any number of files or directories on the target server by tricking a logged in admin into submitting a form.</description>
      <guid isPermaLink="false">CVE-2022-3899|2024-08-03T01:20:58.555Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:50:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2269|2024-08-03T00:32:09.316Z -- unknown -- website%20file%20changes%20monitor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2269</link>
      <description>The Website File Changes Monitor WordPress plugin before 1.8.3 does not sanitise and escape user input before using it in a SQL statement via an action available to users with the manage_options capability (by default admins), leading to an SQL injection</description>
      <guid isPermaLink="false">CVE-2022-2269|2024-08-03T00:32:09.316Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:46:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1945|2024-08-03T00:24:42.604Z -- unknown -- coming%20soon%20%26%20maintenance%20mode%20by%20colorlib
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1945</link>
      <description>The Coming Soon &amp; Maintenance Mode by Colorlib WordPress plugin before 1.0.99 does not sanitize and escape some settings, allowing high privilege users such as admin to perform Stored Cross-Site Scripting when unfiltered_html is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-1945|2024-08-03T00:24:42.604Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:26:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3763|2024-08-03T01:20:58.275Z -- unknown -- booster%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3763</link>
      <description>The Booster for WooCommerce WordPress plugin before 5.6.7, Booster Plus for WooCommerce WordPress plugin before 5.6.5, Booster Elite for WooCommerce WordPress plugin before 1.1.7 do not have CSRF check in place when deleting files uploaded at the checkout, allowing attackers to make a logged in shop manager or admin delete them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-3763|2024-08-03T01:20:58.275Z</guid>
      <pubDate>Mon, 21 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2392|2024-08-03T00:39:06.383Z -- unknown -- lana%20downloads%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2392</link>
      <description>The Lana Downloads Manager WordPress plugin before 1.8.0 is affected by an arbitrary file download vulnerability that can be exploited by users with "Contributor" permissions or higher.</description>
      <guid isPermaLink="false">CVE-2022-2392|2024-08-03T00:39:06.383Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:03:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2556|2024-08-03T00:39:07.985Z -- unknown -- mailchimp%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2556</link>
      <description>The Mailchimp for WooCommerce WordPress plugin before 2.7.2 has an AJAX action that allows high privilege users to perform a POST request on behalf of the server to the internal network/LAN, the body of the request is also appended to the response so it can be used to scan private network for example</description>
      <guid isPermaLink="false">CVE-2022-2556|2024-08-03T00:39:07.985Z</guid>
      <pubDate>Mon, 29 Aug 2022 17:15:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3135|2024-08-03T01:00:10.561Z -- unknown -- seo%20smart%20links
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3135</link>
      <description>The SEO Smart Links WordPress plugin through 3.0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-3135|2024-08-03T01:00:10.561Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3536|2024-08-03T01:14:02.420Z -- unknown -- role%20based%20pricing%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3536</link>
      <description>The Role Based Pricing for WooCommerce WordPress plugin before 1.6.3 does not have authorisation and proper CSRF checks, as well as does not validate path given via user input, allowing any authenticated users like subscriber to perform PHAR deserialization attacks when they can upload a file, and a suitable gadget chain is present on the blog</description>
      <guid isPermaLink="false">CVE-2022-3536|2024-08-03T01:14:02.420Z</guid>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1952|2024-08-03T00:24:43.675Z -- unknown -- free%20booking%20plugin%20for%20hotels%2C%20restaurant%20and%20car%20rental%20%E2%80%93%20easync
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1952</link>
      <description>The Free Booking Plugin for Hotels, Restaurant and Car Rental WordPress plugin before 1.1.16 suffers from insufficient input validation which leads to arbitrary file upload and subsequently to remote code execution. An AJAX action accessible to unauthenticated users is affected by this issue. An allowlist of valid file extensions is defined but is not used during the validation steps.</description>
      <guid isPermaLink="false">CVE-2022-1952|2024-08-03T00:24:43.675Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:56:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-23911|2024-08-03T03:59:22.478Z -- unknown -- testimonial%20wordpress%20plugin%20%E2%80%93%20ap%20custom%20testimonial
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-23911</link>
      <description>The Testimonial WordPress Plugin WordPress plugin before 1.4.7 does not validate and escape the id parameter before using it in a SQL statement when retrieving a testimonial to edit, leading to a SQL Injection</description>
      <guid isPermaLink="false">CVE-2022-23911|2024-08-03T03:59:22.478Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4795|2024-08-03T01:48:40.414Z -- unknown -- galleries%20by%20angie%20makes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4795</link>
      <description>The Galleries by Angie Makes WordPress plugin through 1.67 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4795|2024-08-03T01:48:40.414Z</guid>
      <pubDate>Mon, 27 Feb 2023 15:24:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3862|2024-08-03T01:20:58.779Z -- unknown -- livemesh%20addons%20for%20elementor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3862</link>
      <description>The Livemesh Addons for Elementor WordPress plugin before 7.2.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3862|2024-08-03T01:20:58.779Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1913|2024-08-03T00:17:00.938Z -- unknown -- add%20post%20url
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1913</link>
      <description>The Add Post URL WordPress plugin through 2.1.0 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping</description>
      <guid isPermaLink="false">CVE-2022-1913|2024-08-03T00:17:00.938Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:58:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4671|2024-08-03T01:48:39.499Z -- unknown -- pixcodes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4671</link>
      <description>The PixCodes WordPress plugin before 2.3.7 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4671|2024-08-03T01:48:39.499Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2215|2024-08-03T00:32:09.421Z -- unknown -- givewp%20%E2%80%93%20donation%20plugin%20and%20fundraising%20platform
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2215</link>
      <description>The GiveWP WordPress plugin before 2.21.3 does not properly sanitise and escape the currency settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2022-2215|2024-08-03T00:32:09.421Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:50:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3835|2024-08-03T01:20:58.762Z -- unknown -- kwayy%20html%20sitemap
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3835</link>
      <description>The Kwayy HTML Sitemap WordPress plugin before 4.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-3835|2024-08-03T01:20:58.762Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1916|2024-08-03T00:17:00.927Z -- unknown -- active%20products%20tables%20for%20woocommerce.%20professional%20products%20tables%20for%20woocommerce%20store
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1916</link>
      <description>The Active Products Tables for WooCommerce. Professional products tables for WooCommerce store WordPress plugin before 1.0.5 does not sanitise and escape a parameter before outputting it back in the response of an AJAX action (available to both unauthenticated and authenticated users), leading to a Reflected cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-1916|2024-08-03T00:17:00.927Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:58:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1626|2024-08-03T00:10:03.787Z -- unknown -- sharebar
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1626</link>
      <description>The Sharebar WordPress plugin through 1.4.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and also lead to Stored Cross-Site Scripting issue due to the lack of sanitisation and escaping in some of them</description>
      <guid isPermaLink="false">CVE-2022-1626|2024-08-03T00:10:03.787Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:56:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4239|2024-08-03T01:34:49.603Z -- unknown -- workreap
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4239</link>
      <description>The Workreap WordPress theme before 2.6.4 does not verify that an addon service belongs to the user issuing the request, or indeed that it is an addon service, when processing the workreap_addons_service_remove action, allowing any user to delete any post by knowing or guessing the id.</description>
      <guid isPermaLink="false">CVE-2022-4239|2024-08-03T01:34:49.603Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3883|2024-08-03T01:20:58.630Z -- unknown -- block%20bad%20bots%20and%20stop%20bad%20bots%20crawlers%20and%20spiders%20and%20anti%20spam%20protection
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3883</link>
      <description>The Block Bad Bots and Stop Bad Bots Crawlers and Spiders and Anti Spam Protection WordPress plugin before 7.24 does not have proper authorisation and CSRF in an AJAX action, allowing any authenticated users, such as subscriber to call it and install and activate arbitrary plugins from wordpress.org</description>
      <guid isPermaLink="false">CVE-2022-3883|2024-08-03T01:20:58.630Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3768|2024-08-03T01:20:57.687Z -- unknown -- wpsmartcontracts
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3768</link>
      <description>The WPSmartContracts WordPress plugin before 1.3.12 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as author</description>
      <guid isPermaLink="false">CVE-2022-3768|2024-08-03T01:20:57.687Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3463|2024-08-03T01:07:06.641Z -- unknown -- contact%20form%20plugin%20%E2%80%93%20fastest%20contact%20form%20builder%20plugin%20for%20wordpress%20by%20fluent%20forms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3463</link>
      <description>The Contact Form Plugin WordPress plugin before 4.3.13 does not validate and escape fields when exporting form entries as CSV, leading to a CSV injection</description>
      <guid isPermaLink="false">CVE-2022-3463|2024-08-03T01:07:06.641Z</guid>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1610|2024-08-03T00:10:03.683Z -- unknown -- seamless%20donations%3A%20a%20platform%20for%20global%20fundraising%20and%20rebuilding%20using%20stripe%20and%20paypal
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1610</link>
      <description>The Seamless Donations WordPress plugin before 5.1.9 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1610|2024-08-03T00:10:03.683Z</guid>
      <pubDate>Mon, 20 Jun 2022 10:25:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3904|2024-08-03T01:20:58.788Z -- unknown -- monsterinsights
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3904</link>
      <description>The MonsterInsights WordPress plugin before 8.9.1 does not sanitize or escape page titles in the top posts/pages section, allowing an unauthenticated attacker to inject arbitrary web scripts into the titles by spoofing requests to google analytics.</description>
      <guid isPermaLink="false">CVE-2022-3904|2024-08-03T01:20:58.788Z</guid>
      <pubDate>Mon, 16 Jan 2023 15:37:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4624|2024-08-03T01:48:38.946Z -- unknown -- gs%20logo%20slider
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4624</link>
      <description>The GS Logo Slider WordPress plugin before 3.3.8 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4624|2024-08-03T01:48:38.946Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4303|2024-08-03T01:34:50.145Z -- unknown -- wp%20limit%20login%20attempts
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4303</link>
      <description>The WP Limit Login Attempts WordPress plugin through 2.6.4 prioritizes getting a visitor's IP from certain HTTP headers over PHP's REMOTE_ADDR, which makes it possible to bypass IP-based restrictions on login forms.</description>
      <guid isPermaLink="false">CVE-2022-4303|2024-08-03T01:34:50.145Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1842|2024-08-03T00:17:00.917Z -- unknown -- openbook%20book%20data
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1842</link>
      <description>The OpenBook Book Data WordPress plugin through 3.5.2 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack and lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping as well</description>
      <guid isPermaLink="false">CVE-2022-1842|2024-08-03T00:17:00.917Z</guid>
      <pubDate>Mon, 27 Jun 2022 08:57:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1613|2024-08-03T00:10:03.795Z -- unknown -- restricted%20site%20access
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1613</link>
      <description>The Restricted Site Access WordPress plugin before 7.3.2 prioritizes getting a visitor's IP from certain HTTP headers over PHP's REMOTE_ADDR, which makes it possible to bypass IP-based limitations in certain situations.</description>
      <guid isPermaLink="false">CVE-2022-1613|2024-08-03T00:10:03.795Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4576|2024-08-03T01:41:45.877Z -- unknown -- easy%20bootstrap%20shortcode
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4576</link>
      <description>The Easy Bootstrap Shortcode WordPress plugin through 4.5.4 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4576|2024-08-03T01:41:45.877Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4752|2024-08-03T01:48:40.416Z -- unknown -- opening%20hours
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4752</link>
      <description>The Opening Hours WordPress plugin through 2.3.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2022-4752|2024-08-03T01:48:40.416Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3882|2024-08-03T01:20:58.588Z -- unknown -- memory%20usage%2C%20memory%20limit%2C%20php%20and%20server%20memory%20health%20check%20and%20fix%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3882</link>
      <description>The Memory Usage, Memory Limit, PHP and Server Memory Health Check and Fix Plugin WordPress plugin before 2.46 does not have proper authorisation and CSRF in an AJAX action, allowing any authenticated users, such as subscriber to call it and install and activate arbitrary plugins from wordpress.org</description>
      <guid isPermaLink="false">CVE-2022-3882|2024-08-03T01:20:58.588Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1694|2024-08-03T00:10:03.759Z -- unknown -- useful%20banner%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1694</link>
      <description>The Useful Banner Manager WordPress plugin through 1.6.1 does not perform CSRF checks on POST requests to its admin page, allowing an attacker to trick a logged in admin to add, modify or delete banners from the plugin by submitting a form.</description>
      <guid isPermaLink="false">CVE-2022-1694|2024-08-03T00:10:03.759Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1761|2024-08-03T00:16:59.654Z -- unknown -- peter%E2%80%99s%20collaboration%20e-mails
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1761</link>
      <description>The Peter’s Collaboration E-mails WordPress plugin through 2.2.0 is vulnerable to CSRF due to missing nonce checks. This allows the change of its settings, which can be used to lower the required user level, change texts, the used email address and more.</description>
      <guid isPermaLink="false">CVE-2022-1761|2024-08-03T00:16:59.654Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1906|2024-08-03T00:17:00.966Z -- unknown -- copyright%20proof
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1906</link>
      <description>The Copyright Proof WordPress plugin through 4.16 does not sanitise and escape a parameter before outputting it back via an AJAX action available to both unauthenticated and authenticated users, leading to a Reflected Cross-Site Scripting when a specific setting is enabled.</description>
      <guid isPermaLink="false">CVE-2022-1906|2024-08-03T00:17:00.966Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:48:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2357|2024-08-03T00:32:09.411Z -- unknown -- wsm%20downloader
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2357</link>
      <description>The WSM Downloader WordPress plugin through 1.4.0 allows any visitor to use its remote file download feature to download any local files, including sensitive ones like wp-config.php.</description>
      <guid isPermaLink="false">CVE-2022-2357|2024-08-03T00:32:09.411Z</guid>
      <pubDate>Mon, 08 Aug 2022 13:47:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3689|2024-08-03T01:14:03.307Z -- unknown -- html%20forms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3689</link>
      <description>The HTML Forms WordPress plugin before 1.3.25 does not properly properly escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users</description>
      <guid isPermaLink="false">CVE-2022-3689|2024-08-03T01:14:03.307Z</guid>
      <pubDate>Mon, 28 Nov 2022 13:47:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-22735|2024-08-03T03:21:48.905Z -- unknown -- simple%20quotation
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-22735</link>
      <description>The Simple Quotation WordPress plugin through 1.3.2 does not have authorisation (and CSRF) checks in various of its AJAX actions and is lacking escaping of user data when using it in SQL statements, allowing any authenticated users, such as subscriber to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2022-22735|2024-08-03T03:21:48.905Z</guid>
      <pubDate>Mon, 14 Mar 2022 14:41:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2090|2024-08-03T00:24:44.180Z -- unknown -- discount%20rules%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2090</link>
      <description>The Discount Rules for WooCommerce WordPress plugin before 2.4.2 does not escape a parameter before outputting it back in an attribute of the plugin's discount rule page, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2090|2024-08-03T00:24:44.180Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:35:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3335|2024-08-03T01:07:06.557Z -- unknown -- kadence%20woocommerce%20email%20designer
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3335</link>
      <description>The Kadence WooCommerce Email Designer WordPress plugin before 1.5.7 unserialises the content of an imported file, which could lead to PHP object injections issues when an admin import (intentionally or not) a malicious file and a suitable gadget chain is present on the blog.</description>
      <guid isPermaLink="false">CVE-2022-3335|2024-08-03T01:07:06.557Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1594|2024-08-03T00:10:03.579Z -- unknown -- hc%20custom%20wp-admin%20url
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1594</link>
      <description>The HC Custom WP-Admin URL WordPress plugin through 1.4 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack, allowing them to change the login URL</description>
      <guid isPermaLink="false">CVE-2022-1594|2024-08-03T00:10:03.579Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4118|2024-08-03T01:27:54.447Z -- unknown -- bitcoin%20%2F%20altcoin%20payment%20gateway%20for%20woocommerce%20%26%20multivendor%20store%20%2F%20shop
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4118</link>
      <description>The Bitcoin / AltCoin Payment Gateway for WooCommerce &amp; Multivendor store / shop WordPress plugin through 1.7.1 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by authenticated users</description>
      <guid isPermaLink="false">CVE-2022-4118|2024-08-03T01:27:54.447Z</guid>
      <pubDate>Mon, 08 May 2023 13:58:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2149|2024-08-03T00:24:44.276Z -- unknown -- very%20simple%20breadcrumb
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2149</link>
      <description>The Very Simple Breadcrumb WordPress plugin through 1.0 does not sanitise and escape its settings, allowing high privilege users such as admin to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2149|2024-08-03T00:24:44.276Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:36:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2317|2024-08-03T00:32:09.549Z -- unknown -- simple%20membership
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2317</link>
      <description>The Simple Membership WordPress plugin before 4.1.3 allows user to change their membership at the registration stage due to insufficient checking of a user supplied parameter.</description>
      <guid isPermaLink="false">CVE-2022-2317|2024-08-03T00:32:09.549Z</guid>
      <pubDate>Mon, 01 Aug 2022 12:52:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2168|2024-08-03T00:32:08.598Z -- unknown -- download%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2168</link>
      <description>The Download Manager WordPress plugin before 3.2.44 does not escape a generated URL before outputting it back in an attribute of the history dashboard, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-2168|2024-08-03T00:32:08.598Z</guid>
      <pubDate>Sun, 17 Jul 2022 10:36:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1732|2024-08-03T00:16:59.695Z -- unknown -- rename%20wp-login.php
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1732</link>
      <description>The Rename wp-login.php WordPress plugin through 2.6.0 does not have CSRF check in place when updating the secret login URL, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2022-1732|2024-08-03T00:16:59.695Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:56:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4716|2024-08-03T01:48:40.020Z -- unknown -- wp%20popups
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4716</link>
      <description>The WP Popups WordPress plugin before 2.1.4.8 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4716|2024-08-03T01:48:40.020Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4243|2024-08-03T01:34:49.968Z -- unknown -- imageinject
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4243</link>
      <description>The ImageInject WordPress plugin through 1.17 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2022-4243|2024-08-03T01:34:49.968Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4570|2024-08-03T01:41:45.677Z -- unknown -- top%2010
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4570</link>
      <description>The Top 10 WordPress plugin before 3.2.3 does not validate and escape some of its Block attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2022-4570|2024-08-03T01:41:45.677Z</guid>
      <pubDate>Mon, 23 Jan 2023 14:31:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3082|2024-08-03T01:00:10.268Z -- unknown -- miniorange%20discord%20integration
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3082</link>
      <description>The miniOrange Discord Integration WordPress plugin before 2.1.6 does not have authorisation and CSRF in some of its AJAX actions, allowing any logged in users, such as subscriber to call them, and disable the app for example</description>
      <guid isPermaLink="false">CVE-2022-3082|2024-08-03T01:00:10.268Z</guid>
      <pubDate>Mon, 17 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3879|2024-08-03T01:20:58.797Z -- unknown -- car%20dealer%20%28dealership%29%20and%20vehicle%20sales%20wordpress%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3879</link>
      <description>The Car Dealer (Dealership) and Vehicle sales WordPress Plugin WordPress plugin before 3.05 does not have proper authorisation and CSRF in an AJAX action, allowing any authenticated users, such as subscriber to call it and install and activate arbitrary plugins from wordpress.org</description>
      <guid isPermaLink="false">CVE-2022-3879|2024-08-03T01:20:58.797Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2050|2024-08-03T00:24:44.187Z -- unknown -- wp-paginate
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2050</link>
      <description>The WP-Paginate WordPress plugin before 2.1.9 does not escape one of its settings, which could allow high privilege users to perform Stored Cross-Site Scripting attacks when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2022-2050|2024-08-03T00:24:44.187Z</guid>
      <pubDate>Mon, 11 Jul 2022 12:57:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3537|2024-08-03T01:14:01.998Z -- unknown -- role%20based%20pricing%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3537</link>
      <description>The Role Based Pricing for WooCommerce WordPress plugin before 1.6.2 does not have authorisation and proper CSRF checks, and does not validate files to be uploaded, allowing any authenticated users like subscriber to upload arbitrary files, such as PHP</description>
      <guid isPermaLink="false">CVE-2022-3537|2024-08-03T01:14:01.998Z</guid>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2551|2024-08-03T00:39:08.049Z -- unknown -- duplicator%20%E2%80%93%20wordpress%20migration%20plugin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2551</link>
      <description>The Duplicator WordPress plugin before 1.4.7 discloses the url of the a backup to unauthenticated visitors accessing the main installer endpoint of the plugin, if the installer script has been run once by an administrator, allowing download of the full site backup without authenticating.</description>
      <guid isPermaLink="false">CVE-2022-2551|2024-08-03T00:39:08.049Z</guid>
      <pubDate>Mon, 22 Aug 2022 15:03:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-4227|2024-08-03T01:34:50.008Z -- unknown -- booster%20for%20woocommerce
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-4227</link>
      <description>The Booster for WooCommerce WordPress plugin before 5.6.3, Booster Plus for WooCommerce WordPress plugin before 6.0.0, Booster Elite for WooCommerce WordPress plugin before 6.0.0 do not escape some URLs and parameters before outputting them back in attributes, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-4227|2024-08-03T01:34:50.008Z</guid>
      <pubDate>Mon, 26 Dec 2022 12:28:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3880|2024-08-03T01:20:58.887Z -- unknown -- disable%20json%20api%2C%20login%20lockdown%2C%20xmlrpc%2C%20pingback%2C%20stop%20user%20enumeration%20anti%20hacker%20scan
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3880</link>
      <description>The Disable Json API, Login Lockdown, XMLRPC, Pingback, Stop User Enumeration Anti Hacker Scan WordPress plugin before 4.20 does not have proper authorisation and CSRF in an AJAX action, allowing any authenticated users, such as subscriber to call it and install and activate arbitrary plugins from wordpress.org</description>
      <guid isPermaLink="false">CVE-2022-3880|2024-08-03T01:20:58.887Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1538|2024-08-03T00:10:03.024Z -- unknown -- theme%20demo%20import
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1538</link>
      <description>Theme Demo Import WordPress plugin before 1.1.1 does not validate the imported file, allowing high-privilege users such as admin to upload arbitrary files (such as PHP) even when FILE_MODS and FILE_EDIT are disallowed.</description>
      <guid isPermaLink="false">CVE-2022-1538|2024-08-03T00:10:03.024Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:50:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3915|2024-08-03T01:20:58.821Z -- unknown -- dokan
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3915</link>
      <description>The Dokan WordPress plugin before 3.7.6 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by unauthenticated users</description>
      <guid isPermaLink="false">CVE-2022-3915|2024-08-03T01:20:58.821Z</guid>
      <pubDate>Mon, 12 Dec 2022 17:54:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3076|2024-08-03T01:00:09.712Z -- unknown -- cm%20download%20manager
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3076</link>
      <description>The CM Download Manager WordPress plugin before 2.8.6 allows high privilege users such as admin to upload arbitrary files by setting the any extension via the plugin's setting, which could be used by admins of multisite blog to upload PHP files for example.</description>
      <guid isPermaLink="false">CVE-2022-3076|2024-08-03T01:00:09.712Z</guid>
      <pubDate>Mon, 26 Sep 2022 12:35:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1781|2024-08-03T00:16:59.892Z -- unknown -- posttabs
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1781</link>
      <description>The postTabs WordPress plugin through 2.10.6 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack, which also lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping</description>
      <guid isPermaLink="false">CVE-2022-1781|2024-08-03T00:16:59.892Z</guid>
      <pubDate>Mon, 13 Jun 2022 12:42:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3489|2024-08-03T01:14:01.546Z -- unknown -- wp-hide
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3489</link>
      <description>The WP Hide WordPress plugin through 0.0.2 does not have authorisation and CSRF checks in place when updating the custom_wpadmin_slug settings, allowing unauthenticated attackers to update it with a crafted request</description>
      <guid isPermaLink="false">CVE-2022-3489|2024-08-03T01:14:01.546Z</guid>
      <pubDate>Mon, 07 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-2239|2024-08-03T00:32:09.285Z -- unknown -- request%20a%20quote
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2239</link>
      <description>The Request a Quote WordPress plugin before 2.3.9 does not sanitise and escape some of its settings, allowing high privilege users such as admin to perform cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2022-2239|2024-08-03T00:32:09.285Z</guid>
      <pubDate>Mon, 25 Jul 2022 12:47:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-23912|2024-08-03T03:59:22.638Z -- unknown -- testimonial%20wordpress%20plugin%20%E2%80%93%20ap%20custom%20testimonial
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-23912</link>
      <description>The Testimonial WordPress Plugin WordPress plugin before 1.4.7 does not sanitise and escape the id parameter before outputting it back in an attribute, leading to a Reflected cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2022-23912|2024-08-03T03:59:22.638Z</guid>
      <pubDate>Mon, 28 Feb 2022 09:06:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6477|2024-08-03T06:00:05.955Z -- unknown -- userswp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6477</link>
      <description>The UsersWP  WordPress plugin before 1.2.12 uses predictable filenames when an admin generates an export, which could allow unauthenticated attackers to download them and retrieve sensitive information such as IP, username, and email address</description>
      <guid isPermaLink="false">CVE-2024-6477|2024-08-03T06:00:05.955Z</guid>
      <pubDate>Sat, 03 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6390|2024-08-03T06:00:05.411Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6390</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.1.0 does not properly sanitise and escape some of its Quizz settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6390|2024-08-03T06:00:05.411Z</guid>
      <pubDate>Sat, 03 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2872|2024-08-02T18:50:24.448Z -- unknown -- socialdriver-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2872</link>
      <description>The socialdriver-framework WordPress plugin before 2024.04.30 does not sanitise and escape some of its settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2872|2024-08-02T18:50:24.448Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5595|2024-08-02T16:12:09.234Z -- unknown -- essential%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5595</link>
      <description>The Essential Blocks  WordPress plugin before 4.7.0 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5595|2024-08-02T16:12:09.234Z</guid>
      <pubDate>Fri, 02 Aug 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7085|2024-08-02T08:50:07.997Z -- unknown -- scalable%20vector%20graphics%20%28svg%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7085</link>
      <description>The Scalable Vector Graphics (SVG) WordPress plugin through 3.4 does not sanitize uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2023-7085|2024-08-02T08:50:07.997Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7233|2024-08-02T08:57:35.566Z -- unknown -- gigpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7233</link>
      <description>The GigPress WordPress plugin through 2.3.29 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-7233|2024-08-02T08:57:35.566Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7203|2024-08-02T08:57:35.575Z -- unknown -- smart%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7203</link>
      <description>The Smart Forms WordPress plugin before 2.6.87 does not have authorisation in various AJAX actions, which could allow users with a role as low as subscriber to call them and perform unauthorised actions such as deleting entries. The plugin also lacks CSRF checks in some places which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as deleting entries.</description>
      <guid isPermaLink="false">CVE-2023-7203|2024-08-02T08:57:35.575Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7268|2024-08-02T08:57:35.460Z -- unknown -- artplacer%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7268</link>
      <description>The ArtPlacer Widget WordPress plugin before 2.21.2 does not have authorisation check in place when deleting widgets,  allowing ay authenticated users, such as subscriber, to delete arbitrary widgets</description>
      <guid isPermaLink="false">CVE-2023-7268|2024-08-02T08:57:35.460Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7246|2024-08-02T08:57:34.750Z -- unknown -- system%20dashboard</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7246</link>
      <description>The System Dashboard WordPress plugin before 2.8.10 does not sanitize and escape some parameters, which could allow administrators in multisite WordPress configurations to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-7246|2024-08-02T08:57:34.750Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6591|2024-08-02T08:35:14.411Z -- unknown -- popup%20box</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6591</link>
      <description>The Popup Box WordPress plugin before 20.9.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2023-6591|2024-08-02T08:35:14.411Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:06:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6385|2024-08-02T08:28:21.786Z -- unknown -- wordpress%20ping%20optimizer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6385</link>
      <description>The WordPress Ping Optimizer WordPress plugin through 2.35.1.3.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as clearing logs.</description>
      <guid isPermaLink="false">CVE-2023-6385|2024-08-02T08:28:21.786Z</guid>
      <pubDate>Wed, 10 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6036|2024-08-02T08:21:17.074Z -- unknown -- web3</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6036</link>
      <description>The Web3 WordPress plugin before 3.0.0 is vulnerable to an authentication bypass due to incorrect authentication checking in the login flow in functions 'handle_auth_request' and 'hadle_login_request'. This makes it possible for non authenticated attackers to log in as any existing user on the site, such as an administrator, if they have access to the username.</description>
      <guid isPermaLink="false">CVE-2023-6036|2024-08-02T08:21:17.074Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:06:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7236|2024-08-02T08:57:35.245Z -- unknown -- backup%20bolt</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7236</link>
      <description>The Backup Bolt WordPress plugin through 1.3.0 is vulnerable to Information Exposure via the unprotected access of debug logs. This makes it possible for unauthenticated attackers to retrieve the debug log which may contain information like system errors which could contain sensitive information.</description>
      <guid isPermaLink="false">CVE-2023-7236|2024-08-02T08:57:35.245Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7269|2024-08-02T08:57:35.220Z -- unknown -- artplacer%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7269</link>
      <description>The ArtPlacer Widget WordPress plugin before 2.21.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-7269|2024-08-02T08:57:35.220Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6294|2024-08-02T08:28:21.292Z -- unknown -- popup%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6294</link>
      <description>The Popup Builder WordPress plugin before 4.2.6 does not validate a parameter before making a request to it, which could allow users with the administrator role to perform SSRF attack in Multisite WordPress configurations.</description>
      <guid isPermaLink="false">CVE-2023-6294|2024-08-02T08:28:21.292Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:06:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6821|2024-08-02T08:42:07.513Z -- unknown -- error%20log%20viewer%20by%20bestwebsoft</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6821</link>
      <description>The Error Log Viewer by BestWebSoft WordPress plugin before 1.1.3 contains a vulnerability that allows you to read and download PHP logs without authorization</description>
      <guid isPermaLink="false">CVE-2023-6821|2024-08-02T08:42:07.513Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6584|2024-08-02T08:35:14.824Z -- unknown -- wp%20jobsearch</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6584</link>
      <description>The WP JobSearch WordPress plugin before 2.3.4 does not prevent attackers from logging-in as any users with the only knowledge of that user's email address.</description>
      <guid isPermaLink="false">CVE-2023-6584|2024-08-02T08:35:14.824Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7167|2024-08-02T08:50:08.209Z -- unknown -- persian%20fonts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7167</link>
      <description>The Persian Fonts WordPress plugin through 1.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-7167|2024-08-02T08:50:08.209Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6444|2024-08-02T08:28:21.818Z -- unknown -- seriously%20simple%20podcasting</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6444</link>
      <description>The Seriously Simple Podcasting WordPress plugin before 3.0.0 discloses the Podcast owner's email address (which by default is the admin email address) via an unauthenticated crafted request.</description>
      <guid isPermaLink="false">CVE-2023-6444|2024-08-02T08:28:21.818Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6499|2024-08-02T08:35:13.207Z -- unknown -- lastunes</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6499</link>
      <description>The lasTunes WordPress plugin through 3.6.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-6499|2024-08-02T08:35:13.207Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7165|2024-08-02T08:50:08.310Z -- unknown -- jetbackup</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7165</link>
      <description>The JetBackup WordPress plugin before 2.0.9.9 doesn't use index files to prevent public directory listing of sensitive directories in certain configurations, which allows malicious actors to leak backup files.</description>
      <guid isPermaLink="false">CVE-2023-7165|2024-08-02T08:50:08.310Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7232|2024-08-02T08:57:35.189Z -- unknown -- backup%20and%20restore%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7232</link>
      <description>The Backup and Restore WordPress  WordPress plugin through 1.45 does not protect some log files containing sensitive information such as site configuration etc, allowing unauthenticated users to access such data</description>
      <guid isPermaLink="false">CVE-2023-7232|2024-08-02T08:57:35.189Z</guid>
      <pubDate>Tue, 26 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6082|2024-08-02T08:21:17.294Z -- unknown -- chartjs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6082</link>
      <description>The chartjs WordPress plugin through 2023.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-6082|2024-08-02T08:21:17.294Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:06:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6585|2024-08-02T08:35:14.606Z -- unknown -- wp%20jobsearch</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6585</link>
      <description>The WP JobSearch WordPress plugin before 2.3.4 does not validate files to be uploaded, which could allow unauthenticated attackers to upload arbitrary files such as PHP on the server</description>
      <guid isPermaLink="false">CVE-2023-6585|2024-08-02T08:35:14.606Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7201|2024-08-02T08:57:34.095Z -- unknown -- everest%20backup</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7201</link>
      <description>The Everest Backup  WordPress plugin before 2.2.5 does not properly validate backup files to be uploaded, allowing high privilege users such as admin to upload arbitrary files on the server even when they should not be allowed to (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-7201|2024-08-02T08:57:34.095Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7202|2024-08-02T08:57:35.020Z -- unknown -- fatal%20error%20notify</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7202</link>
      <description>The Fatal Error Notify WordPress plugin before 1.5.3 does not have authorisation and CSRF checks in its test_error AJAX action, allowing any authenticated users, such as subscriber to call it and spam the admin email address with error messages. The issue is also exploitable via CSRF</description>
      <guid isPermaLink="false">CVE-2023-7202|2024-08-02T08:57:35.020Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7247|2024-08-02T08:57:35.034Z -- unknown -- login%20as%20user%20or%20customer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7247</link>
      <description>The Login as User or Customer WordPress plugin through 3.8 does not prevent users to log in as any other user on the site.</description>
      <guid isPermaLink="false">CVE-2023-7247|2024-08-02T08:57:35.034Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6081|2024-08-02T08:21:17.320Z -- unknown -- chartjs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6081</link>
      <description>The chartjs WordPress plugin through 2023.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-6081|2024-08-02T08:21:17.320Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:07:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7115|2024-08-02T08:50:08.049Z -- unknown -- page%20builder%3A%20pagelayer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7115</link>
      <description>The Page Builder: Pagelayer WordPress plugin before 1.8.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-7115|2024-08-02T08:50:08.049Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5971|2024-08-02T08:14:25.115Z -- unknown -- save%20as%20pdf%20plugin%20by%20pdfcrowd</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-5971</link>
      <description>The Save as PDF Plugin by Pdfcrowd WordPress plugin before 3.2.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-5971|2024-08-02T08:14:25.115Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6501|2024-08-02T08:35:13.197Z -- unknown -- splashscreen</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6501</link>
      <description>The Splashscreen WordPress plugin through 0.20 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-6501|2024-08-02T08:35:13.197Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7198|2024-08-02T08:57:35.513Z -- unknown -- wp%20dashboard%20notes</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7198</link>
      <description>The WP Dashboard Notes WordPress plugin before 1.0.11 is vulnerable to Insecure Direct Object References (IDOR) in post_id= parameter. Authenticated users are able to delete private notes associated with different user accounts. This poses a significant security risk as it violates the principle of least privilege and compromises the integrity and privacy of user data.</description>
      <guid isPermaLink="false">CVE-2023-7198|2024-08-02T08:57:35.513Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6067|2024-08-02T08:21:17.215Z -- unknown -- wp%20user%20profile%20avatar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6067</link>
      <description>The WP User Profile Avatar WordPress plugin through 1.0.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-6067|2024-08-02T08:21:17.215Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7253|2024-08-02T08:57:35.106Z -- unknown -- import%20wp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7253</link>
      <description>The Import WP  WordPress plugin before 2.13.1 does not prevent users with the administrator role from pinging conducting SSRF attacks, which may be a problem in multisite configurations.</description>
      <guid isPermaLink="false">CVE-2023-7253|2024-08-02T08:57:35.106Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6257|2024-08-02T08:28:20.199Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6257</link>
      <description>The Inline Related Posts WordPress plugin before 3.6.0 does not ensure that post content displayed via an AJAX action are accessible to the user, allowing any authenticated user, such as subscriber to retrieve the content of password protected posts</description>
      <guid isPermaLink="false">CVE-2023-6257|2024-08-02T08:28:20.199Z</guid>
      <pubDate>Thu, 11 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7164|2024-08-02T08:50:08.324Z -- unknown -- backwpup</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7164</link>
      <description>The BackWPup WordPress plugin before 4.0.4 does not prevent visitors from leaking key information about ongoing backups, allowing unauthenticated attackers to download backups of a site's database.</description>
      <guid isPermaLink="false">CVE-2023-7164|2024-08-02T08:50:08.324Z</guid>
      <pubDate>Mon, 08 Apr 2024 17:28:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7252|2024-08-02T08:57:35.052Z -- unknown -- tickera</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7252</link>
      <description>The Tickera  WordPress plugin before 3.5.2.5 does not prevent users from leaking other users' tickets.</description>
      <guid isPermaLink="false">CVE-2023-7252|2024-08-02T08:57:35.052Z</guid>
      <pubDate>Mon, 22 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5595|2024-08-02T06:00:06.949Z -- unknown -- essential%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5595</link>
      <description>The Essential Blocks  WordPress plugin before 4.7.0 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5595|2024-08-02T06:00:06.949Z</guid>
      <pubDate>Fri, 02 Aug 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6536|2024-08-01T21:41:03.512Z -- unknown -- zephyr%20project%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6536</link>
      <description>The Zephyr Project Manager WordPress plugin before 3.3.99 does not sanitise and escape some of its settings, which could allow high privilege users such as editors and admins to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6536|2024-08-01T21:41:03.512Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6023|2024-08-01T21:25:03.160Z -- unknown -- contentlock</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6023</link>
      <description>The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when adding emails, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6023|2024-08-01T21:25:03.160Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5728|2024-08-01T21:18:07.034Z -- unknown -- animated%20al%20list</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5728</link>
      <description>The Animated AL List WordPress plugin through 1.0.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5728|2024-08-01T21:18:07.034Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6026|2024-08-01T21:25:03.207Z -- unknown -- slider%20by%2010web</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6026</link>
      <description>The Slider by 10Web  WordPress plugin before 1.2.56 does not sanitise and escape some of its Slide options, which could allow authenticated users with access to the Sliders (by default Administrator, however this can be changed via the Slider by 10Web  WordPress plugin before 1.2.56's options) and the ability to add images (Editor+) to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6026|2024-08-01T21:25:03.207Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6024|2024-08-01T21:25:03.203Z -- unknown -- contentlock</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6024</link>
      <description>The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when deleting groups or emails, which could allow attackers to make a logged in admin remove them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6024|2024-08-01T21:25:03.203Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5033|2024-08-01T21:03:09.723Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5033</link>
      <description>The SULly WordPress plugin before 4.3.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5033|2024-08-01T21:03:09.723Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5627|2024-08-01T21:18:06.830Z -- unknown -- tournamatch</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5627</link>
      <description>The Tournamatch WordPress plugin before 4.6.1 does not sanitise and escape some parameters, which could allow users with a role as low as subscriber to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-5627|2024-08-01T21:18:06.830Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5455|2024-08-01T21:11:12.785Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5455</link>
      <description>The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 5.5.4 via the 'magazine_style' parameter within the Dynamic Smart Showcase widget. This makes it possible for authenticated attackers, with Contributor-level access and above, to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other “safe” file types can be uploaded and included.</description>
      <guid isPermaLink="false">CVE-2024-5455|2024-08-01T21:11:12.785Z</guid>
      <pubDate>Fri, 21 Jun 2024 03:24:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6076|2024-08-01T21:25:03.197Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6076</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6076|2024-08-01T21:25:03.197Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5575|2024-08-01T21:18:06.451Z -- unknown -- ditty</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5575</link>
      <description>The Ditty  WordPress plugin before 3.1.43 does not sanitise and escape some of its blocks' settings, which could allow high privilege users such as authors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-5575|2024-08-01T21:18:06.451Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5285|2024-08-01T21:11:11.619Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5285</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.2 does not have CSRF check in place when deleting affiliates, which could allow attackers to make a logged in user change delete them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5285|2024-08-01T21:11:11.619Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5882|2024-08-01T21:25:02.969Z -- unknown -- ultimate%20classified%20listings</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5882</link>
      <description>The Ultimate Classified Listings WordPress plugin before 1.3 does not validate the `ucl_page` and `layout` parameters allowing unauthenticated users to access PHP files on the server from the listings page</description>
      <guid isPermaLink="false">CVE-2024-5882|2024-08-01T21:25:02.969Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5606|2024-08-01T21:18:06.591Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5606</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.0.2 is vulnerable does not validate and escape the question_id parameter in the qsm_bulk_delete_question_from_database AJAX action, leading to a SQL injection exploitable by Contributors and above role</description>
      <guid isPermaLink="false">CVE-2024-5606|2024-08-01T21:18:06.591Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6226|2024-08-01T21:33:05.329Z -- unknown -- wpstickybar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6226</link>
      <description>The WpStickyBar  WordPress plugin through 2.1.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6226|2024-08-01T21:33:05.329Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5448|2024-08-01T21:11:12.780Z -- unknown -- paypal%20pay%20now%2C%20buy%20now%2C%20donation%20and%20cart%20buttons%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5448</link>
      <description>The PayPal Pay Now, Buy Now, Donation and Cart Buttons Shortcode WordPress plugin through 1.7 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5448|2024-08-01T21:11:12.780Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5034|2024-08-01T21:03:09.640Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5034</link>
      <description>The SULly WordPress plugin before 4.3.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5034|2024-08-01T21:03:09.640Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6243|2024-08-01T21:33:05.323Z -- unknown -- html%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6243</link>
      <description>The HTML Forms  WordPress plugin before 1.3.33 does not sanitize and escape the form message inputs, allowing high-privilege users, such as administrators, to perform Stored Cross-Site Scripting (XSS) attacks even when the unfiltered_html capability is disabled.</description>
      <guid isPermaLink="false">CVE-2024-6243|2024-08-01T21:33:05.323Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5076|2024-08-01T21:03:10.703Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5076</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5076|2024-08-01T21:03:10.703Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5032|2024-08-01T21:03:09.647Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5032</link>
      <description>The SULly WordPress plugin before 4.3.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5032|2024-08-01T21:03:09.647Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6362|2024-08-01T21:33:05.331Z -- unknown -- ultimate%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6362</link>
      <description>The Ultimate Blocks  WordPress plugin before 3.2.0 does not validate and escape some of its post-grid block attributes before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6362|2024-08-01T21:33:05.331Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6074|2024-08-01T21:25:03.266Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6074</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6074|2024-08-01T21:25:03.266Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5729|2024-08-01T21:18:07.060Z -- unknown -- simple%20al%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5729</link>
      <description>The Simple AL Slider WordPress plugin through 1.2.10 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5729|2024-08-01T21:18:07.060Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6022|2024-08-01T21:25:03.198Z -- unknown -- contentlock</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6022</link>
      <description>The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6022|2024-08-01T21:25:03.198Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6487|2024-08-01T21:41:03.293Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6487</link>
      <description>The Inline Related Posts WordPress plugin before 3.8.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6487|2024-08-01T21:41:03.293Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5715|2024-08-01T21:18:06.857Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5715</link>
      <description>The wp-eMember WordPress plugin before 10.6.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5715|2024-08-01T21:18:06.857Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5075|2024-08-01T21:03:10.348Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5075</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5075|2024-08-01T21:03:10.348Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5570|2024-08-01T21:18:06.390Z -- unknown -- simple%20photoswipe</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5570</link>
      <description>The Simple Photoswipe WordPress plugin through 0.1 does not have authorisation check when updating its settings, which could allow any authenticated users, such as subscriber to update them</description>
      <guid isPermaLink="false">CVE-2024-5570|2024-08-01T21:18:06.390Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5282|2024-08-01T21:11:11.639Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5282</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5282|2024-08-01T21:11:11.639Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6223|2024-08-01T21:33:05.217Z -- unknown -- send%20email%20only%20on%20reply%20to%20my%20comment</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6223</link>
      <description>The Send email only on Reply to My Comment WordPress plugin through 1.0.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6223|2024-08-01T21:33:05.217Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5475|2024-08-01T21:11:12.785Z -- unknown -- responsive%20video%20embed</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5475</link>
      <description>The Responsive video embed WordPress plugin before 0.5.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-5475|2024-08-01T21:11:12.785Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6420|2024-08-01T21:41:03.294Z -- unknown -- hide%20my%20wp%20ghost</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6420</link>
      <description>The Hide My WP Ghost  WordPress plugin before 5.2.02 does not prevent redirects to the login page via the auth_redirect WordPress function, allowing an unauthenticated visitor to access the hidden login page.</description>
      <guid isPermaLink="false">CVE-2024-6420|2024-08-01T21:41:03.294Z</guid>
      <pubDate>Tue, 23 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5077|2024-08-01T21:03:10.588Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5077</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5077|2024-08-01T21:03:10.588Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6230|2024-08-01T21:33:05.315Z -- unknown -- %D9%BE%D9%84%D8%A7%DA%AF%DB%8C%D9%86%20%D9%BE%D8%B1%D8%AF%D8%A7%D8%AE%D8%AA%20%D8%AF%D9%84%D8%AE%D9%88%D8%A7%D9%87</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6230</link>
      <description>The پلاگین پرداخت دلخواه WordPress plugin through 2.9.8 does not have CSRF check in place when resetting its form fields, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6230|2024-08-01T21:33:05.315Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6490|2024-08-01T21:41:03.422Z -- unknown -- master%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6490</link>
      <description>During testing of the Master Slider  WordPress plugin through 3.9.10, a CSRF vulnerability was found, which allows an unauthorized user to manipulate requests on behalf of the victim and thereby delete all of the sliders inside Master Slider  WordPress plugin through 3.9.10.</description>
      <guid isPermaLink="false">CVE-2024-6490|2024-08-01T21:41:03.422Z</guid>
      <pubDate>Fri, 26 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5450|2024-08-01T21:11:12.776Z -- unknown -- bug%20library</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5450</link>
      <description>The Bug Library WordPress plugin before 2.1.1 does not check the file type on user-submitted bug reports, allowing an unauthenticated user to upload PHP files</description>
      <guid isPermaLink="false">CVE-2024-5450|2024-08-01T21:11:12.776Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5811|2024-08-01T21:25:02.669Z -- unknown -- simple%20video%20directory</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5811</link>
      <description>The Simple Video Directory WordPress plugin before 1.4.4 does not sanitise and escape some of its settings, which could allow contributors and higher to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5811|2024-08-01T21:25:02.669Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6289|2024-08-01T21:33:05.447Z -- unknown -- wps%20hide%20login</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6289</link>
      <description>The WPS Hide Login WordPress plugin before 1.9.16.4 does not prevent redirects to the login page via the auth_redirect WordPress function, allowing an unauthenticated visitor to access the hidden login page.</description>
      <guid isPermaLink="false">CVE-2024-6289|2024-08-01T21:33:05.447Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5080|2024-08-01T21:03:10.803Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5080</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not validate files to be uploaded, which could allow admins to upload arbitrary files such as PHP on the server</description>
      <guid isPermaLink="false">CVE-2024-5080|2024-08-01T21:03:10.803Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5626|2024-08-01T21:18:06.696Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5626</link>
      <description>The Inline Related Posts WordPress plugin before 3.7.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5626|2024-08-01T21:18:06.696Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5807|2024-08-01T21:25:02.833Z -- unknown -- business%20card</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5807</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not prevent high privilege users like administrators from uploading malicious PHP files, which could allow them to run arbitrary code on servers hosting their site, even in MultiSite configurations.</description>
      <guid isPermaLink="false">CVE-2024-5807|2024-08-01T21:25:02.833Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5767|2024-08-01T21:18:07.035Z -- unknown -- sitetweet</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5767</link>
      <description>The sitetweet WordPress plugin through 0.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5767|2024-08-01T21:18:07.035Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6025|2024-08-01T21:25:03.195Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6025</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.0.5 does not sanitise and escape some of its Quiz settings, which could allow contributors and higher to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6025|2024-08-01T21:25:03.195Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5604|2024-08-01T21:18:06.836Z -- unknown -- bug%20library</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5604</link>
      <description>The Bug Library WordPress plugin before 2.1.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5604|2024-08-01T21:18:06.836Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5973|2024-08-01T21:25:03.133Z -- unknown -- masterstudy%20lms%20wordpress%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5973</link>
      <description>The MasterStudy LMS WordPress Plugin  WordPress plugin before 3.3.24 does not prevent students from creating instructor accounts, which could be used to get access to functionalities they shouldn't have.</description>
      <guid isPermaLink="false">CVE-2024-5973|2024-08-01T21:25:03.133Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6366|2024-08-01T21:33:05.436Z -- unknown -- user%20profile%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6366</link>
      <description>The User Profile Builder  WordPress plugin before 3.11.8 does not have proper authorisation, allowing unauthenticated users to upload media files via the async upload functionality of WP.</description>
      <guid isPermaLink="false">CVE-2024-6366|2024-08-01T21:33:05.436Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5883|2024-08-01T21:25:03.165Z -- unknown -- ultimate%20classified%20listings</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5883</link>
      <description>The Ultimate Classified Listings WordPress plugin before 1.3 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5883|2024-08-01T21:25:03.165Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5167|2024-08-01T21:03:11.042Z -- unknown -- cm%20email%20registration%20blacklist%20and%20whitelist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5167</link>
      <description>The CM Email Registration Blacklist and Whitelist WordPress plugin before 1.4.9 does not have CSRF check when adding or deleting an item from the blacklist or whitelist, which could allow attackers to make a logged in admin add or delete settings from the blacklist or whitelist menu via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5167|2024-08-01T21:03:11.042Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5472|2024-08-01T21:11:12.763Z -- unknown -- wp%20quicklatex</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5472</link>
      <description>The WP QuickLaTeX WordPress plugin before 3.8.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5472|2024-08-01T21:11:12.763Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5172|2024-08-01T21:03:11.067Z -- unknown -- expert%20invoice</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5172</link>
      <description>The Expert Invoice WordPress plugin through 1.0.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5172|2024-08-01T21:03:11.067Z</guid>
      <pubDate>Tue, 18 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6231|2024-08-01T21:33:05.375Z -- unknown -- request%20a%20quote</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6231</link>
      <description>The Request a Quote WordPress plugin before 2.4.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6231|2024-08-01T21:33:05.375Z</guid>
      <pubDate>Tue, 23 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6224|2024-08-01T21:33:05.151Z -- unknown -- send%20email%20only%20on%20reply%20to%20my%20comment</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6224</link>
      <description>The Send email only on Reply to My Comment WordPress plugin through 1.0.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6224|2024-08-01T21:33:05.151Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5529|2024-08-01T21:18:06.542Z -- unknown -- wp%20quicklatex</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5529</link>
      <description>The WP QuickLaTeX WordPress plugin before 3.8.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5529|2024-08-01T21:18:06.542Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5281|2024-08-01T21:11:11.576Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5281</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5281|2024-08-01T21:11:11.576Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5283|2024-08-01T21:11:11.639Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5283</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5283|2024-08-01T21:11:11.639Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5630|2024-08-01T21:18:06.829Z -- unknown -- insert%20or%20embed%20articulate%20content%20into%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5630</link>
      <description>The Insert or Embed Articulate Content into WordPress plugin before 4.3000000024 does not prevent authors from uploading arbitrary files to the site, which may allow them to upload PHP shells on affected sites.</description>
      <guid isPermaLink="false">CVE-2024-5630|2024-08-01T21:18:06.829Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6138|2024-08-01T21:33:05.210Z -- unknown -- secure%20copy%20content%20protection%20and%20content%20locking</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6138</link>
      <description>The Secure Copy Content Protection and Content Locking WordPress plugin before 4.0.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-6138|2024-08-01T21:33:05.210Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6075|2024-08-01T21:25:03.263Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6075</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6075|2024-08-01T21:25:03.263Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5071|2024-08-01T21:03:10.655Z -- unknown -- bookster</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5071</link>
      <description>The Bookster  WordPress plugin through 1.1.0 allows adding sensitive parameters when validating appointments allowing attackers to manipulate the data sent when booking an appointment (the request body) to change its status from pending to approved.</description>
      <guid isPermaLink="false">CVE-2024-5071|2024-08-01T21:03:10.655Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5079|2024-08-01T21:03:10.553Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5079</link>
      <description>The wp-eMember WordPress plugin before 10.6.7 does not sanitise and escape some of the fields when members register, which allows unauthenticated users to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5079|2024-08-01T21:03:10.553Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5573|2024-08-01T21:18:06.816Z -- unknown -- easy%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5573</link>
      <description>The Easy Table of Contents WordPress plugin before 2.0.66 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-5573|2024-08-01T21:18:06.816Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6072|2024-08-01T21:25:03.322Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6072</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2024-6072|2024-08-01T21:25:03.322Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5169|2024-08-01T21:03:11.041Z -- unknown -- video%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5169</link>
      <description>The Video Widget WordPress plugin through 1.2.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5169|2024-08-01T21:03:11.041Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5284|2024-08-01T21:11:11.021Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5284</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5284|2024-08-01T21:11:11.021Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5808|2024-08-01T21:25:02.970Z -- unknown -- wp%20ajax%20contact%20form</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5808</link>
      <description>The WP Ajax Contact Form WordPress plugin through 2.2.2 does not have CSRF check in place when deleting emails from the email list, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5808|2024-08-01T21:25:02.970Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6164|2024-08-01T21:33:04.599Z -- unknown -- filter%20%26%20grids</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6164</link>
      <description>The Filter &amp; Grids WordPress plugin before 2.8.33 is vulnerable to Local File Inclusion via the post_layout parameter. This makes it possible for an unauthenticated attacker to include and execute PHP files on the server, allowing the execution of any PHP code in those files.</description>
      <guid isPermaLink="false">CVE-2024-6164|2024-08-01T21:33:04.599Z</guid>
      <pubDate>Thu, 18 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6130|2024-08-01T21:33:04.994Z -- unknown -- form%20maker%20by%2010web</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6130</link>
      <description>The Form Maker by 10Web  WordPress plugin before 1.15.26 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6130|2024-08-01T21:33:04.994Z</guid>
      <pubDate>Mon, 01 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6094|2024-08-01T21:33:03.283Z -- unknown -- wp%20ulike</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6094</link>
      <description>The WP ULike  WordPress plugin before 4.7.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-6094|2024-08-01T21:33:03.283Z</guid>
      <pubDate>Wed, 24 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5199|2024-08-01T21:03:11.058Z -- unknown -- spotify%20play%20button</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5199</link>
      <description>The Spotify Play Button WordPress plugin through 1.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-5199|2024-08-01T21:03:11.058Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5802|2024-08-01T21:25:02.880Z -- unknown -- url%20shortener%20by%20mythemeshop</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5802</link>
      <description>The URL Shortener by Myhop WordPress plugin through 1.0.17 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-5802|2024-08-01T21:25:02.880Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6070|2024-08-01T21:25:03.271Z -- unknown -- if-so%20dynamic%20content%20personalization</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6070</link>
      <description>The If-So Dynamic Content Personalization WordPress plugin before 1.8.0.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6070|2024-08-01T21:25:03.271Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5522|2024-08-01T21:18:05.372Z -- unknown -- html5%20video%20player</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5522</link>
      <description>The HTML5 Video Player  WordPress plugin before 2.5.27 does not sanitize and escape a parameter from a REST route before using it in a SQL statement, allowing unauthenticated users to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2024-5522|2024-08-01T21:18:05.372Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6244|2024-08-01T21:33:05.242Z -- unknown -- pz%20frontend%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6244</link>
      <description>The PZ Frontend Manager WordPress plugin before 1.0.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6244|2024-08-01T21:33:05.242Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5727|2024-08-01T21:18:06.947Z -- unknown -- widget4call</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5727</link>
      <description>The Widget4Call WordPress plugin through 1.0.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5727|2024-08-01T21:18:06.947Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5344|2024-08-01T21:11:12.452Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5344</link>
      <description>The The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the ‘forgoturl’ attribute within the plugin's WP Login &amp; Register widget in all versions up to, and including, 5.5.6 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description>
      <guid isPermaLink="false">CVE-2024-5344|2024-08-01T21:11:12.452Z</guid>
      <pubDate>Fri, 21 Jun 2024 02:05:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5713|2024-08-01T21:18:07.087Z -- unknown -- if-so%20dynamic%20content%20personalization</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5713</link>
      <description>The If-So Dynamic Content Personalization WordPress plugin before 1.8.0.4 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2024-5713|2024-08-01T21:18:07.087Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6271|2024-08-01T21:33:05.310Z -- unknown -- community%20events</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6271</link>
      <description>The Community Events WordPress plugin before 1.5 does not have CSRF check in place when deleting events, which could allow attackers to make a logged in admin delete arbitrary events via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6271|2024-08-01T21:33:05.310Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5442|2024-08-01T21:11:12.789Z -- unknown -- photo%20gallery%2C%20sliders%2C%20proofing%20and%20themes</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5442</link>
      <description>The Photo Gallery, Sliders, Proofing and   WordPress plugin before 3.59.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5442|2024-08-01T21:11:12.789Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5074|2024-08-01T21:03:10.754Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5074</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5074|2024-08-01T21:03:10.754Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6334|2024-08-01T21:33:05.449Z -- unknown -- easy%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6334</link>
      <description>The Easy Table of Contents WordPress plugin before 2.0.67.1 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2024-6334|2024-08-01T21:33:05.449Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5975|2024-08-01T21:25:03.152Z -- unknown -- cz%20loan%20management</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5975</link>
      <description>The CZ Loan Management WordPress plugin through 1.1 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2024-5975|2024-08-01T21:25:03.152Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5744|2024-08-01T21:18:07.071Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5744</link>
      <description>The wp-eMember WordPress plugin before 10.6.7 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2024-5744|2024-08-01T21:18:07.071Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5341|2024-08-01T21:11:12.428Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5341</link>
      <description>The The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'size' attribute of the Heading Title widget in all versions up to, and including, 5.5.4 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2024-5341|2024-08-01T21:11:12.428Z</guid>
      <pubDate>Thu, 30 May 2024 05:33:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5730|2024-08-01T21:18:07.116Z -- unknown -- pagerank%20tools</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5730</link>
      <description>The Pagerank tools WordPress plugin through 1.1.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5730|2024-08-01T21:18:07.116Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5809|2024-08-01T21:25:02.945Z -- unknown -- wp%20ajax%20contact%20form</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5809</link>
      <description>The WP Ajax Contact Form WordPress plugin through 2.2.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against admin users</description>
      <guid isPermaLink="false">CVE-2024-5809|2024-08-01T21:25:02.945Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5473|2024-08-01T21:11:12.795Z -- unknown -- simple%20photoswipe</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5473</link>
      <description>The Simple Photoswipe WordPress plugin through 0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5473|2024-08-01T21:11:12.795Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5644|2024-08-01T21:18:06.697Z -- unknown -- tournamatch</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5644</link>
      <description>The Tournamatch WordPress plugin before 4.6.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5644|2024-08-01T21:18:06.697Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5765|2024-08-01T21:18:07.051Z -- unknown -- wpstickybar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5765</link>
      <description>The WpStickyBar  WordPress plugin through 2.1.0 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2024-5765|2024-08-01T21:18:07.051Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5151|2024-08-01T21:03:10.976Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5151</link>
      <description>The SULly WordPress plugin before 4.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5151|2024-08-01T21:03:10.976Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5028|2024-08-01T21:03:09.657Z -- unknown -- cm%20wordpress%20search%20and%20replace%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5028</link>
      <description>The CM WordPress Search And Replace Plugin WordPress plugin before 1.3.9 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5028|2024-08-01T21:03:09.657Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5280|2024-08-01T21:11:12.346Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5280</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make non-logged in users execute an XSS payload via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5280|2024-08-01T21:11:12.346Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6205|2024-08-01T21:33:05.100Z -- unknown -- payplus%20payment%20gateway</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6205</link>
      <description>The PayPlus Payment Gateway WordPress plugin before 6.6.9 does not properly sanitise and escape a parameter before using it in a SQL statement via a WooCommerce API route available to unauthenticated users, leading to an SQL injection vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-6205|2024-08-01T21:33:05.100Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5155|2024-08-01T21:03:10.979Z -- unknown -- inquiry%20cart</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5155</link>
      <description>The Inquiry cart WordPress plugin through 3.4.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5155|2024-08-01T21:03:10.979Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5447|2024-08-01T21:11:12.768Z -- unknown -- paypal%20pay%20now%2C%20buy%20now%2C%20donation%20and%20cart%20buttons%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5447</link>
      <description>The PayPal Pay Now, Buy Now, Donation and Cart Buttons Shortcode WordPress plugin through 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5447|2024-08-01T21:11:12.768Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5287|2024-08-01T21:11:12.359Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5287</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in user change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5287|2024-08-01T21:11:12.359Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5444|2024-08-01T21:11:12.795Z -- unknown -- bible%20text</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5444</link>
      <description>The Bible Text WordPress plugin through 0.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5444|2024-08-01T21:11:12.795Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6021|2024-08-01T21:25:03.197Z -- unknown -- donation%20block%20for%20paypal</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6021</link>
      <description>The Donation Block For PayPal WordPress plugin through 2.1.0 does not sanitise and escape form submissions, leading to a stored cross-site scripting vulnerability</description>
      <guid isPermaLink="false">CVE-2024-6021|2024-08-01T21:25:03.197Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5286|2024-08-01T21:11:12.434Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5286</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5286|2024-08-01T21:11:12.434Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6073|2024-08-01T21:25:03.205Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6073</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6073|2024-08-01T21:25:03.205Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5488|2024-08-01T21:11:12.790Z -- unknown -- seopress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5488</link>
      <description>The SEOPress  WordPress plugin before 7.9 does not properly protect some of its REST API routes, which combined with another Object Injection vulnerability can allow unauthenticated attackers to unserialize malicious gadget chains, compromising the site if a suitable chain is present.</description>
      <guid isPermaLink="false">CVE-2024-5488|2024-08-01T21:11:12.790Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2102|2024-08-01T19:03:38.794Z -- unknown -- salon%20booking%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2102</link>
      <description>The Salon booking system WordPress plugin before 9.6.3 does not properly sanitize and escape the 'Mobile Phone' field and 'sms_prefix' parameter when booking an appointment, allowing customers to conduct Stored Cross-Site Scripting attacks. The payload gets triggered when an admin visits the 'Bookings' page and the malicious script is executed in the admin context.</description>
      <guid isPermaLink="false">CVE-2024-2102|2024-08-01T19:03:38.794Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2640|2024-08-01T19:18:48.172Z -- unknown -- watu%20quiz</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2640</link>
      <description>The Watu Quiz WordPress plugin before 3.4.1.2 does not sanitise and escape some of its settings, which could allow users such as authors (if they've been authorized by admins) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2024-2640|2024-08-01T19:18:48.172Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2322|2024-08-01T19:11:52.617Z -- unknown -- woocommerce%20cart%20abandonment%20recovery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2322</link>
      <description>The WooCommerce Cart Abandonment Recovery WordPress plugin before 1.2.27 does not have CSRF check in its bulk actions, which could allow attackers to make logged in admins delete arbitrary email templates as well as delete and unsubscribe users from abandoned orders via CSRF attacks.</description>
      <guid isPermaLink="false">CVE-2024-2322|2024-08-01T19:11:52.617Z</guid>
      <pubDate>Wed, 03 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2278|2024-08-01T19:11:52.117Z -- unknown -- themify</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2278</link>
      <description>Themify  WordPress plugin before 1.4.4 does not sanitise and escape some of its Filters settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2278|2024-08-01T19:11:52.117Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2369|2024-08-01T19:11:53.453Z -- unknown -- page%20builder%20gutenberg%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2369</link>
      <description>The Page Builder Gutenberg Blocks WordPress plugin before 3.1.7 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2369|2024-08-01T19:11:53.453Z</guid>
      <pubDate>Tue, 02 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3076|2024-08-01T19:32:42.564Z -- unknown -- mm-email2image</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3076</link>
      <description>The MM-email2image WordPress plugin through 0.2.5 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3076|2024-08-01T19:32:42.564Z</guid>
      <pubDate>Fri, 26 Apr 2024 13:23:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3058|2024-08-01T19:32:42.623Z -- unknown -- enl%20newsletter</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3058</link>
      <description>The ENL Newsletter WordPress plugin through 1.0.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3058|2024-08-01T19:32:42.623Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2101|2024-08-01T19:03:38.483Z -- unknown -- salon%20booking%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2101</link>
      <description>The Salon booking system WordPress plugin before 9.6.3 does not properly sanitize and escape the 'Mobile Phone' field when booking an appointment, allowing customers to conduct Stored Cross-Site Scripting attacks. The payload gets triggered when an admin visits the 'Customers' page and the malicious script is executed in the admin context.</description>
      <guid isPermaLink="false">CVE-2024-2101|2024-08-01T19:03:38.483Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2233|2024-08-01T19:03:39.397Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2233</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks. These include declining and accepting group invitations or leaving a group</description>
      <guid isPermaLink="false">CVE-2024-2233|2024-08-01T19:03:39.397Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2428|2024-08-01T19:11:53.504Z -- unknown -- the%20ultimate%20video%20player%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2428</link>
      <description>The Ultimate Video Player For WordPress  WordPress plugin before 2.2.3 does not have proper capability check when updating its settings via a REST route, allowing Contributor and above users to update them. Furthermore, due to the lack of escaping in one of the settings, this also allows them to perform Stored XSS attacks</description>
      <guid isPermaLink="false">CVE-2024-2428|2024-08-01T19:11:53.504Z</guid>
      <pubDate>Wed, 10 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2907|2024-08-01T19:25:42.145Z -- unknown -- agca</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2907</link>
      <description>The AGCA  WordPress plugin before 7.2.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-2907|2024-08-01T19:25:42.145Z</guid>
      <pubDate>Thu, 25 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3112|2024-08-01T19:32:42.695Z -- unknown -- quotes%20and%20tips%20by%20bestwebsoft</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3112</link>
      <description>The Quotes and Tips by BestWebSoft WordPress plugin before 1.45 does not properly validate image files uploaded, allowing high privilege users such as admin to upload arbitrary files on the server even when they should not be allowed to (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3112|2024-08-01T19:32:42.695Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3113|2024-08-01T19:32:42.701Z -- unknown -- formflow%3A%20whatsapp%20social%20and%20advanced%20form%20builder%20with%20easy%20lead%20collection</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3113</link>
      <description>The FormFlow: WhatsApp Social and Advanced Form Builder with Easy Lead Collection WordPress plugin before 2.12.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3113|2024-08-01T19:32:42.701Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2235|2024-08-01T19:03:39.198Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2235</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make users vote on any polls, including those they don't have access to via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2235|2024-08-01T19:03:39.198Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3026|2024-08-01T19:32:42.611Z -- unknown -- wordpress%20button%20plugin%20maxbuttons</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3026</link>
      <description>The WordPress Button Plugin MaxButtons WordPress plugin before 9.7.8 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3026|2024-08-01T19:32:42.611Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2402|2024-08-01T19:11:53.525Z -- unknown -- better%20comments</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2402</link>
      <description>The Better Comments WordPress plugin before 1.5.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2402|2024-08-01T19:11:53.525Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2697|2024-08-01T19:18:48.397Z -- unknown -- socialdriver-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2697</link>
      <description>The socialdriver-framework WordPress plugin before 2024.0.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2024-2697|2024-08-01T19:18:48.397Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2159|2024-08-01T19:03:39.309Z -- unknown -- social%20sharing%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2159</link>
      <description>The Social Sharing Plugin  WordPress plugin before 3.3.61 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2159|2024-08-01T19:03:39.309Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2405|2024-08-01T19:11:53.477Z -- unknown -- float%20menu</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2405</link>
      <description>The Float menu  WordPress plugin before 6.0.1 does not have CSRF check in its bulk actions, which could allow attackers to make logged in admin delete arbitrary menu via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2024-2405|2024-08-01T19:11:53.477Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1983|2024-08-01T19:17:11.130Z -- unknown -- simple%20ajax%20chat</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1983</link>
      <description>The Simple Ajax Chat  WordPress plugin before 20240223 does not prevent visitors from using malicious Names when using the chat, which will be reflected unsanitized to other users.</description>
      <guid isPermaLink="false">CVE-2024-1983|2024-08-01T19:17:11.130Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2749|2024-08-01T19:25:41.264Z -- unknown -- vikbooking%20hotel%20booking%20engine%20%26%20pms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2749</link>
      <description>The VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8's access control mechanism fails to properly restrict access to its settings, permitting any users that can access a menu to manipulate requests and perform unauthorized actions such as editing, renaming or deleting (categories for example) despite initial settings prohibiting such access. This vulnerability resembles broken access control, enabling unauthorized users to modify critical VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8 configurations.</description>
      <guid isPermaLink="false">CVE-2024-2749|2024-08-01T19:25:41.264Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2430|2024-08-01T19:11:53.499Z -- unknown -- website%20content%20in%20page%20or%20post</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2430</link>
      <description>The Website Content in Page or Post WordPress plugin before 2024.04.09 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2430|2024-08-01T19:11:53.499Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2870|2024-08-01T19:25:42.186Z -- unknown -- socialdriver-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2870</link>
      <description>The socialdriver-framework WordPress plugin before 2024.04.30 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-2870|2024-08-01T19:25:42.186Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3048|2024-08-01T19:32:42.570Z -- unknown -- bannerlid</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3048</link>
      <description>The Bannerlid WordPress plugin through 1.1.0 does not escape generated URLs before outputting them in attributes, leading to Reflected Cross-Site Scripting which could be used against high privilege users such as administrators</description>
      <guid isPermaLink="false">CVE-2024-3048|2024-08-01T19:32:42.570Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2972|2024-08-01T19:32:42.539Z -- unknown -- floating%20chat%20widget%3A%20contact%20chat%20icons%2C%20whatsapp%2C%20telegram%20chat%2C%20line%20messenger%2C%20wechat%2C%20email%2C%20sms%2C%20call%20button</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2972</link>
      <description>The Floating Chat Widget: Contact Chat Icons, WhatsApp, Telegram Chat, Line Messenger, WeChat, Email, SMS, Call Button  WordPress plugin before 3.1.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2972|2024-08-01T19:32:42.539Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2189|2024-08-01T19:03:39.100Z -- unknown -- social%20icons%20widget%20%26%20block%20by%20wpzoom</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2189</link>
      <description>The Social Icons Widget &amp; Block by WPZOOM WordPress plugin before 4.2.18 does not sanitise and escape some of its Widget settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2189|2024-08-01T19:03:39.100Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2218|2024-08-01T19:03:39.405Z -- unknown -- luckywp%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2218</link>
      <description>The LuckyWP Table of Contents WordPress plugin through 2.1.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2218|2024-08-01T19:03:39.405Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3050|2024-08-01T19:32:42.587Z -- unknown -- site%20reviews</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3050</link>
      <description>The Site Reviews WordPress plugin before 7.0.0 retrieves client IP addresses from potentially untrusted headers, allowing an attacker to manipulate its value. This may be used to bypass IP-based blocking</description>
      <guid isPermaLink="false">CVE-2024-3050|2024-08-01T19:32:42.587Z</guid>
      <pubDate>Wed, 29 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2262|2024-08-01T19:03:39.362Z -- unknown -- themify</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2262</link>
      <description>Themify  WordPress plugin before 1.4.4 does not have CSRF check in its bulk action, which could allow attackers to make logged in users delete arbitrary filters via CSRF attack, granted they know the related filter slugs</description>
      <guid isPermaLink="false">CVE-2024-2262|2024-08-01T19:03:39.362Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2375|2024-08-01T19:11:53.432Z -- unknown -- wpqa%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2375</link>
      <description>The WPQA Builder WordPress plugin before 6.1.1 does not sanitise and escape some of its Slider settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2375|2024-08-01T19:11:53.432Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2729|2024-08-01T19:25:41.320Z -- unknown -- otter%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2729</link>
      <description>The Otter Blocks  WordPress plugin before 2.6.6 does not properly escape its mainHeadings blocks' attribute before appending it to the final rendered block, allowing contributors to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-2729|2024-08-01T19:25:41.320Z</guid>
      <pubDate>Thu, 18 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2739|2024-08-01T19:25:41.190Z -- unknown -- advanced%20search</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2739</link>
      <description>The Advanced Search WordPress plugin through 1.1.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2739|2024-08-01T19:25:41.190Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3059|2024-08-01T19:32:42.574Z -- unknown -- enl%20newsletter</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3059</link>
      <description>The ENL Newsletter WordPress plugin through 1.0.1 does not have CSRF checks in some places, which could allow attackers to make logged in admins delete arbitrary Campaigns via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3059|2024-08-01T19:32:42.574Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2220|2024-08-01T19:03:39.366Z -- unknown -- button%20contact%20vr</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2220</link>
      <description>The Button contact VR WordPress plugin through 4.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2220|2024-08-01T19:03:39.366Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2231|2024-08-01T19:03:39.156Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2231</link>
      <description>The  allows any authenticated user to join a private group due to a missing authorization check on a function</description>
      <guid isPermaLink="false">CVE-2024-2231|2024-08-01T19:03:39.156Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2696|2024-08-01T19:18:48.239Z -- unknown -- socialdriver-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2696</link>
      <description>The socialdriver-framework WordPress plugin before 2024.04.30 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2696|2024-08-01T19:18:48.239Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2309|2024-08-01T19:11:53.339Z -- unknown -- wp%20staging%20wordpress%20backup%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2309</link>
      <description>The WP STAGING WordPress Backup Plugin  WordPress plugin before 3.4.0, wp-staging-pro WordPress plugin before 5.4.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2309|2024-08-01T19:11:53.339Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2858|2024-08-01T19:25:42.166Z -- unknown -- simple%20buttons%20creator</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2858</link>
      <description>The Simple Buttons Creator WordPress plugin through 1.04 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2858|2024-08-01T19:25:42.166Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2444|2024-08-01T19:11:53.590Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2444</link>
      <description>The Inline Related Posts WordPress plugin before 3.5.0 does not sanitise and escape some of its settings, which could allow high privilege users such as Admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2444|2024-08-01T19:11:53.590Z</guid>
      <pubDate>Sat, 06 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2761|2024-08-01T19:25:41.441Z -- unknown -- genesis%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2761</link>
      <description>The Genesis Blocks WordPress plugin before 3.1.3 does not properly escape data input provided to some of its blocks, allowing using with at least contributor privileges to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-2761|2024-08-01T19:25:41.441Z</guid>
      <pubDate>Fri, 19 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2603|2024-08-01T19:18:48.123Z -- unknown -- salon%20booking%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2603</link>
      <description>The Salon booking system WordPress plugin through 9.6.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin (or editor depending on Salon booking system WordPress plugin through 9.6.5 configuration) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2603|2024-08-01T19:18:48.123Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2505|2024-08-01T19:18:46.478Z -- unknown -- gamipress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2505</link>
      <description>The GamiPress  WordPress plugin before 6.8.9's access control mechanism fails to properly restrict access to its settings, permitting Authors to manipulate requests and extend access to lower privileged users, like Subscribers, despite initial settings prohibiting such access. This vulnerability resembles broken access control, enabling unauthorized users to modify critical GamiPress  WordPress plugin before 6.8.9 configurations.</description>
      <guid isPermaLink="false">CVE-2024-2505|2024-08-01T19:18:46.478Z</guid>
      <pubDate>Mon, 29 Apr 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2234|2024-08-01T19:03:39.187Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2234</link>
      <description>The Himer WordPress theme before 2.1.1 does not sanitise and escape some of its Post settings, which could allow high privilege users such as Contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2234|2024-08-01T19:03:39.187Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3060|2024-08-01T19:32:42.649Z -- unknown -- enl%20newsletter</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3060</link>
      <description>The ENL Newsletter WordPress plugin through 1.0.1 does not sanitize and escape a parameter before using it in a SQL statement, allowing admin+ to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2024-3060|2024-08-01T19:32:42.649Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3032|2024-08-01T19:32:42.520Z -- unknown -- themify%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3032</link>
      <description>Themify Builder WordPress plugin before 7.5.8 does not validate a parameter before redirecting the user to its value, leading to an Open Redirect issue</description>
      <guid isPermaLink="false">CVE-2024-3032|2024-08-01T19:32:42.520Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2744|2024-08-01T19:25:42.000Z -- unknown -- nextgen%20gallery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2744</link>
      <description>The NextGEN Gallery  WordPress plugin before 3.59.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2744|2024-08-01T19:25:42.000Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2509|2024-08-01T19:18:46.944Z -- unknown -- gutenberg%20blocks%20by%20kadence%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2509</link>
      <description>The Gutenberg Blocks by Kadence Blocks WordPress plugin before 3.2.26 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2509|2024-08-01T19:18:46.944Z</guid>
      <pubDate>Fri, 05 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3075|2024-08-01T19:32:42.578Z -- unknown -- mm-email2image</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3075</link>
      <description>The MM-email2image WordPress plugin through 0.2.5 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3075|2024-08-01T19:32:42.578Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2263|2024-08-01T19:03:39.471Z -- unknown -- themify</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2263</link>
      <description>Themify  WordPress plugin before 1.4.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-2263|2024-08-01T19:03:39.471Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2836|2024-08-01T19:25:42.038Z -- unknown -- social%20share%2C%20social%20login%20and%20social%20comments%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2836</link>
      <description>The Social Share, Social Login and Social Comments Plugin  WordPress plugin before 7.13.64 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2836|2024-08-01T19:25:42.038Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2837|2024-08-01T19:25:42.125Z -- unknown -- wp%20chat%20app</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2837</link>
      <description>The WP Chat App WordPress plugin before 3.6.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admins to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2837|2024-08-01T19:25:42.125Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3111|2024-08-01T19:32:42.873Z -- unknown -- interactive%20content</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3111</link>
      <description>The Interactive Content  WordPress plugin before 1.15.8 does not validate uploads which could allow a Contributors and above to update malicious SVG files, leading to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2024-3111|2024-08-01T19:32:42.873Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2441|2024-08-01T19:11:53.563Z -- unknown -- vikbooking%20hotel%20booking%20engine%20%26%20pms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2441</link>
      <description>The VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8 allows direct access to menus, allowing an authenticated user with subscriber privileges or above, to bypass authorization and access settings of the VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8's they shouldn't be allowed to.</description>
      <guid isPermaLink="false">CVE-2024-2441|2024-08-01T19:11:53.563Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2857|2024-08-01T19:25:42.160Z -- unknown -- simple%20buttons%20creator</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2857</link>
      <description>The Simple Buttons Creator WordPress plugin through 1.04 does not have any authorisation as well as CSRF in its add button function, allowing unauthenticated users to call them either directly or via CSRF attacks. Furthermore, due to the lack of sanitisation and escaping, it could also allow them to perform Stored Cross-Site Scripting attacks against logged in admins.</description>
      <guid isPermaLink="false">CVE-2024-2857|2024-08-01T19:25:42.160Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2040|2024-08-01T19:03:37.841Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2040</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make users join private groups via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2040|2024-08-01T19:03:37.841Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2118|2024-08-01T19:03:39.004Z -- unknown -- social%20media%20share%20buttons%20%26%20social%20sharing%20icons</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2118</link>
      <description>The Social Media Share Buttons &amp; Social Sharing Icons WordPress plugin before 2.8.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2118|2024-08-01T19:03:39.004Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2404|2024-08-01T19:11:53.446Z -- unknown -- better%20comments</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2404</link>
      <description>The Better Comments WordPress plugin before 1.5.6 does not sanitise and escape some of its settings, which could allow low privilege users such as Subscribers to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-2404|2024-08-01T19:11:53.446Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2429|2024-08-01T19:11:53.535Z -- unknown -- salon%20booking%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2429</link>
      <description>The Salon booking system WordPress plugin through 9.6.5 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2429|2024-08-01T19:11:53.535Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2376|2024-08-01T19:11:53.485Z -- unknown -- wpqa%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2376</link>
      <description>The WPQA Builder WordPress plugin before 6.1.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2376|2024-08-01T19:11:53.485Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2439|2024-08-01T19:11:53.536Z -- unknown -- salon%20booking%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2439</link>
      <description>The Salon booking system WordPress plugin through 9.6.5 does not sanitise and escape some of its settings, which could allow high privilege users such as Editor to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2439|2024-08-01T19:11:53.536Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2762|2024-08-01T19:25:41.717Z -- unknown -- foogallery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2762</link>
      <description>The FooGallery  WordPress plugin before 2.4.15, foogallery-premium WordPress plugin before 2.4.15 does not validate and escape some of its Gallery settings before outputting them back in the page, which could allow users with a role as low as Author to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-2762|2024-08-01T19:25:41.717Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2470|2024-08-01T19:11:53.531Z -- unknown -- simple%20ajax%20chat</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2470</link>
      <description>The Simple Ajax Chat  WordPress plugin before 20240412 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2470|2024-08-01T19:11:53.531Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2908|2024-08-01T19:25:42.171Z -- unknown -- call%20now%20button</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2908</link>
      <description>The Call Now Button  WordPress plugin before 1.4.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-2908|2024-08-01T19:25:42.171Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2310|2024-08-01T19:11:52.506Z -- unknown -- wp%20google%20review%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2310</link>
      <description>The WP Google Review Slider WordPress plugin before 13.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2310|2024-08-01T19:11:52.506Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2583|2024-08-01T19:18:47.959Z -- unknown -- wp%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2583</link>
      <description>The WP Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 7.0.5 does not properly escape some of its shortcodes attributes before they are echoed back to users, making it possible for users with the contributor role to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-2583|2024-08-01T19:18:47.959Z</guid>
      <pubDate>Sat, 13 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0248|2024-08-01T17:41:16.584Z -- unknown -- eazydocs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0248</link>
      <description>The EazyDocs WordPress plugin before 2.4.0 re-introduced CVE-2023-6029 (https://wpscan.com/vulnerability/7a0aaf85-8130-4fd7-8f09-f8edc929597e/) in 2.3.8, allowing any authenticated users, such as subscriber to delete arbitrary posts, as well as add and delete documents/sections. The issue was partially fixed in 2.3.9.</description>
      <guid isPermaLink="false">CVE-2024-0248|2024-08-01T17:41:16.584Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6294|2024-08-01T17:56:14.455Z -- unknown -- popup%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6294</link>
      <description>The Popup Builder WordPress plugin before 4.2.6 does not validate a parameter before making a request to it, which could allow users with the administrator role to perform SSRF attack in Multisite WordPress configurations.</description>
      <guid isPermaLink="false">CVE-2023-6294|2024-08-01T17:56:14.455Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:06:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6412|2024-08-01T17:41:48.337Z -- unknown -- html%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6412</link>
      <description>The HTML Forms  WordPress plugin before 1.3.34 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6412|2024-08-01T17:41:48.337Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0250|2024-08-01T17:41:16.271Z -- unknown -- analytics%20insights%20for%20google%20analytics%204%20%28aiwp%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0250</link>
      <description>The Analytics Insights for Google Analytics 4 (AIWP) WordPress plugin before 6.3 is vulnerable to Open Redirect due to insufficient validation on the redirect oauth2callback.php file. This makes it possible for unauthenticated attackers to redirect users to potentially malicious sites if they can successfully trick them into performing an action.</description>
      <guid isPermaLink="false">CVE-2024-0250|2024-08-01T17:41:16.271Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6272|2024-08-01T15:00:41.459Z -- unknown -- spidercontacts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6272</link>
      <description>The SpiderContacts WordPress plugin through 1.1.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6272|2024-08-01T15:00:41.459Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6529|2024-08-01T13:26:14.032Z -- unknown -- ultimate%20classified%20listings</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6529</link>
      <description>The Ultimate Classified Listings WordPress plugin before 1.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6529|2024-08-01T13:26:14.032Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4090|2024-08-01T13:36:51.336Z -- unknown -- floating%20notification%20bar%2C%20sticky%20menu%20on%20scroll%2C%20announcement%20banner%2C%20and%20sticky%20header%20for%20any%20theme</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4090</link>
      <description>The Floating Notification Bar, Sticky Menu on Scroll, Announcement Banner, and Sticky Header for Any   WordPress plugin before 2.7.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-4090|2024-08-01T13:36:51.336Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3983|2024-08-01T13:19:56.882Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3983</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 30.1 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting customers via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3983|2024-08-01T13:19:56.882Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5573|2024-07-31T20:48:17.484Z -- unknown -- easy%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5573</link>
      <description>The Easy Table of Contents WordPress plugin before 2.0.66 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-5573|2024-07-31T20:48:17.484Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1845|2024-07-31T17:22:15.089Z -- unknown -- vikrentcar%20car%20rental%20management%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1845</link>
      <description>The VikRentCar Car Rental Management System WordPress plugin before 1.3.2 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-1845|2024-07-31T17:22:15.089Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6695|2024-07-31T15:06:31.038Z -- unknown -- user%20profile%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6695</link>
      <description>it's possible for an attacker to gain administrative access without having any kind of account on the targeted site and perform unauthorized actions. This is due to improper logic flow on the user registration process.</description>
      <guid isPermaLink="false">CVE-2024-6695|2024-07-31T15:06:31.038Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1660|2024-07-31T15:19:16.546Z -- unknown -- top%20bar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1660</link>
      <description>The Top Bar WordPress plugin before 3.0.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1660|2024-07-31T15:19:16.546Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3986|2024-07-31T15:31:25.729Z -- unknown -- sportspress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3986</link>
      <description>The SportsPress  WordPress plugin before 2.7.22 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3986|2024-07-31T15:31:25.729Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3632|2024-07-31T15:38:13.804Z -- unknown -- smart%20image%20gallery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3632</link>
      <description>The Smart Image Gallery WordPress plugin before 1.0.19 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3632|2024-07-31T15:38:13.804Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6067|2024-07-31T15:24:22.699Z -- unknown -- wp%20user%20profile%20avatar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6067</link>
      <description>The WP User Profile Avatar WordPress plugin through 1.0.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-6067|2024-07-31T15:24:22.699Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6165|2024-07-31T13:58:59.116Z -- unknown -- wanotifier</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6165</link>
      <description>The WANotifier  WordPress plugin before 2.6.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6165|2024-07-31T13:58:59.116Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6408|2024-07-31T13:30:13.727Z -- unknown -- slider%20by%2010web</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6408</link>
      <description>The Slider by 10Web  WordPress plugin before 1.2.57 does not sanitise and escape its Slider Title, which could allow high privilege users such as editors and above to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-6408|2024-07-31T13:30:13.727Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6226|2024-07-30T19:20:14.781Z -- unknown -- wpstickybar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6226</link>
      <description>The WpStickyBar  WordPress plugin through 2.1.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6226|2024-07-30T19:20:14.781Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1956|2024-07-30T19:28:14.012Z -- unknown -- wpb-show-core</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1956</link>
      <description>The wpb-show-core WordPress plugin before 2.7 does not sanitise and escape the parameters before outputting it back in the response of an unauthenticated request, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-1956|2024-07-30T19:28:14.012Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5765|2024-07-30T19:26:01.409Z -- unknown -- wpstickybar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5765</link>
      <description>The WpStickyBar  WordPress plugin through 2.1.0 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2024-5765|2024-07-30T19:26:01.409Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5882|2024-07-30T15:51:33.727Z -- unknown -- ultimate%20classified%20listings</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5882</link>
      <description>The Ultimate Classified Listings WordPress plugin before 1.3 does not validate the `ucl_page` and `layout` parameters allowing unauthenticated users to access PHP files on the server from the listings page</description>
      <guid isPermaLink="false">CVE-2024-5882|2024-07-30T15:51:33.727Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5807|2024-07-30T15:46:25.577Z -- unknown -- business%20card</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5807</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not prevent high privilege users like administrators from uploading malicious PHP files, which could allow them to run arbitrary code on servers hosting their site, even in MultiSite configurations.</description>
      <guid isPermaLink="false">CVE-2024-5807|2024-07-30T15:46:25.577Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1286|2024-07-30T15:28:17.011Z -- unknown -- pmpro-membership-maps</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1286</link>
      <description>The pmpro-membership-maps WordPress plugin before 0.7 does not prevent users with at least the contributor role from leaking sensitive information about users with a membership on the site.</description>
      <guid isPermaLink="false">CVE-2024-1286|2024-07-30T15:28:17.011Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4483|2024-07-30T16:01:11.284Z -- unknown -- email%20encoder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4483</link>
      <description>The Email Encoder  WordPress plugin before 2.2.2 does not escape the WP_Email_Encoder_Bundle_options[protection_text] parameter before outputting it back in an attribute in an admin page, leading to a Stored Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-4483|2024-07-30T16:01:11.284Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3628|2024-07-30T15:17:06.940Z -- unknown -- easyevent</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3628</link>
      <description>The EasyEvent WordPress plugin through 1.0.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-3628|2024-07-30T15:17:06.940Z</guid>
      <pubDate>Tue, 07 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4096|2024-07-30T13:32:50.382Z -- unknown -- responsive%20tabs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4096</link>
      <description>The Responsive Tabs WordPress plugin through 4.0.8 does not sanitise and escape some of its Tab settings, which could allow high privilege users such as Contributors and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4096|2024-07-30T13:32:50.382Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1287|2024-07-30T13:18:26.101Z -- unknown -- pmpro-member-directory</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1287</link>
      <description>The pmpro-member-directory WordPress plugin before 1.2.6 does not prevent users with at least the contributor role from leaking other users' sensitive information, including password hashes.</description>
      <guid isPermaLink="false">CVE-2024-1287|2024-07-30T13:18:26.101Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6224|2024-07-30T13:28:44.071Z -- unknown -- send%20email%20only%20on%20reply%20to%20my%20comment</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6224</link>
      <description>The Send email only on Reply to My Comment WordPress plugin through 1.0.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6224|2024-07-30T13:28:44.071Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5809|2024-07-30T13:42:15.712Z -- unknown -- wp%20ajax%20contact%20form</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5809</link>
      <description>The WP Ajax Contact Form WordPress plugin through 2.2.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against admin users</description>
      <guid isPermaLink="false">CVE-2024-5809|2024-07-30T13:42:15.712Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1286|2024-07-30T13:47:03.767Z -- unknown -- pmpro-membership-maps</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1286</link>
      <description>The pmpro-membership-maps WordPress plugin before 0.7 does not prevent users with at least the contributor role from leaking sensitive information about users with a membership on the site.</description>
      <guid isPermaLink="false">CVE-2024-1286|2024-07-30T13:47:03.767Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4752|2024-07-29T20:01:14.920Z -- unknown -- eventon</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4752</link>
      <description>The EventON WordPress plugin before 2.2.15 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4752|2024-07-29T20:01:14.920Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6420|2024-07-29T18:54:21.749Z -- unknown -- hide%20my%20wp%20ghost</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6420</link>
      <description>The Hide My WP Ghost  WordPress plugin before 5.2.02 does not prevent redirects to the login page via the auth_redirect WordPress function, allowing an unauthenticated visitor to access the hidden login page.</description>
      <guid isPermaLink="false">CVE-2024-6420|2024-07-29T18:54:21.749Z</guid>
      <pubDate>Tue, 23 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6366|2024-07-29T18:35:53.964Z -- unknown -- user%20profile%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6366</link>
      <description>The User Profile Builder  WordPress plugin before 3.11.8 does not have proper authorisation, allowing unauthenticated users to upload media files via the async upload functionality of WP.</description>
      <guid isPermaLink="false">CVE-2024-6366|2024-07-29T18:35:53.964Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6271|2024-07-29T15:43:02.582Z -- unknown -- community%20events</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6271</link>
      <description>The Community Events WordPress plugin before 1.5 does not have CSRF check in place when deleting events, which could allow attackers to make a logged in admin delete arbitrary events via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6271|2024-07-29T15:43:02.582Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5285|2024-07-29T13:35:29.846Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5285</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.2 does not have CSRF check in place when deleting affiliates, which could allow attackers to make a logged in user change delete them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5285|2024-07-29T13:35:29.846Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6487|2024-07-29T13:26:05.849Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6487</link>
      <description>The Inline Related Posts WordPress plugin before 3.8.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6487|2024-07-29T13:26:05.849Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6366|2024-07-29T13:39:48.942Z -- unknown -- user%20profile%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6366</link>
      <description>The User Profile Builder  WordPress plugin before 3.11.8 does not have proper authorisation, allowing unauthenticated users to upload media files via the async upload functionality of WP.</description>
      <guid isPermaLink="false">CVE-2024-6366|2024-07-29T13:39:48.942Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5883|2024-07-29T13:32:52.913Z -- unknown -- ultimate%20classified%20listings</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5883</link>
      <description>The Ultimate Classified Listings WordPress plugin before 1.3 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5883|2024-07-29T13:32:52.913Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6094|2024-07-26T17:50:45.882Z -- unknown -- wp%20ulike</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6094</link>
      <description>The WP ULike  WordPress plugin before 4.7.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-6094|2024-07-26T17:50:45.882Z</guid>
      <pubDate>Wed, 24 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6490|2024-07-26T06:00:04.555Z -- unknown -- master%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6490</link>
      <description>During testing of the Master Slider  WordPress plugin through 3.9.10, a CSRF vulnerability was found, which allows an unauthorized user to manipulate requests on behalf of the victim and thereby delete all of the sliders inside Master Slider  WordPress plugin through 3.9.10.</description>
      <guid isPermaLink="false">CVE-2024-6490|2024-07-26T06:00:04.555Z</guid>
      <pubDate>Fri, 26 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2470|2024-07-25T13:22:27.439Z -- unknown -- simple%20ajax%20chat</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2470</link>
      <description>The Simple Ajax Chat  WordPress plugin before 20240412 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2470|2024-07-25T13:22:27.439Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1076|2024-07-24T19:53:18.089Z -- unknown -- ssl%20zen</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1076</link>
      <description>The SSL Zen  WordPress plugin before 4.6.0 only relies on the use of .htaccess to prevent visitors from accessing the site's generated private keys, which allows an attacker to read them if the site runs on a server who doesn't support .htaccess files, like NGINX.</description>
      <guid isPermaLink="false">CVE-2024-1076|2024-07-24T19:53:18.089Z</guid>
      <pubDate>Wed, 08 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5077|2024-07-24T19:55:36.796Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5077</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5077|2024-07-24T19:55:36.796Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6289|2024-07-24T19:12:38.336Z -- unknown -- wps%20hide%20login</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6289</link>
      <description>The WPS Hide Login WordPress plugin before 1.9.16.4 does not prevent redirects to the login page via the auth_redirect WordPress function, allowing an unauthenticated visitor to access the hidden login page.</description>
      <guid isPermaLink="false">CVE-2024-6289|2024-07-24T19:12:38.336Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5284|2024-07-24T19:50:58.352Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5284</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5284|2024-07-24T19:50:58.352Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5744|2024-07-24T19:45:02.054Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5744</link>
      <description>The wp-eMember WordPress plugin before 10.6.7 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2024-5744|2024-07-24T19:45:02.054Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5529|2024-07-24T16:59:06.052Z -- unknown -- wp%20quicklatex</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5529</link>
      <description>The WP QuickLaTeX WordPress plugin before 3.8.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5529|2024-07-24T16:59:06.052Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5169|2024-07-24T17:44:11.724Z -- unknown -- video%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5169</link>
      <description>The Video Widget WordPress plugin through 1.2.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5169|2024-07-24T17:44:11.724Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3582|2024-07-24T17:22:38.887Z -- unknown -- ungallery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3582</link>
      <description>The UnGallery WordPress plugin through 2.2.4 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3582|2024-07-24T17:22:38.887Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2640|2024-07-24T14:19:44.930Z -- unknown -- watu%20quiz</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2640</link>
      <description>The Watu Quiz WordPress plugin before 3.4.1.2 does not sanitise and escape some of its settings, which could allow users such as authors (if they've been authorized by admins) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2024-2640|2024-07-24T14:19:44.930Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4290|2024-07-23T20:32:33.688Z -- unknown -- sailthru%20triggermail</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4290</link>
      <description>The Sailthru Triggermail WordPress plugin through 1.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4290|2024-07-23T20:32:33.688Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5004|2024-07-23T20:38:56.103Z -- unknown -- cm%20popup%20plugin%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5004</link>
      <description>The CM Popup Plugin for WordPress  WordPress plugin before 1.6.6 does not sanitise and escape some of the campaign settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5004|2024-07-23T20:38:56.103Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4934|2024-07-23T16:18:36.778Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4934</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.0.2 does not validate and escape some of its Quiz fields before outputting them back in a page/post where the Quiz is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4934|2024-07-23T16:18:36.778Z</guid>
      <pubDate>Mon, 01 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6231|2024-07-23T06:00:02.805Z -- unknown -- request%20a%20quote</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6231</link>
      <description>The Request a Quote WordPress plugin before 2.4.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6231|2024-07-23T06:00:02.805Z</guid>
      <pubDate>Tue, 23 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6420|2024-07-23T06:00:03.289Z -- unknown -- hide%20my%20wp%20ghost</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6420</link>
      <description>The Hide My WP Ghost  WordPress plugin before 5.2.02 does not prevent redirects to the login page via the auth_redirect WordPress function, allowing an unauthenticated visitor to access the hidden login page.</description>
      <guid isPermaLink="false">CVE-2024-6420|2024-07-23T06:00:03.289Z</guid>
      <pubDate>Tue, 23 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4260|2024-07-23T06:00:02.295Z -- unknown -- page%20builder%20gutenberg%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4260</link>
      <description>The Page Builder Gutenberg Blocks  WordPress plugin before 3.1.12 does not prevent users from pinging arbitrary hosts via some of its shortcodes, which could allow high privilege users such as contributors to perform SSRF attacks.</description>
      <guid isPermaLink="false">CVE-2024-4260|2024-07-23T06:00:02.295Z</guid>
      <pubDate>Tue, 23 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3111|2024-07-22T18:22:57.788Z -- unknown -- interactive%20content</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3111</link>
      <description>The Interactive Content  WordPress plugin before 1.15.8 does not validate uploads which could allow a Contributors and above to update malicious SVG files, leading to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2024-3111|2024-07-22T18:22:57.788Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6205|2024-07-22T18:08:54.403Z -- unknown -- payplus%20payment%20gateway</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6205</link>
      <description>The PayPlus Payment Gateway WordPress plugin before 6.6.9 does not properly sanitise and escape a parameter before using it in a SQL statement via a WooCommerce API route available to unauthenticated users, leading to an SQL injection vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-6205|2024-07-22T18:08:54.403Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5715|2024-07-22T14:36:18.912Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5715</link>
      <description>The wp-eMember WordPress plugin before 10.6.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5715|2024-07-22T14:36:18.912Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5973|2024-07-22T10:54:51.675Z -- unknown -- masterstudy%20lms%20wordpress%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5973</link>
      <description>The MasterStudy LMS WordPress Plugin  WordPress plugin before 3.3.24 does not prevent students from creating instructor accounts, which could be used to get access to functionalities they shouldn't have.</description>
      <guid isPermaLink="false">CVE-2024-5973|2024-07-22T10:54:51.675Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3977|2024-07-19T18:44:36.214Z -- unknown -- wordpress%20jitsi%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3977</link>
      <description>The WordPress Jitsi Shortcode WordPress plugin through 0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3977|2024-07-19T18:44:36.214Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7268|2024-07-19T15:22:52.403Z -- unknown -- artplacer%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7268</link>
      <description>The ArtPlacer Widget WordPress plugin before 2.21.2 does not have authorisation check in place when deleting widgets,  allowing ay authenticated users, such as subscriber, to delete arbitrary widgets</description>
      <guid isPermaLink="false">CVE-2023-7268|2024-07-19T15:22:52.403Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7269|2024-07-19T06:00:05.343Z -- unknown -- artplacer%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7269</link>
      <description>The ArtPlacer Widget WordPress plugin before 2.21.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-7269|2024-07-19T06:00:05.343Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7268|2024-07-19T06:00:04.159Z -- unknown -- artplacer%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7268</link>
      <description>The ArtPlacer Widget WordPress plugin before 2.21.2 does not have authorisation check in place when deleting widgets,  allowing ay authenticated users, such as subscriber, to delete arbitrary widgets</description>
      <guid isPermaLink="false">CVE-2023-7268|2024-07-19T06:00:04.159Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5604|2024-07-19T06:00:05.940Z -- unknown -- bug%20library</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5604</link>
      <description>The Bug Library WordPress plugin before 2.1.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5604|2024-07-19T06:00:05.940Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6205|2024-07-19T06:00:06.257Z -- unknown -- payplus%20payment%20gateway</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6205</link>
      <description>The PayPlus Payment Gateway WordPress plugin before 6.6.9 does not properly sanitise and escape a parameter before using it in a SQL statement via a WooCommerce API route available to unauthenticated users, leading to an SQL injection vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-6205|2024-07-19T06:00:06.257Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0779|2024-07-18T15:22:14.879Z -- unknown -- enjoy%20social%20feed%20plugin%20for%20wordpress%20website</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0779</link>
      <description>The Enjoy Social Feed plugin for WordPress website WordPress plugin through 6.2.2 does not have authorisation and CSRF in various function hooked to admin_init, allowing unauthenticated users to call them and unlink arbitrary users Instagram Account for example</description>
      <guid isPermaLink="false">CVE-2024-0779|2024-07-18T15:22:14.879Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5283|2024-07-18T15:18:40.526Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5283</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5283|2024-07-18T15:18:40.526Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6076|2024-07-17T14:11:25.546Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6076</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6076|2024-07-17T14:11:25.546Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3978|2024-07-17T14:29:27.669Z -- unknown -- wordpress%20jitsi%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3978</link>
      <description>The WordPress Jitsi Shortcode WordPress plugin through 0.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3978|2024-07-17T14:29:27.669Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6022|2024-07-16T18:01:53.746Z -- unknown -- contentlock</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6022</link>
      <description>The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6022|2024-07-16T18:01:53.746Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3919|2024-07-16T14:01:03.480Z -- unknown -- openpgp%20form%20encryption%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3919</link>
      <description>The OpenPGP Form Encryption for WordPress plugin before 1.5.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-3919|2024-07-16T14:01:03.480Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6072|2024-07-15T20:34:43.203Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6072</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2024-6072|2024-07-15T20:34:43.203Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5627|2024-07-15T20:25:26.337Z -- unknown -- tournamatch</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5627</link>
      <description>The Tournamatch WordPress plugin before 4.6.1 does not sanitise and escape some parameters, which could allow users with a role as low as subscriber to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-5627|2024-07-15T20:25:26.337Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4269|2024-07-15T20:27:39.826Z -- unknown -- svg%20block</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4269</link>
      <description>The SVG Block WordPress plugin before 1.1.20 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4269|2024-07-15T20:27:39.826Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6334|2024-07-15T20:54:55.939Z -- unknown -- easy%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6334</link>
      <description>The Easy Table of Contents WordPress plugin before 2.0.67.1 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2024-6334|2024-07-15T20:54:55.939Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5167|2024-07-15T20:26:30.529Z -- unknown -- cm%20email%20registration%20blacklist%20and%20whitelist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5167</link>
      <description>The CM Email Registration Blacklist and Whitelist WordPress plugin before 1.4.9 does not have CSRF check when adding or deleting an item from the blacklist or whitelist, which could allow attackers to make a logged in admin add or delete settings from the blacklist or whitelist menu via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5167|2024-07-15T20:26:30.529Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3751|2024-07-15T17:57:46.347Z -- unknown -- seriously%20simple%20podcasting</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3751</link>
      <description>The Seriously Simple Podcasting WordPress plugin before 3.3.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3751|2024-07-15T17:57:46.347Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4602|2024-07-15T17:08:57.586Z -- unknown -- embed%20peertube%20playlist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4602</link>
      <description>The Embed Peertube Playlist WordPress plugin before 1.10 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4602|2024-07-15T17:08:57.586Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3026|2024-07-15T17:11:25.696Z -- unknown -- wordpress%20button%20plugin%20maxbuttons</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3026</link>
      <description>The WordPress Button Plugin MaxButtons WordPress plugin before 9.7.8 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3026|2024-07-15T17:11:25.696Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2870|2024-07-15T15:15:45.498Z -- unknown -- socialdriver-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2870</link>
      <description>The socialdriver-framework WordPress plugin before 2024.04.30 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-2870|2024-07-15T15:15:45.498Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6074|2024-07-15T15:20:02.866Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6074</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6074|2024-07-15T15:20:02.866Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6073|2024-07-15T13:27:34.759Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6073</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6073|2024-07-15T13:27:34.759Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5450|2024-07-15T13:46:48.222Z -- unknown -- bug%20library</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5450</link>
      <description>The Bug Library WordPress plugin before 2.1.1 does not check the file type on user-submitted bug reports, allowing an unauthenticated user to upload PHP files</description>
      <guid isPermaLink="false">CVE-2024-5450|2024-07-15T13:46:48.222Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5575|2024-07-15T13:50:55.441Z -- unknown -- ditty</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5575</link>
      <description>The Ditty  WordPress plugin before 3.1.43 does not sanitise and escape some of its blocks' settings, which could allow high privilege users such as authors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-5575|2024-07-15T13:50:55.441Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5280|2024-07-15T13:57:22.252Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5280</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make non-logged in users execute an XSS payload via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5280|2024-07-15T13:57:22.252Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6072|2024-07-15T06:00:04.074Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6072</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2024-6072|2024-07-15T06:00:04.074Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6076|2024-07-15T06:00:05.868Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6076</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6076|2024-07-15T06:00:05.868Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6075|2024-07-15T06:00:05.607Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6075</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6075|2024-07-15T06:00:05.607Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6073|2024-07-15T06:00:04.974Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6073</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6073|2024-07-15T06:00:04.974Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5630|2024-07-15T06:00:02.225Z -- unknown -- insert%20or%20embed%20articulate%20content%20into%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5630</link>
      <description>The Insert or Embed Articulate Content into WordPress plugin before 4.3000000024 does not prevent authors from uploading arbitrary files to the site, which may allow them to upload PHP shells on affected sites.</description>
      <guid isPermaLink="false">CVE-2024-5630|2024-07-15T06:00:02.225Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6074|2024-07-15T06:00:05.374Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6074</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6074|2024-07-15T06:00:05.374Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6289|2024-07-15T06:00:06.081Z -- unknown -- wps%20hide%20login</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6289</link>
      <description>The WPS Hide Login WordPress plugin before 1.9.16.4 does not prevent redirects to the login page via the auth_redirect WordPress function, allowing an unauthenticated visitor to access the hidden login page.</description>
      <guid isPermaLink="false">CVE-2024-6289|2024-07-15T06:00:06.081Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5151|2024-07-13T12:00:13.958Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5151</link>
      <description>The SULly WordPress plugin before 4.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5151|2024-07-13T12:00:13.958Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5077|2024-07-13T06:00:09.142Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5077</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5077|2024-07-13T06:00:09.142Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5033|2024-07-13T06:00:08.044Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5033</link>
      <description>The SULly WordPress plugin before 4.3.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5033|2024-07-13T06:00:08.044Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5002|2024-07-13T06:00:07.139Z -- unknown -- user%20submitted%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5002</link>
      <description>The User Submitted Posts  WordPress plugin before 20240516 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5002|2024-07-13T06:00:07.139Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5282|2024-07-13T06:00:10.553Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5282</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5282|2024-07-13T06:00:10.553Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5627|2024-07-13T06:00:12.388Z -- unknown -- tournamatch</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5627</link>
      <description>The Tournamatch WordPress plugin before 4.6.1 does not sanitise and escape some parameters, which could allow users with a role as low as subscriber to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-5627|2024-07-13T06:00:12.388Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3751|2024-07-13T06:00:04.549Z -- unknown -- seriously%20simple%20podcasting</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3751</link>
      <description>The Seriously Simple Podcasting WordPress plugin before 3.3.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3751|2024-07-13T06:00:04.549Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4269|2024-07-13T06:00:05.955Z -- unknown -- svg%20block</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4269</link>
      <description>The SVG Block WordPress plugin before 1.1.20 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4269|2024-07-13T06:00:05.955Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5472|2024-07-13T06:00:11.980Z -- unknown -- wp%20quicklatex</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5472</link>
      <description>The WP QuickLaTeX WordPress plugin before 3.8.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5472|2024-07-13T06:00:11.980Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5450|2024-07-13T06:00:11.772Z -- unknown -- bug%20library</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5450</link>
      <description>The Bug Library WordPress plugin before 2.1.1 does not check the file type on user-submitted bug reports, allowing an unauthenticated user to upload PHP files</description>
      <guid isPermaLink="false">CVE-2024-5450|2024-07-13T06:00:11.772Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5076|2024-07-13T06:00:08.934Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5076</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5076|2024-07-13T06:00:08.934Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4602|2024-07-13T06:00:06.435Z -- unknown -- embed%20peertube%20playlist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4602</link>
      <description>The Embed Peertube Playlist WordPress plugin before 1.10 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4602|2024-07-13T06:00:06.435Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6070|2024-07-13T06:00:13.366Z -- unknown -- if-so%20dynamic%20content%20personalization</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6070</link>
      <description>The If-So Dynamic Content Personalization WordPress plugin before 1.8.0.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6070|2024-07-13T06:00:13.366Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3919|2024-07-13T06:00:05.011Z -- unknown -- openpgp%20form%20encryption%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3919</link>
      <description>The OpenPGP Form Encryption for WordPress plugin before 1.5.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-3919|2024-07-13T06:00:05.011Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2870|2024-07-13T06:00:02.984Z -- unknown -- socialdriver-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2870</link>
      <description>The socialdriver-framework WordPress plugin before 2024.04.30 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-2870|2024-07-13T06:00:02.984Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5284|2024-07-13T06:00:10.957Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5284</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5284|2024-07-13T06:00:10.957Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5575|2024-07-13T06:00:12.200Z -- unknown -- ditty</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5575</link>
      <description>The Ditty  WordPress plugin before 3.1.43 does not sanitise and escape some of its blocks' settings, which could allow high privilege users such as authors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-5575|2024-07-13T06:00:12.200Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5442|2024-07-13T06:00:11.530Z -- unknown -- photo%20gallery%2C%20sliders%2C%20proofing%20and%20themes</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5442</link>
      <description>The Photo Gallery, Sliders, Proofing and   WordPress plugin before 3.59.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5442|2024-07-13T06:00:11.530Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5280|2024-07-13T06:00:10.160Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5280</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make non-logged in users execute an XSS payload via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5280|2024-07-13T06:00:10.160Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5715|2024-07-13T06:00:12.983Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5715</link>
      <description>The wp-eMember WordPress plugin before 10.6.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5715|2024-07-13T06:00:12.983Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5644|2024-07-13T06:00:12.584Z -- unknown -- tournamatch</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5644</link>
      <description>The Tournamatch WordPress plugin before 4.6.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5644|2024-07-13T06:00:12.584Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5028|2024-07-13T06:00:07.447Z -- unknown -- cm%20wordpress%20search%20and%20replace%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5028</link>
      <description>The CM WordPress Search And Replace Plugin WordPress plugin before 1.3.9 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5028|2024-07-13T06:00:07.447Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4977|2024-07-13T06:00:06.897Z -- unknown -- index%20wp%20mysql%20for%20speed</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4977</link>
      <description>The Index WP MySQL For Speed WordPress plugin before 1.4.18 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-4977|2024-07-13T06:00:06.897Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5283|2024-07-13T06:00:10.758Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5283</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5283|2024-07-13T06:00:10.758Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5080|2024-07-13T06:00:09.543Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5080</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not validate files to be uploaded, which could allow admins to upload arbitrary files such as PHP on the server</description>
      <guid isPermaLink="false">CVE-2024-5080|2024-07-13T06:00:09.543Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5151|2024-07-13T06:00:09.746Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5151</link>
      <description>The SULly WordPress plugin before 4.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5151|2024-07-13T06:00:09.746Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5079|2024-07-13T06:00:09.333Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5079</link>
      <description>The wp-eMember WordPress plugin before 10.6.7 does not sanitise and escape some of the fields when members register, which allows unauthenticated users to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5079|2024-07-13T06:00:09.333Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3026|2024-07-13T06:00:03.859Z -- unknown -- wordpress%20button%20plugin%20maxbuttons</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3026</link>
      <description>The WordPress Button Plugin MaxButtons WordPress plugin before 9.7.8 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3026|2024-07-13T06:00:03.859Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3963|2024-07-13T06:00:05.270Z -- unknown -- giveaways%20and%20contests%20by%20rafflepress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3963</link>
      <description>The Giveaways and Contests by RafflePress  WordPress plugin before 1.12.14 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3963|2024-07-13T06:00:05.270Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5074|2024-07-13T06:00:08.534Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5074</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5074|2024-07-13T06:00:08.534Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5713|2024-07-13T06:00:12.794Z -- unknown -- if-so%20dynamic%20content%20personalization</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5713</link>
      <description>The If-So Dynamic Content Personalization WordPress plugin before 1.8.0.4 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2024-5713|2024-07-13T06:00:12.794Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5034|2024-07-13T06:00:08.319Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5034</link>
      <description>The SULly WordPress plugin before 4.3.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5034|2024-07-13T06:00:08.319Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4272|2024-07-13T06:00:06.185Z -- unknown -- support%20svg</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4272</link>
      <description>The Support SVG  WordPress plugin before 1.1.0 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4272|2024-07-13T06:00:06.185Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4752|2024-07-13T06:00:06.657Z -- unknown -- eventon</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4752</link>
      <description>The EventON WordPress plugin before 2.2.15 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4752|2024-07-13T06:00:06.657Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3753|2024-07-13T06:00:04.802Z -- unknown -- hostel</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3753</link>
      <description>The Hostel WordPress plugin before 1.1.5.3 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3753|2024-07-13T06:00:04.802Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4217|2024-07-13T06:00:05.734Z -- unknown -- shortcodes-ultimate-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4217</link>
      <description>The shortcodes-ultimate-pro WordPress plugin before 7.1.5 does not properly escape some of its shortcodes' settings, making it possible for attackers with a Contributor account to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4217|2024-07-13T06:00:05.734Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3964|2024-07-13T06:00:05.478Z -- unknown -- product%20enquiry%20for%20woocommerce</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3964</link>
      <description>The Product Enquiry for WooCommerce WordPress plugin before 3.1.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3964|2024-07-13T06:00:05.478Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3710|2024-07-13T06:00:04.350Z -- unknown -- image%20photo%20gallery%20final%20tiles%20grid</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3710</link>
      <description>The Image Photo Gallery Final Tiles Grid WordPress plugin before 3.6.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3710|2024-07-13T06:00:04.350Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5287|2024-07-13T06:00:11.336Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5287</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in user change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5287|2024-07-13T06:00:11.336Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5281|2024-07-13T06:00:10.359Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5281</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5281|2024-07-13T06:00:10.359Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5167|2024-07-13T06:00:09.955Z -- unknown -- cm%20email%20registration%20blacklist%20and%20whitelist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5167</link>
      <description>The CM Email Registration Blacklist and Whitelist WordPress plugin before 1.4.9 does not have CSRF check when adding or deleting an item from the blacklist or whitelist, which could allow attackers to make a logged in admin add or delete settings from the blacklist or whitelist menu via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5167|2024-07-13T06:00:09.955Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3632|2024-07-13T06:00:04.124Z -- unknown -- smart%20image%20gallery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3632</link>
      <description>The Smart Image Gallery WordPress plugin before 1.0.19 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3632|2024-07-13T06:00:04.124Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5032|2024-07-13T06:00:07.731Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5032</link>
      <description>The SULly WordPress plugin before 4.3.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5032|2024-07-13T06:00:07.731Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5075|2024-07-13T06:00:08.729Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5075</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5075|2024-07-13T06:00:08.729Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5286|2024-07-13T06:00:11.139Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5286</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5286|2024-07-13T06:00:11.139Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5744|2024-07-13T06:00:13.171Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5744</link>
      <description>The wp-eMember WordPress plugin before 10.6.7 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2024-5744|2024-07-13T06:00:13.171Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4753|2024-07-12T17:25:44.649Z -- unknown -- wp%20secure%20maintenance</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4753</link>
      <description>The WP Secure Maintenance WordPress plugin before 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4753|2024-07-12T17:25:44.649Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3112|2024-07-12T15:19:04.910Z -- unknown -- quotes%20and%20tips%20by%20bestwebsoft</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3112</link>
      <description>The Quotes and Tips by BestWebSoft WordPress plugin before 1.45 does not properly validate image files uploaded, allowing high privilege users such as admin to upload arbitrary files on the server even when they should not be allowed to (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3112|2024-07-12T15:19:04.910Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6023|2024-07-12T15:25:26.310Z -- unknown -- contentlock</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6023</link>
      <description>The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when adding emails, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6023|2024-07-12T15:25:26.310Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5626|2024-07-12T06:00:06.094Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5626</link>
      <description>The Inline Related Posts WordPress plugin before 3.7.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5626|2024-07-12T06:00:06.094Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2430|2024-07-12T06:00:04.866Z -- unknown -- website%20content%20in%20page%20or%20post</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2430</link>
      <description>The Website Content in Page or Post WordPress plugin before 2024.04.09 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2430|2024-07-12T06:00:04.866Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0974|2024-07-12T06:00:04.368Z -- unknown -- social%20media%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0974</link>
      <description>The Social Media Widget WordPress plugin before 4.0.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0974|2024-07-12T06:00:04.368Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6024|2024-07-12T06:00:07.258Z -- unknown -- contentlock</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6024</link>
      <description>The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when deleting groups or emails, which could allow attackers to make a logged in admin remove them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6024|2024-07-12T06:00:07.258Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5811|2024-07-12T06:00:06.332Z -- unknown -- simple%20video%20directory</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5811</link>
      <description>The Simple Video Directory WordPress plugin before 1.4.4 does not sanitise and escape some of its settings, which could allow contributors and higher to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5811|2024-07-12T06:00:06.332Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2640|2024-07-12T06:00:05.185Z -- unknown -- watu%20quiz</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2640</link>
      <description>The Watu Quiz WordPress plugin before 3.4.1.2 does not sanitise and escape some of its settings, which could allow users such as authors (if they've been authorized by admins) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2024-2640|2024-07-12T06:00:05.185Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2696|2024-07-12T06:00:05.434Z -- unknown -- socialdriver-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2696</link>
      <description>The socialdriver-framework WordPress plugin before 2024.04.30 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2696|2024-07-12T06:00:05.434Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6022|2024-07-12T06:00:06.639Z -- unknown -- contentlock</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6022</link>
      <description>The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6022|2024-07-12T06:00:06.639Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4753|2024-07-12T06:00:05.863Z -- unknown -- wp%20secure%20maintenance</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4753</link>
      <description>The WP Secure Maintenance WordPress plugin before 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4753|2024-07-12T06:00:05.863Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3112|2024-07-12T06:00:05.645Z -- unknown -- quotes%20and%20tips%20by%20bestwebsoft</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3112</link>
      <description>The Quotes and Tips by BestWebSoft WordPress plugin before 1.45 does not properly validate image files uploaded, allowing high privilege users such as admin to upload arbitrary files on the server even when they should not be allowed to (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3112|2024-07-12T06:00:05.645Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6023|2024-07-12T06:00:06.958Z -- unknown -- contentlock</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6023</link>
      <description>The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when adding emails, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6023|2024-07-12T06:00:06.958Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5444|2024-07-11T15:07:11.055Z -- unknown -- bible%20text</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5444</link>
      <description>The Bible Text WordPress plugin through 0.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5444|2024-07-11T15:07:11.055Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6026|2024-07-11T06:00:04.304Z -- unknown -- slider%20by%2010web</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6026</link>
      <description>The Slider by 10Web  WordPress plugin before 1.2.56 does not sanitise and escape some of its Slide options, which could allow authenticated users with access to the Sliders (by default Administrator, however this can be changed via the Slider by 10Web  WordPress plugin before 1.2.56's options) and the ability to add images (Editor+) to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6026|2024-07-11T06:00:04.304Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6138|2024-07-11T06:00:04.534Z -- unknown -- secure%20copy%20content%20protection%20and%20content%20locking</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6138</link>
      <description>The Secure Copy Content Protection and Content Locking WordPress plugin before 4.0.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-6138|2024-07-11T06:00:04.534Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1845|2024-07-11T06:00:02.403Z -- unknown -- vikrentcar%20car%20rental%20management%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1845</link>
      <description>The VikRentCar Car Rental Management System WordPress plugin before 1.3.2 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-1845|2024-07-11T06:00:02.403Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5444|2024-07-11T06:00:03.516Z -- unknown -- bible%20text</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5444</link>
      <description>The Bible Text WordPress plugin through 0.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5444|2024-07-11T06:00:03.516Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6025|2024-07-11T06:00:04.031Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6025</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.0.5 does not sanitise and escape some of its Quiz settings, which could allow contributors and higher to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6025|2024-07-11T06:00:04.031Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4655|2024-07-11T06:00:02.913Z -- unknown -- ultimate%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4655</link>
      <description>The Ultimate Blocks  WordPress plugin before 3.1.9 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4655|2024-07-11T06:00:02.913Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1310|2024-07-09T16:26:32.494Z -- unknown -- woocommerce</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1310</link>
      <description>The WooCommerce WordPress plugin before 8.6 does not prevent users with at least the contributor role from leaking products they shouldn't have access to. (e.g. private, draft and trashed products)</description>
      <guid isPermaLink="false">CVE-2024-1310|2024-07-09T16:26:32.494Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3410|2024-07-09T16:25:34.270Z -- unknown -- dn%20footer%20contacts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3410</link>
      <description>The DN Footer Contacts WordPress plugin before 1.6.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3410|2024-07-09T16:25:34.270Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3410|2024-07-09T06:00:03.519Z -- unknown -- dn%20footer%20contacts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3410</link>
      <description>The DN Footer Contacts WordPress plugin before 1.6.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3410|2024-07-09T06:00:03.519Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5488|2024-07-09T06:00:04.275Z -- unknown -- seopress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5488</link>
      <description>The SEOPress  WordPress plugin before 7.9 does not properly protect some of its REST API routes, which combined with another Object Injection vulnerability can allow unauthenticated attackers to unserialize malicious gadget chains, compromising the site if a suitable chain is present.</description>
      <guid isPermaLink="false">CVE-2024-5488|2024-07-09T06:00:04.275Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5802|2024-07-09T06:00:04.751Z -- unknown -- url%20shortener%20by%20mythemeshop</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5802</link>
      <description>The URL Shortener by Myhop WordPress plugin through 1.0.17 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-5802|2024-07-09T06:00:04.751Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6334|2024-07-09T06:00:05.147Z -- unknown -- easy%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6334</link>
      <description>The Easy Table of Contents WordPress plugin before 2.0.67.1 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2024-6334|2024-07-09T06:00:05.147Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5767|2024-07-08T17:15:01.976Z -- unknown -- sitetweet</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5767</link>
      <description>The sitetweet WordPress plugin through 0.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5767|2024-07-08T17:15:01.976Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2233|2024-07-05T20:06:57.435Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2233</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks. These include declining and accepting group invitations or leaving a group</description>
      <guid isPermaLink="false">CVE-2024-2233|2024-07-05T20:06:57.435Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2040|2024-07-05T20:07:13.216Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2040</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make users join private groups via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2040|2024-07-05T20:07:13.216Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2234|2024-07-05T20:03:58.807Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2234</link>
      <description>The Himer WordPress theme before 2.1.1 does not sanitise and escape some of its Post settings, which could allow high privilege users such as Contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2234|2024-07-05T20:03:58.807Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2235|2024-07-05T20:07:29.077Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2235</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make users vote on any polls, including those they don't have access to via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2235|2024-07-05T20:07:29.077Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1755|2024-07-05T15:24:06.344Z -- unknown -- nps%20computy</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1755</link>
      <description>The NPS computy WordPress plugin through 2.7.5 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-1755|2024-07-05T15:24:06.344Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3276|2024-07-03T20:57:54.520Z -- unknown -- lightbox%20%26%20modal%20popup%20wordpress%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3276</link>
      <description>The Lightbox &amp; Modal Popup WordPress Plugin  WordPress plugin before 2.7.28, foobox-image-lightbox-premium WordPress plugin before 2.7.28 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-3276|2024-07-03T20:57:54.520Z</guid>
      <pubDate>Tue, 18 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2233|2024-07-03T18:43:33.707Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2233</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks. These include declining and accepting group invitations or leaving a group</description>
      <guid isPermaLink="false">CVE-2024-2233|2024-07-03T18:43:33.707Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2376|2024-07-03T06:00:04.339Z -- unknown -- wpqa%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2376</link>
      <description>The WPQA Builder WordPress plugin before 6.1.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2376|2024-07-03T06:00:04.339Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2375|2024-07-03T06:00:04.122Z -- unknown -- wpqa%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2375</link>
      <description>The WPQA Builder WordPress plugin before 6.1.1 does not sanitise and escape some of its Slider settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2375|2024-07-03T06:00:04.122Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2233|2024-07-03T06:00:03.458Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2233</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks. These include declining and accepting group invitations or leaving a group</description>
      <guid isPermaLink="false">CVE-2024-2233|2024-07-03T06:00:03.458Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2231|2024-07-03T06:00:03.187Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2231</link>
      <description>The  allows any authenticated user to join a private group due to a missing authorization check on a function</description>
      <guid isPermaLink="false">CVE-2024-2231|2024-07-03T06:00:03.187Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2040|2024-07-03T06:00:02.427Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2040</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make users join private groups via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2040|2024-07-03T06:00:02.427Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2234|2024-07-03T06:00:03.688Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2234</link>
      <description>The Himer WordPress theme before 2.1.1 does not sanitise and escape some of its Post settings, which could allow high privilege users such as Contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2234|2024-07-03T06:00:03.688Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2235|2024-07-03T06:00:03.922Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2235</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make users vote on any polls, including those they don't have access to via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2235|2024-07-03T06:00:03.922Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6130|2024-07-02T18:58:45.523Z -- unknown -- form%20maker%20by%2010web</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6130</link>
      <description>The Form Maker by 10Web  WordPress plugin before 1.15.26 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6130|2024-07-02T18:58:45.523Z</guid>
      <pubDate>Mon, 01 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4627|2024-07-02T19:57:46.852Z -- unknown -- rank%20math%20seo</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4627</link>
      <description>The Rank Math SEO  WordPress plugin before 1.0.219 does not sanitise and escape some of its settings, which could allow users with access to the General Settings (by default admin, however such access can be given to lower roles via the Role Manager feature of the Rank Math SEO  WordPress plugin before 1.0.219) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-4627|2024-07-02T19:57:46.852Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4627|2024-07-02T06:00:02.905Z -- unknown -- rank%20math%20seo</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4627</link>
      <description>The Rank Math SEO  WordPress plugin before 1.0.219 does not sanitise and escape some of its settings, which could allow users with access to the General Settings (by default admin, however such access can be given to lower roles via the Role Manager feature of the Rank Math SEO  WordPress plugin before 1.0.219) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-4627|2024-07-02T06:00:02.905Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5606|2024-07-02T06:00:03.377Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5606</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.0.2 is vulnerable does not validate and escape the question_id parameter in the qsm_bulk_delete_question_from_database AJAX action, leading to a SQL injection exploitable by Contributors and above role</description>
      <guid isPermaLink="false">CVE-2024-5606|2024-07-02T06:00:03.377Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5767|2024-07-02T06:00:03.708Z -- unknown -- sitetweet</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5767</link>
      <description>The sitetweet WordPress plugin through 0.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5767|2024-07-02T06:00:03.708Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3999|2024-07-02T06:00:02.531Z -- unknown -- eazydocs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3999</link>
      <description>The EazyDocs  WordPress plugin before 2.5.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3999|2024-07-02T06:00:02.531Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2405|2024-07-01T14:31:29.112Z -- unknown -- float%20menu</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2405</link>
      <description>The Float menu  WordPress plugin before 6.0.1 does not have CSRF check in its bulk actions, which could allow attackers to make logged in admin delete arbitrary menu via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2024-2405|2024-07-01T14:31:29.112Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7253|2024-07-01T14:31:07.519Z -- unknown -- import%20wp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7253</link>
      <description>The Import WP  WordPress plugin before 2.13.1 does not prevent users with the administrator role from pinging conducting SSRF attacks, which may be a problem in multisite configurations.</description>
      <guid isPermaLink="false">CVE-2023-7253|2024-07-01T14:31:07.519Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1204|2024-07-01T14:40:20.581Z -- unknown -- meta%20box</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1204</link>
      <description>The Meta Box  WordPress plugin before 5.9.4 does not prevent users with at least the contributor role from access arbitrary custom fields assigned to other user's posts.</description>
      <guid isPermaLink="false">CVE-2024-1204|2024-07-01T14:40:20.581Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6082|2024-06-28T16:00:37.483Z -- unknown -- chartjs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6082</link>
      <description>The chartjs WordPress plugin through 2023.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-6082|2024-06-28T16:00:37.483Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:06:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5727|2024-06-28T15:06:25.428Z -- unknown -- widget4call</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5727</link>
      <description>The Widget4Call WordPress plugin through 1.0.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5727|2024-06-28T15:06:25.428Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5730|2024-06-28T06:00:05.085Z -- unknown -- pagerank%20tools</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5730</link>
      <description>The Pagerank tools WordPress plugin through 1.1.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5730|2024-06-28T06:00:05.085Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5729|2024-06-28T06:00:04.527Z -- unknown -- simple%20al%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5729</link>
      <description>The Simple AL Slider WordPress plugin through 1.2.10 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5729|2024-06-28T06:00:04.527Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5728|2024-06-28T06:00:04.165Z -- unknown -- animated%20al%20list</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5728</link>
      <description>The Animated AL List WordPress plugin through 1.0.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5728|2024-06-28T06:00:04.165Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5727|2024-06-28T06:00:03.875Z -- unknown -- widget4call</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5727</link>
      <description>The Widget4Call WordPress plugin through 1.0.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5727|2024-06-28T06:00:03.875Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5570|2024-06-28T06:00:03.518Z -- unknown -- simple%20photoswipe</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5570</link>
      <description>The Simple Photoswipe WordPress plugin through 0.1 does not have authorisation check when updating its settings, which could allow any authenticated users, such as subscriber to update them</description>
      <guid isPermaLink="false">CVE-2024-5570|2024-06-28T06:00:03.518Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4704|2024-06-27T13:49:26.112Z -- unknown -- contact%20form%207</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4704</link>
      <description>The Contact Form 7 WordPress plugin before 5.9.5 has an open redirect that allows an attacker to utilize a false URL and redirect to the URL of their choosing.</description>
      <guid isPermaLink="false">CVE-2024-4704|2024-06-27T13:49:26.112Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4957|2024-06-26T19:03:51.593Z -- unknown -- frontend%20checklist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4957</link>
      <description>The Frontend Checklist WordPress plugin through 2.3.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4957|2024-06-26T19:03:51.593Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4758|2024-06-26T17:17:49.742Z -- unknown -- muslim%20prayer%20time%20bd</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4758</link>
      <description>The Muslim Prayer Time BD WordPress plugin through 2.4 does not have CSRF check in place when reseting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4758|2024-06-26T17:17:49.742Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4959|2024-06-26T13:31:22.094Z -- unknown -- frontend%20checklist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4959</link>
      <description>The Frontend Checklist WordPress plugin through 2.3.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4959|2024-06-26T13:31:22.094Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4477|2024-06-25T18:56:08.116Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4477</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not sanitise and escape some of its log data before outputting them back in an admin dashboard, leading to an Unauthenticated Stored Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-4477|2024-06-25T18:56:08.116Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4755|2024-06-25T18:43:17.872Z -- unknown -- google%20cse</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4755</link>
      <description>The Google CSE WordPress plugin through 1.0.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4755|2024-06-25T18:43:17.872Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4759|2024-06-25T06:00:03.188Z -- unknown -- mime%20types%20extended</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4759</link>
      <description>The Mime Types Extended WordPress plugin through 0.11 does not sanitise uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2024-4759|2024-06-25T06:00:03.188Z</guid>
      <pubDate>Tue, 25 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4757|2024-06-25T06:00:02.291Z -- unknown -- logo%20manager%20for%20enamad</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4757</link>
      <description>The Logo Manager For Enamad WordPress plugin through 0.7.0 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4757|2024-06-25T06:00:02.291Z</guid>
      <pubDate>Tue, 25 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4377|2024-06-24T14:21:23.231Z -- unknown -- dop%20shortcodes</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4377</link>
      <description>The DOP Shortcodes WordPress plugin through 1.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4377|2024-06-24T14:21:23.231Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1290|2024-06-24T14:58:54.267Z -- unknown -- user%20registration</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1290</link>
      <description>The User Registration WordPress plugin before 2.12 does not prevent users with at least the contributor role from rendering sensitive shortcodes, allowing them to generate, and leak, valid password reset URLs, which they can use to take over any accounts.</description>
      <guid isPermaLink="false">CVE-2024-1290|2024-06-24T14:58:54.267Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1752|2024-06-24T14:36:52.323Z -- unknown -- font%20farsi</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1752</link>
      <description>The Font Farsi WordPress plugin through 1.6.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1752|2024-06-24T14:36:52.323Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5455|2024-06-22T17:09:44.225Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5455</link>
      <description>The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 5.5.4 via the 'magazine_style' parameter within the Dynamic Smart Showcase widget. This makes it possible for authenticated attackers, with Contributor-level access and above, to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other “safe” file types can be uploaded and included.</description>
      <guid isPermaLink="false">CVE-2024-5455|2024-06-22T17:09:44.225Z</guid>
      <pubDate>Fri, 21 Jun 2024 03:24:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5448|2024-06-22T17:05:02.208Z -- unknown -- paypal%20pay%20now%2C%20buy%20now%2C%20donation%20and%20cart%20buttons%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5448</link>
      <description>The PayPal Pay Now, Buy Now, Donation and Cart Buttons Shortcode WordPress plugin through 1.7 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5448|2024-06-22T17:05:02.208Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4381|2024-06-21T14:19:45.773Z -- unknown -- cb%20%28legacy%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4381</link>
      <description>The CB (legacy) WordPress plugin through 0.9.4.18 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4381|2024-06-21T14:19:45.773Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4377|2024-06-21T06:00:03.210Z -- unknown -- dop%20shortcodes</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4377</link>
      <description>The DOP Shortcodes WordPress plugin through 1.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4377|2024-06-21T06:00:03.210Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4475|2024-06-21T06:00:04.785Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4475</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not have CSRF check when clearing logs, which could allow attackers to make a logged in admin clear the logs them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4475|2024-06-21T06:00:04.785Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4381|2024-06-21T06:00:03.795Z -- unknown -- cb%20%28legacy%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4381</link>
      <description>The CB (legacy) WordPress plugin through 0.9.4.18 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4381|2024-06-21T06:00:03.795Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4616|2024-06-21T06:00:05.195Z -- unknown -- widget%20bundle</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4616</link>
      <description>The Widget Bundle WordPress plugin through 2.0.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against only unauthenticated users</description>
      <guid isPermaLink="false">CVE-2024-4616|2024-06-21T06:00:05.195Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4969|2024-06-21T06:00:05.590Z -- unknown -- widget%20bundle</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4969</link>
      <description>The Widget Bundle WordPress plugin through 2.0.0 does not have CSRF checks when logging Widgets, which could allow attackers to make logged in admin enable/disable widgets via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4969|2024-06-21T06:00:05.590Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4477|2024-06-21T06:00:04.995Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4477</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not sanitise and escape some of its log data before outputting them back in an admin dashboard, leading to an Unauthenticated Stored Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-4477|2024-06-21T06:00:04.995Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4382|2024-06-21T06:00:04.138Z -- unknown -- cb%20%28legacy%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4382</link>
      <description>The CB (legacy) WordPress plugin through 0.9.4.18 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting codes, timeframes, and bookings via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4382|2024-06-21T06:00:04.138Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5448|2024-06-21T06:00:06.690Z -- unknown -- paypal%20pay%20now%2C%20buy%20now%2C%20donation%20and%20cart%20buttons%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5448</link>
      <description>The PayPal Pay Now, Buy Now, Donation and Cart Buttons Shortcode WordPress plugin through 1.7 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5448|2024-06-21T06:00:06.690Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4970|2024-06-21T06:00:05.870Z -- unknown -- widget%20bundle</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4970</link>
      <description>The Widget Bundle WordPress plugin through 2.0.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4970|2024-06-21T06:00:05.870Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4384|2024-06-21T06:00:04.371Z -- unknown -- cssable%20countdown</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4384</link>
      <description>The CSSable Countdown WordPress plugin through 1.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4384|2024-06-21T06:00:04.371Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5447|2024-06-21T06:00:06.279Z -- unknown -- paypal%20pay%20now%2C%20buy%20now%2C%20donation%20and%20cart%20buttons%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5447</link>
      <description>The PayPal Pay Now, Buy Now, Donation and Cart Buttons Shortcode WordPress plugin through 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5447|2024-06-21T06:00:06.279Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4755|2024-06-21T06:00:05.395Z -- unknown -- google%20cse</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4755</link>
      <description>The Google CSE WordPress plugin through 1.0.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4755|2024-06-21T06:00:05.395Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4474|2024-06-21T06:00:04.573Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4474</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4474|2024-06-21T06:00:04.573Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5344|2024-06-21T02:05:40.850Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5344</link>
      <description>The The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the ‘forgoturl’ attribute within the plugin's WP Login &amp; Register widget in all versions up to, and including, 5.5.6 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description>
      <guid isPermaLink="false">CVE-2024-5344|2024-06-21T02:05:40.850Z</guid>
      <pubDate>Fri, 21 Jun 2024 02:05:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5522|2024-06-20T16:09:19.209Z -- unknown -- html5%20video%20player</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5522</link>
      <description>The HTML5 Video Player  WordPress plugin before 2.5.27 does not sanitize and escape a parameter from a REST route before using it in a SQL statement, allowing unauthenticated users to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2024-5522|2024-06-20T16:09:19.209Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4565|2024-06-20T13:42:56.802Z -- unknown -- advanced%20custom%20fields%20%28acf%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4565</link>
      <description>The Advanced Custom Fields (ACF) WordPress plugin before 6.3, Advanced Custom Fields Pro WordPress plugin before 6.3 allows you to display custom field values for any post via shortcode without checking for the correct access</description>
      <guid isPermaLink="false">CVE-2024-4565|2024-06-20T13:42:56.802Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1849|2024-06-18T15:54:31.402Z -- unknown -- wp%20customer%20reviews</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1849</link>
      <description>The WP Customer Reviews WordPress plugin before 3.7.1 does not validate a parameter allowing contributor and above users to redirect a page to a malicious URL</description>
      <guid isPermaLink="false">CVE-2024-1849|2024-06-18T15:54:31.402Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2836|2024-06-18T15:28:31.078Z -- unknown -- social%20share%2C%20social%20login%20and%20social%20comments%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2836</link>
      <description>The Social Share, Social Login and Social Comments Plugin  WordPress plugin before 7.13.64 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2836|2024-06-18T15:28:31.078Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4094|2024-06-18T06:00:02.301Z -- unknown -- simple%20share%20buttons%20adder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4094</link>
      <description>The Simple Share Buttons Adder WordPress plugin before 8.5.1 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-4094|2024-06-18T06:00:02.301Z</guid>
      <pubDate>Tue, 18 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5172|2024-06-18T06:00:02.523Z -- unknown -- expert%20invoice</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5172</link>
      <description>The Expert Invoice WordPress plugin through 1.0.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5172|2024-06-18T06:00:02.523Z</guid>
      <pubDate>Tue, 18 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3276|2024-06-18T06:00:02.054Z -- unknown -- lightbox%20%26%20modal%20popup%20wordpress%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3276</link>
      <description>The Lightbox &amp; Modal Popup WordPress Plugin  WordPress plugin before 2.7.28, foobox-image-lightbox-premium WordPress plugin before 2.7.28 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-3276|2024-06-18T06:00:02.054Z</guid>
      <pubDate>Tue, 18 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4305|2024-06-17T06:00:01.480Z -- unknown -- post%20grid%20gutenberg%20blocks%20and%20wordpress%20blog%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4305</link>
      <description>The Post Grid Gutenberg Blocks and WordPress Blog Plugin  WordPress plugin before 4.1.0 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4305|2024-06-17T06:00:01.480Z</guid>
      <pubDate>Mon, 17 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3236|2024-06-17T06:00:01.133Z -- unknown -- popup%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3236</link>
      <description>The Popup Builder WordPress plugin before 1.1.33 does not sanitise and escape some of its Notification fields, which could allow users such as contributor and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-3236|2024-06-17T06:00:01.133Z</guid>
      <pubDate>Mon, 17 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4005|2024-06-14T18:07:23.149Z -- unknown -- social%20pixel</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4005</link>
      <description>The Social Pixel WordPress plugin through 2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4005|2024-06-14T18:07:23.149Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3966|2024-06-14T18:12:57.896Z -- unknown -- pray%20for%20me</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3966</link>
      <description>The Pray For Me WordPress plugin through 1.0.4 does not sanitise and escape some parameters, which could unauthenticated visitors to perform Cross-Site Scripting attacks that trigger when an admin visits the Prayer Requests in the WP Admin</description>
      <guid isPermaLink="false">CVE-2024-3966|2024-06-14T18:12:57.896Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3971|2024-06-14T18:07:42.385Z -- unknown -- similarity</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3971</link>
      <description>The Similarity WordPress plugin through 3.0 does not have CSRF check in place when resetting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3971|2024-06-14T18:07:42.385Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4480|2024-06-14T15:33:50.709Z -- unknown -- wp%20prayer%20ii</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4480</link>
      <description>The WP Prayer II WordPress plugin through 2.4.7 does not have CSRF check in place when updating its email settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4480|2024-06-14T15:33:50.709Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5155|2024-06-14T15:42:30.747Z -- unknown -- inquiry%20cart</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5155</link>
      <description>The Inquiry cart WordPress plugin through 3.4.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5155|2024-06-14T15:42:30.747Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3992|2024-06-14T15:35:01.609Z -- unknown -- amen</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3992</link>
      <description>The Amen WordPress plugin through 3.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3992|2024-06-14T15:35:01.609Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3965|2024-06-14T13:45:36.787Z -- unknown -- pray%20for%20me</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3965</link>
      <description>The Pray For Me WordPress plugin through 1.0.4 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3965|2024-06-14T13:45:36.787Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3032|2024-06-13T19:57:19.842Z -- unknown -- themify%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3032</link>
      <description>Themify Builder WordPress plugin before 7.5.8 does not validate a parameter before redirecting the user to its value, leading to an Open Redirect issue</description>
      <guid isPermaLink="false">CVE-2024-3032|2024-06-13T19:57:19.842Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4532|2024-06-13T20:40:22.431Z -- unknown -- business%20card</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4532</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as deleting cards via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4532|2024-06-13T20:40:22.431Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3552|2024-06-13T18:06:32.704Z -- unknown -- web%20directory%20free</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3552</link>
      <description>The Web Directory Free WordPress plugin before 1.7.0 does not sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection with different techniques like UNION, Time-Based and Error-Based.</description>
      <guid isPermaLink="false">CVE-2024-3552|2024-06-13T18:06:32.704Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4145|2024-06-13T18:47:49.612Z -- unknown -- search%20%26%20replace</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4145</link>
      <description>The Search &amp; Replace WordPress plugin before 3.2.2 does not sanitize and escape a parameter before using it in a SQL statement, allowing admins to perform SQL injection attacks (such as within a multi-site network).</description>
      <guid isPermaLink="false">CVE-2024-4145|2024-06-13T18:47:49.612Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2309|2024-06-12T20:03:00.752Z -- unknown -- wp%20staging%20wordpress%20backup%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2309</link>
      <description>The WP STAGING WordPress Backup Plugin  WordPress plugin before 3.4.0, wp-staging-pro WordPress plugin before 5.4.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2309|2024-06-12T20:03:00.752Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3756|2024-06-12T14:38:30.616Z -- unknown -- mf%20gig%20calendar</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3756</link>
      <description>The MF Gig Calendar WordPress plugin through 1.2.1 does not have CSRF checks in some places, which could allow attackers to make logged in Contributors and above delete arbitrary events via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3756|2024-06-12T14:38:30.616Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4924|2024-06-12T06:00:02.287Z -- unknown -- social%20sharing%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4924</link>
      <description>The Social Sharing Plugin  WordPress plugin before 3.3.63 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4924|2024-06-12T06:00:02.287Z</guid>
      <pubDate>Wed, 12 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0427|2024-06-12T06:00:02.026Z -- unknown -- arforms%20-%20premium%20wordpress%20form%20builder%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0427</link>
      <description>The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.4.1 does not properly escape user-controlled input when it is reflected in some of its AJAX actions.</description>
      <guid isPermaLink="false">CVE-2024-0427|2024-06-12T06:00:02.026Z</guid>
      <pubDate>Wed, 12 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2441|2024-06-04T17:29:00.183Z -- unknown -- vikbooking%20hotel%20booking%20engine%20%26%20pms</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2441</link>
      <description>The VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8 allows direct access to menus, allowing an authenticated user with subscriber privileges or above, to bypass authorization and access settings of the VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8's they shouldn't be allowed to.</description>
      <guid isPermaLink="false">CVE-2024-2441|2024-06-04T17:29:00.183Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2857|2024-04-15T05:00:05.871Z -- unknown -- simple%20buttons%20creator</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2857</link>
      <description>The Simple Buttons Creator WordPress plugin through 1.04 does not have any authorisation as well as CSRF in its add button function, allowing unauthenticated users to call them either directly or via CSRF attacks. Furthermore, due to the lack of sanitisation and escaping, it could also allow them to perform Stored Cross-Site Scripting attacks against logged in admins.</description>
      <guid isPermaLink="false">CVE-2024-2857|2024-04-15T05:00:05.871Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2729|2024-06-04T17:29:03.422Z -- unknown -- otter%20blocks</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2729</link>
      <description>The Otter Blocks  WordPress plugin before 2.6.6 does not properly escape its mainHeadings blocks' attribute before appending it to the final rendered block, allowing contributors to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-2729|2024-06-04T17:29:03.422Z</guid>
      <pubDate>Thu, 18 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2744|2024-06-04T17:29:06.598Z -- unknown -- nextgen%20gallery</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2744</link>
      <description>The NextGEN Gallery  WordPress plugin before 3.59.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2744|2024-06-04T17:29:06.598Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2322|2024-04-08T17:28:01.688Z -- unknown -- woocommerce%20cart%20abandonment%20recovery</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2322</link>
      <description>The WooCommerce Cart Abandonment Recovery WordPress plugin before 1.2.27 does not have CSRF check in its bulk actions, which could allow attackers to make logged in admins delete arbitrary email templates as well as delete and unsubscribe users from abandoned orders via CSRF attacks.</description>
      <guid isPermaLink="false">CVE-2024-2322|2024-04-08T17:28:01.688Z</guid>
      <pubDate>Wed, 03 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2908|2024-06-06T15:37:10.068Z -- unknown -- call%20now%20button</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2908</link>
      <description>The Call Now Button  WordPress plugin before 1.4.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-2908|2024-06-06T15:37:10.068Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2836|2024-04-15T05:00:05.687Z -- unknown -- social%20share%2C%20social%20login%20and%20social%20comments%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2836</link>
      <description>The Social Share, Social Login and Social Comments Plugin  WordPress plugin before 7.13.64 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2836|2024-04-15T05:00:05.687Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2749|2024-06-04T17:29:14.651Z -- unknown -- vikbooking%20hotel%20booking%20engine%20%26%20pms</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2749</link>
      <description>The VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8's access control mechanism fails to properly restrict access to its settings, permitting any users that can access a menu to manipulate requests and perform unauthorized actions such as editing, renaming or deleting (categories for example) despite initial settings prohibiting such access. This vulnerability resembles broken access control, enabling unauthorized users to modify critical VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8 configurations.</description>
      <guid isPermaLink="false">CVE-2024-2749|2024-06-04T17:29:14.651Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2837|2024-06-04T17:29:15.971Z -- unknown -- wp%20chat%20app</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2837</link>
      <description>The WP Chat App WordPress plugin before 3.6.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admins to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2837|2024-06-04T17:29:15.971Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2972|2024-04-24T05:00:02.929Z -- unknown -- floating%20chat%20widget%3A%20contact%20chat%20icons%2C%20whatsapp%2C%20telegram%20chat%2C%20line%20messenger%2C%20wechat%2C%20email%2C%20sms%2C%20call%20button</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2972</link>
      <description>The Floating Chat Widget: Contact Chat Icons, WhatsApp, Telegram Chat, Line Messenger, WeChat, Email, SMS, Call Button  WordPress plugin before 3.1.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2972|2024-04-24T05:00:02.929Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2118|2024-06-04T17:29:19.557Z -- unknown -- social%20media%20share%20buttons%20%26%20social%20sharing%20icons</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2118</link>
      <description>The Social Media Share Buttons &amp; Social Sharing Icons WordPress plugin before 2.8.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2118|2024-06-04T17:29:19.557Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2509|2024-06-10T17:46:21.566Z -- unknown -- gutenberg%20blocks%20by%20kadence%20blocks</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2509</link>
      <description>The Gutenberg Blocks by Kadence Blocks WordPress plugin before 3.2.26 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2509|2024-06-10T17:46:21.566Z</guid>
      <pubDate>Fri, 05 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2159|2024-06-04T17:29:21.015Z -- unknown -- social%20sharing%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2159</link>
      <description>The Social Sharing Plugin  WordPress plugin before 3.3.61 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2159|2024-06-04T17:29:21.015Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2505|2024-06-04T17:29:30.423Z -- unknown -- gamipress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2505</link>
      <description>The GamiPress  WordPress plugin before 6.8.9's access control mechanism fails to properly restrict access to its settings, permitting Authors to manipulate requests and extend access to lower privileged users, like Subscribers, despite initial settings prohibiting such access. This vulnerability resembles broken access control, enabling unauthorized users to modify critical GamiPress  WordPress plugin before 6.8.9 configurations.</description>
      <guid isPermaLink="false">CVE-2024-2505|2024-06-04T17:29:30.423Z</guid>
      <pubDate>Mon, 29 Apr 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2102|2024-04-17T05:00:02.737Z -- unknown -- salon%20booking%20system</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2102</link>
      <description>The Salon booking system WordPress plugin before 9.6.3 does not properly sanitize and escape the 'Mobile Phone' field and 'sms_prefix' parameter when booking an appointment, allowing customers to conduct Stored Cross-Site Scripting attacks. The payload gets triggered when an admin visits the 'Bookings' page and the malicious script is executed in the admin context.</description>
      <guid isPermaLink="false">CVE-2024-2102|2024-04-17T05:00:02.737Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2220|2024-06-04T17:29:31.304Z -- unknown -- button%20contact%20vr</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2220</link>
      <description>The Button contact VR WordPress plugin through 4.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2220|2024-06-04T17:29:31.304Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2369|2024-06-04T17:29:37.945Z -- unknown -- page%20builder%20gutenberg%20blocks</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2369</link>
      <description>The Page Builder Gutenberg Blocks WordPress plugin before 3.1.7 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2369|2024-06-04T17:29:37.945Z</guid>
      <pubDate>Tue, 02 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2739|2024-06-04T17:29:38.382Z -- unknown -- advanced%20search</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2739</link>
      <description>The Advanced Search WordPress plugin through 1.1.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2739|2024-06-04T17:29:38.382Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2470|2024-06-04T06:00:02.220Z -- unknown -- simple%20ajax%20chat</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2470</link>
      <description>The Simple Ajax Chat  WordPress plugin before 20240412 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2470|2024-06-04T06:00:02.220Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2309|2024-04-17T05:00:03.096Z -- unknown -- wp%20staging%20wordpress%20backup%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2309</link>
      <description>The WP STAGING WordPress Backup Plugin  WordPress plugin before 3.4.0, wp-staging-pro WordPress plugin before 5.4.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2309|2024-04-17T05:00:03.096Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2189|2024-06-04T17:29:58.957Z -- unknown -- social%20icons%20widget%20%26%20block%20by%20wpzoom</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2189</link>
      <description>The Social Icons Widget &amp; Block by WPZOOM WordPress plugin before 4.2.18 does not sanitise and escape some of its Widget settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2189|2024-06-04T17:29:58.957Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2263|2024-04-01T05:00:02.150Z -- unknown -- themify</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2263</link>
      <description>Themify  WordPress plugin before 1.4.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-2263|2024-04-01T05:00:02.150Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2310|2024-06-04T17:30:03.609Z -- unknown -- wp%20google%20review%20slider</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2310</link>
      <description>The WP Google Review Slider WordPress plugin before 13.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2310|2024-06-04T17:30:03.609Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2428|2024-06-04T17:30:05.591Z -- unknown -- the%20ultimate%20video%20player%20for%20wordpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2428</link>
      <description>The Ultimate Video Player For WordPress  WordPress plugin before 2.2.3 does not have proper capability check when updating its settings via a REST route, allowing Contributor and above users to update them. Furthermore, due to the lack of escaping in one of the settings, this also allows them to perform Stored XSS attacks</description>
      <guid isPermaLink="false">CVE-2024-2428|2024-06-04T17:30:05.591Z</guid>
      <pubDate>Wed, 10 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2404|2024-04-24T05:00:02.735Z -- unknown -- better%20comments</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2404</link>
      <description>The Better Comments WordPress plugin before 1.5.6 does not sanitise and escape some of its settings, which could allow low privilege users such as Subscribers to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-2404|2024-04-24T05:00:02.735Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2444|2024-04-08T17:28:12.009Z -- unknown -- inline%20related%20posts</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2444</link>
      <description>The Inline Related Posts WordPress plugin before 3.5.0 does not sanitise and escape some of its settings, which could allow high privilege users such as Admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2444|2024-04-08T17:28:12.009Z</guid>
      <pubDate>Sat, 06 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2278|2024-06-04T17:30:13.979Z -- unknown -- themify</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2278</link>
      <description>Themify  WordPress plugin before 1.4.4 does not sanitise and escape some of its Filters settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2278|2024-06-04T17:30:13.979Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2405|2024-05-02T06:00:02.127Z -- unknown -- float%20menu</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2405</link>
      <description>The Float menu  WordPress plugin before 6.0.1 does not have CSRF check in its bulk actions, which could allow attackers to make logged in admin delete arbitrary menu via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2024-2405|2024-05-02T06:00:02.127Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2429|2024-04-26T05:00:02.847Z -- unknown -- salon%20booking%20system</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2429</link>
      <description>The Salon booking system WordPress plugin through 9.6.5 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2429|2024-04-26T05:00:02.847Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2583|2024-04-13T05:00:02.273Z -- unknown -- wp%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2583</link>
      <description>The WP Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 7.0.5 does not properly escape some of its shortcodes attributes before they are echoed back to users, making it possible for users with the contributor role to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-2583|2024-04-13T05:00:02.273Z</guid>
      <pubDate>Sat, 13 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2761|2024-06-04T17:30:22.068Z -- unknown -- genesis%20blocks</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2761</link>
      <description>The Genesis Blocks WordPress plugin before 3.1.3 does not properly escape data input provided to some of its blocks, allowing using with at least contributor privileges to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-2761|2024-06-04T17:30:22.068Z</guid>
      <pubDate>Fri, 19 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2262|2024-04-01T05:00:01.688Z -- unknown -- themify</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2262</link>
      <description>Themify  WordPress plugin before 1.4.4 does not have CSRF check in its bulk action, which could allow attackers to make logged in users delete arbitrary filters via CSRF attack, granted they know the related filter slugs</description>
      <guid isPermaLink="false">CVE-2024-2262|2024-04-01T05:00:01.688Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2603|2024-06-04T17:30:27.591Z -- unknown -- salon%20booking%20system</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2603</link>
      <description>The Salon booking system WordPress plugin through 9.6.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin (or editor depending on Salon booking system WordPress plugin through 9.6.5 configuration) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2603|2024-06-04T17:30:27.591Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2402|2024-06-04T17:30:32.727Z -- unknown -- better%20comments</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2402</link>
      <description>The Better Comments WordPress plugin before 1.5.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2402|2024-06-04T17:30:32.727Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2697|2024-06-06T14:58:55.143Z -- unknown -- socialdriver-framework</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2697</link>
      <description>The socialdriver-framework WordPress plugin before 2024.0.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2024-2697|2024-06-06T14:58:55.143Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2101|2024-06-06T13:56:45.727Z -- unknown -- salon%20booking%20system</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2101</link>
      <description>The Salon booking system WordPress plugin before 9.6.3 does not properly sanitize and escape the 'Mobile Phone' field when booking an appointment, allowing customers to conduct Stored Cross-Site Scripting attacks. The payload gets triggered when an admin visits the 'Customers' page and the malicious script is executed in the admin context.</description>
      <guid isPermaLink="false">CVE-2024-2101|2024-06-06T13:56:45.727Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2858|2024-04-15T05:00:06.077Z -- unknown -- simple%20buttons%20creator</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2858</link>
      <description>The Simple Buttons Creator WordPress plugin through 1.04 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2858|2024-04-15T05:00:06.077Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2907|2024-04-25T05:00:01.952Z -- unknown -- agca</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2907</link>
      <description>The AGCA  WordPress plugin before 7.2.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-2907|2024-04-25T05:00:01.952Z</guid>
      <pubDate>Thu, 25 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2439|2024-06-04T17:30:54.241Z -- unknown -- salon%20booking%20system</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2439</link>
      <description>The Salon booking system WordPress plugin through 9.6.5 does not sanitise and escape some of its settings, which could allow high privilege users such as Editor to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2439|2024-06-04T17:30:54.241Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3591|2024-06-04T17:30:56.764Z -- unknown -- geo%20controller</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3591</link>
      <description>The Geo Controller WordPress plugin before 8.6.5 unserializes user input via some of its AJAX actions and REST API routes, which could allow unauthenticated users to perform PHP Object Injection when a suitable gadget is present on the blog.</description>
      <guid isPermaLink="false">CVE-2024-3591|2024-06-04T17:30:56.764Z</guid>
      <pubDate>Wed, 01 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3641|2024-06-04T17:31:00.592Z -- unknown -- newsletter%20popup</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3641</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not sanitise and escape some parameters, which could allow unauthenticated visitors to perform Cross-Site Scripting attacks against admins</description>
      <guid isPermaLink="false">CVE-2024-3641|2024-06-04T17:31:00.592Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3749|2024-06-04T17:31:08.986Z -- unknown -- sp%20project%20%26%20document%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3749</link>
      <description>The SP Project &amp; Document Manager WordPress plugin through 4.71 lacks proper access controllers and allows a logged in user to view and download files belonging to another user</description>
      <guid isPermaLink="false">CVE-2024-3749|2024-06-04T17:31:08.986Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3476|2024-05-02T06:00:03.114Z -- unknown -- side%20menu%20lite</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3476</link>
      <description>The Side Menu Lite  WordPress plugin before 4.2.1 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting buttons via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3476|2024-05-02T06:00:03.114Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3548|2024-06-04T17:31:12.890Z -- unknown -- wp%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3548</link>
      <description>The WP Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 7.1.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3548|2024-06-04T17:31:12.890Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3231|2024-06-04T17:31:14.157Z -- unknown -- popup4phone</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3231</link>
      <description>The Popup4Phone WordPress plugin through 1.3.2 does not sanitise and escape some parameters, which could allow unauthenticated users to perform Cross-Site Scripting attacks against admins.</description>
      <guid isPermaLink="false">CVE-2024-3231|2024-06-04T17:31:14.157Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3288|2024-06-07T10:01:18.328Z -- unknown -- logo%20slider</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3288</link>
      <description>The Logo Slider  WordPress plugin before 4.0.0 does not validate and escape some of its Slider Settings before outputting them back in attributes, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3288|2024-06-07T10:01:18.328Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3637|2024-06-04T17:31:17.143Z -- unknown -- responsive%20contact%20form%20builder%20%26%20lead%20generation%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3637</link>
      <description>The Responsive Contact Form Builder &amp; Lead Generation Plugin WordPress plugin through 1.8.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3637|2024-06-04T17:31:17.143Z</guid>
      <pubDate>Fri, 03 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3477|2024-06-04T17:31:19.701Z -- unknown -- popup%20box</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3477</link>
      <description>The Popup Box  WordPress plugin before 2.2.7 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting popups via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3477|2024-06-04T17:31:19.701Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3748|2024-06-11T18:53:59.679Z -- unknown -- sp%20project%20%26%20document%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3748</link>
      <description>The SP Project &amp; Document Manager WordPress plugin through 4.71 is missing validation in its upload function, allowing a user to manipulate the `user_id` to make it appear that a file was uploaded by another user</description>
      <guid isPermaLink="false">CVE-2024-3748|2024-06-11T18:53:59.679Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3050|2024-06-04T17:31:26.567Z -- unknown -- site%20reviews</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3050</link>
      <description>The Site Reviews WordPress plugin before 7.0.0 retrieves client IP addresses from potentially untrusted headers, allowing an attacker to manipulate its value. This may be used to bypass IP-based blocking</description>
      <guid isPermaLink="false">CVE-2024-3050|2024-06-04T17:31:26.567Z</guid>
      <pubDate>Wed, 29 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3752|2024-06-04T17:31:31.718Z -- unknown -- crelly%20slider</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3752</link>
      <description>The Crelly Slider WordPress plugin through 1.4.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3752|2024-06-04T17:31:31.718Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3590|2024-05-09T06:00:02.736Z -- unknown -- letterpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3590</link>
      <description>The LetterPress  WordPress plugin through 1.2.2 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks, such as delete arbitrary subscribers</description>
      <guid isPermaLink="false">CVE-2024-3590|2024-05-09T06:00:02.736Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3630|2024-06-04T17:31:39.784Z -- unknown -- hl%20twitter</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3630</link>
      <description>The HL Twitter WordPress plugin through 2014.1.18 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3630|2024-06-04T17:31:39.784Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3939|2024-06-06T18:27:04.548Z -- unknown -- ditty</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3939</link>
      <description>The Ditty  WordPress plugin before 3.1.36 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3939|2024-06-06T18:27:04.548Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3755|2024-06-04T17:31:46.642Z -- unknown -- mf%20gig%20calendar</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3755</link>
      <description>The MF Gig Calendar WordPress plugin through 1.2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as editor to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3755|2024-06-04T17:31:46.642Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3903|2024-05-09T06:00:02.924Z -- unknown -- add%20custom%20css%20and%20js</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3903</link>
      <description>The Add Custom CSS and JS WordPress plugin through 1.20 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in as author and above add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3903|2024-05-09T06:00:02.924Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3407|2024-06-04T17:31:51.900Z -- unknown -- wp%20prayer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3407</link>
      <description>The WP Prayer WordPress plugin through 2.0.9 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3407|2024-06-04T17:31:51.900Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3368|2024-06-06T17:53:45.554Z -- unknown -- all%20in%20one%20seo</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3368</link>
      <description>The All in One SEO  WordPress plugin before 4.6.1.1 does not validate and escape some of its Post fields before outputting them back, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3368|2024-06-06T17:53:45.554Z</guid>
      <pubDate>Mon, 20 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3692|2024-05-03T06:00:02.337Z -- unknown -- gutenverse</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3692</link>
      <description>The Gutenverse  WordPress plugin before 1.9.1 does not validate the htmlTag option in various of its block before outputting it back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3692|2024-05-03T06:00:02.337Z</guid>
      <pubDate>Fri, 03 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3406|2024-05-15T06:00:02.589Z -- unknown -- wp%20prayer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3406</link>
      <description>The WP Prayer WordPress plugin through 2.0.9 does not have CSRF check in place when updating its email settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3406|2024-05-15T06:00:02.589Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3580|2024-06-04T17:31:58.413Z -- unknown -- popup4phone</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3580</link>
      <description>The Popup4Phone WordPress plugin through 1.3.2 does not sanitise and escape some of its settings, which could allow high privilege users such as Editor to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3580|2024-06-04T17:31:58.413Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3703|2024-06-04T17:31:59.307Z -- unknown -- carousel%20slider</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3703</link>
      <description>The Carousel Slider WordPress plugin before 2.2.10 does not validate and escape some of its Slide options before outputting them back in the page/post where the related Slide shortcode is embed, which could allow users with the Editor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3703|2024-06-04T17:31:59.307Z</guid>
      <pubDate>Fri, 03 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3241|2024-06-04T17:31:59.787Z -- unknown -- ultimate%20blocks</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3241</link>
      <description>The Ultimate Blocks  WordPress plugin before 3.1.7 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3241|2024-06-04T17:31:59.787Z</guid>
      <pubDate>Tue, 14 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3918|2024-06-04T17:32:04.463Z -- unknown -- pet%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3918</link>
      <description>The Pet Manager WordPress plugin through 1.4 does not sanitise and escape some of its Pet settings, which could allow high privilege users such as Contributor to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-3918|2024-06-04T17:32:04.463Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3261|2024-04-24T05:00:03.121Z -- unknown -- strong%20testimonials</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3261</link>
      <description>The Strong Testimonials WordPress plugin before 3.1.12 does not validate and escape some of its Testimonial fields before outputting them back in a page/post, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks. The attack requires a specific view to be performed</description>
      <guid isPermaLink="false">CVE-2024-3261|2024-04-24T05:00:03.121Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3631|2024-06-04T17:32:06.360Z -- unknown -- hl%20twitter</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3631</link>
      <description>The HL Twitter WordPress plugin through 2014.1.18 does not have CSRF check when unlinking twitter accounts, which could allow attackers to make logged in admins perform such actions via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3631|2024-06-04T17:32:06.360Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3076|2024-06-04T17:32:07.263Z -- unknown -- mm-email2image</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3076</link>
      <description>The MM-email2image WordPress plugin through 0.2.5 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3076|2024-06-04T17:32:07.263Z</guid>
      <pubDate>Fri, 26 Apr 2024 13:23:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3471|2024-06-04T17:32:08.568Z -- unknown -- button%20generator</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3471</link>
      <description>The Button Generator  WordPress plugin before 3.0 does not have CSRF check in place when bulk deleting, which could allow attackers to make a logged in admin delete buttons via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3471|2024-06-04T17:32:08.568Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3060|2024-06-04T17:32:10.817Z -- unknown -- enl%20newsletter</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3060</link>
      <description>The ENL Newsletter WordPress plugin through 1.0.1 does not sanitize and escape a parameter before using it in a SQL statement, allowing admin+ to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2024-3060|2024-06-04T17:32:10.817Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3059|2024-06-04T17:32:14.386Z -- unknown -- enl%20newsletter</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3059</link>
      <description>The ENL Newsletter WordPress plugin through 1.0.1 does not have CSRF checks in some places, which could allow attackers to make logged in admins delete arbitrary Campaigns via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3059|2024-06-04T17:32:14.386Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3075|2024-06-04T17:32:16.127Z -- unknown -- mm-email2image</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3075</link>
      <description>The MM-email2image WordPress plugin through 0.2.5 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3075|2024-06-04T17:32:16.127Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3921|2024-05-29T06:00:02.135Z -- unknown -- gianism</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3921</link>
      <description>The Gianism WordPress plugin through 5.1.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3921|2024-05-29T06:00:02.135Z</guid>
      <pubDate>Wed, 29 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3472|2024-06-04T17:32:17.000Z -- unknown -- modal%20window</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3472</link>
      <description>The Modal Window  WordPress plugin before 5.3.10 does not have CSRF check in place when bulk deleting modals, which could allow attackers to make a logged in admin delete them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3472|2024-06-04T17:32:17.000Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3188|2024-04-26T05:00:05.277Z -- unknown -- wp%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3188</link>
      <description>The WP Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 7.1.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3188|2024-04-26T05:00:05.277Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3937|2024-06-06T18:25:41.839Z -- unknown -- playlist%20for%20youtube</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3937</link>
      <description>The Playlist for Youtube WordPress plugin through 1.32 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3937|2024-06-06T18:25:41.839Z</guid>
      <pubDate>Wed, 29 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3917|2024-06-11T14:33:49.643Z -- unknown -- pet%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3917</link>
      <description>The Pet Manager WordPress plugin through 1.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3917|2024-06-11T14:33:49.643Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3628|2024-05-07T06:00:01.626Z -- unknown -- easyevent</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3628</link>
      <description>The EasyEvent WordPress plugin through 1.0.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-3628|2024-05-07T06:00:01.626Z</guid>
      <pubDate>Tue, 07 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3940|2024-06-04T17:32:20.990Z -- unknown -- recaptcha%20jetpack</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3940</link>
      <description>The reCAPTCHA Jetpack WordPress plugin through 0.2.2 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3940|2024-06-04T17:32:20.990Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3405|2024-06-04T17:32:21.872Z -- unknown -- wp%20prayer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3405</link>
      <description>The WP Prayer WordPress plugin through 2.0.9 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3405|2024-06-04T17:32:21.872Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3239|2024-06-04T17:32:22.790Z -- unknown -- post%20grid%20gutenberg%20blocks%20and%20wordpress%20blog%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3239</link>
      <description>The Post Grid Gutenberg Blocks and WordPress Blog Plugin  WordPress plugin before 4.0.2 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3239|2024-06-04T17:32:22.790Z</guid>
      <pubDate>Mon, 13 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3594|2024-06-04T17:32:31.728Z -- unknown -- idonate</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3594</link>
      <description>The IDonate  WordPress plugin through 1.9.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3594|2024-06-04T17:32:31.728Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3756|2024-05-06T06:00:02.125Z -- unknown -- mf%20gig%20calendar</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3756</link>
      <description>The MF Gig Calendar WordPress plugin through 1.2.1 does not have CSRF checks in some places, which could allow attackers to make logged in Contributors and above delete arbitrary events via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3756|2024-05-06T06:00:02.125Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3644|2024-06-04T17:32:34.623Z -- unknown -- newsletter%20popup</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3644</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3644|2024-06-04T17:32:34.623Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3582|2024-05-09T06:00:02.529Z -- unknown -- ungallery</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3582</link>
      <description>The UnGallery WordPress plugin through 2.2.4 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3582|2024-05-09T06:00:02.529Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3941|2024-06-04T17:32:38.843Z -- unknown -- recaptcha%20jetpack</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3941</link>
      <description>The reCAPTCHA Jetpack WordPress plugin through 0.2.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged-in admin add Stored XSS payloads via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2024-3941|2024-06-04T17:32:38.843Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3629|2024-06-04T17:32:40.905Z -- unknown -- hl%20twitter</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3629</link>
      <description>The HL Twitter WordPress plugin through 2014.1.18 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3629|2024-06-04T17:32:40.905Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3824|2024-06-04T17:32:42.115Z -- unknown -- base64%20encoder%2Fdecoder</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3824</link>
      <description>The Base64 Encoder/Decoder WordPress plugin through 0.9.2 does not have CSRF check in place when resetting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3824|2024-06-04T17:32:42.115Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3920|2024-05-23T06:00:03.279Z -- unknown -- flattr</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3920</link>
      <description>The Flattr WordPress plugin through 1.2.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3920|2024-05-23T06:00:03.279Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3058|2024-06-04T17:32:46.776Z -- unknown -- enl%20newsletter</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3058</link>
      <description>The ENL Newsletter WordPress plugin through 1.0.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3058|2024-06-04T17:32:46.776Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3643|2024-05-16T06:00:02.799Z -- unknown -- newsletter%20popup</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3643</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not have CSRF check when deleting list, which could allow attackers to make logged in admins perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3643|2024-05-16T06:00:02.799Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3478|2024-06-04T17:32:55.802Z -- unknown -- herd%20effects</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3478</link>
      <description>The Herd Effects  WordPress plugin before 5.2.7 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting effects via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3478|2024-06-04T17:32:55.802Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3481|2024-06-04T17:32:56.648Z -- unknown -- counter%20box</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3481</link>
      <description>The Counter Box  WordPress plugin before 1.2.4 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such deleting counters via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3481|2024-06-04T17:32:56.648Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3634|2024-06-04T17:33:00.780Z -- unknown -- month%20name%20translation%20benaceur</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3634</link>
      <description>The month name translation benaceur WordPress plugin before 2.3.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3634|2024-06-04T17:33:00.780Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3474|2024-06-04T17:33:02.444Z -- unknown -- wow%20skype%20buttons</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3474</link>
      <description>The Wow Skype Buttons WordPress plugin before 4.0.4 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting buttons via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3474|2024-06-04T17:33:02.444Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3823|2024-06-04T17:33:05.706Z -- unknown -- base64%20encoder%2Fdecoder</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3823</link>
      <description>The Base64 Encoder/Decoder WordPress plugin through 0.9.2 does not have CSRF check when updating its settings, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3823|2024-06-04T17:33:05.706Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3822|2024-06-04T17:33:07.400Z -- unknown -- base64%20encoder%2Fdecoder</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3822</link>
      <description>The Base64 Encoder/Decoder WordPress plugin through 0.9.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3822|2024-06-04T17:33:07.400Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3475|2024-06-04T17:33:10.876Z -- unknown -- sticky%20buttons</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3475</link>
      <description>The Sticky Buttons  WordPress plugin before 3.2.4 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting buttons via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3475|2024-06-04T17:33:10.876Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3265|2024-06-04T17:33:12.146Z -- unknown -- advanced%20search</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3265</link>
      <description>The Advanced Search WordPress plugin through 1.1.6 does not properly escape parameters appended to an SQL query, making it possible for users with the administrator role to conduct SQL Injection attacks in the context of a multisite WordPress configurations.</description>
      <guid isPermaLink="false">CVE-2024-3265|2024-06-04T17:33:12.146Z</guid>
      <pubDate>Thu, 25 Apr 2024 21:25:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3048|2024-06-04T17:33:13.531Z -- unknown -- bannerlid</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3048</link>
      <description>The Bannerlid WordPress plugin through 1.1.0 does not escape generated URLs before outputting them in attributes, leading to Reflected Cross-Site Scripting which could be used against high privilege users such as administrators</description>
      <guid isPermaLink="false">CVE-2024-3048|2024-06-04T17:33:13.531Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3642|2024-06-04T17:33:18.940Z -- unknown -- newsletter%20popup</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3642</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not have CSRF check when deleting subscriber, which could allow attackers to make logged in admins perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3642|2024-06-04T17:33:18.940Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4388|2024-06-04T17:53:30.571Z -- unknown -- cas</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4388</link>
      <description>This  does not validate a path generated with user input when downloading files, allowing unauthenticated user to download arbitrary files from the server</description>
      <guid isPermaLink="false">CVE-2024-4388|2024-06-04T17:53:30.571Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4756|2024-06-07T06:00:02.839Z -- unknown -- wp%20backpack</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4756</link>
      <description>The WP Backpack WordPress plugin through 2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4756|2024-06-07T06:00:02.839Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4886|2024-06-05T13:11:03.623Z -- unknown -- buddyboss-platform</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4886</link>
      <description>The  contains an IDOR vulnerability that allows a user to comment on a private post by manipulating the ID included in the request</description>
      <guid isPermaLink="false">CVE-2024-4886|2024-06-05T13:11:03.623Z</guid>
      <pubDate>Wed, 05 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4469|2024-06-04T17:53:54.768Z -- unknown -- wp%20staging%20wordpress%20backup%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4469</link>
      <description>The WP STAGING WordPress Backup Plugin  WordPress plugin before 3.5.0 does not prevent users with the administrator role from pinging conducting SSRF attacks, which may be a problem in multisite configurations.</description>
      <guid isPermaLink="false">CVE-2024-4469|2024-06-04T17:53:54.768Z</guid>
      <pubDate>Fri, 31 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4531|2024-06-04T17:54:02.001Z -- unknown -- business%20card</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4531</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as editing cards via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4531|2024-06-04T17:54:02.001Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4399|2024-06-04T17:54:02.934Z -- unknown -- cas</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4399</link>
      <description>The  does not validate a parameter before making a request to it, which could allow unauthenticated users to perform SSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4399|2024-06-04T17:54:02.934Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4290|2024-05-21T06:00:02.415Z -- unknown -- sailthru%20triggermail</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4290</link>
      <description>The Sailthru Triggermail WordPress plugin through 1.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4290|2024-05-21T06:00:02.415Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4750|2024-06-04T17:54:29.998Z -- unknown -- buddyboss-platform</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4750</link>
      <description>The buddyboss-platform WordPress plugin before 2.6.0 contains an IDOR vulnerability that allows a user to like a private post by manipulating the ID included in the request</description>
      <guid isPermaLink="false">CVE-2024-4750|2024-06-04T17:54:29.998Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4530|2024-06-04T17:54:42.006Z -- unknown -- business%20card</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4530</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as editing card categories via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4530|2024-06-04T17:54:42.006Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4620|2024-06-07T06:00:02.468Z -- unknown -- arforms%20-%20premium%20wordpress%20form%20builder%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4620</link>
      <description>The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.6 allows unauthenticated users to modify uploaded files in such a way that PHP code can be uploaded when an upload file input is included on a form</description>
      <guid isPermaLink="false">CVE-2024-4620|2024-06-07T06:00:02.468Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4289|2024-06-04T17:54:54.276Z -- unknown -- sailthru%20triggermail</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4289</link>
      <description>The Sailthru Triggermail WordPress plugin through 1.1 does not sanitise and escape various parameters before outputting them back in pages and attributes, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-4289|2024-06-04T17:54:54.276Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4533|2024-06-04T17:54:56.805Z -- unknown -- kkprogressbar2%20free</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4533</link>
      <description>The KKProgressbar2 Free  WordPress plugin through 1.1.4.2 does not sanitize and escape a parameter before using it in a SQL statement, allowing admin users to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2024-4533|2024-06-04T17:54:56.805Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4749|2024-06-04T20:09:20.526Z -- unknown -- wp-emember</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4749</link>
      <description>The wp-eMember WordPress plugin before 10.3.9 does not sanitize and escape the "fieldId" parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2024-4749|2024-06-04T20:09:20.526Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4856|2024-06-04T17:55:07.188Z -- unknown -- fs%20product%20inquiry</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4856</link>
      <description>The FS Product Inquiry WordPress plugin through 1.1.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin or unauthenticated users</description>
      <guid isPermaLink="false">CVE-2024-4856|2024-06-04T17:55:07.188Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4180|2024-06-04T17:55:12.437Z -- unknown -- the%20events%20calendar</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4180</link>
      <description>The Events Calendar WordPress plugin before 6.4.0.1 does not properly sanitize user-submitted content when rendering some views via AJAX.</description>
      <guid isPermaLink="false">CVE-2024-4180|2024-06-04T17:55:12.437Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4529|2024-06-06T18:11:18.132Z -- unknown -- business%20card</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4529</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as deleting card categories via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4529|2024-06-06T18:11:18.132Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4857|2024-06-04T17:55:30.703Z -- unknown -- fs%20product%20inquiry</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4857</link>
      <description>The FS Product Inquiry WordPress plugin through 1.1.1 does not sanitise and escape some form submissions, which could allow unauthenticated users to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4857|2024-06-04T17:55:30.703Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4532|2024-05-27T06:00:02.290Z -- unknown -- business%20card</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4532</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as deleting cards via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4532|2024-05-27T06:00:02.290Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4621|2024-06-07T15:56:04.456Z -- unknown -- arforms%20-%20premium%20wordpress%20form%20builder%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4621</link>
      <description>The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4621|2024-06-07T15:56:04.456Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4057|2024-06-04T17:55:54.055Z -- unknown -- gutenberg%20blocks%20with%20ai%20by%20kadence%20wp</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4057</link>
      <description>The Gutenberg Blocks with AI by Kadence WP  WordPress plugin before 3.2.37 does not validate and escape some of its block attributes before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4057|2024-06-04T17:55:54.055Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4372|2024-06-04T17:56:06.564Z -- unknown -- carousel%20slider</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4372</link>
      <description>The Carousel Slider WordPress plugin before 2.2.11 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4372|2024-06-04T17:56:06.564Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4535|2024-06-04T17:56:07.427Z -- unknown -- kkprogressbar2%20free</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4535</link>
      <description>The KKProgressbar2 Free  WordPress plugin through 1.1.4.2 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4535|2024-06-04T17:56:07.427Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4061|2024-06-04T17:56:11.258Z -- unknown -- survey%20maker</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4061</link>
      <description>The Survey Maker  WordPress plugin before 4.2.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4061|2024-06-04T17:56:11.258Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4534|2024-05-27T06:00:02.758Z -- unknown -- kkprogressbar2%20free</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4534</link>
      <description>The KKProgressbar2 Free  WordPress plugin through 1.1.4.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4534|2024-05-27T06:00:02.758Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0780|2024-03-18T19:05:41.368Z -- unknown -- enjoy%20social%20feed%20plugin%20for%20wordpress%20website</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0780</link>
      <description>The Enjoy Social Feed plugin for WordPress website WordPress plugin through 6.2.2 does not have authorisation when resetting its database, allowing any authenticated users, such as subscriber to perform such action</description>
      <guid isPermaLink="false">CVE-2024-0780|2024-03-18T19:05:41.368Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0779|2024-03-18T19:05:42.163Z -- unknown -- enjoy%20social%20feed%20plugin%20for%20wordpress%20website</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0779</link>
      <description>The Enjoy Social Feed plugin for WordPress website WordPress plugin through 6.2.2 does not have authorisation and CSRF in various function hooked to admin_init, allowing unauthenticated users to call them and unlink arbitrary users Instagram Account for example</description>
      <guid isPermaLink="false">CVE-2024-0779|2024-03-18T19:05:42.163Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0559|2024-03-11T18:08:56.401Z -- unknown -- enhanced%20text%20widget</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0559</link>
      <description>The Enhanced Text Widget WordPress plugin before 1.6.6 does not validate and escape some of its Widget options before outputting them back in attributes, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0559|2024-03-11T18:08:56.401Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0365|2024-03-18T19:05:42.966Z -- unknown -- fancy%20product%20designer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0365</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.5 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by adminstrators.</description>
      <guid isPermaLink="false">CVE-2024-0365|2024-03-18T19:05:42.966Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0719|2024-03-18T19:05:43.770Z -- unknown -- tabs%20shortcode%20and%20widget</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0719</link>
      <description>The Tabs Shortcode and Widget WordPress plugin through 1.17 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-0719|2024-03-18T19:05:43.770Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0902|2024-06-04T17:58:29.201Z -- unknown -- fancy%20product%20designer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0902</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.81 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0902|2024-06-04T17:58:29.201Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0421|2024-02-12T16:07:31.072Z -- unknown -- mappress%20maps%20for%20wordpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0421</link>
      <description>The MapPress Maps for WordPress plugin before 2.88.16 does not ensure that posts to be retrieve via an AJAX action is a public map, allowing unauthenticated users to read arbitrary private and draft posts.</description>
      <guid isPermaLink="false">CVE-2024-0421|2024-02-12T16:07:31.072Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0677|2024-06-04T17:58:37.182Z -- unknown -- pz-linkcard</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0677</link>
      <description>The Pz-LinkCard WordPress plugin through 2.5.1 does not prevent users from pinging arbitrary hosts via some of its shortcodes, which could allow high privilege users such as contributors to perform SSRF attacks.</description>
      <guid isPermaLink="false">CVE-2024-0677|2024-06-04T17:58:37.182Z</guid>
      <pubDate>Thu, 28 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0250|2024-06-04T17:58:38.063Z -- unknown -- analytics%20insights%20for%20google%20analytics%204%20%28aiwp%29</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0250</link>
      <description>The Analytics Insights for Google Analytics 4 (AIWP) WordPress plugin before 6.3 is vulnerable to Open Redirect due to insufficient validation on the redirect oauth2callback.php file. This makes it possible for unauthenticated attackers to redirect users to potentially malicious sites if they can successfully trick them into performing an action.</description>
      <guid isPermaLink="false">CVE-2024-0250|2024-06-04T17:58:38.063Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0856|2024-03-20T05:00:02.675Z -- unknown -- appointment%20booking%20calendar</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0856</link>
      <description>The Appointment Booking Calendar WordPress plugin before 1.3.83 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as adding a booking to the calendar without paying.</description>
      <guid isPermaLink="false">CVE-2024-0856|2024-03-20T05:00:02.675Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0905|2024-04-26T05:00:01.958Z -- unknown -- fancy%20product%20designer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0905</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.8 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against unauthenticated and admin-level users</description>
      <guid isPermaLink="false">CVE-2024-0905|2024-04-26T05:00:01.958Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0904|2024-06-04T17:58:42.927Z -- unknown -- fancy%20product%20designer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0904</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.81 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0904|2024-06-04T17:58:42.927Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0820|2024-06-04T17:58:47.931Z -- unknown -- jobs%20for%20wordpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0820</link>
      <description>The Jobs for WordPress plugin before 2.7.4 does not sanitise and escape some parameters, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-0820|2024-06-04T17:58:47.931Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0420|2024-06-04T17:58:48.789Z -- unknown -- mappress%20maps%20for%20wordpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0420</link>
      <description>The MapPress Maps for WordPress plugin before 2.88.15 does not sanitize and escape the map title when outputting it back in the admin dashboard, allowing Contributors and above roles to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-0420|2024-06-04T17:58:48.789Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0973|2024-03-18T19:05:46.858Z -- unknown -- widget%20for%20social%20page%20feeds</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0973</link>
      <description>The Widget for Social Page Feeds WordPress plugin before 6.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0973|2024-03-18T19:05:46.858Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0399|2024-04-15T05:00:01.875Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0399</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 29.7 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to an SQL injection exploitable by Subscriber+ role.</description>
      <guid isPermaLink="false">CVE-2024-0399|2024-04-15T05:00:01.875Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0858|2024-03-18T19:05:49.195Z -- unknown -- innovs%20hr</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0858</link>
      <description>The Innovs HR WordPress plugin through 1.0.3.4 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as adding them as employees.</description>
      <guid isPermaLink="false">CVE-2024-0858|2024-03-18T19:05:49.195Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0337|2024-03-20T05:00:02.494Z -- unknown -- travelpayouts%3A%20all%20travel%20brands%20in%20one%20place</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0337</link>
      <description>The Travelpayouts: All Travel Brands in One Place WordPress plugin through 1.1.15 is vulnerable to Open Redirect due to insufficient validation on the travelpayouts_redirect variable. This makes it possible for unauthenticated attackers to redirect users to potentially malicious sites if they can successfully trick them into performing an action.</description>
      <guid isPermaLink="false">CVE-2024-0337|2024-03-20T05:00:02.494Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0248|2024-02-12T16:07:33.907Z -- unknown -- eazydocs</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0248</link>
      <description>The EazyDocs WordPress plugin before 2.4.0 re-introduced CVE-2023-6029 (https://wpscan.com/vulnerability/7a0aaf85-8130-4fd7-8f09-f8edc929597e/) in 2.3.8, allowing any authenticated users, such as subscriber to delete arbitrary posts, as well as add and delete documents/sections. The issue was partially fixed in 2.3.9.</description>
      <guid isPermaLink="false">CVE-2024-0248|2024-02-12T16:07:33.907Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0566|2024-02-12T16:07:34.465Z -- unknown -- smart%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0566</link>
      <description>The Smart Manager WordPress plugin before 8.28.0 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2024-0566|2024-02-12T16:07:34.465Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0881|2024-06-04T17:58:54.930Z -- unknown -- post%20grid%2C%20form%20maker%2C%20popup%20maker%2C%20woocommerce%20blocks%2C%20post%20blocks%2C%20post%20carousel</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0881</link>
      <description>The Post Grid, Form Maker, Popup Maker, WooCommerce Blocks, Post Blocks, Post Carousel  WordPress plugin before 2.2.76 does not prevent password protected posts from being displayed in the result of some unauthenticated AJAX actions, allowing unauthenticated users to read such posts</description>
      <guid isPermaLink="false">CVE-2024-0881|2024-06-04T17:58:54.930Z</guid>
      <pubDate>Thu, 11 Apr 2024 15:36:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0711|2024-06-04T17:58:58.584Z -- unknown -- buttons%20shortcode%20and%20widget</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0711</link>
      <description>The Buttons Shortcode and Widget WordPress plugin through 1.16 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-0711|2024-06-04T17:58:58.584Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0855|2024-02-27T08:30:29.193Z -- unknown -- spiffy%20calendar</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0855</link>
      <description>The Spiffy Calendar WordPress plugin before 4.9.9 doesn't check the event_author parameter, and allows any user to alter it when creating an event, leading to deceiving users/admins that a page was created by a Contributor+.</description>
      <guid isPermaLink="false">CVE-2024-0855|2024-02-27T08:30:29.193Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0951|2024-06-04T17:58:59.888Z -- unknown -- advanced%20social%20feeds%20widget%20%26%20shortcode</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0951</link>
      <description>The Advanced Social Feeds Widget &amp; Shortcode WordPress plugin through 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0951|2024-06-04T17:58:59.888Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0757|2024-06-04T17:59:08.420Z -- unknown -- insert%20or%20embed%20articulate%20content%20into%20wordpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0757</link>
      <description>The Insert or Embed Articulate Content into WordPress plugin through 4.3000000023 is not properly filtering which file extensions are allowed to be imported on the server, allowing the uploading of malicious code within zip files</description>
      <guid isPermaLink="false">CVE-2024-0757|2024-06-04T17:59:08.420Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0868|2024-04-17T05:00:02.186Z -- unknown -- coreactivity%3A%20activity%20logging%20plugin%20for%20wordpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0868</link>
      <description>The coreActivity: Activity Logging plugin for WordPress plugin before 2.1 retrieved IP addresses of requests via headers such X-FORWARDED to log them, allowing users to spoof them by providing an arbitrary value</description>
      <guid isPermaLink="false">CVE-2024-0868|2024-04-17T05:00:02.186Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0673|2024-03-28T05:00:02.093Z -- unknown -- pz-linkcard</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0673</link>
      <description>The Pz-LinkCard WordPress plugin through 2.5.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-0673|2024-03-28T05:00:02.093Z</guid>
      <pubDate>Thu, 28 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0561|2024-06-04T17:59:12.071Z -- unknown -- ultimate%20posts%20widget</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0561</link>
      <description>The Ultimate Posts Widget WordPress plugin before 2.3.1 does not validate and escape some of its Widget options before outputting them back in attributes, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0561|2024-06-04T17:59:12.071Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0672|2024-03-28T05:00:01.874Z -- unknown -- pz-linkcard</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0672</link>
      <description>The Pz-LinkCard WordPress plugin through 2.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-0672|2024-03-28T05:00:01.874Z</guid>
      <pubDate>Thu, 28 Mar 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0756|2024-06-05T13:54:08.704Z -- unknown -- insert%20or%20embed%20articulate%20content%20into%20wordpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0756</link>
      <description>The Insert or Embed Articulate Content into WordPress plugin through 4.3000000023 lacks validation of URLs when adding iframes, allowing attackers to inject an iFrame in the page and thus load arbitrary content from any page.</description>
      <guid isPermaLink="false">CVE-2024-0756|2024-06-05T13:54:08.704Z</guid>
      <pubDate>Tue, 04 Jun 2024 14:28:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1754|2024-06-04T17:59:31.606Z -- unknown -- nps%20computy</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1754</link>
      <description>The NPS computy WordPress plugin through 2.7.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1754|2024-06-04T17:59:31.606Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1076|2024-05-08T06:00:02.175Z -- unknown -- ssl%20zen</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1076</link>
      <description>The SSL Zen  WordPress plugin before 4.6.0 only relies on the use of .htaccess to prevent visitors from accessing the site's generated private keys, which allows an attacker to read them if the site runs on a server who doesn't support .htaccess files, like NGINX.</description>
      <guid isPermaLink="false">CVE-2024-1076|2024-05-08T06:00:02.175Z</guid>
      <pubDate>Wed, 08 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1962|2024-03-25T05:00:02.022Z -- unknown -- cm%20download%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1962</link>
      <description>The CM Download Manager  WordPress plugin before 2.9.1 does not have CSRF checks in some places, which could allow attackers to make logged in admins edit downloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-1962|2024-03-25T05:00:02.022Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1333|2024-03-18T19:05:45.251Z -- unknown -- responsive%20pricing%20table</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1333</link>
      <description>The Responsive Pricing Table WordPress plugin before 5.1.11 does not validate and escape some of its Pricing Table options before outputting them back in a page/post where the related shortcode is embed, which could allow users with the author role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1333|2024-03-18T19:05:45.251Z</guid>
      <pubDate>Mon, 18 Mar 2024 15:15:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1958|2024-06-04T17:59:44.770Z -- unknown -- wpb-show-core</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1958</link>
      <description>The WPB Show Core WordPress plugin before 2.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin or unauthenticated users</description>
      <guid isPermaLink="false">CVE-2024-1958|2024-06-04T17:59:44.770Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1755|2024-04-15T05:00:04.951Z -- unknown -- nps%20computy</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1755</link>
      <description>The NPS computy WordPress plugin through 2.7.5 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-1755|2024-04-15T05:00:04.951Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1743|2024-06-04T17:59:47.689Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1743</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 29.8 does not sanitise and escape various parameters before outputting them back in pages and attributes, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-1743|2024-06-04T17:59:47.689Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1846|2024-06-06T18:28:03.533Z -- unknown -- responsive%20tabs</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1846</link>
      <description>The Responsive Tabs WordPress plugin before 4.0.7 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1846|2024-06-06T18:28:03.533Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1660|2024-04-15T05:00:04.066Z -- unknown -- top%20bar</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1660</link>
      <description>The Top Bar WordPress plugin before 3.0.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1660|2024-04-15T05:00:04.066Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1292|2024-06-04T18:00:01.682Z -- unknown -- wpb-show-core</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1292</link>
      <description>The WPB Show Core WordPress plugin before 2.7 does not sanitise and escape some parameters before outputting them back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-1292|2024-06-04T18:00:01.682Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1752|2024-04-08T17:28:09.077Z -- unknown -- font%20farsi</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1752</link>
      <description>The Font Farsi WordPress plugin through 1.6.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1752|2024-04-08T17:28:09.077Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1712|2024-06-04T18:00:13.408Z -- unknown -- carousel%20slider</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1712</link>
      <description>The Carousel Slider WordPress plugin before 2.2.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1712|2024-06-04T18:00:13.408Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1745|2024-03-26T05:00:02.299Z -- unknown -- testimonial%20slider</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1745</link>
      <description>The Testimonial Slider WordPress plugin before 2.3.7 does not properly ensure that a user has the necessary capabilities to edit certain sensitive Testimonial Slider WordPress plugin before 2.3.7 settings, making it possible for users with at least the Author role to edit them.</description>
      <guid isPermaLink="false">CVE-2024-1745|2024-03-26T05:00:02.299Z</guid>
      <pubDate>Tue, 26 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1905|2024-06-04T18:00:18.574Z -- unknown -- smart%20forms</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1905</link>
      <description>The Smart Forms  WordPress plugin before 2.6.96 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1905|2024-06-04T18:00:18.574Z</guid>
      <pubDate>Mon, 29 Apr 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1401|2024-03-19T14:28:21.065Z -- unknown -- profile%20box%20shortcode%20and%20widget</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1401</link>
      <description>The Profile Box Shortcode And Widget WordPress plugin before 1.2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1401|2024-03-19T14:28:21.065Z</guid>
      <pubDate>Tue, 19 Mar 2024 14:28:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1564|2024-03-25T05:00:01.620Z -- unknown -- wp-schema-pro</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1564</link>
      <description>The wp-schema-pro WordPress plugin before 2.7.16 does not validate post access allowing a contributor user to access custom fields on any post regardless of post type or status via a shortcode</description>
      <guid isPermaLink="false">CVE-2024-1564|2024-03-25T05:00:01.620Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1319|2024-06-04T18:00:24.531Z -- unknown -- events%20tickets%20plus</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1319</link>
      <description>The Events Tickets Plus WordPress plugin before 5.9.1 does not prevent users with at least the contributor role from leaking the attendees list on any post type regardless of status. (e.g. draft, private, pending review, password-protected, and trashed posts).</description>
      <guid isPermaLink="false">CVE-2024-1319|2024-06-04T18:00:24.531Z</guid>
      <pubDate>Mon, 04 Mar 2024 21:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1231|2024-03-25T05:00:00.845Z -- unknown -- cm%20download%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1231</link>
      <description>The CM Download Manager  WordPress plugin before 2.9.0 does not have CSRF checks in some places, which could allow attackers to make logged in admins unpublish downloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-1231|2024-03-25T05:00:00.845Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1588|2024-06-04T18:00:29.871Z -- unknown -- sendpress%20newsletters</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1588</link>
      <description>The SendPress Newsletters WordPress plugin through 1.23.11.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1588|2024-06-04T18:00:29.871Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1658|2024-06-07T19:25:05.750Z -- unknown -- grid%20shortcodes</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1658</link>
      <description>The Grid Shortcodes WordPress plugin before 1.1.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1658|2024-06-07T19:25:05.750Z</guid>
      <pubDate>Mon, 18 Mar 2024 15:15:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1526|2024-06-04T18:00:32.482Z -- unknown -- hubbub%20lite</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1526</link>
      <description>The Hubbub Lite  WordPress plugin before 1.33.1 does not ensure that user have access to password protected post before displaying its content in a meta tag.</description>
      <guid isPermaLink="false">CVE-2024-1526|2024-06-04T18:00:32.482Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1273|2024-03-11T18:08:56.961Z -- unknown -- starbox</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1273</link>
      <description>The Starbox WordPress plugin before 3.5.0 does not sanitise and escape some parameters, which could allow users with a role as low as Contributor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1273|2024-03-11T18:08:56.961Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1232|2024-03-25T05:00:01.133Z -- unknown -- cm%20download%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1232</link>
      <description>The CM Download Manager  WordPress plugin before 2.9.0 does not have CSRF checks in some places, which could allow attackers to make logged in admins delete downloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-1232|2024-03-25T05:00:01.133Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1068|2024-03-11T18:08:57.515Z -- unknown -- 404%20solution</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1068</link>
      <description>The 404 Solution WordPress plugin before 2.35.8 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2024-1068|2024-03-11T18:08:57.515Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1204|2024-04-15T05:00:02.873Z -- unknown -- meta%20box</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1204</link>
      <description>The Meta Box  WordPress plugin before 5.9.4 does not prevent users with at least the contributor role from access arbitrary custom fields assigned to other user's posts.</description>
      <guid isPermaLink="false">CVE-2024-1204|2024-04-15T05:00:02.873Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1746|2024-06-04T18:00:39.219Z -- unknown -- testimonial%20slider</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1746</link>
      <description>The Testimonial Slider WordPress plugin before 2.3.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1746|2024-06-04T18:00:39.219Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1316|2024-03-04T21:00:09.876Z -- unknown -- event%20tickets%20and%20registration</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1316</link>
      <description>The Event Tickets and Registration WordPress plugin before 5.8.1, Events Tickets Plus WordPress plugin before 5.9.1 does not prevent users with at least the contributor role from leaking the existence of certain events they shouldn't have access to. (e.g. draft, private, pending review, pw-protected, and trashed events).</description>
      <guid isPermaLink="false">CVE-2024-1316|2024-03-04T21:00:09.876Z</guid>
      <pubDate>Mon, 04 Mar 2024 21:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1290|2024-03-11T18:08:58.060Z -- unknown -- user%20registration</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1290</link>
      <description>The User Registration WordPress plugin before 2.12 does not prevent users with at least the contributor role from rendering sensitive shortcodes, allowing them to generate, and leak, valid password reset URLs, which they can use to take over any accounts.</description>
      <guid isPermaLink="false">CVE-2024-1290|2024-03-11T18:08:58.060Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1589|2024-06-04T18:01:01.145Z -- unknown -- sendpress%20newsletters</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1589</link>
      <description>The SendPress Newsletters WordPress plugin through 1.23.11.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1589|2024-06-04T18:01:01.145Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1306|2024-04-15T05:00:03.284Z -- unknown -- smart%20forms</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1306</link>
      <description>The Smart Forms  WordPress plugin before 2.6.94 does not have CSRF checks in some places, which could allow attackers to make logged-in users perform unwanted actions via CSRF attacks, such as editing entries, and we consider it a medium risk.</description>
      <guid isPermaLink="false">CVE-2024-1306|2024-04-15T05:00:03.284Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1756|2024-06-04T18:01:02.580Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1756</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 29.8 does not have authorisation and CSRF in an AJAX action, allowing any authenticated users, such as subscriber, to call it and retrieve the list of customer email addresses along with their id, first name and last name</description>
      <guid isPermaLink="false">CVE-2024-1756|2024-06-04T18:01:02.580Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1310|2024-04-15T05:00:03.811Z -- unknown -- woocommerce</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1310</link>
      <description>The WooCommerce WordPress plugin before 8.6 does not prevent users with at least the contributor role from leaking products they shouldn't have access to. (e.g. private, draft and trashed products)</description>
      <guid isPermaLink="false">CVE-2024-1310|2024-04-15T05:00:03.811Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1279|2024-06-11T17:13:10.453Z -- unknown -- paid%20memberships%20pro</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1279</link>
      <description>The Paid Memberships Pro WordPress plugin before 2.12.9 does not prevent user with at least the contributor role from leaking other users' sensitive metadata.</description>
      <guid isPermaLink="false">CVE-2024-1279|2024-06-11T17:13:10.453Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1849|2024-04-15T05:00:05.321Z -- unknown -- wp%20customer%20reviews</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1849</link>
      <description>The WP Customer Reviews WordPress plugin before 3.7.1 does not validate a parameter allowing contributor and above users to redirect a page to a malicious URL</description>
      <guid isPermaLink="false">CVE-2024-1849|2024-04-15T05:00:05.321Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1664|2024-06-04T18:01:17.933Z -- unknown -- responsive%20gallery%20grid</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1664</link>
      <description>The Responsive Gallery Grid WordPress plugin before 2.3.11 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1664|2024-06-04T18:01:17.933Z</guid>
      <pubDate>Tue, 09 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1331|2024-03-18T19:05:54.788Z -- unknown -- team%20members</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1331</link>
      <description>The Team Members WordPress plugin before 5.3.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the author role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-1331|2024-03-18T19:05:54.788Z</guid>
      <pubDate>Mon, 18 Mar 2024 15:15:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1274|2024-04-02T05:15:41.805Z -- unknown -- my%20calendar</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1274</link>
      <description>The My Calendar WordPress plugin before 3.4.24 does not sanitise and escape some parameters, which could allow users with a role as low as Subscriber to perform Cross-Site Scripting attacks (depending on the permissions set by the admin)</description>
      <guid isPermaLink="false">CVE-2024-1274|2024-04-02T05:15:41.805Z</guid>
      <pubDate>Tue, 02 Apr 2024 05:15:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1219|2024-06-04T18:01:26.014Z -- unknown -- easy%20social%20feed</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1219</link>
      <description>The Easy Social Feed  WordPress plugin before 6.5.6 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-1219|2024-06-04T18:01:26.014Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1956|2024-04-08T17:28:15.741Z -- unknown -- wpb-show-core</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1956</link>
      <description>The wpb-show-core WordPress plugin before 2.7 does not sanitise and escape the parameters before outputting it back in the response of an unauthenticated request, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-1956|2024-04-08T17:28:15.741Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1106|2024-06-04T18:01:33.183Z -- unknown -- shariff%20wrapper</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1106</link>
      <description>The Shariff Wrapper WordPress plugin before 4.6.10 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1106|2024-06-04T18:01:33.183Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1487|2024-06-04T18:01:35.257Z -- unknown -- photos%20and%20files%20contest%20gallery</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1487</link>
      <description>The Photos and Files Contest Gallery WordPress plugin before 21.3.1 does not sanitize and escape some parameters, which could allow users with a role as low as author to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-1487|2024-06-04T18:01:35.257Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1983|2024-03-20T05:00:02.910Z -- unknown -- simple%20ajax%20chat</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1983</link>
      <description>The Simple Ajax Chat  WordPress plugin before 20240223 does not prevent visitors from using malicious Names when using the chat, which will be reflected unsanitized to other users.</description>
      <guid isPermaLink="false">CVE-2024-1983|2024-03-20T05:00:02.910Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1307|2024-04-15T05:00:03.590Z -- unknown -- smart%20forms</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1307</link>
      <description>The Smart Forms  WordPress plugin before 2.6.94 does not have proper authorization in some actions, which could allow users with a role as low as a subscriber to call them and perform unauthorized actions</description>
      <guid isPermaLink="false">CVE-2024-1307|2024-04-15T05:00:03.590Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5003|2024-06-07T12:22:30.164Z -- unknown -- wp%20stacker</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-5003</link>
      <description>The WP Stacker WordPress plugin through 1.8.5 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5003|2024-06-07T12:22:30.164Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5341|2024-06-05T17:54:31.073Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-5341</link>
      <description>The The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'size' attribute of the Heading Title widget in all versions up to, and including, 5.5.4 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2024-5341|2024-06-05T17:54:31.073Z</guid>
      <pubDate>Thu, 30 May 2024 05:33:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6385|2024-04-10T05:00:02.214Z -- unknown -- wordpress%20ping%20optimizer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6385</link>
      <description>The WordPress Ping Optimizer WordPress plugin through 2.35.1.3.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as clearing logs.</description>
      <guid isPermaLink="false">CVE-2023-6385|2024-04-10T05:00:02.214Z</guid>
      <pubDate>Wed, 10 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6444|2024-03-11T18:08:55.792Z -- unknown -- seriously%20simple%20podcasting</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6444</link>
      <description>The Seriously Simple Podcasting WordPress plugin before 3.0.0 discloses the Podcast owner's email address (which by default is the admin email address) via an unauthenticated crafted request.</description>
      <guid isPermaLink="false">CVE-2023-6444|2024-03-11T18:08:55.792Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6501|2024-06-04T17:16:53.985Z -- unknown -- splashscreen</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6501</link>
      <description>The Splashscreen WordPress plugin through 0.20 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-6501|2024-06-04T17:16:53.985Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6081|2024-02-12T16:07:30.513Z -- unknown -- chartjs</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6081</link>
      <description>The chartjs WordPress plugin through 2023.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-6081|2024-02-12T16:07:30.513Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:07:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6585|2024-02-27T08:30:25.818Z -- unknown -- wp%20jobsearch</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6585</link>
      <description>The WP JobSearch WordPress plugin before 2.3.4 does not validate files to be uploaded, which could allow unauthenticated attackers to upload arbitrary files such as PHP on the server</description>
      <guid isPermaLink="false">CVE-2023-6585|2024-02-27T08:30:25.818Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6584|2024-02-27T08:30:26.628Z -- unknown -- wp%20jobsearch</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6584</link>
      <description>The WP JobSearch WordPress plugin before 2.3.4 does not prevent attackers from logging-in as any users with the only knowledge of that user's email address.</description>
      <guid isPermaLink="false">CVE-2023-6584|2024-02-27T08:30:26.628Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6499|2024-02-12T16:07:33.325Z -- unknown -- lastunes</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6499</link>
      <description>The lasTunes WordPress plugin through 3.6.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-6499|2024-02-12T16:07:33.325Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6067|2024-04-15T05:00:01.200Z -- unknown -- wp%20user%20profile%20avatar</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6067</link>
      <description>The WP User Profile Avatar WordPress plugin through 1.0.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-6067|2024-04-15T05:00:01.200Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6821|2024-06-04T17:17:08.590Z -- unknown -- error%20log%20viewer%20by%20bestwebsoft</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6821</link>
      <description>The Error Log Viewer by BestWebSoft WordPress plugin before 1.1.3 contains a vulnerability that allows you to read and download PHP logs without authorization</description>
      <guid isPermaLink="false">CVE-2023-6821|2024-06-04T17:17:08.590Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6591|2024-06-04T17:17:09.838Z -- unknown -- popup%20box</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6591</link>
      <description>The Popup Box WordPress plugin before 20.9.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2023-6591|2024-06-04T17:17:09.838Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:06:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6082|2024-02-12T16:07:35.568Z -- unknown -- chartjs</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6082</link>
      <description>The chartjs WordPress plugin through 2023.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-6082|2024-02-12T16:07:35.568Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:06:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6036|2024-02-12T16:07:36.124Z -- unknown -- web3</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6036</link>
      <description>The Web3 WordPress plugin before 3.0.0 is vulnerable to an authentication bypass due to incorrect authentication checking in the login flow in functions 'handle_auth_request' and 'hadle_login_request'. This makes it possible for non authenticated attackers to log in as any existing user on the site, such as an administrator, if they have access to the username.</description>
      <guid isPermaLink="false">CVE-2023-6036|2024-02-12T16:07:36.124Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:06:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6294|2024-02-12T16:07:36.681Z -- unknown -- popup%20builder</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6294</link>
      <description>The Popup Builder WordPress plugin before 4.2.6 does not validate a parameter before making a request to it, which could allow users with the administrator role to perform SSRF attack in Multisite WordPress configurations.</description>
      <guid isPermaLink="false">CVE-2023-6294|2024-02-12T16:07:36.681Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:06:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6257|2024-06-04T17:17:20.622Z -- unknown -- inline%20related%20posts</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6257</link>
      <description>The Inline Related Posts WordPress plugin before 3.6.0 does not ensure that post content displayed via an AJAX action are accessible to the user, allowing any authenticated user, such as subscriber to retrieve the content of password protected posts</description>
      <guid isPermaLink="false">CVE-2023-6257|2024-06-04T17:17:20.622Z</guid>
      <pubDate>Thu, 11 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7202|2024-06-04T17:17:22.386Z -- unknown -- fatal%20error%20notify</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7202</link>
      <description>The Fatal Error Notify WordPress plugin before 1.5.3 does not have authorisation and CSRF checks in its test_error AJAX action, allowing any authenticated users, such as subscriber to call it and spam the admin email address with error messages. The issue is also exploitable via CSRF</description>
      <guid isPermaLink="false">CVE-2023-7202|2024-06-04T17:17:22.386Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7167|2024-02-27T08:30:24.228Z -- unknown -- persian%20fonts</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7167</link>
      <description>The Persian Fonts WordPress plugin through 1.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-7167|2024-02-27T08:30:24.228Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7203|2024-02-27T08:30:25.017Z -- unknown -- smart%20forms</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7203</link>
      <description>The Smart Forms WordPress plugin before 2.6.87 does not have authorisation in various AJAX actions, which could allow users with a role as low as subscriber to call them and perform unauthorised actions such as deleting entries. The plugin also lacks CSRF checks in some places which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as deleting entries.</description>
      <guid isPermaLink="false">CVE-2023-7203|2024-02-27T08:30:25.017Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7232|2024-03-26T05:00:02.063Z -- unknown -- backup%20and%20restore%20wordpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7232</link>
      <description>The Backup and Restore WordPress  WordPress plugin through 1.45 does not protect some log files containing sensitive information such as site configuration etc, allowing unauthenticated users to access such data</description>
      <guid isPermaLink="false">CVE-2023-7232|2024-03-26T05:00:02.063Z</guid>
      <pubDate>Tue, 26 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7253|2024-04-24T05:00:01.731Z -- unknown -- import%20wp</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7253</link>
      <description>The Import WP  WordPress plugin before 2.13.1 does not prevent users with the administrator role from pinging conducting SSRF attacks, which may be a problem in multisite configurations.</description>
      <guid isPermaLink="false">CVE-2023-7253|2024-04-24T05:00:01.731Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7252|2024-06-04T17:17:24.507Z -- unknown -- tickera</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7252</link>
      <description>The Tickera  WordPress plugin before 3.5.2.5 does not prevent users from leaking other users' tickets.</description>
      <guid isPermaLink="false">CVE-2023-7252|2024-06-04T17:17:24.507Z</guid>
      <pubDate>Mon, 22 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7233|2024-02-12T16:07:32.182Z -- unknown -- gigpress</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7233</link>
      <description>The GigPress WordPress plugin through 2.3.29 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-7233|2024-02-12T16:07:32.182Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7198|2024-02-27T08:30:27.438Z -- unknown -- wp%20dashboard%20notes</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7198</link>
      <description>The WP Dashboard Notes WordPress plugin before 1.0.11 is vulnerable to Insecure Direct Object References (IDOR) in post_id= parameter. Authenticated users are able to delete private notes associated with different user accounts. This poses a significant security risk as it violates the principle of least privilege and compromises the integrity and privacy of user data.</description>
      <guid isPermaLink="false">CVE-2023-7198|2024-02-27T08:30:27.438Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7115|2024-06-04T17:17:26.166Z -- unknown -- page%20builder%3A%20pagelayer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7115</link>
      <description>The Page Builder: Pagelayer WordPress plugin before 1.8.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-7115|2024-06-04T17:17:26.166Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7085|2024-03-18T19:05:50.838Z -- unknown -- scalable%20vector%20graphics%20%28svg%29</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7085</link>
      <description>The Scalable Vector Graphics (SVG) WordPress plugin through 3.4 does not sanitize uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2023-7085|2024-03-18T19:05:50.838Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7247|2024-03-11T18:08:58.602Z -- unknown -- login%20as%20user%20or%20customer</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7247</link>
      <description>The Login as User or Customer WordPress plugin through 3.8 does not prevent users to log in as any other user on the site.</description>
      <guid isPermaLink="false">CVE-2023-7247|2024-03-11T18:08:58.602Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7246|2024-03-20T05:00:02.302Z -- unknown -- system%20dashboard</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7246</link>
      <description>The System Dashboard WordPress plugin before 2.8.10 does not sanitize and escape some parameters, which could allow administrators in multisite WordPress configurations to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-7246|2024-03-20T05:00:02.302Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7236|2024-06-04T17:17:28.635Z -- unknown -- backup%20bolt</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7236</link>
      <description>The Backup Bolt WordPress plugin through 1.3.0 is vulnerable to Information Exposure via the unprotected access of debug logs. This makes it possible for unauthenticated attackers to retrieve the debug log which may contain information like system errors which could contain sensitive information.</description>
      <guid isPermaLink="false">CVE-2023-7236|2024-06-04T17:17:28.635Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7164|2024-06-06T13:04:21.160Z -- unknown -- backwpup</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7164</link>
      <description>The BackWPup WordPress plugin before 4.0.4 does not prevent visitors from leaking key information about ongoing backups, allowing unauthenticated attackers to download backups of a site's database.</description>
      <guid isPermaLink="false">CVE-2023-7164|2024-06-06T13:04:21.160Z</guid>
      <pubDate>Mon, 08 Apr 2024 17:28:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7165|2024-02-27T08:30:30.074Z -- unknown -- jetbackup</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7165</link>
      <description>The JetBackup WordPress plugin before 2.0.9.9 doesn't use index files to prevent public directory listing of sensitive directories in certain configurations, which allows malicious actors to leak backup files.</description>
      <guid isPermaLink="false">CVE-2023-7165|2024-02-27T08:30:30.074Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7201|2024-04-15T05:00:01.572Z -- unknown -- everest%20backup</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7201</link>
      <description>The Everest Backup  WordPress plugin before 2.2.5 does not properly validate backup files to be uploaded, allowing high privilege users such as admin to upload arbitrary files on the server even when they should not be allowed to (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-7201|2024-04-15T05:00:01.572Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4826|2024-06-04T17:27:21.114Z -- unknown -- socialdriver</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4826</link>
      <description>The SocialDriver WordPress theme before version 2024 has a prototype pollution vulnerability that could allow an attacker to inject arbitrary properties resulting in a cross-site scripting (XSS) attack.</description>
      <guid isPermaLink="false">CVE-2023-4826|2024-06-04T17:27:21.114Z</guid>
      <pubDate>Fri, 23 Feb 2024 09:14:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5971|2024-05-09T06:00:02.319Z -- unknown -- save%20as%20pdf%20plugin%20by%20pdfcrowd</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5971</link>
      <description>The Save as PDF Plugin by Pdfcrowd WordPress plugin before 3.2.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-5971|2024-05-09T06:00:02.319Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4924|2024-06-12T12:21:07.876Z -- unknown -- social%20sharing%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4924</link>
      <description>The Social Sharing Plugin  WordPress plugin before 3.3.63 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4924|2024-06-12T12:21:07.876Z</guid>
      <pubDate>Wed, 12 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0427|2024-06-12T17:43:43.893Z -- unknown -- arforms%20-%20premium%20wordpress%20form%20builder%20plugin</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0427</link>
      <description>The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.4.1 does not properly escape user-controlled input when it is reflected in some of its AJAX actions.</description>
      <guid isPermaLink="false">CVE-2024-0427|2024-06-12T17:43:43.893Z</guid>
      <pubDate>Wed, 12 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4149|2024-06-13T06:00:03.095Z -- unknown -- floating%20chat%20widget%3A%20contact%20chat%20icons%2C%20whatsapp%2C%20telegram%20chat%2C%20line%20messenger%2C%20wechat%2C%20email%2C%20sms%2C%20call%20button</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4149</link>
      <description>The Floating Chat Widget: Contact Chat Icons, WhatsApp, Telegram Chat, Line Messenger, WeChat, Email, SMS, Call Button  WordPress plugin before 3.2.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-4149|2024-06-13T06:00:03.095Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4145|2024-06-13T06:00:02.892Z -- unknown -- search%20%26%20replace</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4145</link>
      <description>The Search &amp; Replace WordPress plugin before 3.2.2 does not sanitize and escape a parameter before using it in a SQL statement, allowing admins to perform SQL injection attacks (such as within a multi-site network).</description>
      <guid isPermaLink="false">CVE-2024-4145|2024-06-13T06:00:02.892Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2762|2024-06-13T06:00:02.252Z -- unknown -- foogallery</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2762</link>
      <description>The FooGallery  WordPress plugin before 2.4.15, foogallery-premium WordPress plugin before 2.4.15 does not validate and escape some of its Gallery settings before outputting them back in the page, which could allow users with a role as low as Author to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-2762|2024-06-13T06:00:02.252Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3552|2024-06-13T06:00:02.709Z -- unknown -- web%20directory%20free</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3552</link>
      <description>The Web Directory Free WordPress plugin before 1.7.0 does not sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection with different techniques like UNION, Time-Based and Error-Based.</description>
      <guid isPermaLink="false">CVE-2024-3552|2024-06-13T06:00:02.709Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3032|2024-06-13T06:00:02.512Z -- unknown -- themify%20builder</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3032</link>
      <description>Themify Builder WordPress plugin before 7.5.8 does not validate a parameter before redirecting the user to its value, leading to an Open Redirect issue</description>
      <guid isPermaLink="false">CVE-2024-3032|2024-06-13T06:00:02.512Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4149|2024-06-13T19:19:49.107Z -- unknown -- floating%20chat%20widget%3A%20contact%20chat%20icons%2C%20whatsapp%2C%20telegram%20chat%2C%20line%20messenger%2C%20wechat%2C%20email%2C%20sms%2C%20call%20button</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4149</link>
      <description>The Floating Chat Widget: Contact Chat Icons, WhatsApp, Telegram Chat, Line Messenger, WeChat, Email, SMS, Call Button  WordPress plugin before 3.2.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-4149|2024-06-13T19:19:49.107Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2762|2024-06-13T19:33:15.890Z -- unknown -- foogallery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2762</link>
      <description>The FooGallery  WordPress plugin before 2.4.15, foogallery-premium WordPress plugin before 2.4.15 does not validate and escape some of its Gallery settings before outputting them back in the page, which could allow users with a role as low as Author to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-2762|2024-06-13T19:33:15.890Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3992|2024-06-14T06:00:03.910Z -- unknown -- amen</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3992</link>
      <description>The Amen WordPress plugin through 3.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3992|2024-06-14T06:00:03.910Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4270|2024-06-14T06:00:04.481Z -- unknown -- svgmagic</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4270</link>
      <description>The SVGMagic WordPress plugin through 1.1 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4270|2024-06-14T06:00:04.481Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3754|2024-06-14T06:00:02.574Z -- unknown -- alemha%20watermarker</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3754</link>
      <description>The Alemha watermarker WordPress plugin through 1.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3754|2024-06-14T06:00:02.574Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3978|2024-06-14T06:00:03.710Z -- unknown -- wordpress%20jitsi%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3978</link>
      <description>The WordPress Jitsi Shortcode WordPress plugin through 0.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3978|2024-06-14T06:00:03.710Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4751|2024-06-14T06:00:05.079Z -- unknown -- wp%20prayer%20ii</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4751</link>
      <description>The WP Prayer II WordPress plugin through 2.4.7 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4751|2024-06-14T06:00:05.079Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4271|2024-06-14T06:00:04.687Z -- unknown -- svgator</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4271</link>
      <description>The SVGator  WordPress plugin through 1.2.6 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4271|2024-06-14T06:00:04.687Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3971|2024-06-14T06:00:03.148Z -- unknown -- similarity</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3971</link>
      <description>The Similarity WordPress plugin through 3.0 does not have CSRF check in place when resetting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3971|2024-06-14T06:00:03.148Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3966|2024-06-14T06:00:02.940Z -- unknown -- pray%20for%20me</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3966</link>
      <description>The Pray For Me WordPress plugin through 1.0.4 does not sanitise and escape some parameters, which could unauthenticated visitors to perform Cross-Site Scripting attacks that trigger when an admin visits the Prayer Requests in the WP Admin</description>
      <guid isPermaLink="false">CVE-2024-3966|2024-06-14T06:00:02.940Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4005|2024-06-14T06:00:04.285Z -- unknown -- social%20pixel</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4005</link>
      <description>The Social Pixel WordPress plugin through 2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4005|2024-06-14T06:00:04.285Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5155|2024-06-14T06:00:05.267Z -- unknown -- inquiry%20cart</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5155</link>
      <description>The Inquiry cart WordPress plugin through 3.4.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5155|2024-06-14T06:00:05.267Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3972|2024-06-14T06:00:03.351Z -- unknown -- similarity</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3972</link>
      <description>The Similarity WordPress plugin through 3.0 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3972|2024-06-14T06:00:03.351Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3993|2024-06-14T06:00:04.102Z -- unknown -- azan%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3993</link>
      <description>The AZAN Plugin WordPress plugin through 0.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3993|2024-06-14T06:00:04.102Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2218|2024-06-14T06:00:02.377Z -- unknown -- luckywp%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2218</link>
      <description>The LuckyWP Table of Contents WordPress plugin through 2.1.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2218|2024-06-14T06:00:02.377Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1295|2024-06-14T06:00:02.149Z -- unknown -- events-calendar-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1295</link>
      <description>The events-calendar-pro WordPress plugin before 6.4.0.1, The Events Calendar WordPress plugin before 6.4.0.1 does not prevent users with at least the contributor role from leaking details about events they shouldn't have access to. (e.g. password-protected events, drafts, etc.)</description>
      <guid isPermaLink="false">CVE-2024-1295|2024-06-14T06:00:02.149Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3977|2024-06-14T06:00:03.530Z -- unknown -- wordpress%20jitsi%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3977</link>
      <description>The WordPress Jitsi Shortcode WordPress plugin through 0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3977|2024-06-14T06:00:03.530Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3965|2024-06-14T06:00:02.754Z -- unknown -- pray%20for%20me</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3965</link>
      <description>The Pray For Me WordPress plugin through 1.0.4 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3965|2024-06-14T06:00:02.754Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4480|2024-06-14T06:00:04.871Z -- unknown -- wp%20prayer%20ii</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4480</link>
      <description>The WP Prayer II WordPress plugin through 2.4.7 does not have CSRF check in place when updating its email settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4480|2024-06-14T06:00:04.871Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3754|2024-06-14T14:21:40.530Z -- unknown -- alemha%20watermarker</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3754</link>
      <description>The Alemha watermarker WordPress plugin through 1.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3754|2024-06-14T14:21:40.530Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4271|2024-06-14T14:15:43.748Z -- unknown -- svgator</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4271</link>
      <description>The SVGator  WordPress plugin through 1.2.6 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4271|2024-06-14T14:15:43.748Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3993|2024-06-14T16:24:11.338Z -- unknown -- azan%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3993</link>
      <description>The AZAN Plugin WordPress plugin through 0.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3993|2024-06-14T16:24:11.338Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2218|2024-06-14T16:27:15.055Z -- unknown -- luckywp%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2218</link>
      <description>The LuckyWP Table of Contents WordPress plugin through 2.1.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2218|2024-06-14T16:27:15.055Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4270|2024-06-15T20:42:47.018Z -- unknown -- svgmagic</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4270</link>
      <description>The SVGMagic WordPress plugin through 1.1 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4270|2024-06-15T20:42:47.018Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3236|2024-06-17T13:34:06.345Z -- unknown -- popup%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3236</link>
      <description>The Popup Builder WordPress plugin before 1.1.33 does not sanitise and escape some of its Notification fields, which could allow users such as contributor and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-3236|2024-06-17T13:34:06.345Z</guid>
      <pubDate>Mon, 17 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4094|2024-06-18T13:08:22.407Z -- unknown -- simple%20share%20buttons%20adder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4094</link>
      <description>The Simple Share Buttons Adder WordPress plugin before 8.5.1 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-4094|2024-06-18T13:08:22.407Z</guid>
      <pubDate>Tue, 18 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5172|2024-06-18T13:49:52.876Z -- unknown -- expert%20invoice</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5172</link>
      <description>The Expert Invoice WordPress plugin through 1.0.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5172|2024-06-18T13:49:52.876Z</guid>
      <pubDate>Tue, 18 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4565|2024-06-20T06:00:02.546Z -- unknown -- advanced%20custom%20fields%20%28acf%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4565</link>
      <description>The Advanced Custom Fields (ACF) WordPress plugin before 6.3, Advanced Custom Fields Pro WordPress plugin before 6.3 allows you to display custom field values for any post via shortcode without checking for the correct access</description>
      <guid isPermaLink="false">CVE-2024-4565|2024-06-20T06:00:02.546Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5522|2024-06-20T06:00:04.044Z -- unknown -- html5%20video%20player</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5522</link>
      <description>The HTML5 Video Player  WordPress plugin before 2.5.27 does not sanitize and escape a parameter from a REST route before using it in a SQL statement, allowing unauthenticated users to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2024-5522|2024-06-20T06:00:04.044Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5475|2024-06-20T06:00:03.582Z -- unknown -- responsive%20video%20embed</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5475</link>
      <description>The Responsive video embed WordPress plugin before 0.5.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-5475|2024-06-20T06:00:03.582Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5475|2024-06-20T15:47:53.785Z -- unknown -- responsive%20video%20embed</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5475</link>
      <description>The Responsive video embed WordPress plugin before 0.5.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-5475|2024-06-20T15:47:53.785Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5475|2024-06-20T20:24:07.492Z -- unknown -- responsive%20video%20embed</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5475</link>
      <description>The Responsive video embed WordPress plugin before 0.5.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-5475|2024-06-20T20:24:07.492Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5455|2024-06-21T03:24:40.287Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5455</link>
      <description>The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Local File Inclusion in all versions up to, and including, 5.5.4 via the 'magazine_style' parameter within the Dynamic Smart Showcase widget. This makes it possible for authenticated attackers, with Contributor-level access and above, to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other “safe” file types can be uploaded and included.</description>
      <guid isPermaLink="false">CVE-2024-5455|2024-06-21T03:24:40.287Z</guid>
      <pubDate>Fri, 21 Jun 2024 03:24:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4970|2024-06-21T11:45:31.337Z -- unknown -- widget%20bundle</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4970</link>
      <description>The Widget Bundle WordPress plugin through 2.0.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4970|2024-06-21T11:45:31.337Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4382|2024-06-21T11:47:32.527Z -- unknown -- cb%20%28legacy%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4382</link>
      <description>The CB (legacy) WordPress plugin through 0.9.4.18 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting codes, timeframes, and bookings via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4382|2024-06-21T11:47:32.527Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0672|2024-06-21T17:09:46.633Z -- unknown -- pz-linkcard</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0672</link>
      <description>The Pz-LinkCard WordPress plugin through 2.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-0672|2024-06-21T17:09:46.633Z</guid>
      <pubDate>Thu, 28 Mar 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4900|2024-06-24T06:00:01.863Z -- unknown -- seopress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4900</link>
      <description>The SEOPress  WordPress plugin before 7.8 does not validate and escape one of its Post settings, which could allow contributor and above role to perform Open redirect attacks against any user viewing a malicious post</description>
      <guid isPermaLink="false">CVE-2024-4900|2024-06-24T06:00:01.863Z</guid>
      <pubDate>Mon, 24 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4899|2024-06-24T06:00:01.586Z -- unknown -- seopress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4899</link>
      <description>The SEOPress  WordPress plugin before 7.8 does not sanitise and escape some of its Post settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-4899|2024-06-24T06:00:01.586Z</guid>
      <pubDate>Mon, 24 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5447|2024-06-24T19:22:12.801Z -- unknown -- paypal%20pay%20now%2C%20buy%20now%2C%20donation%20and%20cart%20buttons%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5447</link>
      <description>The PayPal Pay Now, Buy Now, Donation and Cart Buttons Shortcode WordPress plugin through 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5447|2024-06-24T19:22:12.801Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4757|2024-06-25T13:09:07.802Z -- unknown -- logo%20manager%20for%20enamad</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4757</link>
      <description>The Logo Manager For Enamad WordPress plugin through 0.7.0 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4757|2024-06-25T13:09:07.802Z</guid>
      <pubDate>Tue, 25 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4957|2024-06-26T06:00:03.703Z -- unknown -- frontend%20checklist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4957</link>
      <description>The Frontend Checklist WordPress plugin through 2.3.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4957|2024-06-26T06:00:03.703Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5199|2024-06-26T06:00:04.960Z -- unknown -- spotify%20play%20button</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5199</link>
      <description>The Spotify Play Button WordPress plugin through 1.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-5199|2024-06-26T06:00:04.960Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4959|2024-06-26T06:00:03.926Z -- unknown -- frontend%20checklist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4959</link>
      <description>The Frontend Checklist WordPress plugin through 2.3.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4959|2024-06-26T06:00:03.926Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5473|2024-06-26T06:00:05.192Z -- unknown -- simple%20photoswipe</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5473</link>
      <description>The Simple Photoswipe WordPress plugin through 0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5473|2024-06-26T06:00:05.192Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4758|2024-06-26T06:00:02.801Z -- unknown -- muslim%20prayer%20time%20bd</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4758</link>
      <description>The Muslim Prayer Time BD WordPress plugin through 2.4 does not have CSRF check in place when reseting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4758|2024-06-26T06:00:02.801Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5071|2024-06-26T06:00:04.151Z -- unknown -- bookster</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5071</link>
      <description>The Bookster  WordPress plugin through 1.1.0 allows adding sensitive parameters when validating appointments allowing attackers to manipulate the data sent when booking an appointment (the request body) to change its status from pending to approved.</description>
      <guid isPermaLink="false">CVE-2024-5071|2024-06-26T06:00:04.151Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5169|2024-06-26T06:00:04.539Z -- unknown -- video%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5169</link>
      <description>The Video Widget WordPress plugin through 1.2.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5169|2024-06-26T06:00:04.539Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3633|2024-06-26T06:00:02.176Z -- unknown -- webp%20%26%20svg%20support</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3633</link>
      <description>The WebP &amp; SVG Support WordPress plugin through 1.4.0 does not sanitise uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2024-3633|2024-06-26T06:00:02.176Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5573|2024-06-26T06:00:05.425Z -- unknown -- easy%20table%20of%20contents</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5573</link>
      <description>The Easy Table of Contents WordPress plugin before 2.0.66 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-5573|2024-06-26T06:00:05.425Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5473|2024-06-26T14:20:45.424Z -- unknown -- simple%20photoswipe</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5473</link>
      <description>The Simple Photoswipe WordPress plugin through 0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5473|2024-06-26T14:20:45.424Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3633|2024-06-26T14:07:31.057Z -- unknown -- webp%20%26%20svg%20support</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3633</link>
      <description>The WebP &amp; SVG Support WordPress plugin through 1.4.0 does not sanitise uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2024-3633|2024-06-26T14:07:31.057Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4759|2024-06-26T18:57:16.129Z -- unknown -- mime%20types%20extended</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4759</link>
      <description>The Mime Types Extended WordPress plugin through 0.11 does not sanitise uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2024-4759|2024-06-26T18:57:16.129Z</guid>
      <pubDate>Tue, 25 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1330|2024-06-27T06:00:02.163Z -- unknown -- kadence-blocks-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1330</link>
      <description>The kadence-blocks-pro WordPress plugin before 2.3.8 does not prevent users with at least the contributor role using some of its shortcode's functionalities to leak arbitrary options from the database.</description>
      <guid isPermaLink="false">CVE-2024-1330|2024-06-27T06:00:02.163Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4664|2024-06-27T06:00:03.949Z -- unknown -- wp%20chat%20app</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4664</link>
      <description>The WP Chat App WordPress plugin before 3.6.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admins to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2024-4664|2024-06-27T06:00:03.949Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3111|2024-06-27T06:00:03.428Z -- unknown -- interactive%20content</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3111</link>
      <description>The Interactive Content  WordPress plugin before 1.15.8 does not validate uploads which could allow a Contributors and above to update malicious SVG files, leading to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2024-3111|2024-06-27T06:00:03.428Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4704|2024-06-27T06:00:04.176Z -- unknown -- contact%20form%207</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4704</link>
      <description>The Contact Form 7 WordPress plugin before 5.9.5 has an open redirect that allows an attacker to utilize a false URL and redirect to the URL of their choosing.</description>
      <guid isPermaLink="false">CVE-2024-4704|2024-06-27T06:00:04.176Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1330|2024-06-27T17:27:39.245Z -- unknown -- kadence-blocks-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1330</link>
      <description>The kadence-blocks-pro WordPress plugin before 2.3.8 does not prevent users with at least the contributor role using some of its shortcode's functionalities to leak arbitrary options from the database.</description>
      <guid isPermaLink="false">CVE-2024-1330|2024-06-27T17:27:39.245Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5730|2024-06-28T14:21:56.436Z -- unknown -- pagerank%20tools</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5730</link>
      <description>The Pagerank tools WordPress plugin through 1.1.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5730|2024-06-28T14:21:56.436Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6130|2024-07-01T06:00:01.641Z -- unknown -- form%20maker%20by%2010web</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6130</link>
      <description>The Form Maker by 10Web  WordPress plugin before 1.15.26 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6130|2024-07-01T06:00:01.641Z</guid>
      <pubDate>Mon, 01 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4934|2024-07-01T06:00:01.172Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4934</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.0.2 does not validate and escape some of its Quiz fields before outputting them back in a page/post where the Quiz is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4934|2024-07-01T06:00:01.172Z</guid>
      <pubDate>Mon, 01 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5344|2024-07-01T18:34:06.517Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5344</link>
      <description>The The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the ‘forgoturl’ attribute within the plugin's WP Login &amp; Register widget in all versions up to, and including, 5.5.6 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description>
      <guid isPermaLink="false">CVE-2024-5344|2024-07-01T18:34:06.517Z</guid>
      <pubDate>Fri, 21 Jun 2024 02:05:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4899|2024-07-01T18:29:32.961Z -- unknown -- seopress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4899</link>
      <description>The SEOPress  WordPress plugin before 7.8 does not sanitise and escape some of its Post settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-4899|2024-07-01T18:29:32.961Z</guid>
      <pubDate>Mon, 24 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3999|2024-07-02T15:31:50.935Z -- unknown -- eazydocs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3999</link>
      <description>The EazyDocs  WordPress plugin before 2.5.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3999|2024-07-02T15:31:50.935Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4900|2024-07-02T20:25:03.092Z -- unknown -- seopress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4900</link>
      <description>The SEOPress  WordPress plugin before 7.8 does not validate and escape one of its Post settings, which could allow contributor and above role to perform Open redirect attacks against any user viewing a malicious post</description>
      <guid isPermaLink="false">CVE-2024-4900|2024-07-02T20:25:03.092Z</guid>
      <pubDate>Mon, 24 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2040|2024-07-03T13:35:44.655Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2040</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make users join private groups via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2040|2024-07-03T13:35:44.655Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5606|2024-07-03T20:19:23.812Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5606</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.0.2 is vulnerable does not validate and escape the question_id parameter in the qsm_bulk_delete_question_from_database AJAX action, leading to a SQL injection exploitable by Contributors and above role</description>
      <guid isPermaLink="false">CVE-2024-5606|2024-07-03T20:19:23.812Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5728|2024-07-03T20:41:05.795Z -- unknown -- animated%20al%20list</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5728</link>
      <description>The Animated AL List WordPress plugin through 1.0.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5728|2024-07-03T20:41:05.795Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4384|2024-07-03T20:48:29.537Z -- unknown -- cssable%20countdown</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4384</link>
      <description>The CSSable Countdown WordPress plugin through 1.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4384|2024-07-03T20:48:29.537Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4969|2024-07-03T20:42:46.748Z -- unknown -- widget%20bundle</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4969</link>
      <description>The Widget Bundle WordPress plugin through 2.0.0 does not have CSRF checks when logging Widgets, which could allow attackers to make logged in admin enable/disable widgets via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4969|2024-07-03T20:42:46.748Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2376|2024-07-03T20:01:39.193Z -- unknown -- wpqa%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2376</link>
      <description>The WPQA Builder WordPress plugin before 6.1.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2376|2024-07-03T20:01:39.193Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2235|2024-07-05T12:41:55.534Z -- unknown -- himer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2235</link>
      <description>The Himer WordPress theme before 2.1.1 does not have CSRF checks in some places, which could allow attackers to make users vote on any polls, including those they don't have access to via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2235|2024-07-05T12:41:55.534Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2322|2024-07-05T17:22:24.577Z -- unknown -- woocommerce%20cart%20abandonment%20recovery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2322</link>
      <description>The WooCommerce Cart Abandonment Recovery WordPress plugin before 1.2.27 does not have CSRF check in its bulk actions, which could allow attackers to make logged in admins delete arbitrary email templates as well as delete and unsubscribe users from abandoned orders via CSRF attacks.</description>
      <guid isPermaLink="false">CVE-2024-2322|2024-07-05T17:22:24.577Z</guid>
      <pubDate>Wed, 03 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1068|2024-07-05T17:22:13.805Z -- unknown -- 404%20solution</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1068</link>
      <description>The 404 Solution WordPress plugin before 2.35.8 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2024-1068|2024-07-05T17:22:13.805Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3188|2024-07-05T21:22:02.468Z -- unknown -- wp%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3188</link>
      <description>The WP Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 7.1.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3188|2024-07-05T21:22:02.468Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0905|2024-07-05T21:22:15.290Z -- unknown -- fancy%20product%20designer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0905</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.8 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against unauthenticated and admin-level users</description>
      <guid isPermaLink="false">CVE-2024-0905|2024-07-05T21:22:15.290Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5570|2024-07-08T20:41:08.852Z -- unknown -- simple%20photoswipe</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5570</link>
      <description>The Simple Photoswipe WordPress plugin through 0.1 does not have authorisation check when updating its settings, which could allow any authenticated users, such as subscriber to update them</description>
      <guid isPermaLink="false">CVE-2024-5570|2024-07-08T20:41:08.852Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5729|2024-07-08T20:01:10.464Z -- unknown -- simple%20al%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5729</link>
      <description>The Simple AL Slider WordPress plugin through 1.2.10 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5729|2024-07-08T20:01:10.464Z</guid>
      <pubDate>Fri, 28 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5802|2024-07-09T15:13:24.401Z -- unknown -- url%20shortener%20by%20mythemeshop</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5802</link>
      <description>The URL Shortener by Myhop WordPress plugin through 1.0.17 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-5802|2024-07-09T15:13:24.401Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5488|2024-07-10T20:02:36.599Z -- unknown -- seopress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5488</link>
      <description>The SEOPress  WordPress plugin before 7.9 does not properly protect some of its REST API routes, which combined with another Object Injection vulnerability can allow unauthenticated attackers to unserialize malicious gadget chains, compromising the site if a suitable chain is present.</description>
      <guid isPermaLink="false">CVE-2024-5488|2024-07-10T20:02:36.599Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2375|2024-07-11T14:27:35.555Z -- unknown -- wpqa%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2375</link>
      <description>The WPQA Builder WordPress plugin before 6.1.1 does not sanitise and escape some of its Slider settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2375|2024-07-11T14:27:35.555Z</guid>
      <pubDate>Wed, 03 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6025|2024-07-11T14:15:48.397Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6025</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.0.5 does not sanitise and escape some of its Quiz settings, which could allow contributors and higher to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6025|2024-07-11T14:15:48.397Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4475|2024-07-11T14:24:26.720Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4475</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not have CSRF check when clearing logs, which could allow attackers to make a logged in admin clear the logs them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4475|2024-07-11T14:24:26.720Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4474|2024-07-11T14:25:22.083Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4474</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4474|2024-07-11T14:25:22.083Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4477|2024-07-11T14:24:35.827Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4477</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not sanitise and escape some of its log data before outputting them back in an admin dashboard, leading to an Unauthenticated Stored Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-4477|2024-07-11T14:24:35.827Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4620|2024-07-11T14:35:56.435Z -- unknown -- arforms%20-%20premium%20wordpress%20form%20builder%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4620</link>
      <description>The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.6 allows unauthenticated users to modify uploaded files in such a way that PHP code can be uploaded when an upload file input is included on a form</description>
      <guid isPermaLink="false">CVE-2024-4620|2024-07-11T14:35:56.435Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6138|2024-07-11T14:09:08.884Z -- unknown -- secure%20copy%20content%20protection%20and%20content%20locking</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6138</link>
      <description>The Secure Copy Content Protection and Content Locking WordPress plugin before 4.0.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-6138|2024-07-11T14:09:08.884Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6026|2024-07-11T14:07:51.087Z -- unknown -- slider%20by%2010web</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6026</link>
      <description>The Slider by 10Web  WordPress plugin before 1.2.56 does not sanitise and escape some of its Slide options, which could allow authenticated users with access to the Sliders (by default Administrator, however this can be changed via the Slider by 10Web  WordPress plugin before 1.2.56's options) and the ability to add images (Editor+) to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6026|2024-07-11T14:07:51.087Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2696|2024-07-12T14:33:17.290Z -- unknown -- socialdriver-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2696</link>
      <description>The socialdriver-framework WordPress plugin before 2024.04.30 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2696|2024-07-12T14:33:17.290Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6024|2024-07-12T14:24:45.218Z -- unknown -- contentlock</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6024</link>
      <description>The ContentLock WordPress plugin through 1.0.3 does not have CSRF check in place when deleting groups or emails, which could allow attackers to make a logged in admin remove them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6024|2024-07-12T14:24:45.218Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0974|2024-07-12T14:39:44.851Z -- unknown -- social%20media%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0974</link>
      <description>The Social Media Widget WordPress plugin before 4.0.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0974|2024-07-12T14:39:44.851Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2858|2024-07-12T16:25:49.288Z -- unknown -- simple%20buttons%20creator</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2858</link>
      <description>The Simple Buttons Creator WordPress plugin through 1.04 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2858|2024-07-12T16:25:49.288Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4655|2024-07-12T20:41:17.314Z -- unknown -- ultimate%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4655</link>
      <description>The Ultimate Blocks  WordPress plugin before 3.1.9 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4655|2024-07-12T20:41:17.314Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2102|2024-07-12T21:11:29.048Z -- unknown -- salon%20booking%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2102</link>
      <description>The Salon booking system WordPress plugin before 9.6.3 does not properly sanitize and escape the 'Mobile Phone' field and 'sms_prefix' parameter when booking an appointment, allowing customers to conduct Stored Cross-Site Scripting attacks. The payload gets triggered when an admin visits the 'Bookings' page and the malicious script is executed in the admin context.</description>
      <guid isPermaLink="false">CVE-2024-2102|2024-07-12T21:11:29.048Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4753|2024-07-12T20:22:50.152Z -- unknown -- wp%20secure%20maintenance</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4753</link>
      <description>The WP Secure Maintenance WordPress plugin before 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4753|2024-07-12T20:22:50.152Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5626|2024-07-12T20:17:44.270Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5626</link>
      <description>The Inline Related Posts WordPress plugin before 3.7.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5626|2024-07-12T20:17:44.270Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5287|2024-07-13T11:56:55.619Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5287</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in user change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5287|2024-07-13T11:56:55.619Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3753|2024-07-13T22:56:11.000Z -- unknown -- hostel</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3753</link>
      <description>The Hostel WordPress plugin before 1.1.5.3 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3753|2024-07-13T22:56:11.000Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5028|2024-07-13T22:54:14.789Z -- unknown -- cm%20wordpress%20search%20and%20replace%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5028</link>
      <description>The CM WordPress Search And Replace Plugin WordPress plugin before 1.3.9 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5028|2024-07-13T22:54:14.789Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5033|2024-07-13T22:58:08.451Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5033</link>
      <description>The SULly WordPress plugin before 4.3.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5033|2024-07-13T22:58:08.451Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5630|2024-07-15T12:26:40.099Z -- unknown -- insert%20or%20embed%20articulate%20content%20into%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5630</link>
      <description>The Insert or Embed Articulate Content into WordPress plugin before 4.3000000024 does not prevent authors from uploading arbitrary files to the site, which may allow them to upload PHP shells on affected sites.</description>
      <guid isPermaLink="false">CVE-2024-5630|2024-07-15T12:26:40.099Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4749|2024-07-15T14:13:23.215Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4749</link>
      <description>The wp-eMember WordPress plugin before 10.3.9 does not sanitize and escape the "fieldId" parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2024-4749|2024-07-15T14:13:23.215Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5075|2024-07-15T14:56:45.766Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5075</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5075|2024-07-15T14:56:45.766Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5032|2024-07-15T14:00:58.599Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5032</link>
      <description>The SULly WordPress plugin before 4.3.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5032|2024-07-15T14:00:58.599Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5281|2024-07-15T14:23:57.239Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5281</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5281|2024-07-15T14:23:57.239Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4217|2024-07-15T14:42:02.992Z -- unknown -- shortcodes-ultimate-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4217</link>
      <description>The shortcodes-ultimate-pro WordPress plugin before 7.1.5 does not properly escape some of its shortcodes' settings, making it possible for attackers with a Contributor account to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4217|2024-07-15T14:42:02.992Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4272|2024-07-15T14:34:09.083Z -- unknown -- support%20svg</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4272</link>
      <description>The Support SVG  WordPress plugin before 1.1.0 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4272|2024-07-15T14:34:09.083Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5034|2024-07-15T14:28:47.130Z -- unknown -- sully</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5034</link>
      <description>The SULly WordPress plugin before 4.3.1 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5034|2024-07-15T14:28:47.130Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3963|2024-07-15T14:57:22.231Z -- unknown -- giveaways%20and%20contests%20by%20rafflepress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3963</link>
      <description>The Giveaways and Contests by RafflePress  WordPress plugin before 1.12.14 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3963|2024-07-15T14:57:22.231Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5644|2024-07-15T14:19:36.372Z -- unknown -- tournamatch</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5644</link>
      <description>The Tournamatch WordPress plugin before 4.6.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5644|2024-07-15T14:19:36.372Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6075|2024-07-15T14:01:09.916Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6075</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6075|2024-07-15T14:01:09.916Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5713|2024-07-15T16:41:12.588Z -- unknown -- if-so%20dynamic%20content%20personalization</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5713</link>
      <description>The If-So Dynamic Content Personalization WordPress plugin before 1.8.0.4 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2024-5713|2024-07-15T16:41:12.588Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5080|2024-07-15T16:49:49.740Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5080</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not validate files to be uploaded, which could allow admins to upload arbitrary files such as PHP on the server</description>
      <guid isPermaLink="false">CVE-2024-5080|2024-07-15T16:49:49.740Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6075|2024-07-15T16:09:05.215Z -- unknown -- wp-cart-for-digital-products</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6075</link>
      <description>The wp-cart-for-digital-products WordPress plugin before 8.5.5 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6075|2024-07-15T16:09:05.215Z</guid>
      <pubDate>Mon, 15 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5282|2024-07-15T16:45:54.048Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5282</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5282|2024-07-15T16:45:54.048Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5286|2024-07-15T18:40:40.075Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5286</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5286|2024-07-15T18:40:40.075Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5079|2024-07-15T18:34:02.301Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5079</link>
      <description>The wp-eMember WordPress plugin before 10.6.7 does not sanitise and escape some of the fields when members register, which allows unauthenticated users to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5079|2024-07-15T18:34:02.301Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6070|2024-07-15T18:42:51.706Z -- unknown -- if-so%20dynamic%20content%20personalization</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6070</link>
      <description>The If-So Dynamic Content Personalization WordPress plugin before 1.8.0.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6070|2024-07-15T18:42:51.706Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5002|2024-07-15T18:29:55.419Z -- unknown -- user%20submitted%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5002</link>
      <description>The User Submitted Posts  WordPress plugin before 20240516 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5002|2024-07-15T18:29:55.419Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3964|2024-07-16T13:56:58.674Z -- unknown -- product%20enquiry%20for%20woocommerce</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3964</link>
      <description>The Product Enquiry for WooCommerce WordPress plugin before 3.1.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3964|2024-07-16T13:56:58.674Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5472|2024-07-16T13:30:55.450Z -- unknown -- wp%20quicklatex</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5472</link>
      <description>The WP QuickLaTeX WordPress plugin before 3.8.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5472|2024-07-16T13:30:55.450Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1295|2024-07-16T17:02:16.338Z -- unknown -- events-calendar-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1295</link>
      <description>The events-calendar-pro WordPress plugin before 6.4.0.1, The Events Calendar WordPress plugin before 6.4.0.1 does not prevent users with at least the contributor role from leaking details about events they shouldn't have access to. (e.g. password-protected events, drafts, etc.)</description>
      <guid isPermaLink="false">CVE-2024-1295|2024-07-16T17:02:16.338Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2907|2024-07-17T13:53:10.473Z -- unknown -- agca</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2907</link>
      <description>The AGCA  WordPress plugin before 7.2.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-2907|2024-07-17T13:53:10.473Z</guid>
      <pubDate>Thu, 25 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2430|2024-07-17T13:59:13.988Z -- unknown -- website%20content%20in%20page%20or%20post</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2430</link>
      <description>The Website Content in Page or Post WordPress plugin before 2024.04.09 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2430|2024-07-17T13:59:13.988Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6164|2024-07-18T06:00:04.048Z -- unknown -- filter%20%26%20grids</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6164</link>
      <description>The Filter &amp; Grids WordPress plugin before 2.8.33 is vulnerable to Local File Inclusion via the post_layout parameter. This makes it possible for an unauthenticated attacker to include and execute PHP files on the server, allowing the execution of any PHP code in those files.</description>
      <guid isPermaLink="false">CVE-2024-6164|2024-07-18T06:00:04.048Z</guid>
      <pubDate>Thu, 18 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4305|2024-07-18T20:34:14.260Z -- unknown -- post%20grid%20gutenberg%20blocks%20and%20wordpress%20blog%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4305</link>
      <description>The Post Grid Gutenberg Blocks and WordPress Blog Plugin  WordPress plugin before 4.1.0 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4305|2024-07-18T20:34:14.260Z</guid>
      <pubDate>Mon, 17 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3972|2024-07-18T20:47:08.427Z -- unknown -- similarity</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3972</link>
      <description>The Similarity WordPress plugin through 3.0 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3972|2024-07-18T20:47:08.427Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7269|2024-07-19T14:20:56.967Z -- unknown -- artplacer%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7269</link>
      <description>The ArtPlacer Widget WordPress plugin before 2.21.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-7269|2024-07-19T14:20:56.967Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6205|2024-07-19T17:16:31.657Z -- unknown -- payplus%20payment%20gateway</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6205</link>
      <description>The PayPlus Payment Gateway WordPress plugin before 6.6.9 does not properly sanitise and escape a parameter before using it in a SQL statement via a WooCommerce API route available to unauthenticated users, leading to an SQL injection vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-6205|2024-07-19T17:16:31.657Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5973|2024-07-22T06:00:05.733Z -- unknown -- masterstudy%20lms%20wordpress%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5973</link>
      <description>The MasterStudy LMS WordPress Plugin  WordPress plugin before 3.3.24 does not prevent students from creating instructor accounts, which could be used to get access to functionalities they shouldn't have.</description>
      <guid isPermaLink="false">CVE-2024-5973|2024-07-22T06:00:05.733Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6244|2024-07-22T06:00:06.341Z -- unknown -- pz%20frontend%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6244</link>
      <description>The PZ Frontend Manager WordPress plugin before 1.0.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6244|2024-07-22T06:00:06.341Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6271|2024-07-22T06:00:06.608Z -- unknown -- community%20events</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6271</link>
      <description>The Community Events WordPress plugin before 1.5 does not have CSRF check in place when deleting events, which could allow attackers to make a logged in admin delete arbitrary events via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6271|2024-07-22T06:00:06.608Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5004|2024-07-22T06:00:01.790Z -- unknown -- cm%20popup%20plugin%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5004</link>
      <description>The CM Popup Plugin for WordPress  WordPress plugin before 1.6.6 does not sanitise and escape some of the campaign settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5004|2024-07-22T06:00:01.790Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6243|2024-07-22T06:00:06.064Z -- unknown -- html%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6243</link>
      <description>The HTML Forms  WordPress plugin before 1.3.33 does not sanitize and escape the form message inputs, allowing high-privilege users, such as administrators, to perform Stored Cross-Site Scripting (XSS) attacks even when the unfiltered_html capability is disabled.</description>
      <guid isPermaLink="false">CVE-2024-6243|2024-07-22T06:00:06.064Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5529|2024-07-22T06:00:04.206Z -- unknown -- wp%20quicklatex</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5529</link>
      <description>The WP QuickLaTeX WordPress plugin before 3.8.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-5529|2024-07-22T06:00:04.206Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6243|2024-07-22T13:51:48.217Z -- unknown -- html%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6243</link>
      <description>The HTML Forms  WordPress plugin before 1.3.33 does not sanitize and escape the form message inputs, allowing high-privilege users, such as administrators, to perform Stored Cross-Site Scripting (XSS) attacks even when the unfiltered_html capability is disabled.</description>
      <guid isPermaLink="false">CVE-2024-6243|2024-07-22T13:51:48.217Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3111|2024-07-22T16:16:56.131Z -- unknown -- interactive%20content</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3111</link>
      <description>The Interactive Content  WordPress plugin before 1.15.8 does not validate uploads which could allow a Contributors and above to update malicious SVG files, leading to Stored Cross-Site Scripting issues</description>
      <guid isPermaLink="false">CVE-2024-3111|2024-07-22T16:16:56.131Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5076|2024-07-22T19:48:53.025Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5076</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-5076|2024-07-22T19:48:53.025Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5811|2024-07-22T19:57:14.393Z -- unknown -- simple%20video%20directory</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5811</link>
      <description>The Simple Video Directory WordPress plugin before 1.4.4 does not sanitise and escape some of its settings, which could allow contributors and higher to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5811|2024-07-22T19:57:14.393Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4260|2024-07-23T13:07:40.802Z -- unknown -- page%20builder%20gutenberg%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4260</link>
      <description>The Page Builder Gutenberg Blocks  WordPress plugin before 3.1.12 does not prevent users from pinging arbitrary hosts via some of its shortcodes, which could allow high privilege users such as contributors to perform SSRF attacks.</description>
      <guid isPermaLink="false">CVE-2024-4260|2024-07-23T13:07:40.802Z</guid>
      <pubDate>Tue, 23 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6231|2024-07-23T13:25:53.653Z -- unknown -- request%20a%20quote</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6231</link>
      <description>The Request a Quote WordPress plugin before 2.4.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6231|2024-07-23T13:25:53.653Z</guid>
      <pubDate>Tue, 23 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3903|2024-07-23T18:41:20.904Z -- unknown -- add%20custom%20css%20and%20js</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3903</link>
      <description>The Add Custom CSS and JS WordPress plugin through 1.20 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in as author and above add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3903|2024-07-23T18:41:20.904Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6094|2024-07-24T06:00:02.906Z -- unknown -- wp%20ulike</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6094</link>
      <description>The WP ULike  WordPress plugin before 4.7.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-6094|2024-07-24T06:00:02.906Z</guid>
      <pubDate>Wed, 24 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1401|2024-07-24T16:21:24.237Z -- unknown -- profile%20box%20shortcode%20and%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1401</link>
      <description>The Profile Box Shortcode And Widget WordPress plugin before 1.2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1401|2024-07-24T16:21:24.237Z</guid>
      <pubDate>Tue, 19 Mar 2024 14:28:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3710|2024-07-24T18:29:07.399Z -- unknown -- image%20photo%20gallery%20final%20tiles%20grid</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3710</link>
      <description>The Image Photo Gallery Final Tiles Grid WordPress plugin before 3.6.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3710|2024-07-24T18:29:07.399Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2972|2024-07-24T18:27:11.083Z -- unknown -- floating%20chat%20widget%3A%20contact%20chat%20icons%2C%20whatsapp%2C%20telegram%20chat%2C%20line%20messenger%2C%20wechat%2C%20email%2C%20sms%2C%20call%20button</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2972</link>
      <description>The Floating Chat Widget: Contact Chat Icons, WhatsApp, Telegram Chat, Line Messenger, WeChat, Email, SMS, Call Button  WordPress plugin before 3.1.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2972|2024-07-24T18:27:11.083Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5074|2024-07-24T20:14:48.087Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5074</link>
      <description>The wp-eMember WordPress plugin before 10.6.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5074|2024-07-24T20:14:48.087Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3692|2024-07-24T19:58:15.932Z -- unknown -- gutenverse</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3692</link>
      <description>The Gutenverse  WordPress plugin before 1.9.1 does not validate the htmlTag option in various of its block before outputting it back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3692|2024-07-24T19:58:15.932Z</guid>
      <pubDate>Fri, 03 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4977|2024-07-24T19:59:02.122Z -- unknown -- index%20wp%20mysql%20for%20speed</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4977</link>
      <description>The Index WP MySQL For Speed WordPress plugin before 1.4.18 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-4977|2024-07-24T19:59:02.122Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6584|2024-07-25T16:03:39.160Z -- unknown -- wp%20jobsearch</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6584</link>
      <description>The WP JobSearch WordPress plugin before 2.3.4 does not prevent attackers from logging-in as any users with the only knowledge of that user's email address.</description>
      <guid isPermaLink="false">CVE-2023-6584|2024-07-25T16:03:39.160Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3261|2024-07-26T14:50:48.209Z -- unknown -- strong%20testimonials</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3261</link>
      <description>The Strong Testimonials WordPress plugin before 3.1.12 does not validate and escape some of its Testimonial fields before outputting them back in a page/post, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks. The attack requires a specific view to be performed</description>
      <guid isPermaLink="false">CVE-2024-3261|2024-07-26T14:50:48.209Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4483|2024-07-29T06:00:01.115Z -- unknown -- email%20encoder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4483</link>
      <description>The Email Encoder  WordPress plugin before 2.2.2 does not escape the WP_Email_Encoder_Bundle_options[protection_text] parameter before outputting it back in an attribute in an admin page, leading to a Stored Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-4483|2024-07-29T06:00:01.115Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5883|2024-07-29T06:00:07.364Z -- unknown -- ultimate%20classified%20listings</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5883</link>
      <description>The Ultimate Classified Listings WordPress plugin before 1.3 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-5883|2024-07-29T06:00:07.364Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6366|2024-07-29T06:00:08.248Z -- unknown -- user%20profile%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6366</link>
      <description>The User Profile Builder  WordPress plugin before 3.11.8 does not have proper authorisation, allowing unauthenticated users to upload media files via the async upload functionality of WP.</description>
      <guid isPermaLink="false">CVE-2024-6366|2024-07-29T06:00:08.248Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6487|2024-07-29T06:00:08.552Z -- unknown -- inline%20related%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6487</link>
      <description>The Inline Related Posts WordPress plugin before 3.8.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6487|2024-07-29T06:00:08.552Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6362|2024-07-29T06:00:07.759Z -- unknown -- ultimate%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6362</link>
      <description>The Ultimate Blocks  WordPress plugin before 3.2.0 does not validate and escape some of its post-grid block attributes before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6362|2024-07-29T06:00:07.759Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5882|2024-07-29T06:00:06.284Z -- unknown -- ultimate%20classified%20listings</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5882</link>
      <description>The Ultimate Classified Listings WordPress plugin before 1.3 does not validate the `ucl_page` and `layout` parameters allowing unauthenticated users to access PHP files on the server from the listings page</description>
      <guid isPermaLink="false">CVE-2024-5882|2024-07-29T06:00:06.284Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5285|2024-07-29T06:00:01.890Z -- unknown -- wp-affiliate-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5285</link>
      <description>The wp-affiliate-platform WordPress plugin before 6.5.2 does not have CSRF check in place when deleting affiliates, which could allow attackers to make a logged in user change delete them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5285|2024-07-29T06:00:01.890Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6490|2024-07-29T14:33:55.817Z -- unknown -- master%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6490</link>
      <description>During testing of the Master Slider  WordPress plugin through 3.9.10, a CSRF vulnerability was found, which allows an unauthorized user to manipulate requests on behalf of the victim and thereby delete all of the sliders inside Master Slider  WordPress plugin through 3.9.10.</description>
      <guid isPermaLink="false">CVE-2024-6490|2024-07-29T14:33:55.817Z</guid>
      <pubDate>Fri, 26 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6244|2024-07-29T16:54:19.840Z -- unknown -- pz%20frontend%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6244</link>
      <description>The PZ Frontend Manager WordPress plugin before 1.0.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6244|2024-07-29T16:54:19.840Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6362|2024-07-29T16:10:22.866Z -- unknown -- ultimate%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6362</link>
      <description>The Ultimate Blocks  WordPress plugin before 3.2.0 does not validate and escape some of its post-grid block attributes before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-6362|2024-07-29T16:10:22.866Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4664|2024-07-29T19:49:29.334Z -- unknown -- wp%20chat%20app</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4664</link>
      <description>The WP Chat App WordPress plugin before 3.6.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admins to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2024-4664|2024-07-29T19:49:29.334Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5604|2024-07-29T19:06:09.171Z -- unknown -- bug%20library</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5604</link>
      <description>The Bug Library WordPress plugin before 2.1.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5604|2024-07-29T19:06:09.171Z</guid>
      <pubDate>Fri, 19 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6021|2024-07-30T06:00:09.678Z -- unknown -- donation%20block%20for%20paypal</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6021</link>
      <description>The Donation Block For PayPal WordPress plugin through 2.1.0 does not sanitise and escape form submissions, leading to a stored cross-site scripting vulnerability</description>
      <guid isPermaLink="false">CVE-2024-6021|2024-07-30T06:00:09.678Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1286|2024-07-30T06:00:05.284Z -- unknown -- pmpro-membership-maps</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1286</link>
      <description>The pmpro-membership-maps WordPress plugin before 0.7 does not prevent users with at least the contributor role from leaking sensitive information about users with a membership on the site.</description>
      <guid isPermaLink="false">CVE-2024-1286|2024-07-30T06:00:05.284Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5765|2024-07-30T06:00:08.234Z -- unknown -- wpstickybar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5765</link>
      <description>The WpStickyBar  WordPress plugin through 2.1.0 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2024-5765|2024-07-30T06:00:08.234Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5809|2024-07-30T06:00:09.175Z -- unknown -- wp%20ajax%20contact%20form</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5809</link>
      <description>The WP Ajax Contact Form WordPress plugin through 2.2.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against admin users</description>
      <guid isPermaLink="false">CVE-2024-5809|2024-07-30T06:00:09.175Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5975|2024-07-30T06:00:09.447Z -- unknown -- cz%20loan%20management</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5975</link>
      <description>The CZ Loan Management WordPress plugin through 1.1 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2024-5975|2024-07-30T06:00:09.447Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3986|2024-07-30T06:00:07.510Z -- unknown -- sportspress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3986</link>
      <description>The SportsPress  WordPress plugin before 2.7.22 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3986|2024-07-30T06:00:07.510Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5808|2024-07-30T06:00:08.895Z -- unknown -- wp%20ajax%20contact%20form</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5808</link>
      <description>The WP Ajax Contact Form WordPress plugin through 2.2.2 does not have CSRF check in place when deleting emails from the email list, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5808|2024-07-30T06:00:08.895Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6224|2024-07-30T06:00:10.109Z -- unknown -- send%20email%20only%20on%20reply%20to%20my%20comment</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6224</link>
      <description>The Send email only on Reply to My Comment WordPress plugin through 1.0.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6224|2024-07-30T06:00:10.109Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1287|2024-07-30T06:00:06.053Z -- unknown -- pmpro-member-directory</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1287</link>
      <description>The pmpro-member-directory WordPress plugin before 1.2.6 does not prevent users with at least the contributor role from leaking other users' sensitive information, including password hashes.</description>
      <guid isPermaLink="false">CVE-2024-1287|2024-07-30T06:00:06.053Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5807|2024-07-30T06:00:08.495Z -- unknown -- business%20card</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5807</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not prevent high privilege users like administrators from uploading malicious PHP files, which could allow them to run arbitrary code on servers hosting their site, even in MultiSite configurations.</description>
      <guid isPermaLink="false">CVE-2024-5807|2024-07-30T06:00:08.495Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6230|2024-07-30T06:00:10.533Z -- unknown -- %D9%BE%D9%84%D8%A7%DA%AF%DB%8C%D9%86%20%D9%BE%D8%B1%D8%AF%D8%A7%D8%AE%D8%AA%20%D8%AF%D9%84%D8%AE%D9%88%D8%A7%D9%87</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6230</link>
      <description>The پلاگین پرداخت دلخواه WordPress plugin through 2.9.8 does not have CSRF check in place when resetting its form fields, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6230|2024-07-30T06:00:10.533Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6223|2024-07-30T06:00:09.898Z -- unknown -- send%20email%20only%20on%20reply%20to%20my%20comment</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6223</link>
      <description>The Send email only on Reply to My Comment WordPress plugin through 1.0.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6223|2024-07-30T06:00:09.898Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4096|2024-07-30T06:00:07.893Z -- unknown -- responsive%20tabs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4096</link>
      <description>The Responsive Tabs WordPress plugin through 4.0.8 does not sanitise and escape some of its Tab settings, which could allow high privilege users such as Contributors and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4096|2024-07-30T06:00:07.893Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3113|2024-07-30T06:00:06.437Z -- unknown -- formflow%3A%20whatsapp%20social%20and%20advanced%20form%20builder%20with%20easy%20lead%20collection</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3113</link>
      <description>The FormFlow: WhatsApp Social and Advanced Form Builder with Easy Lead Collection WordPress plugin before 2.12.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3113|2024-07-30T06:00:06.437Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6226|2024-07-30T06:00:10.319Z -- unknown -- wpstickybar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6226</link>
      <description>The WpStickyBar  WordPress plugin through 2.1.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6226|2024-07-30T06:00:10.319Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3669|2024-07-30T06:00:06.976Z -- unknown -- web%20directory%20free</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3669</link>
      <description>The Web Directory Free WordPress plugin before 1.7.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3669|2024-07-30T06:00:06.976Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6536|2024-07-30T06:00:10.760Z -- unknown -- zephyr%20project%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6536</link>
      <description>The Zephyr Project Manager WordPress plugin before 3.3.99 does not sanitise and escape some of its settings, which could allow high privilege users such as editors and admins to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6536|2024-07-30T06:00:10.760Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6021|2024-07-30T14:27:40.127Z -- unknown -- donation%20block%20for%20paypal</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6021</link>
      <description>The Donation Block For PayPal WordPress plugin through 2.1.0 does not sanitise and escape form submissions, leading to a stored cross-site scripting vulnerability</description>
      <guid isPermaLink="false">CVE-2024-6021|2024-07-30T14:27:40.127Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5808|2024-07-30T14:28:15.917Z -- unknown -- wp%20ajax%20contact%20form</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5808</link>
      <description>The WP Ajax Contact Form WordPress plugin through 2.2.2 does not have CSRF check in place when deleting emails from the email list, which could allow attackers to make a logged in admin perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5808|2024-07-30T14:28:15.917Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3113|2024-07-30T14:01:38.877Z -- unknown -- formflow%3A%20whatsapp%20social%20and%20advanced%20form%20builder%20with%20easy%20lead%20collection</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3113</link>
      <description>The FormFlow: WhatsApp Social and Advanced Form Builder with Easy Lead Collection WordPress plugin before 2.12.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3113|2024-07-30T14:01:38.877Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3669|2024-07-30T14:34:57.850Z -- unknown -- web%20directory%20free</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3669</link>
      <description>The Web Directory Free WordPress plugin before 1.7.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3669|2024-07-30T14:34:57.850Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6536|2024-07-30T14:05:31.987Z -- unknown -- zephyr%20project%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6536</link>
      <description>The Zephyr Project Manager WordPress plugin before 3.3.99 does not sanitise and escape some of its settings, which could allow high privilege users such as editors and admins to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6536|2024-07-30T14:05:31.987Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6164|2024-07-30T17:13:18.492Z -- unknown -- filter%20%26%20grids</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6164</link>
      <description>The Filter &amp; Grids WordPress plugin before 2.8.33 is vulnerable to Local File Inclusion via the post_layout parameter. This makes it possible for an unauthenticated attacker to include and execute PHP files on the server, allowing the execution of any PHP code in those files.</description>
      <guid isPermaLink="false">CVE-2024-6164|2024-07-30T17:13:18.492Z</guid>
      <pubDate>Thu, 18 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6408|2024-07-31T06:00:03.358Z -- unknown -- slider%20by%2010web</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6408</link>
      <description>The Slider by 10Web  WordPress plugin before 1.2.57 does not sanitise and escape its Slider Title, which could allow high privilege users such as editors and above to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-6408|2024-07-31T06:00:03.358Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6272|2024-07-31T06:00:02.822Z -- unknown -- spidercontacts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6272</link>
      <description>The SpiderContacts WordPress plugin through 1.1.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6272|2024-07-31T06:00:02.822Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6412|2024-07-31T06:00:04.014Z -- unknown -- html%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6412</link>
      <description>The HTML Forms  WordPress plugin before 1.3.34 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-6412|2024-07-31T06:00:04.014Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6165|2024-07-31T06:00:02.242Z -- unknown -- wanotifier</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6165</link>
      <description>The WANotifier  WordPress plugin before 2.6.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-6165|2024-07-31T06:00:02.242Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6695|2024-07-31T06:00:04.649Z -- unknown -- user%20profile%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6695</link>
      <description>it's possible for an attacker to gain administrative access without having any kind of account on the targeted site and perform unauthorized actions. This is due to improper logic flow on the user registration process.</description>
      <guid isPermaLink="false">CVE-2024-6695|2024-07-31T06:00:04.649Z</guid>
      <pubDate>Wed, 31 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6223|2024-07-31T14:26:48.577Z -- unknown -- send%20email%20only%20on%20reply%20to%20my%20comment</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6223</link>
      <description>The Send email only on Reply to My Comment WordPress plugin through 1.0.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6223|2024-07-31T14:26:48.577Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2583|2024-07-31T16:24:54.606Z -- unknown -- wp%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2583</link>
      <description>The WP Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 7.0.5 does not properly escape some of its shortcodes attributes before they are echoed back to users, making it possible for users with the contributor role to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-2583|2024-07-31T16:24:54.606Z</guid>
      <pubDate>Sat, 13 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5975|2024-07-31T18:25:56.292Z -- unknown -- cz%20loan%20management</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5975</link>
      <description>The CZ Loan Management WordPress plugin through 1.1 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2024-5975|2024-07-31T18:25:56.292Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4756|2024-07-31T18:24:52.972Z -- unknown -- wp%20backpack</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4756</link>
      <description>The WP Backpack WordPress plugin through 2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4756|2024-07-31T18:24:52.972Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1747|2024-08-01T06:00:02.536Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1747</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 30.2 does not have authorisation and CSRF in various AJAX actions, allowing any authenticated users, such as subscriber, to call them and update/delete/create customer metadata, also leading to Stored Cross-Site Scripting due to the lack of escaping of said metadata values.</description>
      <guid isPermaLink="false">CVE-2024-1747|2024-08-01T06:00:02.536Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6496|2024-08-01T06:00:05.664Z -- unknown -- light%20poll</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6496</link>
      <description>The Light Poll WordPress plugin through 1.0.0 does not have CSRF checks when deleting polls, which could allow attackers to make logged in users perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-6496|2024-08-01T06:00:05.664Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3983|2024-08-01T06:00:05.102Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3983</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 30.1 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting customers via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3983|2024-08-01T06:00:05.102Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4090|2024-08-01T06:00:05.396Z -- unknown -- floating%20notification%20bar%2C%20sticky%20menu%20on%20scroll%2C%20announcement%20banner%2C%20and%20sticky%20header%20for%20any%20theme</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4090</link>
      <description>The Floating Notification Bar, Sticky Menu on Scroll, Announcement Banner, and Sticky Header for Any   WordPress plugin before 2.7.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-4090|2024-08-01T06:00:05.396Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2843|2024-08-01T06:00:03.997Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2843</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 30.1 does not have CSRF checks in some places, which could allow attackers to make logged in admin users delete users via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2843|2024-08-01T06:00:03.997Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2872|2024-08-01T06:00:04.565Z -- unknown -- socialdriver-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-2872</link>
      <description>The socialdriver-framework WordPress plugin before 2024.04.30 does not sanitise and escape some of its settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2872|2024-08-01T06:00:04.565Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6529|2024-08-01T06:00:05.939Z -- unknown -- ultimate%20classified%20listings</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6529</link>
      <description>The Ultimate Classified Listings WordPress plugin before 1.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-6529|2024-08-01T06:00:05.939Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1747|2024-08-01T14:24:07.026Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1747</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 30.2 does not have authorisation and CSRF in various AJAX actions, allowing any authenticated users, such as subscriber, to call them and update/delete/create customer metadata, also leading to Stored Cross-Site Scripting due to the lack of escaping of said metadata values.</description>
      <guid isPermaLink="false">CVE-2024-1747|2024-08-01T14:24:07.026Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3983|2024-08-01T16:08:02.885Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3983</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 30.1 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting customers via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3983|2024-08-01T16:08:02.885Z</guid>
      <pubDate>Thu, 01 Aug 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0427|2024-08-01T18:04:49.774Z -- unknown -- arforms%20-%20premium%20wordpress%20form%20builder%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0427</link>
      <description>The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.4.1 does not properly escape user-controlled input when it is reflected in some of its AJAX actions.</description>
      <guid isPermaLink="false">CVE-2024-0427|2024-08-01T18:04:49.774Z</guid>
      <pubDate>Wed, 12 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0337|2024-08-01T18:18:19.215Z -- unknown -- travelpayouts%3A%20all%20travel%20brands%20in%20one%20place</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0337</link>
      <description>The Travelpayouts: All Travel Brands in One Place WordPress plugin through 1.1.15 is vulnerable to Open Redirect due to insufficient validation on the travelpayouts_redirect variable. This makes it possible for unauthenticated attackers to redirect users to potentially malicious sites if they can successfully trick them into performing an action.</description>
      <guid isPermaLink="false">CVE-2024-0337|2024-08-01T18:18:19.215Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1958|2024-08-01T18:56:22.557Z -- unknown -- wpb-show-core</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1958</link>
      <description>The WPB Show Core WordPress plugin before 2.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin or unauthenticated users</description>
      <guid isPermaLink="false">CVE-2024-1958|2024-08-01T18:56:22.557Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0855|2024-08-01T18:18:18.940Z -- unknown -- spiffy%20calendar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0855</link>
      <description>The Spiffy Calendar WordPress plugin before 4.9.9 doesn't check the event_author parameter, and allows any user to alter it when creating an event, leading to deceiving users/admins that a page was created by a Contributor+.</description>
      <guid isPermaLink="false">CVE-2024-0855|2024-08-01T18:18:18.940Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0820|2024-08-01T18:18:19.145Z -- unknown -- jobs%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0820</link>
      <description>The Jobs for WordPress plugin before 2.7.4 does not sanitise and escape some parameters, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-0820|2024-08-01T18:18:19.145Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0420|2024-08-01T18:04:49.657Z -- unknown -- mappress%20maps%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0420</link>
      <description>The MapPress Maps for WordPress plugin before 2.88.15 does not sanitize and escape the map title when outputting it back in the admin dashboard, allowing Contributors and above roles to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-0420|2024-08-01T18:04:49.657Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1487|2024-08-01T18:40:21.404Z -- unknown -- photos%20and%20files%20contest%20gallery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1487</link>
      <description>The Photos and Files Contest Gallery WordPress plugin before 21.3.1 does not sanitize and escape some parameters, which could allow users with a role as low as author to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-1487|2024-08-01T18:40:21.404Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1286|2024-08-01T18:33:25.435Z -- unknown -- pmpro-membership-maps</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1286</link>
      <description>The pmpro-membership-maps WordPress plugin before 0.7 does not prevent users with at least the contributor role from leaking sensitive information about users with a membership on the site.</description>
      <guid isPermaLink="false">CVE-2024-1286|2024-08-01T18:33:25.435Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1752|2024-08-01T18:48:22.029Z -- unknown -- font%20farsi</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1752</link>
      <description>The Font Farsi WordPress plugin through 1.6.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1752|2024-08-01T18:48:22.029Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0673|2024-08-01T18:11:35.653Z -- unknown -- pz-linkcard</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0673</link>
      <description>The Pz-LinkCard WordPress plugin through 2.5.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-0673|2024-08-01T18:11:35.653Z</guid>
      <pubDate>Thu, 28 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1106|2024-08-01T18:26:30.503Z -- unknown -- shariff%20wrapper</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1106</link>
      <description>The Shariff Wrapper WordPress plugin before 4.6.10 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1106|2024-08-01T18:26:30.503Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1292|2024-08-01T18:33:25.542Z -- unknown -- wpb-show-core</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1292</link>
      <description>The WPB Show Core WordPress plugin before 2.7 does not sanitise and escape some parameters before outputting them back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-1292|2024-08-01T18:33:25.542Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1331|2024-08-01T18:33:25.390Z -- unknown -- team%20members</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1331</link>
      <description>The Team Members WordPress plugin before 5.3.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the author role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-1331|2024-08-01T18:33:25.390Z</guid>
      <pubDate>Mon, 18 Mar 2024 15:15:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1664|2024-08-01T18:48:21.799Z -- unknown -- responsive%20gallery%20grid</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1664</link>
      <description>The Responsive Gallery Grid WordPress plugin before 2.3.11 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1664|2024-08-01T18:48:21.799Z</guid>
      <pubDate>Tue, 09 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0421|2024-08-01T18:04:49.663Z -- unknown -- mappress%20maps%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0421</link>
      <description>The MapPress Maps for WordPress plugin before 2.88.16 does not ensure that posts to be retrieve via an AJAX action is a public map, allowing unauthenticated users to read arbitrary private and draft posts.</description>
      <guid isPermaLink="false">CVE-2024-0421|2024-08-01T18:04:49.663Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0904|2024-08-01T18:18:19.034Z -- unknown -- fancy%20product%20designer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0904</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.81 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0904|2024-08-01T18:18:19.034Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1746|2024-08-01T18:48:21.820Z -- unknown -- testimonial%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1746</link>
      <description>The Testimonial Slider WordPress plugin before 2.3.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1746|2024-08-01T18:48:21.820Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1333|2024-08-01T18:33:25.475Z -- unknown -- responsive%20pricing%20table</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1333</link>
      <description>The Responsive Pricing Table WordPress plugin before 5.1.11 does not validate and escape some of its Pricing Table options before outputting them back in a page/post where the related shortcode is embed, which could allow users with the author role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1333|2024-08-01T18:33:25.475Z</guid>
      <pubDate>Mon, 18 Mar 2024 15:15:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1231|2024-08-01T18:33:25.085Z -- unknown -- cm%20download%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1231</link>
      <description>The CM Download Manager  WordPress plugin before 2.9.0 does not have CSRF checks in some places, which could allow attackers to make logged in admins unpublish downloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-1231|2024-08-01T18:33:25.085Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0672|2024-08-01T18:11:35.671Z -- unknown -- pz-linkcard</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0672</link>
      <description>The Pz-LinkCard WordPress plugin through 2.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-0672|2024-08-01T18:11:35.671Z</guid>
      <pubDate>Thu, 28 Mar 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0858|2024-08-01T18:18:18.975Z -- unknown -- innovs%20hr</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0858</link>
      <description>The Innovs HR WordPress plugin through 1.0.3.4 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as adding them as employees.</description>
      <guid isPermaLink="false">CVE-2024-0858|2024-08-01T18:18:18.975Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0868|2024-08-01T18:18:18.696Z -- unknown -- coreactivity%3A%20activity%20logging%20plugin%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0868</link>
      <description>The coreActivity: Activity Logging plugin for WordPress plugin before 2.1 retrieved IP addresses of requests via headers such X-FORWARDED to log them, allowing users to spoof them by providing an arbitrary value</description>
      <guid isPermaLink="false">CVE-2024-0868|2024-08-01T18:18:18.696Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1526|2024-08-01T18:40:21.555Z -- unknown -- hubbub%20lite</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1526</link>
      <description>The Hubbub Lite  WordPress plugin before 1.33.1 does not ensure that user have access to password protected post before displaying its content in a meta tag.</description>
      <guid isPermaLink="false">CVE-2024-1526|2024-08-01T18:40:21.555Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1310|2024-08-01T18:33:25.395Z -- unknown -- woocommerce</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1310</link>
      <description>The WooCommerce WordPress plugin before 8.6 does not prevent users with at least the contributor role from leaking products they shouldn't have access to. (e.g. private, draft and trashed products)</description>
      <guid isPermaLink="false">CVE-2024-1310|2024-08-01T18:33:25.395Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1756|2024-08-01T18:48:21.980Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1756</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 29.8 does not have authorisation and CSRF in an AJAX action, allowing any authenticated users, such as subscriber, to call it and retrieve the list of customer email addresses along with their id, first name and last name</description>
      <guid isPermaLink="false">CVE-2024-1756|2024-08-01T18:48:21.980Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1849|2024-08-01T18:56:22.286Z -- unknown -- wp%20customer%20reviews</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1849</link>
      <description>The WP Customer Reviews WordPress plugin before 3.7.1 does not validate a parameter allowing contributor and above users to redirect a page to a malicious URL</description>
      <guid isPermaLink="false">CVE-2024-1849|2024-08-01T18:56:22.286Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0902|2024-08-01T18:18:18.981Z -- unknown -- fancy%20product%20designer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0902</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.81 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0902|2024-08-01T18:18:18.981Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1219|2024-08-01T18:33:25.329Z -- unknown -- easy%20social%20feed</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1219</link>
      <description>The Easy Social Feed  WordPress plugin before 6.5.6 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-1219|2024-08-01T18:33:25.329Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1316|2024-08-01T18:33:25.700Z -- unknown -- event%20tickets%20and%20registration</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1316</link>
      <description>The Event Tickets and Registration WordPress plugin before 5.8.1, Events Tickets Plus WordPress plugin before 5.9.1 does not prevent users with at least the contributor role from leaking the existence of certain events they shouldn't have access to. (e.g. draft, private, pending review, pw-protected, and trashed events).</description>
      <guid isPermaLink="false">CVE-2024-1316|2024-08-01T18:33:25.700Z</guid>
      <pubDate>Mon, 04 Mar 2024 21:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1564|2024-08-01T18:40:21.441Z -- unknown -- wp-schema-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1564</link>
      <description>The wp-schema-pro WordPress plugin before 2.7.16 does not validate post access allowing a contributor user to access custom fields on any post regardless of post type or status via a shortcode</description>
      <guid isPermaLink="false">CVE-2024-1564|2024-08-01T18:40:21.441Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1279|2024-08-01T18:33:25.359Z -- unknown -- paid%20memberships%20pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1279</link>
      <description>The Paid Memberships Pro WordPress plugin before 2.12.9 does not prevent user with at least the contributor role from leaking other users' sensitive metadata.</description>
      <guid isPermaLink="false">CVE-2024-1279|2024-08-01T18:33:25.359Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1274|2024-08-01T18:33:25.374Z -- unknown -- my%20calendar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1274</link>
      <description>The My Calendar WordPress plugin before 3.4.24 does not sanitise and escape some parameters, which could allow users with a role as low as Subscriber to perform Cross-Site Scripting attacks (depending on the permissions set by the admin)</description>
      <guid isPermaLink="false">CVE-2024-1274|2024-08-01T18:33:25.374Z</guid>
      <pubDate>Tue, 02 Apr 2024 05:15:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1287|2024-08-01T18:33:25.572Z -- unknown -- pmpro-member-directory</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1287</link>
      <description>The pmpro-member-directory WordPress plugin before 1.2.6 does not prevent users with at least the contributor role from leaking other users' sensitive information, including password hashes.</description>
      <guid isPermaLink="false">CVE-2024-1287|2024-08-01T18:33:25.572Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1845|2024-08-01T18:56:22.201Z -- unknown -- vikrentcar%20car%20rental%20management%20system</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1845</link>
      <description>The VikRentCar Car Rental Management System WordPress plugin before 1.3.2 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-1845|2024-08-01T18:56:22.201Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1068|2024-08-01T18:26:30.460Z -- unknown -- 404%20solution</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1068</link>
      <description>The 404 Solution WordPress plugin before 2.35.8 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2024-1068|2024-08-01T18:26:30.460Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0719|2024-08-01T18:11:35.778Z -- unknown -- tabs%20shortcode%20and%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0719</link>
      <description>The Tabs Shortcode and Widget WordPress plugin through 1.17 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-0719|2024-08-01T18:11:35.778Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0856|2024-08-01T18:18:18.979Z -- unknown -- appointment%20booking%20calendar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0856</link>
      <description>The Appointment Booking Calendar WordPress plugin before 1.3.83 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as adding a booking to the calendar without paying.</description>
      <guid isPermaLink="false">CVE-2024-0856|2024-08-01T18:18:18.979Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1330|2024-08-01T18:33:25.586Z -- unknown -- kadence-blocks-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1330</link>
      <description>The kadence-blocks-pro WordPress plugin before 2.3.8 does not prevent users with at least the contributor role using some of its shortcode's functionalities to leak arbitrary options from the database.</description>
      <guid isPermaLink="false">CVE-2024-1330|2024-08-01T18:33:25.586Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1401|2024-08-01T18:40:20.383Z -- unknown -- profile%20box%20shortcode%20and%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1401</link>
      <description>The Profile Box Shortcode And Widget WordPress plugin before 1.2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1401|2024-08-01T18:40:20.383Z</guid>
      <pubDate>Tue, 19 Mar 2024 14:28:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1660|2024-08-01T18:48:21.539Z -- unknown -- top%20bar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1660</link>
      <description>The Top Bar WordPress plugin before 3.0.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1660|2024-08-01T18:48:21.539Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1589|2024-08-01T18:40:21.454Z -- unknown -- sendpress%20newsletters</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1589</link>
      <description>The SendPress Newsletters WordPress plugin through 1.23.11.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1589|2024-08-01T18:40:21.454Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1232|2024-08-01T18:33:25.282Z -- unknown -- cm%20download%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1232</link>
      <description>The CM Download Manager  WordPress plugin before 2.9.0 does not have CSRF checks in some places, which could allow attackers to make logged in admins delete downloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-1232|2024-08-01T18:33:25.282Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0881|2024-08-01T18:18:18.980Z -- unknown -- post%20grid%2C%20form%20maker%2C%20popup%20maker%2C%20woocommerce%20blocks%2C%20post%20blocks%2C%20post%20carousel</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0881</link>
      <description>The Post Grid, Form Maker, Popup Maker, WooCommerce Blocks, Post Blocks, Post Carousel  WordPress plugin before 2.2.76 does not prevent password protected posts from being displayed in the result of some unauthenticated AJAX actions, allowing unauthenticated users to read such posts</description>
      <guid isPermaLink="false">CVE-2024-0881|2024-08-01T18:18:18.980Z</guid>
      <pubDate>Thu, 11 Apr 2024 15:36:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1306|2024-08-01T18:33:25.642Z -- unknown -- smart%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1306</link>
      <description>The Smart Forms  WordPress plugin before 2.6.94 does not have CSRF checks in some places, which could allow attackers to make logged-in users perform unwanted actions via CSRF attacks, such as editing entries, and we consider it a medium risk.</description>
      <guid isPermaLink="false">CVE-2024-1306|2024-08-01T18:33:25.642Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0561|2024-08-01T18:11:35.631Z -- unknown -- ultimate%20posts%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0561</link>
      <description>The Ultimate Posts Widget WordPress plugin before 2.3.1 does not validate and escape some of its Widget options before outputting them back in attributes, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0561|2024-08-01T18:11:35.631Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1076|2024-08-01T18:26:30.496Z -- unknown -- ssl%20zen</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1076</link>
      <description>The SSL Zen  WordPress plugin before 4.6.0 only relies on the use of .htaccess to prevent visitors from accessing the site's generated private keys, which allows an attacker to read them if the site runs on a server who doesn't support .htaccess files, like NGINX.</description>
      <guid isPermaLink="false">CVE-2024-1076|2024-08-01T18:26:30.496Z</guid>
      <pubDate>Wed, 08 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1983|2024-08-01T18:56:22.570Z -- unknown -- simple%20ajax%20chat</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1983</link>
      <description>The Simple Ajax Chat  WordPress plugin before 20240223 does not prevent visitors from using malicious Names when using the chat, which will be reflected unsanitized to other users.</description>
      <guid isPermaLink="false">CVE-2024-1983|2024-08-01T18:56:22.570Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0365|2024-08-01T18:04:49.725Z -- unknown -- fancy%20product%20designer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0365</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.5 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by adminstrators.</description>
      <guid isPermaLink="false">CVE-2024-0365|2024-08-01T18:04:49.725Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1905|2024-08-01T18:56:22.435Z -- unknown -- smart%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1905</link>
      <description>The Smart Forms  WordPress plugin before 2.6.96 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1905|2024-08-01T18:56:22.435Z</guid>
      <pubDate>Mon, 29 Apr 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0756|2024-08-01T18:18:17.955Z -- unknown -- insert%20or%20embed%20articulate%20content%20into%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0756</link>
      <description>The Insert or Embed Articulate Content into WordPress plugin through 4.3000000023 lacks validation of URLs when adding iframes, allowing attackers to inject an iFrame in the page and thus load arbitrary content from any page.</description>
      <guid isPermaLink="false">CVE-2024-0756|2024-08-01T18:18:17.955Z</guid>
      <pubDate>Tue, 04 Jun 2024 14:28:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1319|2024-08-01T18:33:25.378Z -- unknown -- events%20tickets%20plus</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1319</link>
      <description>The Events Tickets Plus WordPress plugin before 5.9.1 does not prevent users with at least the contributor role from leaking the attendees list on any post type regardless of status. (e.g. draft, private, pending review, password-protected, and trashed posts).</description>
      <guid isPermaLink="false">CVE-2024-1319|2024-08-01T18:33:25.378Z</guid>
      <pubDate>Mon, 04 Mar 2024 21:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1755|2024-08-01T18:48:21.954Z -- unknown -- nps%20computy</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1755</link>
      <description>The NPS computy WordPress plugin through 2.7.5 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-1755|2024-08-01T18:48:21.954Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0780|2024-08-01T18:18:18.158Z -- unknown -- enjoy%20social%20feed%20plugin%20for%20wordpress%20website</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0780</link>
      <description>The Enjoy Social Feed plugin for WordPress website WordPress plugin through 6.2.2 does not have authorisation when resetting its database, allowing any authenticated users, such as subscriber to perform such action</description>
      <guid isPermaLink="false">CVE-2024-0780|2024-08-01T18:18:18.158Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1745|2024-08-01T18:48:21.986Z -- unknown -- testimonial%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1745</link>
      <description>The Testimonial Slider WordPress plugin before 2.3.7 does not properly ensure that a user has the necessary capabilities to edit certain sensitive Testimonial Slider WordPress plugin before 2.3.7 settings, making it possible for users with at least the Author role to edit them.</description>
      <guid isPermaLink="false">CVE-2024-1745|2024-08-01T18:48:21.986Z</guid>
      <pubDate>Tue, 26 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0677|2024-08-01T18:11:35.728Z -- unknown -- pz-linkcard</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0677</link>
      <description>The Pz-LinkCard WordPress plugin through 2.5.1 does not prevent users from pinging arbitrary hosts via some of its shortcodes, which could allow high privilege users such as contributors to perform SSRF attacks.</description>
      <guid isPermaLink="false">CVE-2024-0677|2024-08-01T18:11:35.728Z</guid>
      <pubDate>Thu, 28 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1204|2024-08-01T18:33:25.079Z -- unknown -- meta%20box</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1204</link>
      <description>The Meta Box  WordPress plugin before 5.9.4 does not prevent users with at least the contributor role from access arbitrary custom fields assigned to other user's posts.</description>
      <guid isPermaLink="false">CVE-2024-1204|2024-08-01T18:33:25.079Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1956|2024-08-01T18:56:22.681Z -- unknown -- wpb-show-core</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1956</link>
      <description>The wpb-show-core WordPress plugin before 2.7 does not sanitise and escape the parameters before outputting it back in the response of an unauthenticated request, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-1956|2024-08-01T18:56:22.681Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1712|2024-08-01T18:48:21.840Z -- unknown -- carousel%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1712</link>
      <description>The Carousel Slider WordPress plugin before 2.2.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1712|2024-08-01T18:48:21.840Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0951|2024-08-01T18:26:30.206Z -- unknown -- advanced%20social%20feeds%20widget%20%26%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0951</link>
      <description>The Advanced Social Feeds Widget &amp; Shortcode WordPress plugin through 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0951|2024-08-01T18:26:30.206Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1743|2024-08-01T18:48:21.661Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1743</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 29.8 does not sanitise and escape various parameters before outputting them back in pages and attributes, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-1743|2024-08-01T18:48:21.661Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0973|2024-08-01T18:26:30.496Z -- unknown -- widget%20for%20social%20page%20feeds</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0973</link>
      <description>The Widget for Social Page Feeds WordPress plugin before 6.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0973|2024-08-01T18:26:30.496Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1754|2024-08-01T18:48:21.982Z -- unknown -- nps%20computy</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1754</link>
      <description>The NPS computy WordPress plugin through 2.7.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1754|2024-08-01T18:48:21.982Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1295|2024-08-01T18:33:25.358Z -- unknown -- events-calendar-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1295</link>
      <description>The events-calendar-pro WordPress plugin before 6.4.0.1, The Events Calendar WordPress plugin before 6.4.0.1 does not prevent users with at least the contributor role from leaking details about events they shouldn't have access to. (e.g. password-protected events, drafts, etc.)</description>
      <guid isPermaLink="false">CVE-2024-1295|2024-08-01T18:33:25.358Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1658|2024-08-01T18:48:21.523Z -- unknown -- grid%20shortcodes</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1658</link>
      <description>The Grid Shortcodes WordPress plugin before 1.1.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1658|2024-08-01T18:48:21.523Z</guid>
      <pubDate>Mon, 18 Mar 2024 15:15:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0779|2024-08-01T18:18:18.348Z -- unknown -- enjoy%20social%20feed%20plugin%20for%20wordpress%20website</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0779</link>
      <description>The Enjoy Social Feed plugin for WordPress website WordPress plugin through 6.2.2 does not have authorisation and CSRF in various function hooked to admin_init, allowing unauthenticated users to call them and unlink arbitrary users Instagram Account for example</description>
      <guid isPermaLink="false">CVE-2024-0779|2024-08-01T18:18:18.348Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1962|2024-08-01T18:56:22.447Z -- unknown -- cm%20download%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1962</link>
      <description>The CM Download Manager  WordPress plugin before 2.9.1 does not have CSRF checks in some places, which could allow attackers to make logged in admins edit downloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-1962|2024-08-01T18:56:22.447Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0757|2024-08-01T18:18:18.347Z -- unknown -- insert%20or%20embed%20articulate%20content%20into%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0757</link>
      <description>The Insert or Embed Articulate Content into WordPress plugin through 4.3000000023 is not properly filtering which file extensions are allowed to be imported on the server, allowing the uploading of malicious code within zip files</description>
      <guid isPermaLink="false">CVE-2024-0757|2024-08-01T18:18:18.347Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0905|2024-08-01T18:18:19.000Z -- unknown -- fancy%20product%20designer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0905</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.8 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against unauthenticated and admin-level users</description>
      <guid isPermaLink="false">CVE-2024-0905|2024-08-01T18:18:19.000Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1273|2024-08-01T18:33:25.509Z -- unknown -- starbox</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1273</link>
      <description>The Starbox WordPress plugin before 3.5.0 does not sanitise and escape some parameters, which could allow users with a role as low as Contributor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1273|2024-08-01T18:33:25.509Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1290|2024-08-01T18:33:25.378Z -- unknown -- user%20registration</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1290</link>
      <description>The User Registration WordPress plugin before 2.12 does not prevent users with at least the contributor role from rendering sensitive shortcodes, allowing them to generate, and leak, valid password reset URLs, which they can use to take over any accounts.</description>
      <guid isPermaLink="false">CVE-2024-1290|2024-08-01T18:33:25.378Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1307|2024-08-01T18:33:25.411Z -- unknown -- smart%20forms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1307</link>
      <description>The Smart Forms  WordPress plugin before 2.6.94 does not have proper authorization in some actions, which could allow users with a role as low as a subscriber to call them and perform unauthorized actions</description>
      <guid isPermaLink="false">CVE-2024-1307|2024-08-01T18:33:25.411Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0559|2024-08-01T18:11:35.226Z -- unknown -- enhanced%20text%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0559</link>
      <description>The Enhanced Text Widget WordPress plugin before 1.6.6 does not validate and escape some of its Widget options before outputting them back in attributes, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0559|2024-08-01T18:11:35.226Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0711|2024-08-01T18:11:35.750Z -- unknown -- buttons%20shortcode%20and%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0711</link>
      <description>The Buttons Shortcode and Widget WordPress plugin through 1.16 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-0711|2024-08-01T18:11:35.750Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0566|2024-08-01T18:11:35.610Z -- unknown -- smart%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0566</link>
      <description>The Smart Manager WordPress plugin before 8.28.0 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2024-0566|2024-08-01T18:11:35.610Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0399|2024-08-01T18:04:49.575Z -- unknown -- woocommerce%20customers%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0399</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 29.7 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to an SQL injection exploitable by Subscriber+ role.</description>
      <guid isPermaLink="false">CVE-2024-0399|2024-08-01T18:04:49.575Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1846|2024-08-01T18:56:22.316Z -- unknown -- responsive%20tabs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1846</link>
      <description>The Responsive Tabs WordPress plugin before 4.0.7 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1846|2024-08-01T18:56:22.316Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0974|2024-08-01T18:26:30.265Z -- unknown -- social%20media%20widget</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0974</link>
      <description>The Social Media Widget WordPress plugin before 4.0.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0974|2024-08-01T18:26:30.265Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1588|2024-08-01T18:40:21.438Z -- unknown -- sendpress%20newsletters</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1588</link>
      <description>The SendPress Newsletters WordPress plugin through 1.23.11.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1588|2024-08-01T18:40:21.438Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4758|2024-08-01T20:47:41.788Z -- unknown -- muslim%20prayer%20time%20bd</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4758</link>
      <description>The Muslim Prayer Time BD WordPress plugin through 2.4 does not have CSRF check in place when reseting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4758|2024-08-01T20:47:41.788Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3288|2024-08-01T20:05:08.225Z -- unknown -- logo%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3288</link>
      <description>The Logo Slider  WordPress plugin before 4.0.0 does not validate and escape some of its Slider Settings before outputting them back in attributes, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3288|2024-08-01T20:05:08.225Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3552|2024-08-01T20:12:07.922Z -- unknown -- web%20directory%20free</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3552</link>
      <description>The Web Directory Free WordPress plugin before 1.7.0 does not sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection with different techniques like UNION, Time-Based and Error-Based.</description>
      <guid isPermaLink="false">CVE-2024-3552|2024-08-01T20:12:07.922Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3582|2024-08-01T20:12:07.895Z -- unknown -- ungallery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3582</link>
      <description>The UnGallery WordPress plugin through 2.2.4 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3582|2024-08-01T20:12:07.895Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3753|2024-08-01T20:20:01.144Z -- unknown -- hostel</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3753</link>
      <description>The Hostel WordPress plugin before 1.1.5.3 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3753|2024-08-01T20:20:01.144Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4886|2024-08-01T20:55:10.232Z -- unknown -- buddyboss-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4886</link>
      <description>The  contains an IDOR vulnerability that allows a user to comment on a private post by manipulating the ID included in the request</description>
      <guid isPermaLink="false">CVE-2024-4886|2024-08-01T20:55:10.232Z</guid>
      <pubDate>Wed, 05 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3628|2024-08-01T20:19:59.694Z -- unknown -- easyevent</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3628</link>
      <description>The EasyEvent WordPress plugin through 1.0.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-3628|2024-08-01T20:19:59.694Z</guid>
      <pubDate>Tue, 07 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4483|2024-08-01T20:40:47.409Z -- unknown -- email%20encoder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4483</link>
      <description>The Email Encoder  WordPress plugin before 2.2.2 does not escape the WP_Email_Encoder_Bundle_options[protection_text] parameter before outputting it back in an attribute in an admin page, leading to a Stored Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-4483|2024-08-01T20:40:47.409Z</guid>
      <pubDate>Mon, 29 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4372|2024-08-01T20:40:47.032Z -- unknown -- carousel%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4372</link>
      <description>The Carousel Slider WordPress plugin before 2.2.11 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4372|2024-08-01T20:40:47.032Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4704|2024-08-01T20:47:41.750Z -- unknown -- contact%20form%207</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4704</link>
      <description>The Contact Form 7 WordPress plugin before 5.9.5 has an open redirect that allows an attacker to utilize a false URL and redirect to the URL of their choosing.</description>
      <guid isPermaLink="false">CVE-2024-4704|2024-08-01T20:47:41.750Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4532|2024-08-01T20:40:47.532Z -- unknown -- business%20card</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4532</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as deleting cards via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4532|2024-08-01T20:40:47.532Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4469|2024-08-01T20:40:47.201Z -- unknown -- wp%20staging%20wordpress%20backup%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4469</link>
      <description>The WP STAGING WordPress Backup Plugin  WordPress plugin before 3.5.0 does not prevent users with the administrator role from pinging conducting SSRF attacks, which may be a problem in multisite configurations.</description>
      <guid isPermaLink="false">CVE-2024-4469|2024-08-01T20:40:47.201Z</guid>
      <pubDate>Fri, 31 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3261|2024-08-01T20:05:08.497Z -- unknown -- strong%20testimonials</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3261</link>
      <description>The Strong Testimonials WordPress plugin before 3.1.12 does not validate and escape some of its Testimonial fields before outputting them back in a page/post, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks. The attack requires a specific view to be performed</description>
      <guid isPermaLink="false">CVE-2024-3261|2024-08-01T20:05:08.497Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3978|2024-08-01T20:26:57.200Z -- unknown -- wordpress%20jitsi%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3978</link>
      <description>The WordPress Jitsi Shortcode WordPress plugin through 0.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3978|2024-08-01T20:26:57.200Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3641|2024-08-01T20:19:59.822Z -- unknown -- newsletter%20popup</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3641</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not sanitise and escape some parameters, which could allow unauthenticated visitors to perform Cross-Site Scripting attacks against admins</description>
      <guid isPermaLink="false">CVE-2024-3641|2024-08-01T20:19:59.822Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4272|2024-08-01T20:33:53.006Z -- unknown -- support%20svg</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4272</link>
      <description>The Support SVG  WordPress plugin before 1.1.0 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4272|2024-08-01T20:33:53.006Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3471|2024-08-01T20:12:07.754Z -- unknown -- button%20generator</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3471</link>
      <description>The Button Generator  WordPress plugin before 3.0 does not have CSRF check in place when bulk deleting, which could allow attackers to make a logged in admin delete buttons via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3471|2024-08-01T20:12:07.754Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4899|2024-08-01T20:55:10.228Z -- unknown -- seopress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4899</link>
      <description>The SEOPress  WordPress plugin before 7.8 does not sanitise and escape some of its Post settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-4899|2024-08-01T20:55:10.228Z</guid>
      <pubDate>Mon, 24 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3748|2024-08-01T20:20:01.097Z -- unknown -- sp%20project%20%26%20document%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3748</link>
      <description>The SP Project &amp; Document Manager WordPress plugin through 4.71 is missing validation in its upload function, allowing a user to manipulate the `user_id` to make it appear that a file was uploaded by another user</description>
      <guid isPermaLink="false">CVE-2024-3748|2024-08-01T20:20:01.097Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3632|2024-08-01T20:20:00.487Z -- unknown -- smart%20image%20gallery</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3632</link>
      <description>The Smart Image Gallery WordPress plugin before 1.0.19 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3632|2024-08-01T20:20:00.487Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4094|2024-08-01T20:33:52.215Z -- unknown -- simple%20share%20buttons%20adder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4094</link>
      <description>The Simple Share Buttons Adder WordPress plugin before 8.5.1 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-4094|2024-08-01T20:33:52.215Z</guid>
      <pubDate>Tue, 18 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3590|2024-08-01T20:12:07.919Z -- unknown -- letterpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3590</link>
      <description>The LetterPress  WordPress plugin through 1.2.2 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks, such as delete arbitrary subscribers</description>
      <guid isPermaLink="false">CVE-2024-3590|2024-08-01T20:12:07.919Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4305|2024-08-01T20:33:53.172Z -- unknown -- post%20grid%20gutenberg%20blocks%20and%20wordpress%20blog%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4305</link>
      <description>The Post Grid Gutenberg Blocks and WordPress Blog Plugin  WordPress plugin before 4.1.0 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4305|2024-08-01T20:33:53.172Z</guid>
      <pubDate>Mon, 17 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4384|2024-08-01T20:40:46.484Z -- unknown -- cssable%20countdown</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4384</link>
      <description>The CSSable Countdown WordPress plugin through 1.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4384|2024-08-01T20:40:46.484Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3481|2024-08-01T20:12:07.376Z -- unknown -- counter%20box</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3481</link>
      <description>The Counter Box  WordPress plugin before 1.2.4 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such deleting counters via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3481|2024-08-01T20:12:07.376Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3591|2024-08-01T20:12:07.872Z -- unknown -- geo%20controller</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3591</link>
      <description>The Geo Controller WordPress plugin before 8.6.5 unserializes user input via some of its AJAX actions and REST API routes, which could allow unauthenticated users to perform PHP Object Injection when a suitable gadget is present on the blog.</description>
      <guid isPermaLink="false">CVE-2024-3591|2024-08-01T20:12:07.872Z</guid>
      <pubDate>Wed, 01 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4180|2024-08-01T20:33:52.970Z -- unknown -- the%20events%20calendar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4180</link>
      <description>The Events Calendar WordPress plugin before 6.4.0.1 does not properly sanitize user-submitted content when rendering some views via AJAX.</description>
      <guid isPermaLink="false">CVE-2024-4180|2024-08-01T20:33:52.970Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4477|2024-08-01T20:40:47.341Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4477</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not sanitise and escape some of its log data before outputting them back in an admin dashboard, leading to an Unauthenticated Stored Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-4477|2024-08-01T20:40:47.341Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4857|2024-08-01T20:55:10.184Z -- unknown -- fs%20product%20inquiry</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4857</link>
      <description>The FS Product Inquiry WordPress plugin through 1.1.1 does not sanitise and escape some form submissions, which could allow unauthenticated users to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4857|2024-08-01T20:55:10.184Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4531|2024-08-01T20:40:47.443Z -- unknown -- business%20card</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4531</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as editing cards via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4531|2024-08-01T20:40:47.443Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4290|2024-08-01T20:33:53.097Z -- unknown -- sailthru%20triggermail</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4290</link>
      <description>The Sailthru Triggermail WordPress plugin through 1.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4290|2024-08-01T20:33:53.097Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3754|2024-08-01T20:20:01.066Z -- unknown -- alemha%20watermarker</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3754</link>
      <description>The Alemha watermarker WordPress plugin through 1.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3754|2024-08-01T20:20:01.066Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3633|2024-08-01T20:19:59.847Z -- unknown -- webp%20%26%20svg%20support</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3633</link>
      <description>The WebP &amp; SVG Support WordPress plugin through 1.4.0 does not sanitise uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2024-3633|2024-08-01T20:19:59.847Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4529|2024-08-01T20:40:47.475Z -- unknown -- business%20card</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4529</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as deleting card categories via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4529|2024-08-01T20:40:47.475Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4934|2024-08-01T20:55:10.243Z -- unknown -- quiz%20and%20survey%20master%20%28qsm%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4934</link>
      <description>The Quiz and Survey Master (QSM)  WordPress plugin before 9.0.2 does not validate and escape some of its Quiz fields before outputting them back in a page/post where the Quiz is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4934|2024-08-01T20:55:10.243Z</guid>
      <pubDate>Mon, 01 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3188|2024-08-01T20:05:07.524Z -- unknown -- wp%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3188</link>
      <description>The WP Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 7.1.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3188|2024-08-01T20:05:07.524Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4289|2024-08-01T20:33:53.242Z -- unknown -- sailthru%20triggermail</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4289</link>
      <description>The Sailthru Triggermail WordPress plugin through 1.1 does not sanitise and escape various parameters before outputting them back in pages and attributes, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-4289|2024-08-01T20:33:53.242Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3920|2024-08-01T20:26:57.098Z -- unknown -- flattr</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3920</link>
      <description>The Flattr WordPress plugin through 1.2.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3920|2024-08-01T20:26:57.098Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3410|2024-08-01T20:12:07.388Z -- unknown -- dn%20footer%20contacts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3410</link>
      <description>The DN Footer Contacts WordPress plugin before 1.6.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3410|2024-08-01T20:12:07.388Z</guid>
      <pubDate>Tue, 09 Jul 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3236|2024-08-01T20:05:08.361Z -- unknown -- popup%20builder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3236</link>
      <description>The Popup Builder WordPress plugin before 1.1.33 does not sanitise and escape some of its Notification fields, which could allow users such as contributor and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-3236|2024-08-01T20:05:08.361Z</guid>
      <pubDate>Mon, 17 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3637|2024-08-01T20:19:59.637Z -- unknown -- responsive%20contact%20form%20builder%20%26%20lead%20generation%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3637</link>
      <description>The Responsive Contact Form Builder &amp; Lead Generation Plugin WordPress plugin through 1.8.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3637|2024-08-01T20:19:59.637Z</guid>
      <pubDate>Fri, 03 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3986|2024-08-01T20:26:57.259Z -- unknown -- sportspress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3986</link>
      <description>The SportsPress  WordPress plugin before 2.7.22 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3986|2024-08-01T20:26:57.259Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3940|2024-08-01T20:26:57.211Z -- unknown -- recaptcha%20jetpack</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3940</link>
      <description>The reCAPTCHA Jetpack WordPress plugin through 0.2.2 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3940|2024-08-01T20:26:57.211Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3241|2024-08-01T20:05:08.311Z -- unknown -- ultimate%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3241</link>
      <description>The Ultimate Blocks  WordPress plugin before 3.1.7 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3241|2024-08-01T20:05:08.311Z</guid>
      <pubDate>Tue, 14 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4620|2024-08-01T20:47:41.237Z -- unknown -- arforms%20-%20premium%20wordpress%20form%20builder%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4620</link>
      <description>The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.6 allows unauthenticated users to modify uploaded files in such a way that PHP code can be uploaded when an upload file input is included on a form</description>
      <guid isPermaLink="false">CVE-2024-4620|2024-08-01T20:47:41.237Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3965|2024-08-01T20:26:57.179Z -- unknown -- pray%20for%20me</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3965</link>
      <description>The Pray For Me WordPress plugin through 1.0.4 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3965|2024-08-01T20:26:57.179Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4621|2024-08-01T20:47:41.215Z -- unknown -- arforms%20-%20premium%20wordpress%20form%20builder%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4621</link>
      <description>The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4621|2024-08-01T20:47:41.215Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3631|2024-08-01T20:19:59.781Z -- unknown -- hl%20twitter</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3631</link>
      <description>The HL Twitter WordPress plugin through 2014.1.18 does not have CSRF check when unlinking twitter accounts, which could allow attackers to make logged in admins perform such actions via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3631|2024-08-01T20:19:59.781Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3548|2024-08-01T20:12:07.771Z -- unknown -- wp%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3548</link>
      <description>The WP Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 7.1.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3548|2024-08-01T20:12:07.771Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4217|2024-08-01T20:33:53.001Z -- unknown -- shortcodes-ultimate-pro</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4217</link>
      <description>The shortcodes-ultimate-pro WordPress plugin before 7.1.5 does not properly escape some of its shortcodes' settings, making it possible for attackers with a Contributor account to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4217|2024-08-01T20:33:53.001Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4260|2024-08-01T20:33:52.992Z -- unknown -- page%20builder%20gutenberg%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4260</link>
      <description>The Page Builder Gutenberg Blocks  WordPress plugin before 3.1.12 does not prevent users from pinging arbitrary hosts via some of its shortcodes, which could allow high privilege users such as contributors to perform SSRF attacks.</description>
      <guid isPermaLink="false">CVE-2024-4260|2024-08-01T20:33:52.992Z</guid>
      <pubDate>Tue, 23 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4957|2024-08-01T20:55:10.298Z -- unknown -- frontend%20checklist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4957</link>
      <description>The Frontend Checklist WordPress plugin through 2.3.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4957|2024-08-01T20:55:10.298Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4924|2024-08-01T20:55:10.336Z -- unknown -- social%20sharing%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4924</link>
      <description>The Social Sharing Plugin  WordPress plugin before 3.3.63 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4924|2024-08-01T20:55:10.336Z</guid>
      <pubDate>Wed, 12 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3642|2024-08-01T20:19:59.856Z -- unknown -- newsletter%20popup</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3642</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not have CSRF check when deleting subscriber, which could allow attackers to make logged in admins perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3642|2024-08-01T20:19:59.856Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4534|2024-08-01T20:40:47.496Z -- unknown -- kkprogressbar2%20free</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4534</link>
      <description>The KKProgressbar2 Free  WordPress plugin through 1.1.4.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4534|2024-08-01T20:40:47.496Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4399|2024-08-01T20:40:47.185Z -- unknown -- cas</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4399</link>
      <description>The  does not validate a parameter before making a request to it, which could allow unauthenticated users to perform SSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4399|2024-08-01T20:40:47.185Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4627|2024-08-01T20:47:41.192Z -- unknown -- rank%20math%20seo</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4627</link>
      <description>The Rank Math SEO  WordPress plugin before 1.0.219 does not sanitise and escape some of its settings, which could allow users with access to the General Settings (by default admin, however such access can be given to lower roles via the Role Manager feature of the Rank Math SEO  WordPress plugin before 1.0.219) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-4627|2024-08-01T20:47:41.192Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4149|2024-08-01T20:33:52.460Z -- unknown -- floating%20chat%20widget%3A%20contact%20chat%20icons%2C%20whatsapp%2C%20telegram%20chat%2C%20line%20messenger%2C%20wechat%2C%20email%2C%20sms%2C%20call%20button</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4149</link>
      <description>The Floating Chat Widget: Contact Chat Icons, WhatsApp, Telegram Chat, Line Messenger, WeChat, Email, SMS, Call Button  WordPress plugin before 3.2.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-4149|2024-08-01T20:33:52.460Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3941|2024-08-01T20:26:57.170Z -- unknown -- recaptcha%20jetpack</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3941</link>
      <description>The reCAPTCHA Jetpack WordPress plugin through 0.2.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged-in admin add Stored XSS payloads via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2024-3941|2024-08-01T20:26:57.170Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3472|2024-08-01T20:12:06.941Z -- unknown -- modal%20window</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3472</link>
      <description>The Modal Window  WordPress plugin before 5.3.10 does not have CSRF check in place when bulk deleting modals, which could allow attackers to make a logged in admin delete them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3472|2024-08-01T20:12:06.941Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3239|2024-08-01T20:05:08.328Z -- unknown -- post%20grid%20gutenberg%20blocks%20and%20wordpress%20blog%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3239</link>
      <description>The Post Grid Gutenberg Blocks and WordPress Blog Plugin  WordPress plugin before 4.0.2 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3239|2024-08-01T20:05:08.328Z</guid>
      <pubDate>Mon, 13 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4664|2024-08-01T20:47:41.600Z -- unknown -- wp%20chat%20app</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4664</link>
      <description>The WP Chat App WordPress plugin before 3.6.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admins to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2024-4664|2024-08-01T20:47:41.600Z</guid>
      <pubDate>Thu, 27 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4388|2024-08-01T20:40:47.248Z -- unknown -- cas</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4388</link>
      <description>This  does not validate a path generated with user input when downloading files, allowing unauthenticated user to download arbitrary files from the server</description>
      <guid isPermaLink="false">CVE-2024-4388|2024-08-01T20:40:47.248Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3594|2024-08-01T20:12:08.113Z -- unknown -- idonate</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3594</link>
      <description>The IDonate  WordPress plugin through 1.9.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3594|2024-08-01T20:12:08.113Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4005|2024-08-01T20:26:57.290Z -- unknown -- social%20pixel</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4005</link>
      <description>The Social Pixel WordPress plugin through 2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4005|2024-08-01T20:26:57.290Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3824|2024-08-01T20:20:01.601Z -- unknown -- base64%20encoder%2Fdecoder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3824</link>
      <description>The Base64 Encoder/Decoder WordPress plugin through 0.9.2 does not have CSRF check in place when resetting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3824|2024-08-01T20:20:01.601Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3822|2024-08-01T20:20:02.163Z -- unknown -- base64%20encoder%2Fdecoder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3822</link>
      <description>The Base64 Encoder/Decoder WordPress plugin through 0.9.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3822|2024-08-01T20:20:02.163Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3919|2024-08-01T20:26:56.962Z -- unknown -- openpgp%20form%20encryption%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3919</link>
      <description>The OpenPGP Form Encryption for WordPress plugin before 1.5.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-3919|2024-08-01T20:26:56.962Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4969|2024-08-01T20:55:10.397Z -- unknown -- widget%20bundle</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4969</link>
      <description>The Widget Bundle WordPress plugin through 2.0.0 does not have CSRF checks when logging Widgets, which could allow attackers to make logged in admin enable/disable widgets via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4969|2024-08-01T20:55:10.397Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3580|2024-08-01T20:12:07.739Z -- unknown -- popup4phone</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3580</link>
      <description>The Popup4Phone WordPress plugin through 1.3.2 does not sanitise and escape some of its settings, which could allow high privilege users such as Editor to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3580|2024-08-01T20:12:07.739Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5004|2024-08-01T20:55:10.410Z -- unknown -- cm%20popup%20plugin%20for%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5004</link>
      <description>The CM Popup Plugin for WordPress  WordPress plugin before 1.6.6 does not sanitise and escape some of the campaign settings, which could allow high privilege users such as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-5004|2024-08-01T20:55:10.410Z</guid>
      <pubDate>Mon, 22 Jul 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3710|2024-08-01T20:20:01.159Z -- unknown -- image%20photo%20gallery%20final%20tiles%20grid</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3710</link>
      <description>The Image Photo Gallery Final Tiles Grid WordPress plugin before 3.6.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3710|2024-08-01T20:20:01.159Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3966|2024-08-01T20:26:57.169Z -- unknown -- pray%20for%20me</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3966</link>
      <description>The Pray For Me WordPress plugin through 1.0.4 does not sanitise and escape some parameters, which could unauthenticated visitors to perform Cross-Site Scripting attacks that trigger when an admin visits the Prayer Requests in the WP Admin</description>
      <guid isPermaLink="false">CVE-2024-3966|2024-08-01T20:26:57.169Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4753|2024-08-01T20:47:41.783Z -- unknown -- wp%20secure%20maintenance</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4753</link>
      <description>The WP Secure Maintenance WordPress plugin before 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4753|2024-08-01T20:47:41.783Z</guid>
      <pubDate>Fri, 12 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4271|2024-08-01T20:33:53.183Z -- unknown -- svgator</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4271</link>
      <description>The SVGator  WordPress plugin through 1.2.6 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4271|2024-08-01T20:33:53.183Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4475|2024-08-01T20:40:47.373Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4475</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not have CSRF check when clearing logs, which could allow attackers to make a logged in admin clear the logs them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4475|2024-08-01T20:40:47.373Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3231|2024-08-01T20:05:08.235Z -- unknown -- popup4phone</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3231</link>
      <description>The Popup4Phone WordPress plugin through 1.3.2 does not sanitise and escape some parameters, which could allow unauthenticated users to perform Cross-Site Scripting attacks against admins.</description>
      <guid isPermaLink="false">CVE-2024-3231|2024-08-01T20:05:08.235Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3634|2024-08-01T20:19:59.932Z -- unknown -- month%20name%20translation%20benaceur</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3634</link>
      <description>The month name translation benaceur WordPress plugin before 2.3.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3634|2024-08-01T20:19:59.932Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4057|2024-08-01T20:26:57.268Z -- unknown -- gutenberg%20blocks%20with%20ai%20by%20kadence%20wp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4057</link>
      <description>The Gutenberg Blocks with AI by Kadence WP  WordPress plugin before 3.2.37 does not validate and escape some of its block attributes before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4057|2024-08-01T20:26:57.268Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4474|2024-08-01T20:40:47.250Z -- unknown -- wp%20logs%20book</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4474</link>
      <description>The WP Logs Book WordPress plugin through 1.0.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4474|2024-08-01T20:40:47.250Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3937|2024-08-01T20:26:57.163Z -- unknown -- playlist%20for%20youtube</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3937</link>
      <description>The Playlist for Youtube WordPress plugin through 1.32 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3937|2024-08-01T20:26:57.163Z</guid>
      <pubDate>Wed, 29 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4755|2024-08-01T20:47:41.777Z -- unknown -- google%20cse</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4755</link>
      <description>The Google CSE WordPress plugin through 1.0.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4755|2024-08-01T20:47:41.777Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3972|2024-08-01T20:26:57.234Z -- unknown -- similarity</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3972</link>
      <description>The Similarity WordPress plugin through 3.0 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3972|2024-08-01T20:26:57.234Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4756|2024-08-01T20:47:41.910Z -- unknown -- wp%20backpack</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4756</link>
      <description>The WP Backpack WordPress plugin through 2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4756|2024-08-01T20:47:41.910Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3939|2024-08-01T20:26:57.093Z -- unknown -- ditty</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3939</link>
      <description>The Ditty  WordPress plugin before 3.1.36 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3939|2024-08-01T20:26:57.093Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3276|2024-08-01T20:05:08.383Z -- unknown -- lightbox%20%26%20modal%20popup%20wordpress%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3276</link>
      <description>The Lightbox &amp; Modal Popup WordPress Plugin  WordPress plugin before 2.7.28, foobox-image-lightbox-premium WordPress plugin before 2.7.28 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-3276|2024-08-01T20:05:08.383Z</guid>
      <pubDate>Tue, 18 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3992|2024-08-01T20:26:57.219Z -- unknown -- amen</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3992</link>
      <description>The Amen WordPress plugin through 3.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3992|2024-08-01T20:26:57.219Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3692|2024-08-01T20:20:01.145Z -- unknown -- gutenverse</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3692</link>
      <description>The Gutenverse  WordPress plugin before 1.9.1 does not validate the htmlTag option in various of its block before outputting it back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3692|2024-08-01T20:20:01.145Z</guid>
      <pubDate>Fri, 03 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4970|2024-08-01T20:55:10.423Z -- unknown -- widget%20bundle</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4970</link>
      <description>The Widget Bundle WordPress plugin through 2.0.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4970|2024-08-01T20:55:10.423Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5003|2024-08-01T20:55:10.444Z -- unknown -- wp%20stacker</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5003</link>
      <description>The WP Stacker WordPress plugin through 1.8.5 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5003|2024-08-01T20:55:10.444Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3703|2024-08-01T20:20:00.768Z -- unknown -- carousel%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3703</link>
      <description>The Carousel Slider WordPress plugin before 2.2.10 does not validate and escape some of its Slide options before outputting them back in the page/post where the related Slide shortcode is embed, which could allow users with the Editor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3703|2024-08-01T20:20:00.768Z</guid>
      <pubDate>Fri, 03 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3752|2024-08-01T20:20:01.118Z -- unknown -- crelly%20slider</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3752</link>
      <description>The Crelly Slider WordPress plugin through 1.4.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3752|2024-08-01T20:20:01.118Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3963|2024-08-01T20:26:57.225Z -- unknown -- giveaways%20and%20contests%20by%20rafflepress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3963</link>
      <description>The Giveaways and Contests by RafflePress  WordPress plugin before 1.12.14 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3963|2024-08-01T20:26:57.225Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5002|2024-08-01T20:55:10.411Z -- unknown -- user%20submitted%20posts</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5002</link>
      <description>The User Submitted Posts  WordPress plugin before 20240516 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-5002|2024-08-01T20:55:10.411Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4749|2024-08-01T20:47:41.749Z -- unknown -- wp-emember</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4749</link>
      <description>The wp-eMember WordPress plugin before 10.3.9 does not sanitize and escape the "fieldId" parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2024-4749|2024-08-01T20:47:41.749Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3630|2024-08-01T20:19:59.934Z -- unknown -- hl%20twitter</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3630</link>
      <description>The HL Twitter WordPress plugin through 2014.1.18 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3630|2024-08-01T20:19:59.934Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4752|2024-08-01T20:47:41.832Z -- unknown -- eventon</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4752</link>
      <description>The EventON WordPress plugin before 2.2.15 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4752|2024-08-01T20:47:41.832Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3644|2024-08-01T20:20:00.100Z -- unknown -- newsletter%20popup</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3644</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3644|2024-08-01T20:20:00.100Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3643|2024-08-01T20:20:00.408Z -- unknown -- newsletter%20popup</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3643</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not have CSRF check when deleting list, which could allow attackers to make logged in admins perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3643|2024-08-01T20:20:00.408Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3917|2024-08-01T20:26:57.082Z -- unknown -- pet%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3917</link>
      <description>The Pet Manager WordPress plugin through 1.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3917|2024-08-01T20:26:57.082Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3475|2024-08-01T20:12:07.619Z -- unknown -- sticky%20buttons</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3475</link>
      <description>The Sticky Buttons  WordPress plugin before 3.2.4 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting buttons via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3475|2024-08-01T20:12:07.619Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4616|2024-08-01T20:47:41.576Z -- unknown -- widget%20bundle</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4616</link>
      <description>The Widget Bundle WordPress plugin through 2.0.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against only unauthenticated users</description>
      <guid isPermaLink="false">CVE-2024-4616|2024-08-01T20:47:41.576Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4533|2024-08-01T20:40:47.525Z -- unknown -- kkprogressbar2%20free</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4533</link>
      <description>The KKProgressbar2 Free  WordPress plugin through 1.1.4.2 does not sanitize and escape a parameter before using it in a SQL statement, allowing admin users to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2024-4533|2024-08-01T20:40:47.525Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3964|2024-08-01T20:26:57.228Z -- unknown -- product%20enquiry%20for%20woocommerce</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3964</link>
      <description>The Product Enquiry for WooCommerce WordPress plugin before 3.1.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3964|2024-08-01T20:26:57.228Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4757|2024-08-01T20:47:41.785Z -- unknown -- logo%20manager%20for%20enamad</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4757</link>
      <description>The Logo Manager For Enamad WordPress plugin through 0.7.0 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4757|2024-08-01T20:47:41.785Z</guid>
      <pubDate>Tue, 25 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3478|2024-08-01T20:12:07.350Z -- unknown -- herd%20effects</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3478</link>
      <description>The Herd Effects  WordPress plugin before 5.2.7 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting effects via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3478|2024-08-01T20:12:07.350Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4480|2024-08-01T20:40:47.127Z -- unknown -- wp%20prayer%20ii</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4480</link>
      <description>The WP Prayer II WordPress plugin through 2.4.7 does not have CSRF check in place when updating its email settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4480|2024-08-01T20:40:47.127Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4750|2024-08-01T20:47:41.684Z -- unknown -- buddyboss-platform</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4750</link>
      <description>The buddyboss-platform WordPress plugin before 2.6.0 contains an IDOR vulnerability that allows a user to like a private post by manipulating the ID included in the request</description>
      <guid isPermaLink="false">CVE-2024-4750|2024-08-01T20:47:41.684Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4096|2024-08-01T20:33:52.136Z -- unknown -- responsive%20tabs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4096</link>
      <description>The Responsive Tabs WordPress plugin through 4.0.8 does not sanitise and escape some of its Tab settings, which could allow high privilege users such as Contributors and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4096|2024-08-01T20:33:52.136Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3977|2024-08-01T20:26:57.263Z -- unknown -- wordpress%20jitsi%20shortcode</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3977</link>
      <description>The WordPress Jitsi Shortcode WordPress plugin through 0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3977|2024-08-01T20:26:57.263Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3476|2024-08-01T20:12:07.793Z -- unknown -- side%20menu%20lite</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3476</link>
      <description>The Side Menu Lite  WordPress plugin before 4.2.1 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting buttons via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3476|2024-08-01T20:12:07.793Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4602|2024-08-01T20:47:41.440Z -- unknown -- embed%20peertube%20playlist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4602</link>
      <description>The Embed Peertube Playlist WordPress plugin before 1.10 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4602|2024-08-01T20:47:41.440Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3406|2024-08-01T20:12:07.274Z -- unknown -- wp%20prayer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3406</link>
      <description>The WP Prayer WordPress plugin through 2.0.9 does not have CSRF check in place when updating its email settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3406|2024-08-01T20:12:07.274Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3971|2024-08-01T20:26:57.245Z -- unknown -- similarity</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3971</link>
      <description>The Similarity WordPress plugin through 3.0 does not have CSRF check in place when resetting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3971|2024-08-01T20:26:57.245Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3751|2024-08-01T20:20:01.023Z -- unknown -- seriously%20simple%20podcasting</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3751</link>
      <description>The Seriously Simple Podcasting WordPress plugin before 3.3.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3751|2024-08-01T20:20:01.023Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3477|2024-08-01T20:12:07.199Z -- unknown -- popup%20box</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3477</link>
      <description>The Popup Box  WordPress plugin before 2.2.7 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting popups via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3477|2024-08-01T20:12:07.199Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3993|2024-08-01T20:26:57.248Z -- unknown -- azan%20plugin</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3993</link>
      <description>The AZAN Plugin WordPress plugin through 0.6 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3993|2024-08-01T20:26:57.248Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4759|2024-08-01T20:47:41.891Z -- unknown -- mime%20types%20extended</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4759</link>
      <description>The Mime Types Extended WordPress plugin through 0.11 does not sanitise uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2024-4759|2024-08-01T20:47:41.891Z</guid>
      <pubDate>Tue, 25 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3999|2024-08-01T20:26:57.231Z -- unknown -- eazydocs</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3999</link>
      <description>The EazyDocs  WordPress plugin before 2.5.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3999|2024-08-01T20:26:57.231Z</guid>
      <pubDate>Tue, 02 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4381|2024-08-01T20:40:46.927Z -- unknown -- cb%20%28legacy%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4381</link>
      <description>The CB (legacy) WordPress plugin through 0.9.4.18 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4381|2024-08-01T20:40:46.927Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4655|2024-08-01T20:47:41.826Z -- unknown -- ultimate%20blocks</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4655</link>
      <description>The Ultimate Blocks  WordPress plugin before 3.1.9 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4655|2024-08-01T20:47:41.826Z</guid>
      <pubDate>Thu, 11 Jul 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3669|2024-08-01T20:20:01.025Z -- unknown -- web%20directory%20free</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3669</link>
      <description>The Web Directory Free WordPress plugin before 1.7.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3669|2024-08-01T20:20:01.025Z</guid>
      <pubDate>Tue, 30 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3903|2024-08-01T20:26:56.964Z -- unknown -- add%20custom%20css%20and%20js</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3903</link>
      <description>The Add Custom CSS and JS WordPress plugin through 1.20 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in as author and above add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3903|2024-08-01T20:26:56.964Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4145|2024-08-01T20:33:52.569Z -- unknown -- search%20%26%20replace</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4145</link>
      <description>The Search &amp; Replace WordPress plugin before 3.2.2 does not sanitize and escape a parameter before using it in a SQL statement, allowing admins to perform SQL injection attacks (such as within a multi-site network).</description>
      <guid isPermaLink="false">CVE-2024-4145|2024-08-01T20:33:52.569Z</guid>
      <pubDate>Thu, 13 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4535|2024-08-01T20:40:47.529Z -- unknown -- kkprogressbar2%20free</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4535</link>
      <description>The KKProgressbar2 Free  WordPress plugin through 1.1.4.2 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4535|2024-08-01T20:40:47.529Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3749|2024-08-01T20:20:01.139Z -- unknown -- sp%20project%20%26%20document%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3749</link>
      <description>The SP Project &amp; Document Manager WordPress plugin through 4.71 lacks proper access controllers and allows a logged in user to view and download files belonging to another user</description>
      <guid isPermaLink="false">CVE-2024-3749|2024-08-01T20:20:01.139Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3755|2024-08-01T20:20:01.098Z -- unknown -- mf%20gig%20calendar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3755</link>
      <description>The MF Gig Calendar WordPress plugin through 1.2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as editor to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3755|2024-08-01T20:20:01.098Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4269|2024-08-01T20:33:53.069Z -- unknown -- svg%20block</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4269</link>
      <description>The SVG Block WordPress plugin before 1.1.20 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4269|2024-08-01T20:33:53.069Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4270|2024-08-01T20:33:53.193Z -- unknown -- svgmagic</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4270</link>
      <description>The SVGMagic WordPress plugin through 1.1 does not sanitize SVG file contents, which enables users with at least the author role to SVG with malicious JavaScript to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-4270|2024-08-01T20:33:53.193Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3407|2024-08-01T20:12:06.634Z -- unknown -- wp%20prayer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3407</link>
      <description>The WP Prayer WordPress plugin through 2.0.9 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3407|2024-08-01T20:12:06.634Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4061|2024-08-01T20:26:57.322Z -- unknown -- survey%20maker</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4061</link>
      <description>The Survey Maker  WordPress plugin before 4.2.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4061|2024-08-01T20:26:57.322Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3474|2024-08-01T20:12:07.276Z -- unknown -- wow%20skype%20buttons</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3474</link>
      <description>The Wow Skype Buttons WordPress plugin before 4.0.4 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting buttons via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3474|2024-08-01T20:12:07.276Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3405|2024-08-01T20:12:07.156Z -- unknown -- wp%20prayer</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3405</link>
      <description>The WP Prayer WordPress plugin through 2.0.9 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3405|2024-08-01T20:12:07.156Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3918|2024-08-01T20:26:56.960Z -- unknown -- pet%20manager</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3918</link>
      <description>The Pet Manager WordPress plugin through 1.4 does not sanitise and escape some of its Pet settings, which could allow high privilege users such as Contributor to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-3918|2024-08-01T20:26:56.960Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3629|2024-08-01T20:19:59.879Z -- unknown -- hl%20twitter</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3629</link>
      <description>The HL Twitter WordPress plugin through 2014.1.18 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3629|2024-08-01T20:19:59.879Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4900|2024-08-01T20:55:10.269Z -- unknown -- seopress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4900</link>
      <description>The SEOPress  WordPress plugin before 7.8 does not validate and escape one of its Post settings, which could allow contributor and above role to perform Open redirect attacks against any user viewing a malicious post</description>
      <guid isPermaLink="false">CVE-2024-4900|2024-08-01T20:55:10.269Z</guid>
      <pubDate>Mon, 24 Jun 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4856|2024-08-01T20:55:10.223Z -- unknown -- fs%20product%20inquiry</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4856</link>
      <description>The FS Product Inquiry WordPress plugin through 1.1.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin or unauthenticated users</description>
      <guid isPermaLink="false">CVE-2024-4856|2024-08-01T20:55:10.223Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4382|2024-08-01T20:40:47.111Z -- unknown -- cb%20%28legacy%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4382</link>
      <description>The CB (legacy) WordPress plugin through 0.9.4.18 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting codes, timeframes, and bookings via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4382|2024-08-01T20:40:47.111Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3756|2024-08-01T20:20:00.980Z -- unknown -- mf%20gig%20calendar</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3756</link>
      <description>The MF Gig Calendar WordPress plugin through 1.2.1 does not have CSRF checks in some places, which could allow attackers to make logged in Contributors and above delete arbitrary events via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3756|2024-08-01T20:20:00.980Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3823|2024-08-01T20:20:02.164Z -- unknown -- base64%20encoder%2Fdecoder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3823</link>
      <description>The Base64 Encoder/Decoder WordPress plugin through 0.9.2 does not have CSRF check when updating its settings, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3823|2024-08-01T20:20:02.164Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4959|2024-08-01T20:55:10.320Z -- unknown -- frontend%20checklist</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4959</link>
      <description>The Frontend Checklist WordPress plugin through 2.3.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4959|2024-08-01T20:55:10.320Z</guid>
      <pubDate>Wed, 26 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4565|2024-08-01T20:47:40.536Z -- unknown -- advanced%20custom%20fields%20%28acf%29</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4565</link>
      <description>The Advanced Custom Fields (ACF) WordPress plugin before 6.3, Advanced Custom Fields Pro WordPress plugin before 6.3 allows you to display custom field values for any post via shortcode without checking for the correct access</description>
      <guid isPermaLink="false">CVE-2024-4565|2024-08-01T20:47:40.536Z</guid>
      <pubDate>Thu, 20 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4377|2024-08-01T20:40:47.117Z -- unknown -- dop%20shortcodes</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4377</link>
      <description>The DOP Shortcodes WordPress plugin through 1.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4377|2024-08-01T20:40:47.117Z</guid>
      <pubDate>Fri, 21 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3921|2024-08-01T20:26:57.194Z -- unknown -- gianism</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3921</link>
      <description>The Gianism WordPress plugin through 5.1.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3921|2024-08-01T20:26:57.194Z</guid>
      <pubDate>Wed, 29 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4751|2024-08-01T20:47:41.669Z -- unknown -- wp%20prayer%20ii</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4751</link>
      <description>The WP Prayer II WordPress plugin through 2.4.7 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4751|2024-08-01T20:47:41.669Z</guid>
      <pubDate>Fri, 14 Jun 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4977|2024-08-01T20:55:10.402Z -- unknown -- index%20wp%20mysql%20for%20speed</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4977</link>
      <description>The Index WP MySQL For Speed WordPress plugin before 1.4.18 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-4977|2024-08-01T20:55:10.402Z</guid>
      <pubDate>Sat, 13 Jul 2024 06:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4530|2024-08-01T20:40:47.526Z -- unknown -- business%20card</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4530</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as editing card categories via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4530|2024-08-01T20:40:47.526Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3265|2024-08-01T20:05:08.327Z -- unknown -- advanced%20search</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3265</link>
      <description>The Advanced Search WordPress plugin through 1.1.6 does not properly escape parameters appended to an SQL query, making it possible for users with the administrator role to conduct SQL Injection attacks in the context of a multisite WordPress configurations.</description>
      <guid isPermaLink="false">CVE-2024-3265|2024-08-01T20:05:08.327Z</guid>
      <pubDate>Thu, 25 Apr 2024 21:25:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3368|2024-08-01T20:05:08.481Z -- unknown -- all%20in%20one%20seo</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3368</link>
      <description>The All in One SEO  WordPress plugin before 4.6.1.1 does not validate and escape some of its Post fields before outputting them back, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3368|2024-08-01T20:05:08.481Z</guid>
      <pubDate>Mon, 20 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4826|2024-08-02T07:38:00.761Z -- unknown -- socialdriver</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-4826</link>
      <description>The SocialDriver WordPress theme before version 2024 has a prototype pollution vulnerability that could allow an attacker to inject arbitrary properties resulting in a cross-site scripting (XSS) attack.</description>
      <guid isPermaLink="false">CVE-2023-4826|2024-08-02T07:38:00.761Z</guid>
      <pubDate>Fri, 23 Feb 2024 09:14:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3476|2024-08-02T13:39:35.587Z -- unknown -- side%20menu%20lite</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3476</link>
      <description>The Side Menu Lite  WordPress plugin before 4.2.1 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting buttons via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3476|2024-08-02T13:39:35.587Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0858|2024-08-02T15:24:33.234Z -- unknown -- innovs%20hr</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0858</link>
      <description>The Innovs HR WordPress plugin through 1.0.3.4 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as adding them as employees.</description>
      <guid isPermaLink="false">CVE-2024-0858|2024-08-02T15:24:33.234Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7232|2024-08-02T17:32:05.721Z -- unknown -- backup%20and%20restore%20wordpress</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-7232</link>
      <description>The Backup and Restore WordPress  WordPress plugin through 1.45 does not protect some log files containing sensitive information such as site configuration etc, allowing unauthenticated users to access such data</description>
      <guid isPermaLink="false">CVE-2023-7232|2024-08-02T17:32:05.721Z</guid>
      <pubDate>Tue, 26 Mar 2024 05:00:02 +0000</pubDate>
    </item>
  </channel>
</rss>

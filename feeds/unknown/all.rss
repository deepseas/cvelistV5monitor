<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Unknown -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/unknown/all.rss</link>
    <description>The latest CVEs for Unknown -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 12 Jun 2024 11:24:18 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-5343|2023-11-20T18:55:12.772Z -- unknown -- popup%20box
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5343</link>
      <description>The Popup box WordPress plugin before 3.7.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2023-5343|2023-11-20T18:55:12.772Z</guid>
      <pubDate>Mon, 20 Nov 2023 18:55:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5601|2023-11-06T20:41:49.307Z -- unknown -- woocommerce%20ninja%20forms%20product%20add-ons
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5601</link>
      <description>The WooCommerce Ninja Forms Product Add-ons WordPress plugin before 1.7.1 does not validate the file to be uploaded, allowing any unauthenticated users to upload arbitrary files to the server, leading to RCE.</description>
      <guid isPermaLink="false">CVE-2023-5601|2023-11-06T20:41:49.307Z</guid>
      <pubDate>Mon, 06 Nov 2023 20:41:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5181|2023-11-06T20:41:32.307Z -- unknown -- wp%20discord%20invite
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5181</link>
      <description>The WP Discord Invite WordPress plugin before 2.5.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-5181|2023-11-06T20:41:32.307Z</guid>
      <pubDate>Mon, 06 Nov 2023 20:41:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5882|2023-12-18T20:08:04.861Z -- unknown -- export%20any%20wordpress%20data%20to%20xml%2Fcsv
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5882</link>
      <description>The Export any WordPress data to XML/CSV WordPress plugin before 1.4.0, WP All Export Pro WordPress plugin before 1.8.6 does not check nonce tokens early enough in the request lifecycle, allowing attackers to make logged in users perform unwanted actions leading to remote code execution.</description>
      <guid isPermaLink="false">CVE-2023-5882|2023-12-18T20:08:04.861Z</guid>
      <pubDate>Mon, 18 Dec 2023 20:08:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5355|2023-11-06T20:41:57.821Z -- unknown -- awesome%20support
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5355</link>
      <description>The Awesome Support WordPress plugin before 6.1.5 does not sanitize file paths when deleting temporary attachment files, allowing a ticket submitter to delete arbitrary files on the server.</description>
      <guid isPermaLink="false">CVE-2023-5355|2023-11-06T20:41:57.821Z</guid>
      <pubDate>Mon, 06 Nov 2023 20:41:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5210|2023-12-04T21:28:59.242Z -- unknown -- amp%2B%20plus
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5210</link>
      <description>The AMP+ Plus WordPress plugin through 3.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-5210|2023-12-04T21:28:59.242Z</guid>
      <pubDate>Mon, 04 Dec 2023 21:28:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5640|2023-11-20T18:55:11.955Z -- unknown -- article%20analytics
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5640</link>
      <description>The Article Analytics WordPress plugin does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-5640|2023-11-20T18:55:11.955Z</guid>
      <pubDate>Mon, 20 Nov 2023 18:55:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5990|2023-12-04T21:29:10.777Z -- unknown -- interactive%20contact%20form%20and%20multi%20step%20form%20builder%20with%20drag%20%26%20drop%20editor
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5990</link>
      <description>The Interactive Contact Form and Multi Step Form Builder with Drag &amp; Drop Editor WordPress plugin before 3.4.2 does not have CSRF checks on some of its form actions such as deletion and duplication, which could allow attackers to make logged in admin perform such actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2023-5990|2023-12-04T21:29:10.777Z</guid>
      <pubDate>Mon, 04 Dec 2023 21:29:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5953|2023-12-04T21:28:03.020Z -- unknown -- welcart%20e-commerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5953</link>
      <description>The Welcart e-Commerce WordPress plugin before 2.9.5 does not validate files to be uploaded, as well as does not have authorisation and CSRF in an AJAX action handling such upload. As a result, any authenticated users, such as subscriber could upload arbitrary files, such as PHP on the server</description>
      <guid isPermaLink="false">CVE-2023-5953|2023-12-04T21:28:03.020Z</guid>
      <pubDate>Mon, 04 Dec 2023 21:28:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5089|2023-10-16T19:39:25.420Z -- unknown -- defender%20security
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5089</link>
      <description>The Defender Security WordPress plugin before 4.1.0 does not prevent redirects to the login page via the auth_redirect WordPress function, allowing an unauthenticated visitor to access the login page, even when the hide login page functionality of the plugin is enabled.</description>
      <guid isPermaLink="false">CVE-2023-5089|2023-10-16T19:39:25.420Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5877|2024-01-01T14:18:58.165Z -- unknown -- affiliate-toolkit
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5877</link>
      <description>The affiliate-toolkit WordPress plugin before 3.4.3 lacks authorization and authentication for requests to it's affiliate-toolkit-starter/tools/atkp_imagereceiver.php endpoint, allowing unauthenticated visitors to make requests to arbitrary URL's, including RFC1918 private addresses, leading to a Server Side Request Forgery (SSRF) issue.</description>
      <guid isPermaLink="false">CVE-2023-5877|2024-01-01T14:18:58.165Z</guid>
      <pubDate>Mon, 01 Jan 2024 14:18:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5119|2023-11-20T18:55:11.173Z -- unknown -- forminator
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5119</link>
      <description>The Forminator WordPress plugin before 1.27.0 does not properly sanitize the redirect-url field in the form submission settings, which could allow high-privilege users such as an administrator to inject arbitrary web scripts even when the unfiltered_html capability is disallowed (for example in a multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-5119|2023-11-20T18:55:11.173Z</guid>
      <pubDate>Mon, 20 Nov 2023 18:55:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5949|2023-12-18T20:08:03.243Z -- unknown -- smartcrawl%20wordpress%20seo%20checker%2C%20seo%20analyzer%2C%20seo%20optimizer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5949</link>
      <description>The SmartCrawl WordPress plugin before 3.8.3 does not prevent unauthorised users from accessing password-protected posts' content.</description>
      <guid isPermaLink="false">CVE-2023-5949|2023-12-18T20:08:03.243Z</guid>
      <pubDate>Mon, 18 Dec 2023 20:08:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5620|2023-11-27T16:22:07.320Z -- unknown -- web%20push%20notifications
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5620</link>
      <description>The Web Push Notifications WordPress plugin before 4.35.0 does not prevent visitors on the site from changing some of the plugin options, some of which may be used to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2023-5620|2023-11-27T16:22:07.320Z</guid>
      <pubDate>Mon, 27 Nov 2023 16:22:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5509|2023-11-20T18:55:10.363Z -- unknown -- floating%20notification%20bar%2C%20sticky%20menu%20on%20scroll%2C%20announcement%20banner%2C%20and%20sticky%20header%20for%20any%20theme
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5509</link>
      <description>The myStickymenu WordPress plugin before 2.6.5 does not adequately authorize some ajax calls, allowing any logged-in user to perform the actions.</description>
      <guid isPermaLink="false">CVE-2023-5509|2023-11-20T18:55:10.363Z</guid>
      <pubDate>Mon, 20 Nov 2023 18:55:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5749|2023-12-11T19:22:41.580Z -- unknown -- embedpress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5749</link>
      <description>The EmbedPress WordPress plugin before 3.9.2 does not sanitise and escape user input before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-5749|2023-12-11T19:22:41.580Z</guid>
      <pubDate>Mon, 11 Dec 2023 19:22:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5525|2023-11-27T16:22:06.971Z -- unknown -- limit%20login%20attempts%20reloaded
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5525</link>
      <description>The Limit Login Attempts Reloaded WordPress plugin before 2.25.26 is missing authorization on the `toggle_auto_update` AJAX action, allowing any user with a valid nonce to toggle the auto-update status of the plugin.</description>
      <guid isPermaLink="false">CVE-2023-5525|2023-11-27T16:22:06.971Z</guid>
      <pubDate>Mon, 27 Nov 2023 16:22:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5952|2023-12-04T21:27:54.563Z -- unknown -- welcart%20e-commerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5952</link>
      <description>The Welcart e-Commerce WordPress plugin before 2.9.5 unserializes user input from cookies, which could allow unautehtniacted users to perform PHP Object Injection when a suitable gadget is present on the blog</description>
      <guid isPermaLink="false">CVE-2023-5952|2023-12-04T21:27:54.563Z</guid>
      <pubDate>Mon, 04 Dec 2023 21:27:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5905|2024-01-15T15:10:43.450Z -- unknown -- demomentsomtres%20wordpress%20export%20posts%20with%20images
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5905</link>
      <description>The DeMomentSomTres WordPress Export Posts With Images WordPress plugin through 20220825 does not check authorization of requests to export the blog data, allowing any logged in user, such as subscribers to export the contents of the blog, including restricted and unpublished posts, as well as passwords of protected posts.</description>
      <guid isPermaLink="false">CVE-2023-5905|2024-01-15T15:10:43.450Z</guid>
      <pubDate>Mon, 15 Jan 2024 15:10:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5006|2024-01-17T14:31:48.144Z -- unknown -- wp%20discord%20invite
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5006</link>
      <description>The WP Discord Invite WordPress plugin before 2.5.1 does not protect some of its actions against CSRF attacks, allowing an unauthenticated attacker to perform actions on their behalf by tricking a logged in administrator to submit a crafted request.</description>
      <guid isPermaLink="false">CVE-2023-5006|2024-01-17T14:31:48.144Z</guid>
      <pubDate>Wed, 17 Jan 2024 14:31:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5991|2023-12-26T18:33:14.275Z -- unknown -- hotel%20booking%20lite
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5991</link>
      <description>The Hotel Booking Lite WordPress plugin before 4.8.5 does not validate file paths provided via user input, as well as does not have proper CSRF and authorisation checks, allowing unauthenticated users to download and delete arbitrary files on the server</description>
      <guid isPermaLink="false">CVE-2023-5991|2023-12-26T18:33:14.275Z</guid>
      <pubDate>Tue, 26 Dec 2023 18:33:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5354|2023-11-06T20:40:28.644Z -- unknown -- awesome%20support
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5354</link>
      <description>The Awesome Support WordPress plugin before 6.1.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-5354|2023-11-06T20:40:28.644Z</guid>
      <pubDate>Mon, 06 Nov 2023 20:40:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5211|2023-10-31T13:54:45.520Z -- unknown -- fattura24
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5211</link>
      <description>The Fattura24 WordPress plugin before 6.2.8 does not sanitize or escape the 'id' parameter before outputting it back in the page, leading to a reflected Cross-Site Scripting vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-5211|2023-10-31T13:54:45.520Z</guid>
      <pubDate>Tue, 31 Oct 2023 13:54:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5641|2023-11-27T16:22:06.585Z -- unknown -- martins%20free%20%26%20easy%20seo%20backlink%20link%20building%20network
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5641</link>
      <description>The Martins Free &amp; Easy SEO BackLink Link Building Network WordPress plugin before 1.2.30 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-5641|2023-11-27T16:22:06.585Z</guid>
      <pubDate>Mon, 27 Nov 2023 16:22:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5922|2024-01-16T15:57:21.145Z -- unknown -- royal%20elementor%20addons%20and%20templates
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5922</link>
      <description>The Royal Elementor Addons and Templates WordPress plugin before 1.3.81 does not ensure that users accessing posts via an AJAX action (and REST endpoint, currently disabled in the plugin) have the right to do so, allowing unauthenticated users to access arbitrary draft, private and password protected posts/pages content</description>
      <guid isPermaLink="false">CVE-2023-5922|2024-01-16T15:57:21.145Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:57:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5133|2023-10-16T19:39:17.507Z -- unknown -- user-activity-log-pro
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5133</link>
      <description>This user-activity-log-pro WordPress plugin before 2.3.4 retrieves client IP addresses from potentially untrusted headers, allowing an attacker to manipulate its value. This may be used to hide the source of malicious traffic.</description>
      <guid isPermaLink="false">CVE-2023-5133|2023-10-16T19:39:17.507Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5559|2023-11-27T16:22:06.218Z -- unknown -- 10web%20booster
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5559</link>
      <description>The 10Web Booster WordPress plugin before 2.24.18 does not validate the option name given to some AJAX actions, allowing unauthenticated users to delete arbitrary options from the database, leading to denial of service.</description>
      <guid isPermaLink="false">CVE-2023-5559|2023-11-27T16:22:06.218Z</guid>
      <pubDate>Mon, 27 Nov 2023 16:22:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5762|2023-12-04T21:28:22.256Z -- unknown -- filr
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5762</link>
      <description>The Filr WordPress plugin before 1.2.3.6 is vulnerable from an RCE (Remote Code Execution) vulnerability, which allows the operating system to execute commands and fully compromise the server on behalf of a user with Author-level privileges.</description>
      <guid isPermaLink="false">CVE-2023-5762|2023-12-04T21:28:22.256Z</guid>
      <pubDate>Mon, 04 Dec 2023 21:28:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5980|2023-12-26T18:33:13.444Z -- unknown -- bsk%20forms%20blacklist
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5980</link>
      <description>The BSK Forms Blacklist WordPress plugin before 3.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-5980|2023-12-26T18:33:13.444Z</guid>
      <pubDate>Tue, 26 Dec 2023 18:33:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5611|2023-11-27T16:22:05.826Z -- unknown -- seraphinite%20accelerator
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5611</link>
      <description>The Seraphinite Accelerator WordPress plugin before 2.20.32 does not have authorisation and CSRF checks when resetting and importing its settings, allowing unauthenticated users to reset them</description>
      <guid isPermaLink="false">CVE-2023-5611|2023-11-27T16:22:05.826Z</guid>
      <pubDate>Mon, 27 Nov 2023 16:22:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5884|2023-12-04T21:29:32.963Z -- unknown -- word%20balloon
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5884</link>
      <description>The Word Balloon WordPress plugin before 4.20.3 does not protect some of its actions against CSRF attacks, allowing an unauthenticated attacker to trick a logged in user to delete arbitrary avatars by clicking a link.</description>
      <guid isPermaLink="false">CVE-2023-5884|2023-12-04T21:29:32.963Z</guid>
      <pubDate>Mon, 04 Dec 2023 21:29:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5979|2023-12-04T21:27:37.654Z -- unknown -- ecommerce%20product%20catalog%20plugin%20for%20wordpress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5979</link>
      <description>The eCommerce Product Catalog Plugin for WordPress plugin before 3.3.26 does not have CSRF checks in some of its admin pages, which could allow attackers to make logged-in users perform unwanted actions via CSRF attacks, such as delete all products</description>
      <guid isPermaLink="false">CVE-2023-5979|2023-12-04T21:27:37.654Z</guid>
      <pubDate>Mon, 04 Dec 2023 21:27:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5955|2023-12-11T19:30:26.587Z -- unknown -- contact%20form%20email
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5955</link>
      <description>The Contact Form Email WordPress plugin before 1.3.44 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-5955|2023-12-11T19:30:26.587Z</guid>
      <pubDate>Mon, 11 Dec 2023 19:30:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5943|2024-01-29T14:44:25.295Z -- unknown -- wp-adv-quiz
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5943</link>
      <description>The Wp-Adv-Quiz WordPress plugin before 1.0.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed.</description>
      <guid isPermaLink="false">CVE-2023-5943|2024-01-29T14:44:25.295Z</guid>
      <pubDate>Mon, 29 Jan 2024 14:44:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5105|2023-12-04T21:27:46.153Z -- unknown -- frontend%20file%20manager%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5105</link>
      <description>The Frontend File Manager Plugin WordPress plugin before 22.6 has a vulnerability that allows an Editor+ user to bypass the file download logic and download files such as `wp-config.php`</description>
      <guid isPermaLink="false">CVE-2023-5105|2023-12-04T21:27:46.153Z</guid>
      <pubDate>Mon, 04 Dec 2023 21:27:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5041|2024-01-17T14:31:47.758Z -- unknown -- track%20the%20click
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5041</link>
      <description>The Track The Click WordPress plugin before 0.3.12 does not properly sanitize query parameters to the stats REST endpoint before using them in a database query, allowing a logged in user with an author role or higher to perform time based blind SQLi attacks on the database.</description>
      <guid isPermaLink="false">CVE-2023-5041|2024-01-17T14:31:47.758Z</guid>
      <pubDate>Wed, 17 Jan 2024 14:27:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5942|2023-11-27T16:22:05.089Z -- unknown -- medialist
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5942</link>
      <description>The Medialist WordPress plugin before 1.4.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-5942|2023-11-27T16:22:05.089Z</guid>
      <pubDate>Mon, 27 Nov 2023 16:22:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5738|2023-11-27T16:22:04.717Z -- unknown -- wordpress%20backup%20%26%20migration
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5738</link>
      <description>The WordPress Backup &amp; Migration WordPress plugin before 1.4.4 does not sanitise and escape some parameters, which could allow users with a role as low as Subscriber to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-5738|2023-11-27T16:22:04.717Z</guid>
      <pubDate>Mon, 27 Nov 2023 16:22:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5057|2023-10-16T19:39:13.142Z -- unknown -- activitypub
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5057</link>
      <description>The ActivityPub WordPress plugin before 1.0.0 does not escape user metadata before outputting them in mentions, which could allow users with a role of Contributor and above to perform Stored XSS attacks</description>
      <guid isPermaLink="false">CVE-2023-5057|2023-10-16T19:39:13.142Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5352|2023-11-06T20:40:54.117Z -- unknown -- awesome%20support
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5352</link>
      <description>The Awesome Support WordPress plugin before 6.1.5 does not correctly authorize the wpas_edit_reply function, allowing users to edit posts for which they do not have permission.</description>
      <guid isPermaLink="false">CVE-2023-5352|2023-11-06T20:40:54.117Z</guid>
      <pubDate>Mon, 06 Nov 2023 20:40:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5610|2023-11-20T18:55:09.577Z -- unknown -- seraphinite%20accelerator
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5610</link>
      <description>The Seraphinite Accelerator WordPress plugin before 2.2.29 does not validate the URL to redirect any authenticated user to, leading to an arbitrary redirect</description>
      <guid isPermaLink="false">CVE-2023-5610|2023-11-20T18:55:09.577Z</guid>
      <pubDate>Mon, 20 Nov 2023 18:55:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5939|2023-12-26T18:33:10.220Z -- unknown -- rtmedia%20for%20wordpress%2C%20buddypress%20and%20bbpress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5939</link>
      <description>The rtMedia for WordPress, BuddyPress and bbPress WordPress plugin before 4.6.16 loads the contents of the import file in an unsafe manner, leading to remote code execution by privileged users.</description>
      <guid isPermaLink="false">CVE-2023-5939|2023-12-26T18:33:10.220Z</guid>
      <pubDate>Tue, 26 Dec 2023 18:33:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5082|2023-11-06T20:40:37.134Z -- unknown -- history%20log%20by%20click5
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5082</link>
      <description>The History Log by click5 WordPress plugin before 1.0.13 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by admin users when using the Smash Balloon Social Photo Feed plugin alongside it.</description>
      <guid isPermaLink="false">CVE-2023-5082|2023-11-06T20:40:37.134Z</guid>
      <pubDate>Mon, 06 Nov 2023 20:40:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5651|2023-11-20T18:55:08.790Z -- unknown -- wp%20hotel%20booking
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5651</link>
      <description>The WP Hotel Booking WordPress plugin before 2.0.8 does not have authorisation and CSRF checks, as well as does not ensure that the package to be deleted is a package, allowing any authenticated users, such as subscriber to delete arbitrary posts</description>
      <guid isPermaLink="false">CVE-2023-5651|2023-11-20T18:55:08.790Z</guid>
      <pubDate>Mon, 20 Nov 2023 18:55:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5108|2023-12-04T21:29:21.316Z -- unknown -- easy%20newsletter%20signups
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5108</link>
      <description>The Easy Newsletter Signups WordPress plugin through 1.0.4 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-5108|2023-12-04T21:29:21.316Z</guid>
      <pubDate>Mon, 04 Dec 2023 21:29:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5558|2024-01-16T15:54:33.473Z -- unknown -- learnpress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5558</link>
      <description>The LearnPress WordPress plugin before 4.2.5.5 does not sanitise and escape user input before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-5558|2024-01-16T15:54:33.473Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:54:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5237|2023-10-31T13:54:44.838Z -- unknown -- memberlite%20shortcodes
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5237</link>
      <description>The Memberlite Shortcodes WordPress plugin before 1.3.9 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-5237|2023-10-31T13:54:44.838Z</guid>
      <pubDate>Tue, 31 Oct 2023 13:54:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5958|2023-11-27T16:22:03.963Z -- unknown -- post%20smtp%20mailer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5958</link>
      <description>The POST SMTP Mailer WordPress plugin before 2.7.1 does not escape email message content before displaying it in the backend, allowing an unauthenticated attacker to perform XSS attacks against highly privileged users.</description>
      <guid isPermaLink="false">CVE-2023-5958|2023-11-27T16:22:03.963Z</guid>
      <pubDate>Mon, 27 Nov 2023 16:22:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5325|2023-11-27T16:22:03.231Z -- unknown -- woocommerce%20vietnam%20checkout
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5325</link>
      <description>The Woocommerce Vietnam Checkout WordPress plugin before 2.0.6 does not escape the custom shipping phone field no the checkout form leading to XSS</description>
      <guid isPermaLink="false">CVE-2023-5325|2023-11-27T16:22:03.231Z</guid>
      <pubDate>Mon, 27 Nov 2023 16:22:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5519|2023-10-31T13:54:44.499Z -- unknown -- eventprime
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5519</link>
      <description>The EventPrime WordPress plugin before 3.2.0 does not have CSRF checks when creating bookings, which could allow attackers to make logged in users create unwanted bookings via CSRF attacks.</description>
      <guid isPermaLink="false">CVE-2023-5519|2023-10-31T13:54:44.499Z</guid>
      <pubDate>Tue, 31 Oct 2023 13:54:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5098|2023-10-31T13:54:44.176Z -- unknown -- campaign%20monitor%20forms%20by%20optin%20cat
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5098</link>
      <description>The Campaign Monitor Forms by Optin Cat WordPress plugin before 2.5.6 does not prevent users with low privileges (like subscribers) from overwriting any options on a site with the string "true", which could lead to a variety of outcomes, including DoS.</description>
      <guid isPermaLink="false">CVE-2023-5098|2023-10-31T13:54:44.176Z</guid>
      <pubDate>Tue, 31 Oct 2023 13:54:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5974|2023-11-27T16:22:02.863Z -- unknown -- wpb-show-core
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5974</link>
      <description>The WPB Show Core WordPress plugin through 2.2 is vulnerable to server-side request forgery (SSRF) via the `path` parameter.</description>
      <guid isPermaLink="false">CVE-2023-5974|2023-11-27T16:22:02.863Z</guid>
      <pubDate>Mon, 27 Nov 2023 16:22:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5348|2023-12-18T20:07:59.959Z -- unknown -- product%20catalog%20mode%20for%20woocommerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5348</link>
      <description>The Product Catalog Mode For WooCommerce WordPress plugin before 5.0.3 does not properly authorize settings updates or escape settings values, leading to stored XSS by unauthenticated users.</description>
      <guid isPermaLink="false">CVE-2023-5348|2023-12-18T20:07:59.959Z</guid>
      <pubDate>Mon, 18 Dec 2023 20:07:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5124|2024-01-29T14:44:23.796Z -- unknown -- page%20builder%3A%20pagelayer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5124</link>
      <description>The Page Builder: Pagelayer WordPress plugin before 1.8.0 doesn't prevent attackers with administrator privileges from inserting malicious JavaScript inside a post's header or footer code, even when unfiltered_html is disallowed, such as in multi-site WordPress configurations.</description>
      <guid isPermaLink="false">CVE-2023-5124|2024-01-29T14:44:23.796Z</guid>
      <pubDate>Mon, 29 Jan 2024 14:44:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5737|2023-11-27T16:22:02.521Z -- unknown -- wordpress%20backup%20%26%20migration
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5737</link>
      <description>The WordPress Backup &amp; Migration WordPress plugin before 1.4.4 does not authorize some AJAX requests, allowing users with a role as low as Subscriber to update some plugin settings.</description>
      <guid isPermaLink="false">CVE-2023-5737|2023-11-27T16:22:02.521Z</guid>
      <pubDate>Mon, 27 Nov 2023 16:22:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5672|2023-12-26T18:33:09.420Z -- unknown -- wp%20mail%20log
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5672</link>
      <description>The WP Mail Log WordPress plugin before 1.1.3 does not properly validate file path parameters when attaching files to emails, leading to local file inclusion, and allowing an attacker to leak the contents of arbitrary files.</description>
      <guid isPermaLink="false">CVE-2023-5672|2023-12-26T18:33:09.420Z</guid>
      <pubDate>Tue, 26 Dec 2023 18:33:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5799|2023-11-20T18:55:07.999Z -- unknown -- wp%20hotel%20booking
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5799</link>
      <description>The WP Hotel Booking WordPress plugin before 2.0.8 does not have proper authorisation when deleting a package, allowing Contributor and above roles to delete posts that do no belong to them</description>
      <guid isPermaLink="false">CVE-2023-5799|2023-11-20T18:55:07.999Z</guid>
      <pubDate>Mon, 20 Nov 2023 18:55:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5609|2023-11-20T18:55:06.964Z -- unknown -- seraphinite%20accelerator
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5609</link>
      <description>The Seraphinite Accelerator WordPress plugin before 2.2.29 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-5609|2023-11-20T18:55:06.964Z</guid>
      <pubDate>Mon, 20 Nov 2023 18:55:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5957|2024-01-08T19:00:32.181Z -- unknown -- ni%20purchase%20order%28po%29%20for%20woocommerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5957</link>
      <description>The Ni Purchase Order(PO) For WooCommerce WordPress plugin through 1.2.1 does not validate logo and signature image files uploaded in the settings, allowing high privileged user to upload arbitrary files to the web server, triggering an RCE vulnerability by uploading a web shell.</description>
      <guid isPermaLink="false">CVE-2023-5957|2024-01-08T19:00:32.181Z</guid>
      <pubDate>Mon, 08 Jan 2024 19:00:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5238|2023-10-31T13:54:43.838Z -- unknown -- eventprime
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5238</link>
      <description>The EventPrime WordPress plugin before 3.2.0 does not sanitise and escape a parameter before outputting it back in the page, leading to an HTML Injection on the plugin in the search area of the website.</description>
      <guid isPermaLink="false">CVE-2023-5238|2023-10-31T13:54:43.838Z</guid>
      <pubDate>Tue, 31 Oct 2023 13:54:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5845|2023-11-27T16:22:02.151Z -- unknown -- simple%20social%20media%20share%20buttons
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5845</link>
      <description>The Simple Social Media Share Buttons WordPress plugin before 5.1.1 leaks password-protected post content to unauthenticated visitors in some meta tags</description>
      <guid isPermaLink="false">CVE-2023-5845|2023-11-27T16:22:02.151Z</guid>
      <pubDate>Mon, 27 Nov 2023 16:22:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5003|2023-10-16T19:39:08.657Z -- unknown -- active%20directory%20integration%20%2F%20ldap%20integration
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5003</link>
      <description>The Active Directory Integration / LDAP Integration WordPress plugin before 4.1.10 stores sensitive LDAP logs in a buffer file when an administrator wants to export said logs. Unfortunately, this log file is never removed, and remains accessible to any users knowing the URL to do so.</description>
      <guid isPermaLink="false">CVE-2023-5003|2023-10-16T19:39:08.657Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5644|2023-12-26T18:33:08.615Z -- unknown -- wp%20mail%20log
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5644</link>
      <description>The WP Mail Log WordPress plugin before 1.1.3 does not correctly authorize its REST API endpoints, allowing users with the Contributor role to view and delete data that should only be accessible to Admin users.</description>
      <guid isPermaLink="false">CVE-2023-5644|2023-12-26T18:33:08.615Z</guid>
      <pubDate>Tue, 26 Dec 2023 18:33:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5886|2023-12-18T20:07:57.546Z -- unknown -- export%20any%20wordpress%20data%20to%20xml%2Fcsv
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5886</link>
      <description>The Export any WordPress data to XML/CSV WordPress plugin before 1.4.0, WP All Export Pro WordPress plugin before 1.8.6 does not check nonce tokens early enough in the request lifecycle, allowing attackers with the ability to upload files to make logged in users perform unwanted actions leading to PHAR deserialization, which may lead to remote code execution.</description>
      <guid isPermaLink="false">CVE-2023-5886|2023-12-18T20:07:57.546Z</guid>
      <pubDate>Mon, 18 Dec 2023 20:07:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5243|2023-10-31T13:54:43.491Z -- unknown -- login%20screen%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5243</link>
      <description>The Login Screen Manager WordPress plugin through 3.5.2 does not sanitize and escape some of its settings, which could allow high-privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-5243|2023-10-31T13:54:43.491Z</guid>
      <pubDate>Tue, 31 Oct 2023 13:54:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5605|2023-12-04T10:18:13.608Z -- unknown -- url%20shortify
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5605</link>
      <description>The URL Shortify WordPress plugin before 1.7.9.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-5605|2023-12-04T10:18:13.608Z</guid>
      <pubDate>Mon, 06 Nov 2023 20:42:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5652|2023-11-20T18:55:06.152Z -- unknown -- wp%20hotel%20booking
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5652</link>
      <description>The WP Hotel Booking WordPress plugin before 2.0.8 does not have authorisation and CSRF checks, as well as does not escape user input before using it in a SQL statement of a function hooked to admin_init, allowing unauthenticated users to perform SQL injections</description>
      <guid isPermaLink="false">CVE-2023-5652|2023-11-20T18:55:06.152Z</guid>
      <pubDate>Mon, 20 Nov 2023 18:55:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5653|2023-11-27T16:22:01.293Z -- unknown -- wassup%20real%20time%20analytics
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5653</link>
      <description>The WassUp Real Time Analytics WordPress plugin through 1.9.4.5 does not escape IP address provided via some headers before outputting them back in an admin page, allowing unauthenticated users to perform Stored XSS attacks against logged in admins</description>
      <guid isPermaLink="false">CVE-2023-5653|2023-11-27T16:22:01.293Z</guid>
      <pubDate>Mon, 27 Nov 2023 16:22:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5203|2023-12-26T18:33:07.808Z -- unknown -- wp%20sessions%20time%20monitoring%20full%20automatic
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5203</link>
      <description>The WP Sessions Time Monitoring Full Automatic WordPress plugin before 1.0.9 does not sanitize the request URL or query parameters before using them in an SQL query, allowing unauthenticated attackers to extract sensitive data from the database via blind time based SQL injection techniques, or in some cases an error/union based technique.</description>
      <guid isPermaLink="false">CVE-2023-5203|2023-12-26T18:33:07.808Z</guid>
      <pubDate>Tue, 26 Dec 2023 18:33:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5604|2023-11-27T16:22:00.940Z -- unknown -- asgaros%20forum
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5604</link>
      <description>The Asgaros Forum WordPress plugin before 2.7.1 allows forum administrators, who may not be WordPress (super-)administrators, to set insecure configuration that allows unauthenticated users to upload dangerous files (e.g. .php, .phtml), potentially leading to remote code execution.</description>
      <guid isPermaLink="false">CVE-2023-5604|2023-11-27T16:22:00.940Z</guid>
      <pubDate>Mon, 27 Nov 2023 16:22:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5757|2023-12-26T18:33:07.013Z -- unknown -- wp%20crowdfunding
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5757</link>
      <description>The WP Crowdfunding WordPress plugin before 2.1.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-5757|2023-12-26T18:33:07.013Z</guid>
      <pubDate>Mon, 11 Dec 2023 19:22:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5307|2023-10-31T13:54:43.166Z -- unknown -- photos%20and%20files%20contest%20gallery
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5307</link>
      <description>The Photos and Files Contest Gallery WordPress plugin before 21.2.8.1 does not sanitise and escape some parameters, which could allow unauthenticated users to perform Cross-Site Scripting attacks via certain headers.</description>
      <guid isPermaLink="false">CVE-2023-5307|2023-10-31T13:54:43.166Z</guid>
      <pubDate>Tue, 31 Oct 2023 13:54:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5645|2023-12-26T18:33:05.509Z -- unknown -- wp%20mail%20log
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5645</link>
      <description>The WP Mail Log WordPress plugin before 1.1.3 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as Contributor.</description>
      <guid isPermaLink="false">CVE-2023-5645|2023-12-26T18:33:05.509Z</guid>
      <pubDate>Tue, 26 Dec 2023 18:33:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5239|2023-11-27T16:22:00.577Z -- unknown -- security%20%26%20malware%20scan%20by%20cleantalk
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5239</link>
      <description>The Security &amp; Malware scan by CleanTalk WordPress plugin before 2.121 retrieves client IP addresses from potentially untrusted headers, allowing an attacker to manipulate its value. This may be used to bypass bruteforce protection.</description>
      <guid isPermaLink="false">CVE-2023-5239|2023-11-27T16:22:00.577Z</guid>
      <pubDate>Mon, 27 Nov 2023 16:22:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5956|2024-01-29T14:44:20.684Z -- unknown -- wp-adv-quiz
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5956</link>
      <description>The Wp-Adv-Quiz WordPress plugin through 1.0.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-5956|2024-01-29T14:44:20.684Z</guid>
      <pubDate>Mon, 29 Jan 2024 14:44:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5940|2023-12-11T19:22:39.568Z -- unknown -- wp%20not%20login%20hide%20%28wpnlh%29
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5940</link>
      <description>The WP Not Login Hide (WPNLH) WordPress plugin through 1.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-5940|2023-12-11T19:22:39.568Z</guid>
      <pubDate>Mon, 11 Dec 2023 19:22:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5167|2023-10-16T19:39:00.682Z -- unknown -- user-activity-log-pro
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5167</link>
      <description>The User Activity Log Pro WordPress plugin before 2.3.4 does not properly escape recorded User-Agents in the user activity logs dashboard, which may allow visitors to conduct Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-5167|2023-10-16T19:39:00.682Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5560|2023-11-27T16:22:00.142Z -- unknown -- wp-useronline
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5560</link>
      <description>The WP-UserOnline WordPress plugin before 2.88.3 does not sanitise and escape the X-Forwarded-For header before outputting its content on the page, which allows unauthenticated users to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-5560|2023-11-27T16:22:00.142Z</guid>
      <pubDate>Mon, 27 Nov 2023 16:22:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5798|2023-10-26T09:08:53.640Z -- unknown -- assistant
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5798</link>
      <description>The Assistant WordPress plugin before 1.4.4 does not validate a parameter before making a request to it via wp_remote_get(), which could allow users with a role as low as Editor to perform SSRF attacks</description>
      <guid isPermaLink="false">CVE-2023-5798|2023-10-26T09:08:53.640Z</guid>
      <pubDate>Thu, 26 Oct 2023 09:08:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5235|2024-01-08T19:00:36.131Z -- unknown -- ovic%20responsive%20wpbakery
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5235</link>
      <description>The Ovic Responsive WPBakery WordPress plugin before 1.2.9 does not limit which options can be updated via some of its AJAX actions, which may allow attackers with a subscriber+ account to update blog options, such as 'users_can_register' and 'default_role'. It also unserializes user input in the process, which may lead to Object Injection attacks.</description>
      <guid isPermaLink="false">CVE-2023-5235|2024-01-08T19:00:36.131Z</guid>
      <pubDate>Mon, 08 Jan 2024 19:00:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5809|2023-12-04T21:29:58.534Z -- unknown -- popup%20box
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5809</link>
      <description>The Popup box WordPress plugin before 3.8.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-5809|2023-12-04T21:29:58.534Z</guid>
      <pubDate>Mon, 04 Dec 2023 21:29:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5673|2023-12-26T18:33:03.911Z -- unknown -- wp%20mail%20log
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5673</link>
      <description>The WP Mail Log WordPress plugin before 1.1.3 does not properly validate file extensions uploading files to attach to emails, allowing attackers to upload PHP files, leading to remote code execution.</description>
      <guid isPermaLink="false">CVE-2023-5673|2023-12-26T18:33:03.911Z</guid>
      <pubDate>Tue, 26 Dec 2023 18:33:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5228|2023-11-06T20:40:45.628Z -- unknown -- user%20registration
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5228</link>
      <description>The User Registration WordPress plugin before 3.0.4.2 does not sanitize and escape some of its settings, which could allow high-privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-5228|2023-11-06T20:40:45.628Z</guid>
      <pubDate>Mon, 06 Nov 2023 20:40:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5951|2023-12-04T21:28:42.287Z -- unknown -- welcart%20e-commerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5951</link>
      <description>The Welcart e-Commerce WordPress plugin before 2.9.5 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-5951|2023-12-04T21:28:42.287Z</guid>
      <pubDate>Mon, 04 Dec 2023 21:28:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5140|2023-11-20T18:55:02.911Z -- unknown -- bonus%20for%20woo
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5140</link>
      <description>The Bonus for Woo WordPress plugin before 5.8.3 does not sanitise and escape some parameters before outputting them back in pages, leading to Reflected Cross-Site Scripting which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-5140|2023-11-20T18:55:02.911Z</guid>
      <pubDate>Mon, 20 Nov 2023 18:55:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5005|2023-12-18T20:07:55.051Z -- unknown -- autocomplete%20location%20field%20contact%20form%207
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5005</link>
      <description>The Autocomplete Location field Contact Form 7 WordPress plugin before 3.0, autocomplete-location-field-contact-form-7-pro WordPress plugin before 2.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-5005|2023-12-18T20:07:55.051Z</guid>
      <pubDate>Mon, 18 Dec 2023 20:07:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5906|2023-11-27T16:21:59.373Z -- unknown -- job%20manager%20%26%20career
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5906</link>
      <description>The Job Manager &amp; Career WordPress plugin before 1.4.4 contains a vulnerability in the Directory Listings system, which allows an unauthorized user to view and download private files of other users. This vulnerability poses a serious security threat because it allows an attacker to gain access to confidential data and files of other users without their permission.</description>
      <guid isPermaLink="false">CVE-2023-5906|2023-11-27T16:21:59.373Z</guid>
      <pubDate>Mon, 27 Nov 2023 16:21:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5750|2023-12-11T19:22:38.813Z -- unknown -- embedpress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5750</link>
      <description>The EmbedPress WordPress plugin before 3.9.2 does not sanitise and escape a parameter before outputting it back in the page containing a specific content, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-5750|2023-12-11T19:22:38.813Z</guid>
      <pubDate>Mon, 11 Dec 2023 19:22:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5087|2023-10-16T19:38:57.172Z -- unknown -- page%20builder%3A%20pagelayer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5087</link>
      <description>The Page Builder: Pagelayer WordPress plugin before 1.7.8 doesn't prevent attackers with author privileges and higher from inserting malicious JavaScript inside a post's header or footer code.</description>
      <guid isPermaLink="false">CVE-2023-5087|2023-10-16T19:38:57.172Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:38:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5674|2023-12-26T18:33:03.106Z -- unknown -- wp%20mail%20log
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5674</link>
      <description>The WP Mail Log WordPress plugin before 1.1.3 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as Contributor.</description>
      <guid isPermaLink="false">CVE-2023-5674|2023-12-26T18:33:03.106Z</guid>
      <pubDate>Tue, 26 Dec 2023 18:33:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5971|2024-05-09T06:00:02.319Z -- unknown -- save%20as%20pdf%20plugin%20by%20pdfcrowd
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5971</link>
      <description>The Save as PDF Plugin by Pdfcrowd WordPress plugin before 3.2.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-5971|2024-05-09T06:00:02.319Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5137|2023-12-04T21:28:33.766Z -- unknown -- simply%20excerpts
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5137</link>
      <description>The Simply Excerpts WordPress plugin through 1.4 does not sanitize and escape some fields in the plugin settings, which could allow high-privilege users such as an administrator to inject arbitrary web scripts even when the unfiltered_html capability is disallowed (for example in a multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-5137|2023-12-04T21:28:33.766Z</guid>
      <pubDate>Mon, 04 Dec 2023 21:28:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5530|2023-11-06T20:41:40.862Z -- unknown -- ninja%20forms%20contact%20form
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5530</link>
      <description>The Ninja Forms Contact Form WordPress plugin before 3.6.34 does not sanitize and escape its label fields, which could allow high privilege users such as admin to perform Stored XSS attacks. Only users with the unfiltered_html capability can perform this, and such users are already allowed to use JS in posts/comments etc however the vendor acknowledged and fixed the issue</description>
      <guid isPermaLink="false">CVE-2023-5530|2023-11-06T20:41:40.862Z</guid>
      <pubDate>Mon, 06 Nov 2023 20:41:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5209|2023-11-27T16:21:59.004Z -- unknown -- wordpress%20online%20booking%20and%20scheduling%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5209</link>
      <description>The WordPress Online Booking and Scheduling Plugin WordPress plugin before 22.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-5209|2023-11-27T16:21:59.004Z</guid>
      <pubDate>Mon, 27 Nov 2023 16:21:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5931|2023-12-26T18:33:01.473Z -- unknown -- rtmedia%20for%20wordpress%2C%20buddypress%20and%20bbpress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5931</link>
      <description>The rtMedia for WordPress, BuddyPress and bbPress WordPress plugin before 4.6.16 does not validate files to be uploaded, which could allow attackers with a low-privilege account (e.g. subscribers) to upload arbitrary files such as PHP on the server</description>
      <guid isPermaLink="false">CVE-2023-5931|2023-12-26T18:33:01.473Z</guid>
      <pubDate>Tue, 26 Dec 2023 18:33:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5177|2023-10-16T19:38:53.691Z -- unknown -- vrm%20360%203d%20model%20viewer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5177</link>
      <description>The Vrm 360 3D Model Viewer WordPress plugin through 1.2.1 exposes the full path of a file when putting in a non-existent file in a parameter of the shortcode.</description>
      <guid isPermaLink="false">CVE-2023-5177|2023-10-16T19:38:53.691Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:38:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5874|2023-12-04T21:28:13.541Z -- unknown -- popup%20box
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5874</link>
      <description>The Popup box WordPress plugin before 3.8.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-5874|2023-12-04T21:28:13.541Z</guid>
      <pubDate>Mon, 04 Dec 2023 21:28:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5458|2023-10-31T13:54:42.463Z -- unknown -- cits%20support%20svg%2C%20webp%20media%20and%20ttf%2Cotf%20file%20upload
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5458</link>
      <description>The CITS Support svg, webp Media and TTF,OTF File Upload WordPress plugin before 3.0 does not sanitise uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2023-5458|2023-10-31T13:54:42.463Z</guid>
      <pubDate>Tue, 31 Oct 2023 13:54:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5360|2023-10-31T13:54:42.111Z -- unknown -- royal%20elementor%20addons%20and%20templates
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5360</link>
      <description>The Royal Elementor Addons and Templates WordPress plugin before 1.3.79 does not properly validate uploaded files, which could allow unauthenticated users to upload arbitrary files, such as PHP and achieve RCE.</description>
      <guid isPermaLink="false">CVE-2023-5360|2023-10-31T13:54:42.111Z</guid>
      <pubDate>Tue, 31 Oct 2023 13:54:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5340|2023-11-20T18:55:01.256Z -- unknown -- five%20star%20restaurant%20menu%20and%20food%20ordering
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5340</link>
      <description>The Five Star Restaurant Menu and Food Ordering WordPress plugin before 2.4.11 unserializes user input via an AJAX action available to unauthenticated users, allowing them to perform PHP Object Injection when a suitable gadget is present on the blog.</description>
      <guid isPermaLink="false">CVE-2023-5340|2023-11-20T18:55:01.256Z</guid>
      <pubDate>Mon, 20 Nov 2023 18:55:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5141|2023-12-04T21:29:50.002Z -- unknown -- bsk%20contact%20form%207%20blacklist
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5141</link>
      <description>The BSK Contact Form 7 Blacklist WordPress plugin through 1.0.1 does not sanitise and escape the inserted_count parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-5141|2023-12-04T21:29:50.002Z</guid>
      <pubDate>Mon, 04 Dec 2023 21:29:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5454|2023-11-13T08:17:11.006Z -- unknown -- templately
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5454</link>
      <description>The Templately WordPress plugin before 2.2.6 does not properly authorize the `saved-templates/delete` REST API call, allowing unauthenticated users to delete arbitrary posts.</description>
      <guid isPermaLink="false">CVE-2023-5454|2023-11-13T08:17:11.006Z</guid>
      <pubDate>Mon, 06 Nov 2023 20:40:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5907|2023-12-11T19:22:37.067Z -- unknown -- file%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5907</link>
      <description>The File Manager WordPress plugin before 6.3 does not restrict the file managers root directory, allowing an administrator to set a root outside of the WordPress root directory, giving access to system files and directories even in a multisite setup, where site administrators should not be allowed to modify the sites files.</description>
      <guid isPermaLink="false">CVE-2023-5907|2023-12-11T19:22:37.067Z</guid>
      <pubDate>Mon, 11 Dec 2023 19:22:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5229|2023-10-31T13:54:41.760Z -- unknown -- e2pdf
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5229</link>
      <description>The E2Pdf WordPress plugin before 1.20.20 does not sanitize and escape some of its settings, which could allow high privilege users to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed</description>
      <guid isPermaLink="false">CVE-2023-5229|2023-10-31T13:54:41.760Z</guid>
      <pubDate>Tue, 31 Oct 2023 13:54:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5911|2024-01-08T19:00:37.176Z -- unknown -- wp%20custom%20cursors%20%7C%20wordpress%20cursor%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-5911</link>
      <description>The WP Custom Cursors | WordPress Cursor Plugin WordPress plugin through 3.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-5911|2024-01-08T19:00:37.176Z</guid>
      <pubDate>Mon, 08 Jan 2024 19:00:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1087|2023-03-27T15:37:45.104Z -- unknown -- wc%20sales%20notification
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1087</link>
      <description>The WC Sales Notification WordPress plugin before 1.2.3 does not have CSRF check when activating plugins, which could allow attackers to make logged in admins activate arbitrary plugins present on the blog via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-1087|2023-03-27T15:37:45.104Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1414|2023-04-24T18:31:02.339Z -- unknown -- wp%20vr
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1414</link>
      <description>The WP VR WordPress plugin before 8.3.0 does not have authorisation and CSRF checks in various AJAX actions, one in particular could allow any authenticated users, such as subscriber to update arbitrary tours</description>
      <guid isPermaLink="false">CVE-2023-1414|2023-04-24T18:31:02.339Z</guid>
      <pubDate>Mon, 24 Apr 2023 18:31:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1025|2023-03-27T15:37:42.298Z -- unknown -- simple%20file%20list
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1025</link>
      <description>The Simple File List WordPress plugin before 6.0.10 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-1025|2023-03-27T15:37:42.298Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1121|2023-04-10T13:18:04.716Z -- unknown -- simple%20giveaways
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1121</link>
      <description>The Simple Giveaways WordPress plugin before 2.45.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-1121|2023-04-10T13:18:04.716Z</guid>
      <pubDate>Mon, 10 Apr 2023 13:18:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1208|2023-07-10T13:05:53.449Z -- unknown -- http%20headers
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1208</link>
      <description>This HTTP Headers WordPress plugin before 1.18.11 allows arbitrary data to be written to arbitrary files, leading to a Remote Code Execution vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-1208|2023-07-10T13:05:53.449Z</guid>
      <pubDate>Mon, 10 Jul 2023 12:41:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1623|2023-04-24T18:31:01.462Z -- unknown -- custom%20post%20type%20ui
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1623</link>
      <description>The Custom Post Type UI WordPress plugin before 1.13.5 does not properly check for CSRF when sending the debug information to a user supplied email, which could allow attackers to make a logged in admin send such information to an arbitrary email address via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2023-1623|2023-04-24T18:31:01.462Z</guid>
      <pubDate>Mon, 24 Apr 2023 18:31:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1273|2023-07-05T10:47:51.715Z -- unknown -- nd%20shortcodes
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1273</link>
      <description>The ND Shortcodes WordPress plugin before 7.0 does not validate some shortcode attributes before using them to generate paths passed to include function/s, allowing any authenticated users such as subscriber to perform LFI attacks</description>
      <guid isPermaLink="false">CVE-2023-1273|2023-07-05T10:47:51.715Z</guid>
      <pubDate>Tue, 04 Jul 2023 07:23:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1377|2023-04-03T14:38:28.439Z -- unknown -- solidres
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1377</link>
      <description>The Solidres WordPress plugin through 0.9.4 does not sanitise and escape numerous parameter before outputting them back in pages, leading to Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-1377|2023-04-03T14:38:28.439Z</guid>
      <pubDate>Mon, 03 Apr 2023 14:38:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1730|2023-05-02T07:05:01.073Z -- unknown -- supportcandy
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1730</link>
      <description>The SupportCandy WordPress plugin before 3.1.5 does not validate and escape user input before using it in an SQL statement, which could allow unauthenticated attackers to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2023-1730|2023-05-02T07:05:01.073Z</guid>
      <pubDate>Tue, 02 May 2023 07:05:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1120|2023-04-10T13:18:00.817Z -- unknown -- simple%20giveaways
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1120</link>
      <description>The Simple Giveaways WordPress plugin before 2.45.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-1120|2023-04-10T13:18:00.817Z</guid>
      <pubDate>Mon, 10 Apr 2023 13:18:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1435|2023-04-24T18:30:59.063Z -- unknown -- ajax%20search%20pro
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1435</link>
      <description>The Ajax Search Pro WordPress plugin before 4.26.2 does not sanitise and escape various parameters before outputting them back in pages, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-1435|2023-04-24T18:30:59.063Z</guid>
      <pubDate>Mon, 24 Apr 2023 18:30:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1835|2023-05-15T12:15:46.279Z -- unknown -- ninja%20forms%20contact%20form
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1835</link>
      <description>The Ninja Forms Contact Form WordPress plugin before 3.6.22 does not properly escape user input before outputting it back in an admin page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-1835|2023-05-15T12:15:46.279Z</guid>
      <pubDate>Mon, 15 May 2023 12:15:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1546|2023-05-02T07:05:00.258Z -- unknown -- mycryptocheckout
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1546</link>
      <description>The MyCryptoCheckout WordPress plugin before 2.124 does not escape some URLs before outputting them in attributes, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2023-1546|2023-05-02T07:05:00.258Z</guid>
      <pubDate>Tue, 02 May 2023 07:05:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1911|2023-05-02T07:04:59.433Z -- unknown -- blocksy%20companion
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1911</link>
      <description>The Blocksy Companion WordPress plugin before 1.8.82 does not ensure that posts to be accessed via a shortcode are already public and can be viewed, allowing any authenticated users, such as subscriber to access draft posts for example</description>
      <guid isPermaLink="false">CVE-2023-1911|2023-05-02T07:04:59.433Z</guid>
      <pubDate>Tue, 02 May 2023 07:04:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1086|2023-03-27T15:37:36.168Z -- unknown -- preview%20link%20generator
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1086</link>
      <description>The Preview Link Generator WordPress plugin before 1.0.4 does not have CSRF check when activating plugins, which could allow attackers to make logged in admins activate arbitrary plugins present on the blog via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-1086|2023-03-27T15:37:36.168Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1069|2023-03-27T15:37:34.972Z -- unknown -- complianz
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1069</link>
      <description>The Complianz WordPress plugin before 6.4.2, Complianz Premium WordPress plugin before 6.4.2 do not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-1069|2023-03-27T15:37:34.972Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1839|2023-05-15T12:15:45.502Z -- unknown -- product%20addons%20%26%20fields%20for%20woocommerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1839</link>
      <description>The Product Addons &amp; Fields for WooCommerce WordPress plugin before 32.0.6 does not sanitize and escape some of its setting fields, which could allow high-privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example, in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-1839|2023-05-15T12:15:45.502Z</guid>
      <pubDate>Mon, 15 May 2023 12:15:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1090|2023-05-02T07:04:58.593Z -- unknown -- smtp%20mailing%20queue
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1090</link>
      <description>The SMTP Mailing Queue WordPress plugin before 2.0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-1090|2023-05-02T07:04:58.593Z</guid>
      <pubDate>Tue, 02 May 2023 07:04:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1478|2023-04-10T13:17:59.068Z -- unknown -- hummingbird
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1478</link>
      <description>The Hummingbird WordPress plugin before 3.4.2 does not validate the generated file path for page cache files before writing them, leading to a path traversal vulnerability in the page cache module.</description>
      <guid isPermaLink="false">CVE-2023-1478|2023-04-10T13:17:59.068Z</guid>
      <pubDate>Mon, 10 Apr 2023 13:17:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1614|2023-05-02T07:04:57.754Z -- unknown -- wp%20custom%20author%20url
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1614</link>
      <description>The WP Custom Author URL WordPress plugin before 1.0.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-1614|2023-05-02T07:04:57.754Z</guid>
      <pubDate>Tue, 02 May 2023 07:04:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1166|2023-06-27T13:17:21.743Z -- unknown -- ultimate-premium-plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1166</link>
      <description>The USM-Premium WordPress plugin before 16.3 does not sanitize and escape some of its settings, which could allow high-privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example, in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-1166|2023-06-27T13:17:21.743Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1473|2023-04-17T12:17:48.829Z -- unknown -- slider%2C%20gallery%2C%20and%20carousel%20by%20metaslider
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1473</link>
      <description>The Slider, Gallery, and Carousel by MetaSlider WordPress plugin 3.29.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-1473|2023-04-17T12:17:48.829Z</guid>
      <pubDate>Mon, 17 Apr 2023 12:17:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1977|2023-08-16T11:03:28.672Z -- unknown -- booking%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1977</link>
      <description>The Booking Manager WordPress plugin before 2.0.29 does not validate URLs input in it's admin panel or in shortcodes for showing events from a remote .ics file, allowing an attacker with privileges as low as Subscriber to perform SSRF attacks on the sites internal network.</description>
      <guid isPermaLink="false">CVE-2023-1977|2023-08-16T11:03:28.672Z</guid>
      <pubDate>Wed, 16 Aug 2023 11:03:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1465|2023-08-16T11:03:27.810Z -- unknown -- wp%20easypay
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1465</link>
      <description>The WP EasyPay WordPress plugin before 4.1 does not escape some generated URLs before outputting them back in pages, leading to Reflected Cross-Site Scripting issues which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-1465|2023-08-16T11:03:27.810Z</guid>
      <pubDate>Wed, 16 Aug 2023 11:03:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1019|2023-05-15T12:15:43.027Z -- unknown -- help%20desk%20wp
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1019</link>
      <description>The Help Desk WP WordPress plugin through 1.2.0 does not sanitise and escape some parameters, which could allow users with a role as low as Editor to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-1019|2023-05-15T12:15:43.027Z</guid>
      <pubDate>Mon, 15 May 2023 12:15:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1330|2023-04-03T14:38:27.651Z -- unknown -- redirection
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1330</link>
      <description>The Redirection WordPress plugin before 1.1.4 does not add nonce verification in place when adding the redirect, which could allow attackers to add redirects via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2023-1330|2023-04-03T14:38:27.651Z</guid>
      <pubDate>Mon, 03 Apr 2023 14:38:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1408|2023-05-08T13:58:21.683Z -- unknown -- video%20list%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1408</link>
      <description>The Video List Manager WordPress plugin through 1.7 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-1408|2023-05-08T13:58:21.683Z</guid>
      <pubDate>Mon, 08 May 2023 13:58:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1371|2023-04-24T12:08:06.739Z -- unknown -- w4%20post%20list
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1371</link>
      <description>The W4 Post List WordPress plugin before 2.4.6 does not ensure that password protected posts can be accessed before displaying their content, which could allow any authenticated users to access them</description>
      <guid isPermaLink="false">CVE-2023-1371|2023-04-24T12:08:06.739Z</guid>
      <pubDate>Mon, 17 Apr 2023 12:17:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1347|2023-05-08T13:58:18.914Z -- unknown -- customizer%20export%2Fimport
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1347</link>
      <description>The Customizer Export/Import WordPress plugin before 0.9.6 unserializes user input provided via the settings, which could allow high privilege users such as admin to perform PHP Object Injection when a suitable gadget is present</description>
      <guid isPermaLink="false">CVE-2023-1347|2023-05-08T13:58:18.914Z</guid>
      <pubDate>Mon, 08 May 2023 13:58:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1982|2023-08-30T14:22:03.333Z -- unknown -- guest%20posting%20%2F%20frontend%20posting%20wordpress%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1982</link>
      <description>The Front Editor WordPress plugin through 4.0.4 does not sanitize and escape some of its form settings, which could allow high-privilege users to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-1982|2023-08-30T14:22:03.333Z</guid>
      <pubDate>Wed, 30 Aug 2023 14:22:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1890|2023-05-15T12:15:41.481Z -- unknown -- tablesome
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1890</link>
      <description>The Tablesome WordPress plugin before 1.0.9 does not escape various generated URLs, before outputting them in attributes when some notices are displayed, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2023-1890|2023-05-15T12:15:41.481Z</guid>
      <pubDate>Mon, 15 May 2023 12:15:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1804|2023-05-04T07:38:20.626Z -- unknown -- product%20catalog%20feed%20by%20pixelyoursite
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1804</link>
      <description>The Product Catalog Feed by PixelYourSite WordPress plugin before 2.1.1 does not sanitise and escape the edit parameter before outputting it back in an attribute, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as administrators.</description>
      <guid isPermaLink="false">CVE-2023-1804|2023-05-04T07:38:20.626Z</guid>
      <pubDate>Tue, 02 May 2023 07:04:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1405|2024-01-16T15:56:18.763Z -- unknown -- formidable%20forms
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1405</link>
      <description>The Formidable Forms WordPress plugin before 6.2 unserializes user input, which could allow anonymous users to perform PHP Object Injection when a suitable gadget is present.</description>
      <guid isPermaLink="false">CVE-2023-1405|2024-01-16T15:56:18.763Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:56:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1110|2023-08-16T11:03:26.120Z -- unknown -- yellow%20yard%20searchbar
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1110</link>
      <description>The Yellow Yard Searchbar WordPress plugin before 2.8.12 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-1110|2023-08-16T11:03:26.120Z</guid>
      <pubDate>Wed, 16 Aug 2023 11:03:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1669|2023-05-02T07:04:55.190Z -- unknown -- seopress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1669</link>
      <description>The SEOPress WordPress plugin before 6.5.0.3 unserializes user input provided via the settings, which could allow high-privilege users such as admin to perform PHP Object Injection when a suitable gadget is present.</description>
      <guid isPermaLink="false">CVE-2023-1669|2023-05-02T07:04:55.190Z</guid>
      <pubDate>Tue, 02 May 2023 07:04:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1413|2023-04-17T12:17:47.151Z -- unknown -- wp%20vr
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1413</link>
      <description>The WP VR WordPress plugin before 8.2.9 does not sanitise and escape some parameters before outputting them back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-1413|2023-04-17T12:17:47.151Z</guid>
      <pubDate>Mon, 17 Apr 2023 12:17:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1805|2023-05-02T07:04:54.297Z -- unknown -- product%20catalog%20feed%20by%20pixelyoursite
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1805</link>
      <description>The Product Catalog Feed by PixelYourSite WordPress plugin before 2.1.1 does not sanitise and escape the page parameter before outputting it back in an attribute, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-1805|2023-05-02T07:04:54.297Z</guid>
      <pubDate>Tue, 02 May 2023 07:04:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1891|2023-06-27T13:17:16.610Z -- unknown -- accordion%20%26%20faq
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1891</link>
      <description>The Accordion &amp; FAQ WordPress plugin before 1.9.9 does not escape various generated URLs, before outputting them in attributes when some notices are displayed, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2023-1891|2023-06-27T13:17:16.610Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1624|2023-04-24T18:30:56.651Z -- unknown -- wpcode
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1624</link>
      <description>The WPCode WordPress plugin before 2.0.9 has a flawed CSRF when deleting log, and does not ensure that the file to be deleted is inside the expected folder. This could allow attackers to make users with the wpcode_activate_snippets capability delete arbitrary log files on the server, including outside of the blog folders</description>
      <guid isPermaLink="false">CVE-2023-1624|2023-04-24T18:30:56.651Z</guid>
      <pubDate>Mon, 24 Apr 2023 18:30:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1274|2023-04-17T12:17:46.362Z -- unknown -- pricing%20tables%20for%20wpbakery%20page%20builder%20%28formerly%20visual%20composer%29
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1274</link>
      <description>The Pricing Tables For WPBakery Page Builder (formerly Visual Composer) WordPress plugin before 3.0 does not validate some shortcode attributes before using them to generate paths passed to include function/s, allowing any authenticated users such as subscriber to perform LFI attacks</description>
      <guid isPermaLink="false">CVE-2023-1274|2023-04-17T12:17:46.362Z</guid>
      <pubDate>Mon, 17 Apr 2023 12:17:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1331|2023-04-17T12:17:45.594Z -- unknown -- redirection
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1331</link>
      <description>The Redirection WordPress plugin before 1.1.5 does not have CSRF checks in the uninstall action, which could allow attackers to make logged in admins delete all the redirections through a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2023-1331|2023-04-17T12:17:45.594Z</guid>
      <pubDate>Mon, 17 Apr 2023 12:17:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1809|2023-05-02T07:04:53.506Z -- unknown -- download%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1809</link>
      <description>The Download Manager WordPress plugin before 6.3.0 leaks master key information without the need for a password, allowing attackers to download arbitrary password-protected package files.</description>
      <guid isPermaLink="false">CVE-2023-1809|2023-05-02T07:04:53.506Z</guid>
      <pubDate>Tue, 02 May 2023 07:04:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1126|2023-04-24T18:30:55.522Z -- unknown -- wp%20fevents%20book
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1126</link>
      <description>The WP FEvents Book WordPress plugin through 0.46 does not sanitise and escape some parameters, which could allow any authenticated users, such as subscriber to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-1126|2023-04-24T18:30:55.522Z</guid>
      <pubDate>Mon, 24 Apr 2023 18:30:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1649|2023-05-08T13:58:15.256Z -- unknown -- ai%20chatbot
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1649</link>
      <description>The AI ChatBot WordPress plugin before 4.5.1 does not sanitise and escape numerous of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-1649|2023-05-08T13:58:15.256Z</guid>
      <pubDate>Mon, 08 May 2023 13:58:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1425|2023-04-10T13:17:56.500Z -- unknown -- wordpress%20crm%2C%20email%20%26%20marketing%20automation%20for%20wordpress%20%7C%20award%20winner%20%E2%80%94%20groundhogg
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1425</link>
      <description>The WordPress CRM, Email &amp; Marketing Automation for WordPress | Award Winner — Groundhogg WordPress plugin before 2.7.9.4 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admins</description>
      <guid isPermaLink="false">CVE-2023-1425|2023-04-10T13:17:56.500Z</guid>
      <pubDate>Mon, 10 Apr 2023 13:17:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1373|2023-04-17T12:17:43.963Z -- unknown -- w4%20post%20list
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1373</link>
      <description>The W4 Post List WordPress plugin before 2.4.6 does not escape some URLs before outputting them in attributes, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2023-1373|2023-04-17T12:17:43.963Z</guid>
      <pubDate>Mon, 17 Apr 2023 12:17:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1324|2023-04-24T18:30:53.922Z -- unknown -- easy%20forms%20for%20mailchimp
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1324</link>
      <description>The Easy Forms for Mailchimp WordPress plugin before 6.8.8 does not sanitise and escape some parameters before outputting them back in the response, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-1324|2023-04-24T18:30:53.922Z</guid>
      <pubDate>Mon, 24 Apr 2023 18:30:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1125|2023-05-02T07:04:52.700Z -- unknown -- ruby%20help%20desk
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1125</link>
      <description>The Ruby Help Desk WordPress plugin before 1.3.4 does not ensure that the ticket being modified belongs to the user making the request, allowing an attacker to close and/or add files and replies to tickets other than their own.</description>
      <guid isPermaLink="false">CVE-2023-1125|2023-05-02T07:04:52.700Z</guid>
      <pubDate>Tue, 02 May 2023 07:04:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1426|2023-04-10T13:17:55.647Z -- unknown -- wp%20tiles
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1426</link>
      <description>The WP Tiles WordPress plugin through 1.1.2 does not ensure that posts to be displayed are not draft/private, allowing any authenticated users, such as subscriber to retrieve the titles of draft and privates posts for example. AN attacker could also retrieve the title of any other type of post.</description>
      <guid isPermaLink="false">CVE-2023-1426|2023-04-10T13:17:55.647Z</guid>
      <pubDate>Mon, 10 Apr 2023 13:17:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1021|2023-05-02T07:04:51.880Z -- unknown -- amr%20ical%20events%20lists
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1021</link>
      <description>The amr ical events lists WordPress plugin through 6.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-1021|2023-05-02T07:04:51.880Z</guid>
      <pubDate>Tue, 02 May 2023 07:04:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1406|2023-04-24T12:09:13.222Z -- unknown -- jetengine
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1406</link>
      <description>The JetEngine WordPress plugin before 3.1.3.1 includes uploaded files without adequately ensuring that they are not executable, leading to a remote code execution vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-1406|2023-04-24T12:09:13.222Z</guid>
      <pubDate>Mon, 10 Apr 2023 13:17:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1282|2023-04-17T12:17:42.385Z -- unknown -- drag%20and%20drop%20multiple%20file%20upload%20pro%20-%20contact%20form%207%20standard
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1282</link>
      <description>The Drag and Drop Multiple File Upload PRO - Contact Form 7 Standard WordPress plugin before 2.11.1 and Drag and Drop Multiple File Upload PRO - Contact Form 7 with Remote Storage Integrations WordPress plugin before 5.0.6.4 do not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high-privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2023-1282|2023-04-17T12:17:42.385Z</guid>
      <pubDate>Mon, 17 Apr 2023 12:17:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1806|2023-05-08T13:58:13.983Z -- unknown -- wp%20inventory%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1806</link>
      <description>The WP Inventory Manager WordPress plugin before 2.1.0.12 does not sanitise and escape the message parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as administrators.</description>
      <guid isPermaLink="false">CVE-2023-1806|2023-05-08T13:58:13.983Z</guid>
      <pubDate>Mon, 08 May 2023 13:58:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1938|2023-05-30T07:49:14.686Z -- unknown -- wp%20fastest%20cache
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1938</link>
      <description>The WP Fastest Cache WordPress plugin before 1.1.5 does not have CSRF check in an AJAX action, and does not validate user input before using it in the wp_remote_get() function, leading to a Blind SSRF issue</description>
      <guid isPermaLink="false">CVE-2023-1938|2023-05-30T07:49:14.686Z</guid>
      <pubDate>Tue, 30 May 2023 07:49:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1596|2023-05-15T12:15:36.699Z -- unknown -- tagdiv%20composer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1596</link>
      <description>The tagDiv Composer WordPress plugin before 4.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-1596|2023-05-15T12:15:36.699Z</guid>
      <pubDate>Mon, 15 May 2023 12:15:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1129|2023-04-24T18:30:52.240Z -- unknown -- wp%20fevents%20book
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1129</link>
      <description>The WP FEvents Book WordPress plugin through 0.46 does not ensures that bookings to be updated belong to the user making the request, allowing any authenticated user to book, add notes, or cancel booking on behalf of other users.</description>
      <guid isPermaLink="false">CVE-2023-1129|2023-04-24T18:30:52.240Z</guid>
      <pubDate>Mon, 24 Apr 2023 18:30:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1650|2023-05-08T13:58:12.709Z -- unknown -- ai%20chatbot
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1650</link>
      <description>The AI ChatBot WordPress plugin before 4.4.7 unserializes user input from cookies via an AJAX action available to unauthenticated users, which could allow them to perform PHP Object Injection when a suitable gadget is present on the blog</description>
      <guid isPermaLink="false">CVE-2023-1650|2023-05-08T13:58:12.709Z</guid>
      <pubDate>Mon, 08 May 2023 13:58:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1651|2023-05-08T13:58:09.550Z -- unknown -- ai%20chatbot
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1651</link>
      <description>The AI ChatBot WordPress plugin before 4.4.9 does not have authorisation and CSRF in the AJAX action responsible to update the OpenAI settings, allowing any authenticated users, such as subscriber to update them. Furthermore, due to the lack of escaping of the settings, this could also lead to Stored XSS</description>
      <guid isPermaLink="false">CVE-2023-1651|2023-05-08T13:58:09.550Z</guid>
      <pubDate>Mon, 08 May 2023 13:58:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1597|2023-07-10T13:05:46.120Z -- unknown -- tagdiv%20cloud%20library
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1597</link>
      <description>The tagDiv Cloud Library WordPress plugin before 2.7 does not have authorisation and CSRF in an AJAX action accessible to both unauthenticated and authenticated users, allowing unauthenticated users to change arbitrary user metadata, which could lead to privilege escalation by setting themselves as an admin of the blog.</description>
      <guid isPermaLink="false">CVE-2023-1597|2023-07-10T13:05:46.120Z</guid>
      <pubDate>Mon, 10 Jul 2023 12:40:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1893|2023-07-17T13:29:53.624Z -- unknown -- login%20configurator
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1893</link>
      <description>The Login Configurator WordPress plugin through 2.1 does not properly escape a URL parameter before outputting it to the page, leading to a reflected cross-site scripting vulnerability targeting site administrators.</description>
      <guid isPermaLink="false">CVE-2023-1893|2023-07-17T13:29:53.624Z</guid>
      <pubDate>Mon, 17 Jul 2023 13:29:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1554|2023-05-02T07:04:51.044Z -- unknown -- quick%20paypal%20payments
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1554</link>
      <description>The Quick Paypal Payments WordPress plugin before 5.7.26.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-1554|2023-05-02T07:04:51.044Z</guid>
      <pubDate>Tue, 02 May 2023 07:04:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1780|2023-07-10T13:05:44.941Z -- unknown -- companion%20sitemap%20generator
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1780</link>
      <description>The Companion Sitemap Generator WordPress plugin before 4.5.3 does not sanitise and escape some parameters before outputting them back in pages, leading to Reflected Cross-Site Scripting which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-1780|2023-07-10T13:05:44.941Z</guid>
      <pubDate>Mon, 10 Jul 2023 12:40:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1915|2023-05-15T12:15:33.297Z -- unknown -- thumbnail%20carousel%20slider
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1915</link>
      <description>The Thumbnail carousel slider WordPress plugin before 1.1.10 does not sanitise and escape some parameters before outputting them back in pages, leading to Reflected Cross-Site Scripting vulnerability which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-1915|2023-05-15T12:15:33.297Z</guid>
      <pubDate>Mon, 15 May 2023 12:15:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1020|2023-04-24T18:30:51.463Z -- unknown -- steveas%20wp%20live%20chat%20shoutbox
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1020</link>
      <description>The Steveas WP Live Chat Shoutbox WordPress plugin through 1.4.2 does not sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection.</description>
      <guid isPermaLink="false">CVE-2023-1020|2023-04-24T18:30:51.463Z</guid>
      <pubDate>Mon, 24 Apr 2023 18:30:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1427|2023-04-17T12:17:41.603Z -- unknown -- photo%20gallery%20by%2010web
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1427</link>
      <description>- The Photo Gallery by 10Web WordPress plugin before 1.8.15 did not ensure that uploaded files are kept inside its uploads folder, allowing high privilege users to put images anywhere in the filesystem via a path traversal vector.</description>
      <guid isPermaLink="false">CVE-2023-1427|2023-04-17T12:17:41.603Z</guid>
      <pubDate>Mon, 17 Apr 2023 12:17:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1124|2023-04-03T14:38:26.671Z -- unknown -- shopping%20cart%20%26%20ecommerce%20store
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1124</link>
      <description>The Shopping Cart &amp; eCommerce Store WordPress plugin before 5.4.3 does not validate HTTP requests, allowing authenticated users with admin privileges to perform LFI attacks.</description>
      <guid isPermaLink="false">CVE-2023-1124|2023-04-03T14:38:26.671Z</guid>
      <pubDate>Mon, 03 Apr 2023 14:38:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1325|2023-04-17T12:17:39.963Z -- unknown -- easy%20forms%20for%20mailchimp
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1325</link>
      <description>The Easy Forms for Mailchimp WordPress plugin before 6.8.7 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-1325|2023-04-17T12:17:39.963Z</guid>
      <pubDate>Mon, 17 Apr 2023 12:17:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1400|2023-10-16T08:32:34.573Z -- unknown -- modern%20events%20calendar%20lite
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1400</link>
      <description>The Modern Events Calendar Lite WordPress plugin before 6.5.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-1400|2023-10-16T08:32:34.573Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1011|2023-05-08T13:58:06.876Z -- unknown -- ai%20chatbot
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1011</link>
      <description>The AI ChatBot WordPress plugin before 4.4.5 does not escape most of its settings before outputting them back in the dashboard, and does not have a proper CSRF check, allowing attackers to make a logged in admin set XSS payloads in them.</description>
      <guid isPermaLink="false">CVE-2023-1011|2023-05-08T13:58:06.876Z</guid>
      <pubDate>Mon, 08 May 2023 13:58:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1093|2023-03-27T15:37:22.994Z -- unknown -- oauth%20single%20sign%20on
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1093</link>
      <description>The OAuth Single Sign On WordPress plugin before 6.24.2 does not have CSRF checks when discarding Identify providers (IdP), which could allow attackers to make logged in admins delete all IdP via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-1093|2023-03-27T15:37:22.994Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1660|2023-05-08T13:58:05.324Z -- unknown -- ai%20chatbot
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1660</link>
      <description>The AI ChatBot WordPress plugin before 4.4.9 does not have authorisation and CSRF in a function hooked to init, allowing unauthenticated users to update some settings, leading to Stored XSS due to the lack of escaping when outputting them in the admin dashboard</description>
      <guid isPermaLink="false">CVE-2023-1660|2023-05-08T13:58:05.324Z</guid>
      <pubDate>Mon, 08 May 2023 13:58:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1119|2023-08-14T13:36:14.436Z -- unknown -- wp-optimize
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1119</link>
      <description>The WP-Optimize WordPress plugin before 3.2.13, SrbTransLatin WordPress plugin before 2.4.1 use a third-party library that removes the escaping on some HTML characters, leading to a cross-site scripting vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-1119|2023-08-14T13:36:14.436Z</guid>
      <pubDate>Mon, 10 Jul 2023 12:40:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1549|2023-05-15T12:15:30.894Z -- unknown -- ad%20inserter
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1549</link>
      <description>The Ad Inserter WordPress plugin before 2.7.27 unserializes user input provided via the settings, which could allow high privilege users such as admin to perform PHP Object Injection when a suitable gadget is present</description>
      <guid isPermaLink="false">CVE-2023-1549|2023-05-15T12:15:30.894Z</guid>
      <pubDate>Mon, 15 May 2023 12:15:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1524|2023-05-30T07:49:11.466Z -- unknown -- download%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1524</link>
      <description>The Download Manager WordPress plugin before 3.2.71 does not adequately validate passwords for password-protected files. Upon validation, a master key is generated and exposed to the user, which may be used to download any password-protected file on the server, allowing a user to download any file with the knowledge of any one file's password.</description>
      <guid isPermaLink="false">CVE-2023-1524|2023-05-30T07:49:11.466Z</guid>
      <pubDate>Tue, 30 May 2023 07:49:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1089|2023-03-27T15:37:20.593Z -- unknown -- coupon%20zen
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1089</link>
      <description>The Coupon Zen WordPress plugin before 1.0.6 does not have CSRF check when activating plugins, which could allow attackers to make logged in admins activate arbitrary plugins present on the blog via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-1089|2023-03-27T15:37:20.593Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1420|2023-04-24T18:30:49.881Z -- unknown -- ajax%20search%20lite
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1420</link>
      <description>The Ajax Search Lite WordPress plugin before 4.11.1, Ajax Search Pro WordPress plugin before 4.26.2 does not sanitise and escape a parameter before outputting it back in a response of an AJAX action, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-1420|2023-04-24T18:30:49.881Z</guid>
      <pubDate>Mon, 24 Apr 2023 18:30:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1861|2023-05-02T07:04:50.246Z -- unknown -- limit%20login%20attempts
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1861</link>
      <description>The Limit Login Attempts WordPress plugin through 1.7.2 does not sanitize and escape usernames when outputting them back in the logs dashboard, which could allow any authenticated users, such as subscriber to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-1861|2023-05-02T07:04:50.246Z</guid>
      <pubDate>Tue, 02 May 2023 07:04:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1122|2023-04-10T13:17:53.053Z -- unknown -- simple%20giveaways
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1122</link>
      <description>The Simple Giveaways WordPress plugin before 2.45.1 does not sanitise and escape some of its Giveaways options, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-1122|2023-04-10T13:17:53.053Z</guid>
      <pubDate>Mon, 10 Apr 2023 13:17:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1088|2023-03-27T15:37:18.954Z -- unknown -- wp%20plugin%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1088</link>
      <description>The WP Plugin Manager WordPress plugin before 1.1.8 does not have CSRF check when activating plugins, which could allow attackers to make logged in admins activate arbitrary plugins present on the blog via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-1088|2023-03-27T15:37:18.954Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1525|2023-05-02T07:04:49.421Z -- unknown -- site%20reviews
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1525</link>
      <description>The Site Reviews WordPress plugin before 6.7.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-1525|2023-05-02T07:04:49.421Z</guid>
      <pubDate>Tue, 02 May 2023 07:04:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1323|2023-06-13T07:29:03.096Z -- unknown -- easy%20forms%20for%20mailchimp
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1323</link>
      <description>The Easy Forms for Mailchimp WordPress plugin before 6.8.9 does not sanitise and escape some of its from parameters, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-1323|2023-06-13T07:29:03.096Z</guid>
      <pubDate>Mon, 12 Jun 2023 17:28:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1207|2023-05-15T12:15:30.045Z -- unknown -- http%20headers
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1207</link>
      <description>This HTTP Headers WordPress plugin before 1.18.8 has an import functionality which executes arbitrary SQL on the server, leading to an SQL Injection vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-1207|2023-05-15T12:15:30.045Z</guid>
      <pubDate>Mon, 15 May 2023 12:15:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1196|2023-05-02T08:39:29.005Z -- unknown -- advanced%20custom%20fields%20%28acf%29
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1196</link>
      <description>The Advanced Custom Fields (ACF) Free and Pro WordPress plugins 6.x before 6.1.0 and 5.x before 5.12.5 unserialize user controllable data, which could allow users with a role of Contributor and above to perform PHP Object Injection when a suitable gadget is present.</description>
      <guid isPermaLink="false">CVE-2023-1196|2023-05-02T08:39:29.005Z</guid>
      <pubDate>Tue, 02 May 2023 08:39:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1381|2023-04-17T12:17:36.638Z -- unknown -- wp%20meta%20seo
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1381</link>
      <description>The WP Meta SEO WordPress plugin before 4.5.5 does not validate image file paths before attempting to manipulate the image files, leading to a PHAR deserialization vulnerability. Furthermore, the plugin contains a gadget chain which may be used in certain configurations to achieve remote code execution.</description>
      <guid isPermaLink="false">CVE-2023-1381|2023-04-17T12:17:36.638Z</guid>
      <pubDate>Mon, 10 Apr 2023 14:14:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-1905|2023-05-08T13:58:00.447Z -- unknown -- wp%20popups
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-1905</link>
      <description>The WP Popups WordPress plugin before 2.1.5.1 does not properly escape the href attribute of its spu-facebook-page shortcode before outputting it back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks. This is due to an insufficient fix of CVE-2023-24003</description>
      <guid isPermaLink="false">CVE-2023-1905|2023-05-08T13:58:00.447Z</guid>
      <pubDate>Mon, 08 May 2023 13:58:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0268|2023-05-08T13:58:25.619Z -- unknown -- mega%20addons%20for%20wpbakery%20page%20builder
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0268</link>
      <description>The Mega Addons For WPBakery Page Builder WordPress plugin before 4.3.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0268|2023-05-08T13:58:25.619Z</guid>
      <pubDate>Mon, 08 May 2023 13:58:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0546|2023-04-10T13:18:07.349Z -- unknown -- contact%20form%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0546</link>
      <description>The Contact Form Plugin WordPress plugin before 4.3.25 does not properly sanitize and escape the srcdoc attribute in iframes in it's custom HTML field type, allowing a logged in user with roles as low as contributor to inject arbitrary javascript into a form which will trigger for any visitor to the form or admins previewing or editing the form.</description>
      <guid isPermaLink="false">CVE-2023-0546|2023-04-10T13:18:07.349Z</guid>
      <pubDate>Mon, 10 Apr 2023 13:18:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0395|2023-03-27T15:37:46.234Z -- unknown -- menu%20shortcode
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0395</link>
      <description>The menu shortcode WordPress plugin through 1.0 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0395|2023-03-27T15:37:46.234Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0157|2023-04-10T13:18:06.543Z -- unknown -- all-in-one%20security%20%28aios%29
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0157</link>
      <description>The All-In-One Security (AIOS) WordPress plugin before 5.1.5 does not escape the content of log files before outputting it to the plugin admin page, allowing an authorized user (admin+) to plant bogus log files containing malicious JavaScript code that will be executed in the context of any administrator visiting this page.</description>
      <guid isPermaLink="false">CVE-2023-0157|2023-04-10T13:18:06.543Z</guid>
      <pubDate>Mon, 10 Apr 2023 13:18:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0442|2023-02-21T08:51:06.188Z -- unknown -- loan%20comparison
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0442</link>
      <description>The Loan Comparison WordPress plugin before 1.5.3 does not validate and escape some of its query parameters before outputting them back in a page/post via an embedded shortcode, which could allow an attacker to inject javascript into into the site via a crafted URL.</description>
      <guid isPermaLink="false">CVE-2023-0442|2023-02-21T08:51:06.188Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:51:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0911|2023-03-28T07:14:03.965Z -- unknown -- wordpress%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0911</link>
      <description>The WordPress Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 5.12.8 does not validate the user meta to be retrieved via the user shortcode, allowing any authenticated users such as subscriber to retrieve arbitrary user meta (except the user_pass), such as the user email and activation key by default.</description>
      <guid isPermaLink="false">CVE-2023-0911|2023-03-28T07:14:03.965Z</guid>
      <pubDate>Mon, 20 Mar 2023 15:52:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0069|2023-03-06T13:34:07.685Z -- unknown -- wpaudio%20mp3%20player
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0069</link>
      <description>The WPaudio MP3 Player WordPress plugin through 4.0.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0069|2023-03-06T13:34:07.685Z</guid>
      <pubDate>Mon, 06 Mar 2023 13:34:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0439|2023-07-17T13:29:58.934Z -- unknown -- nex-forms
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0439</link>
      <description>The NEX-Forms WordPress plugin before 8.4.4 does not escape its form name, which could lead to Stored Cross-Site Scripting issues. By default only SuperAdmins (in multisite) / admins (in single site) can create forms, however there is a settings allowing them to give lower roles access to such feature.</description>
      <guid isPermaLink="false">CVE-2023-0439|2023-07-17T13:29:58.934Z</guid>
      <pubDate>Mon, 17 Jul 2023 13:29:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0340|2023-03-20T15:52:22.788Z -- unknown -- custom%20content%20shortcode
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0340</link>
      <description>The Custom Content Shortcode WordPress plugin through 4.0.2 does not validate one of its shortcode attribute, which could allow users with a contributor role and above to include arbitrary files via a traversal attack. This could also allow them to read non PHP files and retrieve their content. RCE could also be achieved if the attacker manage to upload a malicious image containing PHP code, and then include it via the affected attribute, on a default WP install, authors could easily achieve that given that they have the upload_file capability.</description>
      <guid isPermaLink="false">CVE-2023-0340|2023-03-20T15:52:22.788Z</guid>
      <pubDate>Mon, 20 Mar 2023 15:52:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0252|2023-02-06T19:59:49.263Z -- unknown -- contextual%20related%20posts
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0252</link>
      <description>The Contextual Related Posts WordPress plugin before 3.3.1 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0252|2023-02-06T19:59:49.263Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0602|2023-07-31T09:37:33.393Z -- unknown -- twittee%20text%20tweet
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0602</link>
      <description>The Twittee Text Tweet WordPress plugin through 1.0.8 does not properly escape POST values which are printed back to the user inside one of the plugin's administrative page, which allows reflected XSS attacks targeting administrators to happen.</description>
      <guid isPermaLink="false">CVE-2023-0602|2023-07-31T09:37:33.393Z</guid>
      <pubDate>Mon, 31 Jul 2023 09:37:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0497|2023-03-27T15:37:43.632Z -- unknown -- ht%20portfolio
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0497</link>
      <description>The HT Portfolio WordPress plugin before 1.1.6 does not have CSRF check when activating plugins, which could allow attackers to make logged in admins activate arbitrary plugins present on the blog via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-0497|2023-03-27T15:37:43.632Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0376|2024-01-16T15:55:51.086Z -- unknown -- qubely
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0376</link>
      <description>The Qubely WordPress plugin before 1.8.5 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0376|2024-01-16T15:55:51.086Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:55:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0233|2023-05-15T12:15:47.088Z -- unknown -- activecampaign
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0233</link>
      <description>The ActiveCampaign WordPress plugin before 8.1.12 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0233|2023-05-15T12:15:47.088Z</guid>
      <pubDate>Mon, 15 May 2023 12:15:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0399|2023-04-03T14:38:29.299Z -- unknown -- image%20over%20image%20for%20wpbakery%20page%20builder
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0399</link>
      <description>The Image Over Image For WPBakery Page Builder WordPress plugin before 3.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0399|2023-04-03T14:38:29.299Z</guid>
      <pubDate>Mon, 03 Apr 2023 14:38:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0360|2023-02-13T14:32:33.325Z -- unknown -- location%20weather
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0360</link>
      <description>The Location Weather WordPress plugin before 1.3.4 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0360|2023-02-13T14:32:33.325Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0419|2023-02-21T08:51:05.416Z -- unknown -- shortcode%20for%20font%20awesome
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0419</link>
      <description>The Shortcode for Font Awesome WordPress plugin before 1.4.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embedded, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0419|2023-02-21T08:51:05.416Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:51:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0272|2023-03-27T15:37:41.482Z -- unknown -- nex-forms
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0272</link>
      <description>The NEX-Forms WordPress plugin before 8.3.3 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0272|2023-03-27T15:37:41.482Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0065|2023-03-06T13:34:06.872Z -- unknown -- i2%20pros%20%26%20cons
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0065</link>
      <description>The i2 Pros &amp; Cons WordPress plugin through 1.3.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0065|2023-03-06T13:34:06.872Z</guid>
      <pubDate>Mon, 06 Mar 2023 13:34:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0823|2023-03-27T15:37:40.612Z -- unknown -- cookie%20notice%20%26%20compliance%20for%20gdpr%20%2F%20ccpa
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0823</link>
      <description>The Cookie Notice &amp; Compliance for GDPR / CCPA WordPress plugin before 2.4.7 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0823|2023-03-27T15:37:40.612Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0874|2023-04-10T13:18:03.854Z -- unknown -- klaviyo
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0874</link>
      <description>The Klaviyo WordPress plugin before 3.0.10 does not sanitize and escape some of its settings, which could allow high-privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-0874|2023-04-10T13:18:03.854Z</guid>
      <pubDate>Mon, 10 Apr 2023 13:18:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0177|2023-02-13T14:32:32.510Z -- unknown -- social%20like%20box%20and%20page%20by%20wpdevart
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0177</link>
      <description>The Social Like Box and Page by WpDevArt WordPress plugin before 0.8.41 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0177|2023-02-13T14:32:32.510Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0073|2023-03-13T16:03:37.192Z -- unknown -- client%20logo%20carousel
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0073</link>
      <description>The Client Logo Carousel WordPress plugin through 3.0.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0073|2023-03-13T16:03:37.192Z</guid>
      <pubDate>Mon, 13 Mar 2023 16:03:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0589|2023-03-27T15:37:39.286Z -- unknown -- wp%20image%20carousel
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0589</link>
      <description>The WP Image Carousel WordPress plugin through 1.0.2 does not sanitise and escape some parameters, which could allow users with a role as low as contributor to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0589|2023-03-27T15:37:39.286Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0423|2023-04-10T13:18:02.898Z -- unknown -- wordpress%20amazon%20s3%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0423</link>
      <description>The WordPress Amazon S3 Plugin WordPress plugin before 1.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-0423|2023-04-10T13:18:02.898Z</guid>
      <pubDate>Mon, 10 Apr 2023 13:18:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0072|2023-02-06T19:59:47.480Z -- unknown -- wc%20vendors%20marketplace
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0072</link>
      <description>The WC Vendors Marketplace WordPress plugin before 2.4.5 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0072|2023-02-06T19:59:47.480Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0588|2023-06-27T13:17:24.246Z -- unknown -- catalyst%20connect%20zoho%20crm%20client%20portal
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0588</link>
      <description>The Catalyst Connect Zoho CRM Client Portal WordPress plugin before 2.1.0 does not sanitize and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high-privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-0588|2023-06-27T13:17:24.246Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0422|2023-04-10T13:18:01.633Z -- unknown -- article%20directory
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0422</link>
      <description>The Article Directory WordPress plugin through 1.3 does not properly sanitize the `publish_terms_text` setting before displaying it in the administration panel, which may enable administrators to conduct Stored XSS attacks in multisite contexts.</description>
      <guid isPermaLink="false">CVE-2023-0422|2023-04-10T13:18:01.633Z</guid>
      <pubDate>Mon, 10 Apr 2023 13:18:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0033|2023-01-30T20:31:53.710Z -- unknown -- pdf%20viewer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0033</link>
      <description>The PDF Viewer WordPress plugin before 1.0.0 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2023-0033|2023-01-30T20:31:53.710Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0875|2023-03-20T15:52:21.908Z -- unknown -- wp%20meta%20seo
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0875</link>
      <description>The WP Meta SEO WordPress plugin before 4.5.3 does not properly sanitize and escape inputs into SQL queries, leading to a blind SQL Injection vulnerability that can be exploited by subscriber+ users.</description>
      <guid isPermaLink="false">CVE-2023-0875|2023-03-20T15:52:21.908Z</guid>
      <pubDate>Mon, 20 Mar 2023 15:52:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0176|2023-02-06T19:59:46.410Z -- unknown -- giveaways%20and%20contests%20by%20rafflepress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0176</link>
      <description>The Giveaways and Contests by RafflePress WordPress plugin before 1.11.3 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0176|2023-02-06T19:59:46.410Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0526|2023-05-08T13:58:24.790Z -- unknown -- post%20shortcode
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0526</link>
      <description>The Post Shortcode WordPress plugin through 2.0.9 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0526|2023-05-08T13:58:24.790Z</guid>
      <pubDate>Mon, 08 May 2023 13:58:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0064|2023-03-06T13:34:06.078Z -- unknown -- evision%20responsive%20column%20layout%20shortcodes
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0064</link>
      <description>The eVision Responsive Column Layout Shortcodes WordPress plugin through 2.3 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0064|2023-03-06T13:34:06.078Z</guid>
      <pubDate>Mon, 06 Mar 2023 13:34:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0336|2023-03-29T13:15:17.817Z -- unknown -- ooohboi%20steroids%20for%20elementor
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0336</link>
      <description>The OoohBoi Steroids for Elementor WordPress plugin before 2.1.5 has CSRF and broken access control vulnerabilities which leads user with role as low as subscriber to delete attachment.</description>
      <guid isPermaLink="false">CVE-2023-0336|2023-03-29T13:15:17.817Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0766|2023-05-30T07:49:19.438Z -- unknown -- newsletter%20popup
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0766</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks as the wp_newsletter_show_localrecord page is not protected with a nonce.</description>
      <guid isPermaLink="false">CVE-2023-0766|2023-05-30T07:49:19.438Z</guid>
      <pubDate>Tue, 30 May 2023 07:49:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0273|2023-03-20T15:52:21.047Z -- unknown -- custom%20content%20shortcode
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0273</link>
      <description>The Custom Content Shortcode WordPress plugin through 4.0.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0273|2023-03-20T15:52:21.047Z</guid>
      <pubDate>Mon, 20 Mar 2023 15:52:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0418|2023-04-24T18:31:00.385Z -- unknown -- video%20central%20for%20wordpress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0418</link>
      <description>The Video Central for WordPress plugin through 1.3.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0418|2023-04-24T18:31:00.385Z</guid>
      <pubDate>Mon, 24 Apr 2023 18:31:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0224|2024-01-16T15:54:45.597Z -- unknown -- givewp
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0224</link>
      <description>The GiveWP WordPress plugin before 2.24.1 does not properly escape user input before it reaches SQL queries, which could let unauthenticated attackers perform SQL Injection attacks</description>
      <guid isPermaLink="false">CVE-2023-0224|2024-01-16T15:54:45.597Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:54:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0377|2023-03-06T13:34:05.264Z -- unknown -- scriptless%20social%20sharing
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0377</link>
      <description>The Scriptless Social Sharing WordPress plugin before 3.2.2 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0377|2023-03-06T13:34:05.264Z</guid>
      <pubDate>Mon, 06 Mar 2023 13:34:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0232|2023-02-21T08:51:02.165Z -- unknown -- shoplentor
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0232</link>
      <description>The ShopLentor WordPress plugin before 2.5.4 unserializes user input from cookies in order to track viewed products and user data, which could lead to PHP Object Injection.</description>
      <guid isPermaLink="false">CVE-2023-0232|2023-02-21T08:51:02.165Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:51:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0212|2023-03-06T13:34:03.634Z -- unknown -- advanced%20recent%20posts
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0212</link>
      <description>The Advanced Recent Posts WordPress plugin through 0.6.14 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0212|2023-03-06T13:34:03.634Z</guid>
      <pubDate>Mon, 06 Mar 2023 13:34:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0479|2024-01-16T15:55:08.499Z -- unknown -- print%20invoice%20%26%20delivery%20notes%20for%20woocommerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0479</link>
      <description>The Print Invoice &amp; Delivery Notes for WooCommerce WordPress plugin before 4.7.2 is vulnerable to reflected XSS by echoing a GET value in an admin note within the WooCommerce orders page. This means that this vulnerability can be exploited for users with the edit_others_shop_orders capability. WooCommerce must be installed and active. This vulnerability is caused by a urldecode() after cleanup with esc_url_raw(), allowing double encoding.</description>
      <guid isPermaLink="false">CVE-2023-0479|2024-01-16T15:55:08.499Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:55:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0496|2023-03-27T15:37:37.404Z -- unknown -- ht%20event
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0496</link>
      <description>The HT Event WordPress plugin before 1.4.6 does not have CSRF check when activating plugins, which could allow attackers to make logged in admins activate arbitrary plugins present on the blog via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-0496|2023-03-27T15:37:37.404Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0603|2023-05-08T13:58:23.850Z -- unknown -- sloth%20logo%20customizer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0603</link>
      <description>The Sloth Logo Customizer WordPress plugin through 2.0.2 does not have CSRF check when updating its settings, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-0603|2023-05-08T13:58:23.850Z</guid>
      <pubDate>Mon, 08 May 2023 13:58:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0068|2023-03-06T13:34:02.785Z -- unknown -- product%20gtin%20%28ean%2C%20upc%2C%20isbn%29%20for%20woocommerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0068</link>
      <description>The Product GTIN (EAN, UPC, ISBN) for WooCommerce WordPress plugin through 1.1.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0068|2023-03-06T13:34:02.785Z</guid>
      <pubDate>Mon, 06 Mar 2023 13:34:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0156|2023-04-10T13:17:59.914Z -- unknown -- all-in-one%20security%20%28aios%29
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0156</link>
      <description>The All-In-One Security (AIOS) WordPress plugin before 5.1.5 does not limit what log files to display in it's settings pages, allowing an authorized user (admin+) to view the contents of arbitrary files and list directories anywhere on the server (to which the web server has access). The plugin only displays the last 50 lines of the file.</description>
      <guid isPermaLink="false">CVE-2023-0156|2023-04-10T13:17:59.914Z</guid>
      <pubDate>Mon, 10 Apr 2023 13:17:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0443|2023-05-30T07:49:18.666Z -- unknown -- anywhere%20elementor
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0443</link>
      <description>The AnyWhere Elementor WordPress plugin before 1.2.8 discloses a Freemius Secret Key which could be used by an attacker to purchase the pro subscription using test credit card numbers without actually paying the amount. Such key has been revoked.</description>
      <guid isPermaLink="false">CVE-2023-0443|2023-05-30T07:49:18.666Z</guid>
      <pubDate>Tue, 30 May 2023 07:49:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0551|2023-08-16T11:03:30.386Z -- unknown -- rest%20api%20to%20miniprogram
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0551</link>
      <description>The REST API TO MiniProgram WordPress plugin through 4.6.1 does not have authorisation and CSRF checks in an AJAX action, allowing ay authenticated users, such as subscriber to call and delete arbitrary attachments</description>
      <guid isPermaLink="false">CVE-2023-0551|2023-08-16T11:03:30.386Z</guid>
      <pubDate>Wed, 16 Aug 2023 11:03:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0262|2023-02-13T14:32:28.589Z -- unknown -- wp%20airbnb%20review%20slider
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0262</link>
      <description>The WP Airbnb Review Slider WordPress plugin before 3.3 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as subscriber.</description>
      <guid isPermaLink="false">CVE-2023-0262|2023-02-13T14:32:28.589Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0370|2023-03-20T15:52:19.368Z -- unknown -- wpb%20advanced%20faq
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0370</link>
      <description>The WPB Advanced FAQ WordPress plugin through 1.0.6 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0370|2023-03-20T15:52:19.368Z</guid>
      <pubDate>Mon, 20 Mar 2023 15:52:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0059|2023-02-21T08:51:00.517Z -- unknown -- youzify
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0059</link>
      <description>The Youzify WordPress plugin before 1.2.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0059|2023-02-21T08:51:00.517Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:51:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0366|2023-02-21T08:50:59.725Z -- unknown -- loan%20comparison
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0366</link>
      <description>The Loan Comparison WordPress plugin before 1.5.3 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0366|2023-02-21T08:50:59.725Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0389|2024-01-16T15:56:07.623Z -- unknown -- calculated%20fields%20form
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0389</link>
      <description>The Calculated Fields Form WordPress plugin before 1.1.151 does not sanitise and escape some of its form settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-0389|2024-01-16T15:56:07.623Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:56:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0331|2023-02-27T15:24:42.395Z -- unknown -- correos%20oficial
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0331</link>
      <description>The Correos Oficial WordPress plugin through 1.2.0.2 does not have an authorization check user input validation when generating a file path, allowing unauthenticated attackers to download arbitrary files from the server.</description>
      <guid isPermaLink="false">CVE-2023-0331|2023-02-27T15:24:42.395Z</guid>
      <pubDate>Mon, 27 Feb 2023 15:24:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0761|2023-05-15T12:15:43.882Z -- unknown -- clock%20in%20portal-%20staff%20%26%20attendance%20management
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0761</link>
      <description>The Clock In Portal- Staff &amp; Attendance Management WordPress plugin through 2.1 does not have CSRF check when deleting Staff members, which could allow attackers to make logged in admins delete arbitrary Staff via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-0761|2023-05-15T12:15:43.882Z</guid>
      <pubDate>Mon, 15 May 2023 12:15:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0274|2023-08-16T11:03:26.919Z -- unknown -- url%20params
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0274</link>
      <description>The URL Params WordPress plugin before 2.5 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0274|2023-08-16T11:03:26.919Z</guid>
      <pubDate>Wed, 16 Aug 2023 11:03:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0063|2023-03-06T13:34:02.007Z -- unknown -- wordpress%20shortcodes
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0063</link>
      <description>The WordPress Shortcodes WordPress plugin through 1.6.36 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0063|2023-03-06T13:34:02.007Z</guid>
      <pubDate>Mon, 06 Mar 2023 13:34:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0937|2023-03-20T15:52:18.503Z -- unknown -- vk%20all%20in%20one%20expansion%20unit
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0937</link>
      <description>The VK All in One Expansion Unit WordPress plugin before 9.87.1.0 does not escape the $_SERVER['REQUEST_URI'] parameter before outputting it back in an attribute, which could lead to Reflected Cross-Site Scripting in old web browsers</description>
      <guid isPermaLink="false">CVE-2023-0937|2023-03-20T15:52:18.503Z</guid>
      <pubDate>Mon, 20 Mar 2023 15:52:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0034|2023-03-06T13:22:49.307Z -- unknown -- jetwidgets%20for%20elementor
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0034</link>
      <description>The JetWidgets For Elementor WordPress plugin before 1.0.14 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0034|2023-03-06T13:22:49.307Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0171|2023-02-06T19:59:42.127Z -- unknown -- jquery%20t%28-%29%20countdown%20widget
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0171</link>
      <description>The jQuery T(-) Countdown Widget WordPress plugin before 2.3.24 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0171|2023-02-06T19:59:42.127Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0537|2023-05-08T13:58:22.926Z -- unknown -- product%20slider%20for%20woocommerce%20lite
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0537</link>
      <description>The Product Slider For WooCommerce Lite WordPress plugin through 1.1.7 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0537|2023-05-08T13:58:22.926Z</guid>
      <pubDate>Mon, 08 May 2023 13:58:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0167|2023-03-20T15:52:17.698Z -- unknown -- getresponse%20for%20wordpress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0167</link>
      <description>The GetResponse for WordPress plugin through 5.5.31 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0167|2023-03-20T15:52:17.698Z</guid>
      <pubDate>Mon, 20 Mar 2023 15:52:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0219|2023-03-13T16:03:36.376Z -- unknown -- fluentsmtp
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0219</link>
      <description>The FluentSMTP WordPress plugin before 2.2.3 does not sanitize or escape email content, making it vulnerable to stored cross-site scripting attacks (XSS) when an administrator views the email logs. This exploit requires other plugins to enable users to send emails with unfiltered HTML.</description>
      <guid isPermaLink="false">CVE-2023-0219|2023-03-13T16:03:36.376Z</guid>
      <pubDate>Mon, 13 Mar 2023 16:03:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0075|2023-02-13T14:32:24.576Z -- unknown -- amazon%20js
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0075</link>
      <description>The Amazon JS WordPress plugin through 0.10 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0075|2023-02-13T14:32:24.576Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0844|2023-03-13T16:03:35.583Z -- unknown -- namaste%21%20lms
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0844</link>
      <description>The Namaste! LMS WordPress plugin before 2.6 does not sanitize and escape some of its settings, which could allow high-privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-0844|2023-03-13T16:03:35.583Z</guid>
      <pubDate>Mon, 13 Mar 2023 16:03:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0147|2023-02-06T19:59:41.302Z -- unknown -- flexible%20captcha
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0147</link>
      <description>The Flexible Captcha WordPress plugin through 4.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0147|2023-02-06T19:59:41.302Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0540|2023-02-21T08:50:58.166Z -- unknown -- gs%20filterable%20portfolio
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0540</link>
      <description>The GS Filterable Portfolio WordPress plugin before 1.6.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0540|2023-02-21T08:50:58.166Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0405|2023-02-13T14:32:23.773Z -- unknown -- gpt%20ai%20power%3A%20content%20writer%20%26%20chatgpt%20%26%20image%20generator%20%26%20woocommerce%20product%20writer%20%26%20ai%20training
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0405</link>
      <description>The GPT AI Power: Content Writer &amp; ChatGPT &amp; Image Generator &amp; WooCommerce Product Writer &amp; AI Training WordPress plugin before 1.4.38 does not perform any kind of nonce or privilege checks before letting logged-in users modify arbitrary posts.</description>
      <guid isPermaLink="false">CVE-2023-0405|2023-02-13T14:32:23.773Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0043|2023-02-27T15:24:41.583Z -- unknown -- custom%20add%20user
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0043</link>
      <description>The Custom Add User WordPress plugin through 2.0.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-0043|2023-02-27T15:24:41.583Z</guid>
      <pubDate>Mon, 27 Feb 2023 15:24:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0940|2023-03-24T10:51:51.921Z -- unknown -- profilegrid
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0940</link>
      <description>The ProfileGrid WordPress plugin before 5.3.1 provides an AJAX endpoint for resetting a user password but does not implement proper authorization. This allows a user with low privileges, such as subscriber, to change the password of any account, including Administrator ones.</description>
      <guid isPermaLink="false">CVE-2023-0940|2023-03-24T10:51:51.921Z</guid>
      <pubDate>Mon, 20 Mar 2023 15:52:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0151|2023-02-13T14:32:22.947Z -- unknown -- utubevideo%20gallery
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0151</link>
      <description>The uTubeVideo Gallery WordPress plugin before 2.0.8 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0151|2023-02-13T14:32:22.947Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0501|2023-03-27T15:37:33.856Z -- unknown -- wp%20insurance
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0501</link>
      <description>The WP Insurance WordPress plugin before 2.1.4 does not have CSRF check when activating plugins, which could allow attackers to make logged in admins activate arbitrary plugins present on the blog via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-0501|2023-03-27T15:37:33.856Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0278|2023-02-27T15:24:40.738Z -- unknown -- geodirectory
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0278</link>
      <description>The GeoDirectory WordPress plugin before 2.2.24 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-0278|2023-02-27T15:24:40.738Z</guid>
      <pubDate>Mon, 27 Feb 2023 15:24:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0080|2023-02-13T14:32:22.189Z -- unknown -- customer%20reviews%20for%20woocommerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0080</link>
      <description>The Customer Reviews for WooCommerce WordPress plugin before 5.16.0 does not validate one of its shortcode attribute, which could allow users with a contributor role and above to include arbitrary files via a traversal attack. This could also allow them to read non PHP files and retrieve their content. RCE could also be achieved if the attacker manage to upload a malicious image containing PHP code, and then include it via the affected attribute, on a default WP install, authors could easily achieve that given that they have the upload_file capability.</description>
      <guid isPermaLink="false">CVE-2023-0080|2023-02-13T14:32:22.189Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0983|2023-04-10T13:17:58.149Z -- unknown -- stylish%20cost%20calculator%20premium
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0983</link>
      <description>The stylish-cost-calculator-premium WordPress plugin before 7.9.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Stored Cross-Site Scripting which could be used against admins when viewing submissions submitted through the Email Quote Form.</description>
      <guid isPermaLink="false">CVE-2023-0983|2023-04-10T13:17:58.149Z</guid>
      <pubDate>Mon, 10 Apr 2023 13:17:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0891|2023-05-02T07:04:56.110Z -- unknown -- stagtools
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0891</link>
      <description>The StagTools WordPress plugin before 2.3.7 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0891|2023-05-02T07:04:56.110Z</guid>
      <pubDate>Tue, 02 May 2023 07:04:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0487|2023-02-27T15:24:39.913Z -- unknown -- all-in-one%20floating%20contact%20form%2C%20call%2C%20chat%2C%20and%2050%2B%20social%20icon%20tabs
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0487</link>
      <description>The My Sticky Elements WordPress plugin before 2.0.9 does not properly sanitise and escape a parameter before using it in a SQL statement when deleting messages, leading to a SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-0487|2023-02-27T15:24:39.913Z</guid>
      <pubDate>Mon, 27 Feb 2023 15:24:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0604|2023-08-07T14:31:24.845Z -- unknown -- wp%20food%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0604</link>
      <description>The WP Food Manager WordPress plugin before 1.0.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-0604|2023-08-07T14:31:24.845Z</guid>
      <pubDate>Mon, 07 Aug 2023 14:31:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0491|2023-03-27T15:37:32.778Z -- unknown -- schedulicity
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0491</link>
      <description>The Schedulicity WordPress plugin through 2.21 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0491|2023-03-27T15:37:32.778Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0429|2023-02-21T08:50:57.365Z -- unknown -- watu%20quiz
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0429</link>
      <description>The Watu Quiz WordPress plugin before 3.3.8.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-0429|2023-02-21T08:50:57.365Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0079|2024-01-16T15:54:58.622Z -- unknown -- customer%20reviews%20for%20woocommerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0079</link>
      <description>The Customer Reviews for WooCommerce WordPress plugin before 5.17.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0079|2024-01-16T15:54:58.622Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:54:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0096|2023-02-06T19:59:39.682Z -- unknown -- form%20builder%20to%20get%20in%20touch%20with%20visitors%2C%20grow%20your%20email%20list%20and%20collect%20payments%20%E2%80%94%20happyforms
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0096</link>
      <description>The Happyforms WordPress plugin before 1.22.0 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0096|2023-02-06T19:59:39.682Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0644|2023-05-15T12:15:40.717Z -- unknown -- push%20notifications%20for%20wordpress%20by%20pushassist
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0644</link>
      <description>The Push Notifications for WordPress by PushAssist WordPress plugin through 3.0.8 does not sanitise and escape various parameters before outputting them back in pages, leading to Reflected Cross-Site Scripting which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-0644|2023-05-15T12:15:40.717Z</guid>
      <pubDate>Mon, 15 May 2023 12:15:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0428|2023-02-21T08:50:56.586Z -- unknown -- watu%20quiz
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0428</link>
      <description>The Watu Quiz WordPress plugin before 3.3.8.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-0428|2023-02-21T08:50:56.586Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0078|2023-03-06T13:34:01.157Z -- unknown -- resume%20builder
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0078</link>
      <description>The Resume Builder WordPress plugin through 3.1.1 does not sanitize and escape some parameters related to Resume, which could allow users with a role as low as subscriber to perform Stored XSS attacks against higher privilege users</description>
      <guid isPermaLink="false">CVE-2023-0078|2023-03-06T13:34:01.157Z</guid>
      <pubDate>Mon, 06 Mar 2023 13:34:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0097|2023-01-30T20:31:47.957Z -- unknown -- post%20grid%2C%20post%20carousel%2C%20%26%20list%20category%20posts
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0097</link>
      <description>The Post Grid, Post Carousel, &amp; List Category Posts WordPress plugin before 2.4.19 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0097|2023-01-30T20:31:47.957Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0490|2023-05-15T12:15:39.964Z -- unknown -- f%28x%29%20toc
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0490</link>
      <description>The f(x) TOC WordPress plugin through 1.1.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0490|2023-05-15T12:15:39.964Z</guid>
      <pubDate>Mon, 15 May 2023 12:15:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0255|2023-02-13T14:32:21.404Z -- unknown -- enable%20media%20replace
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0255</link>
      <description>The Enable Media Replace WordPress plugin before 4.0.2 does not prevent authors from uploading arbitrary files to the site, which may allow them to upload PHP shells on affected sites.</description>
      <guid isPermaLink="false">CVE-2023-0255|2023-02-13T14:32:21.404Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0605|2023-04-10T13:17:57.330Z -- unknown -- auto%20rename%20media%20on%20upload
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0605</link>
      <description>The Auto Rename Media On Upload WordPress plugin before 1.1.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-0605|2023-04-10T13:17:57.330Z</guid>
      <pubDate>Mon, 10 Apr 2023 13:17:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0890|2023-03-28T07:14:20.442Z -- unknown -- wordpress%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0890</link>
      <description>The WordPress Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 5.12.8 does not ensure that posts to be displayed via some shortcodes are already public and can be accessed by the user making the request, allowing any authenticated users such as subscriber to view draft, private or even password protected posts. It is also possible to leak the password of protected posts</description>
      <guid isPermaLink="false">CVE-2023-0890|2023-03-28T07:14:20.442Z</guid>
      <pubDate>Mon, 20 Mar 2023 15:52:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0081|2023-02-06T19:59:38.040Z -- unknown -- monsterinsights
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0081</link>
      <description>The MonsterInsights WordPress plugin before 8.12.1 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0081|2023-02-06T19:59:38.040Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0279|2023-02-27T15:24:39.076Z -- unknown -- media%20library%20assistant
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0279</link>
      <description>The Media Library Assistant WordPress plugin before 3.06 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-0279|2023-02-27T15:24:39.076Z</guid>
      <pubDate>Mon, 27 Feb 2023 15:24:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0150|2023-03-17T08:55:00.811Z -- unknown -- cloak%20front%20end%20email
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0150</link>
      <description>The Cloak Front End Email WordPress plugin before 1.9.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0150|2023-03-17T08:55:00.811Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0500|2023-03-27T15:37:31.919Z -- unknown -- wp%20film%20studio
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0500</link>
      <description>The WP Film Studio WordPress plugin before 1.3.5 does not have CSRF check when activating plugins, which could allow attackers to make logged in admins activate arbitrary plugins present on the blog via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-0500|2023-03-27T15:37:31.919Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0541|2023-02-21T08:50:54.939Z -- unknown -- gs%20books%20showcase
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0541</link>
      <description>The GS Books Showcase WordPress plugin before 1.3.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0541|2023-02-21T08:50:54.939Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0812|2023-05-15T12:15:39.193Z -- unknown -- active%20directory%20integration%20%2F%20ldap%20integration
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0812</link>
      <description>The Active Directory Integration / LDAP Integration WordPress plugin before 4.1.1 does not have proper authorization or nonce values for some POST requests, leading to unauthenticated data disclosure.</description>
      <guid isPermaLink="false">CVE-2023-0812|2023-05-15T12:15:39.193Z</guid>
      <pubDate>Mon, 15 May 2023 12:15:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0280|2023-05-08T13:58:17.650Z -- unknown -- ultimate%20carousel%20for%20elementor
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0280</link>
      <description>The Ultimate Carousel For Elementor WordPress plugin through 2.1.7 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0280|2023-05-08T13:58:17.650Z</guid>
      <pubDate>Mon, 08 May 2023 13:58:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0146|2023-02-06T19:59:35.389Z -- unknown -- naver%20map
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0146</link>
      <description>The Naver Map WordPress plugin through 1.1.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0146|2023-02-06T19:59:35.389Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0453|2023-02-21T08:50:54.150Z -- unknown -- wp%20private%20message
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0453</link>
      <description>The WP Private Message WordPress plugin (bundled with the Superio theme as a required plugin) before 1.0.6 does not ensure that private messages to be accessed belong to the user making the requests. This allowing any authenticated users to access private messages belonging to other users by tampering the ID.</description>
      <guid isPermaLink="false">CVE-2023-0453|2023-02-21T08:50:54.150Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0900|2023-06-05T13:39:01.736Z -- unknown -- pricing%20table%20builder
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0900</link>
      <description>The Pricing Table Builder WordPress plugin through 1.1.6 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high-privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2023-0900|2023-06-05T13:39:01.736Z</guid>
      <pubDate>Mon, 05 Jun 2023 13:39:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0074|2023-01-30T20:31:45.765Z -- unknown -- wp%20social%20widget
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0074</link>
      <description>The WP Social Widget WordPress plugin before 2.2.4 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0074|2023-01-30T20:31:45.765Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0424|2023-04-24T18:30:57.743Z -- unknown -- ms-reviews
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0424</link>
      <description>The MS-Reviews WordPress plugin through 1.5 does not sanitise and escape reviews, which could allow users any authenticated users, such as Subscribers to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0424|2023-04-24T18:30:57.743Z</guid>
      <pubDate>Mon, 24 Apr 2023 18:30:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0865|2023-03-20T15:52:15.223Z -- unknown -- woocommerce%20multiple%20customer%20addresses%20%26%20shipping
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0865</link>
      <description>The WooCommerce Multiple Customer Addresses &amp; Shipping WordPress plugin before 21.7 does not ensure that the address to add/update/retrieve/delete and duplicate belong to the user making the request, or is from a high privilege users, allowing any authenticated users, such as subscriber to add/update/duplicate/delete as well as retrieve addresses of other users.</description>
      <guid isPermaLink="false">CVE-2023-0865|2023-03-20T15:52:15.223Z</guid>
      <pubDate>Mon, 20 Mar 2023 15:52:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0536|2023-05-08T13:58:16.532Z -- unknown -- wp-d3
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0536</link>
      <description>The Wp-D3 WordPress plugin through 2.4.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0536|2023-05-08T13:58:16.532Z</guid>
      <pubDate>Mon, 08 May 2023 13:58:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0166|2023-02-13T14:32:20.615Z -- unknown -- product%20slider%20for%20woocommerce%20by%20pickplugins
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0166</link>
      <description>The Product Slider for WooCommerce by PickPlugins WordPress plugin before 1.13.42 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0166|2023-02-13T14:32:20.615Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0170|2023-02-06T19:59:34.552Z -- unknown -- html5%20audio%20player
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0170</link>
      <description>The Html5 Audio Player WordPress plugin before 2.1.12 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0170|2023-02-06T19:59:34.552Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0520|2023-05-15T12:15:38.396Z -- unknown -- rapidexpcart
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0520</link>
      <description>The RapidExpCart WordPress plugin through 1.0 does not sanitize and escape the url parameter in the rapidexpcart endpoint before storing it and outputting it back in the page, leading to a Stored Cross-Site Scripting vulnerability which could be used against high-privilege users such as admin, furthermore lack of csrf protection means an attacker can trick a logged in admin to perform the attack by submitting a hidden form.</description>
      <guid isPermaLink="false">CVE-2023-0520|2023-05-15T12:15:38.396Z</guid>
      <pubDate>Mon, 15 May 2023 12:15:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0873|2023-06-27T13:17:15.735Z -- unknown -- kanban%20boards%20for%20wordpress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0873</link>
      <description>The Kanban Boards for WordPress plugin before 2.5.21 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-0873|2023-06-27T13:17:15.735Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0259|2023-02-13T14:32:19.847Z -- unknown -- wp%20google%20review%20slider
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0259</link>
      <description>The WP Google Review Slider WordPress plugin before 11.8 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as subscriber.</description>
      <guid isPermaLink="false">CVE-2023-0259|2023-02-13T14:32:19.847Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0062|2023-02-06T19:59:33.722Z -- unknown -- ean%20for%20woocommerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0062</link>
      <description>The EAN for WooCommerce WordPress plugin before 4.4.3 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0062|2023-02-06T19:59:33.722Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0824|2024-01-16T15:56:28.126Z -- unknown -- user%20registration%20%26%20user%20profile
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0824</link>
      <description>The User registration &amp; user profile WordPress plugin through 2.0 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged-in admin add Stored XSS payloads via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2023-0824|2024-01-16T15:56:28.126Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:56:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0275|2023-02-13T14:32:18.294Z -- unknown -- easy%20accept%20payments%20for%20paypal
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0275</link>
      <description>The Easy Accept Payments for PayPal WordPress plugin before 4.9.10 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0275|2023-02-13T14:32:18.294Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0367|2023-04-17T12:17:44.774Z -- unknown -- pricing%20tables%20for%20wpbakery%20page%20builder%20%28formerly%20visual%20composer%29
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0367</link>
      <description>The Pricing Tables For WPBakery Page Builder (formerly Visual Composer) WordPress plugin before 3.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0367|2023-04-17T12:17:44.774Z</guid>
      <pubDate>Mon, 17 Apr 2023 12:17:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0388|2023-04-24T18:30:54.683Z -- unknown -- random%20text
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0388</link>
      <description>The Random Text WordPress plugin through 0.3.0 does not properly sanitize and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by any authenticated users, such as subscribers.</description>
      <guid isPermaLink="false">CVE-2023-0388|2023-04-24T18:30:54.683Z</guid>
      <pubDate>Mon, 24 Apr 2023 18:30:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0058|2023-08-16T11:03:23.680Z -- unknown -- tiempo.com
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0058</link>
      <description>The Tiempo.com WordPress plugin through 0.1.2 does not have CSRF check when creating and editing its shortcode, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-0058|2023-08-16T11:03:23.680Z</guid>
      <pubDate>Wed, 16 Aug 2023 11:03:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0371|2023-02-21T08:50:52.506Z -- unknown -- embedsocial
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0371</link>
      <description>The EmbedSocial WordPress plugin before 1.1.28 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0371|2023-02-21T08:50:52.506Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0234|2023-02-06T19:59:32.911Z -- unknown -- siteground%20security
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0234</link>
      <description>The SiteGround Security WordPress plugin before 1.3.1 does not properly sanitize user input before using it in an SQL query, leading to an authenticated SQL injection issue.</description>
      <guid isPermaLink="false">CVE-2023-0234|2023-02-06T19:59:32.911Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0263|2023-02-13T14:32:17.532Z -- unknown -- wp%20yelp%20review%20slider
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0263</link>
      <description>The WP Yelp Review Slider WordPress plugin before 7.1 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as subscriber.</description>
      <guid isPermaLink="false">CVE-2023-0263|2023-02-13T14:32:17.532Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0098|2023-02-13T14:32:15.988Z -- unknown -- simple%20urls
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0098</link>
      <description>The Simple URLs WordPress plugin before 115 does not escape some parameters before using them in various SQL statements used by AJAX actions available by any authenticated users, leading to a SQL injection exploitable by low privilege users such as subscriber.</description>
      <guid isPermaLink="false">CVE-2023-0098|2023-02-13T14:32:15.988Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0535|2023-02-27T15:24:38.235Z -- unknown -- donation%20block%20for%20paypal
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0535</link>
      <description>The Donation Block For PayPal WordPress plugin before 2.1.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0535|2023-02-27T15:24:38.235Z</guid>
      <pubDate>Mon, 27 Feb 2023 15:24:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0165|2023-03-06T13:34:00.378Z -- unknown -- cost%20calculator
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0165</link>
      <description>The Cost Calculator WordPress plugin through 1.8 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0165|2023-03-06T13:34:00.378Z</guid>
      <pubDate>Mon, 06 Mar 2023 13:34:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0889|2023-04-17T12:17:43.182Z -- unknown -- themeflection%20numbers
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0889</link>
      <description>Themeflection Numbers WordPress plugin before 2.0.1 does not have authorisation and CSRF check in an AJAX action, and does not ensure that the options to be updated belong to the plugin. As a result, it could allow any authenticated users, such as subscriber, to update arbitrary blog options, such as enabling registration and set the default role to administrator</description>
      <guid isPermaLink="false">CVE-2023-0889|2023-04-17T12:17:43.182Z</guid>
      <pubDate>Mon, 17 Apr 2023 12:17:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0173|2023-02-06T19:59:32.104Z -- unknown -- drag%20%26%20drop%20sales%20funnel%20builder%20for%20wordpress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0173</link>
      <description>The Drag &amp; Drop Sales Funnel Builder for WordPress plugin before 2.6.9 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0173|2023-02-06T19:59:32.104Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0489|2023-06-19T10:52:49.912Z -- unknown -- slideonline
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0489</link>
      <description>The SlideOnline WordPress plugin through 1.2.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0489|2023-06-19T10:52:49.912Z</guid>
      <pubDate>Mon, 19 Jun 2023 10:52:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0431|2023-06-12T17:28:21.850Z -- unknown -- file%20away
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0431</link>
      <description>The File Away WordPress plugin through 3.9.9.0.1 does not validate and escape one of its shortcode attributes, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2023-0431|2023-06-12T17:28:21.850Z</guid>
      <pubDate>Mon, 12 Jun 2023 17:28:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0061|2023-02-13T14:32:15.138Z -- unknown -- judge.me%20product%20reviews%20for%20woocommerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0061</link>
      <description>The Judge.me Product Reviews for WooCommerce WordPress plugin before 1.3.21 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0061|2023-02-13T14:32:15.138Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0276|2023-04-24T18:30:53.152Z -- unknown -- weaver%20xtreme%20theme%20support
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0276</link>
      <description>The Weaver Xtreme Theme Support WordPress plugin before 6.2.7 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0276|2023-04-24T18:30:53.152Z</guid>
      <pubDate>Mon, 24 Apr 2023 18:30:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0333|2023-02-13T14:32:14.358Z -- unknown -- templatesnext%20toolkit
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0333</link>
      <description>The TemplatesNext ToolKit WordPress plugin before 3.2.9 does not validate some of its shortcode attributes before using them to generate an HTML tag, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0333|2023-02-13T14:32:14.358Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0763|2023-05-15T12:15:37.541Z -- unknown -- clock%20in%20portal-%20staff%20%26%20attendance%20management
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0763</link>
      <description>The Clock In Portal- Staff &amp; Attendance Management WordPress plugin through 2.1 does not have CSRF check when deleting Holidays, which could allow attackers to make logged in admins delete arbitrary holidays via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-0763|2023-05-15T12:15:37.541Z</guid>
      <pubDate>Mon, 15 May 2023 12:15:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0364|2023-03-20T15:52:14.304Z -- unknown -- real.kit
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0364</link>
      <description>The real.Kit WordPress plugin before 5.1.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0364|2023-03-20T15:52:14.304Z</guid>
      <pubDate>Mon, 20 Mar 2023 15:52:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0372|2023-02-21T08:50:49.266Z -- unknown -- embedstories
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0372</link>
      <description>The EmbedStories WordPress plugin before 0.7.5 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0372|2023-02-21T08:50:49.266Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0149|2023-03-29T13:15:09.334Z -- unknown -- wordprezi
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0149</link>
      <description>The WordPrezi WordPress plugin before 0.9 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0149|2023-03-29T13:15:09.334Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0630|2023-03-20T15:52:13.523Z -- unknown -- slimstat%20analytics
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0630</link>
      <description>The Slimstat Analytics WordPress plugin before 4.9.3.3 does not prevent subscribers from rendering shortcodes that concatenates attributes directly into an SQL query.</description>
      <guid isPermaLink="false">CVE-2023-0630|2023-03-20T15:52:13.523Z</guid>
      <pubDate>Mon, 20 Mar 2023 15:52:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0260|2023-02-13T14:32:12.713Z -- unknown -- wp%20review%20slider
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0260</link>
      <description>The WP Review Slider WordPress plugin before 12.2 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as subscriber.</description>
      <guid isPermaLink="false">CVE-2023-0260|2023-02-13T14:32:12.713Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0094|2024-01-16T15:55:46.407Z -- unknown -- upqode%20google%20maps
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0094</link>
      <description>The UpQode Google Maps WordPress plugin through 1.0.5 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0094|2024-01-16T15:55:46.407Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:55:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0169|2023-02-13T14:32:11.933Z -- unknown -- form%20plugin%20for%20wordpress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0169</link>
      <description>The Zoho Forms WordPress plugin before 3.0.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0169|2023-02-13T14:32:11.933Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0539|2023-02-27T15:24:35.760Z -- unknown -- gs%20insever%20portfolio
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0539</link>
      <description>The GS Insever Portfolio WordPress plugin before 1.4.5 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0539|2023-02-27T15:24:35.760Z</guid>
      <pubDate>Mon, 27 Feb 2023 15:24:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0893|2023-04-10T13:17:53.888Z -- unknown -- time%20sheets
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0893</link>
      <description>The Time Sheets WordPress plugin before 1.29.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-0893|2023-04-10T13:17:53.888Z</guid>
      <pubDate>Mon, 10 Apr 2023 13:17:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0082|2023-02-06T19:59:29.364Z -- unknown -- exactmetrics
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0082</link>
      <description>The ExactMetrics WordPress plugin before 7.12.1 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0082|2023-02-06T19:59:29.364Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0153|2023-02-06T19:59:28.523Z -- unknown -- vimeo%20video%20autoplay%20automute
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0153</link>
      <description>The Vimeo Video Autoplay Automute WordPress plugin through 1.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0153|2023-02-06T19:59:28.523Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0503|2023-03-27T15:37:31.086Z -- unknown -- free%20woocommerce%20theme%2099fy%20extension
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0503</link>
      <description>The Free WooCommerce Theme 99fy Extension WordPress plugin before 1.2.8 does not have CSRF check when activating plugins, which could allow attackers to make logged in admins activate arbitrary plugins present on the blog via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-0503|2023-03-27T15:37:31.086Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0368|2023-06-19T10:52:48.139Z -- unknown -- responsive%20tabs%20for%20wpbakery%20page%20builder%20%28formerly%20visual%20composer%29
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0368</link>
      <description>The Responsive Tabs For WPBakery Page Builder (formerly Visual Composer) WordPress plugin through 1.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0368|2023-06-19T10:52:48.139Z</guid>
      <pubDate>Mon, 19 Jun 2023 10:52:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0542|2023-05-08T13:58:11.670Z -- unknown -- custom%20post%20type%20list%20shortcode
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0542</link>
      <description>The Custom Post Type List Shortcode WordPress plugin through 1.4.4 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0542|2023-05-08T13:58:11.670Z</guid>
      <pubDate>Mon, 08 May 2023 13:58:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0329|2023-05-30T07:49:13.896Z -- unknown -- elementor%20website%20builder
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0329</link>
      <description>The Elementor Website Builder WordPress plugin before 3.12.2 does not properly sanitize and escape the Replace URL parameter in the Tools module before using it in a SQL statement, leading to a SQL injection exploitable by users with the Administrator role.</description>
      <guid isPermaLink="false">CVE-2023-0329|2023-05-30T07:49:13.896Z</guid>
      <pubDate>Tue, 30 May 2023 07:49:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0145|2023-03-20T15:52:12.480Z -- unknown -- saan%20world%20clock
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0145</link>
      <description>The Saan World Clock WordPress plugin through 1.8 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0145|2023-03-20T15:52:12.480Z</guid>
      <pubDate>Mon, 20 Mar 2023 15:52:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0514|2023-05-08T13:58:10.717Z -- unknown -- membership%20database
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0514</link>
      <description>The Membership Database WordPress plugin through 1.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-0514|2023-05-08T13:58:10.717Z</guid>
      <pubDate>Mon, 08 May 2023 13:58:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0144|2023-02-06T19:59:26.720Z -- unknown -- event%20manager%20and%20tickets%20selling%20plugin%20for%20woocommerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0144</link>
      <description>The Event Manager and Tickets Selling Plugin for WooCommerce WordPress plugin before 3.8.0 does not validate and escape some of its post meta before outputting them back in a page/post, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0144|2023-02-06T19:59:26.720Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0328|2023-03-06T13:33:58.773Z -- unknown -- wpcode
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0328</link>
      <description>The WPCode WordPress plugin before 2.0.7 does not have adequate privilege checks in place for several AJAX actions, only checking the nonce. This may lead to allowing any authenticated user who can edit posts to call the endpoints related to WPCode Library authentication (such as update and delete the auth key).</description>
      <guid isPermaLink="false">CVE-2023-0328|2023-03-06T13:33:58.773Z</guid>
      <pubDate>Mon, 06 Mar 2023 13:33:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0282|2023-02-06T19:59:24.802Z -- unknown -- yourchannel%3A%20everything%20you%20want%20in%20a%20youtube%20plugin.
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0282</link>
      <description>The YourChannel WordPress plugin before 1.2.2 does not sanitize and escape some parameters, which could allow users with a role as low as Subscriber to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0282|2023-02-06T19:59:24.802Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0955|2023-03-27T15:37:29.971Z -- unknown -- wp%20statistics
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0955</link>
      <description>The WP Statistics WordPress plugin before 14.0 does not escape a parameter, which could allow authenticated users to perform SQL Injection attacks. By default, the affected feature is available to users with the manage_options capability (admin+), however the plugin has a settings to allow low privilege users to access it as well.</description>
      <guid isPermaLink="false">CVE-2023-0955|2023-03-27T15:37:29.971Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0543|2023-02-27T15:24:34.100Z -- unknown -- arigato%20autoresponder%20and%20newsletter
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0543</link>
      <description>The Arigato Autoresponder and Newsletter WordPress plugin before 2.1.7.2 does not sanitize and escape some of its settings, which could allow high-privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2023-0543|2023-02-27T15:24:34.100Z</guid>
      <pubDate>Mon, 27 Feb 2023 15:24:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0369|2023-03-20T15:52:11.669Z -- unknown -- gotowp
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0369</link>
      <description>The GoToWP WordPress plugin through 5.1.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0369|2023-03-20T15:52:11.669Z</guid>
      <pubDate>Mon, 20 Mar 2023 15:52:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0152|2023-06-05T13:39:00.208Z -- unknown -- wp%20multi%20store%20locator
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0152</link>
      <description>The WP Multi Store Locator WordPress plugin through 2.4 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0152|2023-06-05T13:39:00.208Z</guid>
      <pubDate>Mon, 05 Jun 2023 13:39:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0502|2023-03-27T15:37:29.087Z -- unknown -- wp%20news
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0502</link>
      <description>The WP News WordPress plugin through 1.1.9 does not have CSRF check when activating plugins, which could allow attackers to make logged in admins activate arbitrary plugins present on the blog via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-0502|2023-03-27T15:37:29.087Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0579|2023-08-16T11:03:21.175Z -- unknown -- yarpp
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0579</link>
      <description>The YARPP WordPress plugin before 5.30.3 does not validate and escape some of its shortcode attributes before using them in SQL statement/s, which could allow any authenticated users, such as subscribers to perform SQL Injection attacks.</description>
      <guid isPermaLink="false">CVE-2023-0579|2023-08-16T11:03:21.175Z</guid>
      <pubDate>Wed, 16 Aug 2023 11:03:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0484|2023-03-27T15:37:28.083Z -- unknown -- contact%20form%207%20widget%20for%20elementor%20page%20builder%20%26%20gutenberg%20blocks
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0484</link>
      <description>The Contact Form 7 Widget For Elementor Page Builder &amp; Gutenberg Blocks WordPress plugin before 1.1.6 does not have CSRF check when activating plugins, which could allow attackers to make logged in admins activate arbitrary plugins present on the blog via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-0484|2023-03-27T15:37:28.083Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0892|2023-05-15T12:15:34.079Z -- unknown -- bizlibrary
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0892</link>
      <description>The BizLibrary WordPress plugin through 1.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-0892|2023-05-15T12:15:34.079Z</guid>
      <pubDate>Mon, 15 May 2023 12:15:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0168|2023-02-27T15:24:33.172Z -- unknown -- olevmedia%20shortcodes
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0168</link>
      <description>The Olevmedia Shortcodes WordPress plugin through 1.1.9 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0168|2023-02-27T15:24:33.172Z</guid>
      <pubDate>Mon, 27 Feb 2023 15:24:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0492|2023-02-21T08:50:47.672Z -- unknown -- gs%20products%20slider%20for%20woocommerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0492</link>
      <description>The GS Products Slider for WooCommerce WordPress plugin before 1.5.9 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0492|2023-02-21T08:50:47.672Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0538|2023-03-13T16:03:33.950Z -- unknown -- campaign%20url%20builder
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0538</link>
      <description>The Campaign URL Builder WordPress plugin before 1.8.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0538|2023-03-13T16:03:33.950Z</guid>
      <pubDate>Mon, 13 Mar 2023 16:03:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0095|2023-02-06T19:59:23.089Z -- unknown -- page%20view%20count
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0095</link>
      <description>The Page View Count WordPress plugin before 2.6.1 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0095|2023-02-06T19:59:23.089Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0631|2023-03-20T15:52:10.755Z -- unknown -- paid%20memberships%20pro
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0631</link>
      <description>The Paid Memberships Pro WordPress plugin before 2.9.12 does not prevent subscribers from rendering shortcodes that concatenate attributes directly into an SQL query.</description>
      <guid isPermaLink="false">CVE-2023-0631|2023-03-20T15:52:10.755Z</guid>
      <pubDate>Mon, 20 Mar 2023 15:52:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0261|2023-02-13T14:32:10.388Z -- unknown -- wp%20tripadvisor%20review%20slider
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0261</link>
      <description>The WP TripAdvisor Review Slider WordPress plugin before 10.8 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as subscriber.</description>
      <guid isPermaLink="false">CVE-2023-0261|2023-02-13T14:32:10.388Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0148|2023-02-06T19:59:22.291Z -- unknown -- gallery%20factory%20lite
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0148</link>
      <description>The Gallery Factory Lite WordPress plugin through 2.0.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0148|2023-02-06T19:59:22.291Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0236|2023-02-06T19:59:21.460Z -- unknown -- tutor%20lms
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0236</link>
      <description>The Tutor LMS WordPress plugin before 2.0.10 does not sanitise and escape the reset_key and user_id parameters before outputting then back in attributes, leading to Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-0236|2023-02-06T19:59:21.460Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0373|2023-02-13T14:32:09.595Z -- unknown -- lightweight%20accordion
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0373</link>
      <description>The Lightweight Accordion WordPress plugin before 1.5.15 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0373|2023-02-13T14:32:09.595Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0220|2023-02-13T14:32:08.000Z -- unknown -- pinpoint%20booking%20system
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0220</link>
      <description>The Pinpoint Booking System WordPress plugin before 2.9.9.2.9 does not validate and escape one of its shortcode attributes before using it in a SQL statement, which could allow any authenticated users, such as subscriber to perform SQL Injection attacks.</description>
      <guid isPermaLink="false">CVE-2023-0220|2023-02-13T14:32:08.000Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0365|2023-03-20T15:52:09.937Z -- unknown -- react%20webcam
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0365</link>
      <description>The React Webcam WordPress plugin through 1.2.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0365|2023-03-20T15:52:09.937Z</guid>
      <pubDate>Mon, 20 Mar 2023 15:52:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0559|2023-02-21T08:50:46.871Z -- unknown -- gs%20portfolio%20for%20envato
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0559</link>
      <description>The GS Portfolio for Envato WordPress plugin before 1.4.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embedded, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0559|2023-02-21T08:50:46.871Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0277|2023-04-17T12:17:40.775Z -- unknown -- wc%20fields%20factory
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0277</link>
      <description>The WC Fields Factory WordPress plugin through 4.1.5 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-0277|2023-04-17T12:17:40.775Z</guid>
      <pubDate>Mon, 17 Apr 2023 12:17:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0762|2023-05-15T12:15:32.523Z -- unknown -- clock%20in%20portal-%20staff%20%26%20attendance%20management
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0762</link>
      <description>The Clock In Portal- Staff &amp; Attendance Management WordPress plugin through 2.1 does not have CSRF check when deleting designations, which could allow attackers to make logged in admins delete arbitrary designations via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-0762|2023-05-15T12:15:32.523Z</guid>
      <pubDate>Mon, 15 May 2023 12:15:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0060|2023-02-13T14:32:06.427Z -- unknown -- responsive%20gallery%20grid
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0060</link>
      <description>The Responsive Gallery Grid WordPress plugin before 2.3.9 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0060|2023-02-13T14:32:06.427Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0172|2023-03-13T16:03:33.143Z -- unknown -- embed%2C%20curate%20%26%20aggregate%20social%20media%20feeds%20into%20your%20website%20using%20juicer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0172</link>
      <description>The Juicer WordPress plugin before 1.11 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0172|2023-03-13T16:03:33.143Z</guid>
      <pubDate>Mon, 13 Mar 2023 16:03:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0522|2023-05-08T13:58:07.769Z -- unknown -- enable%2Fdisable%20auto%20login%20when%20register
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0522</link>
      <description>The Enable/Disable Auto Login when Register WordPress plugin through 1.1.0 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-0522|2023-05-08T13:58:07.769Z</guid>
      <pubDate>Mon, 08 May 2023 13:58:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0037|2023-03-13T16:03:32.276Z -- unknown -- 10web%20map%20builder%20for%20google%20maps
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0037</link>
      <description>The 10Web Map Builder for Google Maps WordPress plugin before 1.0.73 does not properly sanitise and escape some parameters before using them in an SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection</description>
      <guid isPermaLink="false">CVE-2023-0037|2023-03-13T16:03:32.276Z</guid>
      <pubDate>Mon, 13 Mar 2023 16:03:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0467|2023-03-27T15:37:26.271Z -- unknown -- wp%20dark%20mode
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0467</link>
      <description>The WP Dark Mode WordPress plugin before 4.0.8 does not properly sanitize the style parameter in shortcodes before using it to load a PHP template. This leads to Local File Inclusion on servers where non-existent directories may be traversed, or when chained with another vulnerability allowing arbitrary directory creation.</description>
      <guid isPermaLink="false">CVE-2023-0467|2023-03-27T15:37:26.271Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0099|2024-02-05T17:06:04 -- unknown -- simple%20urls
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0099</link>
      <description>The Simple URLs WordPress plugin before 115 does not sanitise and escape some parameters before outputting them back in some pages, leading to Reflected Cross-Site Scripting which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-0099|2024-02-05T17:06:04</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0076|2024-02-13T09:27:58.086Z -- unknown -- download%20attachments
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0076</link>
      <description>The Download Attachments WordPress plugin before 1.3 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0076|2024-02-13T09:27:58.086Z</guid>
      <pubDate>Mon, 06 Mar 2023 13:33:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0495|2023-03-27T15:37:24.661Z -- unknown -- ht%20slider%20for%20elementor
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0495</link>
      <description>The HT Slider For Elementor WordPress plugin before 1.4.0 does not have CSRF check when activating plugins, which could allow attackers to make logged in admins activate arbitrary plugins present on the blog via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-0495|2023-03-27T15:37:24.661Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0600|2023-05-15T12:15:31.686Z -- unknown -- wp%20visitor%20statistics%20%28real%20time%20traffic%29
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0600</link>
      <description>The WP Visitor Statistics (Real Time Traffic) WordPress plugin before 6.9 does not escape user input which is concatenated to an SQL query, allowing unauthenticated visitors to conduct SQL Injection attacks.</description>
      <guid isPermaLink="false">CVE-2023-0600|2023-05-15T12:15:31.686Z</guid>
      <pubDate>Mon, 15 May 2023 12:15:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0769|2024-01-16T15:56:25.178Z -- unknown -- hiweb%20migration%20simple
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0769</link>
      <description>The hiWeb Migration Simple WordPress plugin through 2.0.0.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high-privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2023-0769|2024-01-16T15:56:25.178Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:56:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0505|2023-03-27T15:37:23.872Z -- unknown -- ever%20compare
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0505</link>
      <description>The Ever Compare WordPress plugin through 1.2.3 does not have CSRF check when activating plugins, which could allow attackers to make logged in admins activate arbitrary plugins present on the blog via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-0505|2023-03-27T15:37:23.872Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0381|2023-02-27T15:24:32.174Z -- unknown -- gigpress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0381</link>
      <description>The GigPress WordPress plugin through 2.3.28 does not validate and escape some of its shortcode attributes before using them in SQL statement/s, which could allow any authenticated users, such as subscriber to perform SQL Injection attacks</description>
      <guid isPermaLink="false">CVE-2023-0381|2023-02-27T15:24:32.174Z</guid>
      <pubDate>Mon, 27 Feb 2023 15:24:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0552|2023-02-27T15:24:31.331Z -- unknown -- registration%20forms
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0552</link>
      <description>The Registration Forms WordPress plugin before 3.8.2.3 does not properly validate the redirection URL when logging in and login out, leading to an Open Redirect vulnerability</description>
      <guid isPermaLink="false">CVE-2023-0552|2023-02-27T15:24:31.331Z</guid>
      <pubDate>Mon, 27 Feb 2023 15:24:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0378|2023-02-21T08:50:43.727Z -- unknown -- greenshift
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0378</link>
      <description>The Greenshift WordPress plugin before 5.0 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0378|2023-02-21T08:50:43.727Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0544|2023-05-08T13:58:06.121Z -- unknown -- wp%20login%20box
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0544</link>
      <description>The WP Login Box WordPress plugin through 2.0.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-0544|2023-05-08T13:58:06.121Z</guid>
      <pubDate>Mon, 08 May 2023 13:58:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0285|2023-02-21T08:50:42.950Z -- unknown -- real%20media%20library%3A%20media%20library%20folder%20%26%20file%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0285</link>
      <description>The Real Media Library WordPress plugin before 4.18.29 does not sanitise and escape the created folder names, which could allow users with the role of author and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0285|2023-02-21T08:50:42.950Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0143|2023-02-06T19:59:17.384Z -- unknown -- send%20pdf%20for%20contact%20form%207
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0143</link>
      <description>The Send PDF for Contact Form 7 WordPress plugin before 0.9.9.2 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2023-0143|2023-02-06T19:59:17.384Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0071|2023-01-30T20:31:33.172Z -- unknown -- wp%20tabs
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0071</link>
      <description>The WP Tabs WordPress plugin before 2.1.17 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0071|2023-01-30T20:31:33.172Z</guid>
      <pubDate>Mon, 30 Jan 2023 20:31:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0421|2023-05-08T13:58:04.382Z -- unknown -- cloud%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0421</link>
      <description>The Cloud Manager WordPress plugin through 1.0 does not sanitise and escape the query param ricerca before outputting it in an admin panel, allowing unauthenticated attackers to trick a logged in admin to trigger a XSS payload by clicking a link.</description>
      <guid isPermaLink="false">CVE-2023-0421|2023-05-08T13:58:04.382Z</guid>
      <pubDate>Mon, 08 May 2023 13:58:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0499|2023-03-27T15:37:22.175Z -- unknown -- quickswish
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0499</link>
      <description>The QuickSwish WordPress plugin before 1.1.0 does not have CSRF check when activating plugins, which could allow attackers to make logged in admins activate arbitrary plugins present on the blog via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-0499|2023-03-27T15:37:22.175Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0175|2023-03-20T15:52:09.113Z -- unknown -- responsive%20clients%20logo%20gallery%20plugin%20for%20wordpress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0175</link>
      <description>The Responsive Clients Logo Gallery Plugin for WordPress plugin through 1.1.9 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0175|2023-03-20T15:52:09.113Z</guid>
      <pubDate>Mon, 20 Mar 2023 15:52:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0876|2023-03-20T15:52:08.281Z -- unknown -- wp%20meta%20seo
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0876</link>
      <description>The WP Meta SEO WordPress plugin before 4.5.3 does not authorize several ajax actions, allowing low-privilege users to make updates to certain data and leading to an arbitrary redirect vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-0876|2023-03-20T15:52:08.281Z</guid>
      <pubDate>Mon, 20 Mar 2023 15:52:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0899|2023-04-24T18:30:50.686Z -- unknown -- steveas%20wp%20live%20chat%20shoutbox
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0899</link>
      <description>The Steveas WP Live Chat Shoutbox WordPress plugin through 1.4.2 does not sanitise and escape a parameter before outputting it back in the Shoutbox, leading to Stored Cross-Site Scripting which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2023-0899|2023-04-24T18:30:50.686Z</guid>
      <pubDate>Mon, 24 Apr 2023 18:30:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0749|2023-03-13T16:03:31.466Z -- unknown -- ocean%20extra
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0749</link>
      <description>The Ocean Extra WordPress plugin before 2.1.3 does not ensure that the template to be loaded via a shortcode is actually a template, allowing any authenticated users such as subscriber to retrieve the content of arbitrary posts, such as draft, private or even password protected ones.</description>
      <guid isPermaLink="false">CVE-2023-0749|2023-03-13T16:03:31.466Z</guid>
      <pubDate>Mon, 13 Mar 2023 16:03:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0067|2023-02-21T08:50:41.315Z -- unknown -- timed%20content
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0067</link>
      <description>The Timed Content WordPress plugin before 2.73 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0067|2023-02-21T08:50:41.315Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0159|2023-12-05T18:52:00.611Z -- unknown -- extensive%20vc%20addons%20for%20wpbakery%20page%20builder
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0159</link>
      <description>The Extensive VC Addons for WPBakery page builder WordPress plugin before 1.9.1 does not validate a parameter passed to the php extract function when loading templates, allowing an unauthenticated attacker to override the template path to read arbitrary files from the hosts file system. This may be escalated to RCE using PHP filter chains.</description>
      <guid isPermaLink="false">CVE-2023-0159|2023-12-05T18:52:00.611Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0270|2023-02-13T14:32:02.489Z -- unknown -- yamaps%20for%20wordpress%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0270</link>
      <description>The YaMaps for WordPress Plugin WordPress plugin before 0.6.26 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0270|2023-02-13T14:32:02.489Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0335|2023-03-27T15:37:21.384Z -- unknown -- wp%20shamsi
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0335</link>
      <description>The WP Shamsi WordPress plugin through 4.3.3 has CSRF and broken access control vulnerabilities which leads user with role as low as subscriber delete attachment.</description>
      <guid isPermaLink="false">CVE-2023-0335|2023-03-27T15:37:21.384Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0765|2023-04-17T12:17:39.159Z -- unknown -- gallery%20by%20bestwebsoft
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0765</link>
      <description>The Gallery by BestWebSoft WordPress plugin before 4.7.0 does not properly escape values used in SQL queries, leading to an Blind SQL Injection vulnerability. The attacker must have at least the privileges of an Author, and the vendor's Slider plugin (https://wordpress.org/plugins/slider-bws/) must also be installed for this vulnerability to be exploitable.</description>
      <guid isPermaLink="false">CVE-2023-0765|2023-04-17T12:17:39.159Z</guid>
      <pubDate>Mon, 17 Apr 2023 12:17:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0948|2023-05-08T13:58:03.613Z -- unknown -- japanized%20for%20woocommerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0948</link>
      <description>The Japanized For WooCommerce WordPress plugin before 2.5.8 does not escape generated URLs before outputting them in attributes, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2023-0948|2023-05-08T13:58:03.613Z</guid>
      <pubDate>Mon, 08 May 2023 13:58:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0362|2023-02-13T14:32:01.690Z -- unknown -- themify%20portfolio%20post
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0362</link>
      <description>Themify Portfolio Post WordPress plugin before 1.2.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0362|2023-02-13T14:32:01.690Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:32:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0548|2023-02-27T15:24:28.364Z -- unknown -- namaste%21%20lms
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0548</link>
      <description>The Namaste! LMS WordPress plugin before 2.5.9.4 does not sanitize and escape some of its settings, which could allow high-privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-0548|2023-02-27T15:24:28.364Z</guid>
      <pubDate>Mon, 27 Feb 2023 15:24:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0231|2023-02-21T08:50:38.876Z -- unknown -- shoplentor
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0231</link>
      <description>The ShopLentor WordPress plugin before 2.5.4 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0231|2023-02-21T08:50:38.876Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0374|2023-04-17T12:17:38.355Z -- unknown -- w4%20post%20list
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0374</link>
      <description>The W4 Post List WordPress plugin before 2.4.6 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0374|2023-04-17T12:17:38.355Z</guid>
      <pubDate>Mon, 17 Apr 2023 12:17:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0267|2023-05-08T13:58:02.805Z -- unknown -- ultimate%20carousel%20for%20wpbakery%20page%20builder
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0267</link>
      <description>The Ultimate Carousel For WPBakery Page Builder WordPress plugin through 2.6 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0267|2023-05-08T13:58:02.805Z</guid>
      <pubDate>Mon, 08 May 2023 13:58:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0772|2023-03-13T16:03:30.688Z -- unknown -- popup%20builder%20by%20optinmonster
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0772</link>
      <description>The Popup Builder by OptinMonster WordPress plugin before 2.12.2 does not ensure that the campaign to be loaded via some shortcodes is actually a campaign, allowing any authenticated users such as subscriber to retrieve the content of arbitrary posts, like draft, private or even password protected ones.</description>
      <guid isPermaLink="false">CVE-2023-0772|2023-03-13T16:03:30.688Z</guid>
      <pubDate>Mon, 13 Mar 2023 16:03:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0230|2023-02-27T15:24:26.720Z -- unknown -- vk%20all%20in%20one%20expansion%20unit
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0230</link>
      <description>The VK All in One Expansion Unit WordPress plugin before 9.86.0.0 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0230|2023-02-27T15:24:26.720Z</guid>
      <pubDate>Mon, 27 Feb 2023 15:24:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0660|2023-03-27T15:37:19.768Z -- unknown -- smart%20slider%203
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0660</link>
      <description>The Smart Slider 3 WordPress plugin before 3.5.1.14 does not properly validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0660|2023-03-27T15:37:19.768Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0375|2023-02-21T08:50:38.098Z -- unknown -- easy%20affiliate%20links
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0375</link>
      <description>The Easy Affiliate Links WordPress plugin before 3.7.1 does not validate and escape some of its block options before outputting them back in a page/post where the block is embedded, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0375|2023-02-21T08:50:38.098Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0733|2023-05-30T07:49:10.677Z -- unknown -- newsletter%20popup
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0733</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not sanitise and escape some of its settings, which could allow unauthenticated users to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0733|2023-05-30T07:49:10.677Z</guid>
      <pubDate>Tue, 30 May 2023 07:49:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0363|2023-04-10T13:17:52.212Z -- unknown -- scheduled%20announcements%20widget
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0363</link>
      <description>The Scheduled Announcements Widget WordPress plugin before 1.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0363|2023-04-10T13:17:52.212Z</guid>
      <pubDate>Mon, 10 Apr 2023 13:17:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0271|2023-02-21T08:50:36.488Z -- unknown -- wp%20font%20awesome
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0271</link>
      <description>The WP Font Awesome WordPress plugin before 1.7.9 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embedded, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0271|2023-02-21T08:50:36.488Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0334|2023-02-27T15:24:25.925Z -- unknown -- shortpixel%20adaptive%20images
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0334</link>
      <description>The ShortPixel Adaptive Images WordPress plugin before 3.6.3 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against any high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-0334|2023-02-27T15:24:25.925Z</guid>
      <pubDate>Mon, 27 Feb 2023 15:24:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0764|2023-04-17T12:17:37.533Z -- unknown -- gallery%20by%20bestwebsoft
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0764</link>
      <description>The Gallery by BestWebSoft WordPress plugin before 4.7.0 does not perform proper sanitization of gallery information, leading to a Stored Cross-Site Scription vulnerability. The attacker must have at least the privileges of the Author role.</description>
      <guid isPermaLink="false">CVE-2023-0764|2023-04-17T12:17:37.533Z</guid>
      <pubDate>Mon, 17 Apr 2023 12:17:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0820|2023-04-03T14:38:25.817Z -- unknown -- user%20role%20by%20bestwebsoft
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0820</link>
      <description>The User Role by BestWebSoft WordPress plugin before 1.6.7 does not protect against CSRF in requests to update role capabilities, leading to arbitrary privilege escalation of any role.</description>
      <guid isPermaLink="false">CVE-2023-0820|2023-04-03T14:38:25.817Z</guid>
      <pubDate>Mon, 03 Apr 2023 14:38:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0066|2023-03-13T16:03:28.952Z -- unknown -- companion%20sitemap%20generator
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0066</link>
      <description>The Companion Sitemap Generator WordPress plugin through 4.5.1.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0066|2023-03-13T16:03:28.952Z</guid>
      <pubDate>Mon, 13 Mar 2023 16:03:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0174|2023-02-06T19:59:14.952Z -- unknown -- wp%20vr
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0174</link>
      <description>The WP VR WordPress plugin before 8.2.7 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0174|2023-02-06T19:59:14.952Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0498|2023-03-27T15:37:18.168Z -- unknown -- wp%20education
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0498</link>
      <description>The WP Education WordPress plugin before 1.2.7 does not have CSRF check when activating plugins, which could allow attackers to make logged in admins activate arbitrary plugins present on the blog via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-0498|2023-03-27T15:37:18.168Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0477|2023-03-13T16:03:28.116Z -- unknown -- auto%20featured%20image%20%28auto%20post%20thumbnail%29
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0477</link>
      <description>The Auto Featured Image (Auto Post Thumbnail) WordPress plugin before 3.9.16 includes an AJAX endpoint that allows any user with at least Author privileges to upload arbitrary files, such as PHP files. This is caused by incorrect file extension validation.</description>
      <guid isPermaLink="false">CVE-2023-0477|2023-03-13T16:03:28.116Z</guid>
      <pubDate>Mon, 13 Mar 2023 16:03:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0924|2023-05-02T07:04:48.615Z -- unknown -- zyrex%20popup
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0924</link>
      <description>The ZYREX POPUP WordPress plugin through 1.0 does not validate the type of files uploaded when creating a popup, allowing a high privileged user (such as an Administrator) to upload arbitrary files, even when modifying the file system is disallowed, such as in a multisite install.</description>
      <guid isPermaLink="false">CVE-2023-0924|2023-05-02T07:04:48.615Z</guid>
      <pubDate>Tue, 02 May 2023 07:04:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0070|2023-03-17T08:55:14.652Z -- unknown -- responsivevoice%20text%20to%20speech
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0070</link>
      <description>The ResponsiveVoice Text To Speech WordPress plugin before 1.7.7 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0070|2023-03-17T08:55:14.652Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0420|2023-04-24T18:30:49.071Z -- unknown -- custom%20post%20type%20and%20taxonomy%20gui%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0420</link>
      <description>The Custom Post Type and Taxonomy GUI Manager WordPress plugin through 1.1 does not have CSRF, and is lacking sanitising as well as escaping in some parameters, allowing attackers to make a logged in admin put Stored Cross-Site Scripting payloads via CSRF</description>
      <guid isPermaLink="false">CVE-2023-0420|2023-04-24T18:30:49.071Z</guid>
      <pubDate>Mon, 24 Apr 2023 18:30:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0545|2023-06-05T13:38:58.659Z -- unknown -- hostel
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0545</link>
      <description>The Hostel WordPress plugin before 1.1.5.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-0545|2023-06-05T13:38:58.659Z</guid>
      <pubDate>Mon, 05 Jun 2023 13:38:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0816|2023-04-04T07:08:45.248Z -- unknown -- formidable%20forms
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0816</link>
      <description>The Formidable Forms WordPress plugin before 6.1 uses several potentially untrusted headers to determine the IP address of the client, leading to IP Address spoofing and bypass of anti-spam protections.</description>
      <guid isPermaLink="false">CVE-2023-0816|2023-04-04T07:08:45.248Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0379|2023-02-13T14:31:59.320Z -- unknown -- spotlight%20social%20feeds%20%5Bblock%2C%20shortcode%2C%20and%20widget%5D
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0379</link>
      <description>The Spotlight Social Feeds WordPress plugin before 1.4.3 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-0379|2023-02-13T14:31:59.320Z</guid>
      <pubDate>Mon, 13 Feb 2023 14:31:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0380|2023-02-21T08:50:35.659Z -- unknown -- easy%20digital%20downloads
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0380</link>
      <description>The Easy Digital Downloads WordPress plugin before 3.1.0.5 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0380|2023-02-21T08:50:35.659Z</guid>
      <pubDate>Tue, 21 Feb 2023 08:50:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0441|2023-03-27T15:37:16.230Z -- unknown -- gallery%20blocks%20with%20lightbox.%20image%20gallery%2C%20%28html5%20video%20%2C%20youtube%2C%20vimeo%29%20video%20gallery%20and%20lightbox%20for%20native%20gallery
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0441</link>
      <description>The Gallery Blocks with Lightbox WordPress plugin before 3.0.8 has an AJAX endpoint that can be accessed by any authenticated users, such as subscriber. The callback function allows numerous actions, the most serious one being reading and updating the WordPress options which could be used to enable registration with a default administrator user role.</description>
      <guid isPermaLink="false">CVE-2023-0441|2023-03-27T15:37:16.230Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0154|2023-02-06T19:59:11.729Z -- unknown -- gamipress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0154</link>
      <description>The GamiPress WordPress plugin before 1.0.9 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0154|2023-02-06T19:59:11.729Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0504|2023-03-27T15:37:15.425Z -- unknown -- ht%20politic
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0504</link>
      <description>The HT Politic WordPress plugin before 2.3.8 does not have CSRF check when activating plugins, which could allow attackers to make logged in admins activate arbitrary plugins present on the blog via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-0504|2023-03-27T15:37:15.425Z</guid>
      <pubDate>Mon, 27 Mar 2023 15:37:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0768|2023-05-08T13:58:02.011Z -- unknown -- avirato%20hotels%20online%20booking%20engine
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0768</link>
      <description>The Avirato hotels online booking engine WordPress plugin through 5.0.5 does not validate and escape some of its shortcode attributes before using them in SQL statement/s, which could allow any authenticated users, such as subscriber to perform SQL Injection attacks.</description>
      <guid isPermaLink="false">CVE-2023-0768|2023-05-08T13:58:02.011Z</guid>
      <pubDate>Mon, 08 May 2023 13:58:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0178|2023-02-06T19:59:08.721Z -- unknown -- annual%20archive
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0178</link>
      <description>The Annual Archive WordPress plugin before 1.6.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-0178|2023-02-06T19:59:08.721Z</guid>
      <pubDate>Mon, 06 Feb 2023 19:59:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-0894|2023-05-08T13:58:01.243Z -- unknown -- pickup%20%7C%20delivery%20%7C%20dine-in%20date%20time
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-0894</link>
      <description>The Pickup | Delivery | Dine-in date time WordPress plugin through 1.0.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-0894|2023-05-08T13:58:01.243Z</guid>
      <pubDate>Mon, 08 May 2023 13:58:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4250|2023-10-31T13:54:46.526Z -- unknown -- eventprime
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4250</link>
      <description>The EventPrime WordPress plugin before 3.2.0 does not sanitise and escape some parameters before outputting them back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-4250|2023-10-31T13:54:46.526Z</guid>
      <pubDate>Tue, 31 Oct 2023 13:54:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4620|2023-10-16T08:32:45.562Z -- unknown -- booking%20calendar
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4620</link>
      <description>The Booking Calendar WordPress plugin before 9.7.3.1 does not sanitize and escape some of its booking from data, allowing unauthenticated users to perform Stored Cross-Site Scripting attacks against administrators</description>
      <guid isPermaLink="false">CVE-2023-4620|2023-10-16T08:32:45.562Z</guid>
      <pubDate>Mon, 16 Oct 2023 08:32:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4270|2023-09-11T19:46:05.206Z -- unknown -- min%20max%20control
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4270</link>
      <description>The Min Max Control WordPress plugin before 4.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-4270|2023-09-11T19:46:05.206Z</guid>
      <pubDate>Mon, 11 Sep 2023 19:46:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4289|2023-10-16T19:39:24.537Z -- unknown -- wp%20matterport%20shortcode
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4289</link>
      <description>The WP Matterport Shortcode WordPress plugin before 2.1.8 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-4289|2023-10-16T19:39:24.537Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4724|2023-12-18T20:08:04.057Z -- unknown -- export%20any%20wordpress%20data%20to%20xml%2Fcsv
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4724</link>
      <description>The Export any WordPress data to XML/CSV WordPress plugin before 1.4.0, WP All Export Pro WordPress plugin before 1.8.6 does not validate and sanitise the `wp_query` parameter which allows an attacker to run arbitrary command on the remote server</description>
      <guid isPermaLink="false">CVE-2023-4724|2023-12-18T20:08:04.057Z</guid>
      <pubDate>Mon, 18 Dec 2023 20:08:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4476|2023-09-25T15:56:56.519Z -- unknown -- locatoraid%20store%20locator
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4476</link>
      <description>The Locatoraid Store Locator WordPress plugin before 3.9.24 does not sanitise and escape the lpr-search parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-4476|2023-09-25T15:56:56.519Z</guid>
      <pubDate>Mon, 25 Sep 2023 15:56:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4925|2024-01-15T15:10:43.806Z -- unknown -- easy%20forms%20for%20mailchimp
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4925</link>
      <description>The Easy Forms for Mailchimp WordPress plugin through 6.8.10 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2023-4925|2024-01-15T15:10:43.806Z</guid>
      <pubDate>Mon, 15 Jan 2024 15:10:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4821|2023-10-16T19:39:23.618Z -- unknown -- drag%20and%20drop%20multiple%20file%20upload%20for%20woocommerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4821</link>
      <description>The Drag and Drop Multiple File Upload for WooCommerce WordPress plugin before 1.1.1 does not filter all potentially dangerous file extensions. Therefore, an attacker can upload unsafe .shtml or .svg files containing malicious scripts.</description>
      <guid isPermaLink="false">CVE-2023-4821|2023-10-16T19:39:23.618Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4933|2023-10-16T19:39:22.761Z -- unknown -- wp%20job%20openings
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4933</link>
      <description>The WP Job Openings WordPress plugin before 3.4.3 does not block listing the contents of the directories where it stores attachments to job applications, allowing unauthenticated visitors to list and download private attachments if the autoindex feature of the web server is enabled.</description>
      <guid isPermaLink="false">CVE-2023-4933|2023-10-16T19:39:22.761Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4460|2023-12-04T21:28:50.774Z -- unknown -- uploading%20svg%2C%20webp%20and%20ico%20files
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4460</link>
      <description>The Uploading SVG, WEBP and ICO files WordPress plugin through 1.2.1 does not sanitise uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2023-4460|2023-12-04T21:28:50.774Z</guid>
      <pubDate>Mon, 04 Dec 2023 21:28:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4318|2023-09-11T19:46:05.630Z -- unknown -- herd%20effects
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4318</link>
      <description>The Herd Effects WordPress plugin before 5.2.4 does not have CSRF when deleting its items, which could allow attackers to make logged in admins delete arbitrary effects via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-4318|2023-09-11T19:46:05.630Z</guid>
      <pubDate>Mon, 11 Sep 2023 19:46:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4820|2023-10-16T19:39:21.880Z -- unknown -- powerpress%20podcasting%20plugin%20by%20blubrry
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4820</link>
      <description>The PowerPress Podcasting plugin by Blubrry WordPress plugin before 11.0.12 does not sanitize and escape the media url field in posts, which could allow users with privileges as low as contributor to inject arbitrary web scripts that could target a site admin or superadmin.</description>
      <guid isPermaLink="false">CVE-2023-4820|2023-10-16T19:39:21.880Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4836|2023-10-31T13:54:46.188Z -- unknown -- wordpress%20file%20sharing%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4836</link>
      <description>The WordPress File Sharing Plugin WordPress plugin before 2.0.5 does not check authorization before displaying files and folders, allowing users to gain access to those filed by manipulating IDs which can easily be brute forced</description>
      <guid isPermaLink="false">CVE-2023-4836|2023-10-31T13:54:46.188Z</guid>
      <pubDate>Tue, 31 Oct 2023 13:54:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4861|2023-10-16T19:39:21.036Z -- unknown -- file%20manager%20pro
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4861</link>
      <description>The File Manager Pro WordPress plugin before 1.8.1 allows admin users to upload arbitrary files, even in environments where such a user should not be able to gain full control of the server, such as a multisite installation. This leads to remote code execution.</description>
      <guid isPermaLink="false">CVE-2023-4861|2023-10-16T19:39:21.036Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4549|2023-09-25T15:56:56.189Z -- unknown -- dologin%20security
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4549</link>
      <description>The DoLogin Security WordPress plugin before 3.7 does not properly sanitize IP addresses coming from the X-Forwarded-For header, which can be used by attackers to conduct Stored XSS attacks via WordPress' login form.</description>
      <guid isPermaLink="false">CVE-2023-4549|2023-09-25T15:56:56.189Z</guid>
      <pubDate>Mon, 25 Sep 2023 15:56:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4725|2023-10-16T19:39:20.180Z -- unknown -- simple%20posts%20ticker
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4725</link>
      <description>The Simple Posts Ticker WordPress plugin before 1.1.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-4725|2023-10-16T19:39:20.180Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4251|2023-10-31T13:54:45.856Z -- unknown -- eventprime
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4251</link>
      <description>The EventPrime WordPress plugin before 3.2.0 does not have CSRF checks when creating bookings, which could allow attackers to make logged in users create unwanted bookings via CSRF attacks.</description>
      <guid isPermaLink="false">CVE-2023-4251|2023-10-31T13:54:45.856Z</guid>
      <pubDate>Tue, 31 Oct 2023 13:54:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4314|2023-09-11T19:46:06.952Z -- unknown -- wpdatatables
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4314</link>
      <description>The wpDataTables WordPress plugin before 2.1.66 does not validate the "Serialized PHP array" input data before deserializing the data. This allows admins to deserialize arbitrary data which may lead to remote code execution if a suitable gadget chain is present on the server. This is impactful in environments where admin users should not be allowed to execute arbitrary code, such as multisite.</description>
      <guid isPermaLink="false">CVE-2023-4314|2023-09-11T19:46:06.952Z</guid>
      <pubDate>Mon, 11 Sep 2023 19:46:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4284|2023-09-04T23:14:28.377Z -- unknown -- post%20timeline
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4284</link>
      <description>The Post Timeline WordPress plugin before 2.2.6 does not sanitise and escape an invalid nonce before outputting it back in an AJAX response, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-4284|2023-09-04T23:14:28.377Z</guid>
      <pubDate>Mon, 04 Sep 2023 11:26:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4800|2023-10-16T19:39:19.260Z -- unknown -- dologin%20security
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4800</link>
      <description>The DoLogin Security WordPress plugin before 3.7.1 does not restrict the access of a widget that shows the IPs of failed logins to low privileged users.</description>
      <guid isPermaLink="false">CVE-2023-4800|2023-10-16T19:39:19.260Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4827|2023-10-16T08:32:43.945Z -- unknown -- file%20manager%20pro
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4827</link>
      <description>The File Manager Pro WordPress plugin before 1.8 does not properly check the CSRF nonce in the `fs_connector` AJAX action. This allows attackers to make highly privileged users perform unwanted file system actions via CSRF attacks by using GET requests, such as uploading a web shell.</description>
      <guid isPermaLink="false">CVE-2023-4827|2023-10-16T08:32:43.945Z</guid>
      <pubDate>Mon, 16 Oct 2023 08:32:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4036|2023-08-30T14:22:01.184Z -- unknown -- simple%20blog%20card
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4036</link>
      <description>The Simple Blog Card WordPress plugin before 1.32 does not ensure that posts to be displayed via a shortcode are public, allowing any authenticated users, such as subscriber, to retrieve arbitrary post title and their content such as draft, private and password protected ones</description>
      <guid isPermaLink="false">CVE-2023-4036|2023-08-30T14:22:01.184Z</guid>
      <pubDate>Wed, 30 Aug 2023 14:22:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4811|2023-10-16T19:39:16.639Z -- unknown -- wordpress%20file%20upload
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4811</link>
      <description>The WordPress File Upload WordPress plugin before 4.23.3 does not sanitise and escape some of its settings, which could allow high privilege users such as contributors to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-4811|2023-10-16T19:39:16.639Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4646|2023-10-16T19:39:14.025Z -- unknown -- simple%20posts%20ticker
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4646</link>
      <description>The Simple Posts Ticker WordPress plugin before 1.1.6 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-4646|2023-10-16T19:39:14.025Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4216|2023-09-04T23:14:27.808Z -- unknown -- orders%20tracking%20for%20woocommerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4216</link>
      <description>The Orders Tracking for WooCommerce WordPress plugin before 1.2.6 doesn't validate the file_url parameter when importing a CSV file, allowing high privilege users with the manage_woocommerce capability to access any file on the web server via a Traversal attack. The content retrieved is however limited to the first line of the file.</description>
      <guid isPermaLink="false">CVE-2023-4216|2023-09-04T23:14:27.808Z</guid>
      <pubDate>Mon, 04 Sep 2023 11:27:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4703|2024-01-16T15:56:47.204Z -- unknown -- all%20in%20one%20b2b%20for%20woocommerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4703</link>
      <description>The All in One B2B for WooCommerce WordPress plugin through 1.0.3 does not properly validate parameters when updating user details, allowing an unauthenticated attacker to update the details of any user. Updating the password of an Admin user leads to privilege escalation.</description>
      <guid isPermaLink="false">CVE-2023-4703|2024-01-16T15:56:47.204Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:56:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4390|2023-10-31T13:54:45.161Z -- unknown -- popup%20box
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4390</link>
      <description>The Popup box WordPress plugin before 3.7.2 does not sanitize and escape some Popup fields, which could allow high-privilege users such as an administrator to inject arbitrary web scripts even when the unfiltered_html capability is disallowed (for example in a multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-4390|2023-10-31T13:54:45.161Z</guid>
      <pubDate>Tue, 31 Oct 2023 13:54:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4810|2023-11-06T20:41:11.175Z -- unknown -- responsive%20pricing%20table
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4810</link>
      <description>The Responsive Pricing Table WordPress plugin before 5.1.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-4810|2023-11-06T20:41:11.175Z</guid>
      <pubDate>Mon, 06 Nov 2023 20:41:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4797|2024-01-16T15:56:40.507Z -- unknown -- newsletters
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4797</link>
      <description>The Newsletters WordPress plugin before 4.9.3 does not properly escape user-controlled parameters when they are appended to SQL queries and shell commands, which could enable an administrator to run arbitrary commands on the server.</description>
      <guid isPermaLink="false">CVE-2023-4797|2024-01-16T15:56:40.507Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:56:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4514|2023-11-27T16:22:04.350Z -- unknown -- mmm%20simple%20file%20list
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4514</link>
      <description>The Mmm Simple File List WordPress plugin through 2.3 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-4514|2023-11-27T16:22:04.350Z</guid>
      <pubDate>Mon, 27 Nov 2023 16:22:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4294|2023-09-11T19:46:09.500Z -- unknown -- url%20shortify
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4294</link>
      <description>The URL Shortify WordPress plugin before 1.7.6 does not properly escape the value of the referer header, thus allowing an unauthenticated attacker to inject malicious javascript that will trigger in the plugins admin panel with statistics of the created short link.</description>
      <guid isPermaLink="false">CVE-2023-4294|2023-09-11T19:46:09.500Z</guid>
      <pubDate>Mon, 11 Sep 2023 19:46:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4502|2023-09-25T15:56:55.147Z -- unknown -- translate%20wordpress%20with%20gtranslate
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4502</link>
      <description>The Translate WordPress with GTranslate WordPress plugin before 3.0.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup). This vulnerability affects multiple parameters.</description>
      <guid isPermaLink="false">CVE-2023-4502|2023-09-25T15:56:55.147Z</guid>
      <pubDate>Mon, 25 Sep 2023 15:56:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4060|2023-09-11T19:46:08.218Z -- unknown -- wp%20adminify
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4060</link>
      <description>The WP Adminify WordPress plugin before 3.1.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-4060|2023-09-11T19:46:08.218Z</guid>
      <pubDate>Mon, 11 Sep 2023 19:46:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4826|2024-06-04T17:27:21.114Z -- unknown -- socialdriver
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4826</link>
      <description>The SocialDriver WordPress theme before version 2024 has a prototype pollution vulnerability that could allow an attacker to inject arbitrary properties resulting in a cross-site scripting (XSS) attack.</description>
      <guid isPermaLink="false">CVE-2023-4826|2024-06-04T17:27:21.114Z</guid>
      <pubDate>Fri, 23 Feb 2024 09:14:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4922|2023-11-27T16:22:03.604Z -- unknown -- wpb-show-core
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4922</link>
      <description>The WPB Show Core WordPress plugin through 2.2 is vulnerable to a local file inclusion via the `path` parameter.</description>
      <guid isPermaLink="false">CVE-2023-4922|2023-11-27T16:22:03.604Z</guid>
      <pubDate>Mon, 27 Nov 2023 16:22:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4666|2023-10-16T19:39:11.293Z -- unknown -- form%20maker%20by%2010web
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4666</link>
      <description>The Form Maker by 10Web WordPress plugin before 1.15.20 does not validate signatures when creating them on the server from user input, allowing unauthenticated users to create arbitrary files and lead to RCE</description>
      <guid isPermaLink="false">CVE-2023-4666|2023-10-16T19:39:11.293Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4148|2023-09-25T15:56:54.696Z -- unknown -- ditty
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4148</link>
      <description>The Ditty WordPress plugin before 3.1.25 does not sanitise and escape some parameters and generated URLs before outputting them back in attributes, leading to Reflected Cross-Site Scripting which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-4148|2023-09-25T15:56:54.696Z</guid>
      <pubDate>Mon, 25 Sep 2023 15:56:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4631|2023-09-25T15:56:54.321Z -- unknown -- dologin%20security
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4631</link>
      <description>The DoLogin Security WordPress plugin before 3.7 uses headers such as the X-Forwarded-For to retrieve the IP address of the request, which could lead to IP spoofing.</description>
      <guid isPermaLink="false">CVE-2023-4631|2023-09-25T15:56:54.321Z</guid>
      <pubDate>Mon, 25 Sep 2023 15:56:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4298|2023-09-04T23:14:26.652Z -- unknown -- 123.chat
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4298</link>
      <description>The 123.chat WordPress plugin before 1.3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-4298|2023-09-04T23:14:26.652Z</guid>
      <pubDate>Mon, 04 Sep 2023 11:27:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4109|2023-08-30T14:22:02.447Z -- unknown -- ninja%20forms%20contact%20form
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4109</link>
      <description>The Ninja Forms WordPress Ninja Forms Contact Form WordPress plugin before 3.6.26 was affected by a HTML Injection security vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-4109|2023-08-30T14:22:02.447Z</guid>
      <pubDate>Wed, 30 Aug 2023 14:22:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4521|2023-09-25T15:56:53.965Z -- unknown -- import%20xml%20and%20rss%20feeds
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4521</link>
      <description>The Import XML and RSS Feeds WordPress plugin before 2.1.5 contains a web shell, allowing unauthenticated attackers to perform RCE. The plugin/vendor was not compromised and the files are the result of running a PoC for a previously reported issue (https://wpscan.com/vulnerability/d4220025-2272-4d5f-9703-4b2ac4a51c42) and not deleting the created files when releasing the new version.</description>
      <guid isPermaLink="false">CVE-2023-4521|2023-09-25T15:56:53.965Z</guid>
      <pubDate>Mon, 25 Sep 2023 15:56:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4022|2023-09-11T19:46:06.069Z -- unknown -- herd%20effects
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4022</link>
      <description>The Herd Effects WordPress plugin before 5.2.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-4022|2023-09-11T19:46:06.069Z</guid>
      <pubDate>Mon, 11 Sep 2023 19:46:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4059|2023-09-04T23:14:25.497Z -- unknown -- profile%20builder
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4059</link>
      <description>The Profile Builder WordPress plugin before 3.9.8 lacks authorisation and CSRF in its page creation function which allows unauthenticated users to create the register, log-in and edit-profile pages from the plugin on the blog</description>
      <guid isPermaLink="false">CVE-2023-4059|2023-09-04T23:14:25.497Z</guid>
      <pubDate>Mon, 04 Sep 2023 11:26:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4798|2023-10-16T19:39:09.545Z -- unknown -- user%20avatar
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4798</link>
      <description>The User Avatar WordPress plugin before 1.2.2 does not properly sanitize and escape certain of its shortcodes attributes, which could allow relatively low-privileged users like contributors to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2023-4798|2023-10-16T19:39:09.545Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4311|2023-12-18T20:07:58.353Z -- unknown -- vrm%20360%203d%20model%20viewer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4311</link>
      <description>The Vrm 360 3D Model Viewer WordPress plugin through 1.2.1 is vulnerable to arbitrary file upload due to insufficient checks in a plugin shortcode.</description>
      <guid isPermaLink="false">CVE-2023-4311|2023-12-18T20:07:58.353Z</guid>
      <pubDate>Mon, 18 Dec 2023 20:07:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4254|2023-09-04T23:14:24.938Z -- unknown -- ai%20chatbot
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4254</link>
      <description>The AI ChatBot WordPress plugin before 4.7.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-4254|2023-09-04T23:14:24.938Z</guid>
      <pubDate>Mon, 04 Sep 2023 11:26:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4307|2023-09-11T19:46:04.810Z -- unknown -- lock%20user%20account
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4307</link>
      <description>The Lock User Account WordPress plugin through 1.0.3 does not have CSRF check when bulk locking and unlocking accounts, which could allow attackers to make logged in admins lock and unlock arbitrary users via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-4307|2023-09-11T19:46:04.810Z</guid>
      <pubDate>Mon, 11 Sep 2023 19:46:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4757|2024-01-16T15:56:36.620Z -- unknown -- staff%20%2F%20employee%20business%20directory%20for%20active%20directory
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4757</link>
      <description>The Staff / Employee Business Directory for Active Directory WordPress plugin before 1.2.3 does not sanitize and escape data returned from the LDAP server before rendering it in the page, allowing users who can control their entries in the LDAP directory to inject malicious javascript which could be used against high-privilege users such as a site admin.</description>
      <guid isPermaLink="false">CVE-2023-4757|2024-01-16T15:56:36.620Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:56:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4281|2023-09-25T15:56:53.286Z -- unknown -- activity%20log
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4281</link>
      <description>This Activity Log WordPress plugin before 2.8.8 retrieves client IP addresses from potentially untrusted headers, allowing an attacker to manipulate its value. This may be used to hide the source of malicious traffic.</description>
      <guid isPermaLink="false">CVE-2023-4281|2023-09-25T15:56:53.286Z</guid>
      <pubDate>Mon, 25 Sep 2023 15:56:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4278|2023-09-11T19:46:08.650Z -- unknown -- masterstudy%20lms%20wordpress%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4278</link>
      <description>The MasterStudy LMS WordPress Plugin WordPress plugin before 3.0.18 does not have proper checks in place during registration allowing anyone to register on the site as an instructor. They can then add courses and/or posts.</description>
      <guid isPermaLink="false">CVE-2023-4278|2023-09-11T19:46:08.650Z</guid>
      <pubDate>Mon, 11 Sep 2023 19:46:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4297|2023-11-27T16:22:01.657Z -- unknown -- mmm%20simple%20file%20list
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4297</link>
      <description>The Mmm Simple File List WordPress plugin through 2.3 does not validate the generated path to list files from, allowing any authenticated users, such as subscribers, to list the content of arbitrary directories.</description>
      <guid isPermaLink="false">CVE-2023-4297|2023-11-27T16:22:01.657Z</guid>
      <pubDate>Mon, 27 Nov 2023 16:22:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4151|2023-09-04T23:14:24.348Z -- unknown -- store%20locator%20wordpress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4151</link>
      <description>The Store Locator WordPress plugin before 1.4.13 does not sanitise and escape an invalid nonce before outputting it back in an AJAX response, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-4151|2023-09-04T23:14:24.348Z</guid>
      <pubDate>Mon, 04 Sep 2023 11:26:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4805|2023-10-16T19:39:06.867Z -- unknown -- tutor%20lms
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4805</link>
      <description>The Tutor LMS WordPress plugin before 2.3.0 does not sanitise and escape some of its settings, which could allow users such as subscriber to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-4805|2023-10-16T19:39:06.867Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4691|2023-10-16T19:39:05.138Z -- unknown -- wordpress%20online%20booking%20and%20scheduling%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4691</link>
      <description>The WordPress Online Booking and Scheduling Plugin WordPress plugin before 22.4 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-4691|2023-10-16T19:39:05.138Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4150|2023-08-30T14:22:04.733Z -- unknown -- user%20activity%20tracking%20and%20log
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4150</link>
      <description>The User Activity Tracking and Log WordPress plugin before 4.0.9 does not have proper CSRF checks when managing its license, which could allow attackers to make logged in admins update and deactivate the plugin's license via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2023-4150|2023-08-30T14:22:04.733Z</guid>
      <pubDate>Wed, 30 Aug 2023 14:22:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4783|2023-10-16T19:39:04.294Z -- unknown -- magee%20shortcodes
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4783</link>
      <description>The Magee Shortcodes WordPress plugin through 2.1.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-4783|2023-10-16T19:39:04.294Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4279|2023-09-04T23:14:23.768Z -- unknown -- user%20activity%20log
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4279</link>
      <description>This User Activity Log WordPress plugin before 1.6.7 retrieves client IP addresses from potentially untrusted headers, allowing an attacker to manipulate its value. This may be used to hide the source of malicious traffic.</description>
      <guid isPermaLink="false">CVE-2023-4279|2023-09-04T23:14:23.768Z</guid>
      <pubDate>Mon, 04 Sep 2023 11:27:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4795|2023-10-16T19:39:03.448Z -- unknown -- testimonial%20slider%20shortcode
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4795</link>
      <description>The Testimonial Slider Shortcode WordPress plugin before 1.1.9 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-4795|2023-10-16T19:39:03.448Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4238|2023-09-25T15:56:52.815Z -- unknown -- prevent%20files%20%2F%20folders%20access
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4238</link>
      <description>The Prevent files / folders access WordPress plugin before 2.5.2 does not validate files to be uploaded, which could allow attackers to upload arbitrary files such as PHP on the server.</description>
      <guid isPermaLink="false">CVE-2023-4238|2023-09-25T15:56:52.815Z</guid>
      <pubDate>Mon, 25 Sep 2023 15:56:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4687|2023-10-16T19:39:02.568Z -- unknown -- page%20builder%3A%20pagelayer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4687</link>
      <description>The Page Builder: Pagelayer WordPress plugin before 1.7.7 doesn't prevent unauthenticated attackers from updating a post's header or footer code on scheduled posts.</description>
      <guid isPermaLink="false">CVE-2023-4687|2023-10-16T19:39:02.568Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4490|2023-10-18T09:06:58.343Z -- unknown -- wp%20job%20portal
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4490</link>
      <description>The WP Job Portal WordPress plugin before 2.0.6 does not sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by unauthenticated users</description>
      <guid isPermaLink="false">CVE-2023-4490|2023-10-18T09:06:58.343Z</guid>
      <pubDate>Mon, 25 Sep 2023 15:56:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4388|2023-10-16T19:39:01.690Z -- unknown -- eventon
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4388</link>
      <description>The EventON WordPress plugin before 2.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-4388|2023-10-16T19:39:01.690Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4808|2023-11-20T18:55:05.343Z -- unknown -- wp%20post%20popup
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4808</link>
      <description>The WP Post Popup WordPress plugin through 3.7.3 does not sanitise and escape some of its inputs, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-4808|2023-11-20T18:55:05.343Z</guid>
      <pubDate>Mon, 20 Nov 2023 18:55:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4019|2023-09-04T23:14:23.211Z -- unknown -- media%20from%20ftp
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4019</link>
      <description>The Media from FTP WordPress plugin before 11.17 does not properly limit who can use the plugin, which may allow users with author+ privileges to move files around, like wp-config.php, which may lead to RCE in some cases.</description>
      <guid isPermaLink="false">CVE-2023-4019|2023-09-04T23:14:23.211Z</guid>
      <pubDate>Mon, 04 Sep 2023 11:27:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4799|2023-11-21T08:12:11.739Z -- unknown -- magic%20embeds
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4799</link>
      <description>The Magic Embeds WordPress plugin before 3.1.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-4799|2023-11-21T08:12:11.739Z</guid>
      <pubDate>Mon, 20 Nov 2023 18:55:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4776|2023-10-16T19:38:59.813Z -- unknown -- school%20management%20system
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4776</link>
      <description>The School Management System WordPress plugin before 2.2.5 uses the WordPress esc_sql() function on a field not delimited by quotes and did not first prepare the query, leading to a SQL injection exploitable by relatively low-privilege users like Teachers.</description>
      <guid isPermaLink="false">CVE-2023-4776|2023-10-16T19:38:59.813Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:38:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4536|2024-01-16T15:56:33.488Z -- unknown -- my%20account%20page%20editor
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4536</link>
      <description>The My Account Page Editor WordPress plugin before 1.3.2 does not validate the profile picture to be uploaded, allowing any authenticated users, such as subscriber to upload arbitrary files to the server, leading to RCE</description>
      <guid isPermaLink="false">CVE-2023-4536|2024-01-16T15:56:33.488Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:56:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4023|2023-08-30T14:22:03.825Z -- unknown -- all%20users%20messenger
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4023</link>
      <description>The All Users Messenger WordPress plugin through 1.24 does not prevent non-administrator users from deleting messages from the all-users messenger.</description>
      <guid isPermaLink="false">CVE-2023-4023|2023-08-30T14:22:03.825Z</guid>
      <pubDate>Wed, 30 Aug 2023 14:22:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4824|2023-11-20T18:55:03.719Z -- unknown -- woohoo
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4824</link>
      <description>The WooHoo Newspaper Magazine theme does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-4824|2023-11-20T18:55:03.719Z</guid>
      <pubDate>Mon, 20 Nov 2023 18:55:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4035|2023-08-30T14:22:01.592Z -- unknown -- simple%20blog%20card
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4035</link>
      <description>The Simple Blog Card WordPress plugin before 1.31 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-4035|2023-08-30T14:22:01.592Z</guid>
      <pubDate>Wed, 30 Aug 2023 14:22:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4252|2023-11-27T16:21:59.747Z -- unknown -- eventprime
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4252</link>
      <description>The EventPrime WordPress plugin through 3.2.9 specifies the price of a booking in the client request, allowing an attacker to purchase bookings without payment.</description>
      <guid isPermaLink="false">CVE-2023-4252|2023-11-27T16:21:59.747Z</guid>
      <pubDate>Mon, 27 Nov 2023 16:21:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4643|2023-10-16T19:38:58.930Z -- unknown -- enable%20media%20replace
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4643</link>
      <description>The Enable Media Replace WordPress plugin before 4.1.3 unserializes user input via the Remove Background feature, which could allow Author+ users to perform PHP Object Injection when a suitable gadget is present on the blog</description>
      <guid isPermaLink="false">CVE-2023-4643|2023-10-16T19:38:58.930Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:38:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4950|2023-10-16T19:38:58.080Z -- unknown -- interactive%20contact%20form%20and%20multi%20step%20form%20builder%20with%20drag%20%26%20drop%20editor
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4950</link>
      <description>The Interactive Contact Form and Multi Step Form Builder WordPress plugin before 3.4 does not sanitise and escape some parameters, which could allow unauthenticated users to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-4950|2023-10-16T19:38:58.080Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:38:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4823|2023-10-31T13:54:42.835Z -- unknown -- wp%20meta%20and%20date%20remover
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4823</link>
      <description>The WP Meta and Date Remover WordPress plugin before 2.2.0 provides an AJAX endpoint for configuring the plugin settings. This endpoint has no capability checks and does not sanitize the user input, which is then later output unescaped. Allowing any authenticated users, such as subscriber change them and perform Stored Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2023-4823|2023-10-31T13:54:42.835Z</guid>
      <pubDate>Tue, 31 Oct 2023 13:54:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4209|2023-08-30T14:22:05.165Z -- unknown -- poeditor
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4209</link>
      <description>The POEditor WordPress plugin before 0.9.8 does not have CSRF checks in various places, which could allow attackers to make logged in admins perform unwanted actions, such as reset the plugin's settings and update its API key via CSRF attacks.</description>
      <guid isPermaLink="false">CVE-2023-4209|2023-08-30T14:22:05.165Z</guid>
      <pubDate>Wed, 30 Aug 2023 14:22:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4970|2023-11-20T18:55:02.071Z -- unknown -- pubydoc
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4970</link>
      <description>The PubyDoc WordPress plugin through 2.0.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2023-4970|2023-11-20T18:55:02.071Z</guid>
      <pubDate>Mon, 20 Nov 2023 18:55:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4862|2023-10-16T19:38:56.312Z -- unknown -- file%20manager%20pro
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4862</link>
      <description>The File Manager Pro WordPress plugin before 1.8.1 does not adequately validate and escape some inputs, leading to XSS by high-privilege users.</description>
      <guid isPermaLink="false">CVE-2023-4862|2023-10-16T19:38:56.312Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:38:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4819|2023-10-16T19:38:55.423Z -- unknown -- shared%20files
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4819</link>
      <description>The Shared Files WordPress plugin before 1.7.6 does not return the right Content-Type header for the specified uploaded file. Therefore, an attacker can upload an allowed file extension injected with malicious scripts.</description>
      <guid isPermaLink="false">CVE-2023-4819|2023-10-16T19:38:55.423Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:38:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4376|2023-09-19T19:37:08.433Z -- unknown -- serial%20codes%20generator%20and%20validator%20with%20woocommerce%20support
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4376</link>
      <description>The Serial Codes Generator and Validator with WooCommerce Support WordPress plugin before 2.4.15 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-4376|2023-09-19T19:37:08.433Z</guid>
      <pubDate>Tue, 19 Sep 2023 19:06:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4858|2023-11-06T20:41:21.712Z -- unknown -- simple%20table%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4858</link>
      <description>The Simple Table Manager WordPress plugin through 1.5.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-4858|2023-11-06T20:41:21.712Z</guid>
      <pubDate>Mon, 06 Nov 2023 20:41:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4971|2023-10-16T19:38:52.844Z -- unknown -- weaver%20xtreme%20theme%20support
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4971</link>
      <description>The Weaver Xtreme Theme Support WordPress plugin before 6.3.1 unserialises the content of an imported file, which could lead to PHP object injections issues when a high privilege user import  a malicious file and a suitable gadget chain is present on the blog.</description>
      <guid isPermaLink="false">CVE-2023-4971|2023-10-16T19:38:52.844Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:38:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4930|2023-11-13T08:17:12.317Z -- unknown -- front%20end%20pm
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4930</link>
      <description>The Front End PM WordPress plugin before 11.4.3 does not block listing the contents of the directories where it stores attachments to private messages, allowing unauthenticated visitors to list and download private attachments if the autoindex feature of the web server is enabled.</description>
      <guid isPermaLink="false">CVE-2023-4930|2023-11-13T08:17:12.317Z</guid>
      <pubDate>Mon, 06 Nov 2023 20:41:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4013|2023-08-30T14:22:02.044Z -- unknown -- gdpr%20cookie%20compliance%20%28ccpa%2C%20dsgvo%2C%20cookie%20consent%29
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4013</link>
      <description>The GDPR Cookie Compliance (CCPA, DSGVO, Cookie Consent) WordPress plugin before 4.12.5 does not have proper CSRF checks when managing its license, which could allow attackers to make logged in admins update and deactivate the plugin's license via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2023-4013|2023-08-30T14:22:02.044Z</guid>
      <pubDate>Wed, 30 Aug 2023 14:22:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4290|2023-10-16T19:38:51.989Z -- unknown -- wp%20matterport%20shortcode
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4290</link>
      <description>The WP Matterport Shortcode WordPress plugin before 2.1.7 does not escape the PHP_SELF server variable when outputting it in attributes, leading to Reflected Cross-Site Scripting issues which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-4290|2023-10-16T19:38:51.989Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:22:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4269|2023-09-15T18:08:29.798Z -- unknown -- user%20activity%20log
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4269</link>
      <description>The User Activity Log WordPress plugin before 1.6.6 lacks proper authorisation when exporting its activity logs, allowing any authenticated users, such as subscriber to perform such action and retrieve PII such as email addresses.</description>
      <guid isPermaLink="false">CVE-2023-4269|2023-09-15T18:08:29.798Z</guid>
      <pubDate>Mon, 04 Sep 2023 11:26:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4300|2023-09-25T15:56:51.782Z -- unknown -- import%20xml%20and%20rss%20feeds
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4300</link>
      <description>The Import XML and RSS Feeds WordPress plugin before 2.1.4 does not filter file extensions for uploaded files, allowing an attacker to upload a malicious PHP file, leading to Remote Code Execution.</description>
      <guid isPermaLink="false">CVE-2023-4300|2023-09-25T15:56:51.782Z</guid>
      <pubDate>Mon, 25 Sep 2023 15:56:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4642|2023-11-27T16:21:58.631Z -- unknown -- kk%20star%20ratings
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4642</link>
      <description>The kk Star Ratings WordPress plugin before 5.4.6 does not implement atomic operations, allowing one user vote multiple times on a poll due to a Race Condition.</description>
      <guid isPermaLink="false">CVE-2023-4642|2023-11-27T16:21:58.631Z</guid>
      <pubDate>Mon, 27 Nov 2023 16:21:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-4253|2023-09-04T23:14:22.067Z -- unknown -- ai%20chatbot
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-4253</link>
      <description>The AI ChatBot WordPress plugin before 4.7.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-4253|2023-09-04T23:14:22.067Z</guid>
      <pubDate>Mon, 04 Sep 2023 11:26:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3501|2023-08-30T14:22:00.740Z -- unknown -- formcraft
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3501</link>
      <description>The FormCraft WordPress plugin before 1.2.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-3501|2023-08-30T14:22:00.740Z</guid>
      <pubDate>Wed, 30 Aug 2023 14:22:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3645|2024-01-16T15:54:05.991Z -- unknown -- contact%20form%20builder%20by%20bit%20form
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3645</link>
      <description>The Contact Form Builder by Bit Form WordPress plugin before 2.2.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-3645|2024-01-16T15:54:05.991Z</guid>
      <pubDate>Mon, 14 Aug 2023 19:10:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3604|2023-08-21T12:29:51.285Z -- unknown -- change%20wp%20admin%20login
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3604</link>
      <description>The Change WP Admin Login WordPress plugin before 1.1.4 discloses the URL of the hidden login page when accessing a crafted URL, bypassing the protection offered.</description>
      <guid isPermaLink="false">CVE-2023-3604|2023-08-21T12:29:51.285Z</guid>
      <pubDate>Mon, 21 Aug 2023 12:29:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3366|2023-08-21T12:29:50.443Z -- unknown -- multiparcels%20shipping%20for%20woocommerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3366</link>
      <description>The MultiParcels Shipping For WooCommerce WordPress plugin before 1.15.2 does not have CRSF check when deleting a shipment, allowing attackers to make any logged in user, delete arbitrary shipment via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-3366|2023-08-21T12:29:50.443Z</guid>
      <pubDate>Mon, 21 Aug 2023 12:29:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3720|2023-08-30T14:22:00.303Z -- unknown -- upload%20media%20by%20url
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3720</link>
      <description>The Upload Media By URL WordPress plugin before 1.0.8 does not have CSRF check when uploading files, which could allow attackers to make logged in admins upload files (including HTML containing JS code for users with the unfiltered_html capability) on their behalf.</description>
      <guid isPermaLink="false">CVE-2023-3720|2023-08-30T14:22:00.303Z</guid>
      <pubDate>Wed, 30 Aug 2023 14:22:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3130|2023-07-31T09:37:34.152Z -- unknown -- short%20url
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3130</link>
      <description>The Short URL WordPress plugin before 1.6.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-3130|2023-07-31T09:37:34.152Z</guid>
      <pubDate>Mon, 31 Jul 2023 09:37:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3219|2023-07-10T12:41:20.078Z -- unknown -- eventon
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3219</link>
      <description>The EventON WordPress plugin before 2.1.2 does not validate that the event_id parameter in its eventon_ics_download ajax action is a valid Event, allowing unauthenticated visitors to access any Post (including unpublished or protected posts) content via the ics export functionality by providing the numeric id of the post.</description>
      <guid isPermaLink="false">CVE-2023-3219|2023-07-10T12:41:20.078Z</guid>
      <pubDate>Mon, 10 Jul 2023 12:41:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3936|2023-08-21T12:29:49.665Z -- unknown -- blog2social%3A%20social%20media%20auto%20post%20%26%20scheduler
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3936</link>
      <description>The Blog2Social WordPress plugin before 7.2.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-3936|2023-08-21T12:29:49.665Z</guid>
      <pubDate>Mon, 21 Aug 2023 12:29:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3170|2023-09-11T19:46:09.078Z -- unknown -- tagdiv%20composer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3170</link>
      <description>The tagDiv Composer WordPress plugin before 4.2, used as a companion by the Newspaper and Newsmag themes from tagDiv, does not validate and escape some settings, which could allow users with Admin privileges to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-3170|2023-09-11T19:46:09.078Z</guid>
      <pubDate>Mon, 11 Sep 2023 19:46:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3131|2023-07-10T13:05:52.286Z -- unknown -- mstore%20api
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3131</link>
      <description>The MStore API WordPress plugin before 3.9.7 does not secure most of its AJAX actions by implementing privilege checks, nonce checks, or a combination of both.</description>
      <guid isPermaLink="false">CVE-2023-3131|2023-07-10T13:05:52.286Z</guid>
      <pubDate>Mon, 10 Jul 2023 12:41:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3721|2024-01-16T15:54:05.380Z -- unknown -- wp-email
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3721</link>
      <description>The WP-EMail WordPress plugin before 2.69.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-3721|2024-01-16T15:54:05.380Z</guid>
      <pubDate>Mon, 14 Aug 2023 19:10:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3664|2023-09-25T15:56:55.853Z -- unknown -- fileorganizer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3664</link>
      <description>The FileOrganizer WordPress plugin through 1.0.2 does not restrict functionality on multisite instances, allowing site admins to gain full control over the server.</description>
      <guid isPermaLink="false">CVE-2023-3664|2023-09-25T15:56:55.853Z</guid>
      <pubDate>Mon, 25 Sep 2023 15:56:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3392|2023-10-16T08:32:44.792Z -- unknown -- read%20more%20%26%20accordion
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3392</link>
      <description>The Read More &amp; Accordion WordPress plugin before 3.2.7 unserializes user input provided via the settings, which could allow high-privilege users such as admin to perform PHP Object Injection when a suitable gadget is present.</description>
      <guid isPermaLink="false">CVE-2023-3392|2023-10-16T08:32:44.792Z</guid>
      <pubDate>Mon, 16 Oct 2023 08:32:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3279|2023-10-16T19:39:18.389Z -- unknown -- wordpress%20gallery%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3279</link>
      <description>The WordPress Gallery Plugin WordPress plugin before 3.39 does not validate some block attributes before using them to generate paths passed to include function/s, allowing Admin users to perform LFI attacks</description>
      <guid isPermaLink="false">CVE-2023-3279|2023-10-16T19:39:18.389Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3225|2023-07-10T13:05:51.766Z -- unknown -- float%20menu
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3225</link>
      <description>The Float menu WordPress plugin before 5.0.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-3225|2023-07-10T13:05:51.766Z</guid>
      <pubDate>Mon, 10 Jul 2023 12:41:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3771|2024-01-16T15:54:04.782Z -- unknown -- t1
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3771</link>
      <description>The T1 WordPress theme through 19.0 is vulnerable to unauthenticated open redirect with which any attacker and redirect users to arbitrary websites.</description>
      <guid isPermaLink="false">CVE-2023-3771|2024-01-16T15:54:04.782Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:54:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3248|2023-07-24T10:20:25.254Z -- unknown -- all-in-one%20floating%20contact%20form%2C%20call%2C%20chat%2C%20and%2050%2B%20social%20icon%20tabs
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3248</link>
      <description>The All-in-one Floating Contact Form WordPress plugin before 2.1.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-3248|2023-07-24T10:20:25.254Z</guid>
      <pubDate>Mon, 24 Jul 2023 10:20:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3435|2024-01-16T15:54:04.428Z -- unknown -- user%20activity%20log
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3435</link>
      <description>The User Activity Log WordPress plugin before 1.6.5 does not correctly sanitise and escape several parameters before using it in a SQL statement as part of its exportation feature, allowing unauthenticated attackers to conduct SQL injection attacks.</description>
      <guid isPermaLink="false">CVE-2023-3435|2024-01-16T15:54:04.428Z</guid>
      <pubDate>Mon, 14 Aug 2023 19:10:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3209|2023-07-10T13:05:50.082Z -- unknown -- mstore%20api
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3209</link>
      <description>The MStore API WordPress plugin before 3.9.7 does not secure most of its AJAX actions by implementing privilege checks, nonce checks, or a combination of both.</description>
      <guid isPermaLink="false">CVE-2023-3209|2023-07-10T13:05:50.082Z</guid>
      <pubDate>Mon, 10 Jul 2023 12:41:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3507|2023-07-31T09:37:37.183Z -- unknown -- woocommerce%20pre-orders
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3507</link>
      <description>The WooCommerce Pre-Orders WordPress plugin before 2.0.3 has a flawed CSRF check when canceling pre-orders, which could allow attackers to make logged in admins cancel arbitrary pre-orders via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-3507|2023-07-31T09:37:37.183Z</guid>
      <pubDate>Mon, 31 Jul 2023 09:37:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3706|2023-10-16T19:39:15.786Z -- unknown -- activitypub
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3706</link>
      <description>The ActivityPub WordPress plugin before 1.0.0 does not ensure that post titles to be displayed are public and belong to the plugin, allowing any authenticated user, such as subscriber to retrieve the title of arbitrary post (such as draft and private) via an IDOR vector</description>
      <guid isPermaLink="false">CVE-2023-3706|2023-10-16T19:39:15.786Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3356|2023-08-30T14:21:59.863Z -- unknown -- subscribers%20text%20counter
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3356</link>
      <description>The Subscribers Text Counter WordPress plugin before 1.7.1 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack, which also lead to Stored Cross-Site Scripting due to the lack of sanitisation and escaping</description>
      <guid isPermaLink="false">CVE-2023-3356|2023-08-30T14:21:59.863Z</guid>
      <pubDate>Wed, 30 Aug 2023 14:21:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3182|2023-07-17T13:29:56.981Z -- unknown -- membership%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3182</link>
      <description>The Membership WordPress plugin before 3.2.3 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-3182|2023-07-17T13:29:56.981Z</guid>
      <pubDate>Mon, 17 Jul 2023 13:29:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3746|2023-10-16T19:39:14.930Z -- unknown -- activitypub
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3746</link>
      <description>The ActivityPub WordPress plugin before 1.0.0 does not sanitize and escape some data from post content, which could allow contributor and above role to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-3746|2023-10-16T19:39:14.930Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3245|2023-07-17T13:29:56.180Z -- unknown -- floating%20chat%20widget%3A%20contact%20chat%20icons%2C%20telegram%20chat%2C%20line%20messenger%2C%20wechat%2C%20email%2C%20sms%2C%20call%20button
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3245</link>
      <description>The Floating Chat Widget WordPress plugin before 3.1.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-3245|2023-07-17T13:29:56.180Z</guid>
      <pubDate>Mon, 17 Jul 2023 13:29:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3992|2023-08-30T14:22:02.880Z -- unknown -- postx
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3992</link>
      <description>The PostX WordPress plugin before 3.0.6 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-3992|2023-08-30T14:22:02.880Z</guid>
      <pubDate>Wed, 30 Aug 2023 14:22:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3707|2023-10-16T19:39:12.296Z -- unknown -- activitypub
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3707</link>
      <description>The ActivityPub WordPress plugin before 1.0.0 does not ensure that post contents to be displayed are public and belong to the plugin, allowing any authenticated user, such as subscriber to retrieve the content of arbitrary post (such as draft and private) via an IDOR vector. Password protected posts are not affected by this issue.</description>
      <guid isPermaLink="false">CVE-2023-3707|2023-10-16T19:39:12.296Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3510|2023-09-11T19:46:07.825Z -- unknown -- ftp%20access
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3510</link>
      <description>The FTP Access WordPress plugin through 1.0 does not have authorisation and CSRF checks when updating its settings and is missing sanitisation as well as escaping in them, allowing any authenticated users, such as subscriber to update them with XSS payloads, which will be triggered when an admin will view the settings of the plugin. The attack could also be perform via CSRF against any authenticated user.</description>
      <guid isPermaLink="false">CVE-2023-3510|2023-09-11T19:46:07.825Z</guid>
      <pubDate>Mon, 11 Sep 2023 19:46:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3814|2023-09-15T18:08:18.643Z -- unknown -- advanced%20file%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3814</link>
      <description>The Advanced File Manager WordPress plugin before 5.1.1 does not adequately authorize its usage on multisite installations, allowing site admin users to list and read arbitrary files and folders on the server.</description>
      <guid isPermaLink="false">CVE-2023-3814|2023-09-15T18:08:18.643Z</guid>
      <pubDate>Mon, 04 Sep 2023 11:27:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3547|2023-09-25T15:56:55.505Z -- unknown -- all%20in%20one%20b2b%20for%20woocommerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3547</link>
      <description>The All in One B2B for WooCommerce WordPress plugin through 1.0.3 does not properly check nonce values in several actions, allowing an attacker to perform CSRF attacks.</description>
      <guid isPermaLink="false">CVE-2023-3547|2023-09-25T15:56:55.505Z</guid>
      <pubDate>Mon, 25 Sep 2023 15:56:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3175|2023-07-10T13:05:48.368Z -- unknown -- ai%20chatbot
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3175</link>
      <description>The AI ChatBot WordPress plugin before 4.6.1 does not adequately escape some settings, allowing high-privilege users such as admin to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2023-3175|2023-07-10T13:05:48.368Z</guid>
      <pubDate>Mon, 10 Jul 2023 12:40:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3460|2023-07-04T07:23:28.852Z -- unknown -- ultimate%20member
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3460</link>
      <description>The Ultimate Member WordPress plugin before 2.6.7 does not prevent visitors from creating user accounts with arbitrary capabilities, effectively allowing attackers to create administrator accounts at will. This is actively being exploited in the wild.</description>
      <guid isPermaLink="false">CVE-2023-3460|2023-07-04T07:23:28.852Z</guid>
      <pubDate>Tue, 04 Jul 2023 07:23:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3499|2023-09-04T23:14:26.061Z -- unknown -- photo%20gallery%2C%20images%2C%20slider%20in%20rbs%20image%20gallery
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3499</link>
      <description>The Photo Gallery, Images, Slider in Rbs Image Gallery WordPress plugin before 3.2.16 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-3499|2023-09-04T23:14:26.061Z</guid>
      <pubDate>Mon, 04 Sep 2023 11:27:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3134|2023-10-11T08:42:32.652Z -- unknown -- forminator
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3134</link>
      <description>The Forminator WordPress plugin before 1.24.4 does not properly escape values that are being reflected inside form fields that use pre-populated query parameters, which could lead to reflected XSS attacks.</description>
      <guid isPermaLink="false">CVE-2023-3134|2023-10-11T08:42:32.652Z</guid>
      <pubDate>Mon, 31 Jul 2023 09:37:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3118|2023-07-10T13:05:47.247Z -- unknown -- export%20all%20urls
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3118</link>
      <description>The Export All URLs WordPress plugin before 4.6 does not sanitise and escape a parameter before outputting them back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-3118|2023-07-10T13:05:47.247Z</guid>
      <pubDate>Mon, 10 Jul 2023 12:40:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3179|2023-07-17T13:29:54.425Z -- unknown -- post%20smtp%20mailer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3179</link>
      <description>The POST SMTP Mailer WordPress plugin before 2.5.7 does not have proper CSRF checks in some AJAX actions, which could allow attackers to make logged in users with the manage_postman_smtp capability resend an email to an arbitrary address (for example a password reset email could be resent to an attacker controlled email, and allow them to take over an account).</description>
      <guid isPermaLink="false">CVE-2023-3179|2023-07-17T13:29:54.425Z</guid>
      <pubDate>Mon, 17 Jul 2023 13:29:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3211|2024-01-16T15:54:01.909Z -- unknown -- wordpress%20database%20administrator
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3211</link>
      <description>The WordPress Database Administrator WordPress plugin through 1.0.3 does not properly sanitise and escape a parameter before using it in a SQL statement via an AJAX action available to unauthenticated users, leading to a SQL injection.</description>
      <guid isPermaLink="false">CVE-2023-3211|2024-01-16T15:54:01.909Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:54:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3155|2023-10-16T19:39:07.736Z -- unknown -- wordpress%20gallery%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3155</link>
      <description>The WordPress Gallery Plugin WordPress plugin before 3.39 is vulnerable to Arbitrary File Read and Delete due to a lack of input parameter validation in the `gallery_edit` function, allowing an attacker to access arbitrary resources on the server.</description>
      <guid isPermaLink="false">CVE-2023-3155|2023-10-16T19:39:07.736Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3292|2023-07-31T09:37:35.639Z -- unknown -- grid-kit-premium
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3292</link>
      <description>The grid-kit-premium WordPress plugin before 2.2.0 does not escape some parameters as well as generated URLs before outputting them in attributes, leading to Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-3292|2023-07-31T09:37:35.639Z</guid>
      <pubDate>Mon, 31 Jul 2023 09:37:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3154|2023-10-16T19:39:06.028Z -- unknown -- wordpress%20gallery%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3154</link>
      <description>The WordPress Gallery Plugin WordPress plugin before 3.39 is vulnerable to PHAR Deserialization due to a lack of input parameter validation in the `gallery_edit` function, allowing an attacker to access arbitrary resources on the server.</description>
      <guid isPermaLink="false">CVE-2023-3154|2023-10-16T19:39:06.028Z</guid>
      <pubDate>Mon, 16 Oct 2023 19:39:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3139|2023-07-24T08:19:04.342Z -- unknown -- protect%20wp%20admin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3139</link>
      <description>The Protect WP Admin WordPress plugin before 4.0 discloses the URL of the admin panel via a redirection of a crafted URL, bypassing the protection offered.</description>
      <guid isPermaLink="false">CVE-2023-3139|2023-07-24T08:19:04.342Z</guid>
      <pubDate>Tue, 04 Jul 2023 07:23:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3601|2024-01-16T15:54:01.512Z -- unknown -- simple%20author%20box
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3601</link>
      <description>The Simple Author Box WordPress plugin before 2.52 does not verify a user ID before outputting information about that user, leading to arbitrary user information disclosure to users with a role as low as Contributor.</description>
      <guid isPermaLink="false">CVE-2023-3601|2024-01-16T15:54:01.512Z</guid>
      <pubDate>Mon, 14 Aug 2023 19:10:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3178|2024-01-16T15:55:29.719Z -- unknown -- post%20smtp%20mailer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3178</link>
      <description>The POST SMTP Mailer WordPress plugin before 2.5.7 does not have proper CSRF checks in some AJAX actions, which could allow attackers to make logged in users with the manage_postman_smtp capability delete arbitrary logs via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2023-3178|2024-01-16T15:55:29.719Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:55:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3508|2023-07-31T09:37:37.921Z -- unknown -- woocommerce%20pre-orders
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3508</link>
      <description>The WooCommerce Pre-Orders WordPress plugin before 2.0.3 has a flawed CSRF check when processing its tab actions, which could allow attackers to make logged in admins email pre-orders customer, change the released date, mark all pre-orders of a specific product as complete or cancel via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2023-3508|2023-07-31T09:37:37.921Z</guid>
      <pubDate>Mon, 31 Jul 2023 09:37:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3226|2023-12-15T10:10:42.533Z -- unknown -- popup%20builder
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3226</link>
      <description>The Popup Builder WordPress plugin before 4.2.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-3226|2023-12-15T10:10:42.533Z</guid>
      <pubDate>Mon, 25 Sep 2023 15:56:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3524|2023-08-07T14:31:23.140Z -- unknown -- wpcode
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3524</link>
      <description>The WPCode WordPress plugin before 2.0.13.1 does not escape generated URLs before outputting them in attributes, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2023-3524|2023-08-07T14:31:23.140Z</guid>
      <pubDate>Mon, 07 Aug 2023 14:31:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3344|2023-07-24T10:20:24.383Z -- unknown -- auto%20location%20for%20wp%20job%20manager%20via%20google
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3344</link>
      <description>The Auto Location for WP Job Manager via Google WordPress plugin before 1.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-3344|2023-07-24T10:20:24.383Z</guid>
      <pubDate>Mon, 24 Jul 2023 10:20:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3169|2023-09-11T19:46:07.392Z -- unknown -- tagdiv%20composer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3169</link>
      <description>The tagDiv Composer WordPress plugin before 4.2, used as a companion by the Newspaper and Newsmag themes from tagDiv, does not have authorisation in a REST route and does not validate as well as escape some parameters when outputting them back, which could allow unauthenticated users to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-3169|2023-09-11T19:46:07.392Z</guid>
      <pubDate>Mon, 11 Sep 2023 19:46:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3186|2023-07-17T13:29:50.962Z -- unknown -- popup%20by%20supsystic
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3186</link>
      <description>The Popup by Supsystic WordPress plugin before 1.10.19 has a prototype pollution vulnerability that could allow an attacker to inject arbitrary properties into Object.prototype.</description>
      <guid isPermaLink="false">CVE-2023-3186|2023-07-17T13:29:50.962Z</guid>
      <pubDate>Mon, 17 Jul 2023 13:29:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3647|2024-01-16T15:54:00.796Z -- unknown -- iurny%20by%20indigitall
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3647</link>
      <description>The IURNY by INDIGITALL WordPress plugin before 3.2.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-3647|2024-01-16T15:54:00.796Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:54:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3954|2023-08-21T12:29:48.909Z -- unknown -- multiparcels%20shipping%20for%20woocommerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3954</link>
      <description>The MultiParcels Shipping For WooCommerce WordPress plugin before 1.15.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-3954|2023-08-21T12:29:48.909Z</guid>
      <pubDate>Mon, 21 Aug 2023 12:29:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3041|2023-07-17T13:29:50.069Z -- unknown -- autochat%20automatic%20conversation
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3041</link>
      <description>The Autochat Automatic Conversation WordPress plugin through 1.1.7 does not sanitise and escape user input before outputting it back on the page, leading to a cross-site Scripting attack.</description>
      <guid isPermaLink="false">CVE-2023-3041|2023-07-17T13:29:50.069Z</guid>
      <pubDate>Mon, 17 Jul 2023 13:29:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3077|2023-07-10T13:05:42.696Z -- unknown -- mstore%20api
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3077</link>
      <description>The MStore API WordPress plugin before 3.9.8 does not sanitise and escape a parameter before using it in a SQL statement, leading to a Blind SQL injection exploitable by unauthenticated users. This is only exploitable if the site owner elected to pay to get access to the plugins' pro features, and uses the woocommerce-appointments plugin.</description>
      <guid isPermaLink="false">CVE-2023-3077|2023-07-10T13:05:42.696Z</guid>
      <pubDate>Mon, 10 Jul 2023 12:40:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3667|2023-08-21T12:29:48.158Z -- unknown -- chat%20button%3A%20whatsapp%20chat%2C%20facebook%20messenger%2C%20telegram%20chat%2C%20wechat%2C%20line%20chat%2C%20discord%20chat%20for%20customer%20support%20chat%20with%20floating%20chat%20widget
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3667</link>
      <description>The Bit Assist WordPress plugin before 1.1.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-3667|2023-08-21T12:29:48.158Z</guid>
      <pubDate>Mon, 21 Aug 2023 12:29:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3372|2024-01-16T15:55:36.145Z -- unknown -- lana%20shortcodes
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3372</link>
      <description>The Lana Shortcodes WordPress plugin before 1.2.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which allows users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-3372|2024-01-16T15:55:36.145Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:55:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3671|2023-08-07T14:31:22.330Z -- unknown -- multiparcels%20shipping%20for%20woocommerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3671</link>
      <description>The MultiParcels Shipping For WooCommerce WordPress plugin before 1.15.4 does not sanitise and escape various parameters before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-3671|2023-08-07T14:31:22.330Z</guid>
      <pubDate>Mon, 07 Aug 2023 14:31:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3365|2023-08-07T14:31:21.483Z -- unknown -- multiparcels%20shipping%20for%20woocommerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3365</link>
      <description>The MultiParcels Shipping For WooCommerce WordPress plugin before 1.14.14 does not have authorisation when deleting shipment, allowing any authenticated users, such as subscriber to delete arbitrary shipment</description>
      <guid isPermaLink="false">CVE-2023-3365|2023-08-07T14:31:21.483Z</guid>
      <pubDate>Mon, 07 Aug 2023 14:31:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3133|2023-07-05T10:47:59.427Z -- unknown -- tutor%20lms
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3133</link>
      <description>The Tutor LMS WordPress plugin before 2.2.1 does not implement adequate permission checks for REST API endpoints, allowing unauthenticated attackers to access information from Lessons that should not be publicly available.</description>
      <guid isPermaLink="false">CVE-2023-3133|2023-07-05T10:47:59.427Z</guid>
      <pubDate>Tue, 04 Jul 2023 07:23:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3076|2023-07-19T07:50:08.150Z -- unknown -- mstore%20api
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3076</link>
      <description>The MStore API WordPress plugin before 3.9.9 does not prevent visitors from creating user accounts with the role of their choice via their wholesale REST API endpoint. This is only exploitable if the site owner paid to access the plugin's pro features.</description>
      <guid isPermaLink="false">CVE-2023-3076|2023-07-19T07:50:08.150Z</guid>
      <pubDate>Mon, 10 Jul 2023 12:40:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3575|2023-10-11T08:42:41.211Z -- unknown -- quiz%20and%20survey%20master
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3575</link>
      <description>The Quiz And Survey Master WordPress plugin before 8.1.11 does not properly sanitize and escape question titles, which could allow users with the Contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-3575|2023-10-11T08:42:41.211Z</guid>
      <pubDate>Mon, 07 Aug 2023 14:31:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3328|2024-01-16T15:53:59.825Z -- unknown -- custom%20field%20for%20wp%20job%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3328</link>
      <description>The Custom Field For WP Job Manager WordPress plugin before 1.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-3328|2024-01-16T15:53:59.825Z</guid>
      <pubDate>Mon, 14 Aug 2023 19:10:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3492|2023-08-07T14:31:19.856Z -- unknown -- wp%20shopping%20pages
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3492</link>
      <description>The WP Shopping Pages WordPress plugin through 1.14 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2023-3492|2023-08-07T14:31:19.856Z</guid>
      <pubDate>Mon, 07 Aug 2023 14:31:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3345|2023-07-31T09:37:36.423Z -- unknown -- lms%20by%20masteriyo
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3345</link>
      <description>The LMS by Masteriyo WordPress plugin before 1.6.8 does not properly safeguards sensitive user information, like other user's email addresses, making it possible for any students to leak them via some of the plugin's REST API endpoints.</description>
      <guid isPermaLink="false">CVE-2023-3345|2023-07-31T09:37:36.423Z</guid>
      <pubDate>Mon, 31 Jul 2023 09:37:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3650|2023-08-07T14:31:19.068Z -- unknown -- bubble%20menu
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3650</link>
      <description>The Bubble Menu WordPress plugin before 3.0.5 does not sanitize and escape some of its settings, which could allow high-privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example, in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-3650|2023-08-07T14:31:19.068Z</guid>
      <pubDate>Mon, 07 Aug 2023 14:31:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-3129|2023-07-10T13:05:39.918Z -- unknown -- url%20shortify
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3129</link>
      <description>The URL Shortify WordPress plugin before 1.7.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-3129|2023-07-10T13:05:39.918Z</guid>
      <pubDate>Mon, 10 Jul 2023 12:40:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7201|2024-04-15T05:00:01.572Z -- unknown -- everest%20backup
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7201</link>
      <description>The Everest Backup  WordPress plugin before 2.2.5 does not properly validate backup files to be uploaded, allowing high privilege users such as admin to upload arbitrary files on the server even when they should not be allowed to (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-7201|2024-04-15T05:00:01.572Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7082|2024-01-22T19:14:29.189Z -- unknown -- import%20any%20xml%20or%20csv%20file%20to%20wordpress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7082</link>
      <description>The Import any XML or CSV File to WordPress plugin before 3.7.3 accepts all zip files and automatically extracts the zip file into a publicly accessible directory without sufficiently validating the extracted file type. This may allows high privilege users such as administrator to upload an executable file type leading to remote code execution.</description>
      <guid isPermaLink="false">CVE-2023-7082|2024-01-22T19:14:29.189Z</guid>
      <pubDate>Mon, 22 Jan 2024 19:14:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7165|2024-02-27T08:30:30.074Z -- unknown -- jetbackup
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7165</link>
      <description>The JetBackup WordPress plugin before 2.0.9.9 doesn't use index files to prevent public directory listing of sensitive directories in certain configurations, which allows malicious actors to leak backup files.</description>
      <guid isPermaLink="false">CVE-2023-7165|2024-02-27T08:30:30.074Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7164|2024-06-06T13:04:21.160Z -- unknown -- backwpup
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7164</link>
      <description>The BackWPup WordPress plugin before 4.0.4 does not prevent visitors from leaking key information about ongoing backups, allowing unauthenticated attackers to download backups of a site's database.</description>
      <guid isPermaLink="false">CVE-2023-7164|2024-06-06T13:04:21.160Z</guid>
      <pubDate>Mon, 08 Apr 2024 17:28:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7125|2024-02-05T21:23:11.783Z -- unknown -- community%20by%20peepso
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7125</link>
      <description>The Community by PeepSo WordPress plugin before 6.3.1.2 does not have CSRF check when creating a user post (visible on their wall in their profile page), which could allow attackers to make logged in users perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-7125|2024-02-05T21:23:11.783Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:57:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7236|2024-06-04T17:17:28.635Z -- unknown -- backup%20bolt
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7236</link>
      <description>The Backup Bolt WordPress plugin through 1.3.0 is vulnerable to Information Exposure via the unprotected access of debug logs. This makes it possible for unauthenticated attackers to retrieve the debug log which may contain information like system errors which could contain sensitive information.</description>
      <guid isPermaLink="false">CVE-2023-7236|2024-06-04T17:17:28.635Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7083|2024-02-05T21:23:13.527Z -- unknown -- voting%20record
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7083</link>
      <description>The Voting Record WordPress plugin through 2.0 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-7083|2024-02-05T21:23:13.527Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:57:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7200|2024-01-29T14:44:26.854Z -- unknown -- eventon
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7200</link>
      <description>The EventON WordPress plugin before 4.4.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-7200|2024-01-29T14:44:26.854Z</guid>
      <pubDate>Mon, 29 Jan 2024 14:44:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7084|2024-02-05T21:23:01.742Z -- unknown -- voting%20record
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7084</link>
      <description>The Voting Record WordPress plugin through 2.0 is missing sanitisation as well as escaping, which could allow any authenticated users, such as subscriber to perform Stored XSS attacks</description>
      <guid isPermaLink="false">CVE-2023-7084|2024-02-05T21:23:01.742Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:57:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7246|2024-03-20T05:00:02.302Z -- unknown -- system%20dashboard
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7246</link>
      <description>The System Dashboard WordPress plugin before 2.8.10 does not sanitize and escape some parameters, which could allow administrators in multisite WordPress configurations to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-7246|2024-03-20T05:00:02.302Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7247|2024-03-11T18:08:58.602Z -- unknown -- login%20as%20user%20or%20customer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7247</link>
      <description>The Login as User or Customer WordPress plugin through 3.8 does not prevent users to log in as any other user on the site.</description>
      <guid isPermaLink="false">CVE-2023-7247|2024-03-11T18:08:58.602Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7085|2024-03-18T19:05:50.838Z -- unknown -- scalable%20vector%20graphics%20%28svg%29
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7085</link>
      <description>The Scalable Vector Graphics (SVG) WordPress plugin through 3.4 does not sanitize uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2023-7085|2024-03-18T19:05:50.838Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7154|2024-02-05T21:23:10.022Z -- unknown -- hubbub%20lite%20%28formerly%20grow%20social%29
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7154</link>
      <description>The Hubbub Lite (formerly Grow Social) WordPress plugin before 1.32.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-7154|2024-02-05T21:23:10.022Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:57:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7115|2024-06-04T17:17:26.166Z -- unknown -- page%20builder%3A%20pagelayer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7115</link>
      <description>The Page Builder: Pagelayer WordPress plugin before 1.8.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-7115|2024-06-04T17:17:26.166Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7089|2024-01-29T14:44:24.539Z -- unknown -- easy%20svg%20allow
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7089</link>
      <description>The Easy SVG Allow WordPress plugin through 1.0 does not sanitize uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2023-7089|2024-01-29T14:44:24.539Z</guid>
      <pubDate>Mon, 29 Jan 2024 14:44:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7198|2024-02-27T08:30:27.438Z -- unknown -- wp%20dashboard%20notes
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7198</link>
      <description>The WP Dashboard Notes WordPress plugin before 1.0.11 is vulnerable to Insecure Direct Object References (IDOR) in post_id= parameter. Authenticated users are able to delete private notes associated with different user accounts. This poses a significant security risk as it violates the principle of least privilege and compromises the integrity and privacy of user data.</description>
      <guid isPermaLink="false">CVE-2023-7198|2024-02-27T08:30:27.438Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7233|2024-02-12T16:07:32.182Z -- unknown -- gigpress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7233</link>
      <description>The GigPress WordPress plugin through 2.3.29 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-7233|2024-02-12T16:07:32.182Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7194|2024-01-22T19:14:25.885Z -- unknown -- meris
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7194</link>
      <description>The Meris WordPress theme through 1.1.2 does not sanitise and escape some parameters before outputting them back in the page, leading to Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-7194|2024-01-22T19:14:25.885Z</guid>
      <pubDate>Mon, 22 Jan 2024 19:14:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7252|2024-06-04T17:17:24.507Z -- unknown -- tickera
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7252</link>
      <description>The Tickera  WordPress plugin before 3.5.2.5 does not prevent users from leaking other users' tickets.</description>
      <guid isPermaLink="false">CVE-2023-7252|2024-06-04T17:17:24.507Z</guid>
      <pubDate>Mon, 22 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7253|2024-04-24T05:00:01.731Z -- unknown -- import%20wp
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7253</link>
      <description>The Import WP  WordPress plugin before 2.13.1 does not prevent users with the administrator role from pinging conducting SSRF attacks, which may be a problem in multisite configurations.</description>
      <guid isPermaLink="false">CVE-2023-7253|2024-04-24T05:00:01.731Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7204|2024-01-29T14:44:21.464Z -- unknown -- wp%20staging%20wordpress%20backup%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7204</link>
      <description>The WP STAGING WordPress Backup plugin before 3.2.0 allows access to cache files during the cloning process which provides</description>
      <guid isPermaLink="false">CVE-2023-7204|2024-01-29T14:44:21.464Z</guid>
      <pubDate>Mon, 29 Jan 2024 14:44:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7232|2024-03-26T05:00:02.063Z -- unknown -- backup%20and%20restore%20wordpress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7232</link>
      <description>The Backup and Restore WordPress  WordPress plugin through 1.45 does not protect some log files containing sensitive information such as site configuration etc, allowing unauthenticated users to access such data</description>
      <guid isPermaLink="false">CVE-2023-7232|2024-03-26T05:00:02.063Z</guid>
      <pubDate>Tue, 26 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7199|2024-01-29T14:44:19.919Z -- unknown -- relevanssi
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7199</link>
      <description>The Relevanssi WordPress plugin before 4.22.0, Relevanssi Premium WordPress plugin before 2.25.0 allows any unauthenticated user to read draft and private posts via a crafted request</description>
      <guid isPermaLink="false">CVE-2023-7199|2024-01-29T14:44:19.919Z</guid>
      <pubDate>Mon, 29 Jan 2024 14:44:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7203|2024-02-27T08:30:25.017Z -- unknown -- smart%20forms
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7203</link>
      <description>The Smart Forms WordPress plugin before 2.6.87 does not have authorisation in various AJAX actions, which could allow users with a role as low as subscriber to call them and perform unauthorised actions such as deleting entries. The plugin also lacks CSRF checks in some places which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as deleting entries.</description>
      <guid isPermaLink="false">CVE-2023-7203|2024-02-27T08:30:25.017Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7151|2024-01-29T14:44:18.395Z -- unknown -- product%20enquiry%20for%20woocommerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7151</link>
      <description>The Product Enquiry for WooCommerce WordPress plugin before 3.2 does not sanitise and escape the page parameter before outputting it back in an attribute, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-7151|2024-01-29T14:44:18.395Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:57:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7167|2024-02-27T08:30:24.228Z -- unknown -- persian%20fonts
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7167</link>
      <description>The Persian Fonts WordPress plugin through 1.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-7167|2024-02-27T08:30:24.228Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7170|2024-01-22T19:14:23.385Z -- unknown -- eventon-rsvp
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7170</link>
      <description>The EventON-RSVP WordPress plugin before 2.9.5 does not sanitise and escape some parameters before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-7170|2024-01-22T19:14:23.385Z</guid>
      <pubDate>Mon, 22 Jan 2024 19:14:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7074|2024-01-29T14:44:15.496Z -- unknown -- wp%20social%20bookmark%20menu
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7074</link>
      <description>The WP SOCIAL BOOKMARK MENU WordPress plugin through 1.2 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2023-7074|2024-01-29T14:44:15.496Z</guid>
      <pubDate>Mon, 29 Jan 2024 14:44:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-7202|2024-06-04T17:17:22.386Z -- unknown -- fatal%20error%20notify
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-7202</link>
      <description>The Fatal Error Notify WordPress plugin before 1.5.3 does not have authorisation and CSRF checks in its test_error AJAX action, allowing any authenticated users, such as subscriber to call it and spam the admin email address with error messages. The issue is also exploitable via CSRF</description>
      <guid isPermaLink="false">CVE-2023-7202|2024-06-04T17:17:22.386Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6257|2024-06-04T17:17:20.622Z -- unknown -- inline%20related%20posts
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6257</link>
      <description>The Inline Related Posts WordPress plugin before 3.6.0 does not ensure that post content displayed via an AJAX action are accessible to the user, allowing any authenticated user, such as subscriber to retrieve the content of password protected posts</description>
      <guid isPermaLink="false">CVE-2023-6257|2024-06-04T17:17:20.622Z</guid>
      <pubDate>Thu, 11 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6447|2024-01-22T19:14:30.115Z -- unknown -- eventprime
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6447</link>
      <description>The EventPrime WordPress plugin before 3.3.6 lacks authentication and authorization, allowing unauthenticated visitors to access private and password protected Events by guessing their numeric id/event name.</description>
      <guid isPermaLink="false">CVE-2023-6447|2024-01-22T19:14:30.115Z</guid>
      <pubDate>Mon, 22 Jan 2024 19:14:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6294|2024-02-12T16:07:36.681Z -- unknown -- popup%20builder
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6294</link>
      <description>The Popup Builder WordPress plugin before 4.2.6 does not validate a parameter before making a request to it, which could allow users with the administrator role to perform SSRF attack in Multisite WordPress configurations.</description>
      <guid isPermaLink="false">CVE-2023-6294|2024-02-12T16:07:36.681Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:06:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6555|2024-01-08T19:00:27.436Z -- unknown -- email%20subscription%20popup
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6555</link>
      <description>The Email Subscription Popup WordPress plugin before 1.2.20 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-6555|2024-01-08T19:00:27.436Z</guid>
      <pubDate>Mon, 08 Jan 2024 19:00:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6113|2024-01-01T14:18:58.931Z -- unknown -- wp%20staging%20wordpress%20backup%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6113</link>
      <description>The WP STAGING WordPress Backup Plugin before 3.1.3 and WP STAGING Pro WordPress Backup Plugin before 5.1.3 do not prevent visitors from leaking key information about ongoing backups processes, allowing unauthenticated attackers to download said backups later.</description>
      <guid isPermaLink="false">CVE-2023-6113|2024-01-01T14:18:58.931Z</guid>
      <pubDate>Mon, 01 Jan 2024 14:18:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6390|2024-01-29T14:44:29.371Z -- unknown -- wordpress%20users
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6390</link>
      <description>The WordPress Users WordPress plugin through 1.4 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2023-6390|2024-01-29T14:44:29.371Z</guid>
      <pubDate>Mon, 29 Jan 2024 14:44:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6037|2024-01-01T14:18:57.409Z -- unknown -- wp%20tripadvisor%20review%20slider
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6037</link>
      <description>The WP TripAdvisor Review Slider WordPress plugin before 11.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-6037|2024-01-01T14:18:57.409Z</guid>
      <pubDate>Mon, 01 Jan 2024 14:18:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6627|2024-01-08T19:00:30.023Z -- unknown -- wp%20go%20maps%20%28formerly%20wp%20google%20maps%29
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6627</link>
      <description>The WP Go Maps (formerly WP Google Maps) WordPress plugin before 9.0.28 does not properly protect most of its REST API routes, which attackers can abuse to store malicious HTML/Javascript on the site.</description>
      <guid isPermaLink="false">CVE-2023-6627|2024-01-08T19:00:30.023Z</guid>
      <pubDate>Mon, 08 Jan 2024 19:00:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6373|2024-01-16T15:57:47.717Z -- unknown -- artplacer%20widget
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6373</link>
      <description>The ArtPlacer Widget WordPress plugin before 2.20.7 does not sanitize and escape the "id" parameter before submitting the query, leading to a SQLI exploitable by editors and above. Note: Due to the lack of CSRF check, the issue could also be exploited via a CSRF against a logged editor (or above)</description>
      <guid isPermaLink="false">CVE-2023-6373|2024-01-16T15:57:47.717Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:57:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6626|2024-01-22T19:14:28.393Z -- unknown -- product%20enquiry%20for%20woocommerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6626</link>
      <description>The Product Enquiry for WooCommerce WordPress plugin before 3.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-6626|2024-01-22T19:14:28.393Z</guid>
      <pubDate>Mon, 22 Jan 2024 19:14:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6036|2024-02-12T16:07:36.124Z -- unknown -- web3
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6036</link>
      <description>The Web3 WordPress plugin before 3.0.0 is vulnerable to an authentication bypass due to incorrect authentication checking in the login flow in functions 'handle_auth_request' and 'hadle_login_request'. This makes it possible for non authenticated attackers to log in as any existing user on the site, such as an administrator, if they have access to the username.</description>
      <guid isPermaLink="false">CVE-2023-6036|2024-02-12T16:07:36.124Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:06:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6165|2024-01-29T14:44:28.461Z -- unknown -- restrict%20usernames%20emails%20characters
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6165</link>
      <description>The Restrict Usernames Emails Characters WordPress plugin before 3.1.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2023-6165|2024-01-29T14:44:28.461Z</guid>
      <pubDate>Mon, 29 Jan 2024 14:44:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6077|2023-12-18T20:08:02.427Z -- unknown -- slider
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6077</link>
      <description>The Slider WordPress plugin before 3.5.12 does not ensure that posts to be accessed via an AJAX action are slides and can be viewed by the user making the request, allowing any authenticated users, such as subscriber to access the content arbitrary post such as private, draft and password protected</description>
      <guid isPermaLink="false">CVE-2023-6077|2023-12-18T20:08:02.427Z</guid>
      <pubDate>Mon, 18 Dec 2023 20:08:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6000|2024-01-01T14:18:56.633Z -- unknown -- popup%20builder
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6000</link>
      <description>The Popup Builder WordPress plugin before 4.2.3 does not prevent simple visitors from updating existing popups, and injecting raw JavaScript in them, which could lead to Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2023-6000|2024-01-01T14:18:56.633Z</guid>
      <pubDate>Mon, 01 Jan 2024 14:18:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6391|2024-01-29T14:44:27.602Z -- unknown -- custom%20user%20css
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6391</link>
      <description>The Custom User CSS WordPress plugin through 0.2 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2023-6391|2024-01-29T14:44:27.602Z</guid>
      <pubDate>Mon, 29 Jan 2024 14:44:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6295|2023-12-18T20:08:01.584Z -- unknown -- siteorigin%20widgets%20bundle
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6295</link>
      <description>The SiteOrigin Widgets Bundle WordPress plugin before 1.51.0 does not validate user input before using it to generate paths passed to include function/s, allowing users with the administrator role to perform LFI attacks in the context of Multisite WordPress sites.</description>
      <guid isPermaLink="false">CVE-2023-6295|2023-12-18T20:08:01.584Z</guid>
      <pubDate>Mon, 18 Dec 2023 20:08:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6503|2024-01-29T14:44:26.055Z -- unknown -- wp%20plugin%20lister
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6503</link>
      <description>The WP Plugin Lister WordPress plugin through 2.1.0 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2023-6503|2024-01-29T14:44:26.055Z</guid>
      <pubDate>Mon, 29 Jan 2024 14:44:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6082|2024-02-12T16:07:35.568Z -- unknown -- chartjs
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6082</link>
      <description>The chartjs WordPress plugin through 2023.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-6082|2024-02-12T16:07:35.568Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:06:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6485|2024-01-01T14:18:55.845Z -- unknown -- html5%20video%20player
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6485</link>
      <description>The Html5 Video Player WordPress plugin before 2.5.19 does not sanitise and escape some of its player settings, which combined with missing capability checks around the plugin could allow any authenticated users, such as low as subscribers to perform Stored Cross-Site Scripting attacks against high privilege users like admins</description>
      <guid isPermaLink="false">CVE-2023-6485|2024-01-01T14:18:55.845Z</guid>
      <pubDate>Mon, 01 Jan 2024 14:18:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6532|2024-01-08T19:03:04.615Z -- unknown -- wp%20blogs%27%20planetarium
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6532</link>
      <description>The WP Blogs' Planetarium WordPress plugin through 1.0 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-6532|2024-01-08T19:03:04.615Z</guid>
      <pubDate>Mon, 08 Jan 2024 19:03:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6066|2024-01-15T15:10:43.076Z -- unknown -- wp%20custom%20widget%20area
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6066</link>
      <description>The WP Custom Widget area WordPress plugin through 1.2.5 does not properly apply capability and nonce checks on any of its AJAX action callback functions, which could allow attackers with subscriber+ privilege to create, delete or modify menus on the site.</description>
      <guid isPermaLink="false">CVE-2023-6066|2024-01-15T15:10:43.076Z</guid>
      <pubDate>Mon, 15 Jan 2024 15:10:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6621|2024-01-15T15:10:42.696Z -- unknown -- post%20smtp
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6621</link>
      <description>The POST SMTP WordPress plugin before 2.8.7 does not sanitise and escape the msg parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-6621|2024-01-15T15:10:42.696Z</guid>
      <pubDate>Wed, 03 Jan 2024 08:32:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6271|2024-01-01T14:18:55.067Z -- unknown -- backup%20migration
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6271</link>
      <description>The Backup Migration WordPress plugin before 1.3.6 stores in-progress backups information in easy to find, publicly-accessible files, which may allow attackers monitoring those to leak sensitive information from the site's backups.</description>
      <guid isPermaLink="false">CVE-2023-6271|2024-01-01T14:18:55.067Z</guid>
      <pubDate>Mon, 01 Jan 2024 14:18:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6139|2024-01-08T19:00:31.085Z -- unknown -- essential%20real%20estate
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6139</link>
      <description>The Essential Real Estate WordPress plugin before 4.4.0 does not apply proper capability checks on its AJAX actions, which among other things, allow attackers with a subscriber account to conduct Denial of Service attacks.</description>
      <guid isPermaLink="false">CVE-2023-6139|2024-01-08T19:00:31.085Z</guid>
      <pubDate>Mon, 08 Jan 2024 19:00:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6528|2024-01-08T19:00:34.654Z -- unknown -- slider%20revolution
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6528</link>
      <description>The Slider Revolution WordPress plugin before 6.6.19 does not prevent users with at least the Author role from unserializing arbitrary content when importing sliders, potentially leading to Remote Code Execution.</description>
      <guid isPermaLink="false">CVE-2023-6528|2024-01-08T19:00:34.654Z</guid>
      <pubDate>Mon, 08 Jan 2024 19:00:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6292|2024-01-16T15:57:34.872Z -- unknown -- ecwid%20ecommerce%20shopping%20cart
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6292</link>
      <description>The Ecwid Ecommerce Shopping Cart WordPress plugin before 6.12.5 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2023-6292|2024-01-16T15:57:34.872Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:57:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6046|2024-01-16T15:54:15.535Z -- unknown -- eventon
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6046</link>
      <description>The EventON WordPress plugin before 2.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored HTML Injection attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2023-6046|2024-01-16T15:54:15.535Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:54:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6050|2024-01-15T15:10:42.097Z -- unknown -- estatik%20real%20estate%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6050</link>
      <description>The Estatik Real Estate Plugin WordPress plugin before 4.1.1 does not sanitise and escape various parameters and generated URLs before outputting them back in attributes, leading to Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-6050|2024-01-15T15:10:42.097Z</guid>
      <pubDate>Mon, 15 Jan 2024 15:10:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6456|2024-01-22T19:14:27.567Z -- unknown -- wp%20review%20slider
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6456</link>
      <description>The WP Review Slider WordPress plugin before 13.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-6456|2024-01-22T19:14:27.567Z</guid>
      <pubDate>Mon, 22 Jan 2024 19:14:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6114|2023-12-26T18:33:12.631Z -- unknown -- duplicator
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6114</link>
      <description>The Duplicator WordPress plugin before 1.5.7.1, Duplicator Pro WordPress plugin before 4.5.14.2 does not disallow listing the `backups-dup-lite/tmp` directory (or the `backups-dup-pro/tmp` directory in the Pro version), which temporarily stores files containing sensitive data. When directory listing is enabled in the web server, this allows unauthenticated attackers to discover and access these sensitive files, which include a full database dump and a zip archive of the site.</description>
      <guid isPermaLink="false">CVE-2023-6114|2023-12-26T18:33:12.631Z</guid>
      <pubDate>Tue, 26 Dec 2023 18:33:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6505|2024-01-08T19:00:38.801Z -- unknown -- migrate%20wordpress%20website%20%26%20backups
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6505</link>
      <description>The Migrate WordPress Website &amp; Backups WordPress plugin before 1.9.3 does not prevent directory listing in sensitive directories containing export files.</description>
      <guid isPermaLink="false">CVE-2023-6505|2024-01-08T19:00:38.801Z</guid>
      <pubDate>Mon, 08 Jan 2024 19:00:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6155|2023-12-26T18:33:11.835Z -- unknown -- quiz%20maker
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6155</link>
      <description>The Quiz Maker WordPress plugin before 6.4.9.5 does not adequately authorize the `ays_quiz_author_user_search` AJAX action, allowing an unauthenticated attacker to perform a search for users of the system, ultimately leaking user email addresses.</description>
      <guid isPermaLink="false">CVE-2023-6155|2023-12-26T18:33:11.835Z</guid>
      <pubDate>Tue, 26 Dec 2023 18:33:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6591|2024-06-04T17:17:09.838Z -- unknown -- popup%20box
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6591</link>
      <description>The Popup Box WordPress plugin before 20.9.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2023-6591|2024-06-04T17:17:09.838Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:06:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6250|2023-12-26T18:33:11.036Z -- unknown -- bestwebsoft%27s%20like%20%26%20share
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6250</link>
      <description>The BestWebSoft's Like &amp; Share WordPress plugin before 2.74 discloses the content of password protected posts to unauthenticated users via a meta tag</description>
      <guid isPermaLink="false">CVE-2023-6250|2023-12-26T18:33:11.036Z</guid>
      <pubDate>Tue, 26 Dec 2023 18:33:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6529|2024-01-08T19:00:26.949Z -- unknown -- wp%20vr
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6529</link>
      <description>The WP VR WordPress plugin before 8.3.15 does not authorisation and CSRF in a function hooked to admin_init, allowing unauthenticated users to downgrade the plugin, thus leading to Reflected or Stored XSS, as previous versions have such vulnerabilities.</description>
      <guid isPermaLink="false">CVE-2023-6529|2024-01-08T19:00:26.949Z</guid>
      <pubDate>Mon, 08 Jan 2024 19:00:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6991|2024-01-15T15:10:41.733Z -- unknown -- jsm%20file_get_contents%28%29%20shortcode
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6991</link>
      <description>The JSM file_get_contents() Shortcode WordPress plugin before 2.7.1 does not validate one of its shortcode's parameters before making a request to it, which could allow users with contributor role and above to perform SSRF attacks.</description>
      <guid isPermaLink="false">CVE-2023-6991|2024-01-15T15:10:41.733Z</guid>
      <pubDate>Mon, 15 Jan 2024 15:10:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6289|2023-12-18T20:08:00.760Z -- unknown -- swift%20performance%20lite
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6289</link>
      <description>The Swift Performance Lite WordPress plugin before 2.3.6.15 does not prevent users from exporting the plugin's settings, which may include sensitive information such as Cloudflare API tokens.</description>
      <guid isPermaLink="false">CVE-2023-6289|2023-12-18T20:08:00.760Z</guid>
      <pubDate>Mon, 18 Dec 2023 20:08:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6732|2024-02-05T21:23:03.610Z -- unknown -- ultimate%20maps%20by%20supsystic
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6732</link>
      <description>The Ultimate Maps by Supsystic WordPress plugin before 1.2.16 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2023-6732|2024-02-05T21:23:03.610Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:57:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6620|2024-01-15T15:10:41.386Z -- unknown -- post%20smtp%20mailer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6620</link>
      <description>The POST SMTP Mailer WordPress plugin before 2.8.7 does not properly sanitise and escape several parameters before using them in SQL statements, leading to a SQL injection exploitable by high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-6620|2024-01-15T15:10:41.386Z</guid>
      <pubDate>Mon, 15 Jan 2024 15:10:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6821|2024-06-04T17:17:08.590Z -- unknown -- error%20log%20viewer%20by%20bestwebsoft
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6821</link>
      <description>The Error Log Viewer by BestWebSoft WordPress plugin before 1.1.3 contains a vulnerability that allows you to read and download PHP logs without authorization</description>
      <guid isPermaLink="false">CVE-2023-6821|2024-06-04T17:17:08.590Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6067|2024-04-15T05:00:01.200Z -- unknown -- wp%20user%20profile%20avatar
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6067</link>
      <description>The WP User Profile Avatar WordPress plugin through 1.0.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2023-6067|2024-04-15T05:00:01.200Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6163|2024-01-15T15:10:41.014Z -- unknown -- wp%20crowdfunding
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6163</link>
      <description>The WP Crowdfunding WordPress plugin before 2.1.10 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-6163|2024-01-15T15:10:41.014Z</guid>
      <pubDate>Mon, 15 Jan 2024 15:10:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6499|2024-02-12T16:07:33.325Z -- unknown -- lastunes
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6499</link>
      <description>The lasTunes WordPress plugin through 3.6.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-6499|2024-02-12T16:07:33.325Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6421|2024-01-01T14:18:53.519Z -- unknown -- download%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6421</link>
      <description>The Download Manager WordPress plugin before 3.2.83 does not protect file download's passwords, leaking it upon receiving an invalid one.</description>
      <guid isPermaLink="false">CVE-2023-6421|2024-01-01T14:18:53.519Z</guid>
      <pubDate>Mon, 01 Jan 2024 14:18:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6048|2024-01-15T15:10:40.683Z -- unknown -- estatik%20real%20estate%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6048</link>
      <description>The Estatik Real Estate Plugin WordPress plugin before 4.1.1 does not prevent user with low privileges on the site, like subscribers, from setting any of the site's options to 1, which could be used to break sites and lead to DoS when certain options are reset</description>
      <guid isPermaLink="false">CVE-2023-6048|2024-01-15T15:10:40.683Z</guid>
      <pubDate>Mon, 15 Jan 2024 15:10:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6623|2024-01-15T15:10:40.328Z -- unknown -- essential%20blocks
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6623</link>
      <description>The Essential Blocks WordPress plugin before 4.4.3 does not prevent unauthenticated attackers from overwriting local variables when rendering templates over the REST API, which may lead to Local File Inclusion attacks.</description>
      <guid isPermaLink="false">CVE-2023-6623|2024-01-15T15:10:40.328Z</guid>
      <pubDate>Mon, 15 Jan 2024 15:10:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6064|2024-01-01T14:18:52.756Z -- unknown -- payhere%20payment%20gateway
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6064</link>
      <description>The PayHere Payment Gateway WordPress plugin before 2.2.12 automatically creates publicly-accessible log files containing sensitive information when transactions occur.</description>
      <guid isPermaLink="false">CVE-2023-6064|2024-01-01T14:18:52.756Z</guid>
      <pubDate>Mon, 01 Jan 2024 14:18:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6530|2024-01-29T14:44:23.025Z -- unknown -- tj%20shortcodes
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6530</link>
      <description>The TJ Shortcodes WordPress plugin through 0.1.3 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-6530|2024-01-29T14:44:23.025Z</guid>
      <pubDate>Mon, 29 Jan 2024 14:44:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6843|2024-01-15T15:10:39.949Z -- unknown -- easy.jobs-%20best%20recruitment%20plugin%20for%20job%20board%20listing%2C%20manager%2C%20career%20page%20for%20elementor%20%26%20gutenberg
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6843</link>
      <description>The easy.jobs- Best Recruitment Plugin for Job Board Listing, Manager, Career Page for Elementor &amp; Gutenberg WordPress plugin before 2.4.7 does not properly secure some of its AJAX actions, allowing any logged-in users to modify its settings.</description>
      <guid isPermaLink="false">CVE-2023-6843|2024-01-15T15:10:39.949Z</guid>
      <pubDate>Mon, 15 Jan 2024 15:10:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6140|2024-01-08T19:00:36.658Z -- unknown -- essential%20real%20estate
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6140</link>
      <description>The Essential Real Estate WordPress plugin before 4.4.0 does not prevent users with limited privileges on the site, like subscribers, from momentarily uploading malicious PHP files disguised as ZIP archives, which may lead to remote code execution.</description>
      <guid isPermaLink="false">CVE-2023-6140|2024-01-08T19:00:36.658Z</guid>
      <pubDate>Mon, 08 Jan 2024 19:00:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6005|2024-02-05T21:23:04.443Z -- unknown -- eventon
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6005</link>
      <description>The EventON WordPress plugin before 4.5.5, EventON WordPress plugin before 2.2.7 does not sanitize and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-6005|2024-02-05T21:23:04.443Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:57:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6290|2024-01-22T19:14:26.723Z -- unknown -- seopress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6290</link>
      <description>The SEOPress WordPress plugin before 7.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2023-6290|2024-01-22T19:14:26.723Z</guid>
      <pubDate>Mon, 22 Jan 2024 19:14:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6592|2024-02-05T21:23:08.145Z -- unknown -- fastdup
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6592</link>
      <description>The FastDup WordPress plugin before 2.2 does not prevent directory listing in sensitive directories containing export files.</description>
      <guid isPermaLink="false">CVE-2023-6592|2024-02-05T21:23:08.145Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:57:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6750|2024-01-08T19:00:37.762Z -- unknown -- clone
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6750</link>
      <description>The Clone WordPress plugin before 2.4.3 uses buffer files to store in-progress backup informations, which is stored at a publicly accessible, statically defined file path.</description>
      <guid isPermaLink="false">CVE-2023-6750|2024-01-08T19:00:37.762Z</guid>
      <pubDate>Mon, 08 Jan 2024 19:00:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6029|2024-01-15T15:10:39.546Z -- unknown -- eazydocs
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6029</link>
      <description>The EazyDocs WordPress plugin before 2.3.6 does not have authorization and CSRF checks when handling documents and does not ensure that they are documents from the plugin, allowing unauthenticated users to delete arbitrary posts, as well as add and delete documents/sections.</description>
      <guid isPermaLink="false">CVE-2023-6029|2024-01-15T15:10:39.546Z</guid>
      <pubDate>Mon, 15 Jan 2024 15:10:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6584|2024-02-27T08:30:26.628Z -- unknown -- wp%20jobsearch
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6584</link>
      <description>The WP JobSearch WordPress plugin before 2.3.4 does not prevent attackers from logging-in as any users with the only knowledge of that user's email address.</description>
      <guid isPermaLink="false">CVE-2023-6584|2024-02-27T08:30:26.628Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6585|2024-02-27T08:30:25.818Z -- unknown -- wp%20jobsearch
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6585</link>
      <description>The WP JobSearch WordPress plugin before 2.3.4 does not validate files to be uploaded, which could allow unauthenticated attackers to upload arbitrary files such as PHP on the server</description>
      <guid isPermaLink="false">CVE-2023-6585|2024-02-27T08:30:25.818Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6946|2024-01-29T14:44:22.240Z -- unknown -- autotitle%20for%20wordpress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6946</link>
      <description>The Autotitle for WordPress plugin through 1.0.3 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2023-6946|2024-01-29T14:44:22.240Z</guid>
      <pubDate>Mon, 29 Jan 2024 14:44:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6383|2024-01-08T19:00:34.142Z -- unknown -- debug%20log%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6383</link>
      <description>The Debug Log Manager WordPress plugin before 2.3.0 contains a Directory listing vulnerability was discovered, which allows you to download the debug log without authorization and gain access to sensitive data</description>
      <guid isPermaLink="false">CVE-2023-6383|2024-01-08T19:00:34.142Z</guid>
      <pubDate>Mon, 08 Jan 2024 19:00:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6141|2024-01-08T19:00:35.602Z -- unknown -- essential%20real%20estate
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6141</link>
      <description>The Essential Real Estate WordPress plugin before 4.4.0 does not apply proper capability checks on its AJAX actions, which among other things, allow attackers with a subscriber account to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2023-6141|2024-01-08T19:00:35.602Z</guid>
      <pubDate>Mon, 08 Jan 2024 19:00:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6268|2023-12-26T18:33:04.704Z -- unknown -- json%20content%20importer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6268</link>
      <description>The JSON Content Importer WordPress plugin before 1.5.4 does not sanitise and escape the tab parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-6268|2023-12-26T18:33:04.704Z</guid>
      <pubDate>Tue, 26 Dec 2023 18:33:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6161|2024-01-08T19:00:27.990Z -- unknown -- wp%20crowdfunding
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6161</link>
      <description>The WP Crowdfunding WordPress plugin before 2.1.9 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-6161|2024-01-08T19:00:27.990Z</guid>
      <pubDate>Mon, 08 Jan 2024 19:00:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6065|2023-12-18T20:07:56.766Z -- unknown -- quttera%20web%20malware%20scanner
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6065</link>
      <description>The Quttera Web Malware Scanner WordPress plugin before 3.4.2.1 doesn't restrict access to detailed scan logs, which allows a malicious actor to discover local paths and portions of the site's code</description>
      <guid isPermaLink="false">CVE-2023-6065|2023-12-18T20:07:56.766Z</guid>
      <pubDate>Mon, 18 Dec 2023 20:07:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6272|2023-12-18T20:07:55.945Z -- unknown -- tml-2fa
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6272</link>
      <description>The Theme My Login 2FA WordPress plugin before 1.2 does not rate limit 2FA validation attempts, which may allow an attacker to brute-force all possibilities, which shouldn't be too long, as the 2FA codes are 6 digits.</description>
      <guid isPermaLink="false">CVE-2023-6272|2023-12-18T20:07:55.945Z</guid>
      <pubDate>Mon, 18 Dec 2023 20:07:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6049|2024-01-15T15:10:39.151Z -- unknown -- estatik%20real%20estate%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6049</link>
      <description>The Estatik Real Estate Plugin WordPress plugin before 4.1.1 unserializes user input via some of its cookies, which could allow unauthenticated users to perform PHP Object Injection when a suitable gadget chain is present on the blog</description>
      <guid isPermaLink="false">CVE-2023-6049|2024-01-15T15:10:39.151Z</guid>
      <pubDate>Mon, 15 Jan 2024 15:10:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6845|2024-01-08T19:00:38.284Z -- unknown -- commenttweets
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6845</link>
      <description>The CommentTweets WordPress plugin through 0.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2023-6845|2024-01-08T19:00:38.284Z</guid>
      <pubDate>Mon, 08 Jan 2024 19:00:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6384|2024-01-22T19:14:24.990Z -- unknown -- wp%20user%20profile%20avatar
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6384</link>
      <description>The WP User Profile Avatar WordPress plugin before 1.0.1 does not properly check for authorisation, allowing authors to delete and update arbitrary avatar</description>
      <guid isPermaLink="false">CVE-2023-6384|2024-01-22T19:14:24.990Z</guid>
      <pubDate>Mon, 22 Jan 2024 19:14:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6941|2024-01-15T15:10:38.764Z -- unknown -- keap%20official%20opt-in%20forms
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6941</link>
      <description>The Keap Official Opt-in Forms WordPress plugin through 1.0.11 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example, in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-6941|2024-01-15T15:10:38.764Z</guid>
      <pubDate>Mon, 15 Jan 2024 15:10:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6042|2024-01-08T19:00:28.796Z -- unknown -- getwid
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6042</link>
      <description>Any unauthenticated user may send e-mail from the site with any title or content to the admin</description>
      <guid isPermaLink="false">CVE-2023-6042|2024-01-08T19:00:28.796Z</guid>
      <pubDate>Mon, 08 Jan 2024 19:00:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6279|2024-01-29T14:44:19.154Z -- unknown -- woostify%20sites%20library
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6279</link>
      <description>The Woostify Sites Library WordPress plugin before 1.4.8 does not have authorisation in an AJAX action, allowing any authenticated users, such as subscriber to update arbitrary blog options and set them to 'activated' which could lead to DoS when using a specific option name</description>
      <guid isPermaLink="false">CVE-2023-6279|2024-01-29T14:44:19.154Z</guid>
      <pubDate>Mon, 29 Jan 2024 14:44:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6081|2024-02-12T16:07:30.513Z -- unknown -- chartjs
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6081</link>
      <description>The chartjs WordPress plugin through 2023.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-6081|2024-02-12T16:07:30.513Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:07:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6633|2024-01-29T14:44:17.056Z -- unknown -- site%20notes
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6633</link>
      <description>The Site Notes WordPress plugin through 2.0.0 does not have CSRF checks in some of its functionalities, which could allow attackers to make logged in users perform unwanted actions, such as deleting administration notes, via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2023-6633|2024-01-29T14:44:17.056Z</guid>
      <pubDate>Mon, 29 Jan 2024 14:44:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6222|2023-12-18T20:07:54.232Z -- unknown -- quttera%20web%20malware%20scanner
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6222</link>
      <description>IThe Quttera Web Malware Scanner WordPress plugin before 3.4.2.1 does not validate user input used in a path, which could allow users with an admin role to perform path traversal attacks</description>
      <guid isPermaLink="false">CVE-2023-6222|2023-12-18T20:07:54.232Z</guid>
      <pubDate>Mon, 18 Dec 2023 20:07:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6625|2024-01-22T19:14:24.183Z -- unknown -- product%20enquiry%20for%20woocommerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6625</link>
      <description>The Product Enquiry for WooCommerce WordPress plugin before 3.1 does not have a CSRF check in place when deleting inquiries, which could allow attackers to make a logged in admin delete them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-6625|2024-01-22T19:14:24.183Z</guid>
      <pubDate>Mon, 22 Jan 2024 19:14:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6824|2024-02-05T21:23:12.667Z -- unknown -- wp%20customer%20area
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6824</link>
      <description>The WP Customer Area WordPress plugin before 8.2.1 does not properly validates user capabilities in some of its AJAX actions, allowing any users to retrieve other user's account address.</description>
      <guid isPermaLink="false">CVE-2023-6824|2024-02-05T21:23:12.667Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:57:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6035|2023-12-11T19:22:37.842Z -- unknown -- eazydocs
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6035</link>
      <description>The EazyDocs WordPress plugin before 2.3.4 does not properly sanitize and escape "data" parameter before using it in an SQL statement via an AJAX action, which could allow any authenticated users, such as subscribers, to perform SQL Injection attacks.</description>
      <guid isPermaLink="false">CVE-2023-6035|2023-12-11T19:22:37.842Z</guid>
      <pubDate>Mon, 11 Dec 2023 19:22:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6166|2023-12-26T18:33:02.302Z -- unknown -- quiz%20maker
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6166</link>
      <description>The Quiz Maker WordPress plugin before 6.4.9.5 does not escape generated URLs before outputting them in attributes, leading to Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2023-6166|2023-12-26T18:33:02.302Z</guid>
      <pubDate>Tue, 26 Dec 2023 18:33:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6063|2023-12-04T21:29:41.536Z -- unknown -- wp%20fastest%20cache
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6063</link>
      <description>The WP Fastest Cache WordPress plugin before 1.2.2 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by unauthenticated users.</description>
      <guid isPermaLink="false">CVE-2023-6063|2023-12-04T21:29:41.536Z</guid>
      <pubDate>Mon, 04 Dec 2023 21:29:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6389|2024-01-29T14:44:16.273Z -- unknown -- wordpress%20toolbar
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6389</link>
      <description>The WordPress Toolbar WordPress plugin through 2.2.6 redirects to any URL via the "wptbto" parameter. This makes it possible for unauthenticated attackers to redirect users to potentially malicious sites if they can successfully trick them into performing an action.</description>
      <guid isPermaLink="false">CVE-2023-6389|2024-01-29T14:44:16.273Z</guid>
      <pubDate>Mon, 29 Jan 2024 14:44:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6741|2024-02-05T21:23:09.079Z -- unknown -- wp%20customer%20area
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6741</link>
      <description>The WP Customer Area WordPress plugin before 8.2.1 does not properly validate users capabilities in some of its AJAX actions, allowing malicious users to edit other users' account address.</description>
      <guid isPermaLink="false">CVE-2023-6741|2024-02-05T21:23:09.079Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:56:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6203|2023-12-18T20:07:53.415Z -- unknown -- the%20events%20calendar
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6203</link>
      <description>The Events Calendar WordPress plugin before 6.2.8.1 discloses the content of password protected posts to unauthenticated users via a crafted request</description>
      <guid isPermaLink="false">CVE-2023-6203|2023-12-18T20:07:53.415Z</guid>
      <pubDate>Mon, 18 Dec 2023 20:07:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6501|2024-06-04T17:16:53.985Z -- unknown -- splashscreen
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6501</link>
      <description>The Splashscreen WordPress plugin through 0.20 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-6501|2024-06-04T17:16:53.985Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6444|2024-03-11T18:08:55.792Z -- unknown -- seriously%20simple%20podcasting
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6444</link>
      <description>The Seriously Simple Podcasting WordPress plugin before 3.0.0 discloses the Podcast owner's email address (which by default is the admin email address) via an unauthenticated crafted request.</description>
      <guid isPermaLink="false">CVE-2023-6444|2024-03-11T18:08:55.792Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6278|2024-01-29T14:44:14.702Z -- unknown -- biteship%3A%20plugin%20ongkos%20kirim%20kurir%20instant%2C%20reguler%2C%20kargo
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6278</link>
      <description>The Biteship: Plugin Ongkos Kirim Kurir Instant, Reguler, Kargo WordPress plugin before 2.2.25 does not sanitise and escape the biteship_error and biteship_message parameters before outputting them back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-6278|2024-01-29T14:44:14.702Z</guid>
      <pubDate>Mon, 29 Jan 2024 14:44:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-6385|2024-04-10T05:00:02.214Z -- unknown -- wordpress%20ping%20optimizer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-6385</link>
      <description>The WordPress Ping Optimizer WordPress plugin through 2.35.1.3.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as clearing logs.</description>
      <guid isPermaLink="false">CVE-2023-6385|2024-04-10T05:00:02.214Z</guid>
      <pubDate>Wed, 10 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2605|2023-06-27T13:17:26.709Z -- unknown -- wpbrutalai
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2605</link>
      <description>The wpbrutalai WordPress plugin before 2.0.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against a logged in high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-2605|2023-06-27T13:17:26.709Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2701|2023-07-17T13:30:00.715Z -- unknown -- gravityforms
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2701</link>
      <description>The Gravity Forms WordPress plugin before 2.7.5 does not escape generated URLs before outputting them in attributes, leading to Reflected Cross-Site Scripting which could be used against high-privileged users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-2701|2023-07-17T13:30:00.715Z</guid>
      <pubDate>Mon, 17 Jul 2023 13:30:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2812|2023-06-19T10:52:55.173Z -- unknown -- ultimate%20dashboard
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2812</link>
      <description>The Ultimate Dashboard WordPress plugin before 3.7.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-2812|2023-06-19T10:52:55.173Z</guid>
      <pubDate>Mon, 19 Jun 2023 10:52:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2111|2023-05-30T07:49:22.658Z -- unknown -- fast%20%26%20effective%20popups%20%26%20lead-generation%20for%20wordpress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2111</link>
      <description>The Fast &amp; Effective Popups &amp; Lead-Generation for WordPress plugin before 2.1.4 concatenates user input into an SQL query without escaping it first in the plugin's report API endpoint, which could allow administrators in multi-site configuration to leak sensitive information from the site's database.</description>
      <guid isPermaLink="false">CVE-2023-2111|2023-05-30T07:49:22.658Z</guid>
      <pubDate>Tue, 30 May 2023 07:49:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2795|2023-06-27T13:17:25.903Z -- unknown -- codecolorer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2795</link>
      <description>The CodeColorer WordPress plugin before 0.10.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-2795|2023-06-27T13:17:25.903Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2296|2023-05-30T07:49:21.849Z -- unknown -- loginizer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2296</link>
      <description>The Loginizer WordPress plugin before 1.7.9 does not escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-2296|2023-05-30T07:49:21.849Z</guid>
      <pubDate>Tue, 30 May 2023 07:49:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2023|2023-05-30T07:49:21.025Z -- unknown -- custom%20404%20pro
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2023</link>
      <description>The Custom 404 Pro WordPress plugin before 3.7.3 does not escape some URLs before outputting them in attributes, leading to Reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2023-2023|2023-05-30T07:49:21.025Z</guid>
      <pubDate>Tue, 30 May 2023 07:49:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2326|2023-06-27T13:17:25.086Z -- unknown -- gravity%20forms%20google%20sheet%20connector
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2326</link>
      <description>The Gravity Forms Google Sheet Connector WordPress plugin before 1.3.5, gsheetconnector-gravityforms-pro WordPress plugin through 1.3.5 does not have CSRF check when updating its Access Code, which could allow attackers to make logged in admin change the access code to an arbitrary one via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-2326|2023-06-27T13:17:25.086Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2330|2023-08-16T07:46:39.924Z -- unknown -- caldera%20forms%20google%20sheets%20connector
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2330</link>
      <description>The Caldera Forms Google Sheets Connector WordPress plugin before 1.3 does not have CSRF check when updating its Access Code, which could allow attackers to make logged in admin change the access code to an arbitrary one via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-2330|2023-08-16T07:46:39.924Z</guid>
      <pubDate>Mon, 17 Jul 2023 13:29:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2223|2023-05-30T07:49:20.226Z -- unknown -- login%20rebuilder
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2223</link>
      <description>The Login rebuilder WordPress plugin before 2.8.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-2223|2023-05-30T07:49:20.226Z</guid>
      <pubDate>Tue, 30 May 2023 07:49:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2624|2023-06-27T13:17:23.450Z -- unknown -- kivicare
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2624</link>
      <description>The KiviCare WordPress plugin before 3.2.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as administrator</description>
      <guid isPermaLink="false">CVE-2023-2624|2023-06-27T13:17:23.450Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2761|2023-07-24T10:20:26.121Z -- unknown -- user%20activity%20log
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2761</link>
      <description>The User Activity Log WordPress plugin before 1.6.3 does not properly sanitise and escape the `txtsearch` parameter before using it in a SQL statement in some admin pages, leading to a SQL injection exploitable by high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-2761|2023-07-24T10:20:26.121Z</guid>
      <pubDate>Mon, 24 Jul 2023 10:20:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2472|2023-06-05T13:39:02.869Z -- unknown -- newsletter%2C%20smtp%2C%20email%20marketing%20and%20subscribe%20forms%20by%20sendinblue
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2472</link>
      <description>The Newsletter, SMTP, Email marketing and Subscribe forms by Sendinblue WordPress plugin before 3.1.61 does not sanitise and escape a parameter before outputting it back in the admin dashboard when the WPML plugin is also active and configured, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-2472|2023-06-05T13:39:02.869Z</guid>
      <pubDate>Mon, 05 Jun 2023 13:39:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2805|2023-06-19T10:52:54.332Z -- unknown -- supportcandy
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2805</link>
      <description>The SupportCandy WordPress plugin before 3.1.7 does not properly sanitise and escape the agents[] parameter in the set_add_agent_leaves AJAX function before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-2805|2023-06-19T10:52:54.332Z</guid>
      <pubDate>Mon, 19 Jun 2023 10:52:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2628|2023-06-27T13:17:22.624Z -- unknown -- kivicare
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2628</link>
      <description>The KiviCare WordPress plugin before 3.2.1 does not have CSRF checks (either flawed or missing completely) in various AJAX actions, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks. This includes, but is not limited to: Delete arbitrary appointments/medical records/etc, create/update various users (patients, doctors etc)</description>
      <guid isPermaLink="false">CVE-2023-2628|2023-06-27T13:17:22.624Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2813|2023-09-04T23:14:28.981Z -- unknown -- aapna
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2813</link>
      <description>All of the above Aapna WordPress theme through 1.3, Anand WordPress theme through 1.2, Anfaust WordPress theme through 1.1, Arendelle WordPress theme before 1.1.13, Atlast Business WordPress theme through 1.5.8.5, Bazaar Lite WordPress theme before 1.8.6, Brain Power WordPress theme through 1.2, BunnyPressLite WordPress theme before 2.1, Cafe Bistro WordPress theme before 1.1.4, College WordPress theme before 1.5.1, Connections Reloaded WordPress theme through 3.1, Counterpoint WordPress theme through 1.8.1, Digitally WordPress theme through 1.0.8, Directory WordPress theme before 3.0.2, Drop WordPress theme before 1.22, Everse WordPress theme before 1.2.4, Fashionable Store WordPress theme through 1.3.4, Fullbase WordPress theme before 1.2.1, Ilex WordPress theme before 1.4.2, Js O3 Lite WordPress theme through 1.5.8.2, Js Paper WordPress theme through 2.5.7, Kata WordPress theme before 1.2.9, Kata App WordPress theme through 1.0.5, Kata Business WordPress theme through 1.0.2, Looki Lite WordPress theme before 1.3.0, moseter WordPress theme through 1.3.1, Nokke WordPress theme before 1.2.4, Nothing Personal WordPress theme through 1.0.7, Offset Writing WordPress theme through 1.2, Opor Ayam WordPress theme through 18, Pinzolo WordPress theme before 1.2.10, Plato WordPress theme before 1.1.9, Polka Dots WordPress theme through 1.2, Purity Of Soul WordPress theme through 1.9, Restaurant PT WordPress theme before 1.1.3, Saul WordPress theme before 1.1.0, Sean Lite WordPress theme before 1.4.6, Tantyyellow WordPress theme through 1.0.0.5, TIJAJI WordPress theme through 1.43, Tiki Time WordPress theme through 1.3, Tuaug4 WordPress theme through 1.4, Tydskrif WordPress theme through 1.1.3, UltraLight WordPress theme through 1.2, Venice Lite WordPress theme before 1.5.5, Viala WordPress theme through 1.3.1, viburno WordPress theme before 1.3.2, Wedding Bride WordPress theme before 1.0.2, Wlow WordPress theme before 1.2.7 suffer from the same issue about the search box reflecting the results causing XSS which allows an unauthenticated attacker to exploit against users if they click a malicious link.</description>
      <guid isPermaLink="false">CVE-2023-2813|2023-09-04T23:14:28.981Z</guid>
      <pubDate>Mon, 04 Sep 2023 11:27:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2995|2023-10-23T08:25:20.274Z -- unknown -- leyka
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2995</link>
      <description>The Leyka WordPress plugin before 3.30.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-2995|2023-10-23T08:25:20.274Z</guid>
      <pubDate>Tue, 19 Sep 2023 19:37:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2254|2023-08-16T11:03:29.573Z -- unknown -- ko-fi%20button
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2254</link>
      <description>The Ko-fi Button WordPress plugin before 1.3.3 does not properly some of its settings, which could allow high-privilege users to perform Stored Cross-Site Scripting (XSS) attacks even when the unfiltered_html capability is disallowed (for example in multisite setup), and we consider it a low risk.</description>
      <guid isPermaLink="false">CVE-2023-2254|2023-08-16T11:03:29.573Z</guid>
      <pubDate>Wed, 16 Aug 2023 11:03:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2571|2023-06-05T13:39:02.507Z -- unknown -- quiz%20maker
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2571</link>
      <description>The Quiz Maker WordPress plugin before 6.4.2.7 does not escape some parameters before outputting them back in attributes, leading to Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-2571|2023-06-05T13:39:02.507Z</guid>
      <pubDate>Mon, 05 Jun 2023 13:39:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2967|2023-07-10T13:05:51.211Z -- unknown -- tinymce%20custom%20styles
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2967</link>
      <description>The TinyMCE Custom Styles WordPress plugin before 1.1.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-2967|2023-07-10T13:05:51.211Z</guid>
      <pubDate>Mon, 10 Jul 2023 12:41:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2398|2023-06-12T17:28:22.252Z -- unknown -- icegram%20engage
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2398</link>
      <description>The Icegram Engage WordPress plugin before 3.1.12 does not escape a parameter before outputting it back in an attribute, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-2398|2023-06-12T17:28:22.252Z</guid>
      <pubDate>Mon, 12 Jun 2023 17:28:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2635|2023-07-10T13:05:50.645Z -- unknown -- call%20now%20accessibility%20button
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2635</link>
      <description>The Call Now Accessibility Button WordPress plugin before 1.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-2635|2023-07-10T13:05:50.645Z</guid>
      <pubDate>Mon, 10 Jul 2023 12:41:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2320|2023-07-05T10:47:54.273Z -- unknown -- cf7%20google%20sheets%20connector
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2320</link>
      <description>The CF7 Google Sheets Connector WordPress plugin before 5.0.2, cf7-google-sheets-connector-pro WordPress plugin through 5.0.2 does not escape a parameter before outputting it back in an attribute, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-2320|2023-07-05T10:47:54.273Z</guid>
      <pubDate>Tue, 04 Jul 2023 07:23:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2009|2023-05-15T12:15:42.265Z -- unknown -- pretty%20url
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2009</link>
      <description>Plugin does not sanitize and escape the URL field in the Pretty Url WordPress plugin through 1.5.4 settings, which could allow high-privilege users to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-2009|2023-05-15T12:15:42.265Z</guid>
      <pubDate>Mon, 15 May 2023 12:15:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2623|2023-06-27T13:17:20.907Z -- unknown -- kivicare
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2623</link>
      <description>The KiviCare WordPress plugin before 3.2.1 does not restrict the information returned in a response and returns all user data, allowing low privilege users such as subscriber to retrieve sensitive information such as the user email and hashed password of other users</description>
      <guid isPermaLink="false">CVE-2023-2623|2023-06-27T13:17:20.907Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2224|2023-06-05T13:39:02.151Z -- unknown -- seo%20by%2010web
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2224</link>
      <description>The SEO by 10Web WordPress plugin before 1.2.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-2224|2023-06-05T13:39:02.151Z</guid>
      <pubDate>Mon, 05 Jun 2023 13:39:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2592|2023-06-27T13:17:20.071Z -- unknown -- formcraft
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2592</link>
      <description>The FormCraft WordPress plugin before 3.9.7 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-2592|2023-06-27T13:17:20.071Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2068|2023-06-27T13:17:19.200Z -- unknown -- file-manager-advanced-shortcode
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2068</link>
      <description>The File Manager Advanced Shortcode WordPress plugin through 2.3.2 does not adequately prevent uploading files with disallowed MIME types when using the shortcode. This leads to RCE in cases where the allowed MIME type list does not include PHP files. In the worst case, this is available to unauthenticated users.</description>
      <guid isPermaLink="false">CVE-2023-2068|2023-06-27T13:17:19.200Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2711|2023-06-27T13:17:18.296Z -- unknown -- ultimate%20product%20catalog
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2711</link>
      <description>The Ultimate Product Catalog WordPress plugin before 5.2.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-2711|2023-06-27T13:17:18.296Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2654|2023-06-19T10:52:53.455Z -- unknown -- conditional%20menus
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2654</link>
      <description>The Conditional Menus WordPress plugin before 1.2.1 does not escape a parameter before outputting it back in an attribute, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-2654|2023-06-19T10:52:53.455Z</guid>
      <pubDate>Mon, 19 Jun 2023 10:52:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2707|2023-11-27T16:22:05.473Z -- unknown -- gappointments
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2707</link>
      <description>The gAppointments WordPress plugin through 1.9.5.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-2707|2023-11-27T16:22:05.473Z</guid>
      <pubDate>Mon, 27 Nov 2023 16:22:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2029|2023-07-10T12:41:01.067Z -- unknown -- prepost%20seo
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2029</link>
      <description>The PrePost SEO WordPress plugin through 3.0 does not properly sanitize some of its settings, which could allow high-privilege users to perform Stored Cross-Site Scripting (XSS) attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-2029|2023-07-10T12:41:01.067Z</guid>
      <pubDate>Mon, 10 Jul 2023 12:41:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2117|2023-05-30T07:49:17.892Z -- unknown -- image%20optimizer%20by%2010web
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2117</link>
      <description>The Image Optimizer by 10web WordPress plugin before 1.0.27 does not sanitize the dir parameter when handling the get_subdirs ajax action, allowing a high privileged users such as admins to inspect names of files and directories outside of the sites root.</description>
      <guid isPermaLink="false">CVE-2023-2117|2023-05-30T07:49:17.892Z</guid>
      <pubDate>Tue, 30 May 2023 07:49:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2843|2023-08-07T14:31:25.663Z -- unknown -- multiparcels%20shipping%20for%20woocommerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2843</link>
      <description>The MultiParcels Shipping For WooCommerce WordPress plugin before 1.14.15 does not properly sanitize and escape a parameter before using it in an SQL statement, which could allow any authenticated users, such as subscribers, to perform SQL Injection attacks.</description>
      <guid isPermaLink="false">CVE-2023-2843|2023-08-07T14:31:25.663Z</guid>
      <pubDate>Mon, 07 Aug 2023 14:31:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2802|2024-01-16T15:54:03.822Z -- unknown -- ultimate%20addons%20for%20contact%20form%207
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2802</link>
      <description>The Ultimate Addons for Contact Form 7 WordPress plugin before 3.1.29 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-2802|2024-01-16T15:54:03.822Z</guid>
      <pubDate>Mon, 14 Aug 2023 19:10:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2803|2024-01-16T15:54:03.225Z -- unknown -- ultimate%20addons%20for%20contact%20form%207
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2803</link>
      <description>The Ultimate Addons for Contact Form 7 WordPress plugin before 3.1.29 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-2803|2024-01-16T15:54:03.225Z</guid>
      <pubDate>Mon, 14 Aug 2023 19:10:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2287|2023-05-30T07:49:17.119Z -- unknown -- orbit%20fox%20by%20themeisle
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2287</link>
      <description>The Orbit Fox by ThemeIsle WordPress plugin before 2.10.24 does not limit URLs which may be used for the stock photo import feature, allowing the user to specify arbitrary URLs. This leads to a server-side request forgery as the user may force the server to access any URL of their choosing.</description>
      <guid isPermaLink="false">CVE-2023-2287|2023-05-30T07:49:17.119Z</guid>
      <pubDate>Tue, 30 May 2023 07:49:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2842|2023-06-27T13:17:17.414Z -- unknown -- wp%20inventory%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2842</link>
      <description>The WP Inventory Manager WordPress plugin before 2.1.0.14 does not have CSRF checks, which could allow attackers to make logged-in admins delete Inventory Items via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-2842|2023-06-27T13:17:17.414Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2751|2023-06-19T10:52:52.446Z -- unknown -- upload%20resume
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2751</link>
      <description>The Upload Resume WordPress plugin through 1.2.0 does not validate the captcha parameter when uploading a resume via the resume_upload_form shortcode, allowing unauthenticated visitors to upload arbitrary media files to the site.</description>
      <guid isPermaLink="false">CVE-2023-2751|2023-06-19T10:52:52.446Z</guid>
      <pubDate>Mon, 19 Jun 2023 10:52:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2028|2023-07-10T13:05:48.923Z -- unknown -- call%20now%20accessibility%20button
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2028</link>
      <description>The Call Now Accessibility Button WordPress plugin before 1.1 does not properly sanitize some of its settings, which could allow high-privilege users to perform Stored Cross-Site Scripting (XSS) attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-2028|2023-07-10T13:05:48.923Z</guid>
      <pubDate>Mon, 10 Jul 2023 12:40:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2655|2024-01-16T15:55:22.590Z -- unknown -- contact%20form%20by%20wd
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2655</link>
      <description>The Contact Form by WD WordPress plugin through 1.13.23 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-2655|2024-01-16T15:55:22.590Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:55:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2252|2024-01-16T15:55:41.055Z -- unknown -- directorist
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2252</link>
      <description>The Directorist WordPress plugin before 7.5.4 is vulnerable to Local File Inclusion as it does not validate the file parameter when importing CSV files.</description>
      <guid isPermaLink="false">CVE-2023-2252|2024-01-16T15:55:41.055Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:55:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2225|2023-08-16T11:03:25.318Z -- unknown -- seo%20alert
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2225</link>
      <description>The SEO ALert WordPress plugin through 1.59 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-2225|2023-08-16T11:03:25.318Z</guid>
      <pubDate>Wed, 16 Aug 2023 11:03:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2272|2023-08-16T11:03:24.487Z -- unknown -- tiempo.com
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2272</link>
      <description>The Tiempo.com WordPress plugin through 0.1.2 does not sanitise and escape the page parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-2272|2023-08-16T11:03:24.487Z</guid>
      <pubDate>Wed, 16 Aug 2023 11:03:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2337|2023-06-05T13:39:01.309Z -- unknown -- convertkit
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2337</link>
      <description>The ConvertKit WordPress plugin before 2.2.1 does not escape a parameter before outputting it back in an attribute, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-2337|2023-06-05T13:39:01.309Z</guid>
      <pubDate>Mon, 05 Jun 2023 13:39:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2767|2023-06-09T05:33:13.295Z -- unknown -- wordpress%20file%20upload%20pro
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2767</link>
      <description>The WordPress File Upload and WordPress File Upload Pro plugins for WordPress are vulnerable to Stored Cross-Site Scripting via admin settings in versions up to, and including, 4.19.1 due to insufficient input sanitization and output escaping. This makes it possible for authenticated attackers, with administrator-level permissions and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page. This only affects multi-site installations and installations where unfiltered_html has been disabled.</description>
      <guid isPermaLink="false">CVE-2023-2767|2023-06-09T05:33:13.295Z</guid>
      <pubDate>Fri, 09 Jun 2023 05:33:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2634|2023-06-05T13:39:00.960Z -- unknown -- get%20your%20number
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2634</link>
      <description>The Get your number WordPress plugin through 1.1.3 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-2634|2023-06-05T13:39:00.960Z</guid>
      <pubDate>Mon, 05 Jun 2023 13:39:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2321|2023-07-05T10:47:55.626Z -- unknown -- wpforms%20google%20sheet%20connector
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2321</link>
      <description>The WPForms Google Sheet Connector WordPress plugin before 3.4.6, gsheetconnector-wpforms-pro WordPress plugin through 3.4.6 does not escape a parameter before outputting it back in an attribute, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-2321|2023-07-05T10:47:55.626Z</guid>
      <pubDate>Tue, 04 Jul 2023 07:23:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2399|2023-06-19T10:52:51.650Z -- unknown -- qubot
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2399</link>
      <description>The QuBot WordPress plugin before 1.1.6 doesn't filter user input on chat, leading to bad code inserted on it be reflected on the user dashboard.</description>
      <guid isPermaLink="false">CVE-2023-2399|2023-06-19T10:52:51.650Z</guid>
      <pubDate>Mon, 19 Jun 2023 10:52:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2527|2023-07-04T09:31:21.138Z -- unknown -- integration%20for%20contact%20form%207%20and%20zoho%20crm%2C%20bigin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2527</link>
      <description>The Integration for Contact Form 7 and Zoho CRM, Bigin WordPress plugin before 1.2.4 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-2527|2023-07-04T09:31:21.138Z</guid>
      <pubDate>Mon, 19 Jun 2023 10:52:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2032|2023-06-27T13:17:14.009Z -- unknown -- custom%20404%20pro
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2032</link>
      <description>The Custom 404 Pro WordPress plugin before 3.8.1 does not properly sanitize database inputs, leading to multiple SQL Injection vulnerabilities.</description>
      <guid isPermaLink="false">CVE-2023-2032|2023-06-27T13:17:14.009Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2271|2023-08-16T11:03:22.861Z -- unknown -- tiempo.com
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2271</link>
      <description>The Tiempo.com WordPress plugin through 0.1.2 does not have CSRF check when deleting its shortcode, which could allow attackers to make logged in admins delete arbitrary shortcode via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-2271|2023-08-16T11:03:22.861Z</guid>
      <pubDate>Wed, 16 Aug 2023 11:03:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2288|2023-05-30T07:49:15.477Z -- unknown -- otter
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2288</link>
      <description>The Otter WordPress plugin before 2.2.6 does not sanitize some user-controlled file paths before performing file operations on them. This leads to a PHAR deserialization vulnerability on PHP &lt; 8.0 using the phar:// stream wrapper.</description>
      <guid isPermaLink="false">CVE-2023-2288|2023-05-30T07:49:15.477Z</guid>
      <pubDate>Tue, 30 May 2023 07:49:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2709|2023-07-10T13:05:47.790Z -- unknown -- an_gradebook
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2709</link>
      <description>The AN_GradeBook WordPress plugin through 5.0.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-2709|2023-07-10T13:05:47.790Z</guid>
      <pubDate>Mon, 10 Jul 2023 12:40:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2359|2023-06-19T10:52:49.053Z -- unknown -- slider%20revolution
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2359</link>
      <description>The Slider Revolution WordPress plugin through 6.6.12 does not check for valid image files upon import, leading to an arbitrary file upload which may be escalated to Remote Code Execution in some server configurations.</description>
      <guid isPermaLink="false">CVE-2023-2359|2023-06-19T10:52:49.053Z</guid>
      <pubDate>Mon, 19 Jun 2023 10:52:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2123|2023-08-16T11:03:22.025Z -- unknown -- wp%20inventory%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2123</link>
      <description>The WP Inventory Manager WordPress plugin before 2.1.0.13 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2023-2123|2023-08-16T11:03:22.025Z</guid>
      <pubDate>Wed, 16 Aug 2023 11:03:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2877|2023-06-27T13:17:12.873Z -- unknown -- formidable%20forms
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2877</link>
      <description>The Formidable Forms WordPress plugin before 6.3.1 does not adequately authorize the user or validate the plugin URL in its functionality for installing add-ons. This allows a user with a role as low as Subscriber to install and activate arbitrary plugins of arbitrary versions from the WordPress.org plugin repository onto the site, leading to Remote Code Execution.</description>
      <guid isPermaLink="false">CVE-2023-2877|2023-06-27T13:17:12.873Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2705|2023-09-11T19:46:06.500Z -- unknown -- gappointments
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2705</link>
      <description>The gAppointments WordPress plugin before 1.10.0 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against admin</description>
      <guid isPermaLink="false">CVE-2023-2705|2023-09-11T19:46:06.500Z</guid>
      <pubDate>Mon, 11 Sep 2023 19:46:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2713|2023-07-26T09:04:54.034Z -- unknown -- rental%20module
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2713</link>
      <description>Authorization Bypass Through User-Controlled Key vulnerability  in "Rental Module" developed by third-party for Ideasoft's E-commerce Platform allows Authentication Abuse, Authentication Bypass.This issue affects Rental Module: before 23.05.15.

</description>
      <guid isPermaLink="false">CVE-2023-2713|2023-07-26T09:04:54.034Z</guid>
      <pubDate>Sat, 20 May 2023 09:52:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2601|2023-06-27T13:17:12.040Z -- unknown -- wpbrutalai
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2601</link>
      <description>The wpbrutalai WordPress plugin before 2.0.0 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by admin via CSRF.</description>
      <guid isPermaLink="false">CVE-2023-2601|2023-06-27T13:17:12.040Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2744|2023-06-27T13:17:11.163Z -- unknown -- wp%20erp%20%7C%20complete%20hr%20solution%20with%20recruitment%20%26%20job%20listings%20%7C%20woocommerce%20crm%20%26%20accounting
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2744</link>
      <description>The ERP WordPress plugin before 1.12.4 does not properly sanitise and escape the `type` parameter in the `erp/v1/accounting/v1/people` REST API endpoint before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-2744|2023-06-27T13:17:11.163Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2482|2023-06-27T13:17:10.255Z -- unknown -- responsive%20css%20editor
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2482</link>
      <description>The Responsive CSS EDITOR WordPress plugin through 1.0 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high-privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-2482|2023-06-27T13:17:10.255Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2178|2023-06-27T13:17:09.127Z -- unknown -- aajoda%20testimonials
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2178</link>
      <description>The Aajoda Testimonials WordPress plugin before 2.2.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-2178|2023-06-27T13:17:09.127Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2529|2023-07-10T13:05:46.674Z -- unknown -- enable%20svg%20uploads
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2529</link>
      <description>The Enable SVG Uploads WordPress plugin through 2.1.5 does not sanitise uploaded SVG files, which could allow users with a role as low as Author to upload a malicious SVG containing XSS payloads.</description>
      <guid isPermaLink="false">CVE-2023-2529|2023-07-10T13:05:46.674Z</guid>
      <pubDate>Mon, 10 Jul 2023 12:40:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2179|2023-05-15T12:15:35.876Z -- unknown -- woocommerce%20order%20status%20change%20notifier
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2179</link>
      <description>The WooCommerce Order Status Change Notifier WordPress plugin through 1.1.0 does not have authorisation and CSRF when updating status orders via an AJAX action available to any authenticated users, which could allow low privilege users such as subscriber to update arbitrary order status, making them paid without actually paying for them for example</description>
      <guid isPermaLink="false">CVE-2023-2179|2023-05-15T12:15:35.876Z</guid>
      <pubDate>Mon, 15 May 2023 12:15:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2600|2023-06-19T10:52:47.286Z -- unknown -- custom%20base%20terms
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2600</link>
      <description>The Custom Base Terms WordPress plugin before 1.0.3 does not sanitize and escape some of its settings, which could allow high-privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-2600|2023-06-19T10:52:47.286Z</guid>
      <pubDate>Mon, 19 Jun 2023 10:52:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2712|2023-07-26T09:04:37.601Z -- unknown -- rental%20module
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2712</link>
      <description>Unrestricted Upload of File with Dangerous Type vulnerability  in "Rental Module" developed by third-party for Ideasoft's E-commerce Platform allows Command Injection, Using Malicious Files, Upload a Web Shell to a Web Server.This issue affects Rental Module: before 23.05.15.

</description>
      <guid isPermaLink="false">CVE-2023-2712|2023-07-26T09:04:37.601Z</guid>
      <pubDate>Sat, 20 May 2023 09:49:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2568|2023-06-12T17:28:23.093Z -- unknown -- photo%20gallery%20by%20ays
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2568</link>
      <description>The Photo Gallery by Ays WordPress plugin before 5.1.7 does not escape some parameters before outputting it back in attributes, leading to Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-2568|2023-06-12T17:28:23.093Z</guid>
      <pubDate>Mon, 12 Jun 2023 17:28:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2180|2023-05-15T12:15:35.070Z -- unknown -- kiwiz%20invoices%20certification%20%26%20pdf%20system
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2180</link>
      <description>The KIWIZ Invoices Certification &amp; PDF System WordPress plugin through 2.1.3 does not validate the path of files to be downloaded, which could allow unauthenticated attacker to read/downlaod arbitrary files, as well as perform PHAR unserialization (assuming they can upload a file on the server)</description>
      <guid isPermaLink="false">CVE-2023-2180|2023-05-15T12:15:35.070Z</guid>
      <pubDate>Mon, 15 May 2023 12:15:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2495|2023-08-15T14:10:30.890Z -- unknown -- greeklish-permalink
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2495</link>
      <description>The Greeklish-permalink WordPress plugin through 3.3 does not implement correct authorization or nonce checks in the cyrtrans_ajax_old AJAX action, allowing unauthenticated and low-privilege users to trigger the plugin's functionality to change Post slugs either directly or through CSRF.</description>
      <guid isPermaLink="false">CVE-2023-2495|2023-08-15T14:10:30.890Z</guid>
      <pubDate>Mon, 10 Jul 2023 12:40:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2114|2023-05-08T13:58:08.740Z -- unknown -- nex-forms
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2114</link>
      <description>The NEX-Forms WordPress plugin before 8.4 does not properly escape the `table` parameter, which is populated with user input, before concatenating it to an SQL query.</description>
      <guid isPermaLink="false">CVE-2023-2114|2023-05-08T13:58:08.740Z</guid>
      <pubDate>Mon, 08 May 2023 13:58:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2401|2023-06-19T10:52:46.396Z -- unknown -- qubot
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2401</link>
      <description>The QuBot WordPress plugin before 1.1.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-2401|2023-06-19T10:52:46.396Z</guid>
      <pubDate>Mon, 19 Jun 2023 10:52:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2143|2023-07-17T13:29:52.707Z -- unknown -- enable%20svg%2C%20webp%20%26%20ico%20upload
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2143</link>
      <description>The Enable SVG, WebP &amp; ICO Upload WordPress plugin through 1.0.3 does not sanitize SVG file contents, leading to a Cross-Site Scripting vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-2143|2023-07-17T13:29:52.707Z</guid>
      <pubDate>Mon, 17 Jul 2023 13:29:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2010|2023-07-05T10:47:52.992Z -- unknown -- forminator
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2010</link>
      <description>The Forminator WordPress plugin before 1.24.1 does not use an atomic operation to check whether a user has already voted, and then update that information. This leads to a Race Condition that may allow a single user to vote multiple times on a poll.</description>
      <guid isPermaLink="false">CVE-2023-2010|2023-07-05T10:47:52.992Z</guid>
      <pubDate>Tue, 04 Jul 2023 07:23:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2899|2023-06-19T10:52:45.489Z -- unknown -- google%20map%20shortcode
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2899</link>
      <description>The Google Map Shortcode WordPress plugin through 3.1.2 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-2899|2023-06-19T10:52:45.489Z</guid>
      <pubDate>Mon, 19 Jun 2023 10:52:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2964|2023-07-10T13:05:44.376Z -- unknown -- simple%20iframe
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2964</link>
      <description>The Simple Iframe WordPress plugin before 1.2.0 does not properly validate one of its WordPress block attribute's content, which may allow users whose role is at least that of a contributor to conduct Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-2964|2023-07-10T13:05:44.376Z</guid>
      <pubDate>Mon, 10 Jul 2023 12:40:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2572|2023-06-05T13:38:59.749Z -- unknown -- survey%20maker
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2572</link>
      <description>The Survey Maker WordPress plugin before 3.4.7 does not escape some parameters before outputting them back in attributes, leading to Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-2572|2023-06-05T13:38:59.749Z</guid>
      <pubDate>Mon, 05 Jun 2023 13:38:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2122|2023-08-16T11:03:20.332Z -- unknown -- image%20optimizer%20by%2010web
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2122</link>
      <description>The Image Optimizer by 10web WordPress plugin before 1.0.27 does not sanitise and escape the iowd_tabs_active parameter before rendering it in the plugin admin panel, leading to a reflected Cross-Site Scripting vulnerability, allowing an attacker to trick a logged in admin to execute arbitrary javascript by clicking a link.</description>
      <guid isPermaLink="false">CVE-2023-2122|2023-08-16T11:03:20.332Z</guid>
      <pubDate>Wed, 16 Aug 2023 11:03:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2026|2023-07-10T13:05:43.819Z -- unknown -- image%20protector
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2026</link>
      <description>The Image Protector WordPress plugin through 1.1 does not properly sanitize some of its settings, which could allow high-privilege users to perform Stored Cross-Site Scripting (XSS) attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-2026|2023-07-10T13:05:43.819Z</guid>
      <pubDate>Mon, 10 Jul 2023 12:40:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2636|2023-07-17T13:29:51.763Z -- unknown -- an_gradebook
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2636</link>
      <description>The AN_GradeBook WordPress plugin through 5.0.1 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as subscriber</description>
      <guid isPermaLink="false">CVE-2023-2636|2023-07-17T13:29:51.763Z</guid>
      <pubDate>Mon, 17 Jul 2023 13:29:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2362|2023-06-12T17:28:22.661Z -- unknown -- float%20menu
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2362</link>
      <description>The Float menu WordPress plugin before 5.0.2, Bubble Menu WordPress plugin before 3.0.4, Button Generator WordPress plugin before 2.3.5, Calculator Builder WordPress plugin before 1.5.1, Counter Box WordPress plugin before 1.2.2, Floating Button WordPress plugin before 5.3.1, Herd Effects WordPress plugin before 5.2.2, Popup Box WordPress plugin before 2.2.2, Side Menu Lite WordPress plugin before 4.0.2, Sticky Buttons WordPress plugin before 3.1.1, Wow Skype Buttons WordPress plugin before 4.0.2, WP Coder WordPress plugin before 2.5.6 do not escape the page parameter before outputting it back in an attribute, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-2362|2023-06-12T17:28:22.661Z</guid>
      <pubDate>Mon, 12 Jun 2023 17:28:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2113|2023-05-30T07:49:13.137Z -- unknown -- autoptimize
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2113</link>
      <description>The Autoptimize WordPress plugin before 3.1.7 does not sanitise and escape the settings imported from a previous export, allowing high privileged users (such as an administrator) to inject arbitrary javascript into the admin panel, even when the unfiltered_html capability is disabled, such as in a multisite setup.</description>
      <guid isPermaLink="false">CVE-2023-2113|2023-05-30T07:49:13.137Z</guid>
      <pubDate>Tue, 30 May 2023 07:49:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2492|2023-06-19T10:52:44.610Z -- unknown -- querywall%3A%20plug%27n%20play%20firewall
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2492</link>
      <description>The QueryWall: Plug'n Play Firewall WordPress plugin through 1.1.1 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-2492|2023-06-19T10:52:44.610Z</guid>
      <pubDate>Mon, 19 Jun 2023 10:52:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2580|2023-06-27T13:17:08.326Z -- unknown -- ai%20engine%3A%20chatgpt%20chatbot%2C%20content%20generator%2C%20gpt%203%20%26%204%2C%20ultra-customizable
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2580</link>
      <description>The AI Engine WordPress plugin before 1.6.83 does not sanitize and escape some of its settings, which could allow high-privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example, in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-2580|2023-06-27T13:17:08.326Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2996|2023-06-27T13:17:07.479Z -- unknown -- jetpack
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2996</link>
      <description>The Jetpack WordPress plugin before 12.1.1 does not validate uploaded files, allowing users with author roles or above to manipulate existing files on the site, deleting arbitrary files, and in rare cases achieve Remote Code Execution via phar deserialization.</description>
      <guid isPermaLink="false">CVE-2023-2996|2023-06-27T13:17:07.479Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2579|2023-07-17T13:29:49.306Z -- unknown -- inventorypress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2579</link>
      <description>The InventoryPress WordPress plugin through 1.7 does not sanitise and escape some of its settings, which could allow users with the role of author and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2023-2579|2023-07-17T13:29:49.306Z</guid>
      <pubDate>Mon, 17 Jul 2023 13:29:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2742|2023-06-19T10:52:43.675Z -- unknown -- ai%20chatbot
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2742</link>
      <description>The AI ChatBot WordPress plugin before 4.5.5 does not sanitize and escape its settings, allowing high-privilege users such as admin to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2023-2742|2023-06-19T10:52:43.675Z</guid>
      <pubDate>Mon, 19 Jun 2023 10:52:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2627|2023-06-27T13:17:06.660Z -- unknown -- kivicare
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2627</link>
      <description>The KiviCare WordPress plugin before 3.2.1 does not have proper CSRF and authorisation checks in various AJAX actions, allowing any authenticated users, such as subscriber to call them. Attacks include but are not limited to: Add arbitrary Clinic Admin/Doctors/etc and update plugin's settings</description>
      <guid isPermaLink="false">CVE-2023-2627|2023-06-27T13:17:06.660Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2518|2023-06-13T07:29:13.834Z -- unknown -- easy%20forms%20for%20mailchimp
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2518</link>
      <description>The Easy Forms for Mailchimp WordPress plugin before 6.8.9 does not sanitise and escape a parameter before outputting it back in the page when the debug option is enabled, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-2518|2023-06-13T07:29:13.834Z</guid>
      <pubDate>Tue, 30 May 2023 07:49:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2324|2023-07-05T10:47:56.883Z -- unknown -- elementor%20forms%20google%20sheet%20connector
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2324</link>
      <description>The Elementor Forms Google Sheet Connector WordPress plugin before 1.0.7, gsheetconnector-for-elementor-forms-pro WordPress plugin through 1.0.7 does not escape some parameters before outputting them back in attributes, leading to Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-2324|2023-07-05T10:47:56.883Z</guid>
      <pubDate>Tue, 04 Jul 2023 07:23:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2719|2023-06-19T10:52:42.822Z -- unknown -- supportcandy
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2719</link>
      <description>The SupportCandy WordPress plugin before 3.1.7 does not properly sanitise and escape the `id` parameter for an Agent in the REST API before using it in an SQL statement, leading to an SQL Injection exploitable by users with a role as low as Subscriber.</description>
      <guid isPermaLink="false">CVE-2023-2719|2023-06-19T10:52:42.822Z</guid>
      <pubDate>Mon, 19 Jun 2023 10:52:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2488|2023-06-05T13:38:59.394Z -- unknown -- stop%20spammers%20security%20%7C%20block%20spam%20users%2C%20comments%2C%20forms
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2488</link>
      <description>The Stop Spammers Security | Block Spam Users, Comments, Forms WordPress plugin before 2023 does not sanitise and escape various parameters before outputting them back in admin dashboard pages, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-2488|2023-06-05T13:38:59.394Z</guid>
      <pubDate>Mon, 05 Jun 2023 13:38:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2489|2023-06-05T13:38:59.037Z -- unknown -- stop%20spammers%20security%20%7C%20block%20spam%20users%2C%20comments%2C%20forms
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2489</link>
      <description>The Stop Spammers Security | Block Spam Users, Comments, Forms WordPress plugin before 2023 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-2489|2023-06-05T13:38:59.037Z</guid>
      <pubDate>Mon, 05 Jun 2023 13:38:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2718|2023-10-11T08:42:17.935Z -- unknown -- contact%20form%20email
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2718</link>
      <description>The Contact Form Email WordPress plugin before 1.3.38 does not escape submitted values before displaying them in the HTML, leading to a Stored XSS vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-2718|2023-10-11T08:42:17.935Z</guid>
      <pubDate>Mon, 12 Jun 2023 17:28:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2309|2023-07-24T10:20:23.546Z -- unknown -- wpforo%20forum
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2309</link>
      <description>The wpForo Forum WordPress plugin before 2.1.9 does not escape some request parameters while in debug mode, leading to a Reflected Cross-Site Scripting vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-2309|2023-07-24T10:20:23.546Z</guid>
      <pubDate>Mon, 24 Jul 2023 10:20:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2470|2023-05-30T07:49:09.868Z -- unknown -- add%20to%20feedly
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2470</link>
      <description>The Add to Feedly WordPress plugin through 1.2.11 does not sanitize and escape its settings, allowing high-privilege users such as admin to perform Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed.</description>
      <guid isPermaLink="false">CVE-2023-2470|2023-05-30T07:49:09.868Z</guid>
      <pubDate>Tue, 30 May 2023 07:49:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2688|2023-06-09T05:33:26.513Z -- unknown -- wordpress%20file%20upload%20pro
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2688</link>
      <description>The WordPress File Upload and WordPress File Upload Pro plugins for WordPress are vulnerable to Path Traversal in versions up to, and including, 4.19.1 via the vulnerable parameter wfu_newpath. This allows administrator-level attackers to move files uploaded with the plugin (located in wp-content/uploads by default) outside of the web root.</description>
      <guid isPermaLink="false">CVE-2023-2688|2023-06-09T05:33:26.513Z</guid>
      <pubDate>Fri, 09 Jun 2023 05:33:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2333|2023-07-05T10:47:58.134Z -- unknown -- ninja%20forms%20google%20sheet%20connector
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2333</link>
      <description>The Ninja Forms Google Sheet Connector WordPress plugin before 1.2.7, gsheetconnector-ninja-forms-pro WordPress plugin through 1.2.7 does not escape a parameter before outputting it back in an attribute, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-2333|2023-07-05T10:47:58.134Z</guid>
      <pubDate>Tue, 04 Jul 2023 07:23:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2221|2023-06-19T10:52:42.024Z -- unknown -- wp%20custom%20cursors%20%7C%20wordpress%20cursor%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2221</link>
      <description>The WP Custom Cursors WordPress plugin before 3.2 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by users with a role as low as Admin.</description>
      <guid isPermaLink="false">CVE-2023-2221|2023-06-19T10:52:42.024Z</guid>
      <pubDate>Mon, 19 Jun 2023 10:52:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2256|2023-05-30T07:49:09.041Z -- unknown -- product%20addons%20%26%20fields%20for%20woocommerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2256</link>
      <description>The Product Addons &amp; Fields for WooCommerce WordPress plugin before 32.0.7 does not sanitize and escape some URL parameters, leading to Reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2023-2256|2023-05-30T07:49:09.041Z</guid>
      <pubDate>Tue, 30 May 2023 07:49:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2606|2024-01-16T15:54:00.443Z -- unknown -- wp%20brutal%20ai
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2606</link>
      <description>The WP Brutal AI WordPress plugin before 2.06 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-2606|2024-01-16T15:54:00.443Z</guid>
      <pubDate>Mon, 14 Aug 2023 19:10:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2743|2023-06-27T13:17:05.869Z -- unknown -- wp%20erp%20%7C%20complete%20hr%20solution%20with%20recruitment%20%26%20job%20listings%20%7C%20woocommerce%20crm%20%26%20accounting
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2743</link>
      <description>The ERP WordPress plugin before 1.12.4 does not sanitise and escape the employee_name parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-2743|2023-06-27T13:17:05.869Z</guid>
      <pubDate>Tue, 27 Jun 2023 13:17:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2578|2023-07-10T13:05:41.607Z -- unknown -- buy%20me%20a%20coffee
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2578</link>
      <description>The Buy Me a Coffee WordPress plugin before 3.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2023-2578|2023-07-10T13:05:41.607Z</guid>
      <pubDate>Mon, 10 Jul 2023 12:40:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2493|2023-07-10T13:05:41.028Z -- unknown -- all%20in%20one%20redirection
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2493</link>
      <description>The All In One Redirection WordPress plugin before 2.2.0 does not properly sanitise and escape multiple parameters before using them in an SQL statement, leading to a SQL injection exploitable by high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-2493|2023-07-10T13:05:41.028Z</guid>
      <pubDate>Mon, 10 Jul 2023 12:40:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2811|2023-06-19T10:52:41.241Z -- unknown -- ai%20chatbot
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2811</link>
      <description>The AI ChatBot WordPress plugin before 4.5.6 does not sanitise and escape numerous of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks to all admin when setting chatbot and all client when using chatbot</description>
      <guid isPermaLink="false">CVE-2023-2811|2023-06-19T10:52:41.241Z</guid>
      <pubDate>Mon, 19 Jun 2023 10:52:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2684|2023-06-19T10:52:40.415Z -- unknown -- file%20renaming%20on%20upload
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2684</link>
      <description>The File Renaming on Upload WordPress plugin before 2.5.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2023-2684|2023-06-19T10:52:40.415Z</guid>
      <pubDate>Mon, 19 Jun 2023 10:52:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2329|2023-08-08T08:04:24.970Z -- unknown -- woocommerce%20google%20sheet%20connector
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2329</link>
      <description>The WooCommerce Google Sheet Connector WordPress plugin before 1.3.6 does not have CSRF check when updating its Access Code, which could allow attackers to make logged in admin change the access code to an arbitrary one via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2023-2329|2023-08-08T08:04:24.970Z</guid>
      <pubDate>Mon, 17 Jul 2023 13:29:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2779|2023-06-19T10:52:39.566Z -- unknown -- social%20share%2C%20social%20login%20and%20social%20comments%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2779</link>
      <description>The Social Share, Social Login and Social Comments WordPress plugin before 7.13.52 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2023-2779|2023-06-19T10:52:39.566Z</guid>
      <pubDate>Mon, 19 Jun 2023 10:52:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2796|2023-07-10T12:40:07.475Z -- unknown -- eventon
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2796</link>
      <description>The EventON WordPress plugin before 2.1.2 lacks authentication and authorization in its eventon_ics_download ajax action, allowing unauthenticated visitors to access private and password protected Events by guessing their numeric id.</description>
      <guid isPermaLink="false">CVE-2023-2796|2023-07-10T12:40:07.475Z</guid>
      <pubDate>Mon, 10 Jul 2023 12:40:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-2503|2023-06-05T13:38:58.202Z -- unknown -- 10web%20social%20post%20feed
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-2503</link>
      <description>The 10Web Social Post Feed WordPress plugin before 1.2.9 does not sanitise and escape some parameter before outputting it back in a page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2023-2503|2023-06-05T13:38:58.202Z</guid>
      <pubDate>Mon, 05 Jun 2023 13:38:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5341|2024-06-05T17:54:31.073Z -- unknown -- the%20plus%20addons%20for%20elementor%20page%20builder
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-5341</link>
      <description>The The Plus Addons for Elementor Page Builder plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the 'size' attribute of the Heading Title widget in all versions up to, and including, 5.5.4 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2024-5341|2024-06-05T17:54:31.073Z</guid>
      <pubDate>Thu, 30 May 2024 05:33:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5003|2024-06-07T12:22:30.164Z -- unknown -- wp%20stacker
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-5003</link>
      <description>The WP Stacker WordPress plugin through 1.8.5 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-5003|2024-06-07T12:22:30.164Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1307|2024-04-15T05:00:03.590Z -- unknown -- smart%20forms
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1307</link>
      <description>The Smart Forms  WordPress plugin before 2.6.94 does not have proper authorization in some actions, which could allow users with a role as low as a subscriber to call them and perform unauthorized actions</description>
      <guid isPermaLink="false">CVE-2024-1307|2024-04-15T05:00:03.590Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1983|2024-03-20T05:00:02.910Z -- unknown -- simple%20ajax%20chat
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1983</link>
      <description>The Simple Ajax Chat  WordPress plugin before 20240223 does not prevent visitors from using malicious Names when using the chat, which will be reflected unsanitized to other users.</description>
      <guid isPermaLink="false">CVE-2024-1983|2024-03-20T05:00:02.910Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1487|2024-06-04T18:01:35.257Z -- unknown -- photos%20and%20files%20contest%20gallery
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1487</link>
      <description>The Photos and Files Contest Gallery WordPress plugin before 21.3.1 does not sanitize and escape some parameters, which could allow users with a role as low as author to perform Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-1487|2024-06-04T18:01:35.257Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1106|2024-06-04T18:01:33.183Z -- unknown -- shariff%20wrapper
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1106</link>
      <description>The Shariff Wrapper WordPress plugin before 4.6.10 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1106|2024-06-04T18:01:33.183Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1956|2024-04-08T17:28:15.741Z -- unknown -- wpb-show-core
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1956</link>
      <description>The wpb-show-core WordPress plugin before 2.7 does not sanitise and escape the parameters before outputting it back in the response of an unauthenticated request, leading to a Reflected Cross-Site Scripting</description>
      <guid isPermaLink="false">CVE-2024-1956|2024-04-08T17:28:15.741Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1219|2024-06-04T18:01:26.014Z -- unknown -- easy%20social%20feed
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1219</link>
      <description>The Easy Social Feed  WordPress plugin before 6.5.6 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-1219|2024-06-04T18:01:26.014Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1274|2024-04-02T05:15:41.805Z -- unknown -- my%20calendar
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1274</link>
      <description>The My Calendar WordPress plugin before 3.4.24 does not sanitise and escape some parameters, which could allow users with a role as low as Subscriber to perform Cross-Site Scripting attacks (depending on the permissions set by the admin)</description>
      <guid isPermaLink="false">CVE-2024-1274|2024-04-02T05:15:41.805Z</guid>
      <pubDate>Tue, 02 Apr 2024 05:15:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1331|2024-03-18T19:05:54.788Z -- unknown -- team%20members
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1331</link>
      <description>The Team Members WordPress plugin before 5.3.2 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the author role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-1331|2024-03-18T19:05:54.788Z</guid>
      <pubDate>Mon, 18 Mar 2024 15:15:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1664|2024-06-04T18:01:17.933Z -- unknown -- responsive%20gallery%20grid
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1664</link>
      <description>The Responsive Gallery Grid WordPress plugin before 2.3.11 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1664|2024-06-04T18:01:17.933Z</guid>
      <pubDate>Tue, 09 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1849|2024-04-15T05:00:05.321Z -- unknown -- wp%20customer%20reviews
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1849</link>
      <description>The WP Customer Reviews WordPress plugin before 3.7.1 does not validate a parameter allowing contributor and above users to redirect a page to a malicious URL</description>
      <guid isPermaLink="false">CVE-2024-1849|2024-04-15T05:00:05.321Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1279|2024-06-11T17:13:10.453Z -- unknown -- paid%20memberships%20pro
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1279</link>
      <description>The Paid Memberships Pro WordPress plugin before 2.12.9 does not prevent user with at least the contributor role from leaking other users' sensitive metadata.</description>
      <guid isPermaLink="false">CVE-2024-1279|2024-06-11T17:13:10.453Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1310|2024-04-15T05:00:03.811Z -- unknown -- woocommerce
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1310</link>
      <description>The WooCommerce WordPress plugin before 8.6 does not prevent users with at least the contributor role from leaking products they shouldn't have access to. (e.g. private, draft and trashed products)</description>
      <guid isPermaLink="false">CVE-2024-1310|2024-04-15T05:00:03.811Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1756|2024-06-04T18:01:02.580Z -- unknown -- woocommerce%20customers%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1756</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 29.8 does not have authorisation and CSRF in an AJAX action, allowing any authenticated users, such as subscriber, to call it and retrieve the list of customer email addresses along with their id, first name and last name</description>
      <guid isPermaLink="false">CVE-2024-1756|2024-06-04T18:01:02.580Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1306|2024-04-15T05:00:03.284Z -- unknown -- smart%20forms
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1306</link>
      <description>The Smart Forms  WordPress plugin before 2.6.94 does not have CSRF checks in some places, which could allow attackers to make logged-in users perform unwanted actions via CSRF attacks, such as editing entries, and we consider it a medium risk.</description>
      <guid isPermaLink="false">CVE-2024-1306|2024-04-15T05:00:03.284Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1589|2024-06-04T18:01:01.145Z -- unknown -- sendpress%20newsletters
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1589</link>
      <description>The SendPress Newsletters WordPress plugin through 1.23.11.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1589|2024-06-04T18:01:01.145Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1290|2024-03-11T18:08:58.060Z -- unknown -- user%20registration
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1290</link>
      <description>The User Registration WordPress plugin before 2.12 does not prevent users with at least the contributor role from rendering sensitive shortcodes, allowing them to generate, and leak, valid password reset URLs, which they can use to take over any accounts.</description>
      <guid isPermaLink="false">CVE-2024-1290|2024-03-11T18:08:58.060Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1316|2024-03-04T21:00:09.876Z -- unknown -- event%20tickets%20and%20registration
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1316</link>
      <description>The Event Tickets and Registration WordPress plugin before 5.8.1, Events Tickets Plus WordPress plugin before 5.9.1 does not prevent users with at least the contributor role from leaking the existence of certain events they shouldn't have access to. (e.g. draft, private, pending review, pw-protected, and trashed events).</description>
      <guid isPermaLink="false">CVE-2024-1316|2024-03-04T21:00:09.876Z</guid>
      <pubDate>Mon, 04 Mar 2024 21:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1746|2024-06-04T18:00:39.219Z -- unknown -- testimonial%20slider
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1746</link>
      <description>The Testimonial Slider WordPress plugin before 2.3.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1746|2024-06-04T18:00:39.219Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1204|2024-04-15T05:00:02.873Z -- unknown -- meta%20box
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1204</link>
      <description>The Meta Box  WordPress plugin before 5.9.4 does not prevent users with at least the contributor role from access arbitrary custom fields assigned to other user's posts.</description>
      <guid isPermaLink="false">CVE-2024-1204|2024-04-15T05:00:02.873Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1068|2024-03-11T18:08:57.515Z -- unknown -- 404%20solution
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1068</link>
      <description>The 404 Solution WordPress plugin before 2.35.8 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2024-1068|2024-03-11T18:08:57.515Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1232|2024-03-25T05:00:01.133Z -- unknown -- cm%20download%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1232</link>
      <description>The CM Download Manager  WordPress plugin before 2.9.0 does not have CSRF checks in some places, which could allow attackers to make logged in admins delete downloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-1232|2024-03-25T05:00:01.133Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1273|2024-03-11T18:08:56.961Z -- unknown -- starbox
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1273</link>
      <description>The Starbox WordPress plugin before 3.5.0 does not sanitise and escape some parameters, which could allow users with a role as low as Contributor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1273|2024-03-11T18:08:56.961Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1526|2024-06-04T18:00:32.482Z -- unknown -- hubbub%20lite
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1526</link>
      <description>The Hubbub Lite  WordPress plugin before 1.33.1 does not ensure that user have access to password protected post before displaying its content in a meta tag.</description>
      <guid isPermaLink="false">CVE-2024-1526|2024-06-04T18:00:32.482Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1658|2024-06-07T19:25:05.750Z -- unknown -- grid%20shortcodes
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1658</link>
      <description>The Grid Shortcodes WordPress plugin before 1.1.1 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1658|2024-06-07T19:25:05.750Z</guid>
      <pubDate>Mon, 18 Mar 2024 15:15:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1588|2024-06-04T18:00:29.871Z -- unknown -- sendpress%20newsletters
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1588</link>
      <description>The SendPress Newsletters WordPress plugin through 1.23.11.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1588|2024-06-04T18:00:29.871Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1231|2024-03-25T05:00:00.845Z -- unknown -- cm%20download%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1231</link>
      <description>The CM Download Manager  WordPress plugin before 2.9.0 does not have CSRF checks in some places, which could allow attackers to make logged in admins unpublish downloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-1231|2024-03-25T05:00:00.845Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1319|2024-06-04T18:00:24.531Z -- unknown -- events%20tickets%20plus
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1319</link>
      <description>The Events Tickets Plus WordPress plugin before 5.9.1 does not prevent users with at least the contributor role from leaking the attendees list on any post type regardless of status. (e.g. draft, private, pending review, password-protected, and trashed posts).</description>
      <guid isPermaLink="false">CVE-2024-1319|2024-06-04T18:00:24.531Z</guid>
      <pubDate>Mon, 04 Mar 2024 21:00:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1564|2024-03-25T05:00:01.620Z -- unknown -- wp-schema-pro
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1564</link>
      <description>The wp-schema-pro WordPress plugin before 2.7.16 does not validate post access allowing a contributor user to access custom fields on any post regardless of post type or status via a shortcode</description>
      <guid isPermaLink="false">CVE-2024-1564|2024-03-25T05:00:01.620Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1401|2024-03-19T14:28:21.065Z -- unknown -- profile%20box%20shortcode%20and%20widget
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1401</link>
      <description>The Profile Box Shortcode And Widget WordPress plugin before 1.2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1401|2024-03-19T14:28:21.065Z</guid>
      <pubDate>Tue, 19 Mar 2024 14:28:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1905|2024-06-04T18:00:18.574Z -- unknown -- smart%20forms
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1905</link>
      <description>The Smart Forms  WordPress plugin before 2.6.96 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1905|2024-06-04T18:00:18.574Z</guid>
      <pubDate>Mon, 29 Apr 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1745|2024-03-26T05:00:02.299Z -- unknown -- testimonial%20slider
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1745</link>
      <description>The Testimonial Slider WordPress plugin before 2.3.7 does not properly ensure that a user has the necessary capabilities to edit certain sensitive Testimonial Slider WordPress plugin before 2.3.7 settings, making it possible for users with at least the Author role to edit them.</description>
      <guid isPermaLink="false">CVE-2024-1745|2024-03-26T05:00:02.299Z</guid>
      <pubDate>Tue, 26 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1712|2024-06-04T18:00:13.408Z -- unknown -- carousel%20slider
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1712</link>
      <description>The Carousel Slider WordPress plugin before 2.2.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1712|2024-06-04T18:00:13.408Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1752|2024-04-08T17:28:09.077Z -- unknown -- font%20farsi
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1752</link>
      <description>The Font Farsi WordPress plugin through 1.6.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1752|2024-04-08T17:28:09.077Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1292|2024-06-04T18:00:01.682Z -- unknown -- wpb-show-core
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1292</link>
      <description>The WPB Show Core WordPress plugin before 2.7 does not sanitise and escape some parameters before outputting them back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-1292|2024-06-04T18:00:01.682Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1660|2024-04-15T05:00:04.066Z -- unknown -- top%20bar
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1660</link>
      <description>The Top Bar WordPress plugin before 3.0.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1660|2024-04-15T05:00:04.066Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1846|2024-06-06T18:28:03.533Z -- unknown -- responsive%20tabs
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1846</link>
      <description>The Responsive Tabs WordPress plugin before 4.0.7 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1846|2024-06-06T18:28:03.533Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1743|2024-06-04T17:59:47.689Z -- unknown -- woocommerce%20customers%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1743</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 29.8 does not sanitise and escape various parameters before outputting them back in pages and attributes, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-1743|2024-06-04T17:59:47.689Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1755|2024-04-15T05:00:04.951Z -- unknown -- nps%20computy
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1755</link>
      <description>The NPS computy WordPress plugin through 2.7.5 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-1755|2024-04-15T05:00:04.951Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1958|2024-06-04T17:59:44.770Z -- unknown -- wpb-show-core
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1958</link>
      <description>The WPB Show Core WordPress plugin before 2.7 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin or unauthenticated users</description>
      <guid isPermaLink="false">CVE-2024-1958|2024-06-04T17:59:44.770Z</guid>
      <pubDate>Mon, 08 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1333|2024-03-18T19:05:45.251Z -- unknown -- responsive%20pricing%20table
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1333</link>
      <description>The Responsive Pricing Table WordPress plugin before 5.1.11 does not validate and escape some of its Pricing Table options before outputting them back in a page/post where the related shortcode is embed, which could allow users with the author role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-1333|2024-03-18T19:05:45.251Z</guid>
      <pubDate>Mon, 18 Mar 2024 15:15:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1962|2024-03-25T05:00:02.022Z -- unknown -- cm%20download%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1962</link>
      <description>The CM Download Manager  WordPress plugin before 2.9.1 does not have CSRF checks in some places, which could allow attackers to make logged in admins edit downloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-1962|2024-03-25T05:00:02.022Z</guid>
      <pubDate>Mon, 25 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1076|2024-05-08T06:00:02.175Z -- unknown -- ssl%20zen
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1076</link>
      <description>The SSL Zen  WordPress plugin before 4.6.0 only relies on the use of .htaccess to prevent visitors from accessing the site's generated private keys, which allows an attacker to read them if the site runs on a server who doesn't support .htaccess files, like NGINX.</description>
      <guid isPermaLink="false">CVE-2024-1076|2024-05-08T06:00:02.175Z</guid>
      <pubDate>Wed, 08 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1754|2024-06-04T17:59:31.606Z -- unknown -- nps%20computy
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1754</link>
      <description>The NPS computy WordPress plugin through 2.7.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-1754|2024-06-04T17:59:31.606Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0238|2024-02-05T21:23:07.225Z -- unknown -- eventon%20premium
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0238</link>
      <description>The EventON Premium WordPress plugin before 4.5.6, EventON WordPress plugin before 2.2.8 do not have authorisation in an AJAX action, and does not ensure that the post to be updated belong to the plugin, allowing unauthenticated users to update arbitrary post metadata.</description>
      <guid isPermaLink="false">CVE-2024-0238|2024-02-05T21:23:07.225Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:57:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0756|2024-06-05T13:54:08.704Z -- unknown -- insert%20or%20embed%20articulate%20content%20into%20wordpress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0756</link>
      <description>The Insert or Embed Articulate Content into WordPress plugin through 4.3000000023 lacks validation of URLs when adding iframes, allowing attackers to inject an iFrame in the page and thus load arbitrary content from any page.</description>
      <guid isPermaLink="false">CVE-2024-0756|2024-06-05T13:54:08.704Z</guid>
      <pubDate>Tue, 04 Jun 2024 14:28:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0672|2024-03-28T05:00:01.874Z -- unknown -- pz-linkcard
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0672</link>
      <description>The Pz-LinkCard WordPress plugin through 2.5.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-0672|2024-03-28T05:00:01.874Z</guid>
      <pubDate>Thu, 28 Mar 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0561|2024-06-04T17:59:12.071Z -- unknown -- ultimate%20posts%20widget
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0561</link>
      <description>The Ultimate Posts Widget WordPress plugin before 2.3.1 does not validate and escape some of its Widget options before outputting them back in attributes, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0561|2024-06-04T17:59:12.071Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0673|2024-03-28T05:00:02.093Z -- unknown -- pz-linkcard
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0673</link>
      <description>The Pz-LinkCard WordPress plugin through 2.5.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-0673|2024-03-28T05:00:02.093Z</guid>
      <pubDate>Thu, 28 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0235|2024-02-05T21:23:06.278Z -- unknown -- eventon
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0235</link>
      <description>The EventON WordPress plugin before 4.5.5, EventON WordPress plugin before 2.2.7 do not have authorisation in an AJAX action, allowing unauthenticated users to retrieve email addresses of any users on the blog</description>
      <guid isPermaLink="false">CVE-2024-0235|2024-02-05T21:23:06.278Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:57:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0868|2024-04-17T05:00:02.186Z -- unknown -- coreactivity%3A%20activity%20logging%20plugin%20for%20wordpress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0868</link>
      <description>The coreActivity: Activity Logging plugin for WordPress plugin before 2.1 retrieved IP addresses of requests via headers such X-FORWARDED to log them, allowing users to spoof them by providing an arbitrary value</description>
      <guid isPermaLink="false">CVE-2024-0868|2024-04-17T05:00:02.186Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0757|2024-06-04T17:59:08.420Z -- unknown -- insert%20or%20embed%20articulate%20content%20into%20wordpress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0757</link>
      <description>The Insert or Embed Articulate Content into WordPress plugin through 4.3000000023 is not properly filtering which file extensions are allowed to be imported on the server, allowing the uploading of malicious code within zip files</description>
      <guid isPermaLink="false">CVE-2024-0757|2024-06-04T17:59:08.420Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0239|2024-02-05T21:23:10.929Z -- unknown -- contact%20form%207%20connector
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0239</link>
      <description>The Contact Form 7 Connector WordPress plugin before 1.2.3 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against administrators.</description>
      <guid isPermaLink="false">CVE-2024-0239|2024-02-05T21:23:10.929Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:57:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0951|2024-06-04T17:58:59.888Z -- unknown -- advanced%20social%20feeds%20widget%20%26%20shortcode
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0951</link>
      <description>The Advanced Social Feeds Widget &amp; Shortcode WordPress plugin through 1.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0951|2024-06-04T17:58:59.888Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0855|2024-02-27T08:30:29.193Z -- unknown -- spiffy%20calendar
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0855</link>
      <description>The Spiffy Calendar WordPress plugin before 4.9.9 doesn't check the event_author parameter, and allows any user to alter it when creating an event, leading to deceiving users/admins that a page was created by a Contributor+.</description>
      <guid isPermaLink="false">CVE-2024-0855|2024-02-27T08:30:29.193Z</guid>
      <pubDate>Tue, 27 Feb 2024 08:30:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0711|2024-06-04T17:58:58.584Z -- unknown -- buttons%20shortcode%20and%20widget
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0711</link>
      <description>The Buttons Shortcode and Widget WordPress plugin through 1.16 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-0711|2024-06-04T17:58:58.584Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0881|2024-06-04T17:58:54.930Z -- unknown -- post%20grid%2C%20form%20maker%2C%20popup%20maker%2C%20woocommerce%20blocks%2C%20post%20blocks%2C%20post%20carousel
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0881</link>
      <description>The Post Grid, Form Maker, Popup Maker, WooCommerce Blocks, Post Blocks, Post Carousel  WordPress plugin before 2.2.76 does not prevent password protected posts from being displayed in the result of some unauthenticated AJAX actions, allowing unauthenticated users to read such posts</description>
      <guid isPermaLink="false">CVE-2024-0881|2024-06-04T17:58:54.930Z</guid>
      <pubDate>Thu, 11 Apr 2024 15:36:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0566|2024-02-12T16:07:34.465Z -- unknown -- smart%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0566</link>
      <description>The Smart Manager WordPress plugin before 8.28.0 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by high privilege users such as admin.</description>
      <guid isPermaLink="false">CVE-2024-0566|2024-02-12T16:07:34.465Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0248|2024-02-12T16:07:33.907Z -- unknown -- eazydocs
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0248</link>
      <description>The EazyDocs WordPress plugin before 2.4.0 re-introduced CVE-2023-6029 (https://wpscan.com/vulnerability/7a0aaf85-8130-4fd7-8f09-f8edc929597e/) in 2.3.8, allowing any authenticated users, such as subscriber to delete arbitrary posts, as well as add and delete documents/sections. The issue was partially fixed in 2.3.9.</description>
      <guid isPermaLink="false">CVE-2024-0248|2024-02-12T16:07:33.907Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0337|2024-03-20T05:00:02.494Z -- unknown -- travelpayouts%3A%20all%20travel%20brands%20in%20one%20place
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0337</link>
      <description>The Travelpayouts: All Travel Brands in One Place WordPress plugin through 1.1.15 is vulnerable to Open Redirect due to insufficient validation on the travelpayouts_redirect variable. This makes it possible for unauthenticated attackers to redirect users to potentially malicious sites if they can successfully trick them into performing an action.</description>
      <guid isPermaLink="false">CVE-2024-0337|2024-03-20T05:00:02.494Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0858|2024-03-18T19:05:49.195Z -- unknown -- innovs%20hr
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0858</link>
      <description>The Innovs HR WordPress plugin through 1.0.3.4 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as adding them as employees.</description>
      <guid isPermaLink="false">CVE-2024-0858|2024-03-18T19:05:49.195Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0399|2024-04-15T05:00:01.875Z -- unknown -- woocommerce%20customers%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0399</link>
      <description>The WooCommerce Customers Manager WordPress plugin before 29.7 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to an SQL injection exploitable by Subscriber+ role.</description>
      <guid isPermaLink="false">CVE-2024-0399|2024-04-15T05:00:01.875Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0233|2024-02-05T21:23:15.372Z -- unknown -- eventon
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0233</link>
      <description>The EventON WordPress plugin before 4.5.5, EventON WordPress plugin before 2.2.7 do not properly sanitise and escape a parameter before outputting it back in pages, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-0233|2024-02-05T21:23:15.372Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:57:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0973|2024-03-18T19:05:46.858Z -- unknown -- widget%20for%20social%20page%20feeds
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0973</link>
      <description>The Widget for Social Page Feeds WordPress plugin before 6.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0973|2024-03-18T19:05:46.858Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0420|2024-06-04T17:58:48.789Z -- unknown -- mappress%20maps%20for%20wordpress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0420</link>
      <description>The MapPress Maps for WordPress plugin before 2.88.15 does not sanitize and escape the map title when outputting it back in the admin dashboard, allowing Contributors and above roles to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-0420|2024-06-04T17:58:48.789Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0820|2024-06-04T17:58:47.931Z -- unknown -- jobs%20for%20wordpress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0820</link>
      <description>The Jobs for WordPress plugin before 2.7.4 does not sanitise and escape some parameters, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-0820|2024-06-04T17:58:47.931Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0904|2024-06-04T17:58:42.927Z -- unknown -- fancy%20product%20designer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0904</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.81 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0904|2024-06-04T17:58:42.927Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0905|2024-04-26T05:00:01.958Z -- unknown -- fancy%20product%20designer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0905</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.8 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against unauthenticated and admin-level users</description>
      <guid isPermaLink="false">CVE-2024-0905|2024-04-26T05:00:01.958Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0856|2024-03-20T05:00:02.675Z -- unknown -- appointment%20booking%20calendar
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0856</link>
      <description>The Appointment Booking Calendar WordPress plugin before 1.3.83 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks such as adding a booking to the calendar without paying.</description>
      <guid isPermaLink="false">CVE-2024-0856|2024-03-20T05:00:02.675Z</guid>
      <pubDate>Wed, 20 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0250|2024-06-04T17:58:38.063Z -- unknown -- analytics%20insights%20for%20google%20analytics%204%20%28aiwp%29
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0250</link>
      <description>The Analytics Insights for Google Analytics 4 (AIWP) WordPress plugin before 6.3 is vulnerable to Open Redirect due to insufficient validation on the redirect oauth2callback.php file. This makes it possible for unauthenticated attackers to redirect users to potentially malicious sites if they can successfully trick them into performing an action.</description>
      <guid isPermaLink="false">CVE-2024-0250|2024-06-04T17:58:38.063Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0677|2024-06-04T17:58:37.182Z -- unknown -- pz-linkcard
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0677</link>
      <description>The Pz-LinkCard WordPress plugin through 2.5.1 does not prevent users from pinging arbitrary hosts via some of its shortcodes, which could allow high privilege users such as contributors to perform SSRF attacks.</description>
      <guid isPermaLink="false">CVE-2024-0677|2024-06-04T17:58:37.182Z</guid>
      <pubDate>Thu, 28 Mar 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0421|2024-02-12T16:07:31.072Z -- unknown -- mappress%20maps%20for%20wordpress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0421</link>
      <description>The MapPress Maps for WordPress plugin before 2.88.16 does not ensure that posts to be retrieve via an AJAX action is a public map, allowing unauthenticated users to read arbitrary private and draft posts.</description>
      <guid isPermaLink="false">CVE-2024-0421|2024-02-12T16:07:31.072Z</guid>
      <pubDate>Mon, 12 Feb 2024 16:05:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0187|2024-02-05T21:23:14.439Z -- unknown -- community%20by%20peepso
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0187</link>
      <description>The Community by PeepSo WordPress plugin before 6.3.1.2 does not sanitise and escape various parameters and generated URLs before outputting them back attributes, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-0187|2024-02-05T21:23:14.439Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:57:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0902|2024-06-04T17:58:29.201Z -- unknown -- fancy%20product%20designer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0902</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.81 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0902|2024-06-04T17:58:29.201Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0719|2024-03-18T19:05:43.770Z -- unknown -- tabs%20shortcode%20and%20widget
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0719</link>
      <description>The Tabs Shortcode and Widget WordPress plugin through 1.17 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-0719|2024-03-18T19:05:43.770Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0365|2024-03-18T19:05:42.966Z -- unknown -- fancy%20product%20designer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0365</link>
      <description>The Fancy Product Designer WordPress plugin before 6.1.5 does not properly sanitise and escape a parameter before using it in a SQL statement, leading to a SQL injection exploitable by adminstrators.</description>
      <guid isPermaLink="false">CVE-2024-0365|2024-03-18T19:05:42.966Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0559|2024-03-11T18:08:56.401Z -- unknown -- enhanced%20text%20widget
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0559</link>
      <description>The Enhanced Text Widget WordPress plugin before 1.6.6 does not validate and escape some of its Widget options before outputting them back in attributes, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-0559|2024-03-11T18:08:56.401Z</guid>
      <pubDate>Mon, 11 Mar 2024 17:56:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0236|2024-02-05T21:23:02.604Z -- unknown -- eventon
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0236</link>
      <description>The EventON WordPress plugin before 4.5.5, EventON WordPress plugin before 2.2.7 do not have authorisation in an AJAX action, allowing unauthenticated users to retrieve the settings of arbitrary virtual events, including any meeting password set (for example for Zoom)</description>
      <guid isPermaLink="false">CVE-2024-0236|2024-02-05T21:23:02.604Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:57:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0237|2024-02-05T21:23:05.415Z -- unknown -- eventon%20premium
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0237</link>
      <description>The EventON WordPress plugin through 4.5.8, EventON WordPress plugin before 2.2.7 do not have authorisation in some AJAX actions, allowing unauthenticated users to update virtual events settings, such as meeting URL, moderator, access details etc</description>
      <guid isPermaLink="false">CVE-2024-0237|2024-02-05T21:23:05.415Z</guid>
      <pubDate>Tue, 16 Jan 2024 15:56:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0779|2024-03-18T19:05:42.163Z -- unknown -- enjoy%20social%20feed%20plugin%20for%20wordpress%20website
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0779</link>
      <description>The Enjoy Social Feed plugin for WordPress website WordPress plugin through 6.2.2 does not have authorisation and CSRF in various function hooked to admin_init, allowing unauthenticated users to call them and unlink arbitrary users Instagram Account for example</description>
      <guid isPermaLink="false">CVE-2024-0779|2024-03-18T19:05:42.163Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0780|2024-03-18T19:05:41.368Z -- unknown -- enjoy%20social%20feed%20plugin%20for%20wordpress%20website
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0780</link>
      <description>The Enjoy Social Feed plugin for WordPress website WordPress plugin through 6.2.2 does not have authorisation when resetting its database, allowing any authenticated users, such as subscriber to perform such action</description>
      <guid isPermaLink="false">CVE-2024-0780|2024-03-18T19:05:41.368Z</guid>
      <pubDate>Mon, 18 Mar 2024 19:05:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4534|2024-05-27T06:00:02.758Z -- unknown -- kkprogressbar2%20free
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4534</link>
      <description>The KKProgressbar2 Free  WordPress plugin through 1.1.4.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4534|2024-05-27T06:00:02.758Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4061|2024-06-04T17:56:11.258Z -- unknown -- survey%20maker
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4061</link>
      <description>The Survey Maker  WordPress plugin before 4.2.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4061|2024-06-04T17:56:11.258Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4535|2024-06-04T17:56:07.427Z -- unknown -- kkprogressbar2%20free
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4535</link>
      <description>The KKProgressbar2 Free  WordPress plugin through 1.1.4.2 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4535|2024-06-04T17:56:07.427Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4372|2024-06-04T17:56:06.564Z -- unknown -- carousel%20slider
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4372</link>
      <description>The Carousel Slider WordPress plugin before 2.2.11 does not sanitise and escape some parameters, which could allow users with a role as low as editor to perform Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4372|2024-06-04T17:56:06.564Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4057|2024-06-04T17:55:54.055Z -- unknown -- gutenberg%20blocks%20with%20ai%20by%20kadence%20wp
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4057</link>
      <description>The Gutenberg Blocks with AI by Kadence WP  WordPress plugin before 3.2.37 does not validate and escape some of its block attributes before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4057|2024-06-04T17:55:54.055Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4621|2024-06-07T15:56:04.456Z -- unknown -- arforms%20-%20premium%20wordpress%20form%20builder%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4621</link>
      <description>The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4621|2024-06-07T15:56:04.456Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4532|2024-05-27T06:00:02.290Z -- unknown -- business%20card
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4532</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as deleting cards via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4532|2024-05-27T06:00:02.290Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4857|2024-06-04T17:55:30.703Z -- unknown -- fs%20product%20inquiry
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4857</link>
      <description>The FS Product Inquiry WordPress plugin through 1.1.1 does not sanitise and escape some form submissions, which could allow unauthenticated users to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-4857|2024-06-04T17:55:30.703Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4529|2024-06-06T18:11:18.132Z -- unknown -- business%20card
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4529</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as deleting card categories via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4529|2024-06-06T18:11:18.132Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4180|2024-06-04T17:55:12.437Z -- unknown -- the%20events%20calendar
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4180</link>
      <description>The Events Calendar WordPress plugin before 6.4.0.1 does not properly sanitize user-submitted content when rendering some views via AJAX.</description>
      <guid isPermaLink="false">CVE-2024-4180|2024-06-04T17:55:12.437Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4856|2024-06-04T17:55:07.188Z -- unknown -- fs%20product%20inquiry
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4856</link>
      <description>The FS Product Inquiry WordPress plugin through 1.1.1 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin or unauthenticated users</description>
      <guid isPermaLink="false">CVE-2024-4856|2024-06-04T17:55:07.188Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4749|2024-06-04T20:09:20.526Z -- unknown -- wp-emember
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4749</link>
      <description>The wp-eMember WordPress plugin before 10.3.9 does not sanitize and escape the "fieldId" parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting.</description>
      <guid isPermaLink="false">CVE-2024-4749|2024-06-04T20:09:20.526Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4533|2024-06-04T17:54:56.805Z -- unknown -- kkprogressbar2%20free
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4533</link>
      <description>The KKProgressbar2 Free  WordPress plugin through 1.1.4.2 does not sanitize and escape a parameter before using it in a SQL statement, allowing admin users to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2024-4533|2024-06-04T17:54:56.805Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4289|2024-06-04T17:54:54.276Z -- unknown -- sailthru%20triggermail
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4289</link>
      <description>The Sailthru Triggermail WordPress plugin through 1.1 does not sanitise and escape various parameters before outputting them back in pages and attributes, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-4289|2024-06-04T17:54:54.276Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4620|2024-06-07T06:00:02.468Z -- unknown -- arforms%20-%20premium%20wordpress%20form%20builder%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4620</link>
      <description>The ARForms - Premium WordPress Form Builder Plugin WordPress plugin before 6.6 allows unauthenticated users to modify uploaded files in such a way that PHP code can be uploaded when an upload file input is included on a form</description>
      <guid isPermaLink="false">CVE-2024-4620|2024-06-07T06:00:02.468Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4530|2024-06-04T17:54:42.006Z -- unknown -- business%20card
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4530</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as editing card categories via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4530|2024-06-04T17:54:42.006Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4750|2024-06-04T17:54:29.998Z -- unknown -- buddyboss-platform
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4750</link>
      <description>The buddyboss-platform WordPress plugin before 2.6.0 contains an IDOR vulnerability that allows a user to like a private post by manipulating the ID included in the request</description>
      <guid isPermaLink="false">CVE-2024-4750|2024-06-04T17:54:29.998Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4290|2024-05-21T06:00:02.415Z -- unknown -- sailthru%20triggermail
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4290</link>
      <description>The Sailthru Triggermail WordPress plugin through 1.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4290|2024-05-21T06:00:02.415Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4399|2024-06-04T17:54:02.934Z -- unknown -- cas
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4399</link>
      <description>The  does not validate a parameter before making a request to it, which could allow unauthenticated users to perform SSRF attack</description>
      <guid isPermaLink="false">CVE-2024-4399|2024-06-04T17:54:02.934Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4531|2024-06-04T17:54:02.001Z -- unknown -- business%20card
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4531</link>
      <description>The Business Card WordPress plugin through 1.0.0 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions such as editing cards via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-4531|2024-06-04T17:54:02.001Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4469|2024-06-04T17:53:54.768Z -- unknown -- wp%20staging%20wordpress%20backup%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4469</link>
      <description>The WP STAGING WordPress Backup Plugin  WordPress plugin before 3.5.0 does not prevent users with the administrator role from pinging conducting SSRF attacks, which may be a problem in multisite configurations.</description>
      <guid isPermaLink="false">CVE-2024-4469|2024-06-04T17:53:54.768Z</guid>
      <pubDate>Fri, 31 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4886|2024-06-05T13:11:03.623Z -- unknown -- buddyboss-platform
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4886</link>
      <description>The  contains an IDOR vulnerability that allows a user to comment on a private post by manipulating the ID included in the request</description>
      <guid isPermaLink="false">CVE-2024-4886|2024-06-05T13:11:03.623Z</guid>
      <pubDate>Wed, 05 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4756|2024-06-07T06:00:02.839Z -- unknown -- wp%20backpack
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4756</link>
      <description>The WP Backpack WordPress plugin through 2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-4756|2024-06-07T06:00:02.839Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4388|2024-06-04T17:53:30.571Z -- unknown -- cas
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4388</link>
      <description>This  does not validate a path generated with user input when downloading files, allowing unauthenticated user to download arbitrary files from the server</description>
      <guid isPermaLink="false">CVE-2024-4388|2024-06-04T17:53:30.571Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3642|2024-06-04T17:33:18.940Z -- unknown -- newsletter%20popup
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3642</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not have CSRF check when deleting subscriber, which could allow attackers to make logged in admins perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3642|2024-06-04T17:33:18.940Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3048|2024-06-04T17:33:13.531Z -- unknown -- bannerlid
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3048</link>
      <description>The Bannerlid WordPress plugin through 1.1.0 does not escape generated URLs before outputting them in attributes, leading to Reflected Cross-Site Scripting which could be used against high privilege users such as administrators</description>
      <guid isPermaLink="false">CVE-2024-3048|2024-06-04T17:33:13.531Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3265|2024-06-04T17:33:12.146Z -- unknown -- advanced%20search
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3265</link>
      <description>The Advanced Search WordPress plugin through 1.1.6 does not properly escape parameters appended to an SQL query, making it possible for users with the administrator role to conduct SQL Injection attacks in the context of a multisite WordPress configurations.</description>
      <guid isPermaLink="false">CVE-2024-3265|2024-06-04T17:33:12.146Z</guid>
      <pubDate>Thu, 25 Apr 2024 21:25:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3475|2024-06-04T17:33:10.876Z -- unknown -- sticky%20buttons
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3475</link>
      <description>The Sticky Buttons  WordPress plugin before 3.2.4 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting buttons via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3475|2024-06-04T17:33:10.876Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3822|2024-06-04T17:33:07.400Z -- unknown -- base64%20encoder%2Fdecoder
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3822</link>
      <description>The Base64 Encoder/Decoder WordPress plugin through 0.9.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3822|2024-06-04T17:33:07.400Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3823|2024-06-04T17:33:05.706Z -- unknown -- base64%20encoder%2Fdecoder
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3823</link>
      <description>The Base64 Encoder/Decoder WordPress plugin through 0.9.2 does not have CSRF check when updating its settings, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3823|2024-06-04T17:33:05.706Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3474|2024-06-04T17:33:02.444Z -- unknown -- wow%20skype%20buttons
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3474</link>
      <description>The Wow Skype Buttons WordPress plugin before 4.0.4 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting buttons via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3474|2024-06-04T17:33:02.444Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3634|2024-06-04T17:33:00.780Z -- unknown -- month%20name%20translation%20benaceur
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3634</link>
      <description>The month name translation benaceur WordPress plugin before 2.3.8 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3634|2024-06-04T17:33:00.780Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3481|2024-06-04T17:32:56.648Z -- unknown -- counter%20box
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3481</link>
      <description>The Counter Box  WordPress plugin before 1.2.4 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such deleting counters via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3481|2024-06-04T17:32:56.648Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3478|2024-06-04T17:32:55.802Z -- unknown -- herd%20effects
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3478</link>
      <description>The Herd Effects  WordPress plugin before 5.2.7 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting effects via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3478|2024-06-04T17:32:55.802Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3643|2024-05-16T06:00:02.799Z -- unknown -- newsletter%20popup
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3643</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not have CSRF check when deleting list, which could allow attackers to make logged in admins perform such action via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3643|2024-05-16T06:00:02.799Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3058|2024-06-04T17:32:46.776Z -- unknown -- enl%20newsletter
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3058</link>
      <description>The ENL Newsletter WordPress plugin through 1.0.1 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3058|2024-06-04T17:32:46.776Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3920|2024-05-23T06:00:03.279Z -- unknown -- flattr
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3920</link>
      <description>The Flattr WordPress plugin through 1.2.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3920|2024-05-23T06:00:03.279Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3824|2024-06-04T17:32:42.115Z -- unknown -- base64%20encoder%2Fdecoder
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3824</link>
      <description>The Base64 Encoder/Decoder WordPress plugin through 0.9.2 does not have CSRF check in place when resetting its settings, which could allow attackers to make a logged in admin reset them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3824|2024-06-04T17:32:42.115Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3629|2024-06-04T17:32:40.905Z -- unknown -- hl%20twitter
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3629</link>
      <description>The HL Twitter WordPress plugin through 2014.1.18 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3629|2024-06-04T17:32:40.905Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3941|2024-06-04T17:32:38.843Z -- unknown -- recaptcha%20jetpack
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3941</link>
      <description>The reCAPTCHA Jetpack WordPress plugin through 0.2.2 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged-in admin add Stored XSS payloads via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2024-3941|2024-06-04T17:32:38.843Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3582|2024-05-09T06:00:02.529Z -- unknown -- ungallery
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3582</link>
      <description>The UnGallery WordPress plugin through 2.2.4 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3582|2024-05-09T06:00:02.529Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3644|2024-06-04T17:32:34.623Z -- unknown -- newsletter%20popup
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3644</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3644|2024-06-04T17:32:34.623Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3756|2024-05-06T06:00:02.125Z -- unknown -- mf%20gig%20calendar
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3756</link>
      <description>The MF Gig Calendar WordPress plugin through 1.2.1 does not have CSRF checks in some places, which could allow attackers to make logged in Contributors and above delete arbitrary events via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3756|2024-05-06T06:00:02.125Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3594|2024-06-04T17:32:31.728Z -- unknown -- idonate
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3594</link>
      <description>The IDonate  WordPress plugin through 1.9.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3594|2024-06-04T17:32:31.728Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3239|2024-06-04T17:32:22.790Z -- unknown -- post%20grid%20gutenberg%20blocks%20and%20wordpress%20blog%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3239</link>
      <description>The Post Grid Gutenberg Blocks and WordPress Blog Plugin  WordPress plugin before 4.0.2 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3239|2024-06-04T17:32:22.790Z</guid>
      <pubDate>Mon, 13 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3405|2024-06-04T17:32:21.872Z -- unknown -- wp%20prayer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3405</link>
      <description>The WP Prayer WordPress plugin through 2.0.9 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3405|2024-06-04T17:32:21.872Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3940|2024-06-04T17:32:20.990Z -- unknown -- recaptcha%20jetpack
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3940</link>
      <description>The reCAPTCHA Jetpack WordPress plugin through 0.2.2 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3940|2024-06-04T17:32:20.990Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3628|2024-05-07T06:00:01.626Z -- unknown -- easyevent
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3628</link>
      <description>The EasyEvent WordPress plugin through 1.0.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-3628|2024-05-07T06:00:01.626Z</guid>
      <pubDate>Tue, 07 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3917|2024-06-11T14:33:49.643Z -- unknown -- pet%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3917</link>
      <description>The Pet Manager WordPress plugin through 1.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3917|2024-06-11T14:33:49.643Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3937|2024-06-06T18:25:41.839Z -- unknown -- playlist%20for%20youtube
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3937</link>
      <description>The Playlist for Youtube WordPress plugin through 1.32 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3937|2024-06-06T18:25:41.839Z</guid>
      <pubDate>Wed, 29 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3188|2024-04-26T05:00:05.277Z -- unknown -- wp%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3188</link>
      <description>The WP Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 7.1.0 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3188|2024-04-26T05:00:05.277Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3472|2024-06-04T17:32:17.000Z -- unknown -- modal%20window
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3472</link>
      <description>The Modal Window  WordPress plugin before 5.3.10 does not have CSRF check in place when bulk deleting modals, which could allow attackers to make a logged in admin delete them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3472|2024-06-04T17:32:17.000Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3921|2024-05-29T06:00:02.135Z -- unknown -- gianism
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3921</link>
      <description>The Gianism WordPress plugin through 5.1.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3921|2024-05-29T06:00:02.135Z</guid>
      <pubDate>Wed, 29 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3075|2024-06-04T17:32:16.127Z -- unknown -- mm-email2image
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3075</link>
      <description>The MM-email2image WordPress plugin through 0.2.5 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3075|2024-06-04T17:32:16.127Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3059|2024-06-04T17:32:14.386Z -- unknown -- enl%20newsletter
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3059</link>
      <description>The ENL Newsletter WordPress plugin through 1.0.1 does not have CSRF checks in some places, which could allow attackers to make logged in admins delete arbitrary Campaigns via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3059|2024-06-04T17:32:14.386Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3060|2024-06-04T17:32:10.817Z -- unknown -- enl%20newsletter
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3060</link>
      <description>The ENL Newsletter WordPress plugin through 1.0.1 does not sanitize and escape a parameter before using it in a SQL statement, allowing admin+ to perform SQL injection attacks</description>
      <guid isPermaLink="false">CVE-2024-3060|2024-06-04T17:32:10.817Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3471|2024-06-04T17:32:08.568Z -- unknown -- button%20generator
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3471</link>
      <description>The Button Generator  WordPress plugin before 3.0 does not have CSRF check in place when bulk deleting, which could allow attackers to make a logged in admin delete buttons via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3471|2024-06-04T17:32:08.568Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3076|2024-06-04T17:32:07.263Z -- unknown -- mm-email2image
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3076</link>
      <description>The MM-email2image WordPress plugin through 0.2.5 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in admin add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3076|2024-06-04T17:32:07.263Z</guid>
      <pubDate>Fri, 26 Apr 2024 13:23:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3631|2024-06-04T17:32:06.360Z -- unknown -- hl%20twitter
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3631</link>
      <description>The HL Twitter WordPress plugin through 2014.1.18 does not have CSRF check when unlinking twitter accounts, which could allow attackers to make logged in admins perform such actions via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3631|2024-06-04T17:32:06.360Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3261|2024-04-24T05:00:03.121Z -- unknown -- strong%20testimonials
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3261</link>
      <description>The Strong Testimonials WordPress plugin before 3.1.12 does not validate and escape some of its Testimonial fields before outputting them back in a page/post, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks. The attack requires a specific view to be performed</description>
      <guid isPermaLink="false">CVE-2024-3261|2024-04-24T05:00:03.121Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3918|2024-06-04T17:32:04.463Z -- unknown -- pet%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3918</link>
      <description>The Pet Manager WordPress plugin through 1.4 does not sanitise and escape some of its Pet settings, which could allow high privilege users such as Contributor to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-3918|2024-06-04T17:32:04.463Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3241|2024-06-04T17:31:59.787Z -- unknown -- ultimate%20blocks
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3241</link>
      <description>The Ultimate Blocks  WordPress plugin before 3.1.7 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3241|2024-06-04T17:31:59.787Z</guid>
      <pubDate>Tue, 14 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3703|2024-06-04T17:31:59.307Z -- unknown -- carousel%20slider
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3703</link>
      <description>The Carousel Slider WordPress plugin before 2.2.10 does not validate and escape some of its Slide options before outputting them back in the page/post where the related Slide shortcode is embed, which could allow users with the Editor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3703|2024-06-04T17:31:59.307Z</guid>
      <pubDate>Fri, 03 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3580|2024-06-04T17:31:58.413Z -- unknown -- popup4phone
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3580</link>
      <description>The Popup4Phone WordPress plugin through 1.3.2 does not sanitise and escape some of its settings, which could allow high privilege users such as Editor to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3580|2024-06-04T17:31:58.413Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3406|2024-05-15T06:00:02.589Z -- unknown -- wp%20prayer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3406</link>
      <description>The WP Prayer WordPress plugin through 2.0.9 does not have CSRF check in place when updating its email settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3406|2024-05-15T06:00:02.589Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3692|2024-05-03T06:00:02.337Z -- unknown -- gutenverse
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3692</link>
      <description>The Gutenverse  WordPress plugin before 1.9.1 does not validate the htmlTag option in various of its block before outputting it back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3692|2024-05-03T06:00:02.337Z</guid>
      <pubDate>Fri, 03 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3368|2024-06-06T17:53:45.554Z -- unknown -- all%20in%20one%20seo
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3368</link>
      <description>The All in One SEO  WordPress plugin before 4.6.1.1 does not validate and escape some of its Post fields before outputting them back, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3368|2024-06-06T17:53:45.554Z</guid>
      <pubDate>Mon, 20 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3407|2024-06-04T17:31:51.900Z -- unknown -- wp%20prayer
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3407</link>
      <description>The WP Prayer WordPress plugin through 2.0.9 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3407|2024-06-04T17:31:51.900Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3903|2024-05-09T06:00:02.924Z -- unknown -- add%20custom%20css%20and%20js
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3903</link>
      <description>The Add Custom CSS and JS WordPress plugin through 1.20 does not have CSRF check in some places, and is missing sanitisation as well as escaping, which could allow attackers to make logged in as author and above add Stored XSS payloads via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-3903|2024-05-09T06:00:02.924Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3755|2024-06-04T17:31:46.642Z -- unknown -- mf%20gig%20calendar
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3755</link>
      <description>The MF Gig Calendar WordPress plugin through 1.2.1 does not sanitise and escape some of its settings, which could allow high privilege users such as editor to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3755|2024-06-04T17:31:46.642Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3939|2024-06-06T18:27:04.548Z -- unknown -- ditty
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3939</link>
      <description>The Ditty  WordPress plugin before 3.1.36 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3939|2024-06-06T18:27:04.548Z</guid>
      <pubDate>Mon, 27 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3630|2024-06-04T17:31:39.784Z -- unknown -- hl%20twitter
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3630</link>
      <description>The HL Twitter WordPress plugin through 2014.1.18 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3630|2024-06-04T17:31:39.784Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3590|2024-05-09T06:00:02.736Z -- unknown -- letterpress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3590</link>
      <description>The LetterPress  WordPress plugin through 1.2.2 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks, such as delete arbitrary subscribers</description>
      <guid isPermaLink="false">CVE-2024-3590|2024-05-09T06:00:02.736Z</guid>
      <pubDate>Thu, 09 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3752|2024-06-04T17:31:31.718Z -- unknown -- crelly%20slider
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3752</link>
      <description>The Crelly Slider WordPress plugin through 1.4.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3752|2024-06-04T17:31:31.718Z</guid>
      <pubDate>Mon, 06 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3050|2024-06-04T17:31:26.567Z -- unknown -- site%20reviews
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3050</link>
      <description>The Site Reviews WordPress plugin before 7.0.0 retrieves client IP addresses from potentially untrusted headers, allowing an attacker to manipulate its value. This may be used to bypass IP-based blocking</description>
      <guid isPermaLink="false">CVE-2024-3050|2024-06-04T17:31:26.567Z</guid>
      <pubDate>Wed, 29 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3748|2024-06-11T18:53:59.679Z -- unknown -- sp%20project%20%26%20document%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3748</link>
      <description>The SP Project &amp; Document Manager WordPress plugin through 4.71 is missing validation in its upload function, allowing a user to manipulate the `user_id` to make it appear that a file was uploaded by another user</description>
      <guid isPermaLink="false">CVE-2024-3748|2024-06-11T18:53:59.679Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3477|2024-06-04T17:31:19.701Z -- unknown -- popup%20box
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3477</link>
      <description>The Popup Box  WordPress plugin before 2.2.7 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting popups via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3477|2024-06-04T17:31:19.701Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3637|2024-06-04T17:31:17.143Z -- unknown -- responsive%20contact%20form%20builder%20%26%20lead%20generation%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3637</link>
      <description>The Responsive Contact Form Builder &amp; Lead Generation Plugin WordPress plugin through 1.8.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-3637|2024-06-04T17:31:17.143Z</guid>
      <pubDate>Fri, 03 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3288|2024-06-07T10:01:18.328Z -- unknown -- logo%20slider
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3288</link>
      <description>The Logo Slider  WordPress plugin before 4.0.0 does not validate and escape some of its Slider Settings before outputting them back in attributes, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-3288|2024-06-07T10:01:18.328Z</guid>
      <pubDate>Fri, 07 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3231|2024-06-04T17:31:14.157Z -- unknown -- popup4phone
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3231</link>
      <description>The Popup4Phone WordPress plugin through 1.3.2 does not sanitise and escape some parameters, which could allow unauthenticated users to perform Cross-Site Scripting attacks against admins.</description>
      <guid isPermaLink="false">CVE-2024-3231|2024-06-04T17:31:14.157Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3548|2024-06-04T17:31:12.890Z -- unknown -- wp%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3548</link>
      <description>The WP Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 7.1.2 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-3548|2024-06-04T17:31:12.890Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3476|2024-05-02T06:00:03.114Z -- unknown -- side%20menu%20lite
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3476</link>
      <description>The Side Menu Lite  WordPress plugin before 4.2.1 does not have CSRF checks in some bulk actions, which could allow attackers to make logged in admins perform unwanted actions, such as deleting buttons via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-3476|2024-05-02T06:00:03.114Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3749|2024-06-04T17:31:08.986Z -- unknown -- sp%20project%20%26%20document%20manager
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3749</link>
      <description>The SP Project &amp; Document Manager WordPress plugin through 4.71 lacks proper access controllers and allows a logged in user to view and download files belonging to another user</description>
      <guid isPermaLink="false">CVE-2024-3749|2024-06-04T17:31:08.986Z</guid>
      <pubDate>Wed, 15 May 2024 06:00:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3641|2024-06-04T17:31:00.592Z -- unknown -- newsletter%20popup
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3641</link>
      <description>The Newsletter Popup WordPress plugin through 1.2 does not sanitise and escape some parameters, which could allow unauthenticated visitors to perform Cross-Site Scripting attacks against admins</description>
      <guid isPermaLink="false">CVE-2024-3641|2024-06-04T17:31:00.592Z</guid>
      <pubDate>Thu, 16 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3591|2024-06-04T17:30:56.764Z -- unknown -- geo%20controller
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3591</link>
      <description>The Geo Controller WordPress plugin before 8.6.5 unserializes user input via some of its AJAX actions and REST API routes, which could allow unauthenticated users to perform PHP Object Injection when a suitable gadget is present on the blog.</description>
      <guid isPermaLink="false">CVE-2024-3591|2024-06-04T17:30:56.764Z</guid>
      <pubDate>Wed, 01 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2439|2024-06-04T17:30:54.241Z -- unknown -- salon%20booking%20system
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2439</link>
      <description>The Salon booking system WordPress plugin through 9.6.5 does not sanitise and escape some of its settings, which could allow high privilege users such as Editor to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2439|2024-06-04T17:30:54.241Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2907|2024-04-25T05:00:01.952Z -- unknown -- agca
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2907</link>
      <description>The AGCA  WordPress plugin before 7.2.2 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-2907|2024-04-25T05:00:01.952Z</guid>
      <pubDate>Thu, 25 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2858|2024-04-15T05:00:06.077Z -- unknown -- simple%20buttons%20creator
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2858</link>
      <description>The Simple Buttons Creator WordPress plugin through 1.04 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2858|2024-04-15T05:00:06.077Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2101|2024-06-06T13:56:45.727Z -- unknown -- salon%20booking%20system
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2101</link>
      <description>The Salon booking system WordPress plugin before 9.6.3 does not properly sanitize and escape the 'Mobile Phone' field when booking an appointment, allowing customers to conduct Stored Cross-Site Scripting attacks. The payload gets triggered when an admin visits the 'Customers' page and the malicious script is executed in the admin context.</description>
      <guid isPermaLink="false">CVE-2024-2101|2024-06-06T13:56:45.727Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2697|2024-06-06T14:58:55.143Z -- unknown -- socialdriver-framework
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2697</link>
      <description>The socialdriver-framework WordPress plugin before 2024.0.0 does not validate and escape some of its shortcode attributes before outputting them back in the page, which could allow users with a role as low as contributor to perform Stored Cross-Site Scripting attacks which could be used against high privilege users such as admins.</description>
      <guid isPermaLink="false">CVE-2024-2697|2024-06-06T14:58:55.143Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2402|2024-06-04T17:30:32.727Z -- unknown -- better%20comments
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2402</link>
      <description>The Better Comments WordPress plugin before 1.5.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2402|2024-06-04T17:30:32.727Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2603|2024-06-04T17:30:27.591Z -- unknown -- salon%20booking%20system
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2603</link>
      <description>The Salon booking system WordPress plugin through 9.6.5 does not sanitise and escape some of its settings, which could allow high privilege users such as admin (or editor depending on Salon booking system WordPress plugin through 9.6.5 configuration) to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2603|2024-06-04T17:30:27.591Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2262|2024-04-01T05:00:01.688Z -- unknown -- themify
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2262</link>
      <description>Themify  WordPress plugin before 1.4.4 does not have CSRF check in its bulk action, which could allow attackers to make logged in users delete arbitrary filters via CSRF attack, granted they know the related filter slugs</description>
      <guid isPermaLink="false">CVE-2024-2262|2024-04-01T05:00:01.688Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2761|2024-06-04T17:30:22.068Z -- unknown -- genesis%20blocks
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2761</link>
      <description>The Genesis Blocks WordPress plugin before 3.1.3 does not properly escape data input provided to some of its blocks, allowing using with at least contributor privileges to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-2761|2024-06-04T17:30:22.068Z</guid>
      <pubDate>Fri, 19 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2583|2024-04-13T05:00:02.273Z -- unknown -- wp%20shortcodes%20plugin%20%E2%80%94%20shortcodes%20ultimate
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2583</link>
      <description>The WP Shortcodes Plugin — Shortcodes Ultimate WordPress plugin before 7.0.5 does not properly escape some of its shortcodes attributes before they are echoed back to users, making it possible for users with the contributor role to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-2583|2024-04-13T05:00:02.273Z</guid>
      <pubDate>Sat, 13 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2429|2024-04-26T05:00:02.847Z -- unknown -- salon%20booking%20system
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2429</link>
      <description>The Salon booking system WordPress plugin through 9.6.5 does not have CSRF check in place when updating its settings, which could allow attackers to make a logged in admin change them via a CSRF attack</description>
      <guid isPermaLink="false">CVE-2024-2429|2024-04-26T05:00:02.847Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2405|2024-05-02T06:00:02.127Z -- unknown -- float%20menu
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2405</link>
      <description>The Float menu  WordPress plugin before 6.0.1 does not have CSRF check in its bulk actions, which could allow attackers to make logged in admin delete arbitrary menu via a CSRF attack.</description>
      <guid isPermaLink="false">CVE-2024-2405|2024-05-02T06:00:02.127Z</guid>
      <pubDate>Thu, 02 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2278|2024-06-04T17:30:13.979Z -- unknown -- themify
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2278</link>
      <description>Themify  WordPress plugin before 1.4.4 does not sanitise and escape some of its Filters settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2278|2024-06-04T17:30:13.979Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2444|2024-04-08T17:28:12.009Z -- unknown -- inline%20related%20posts
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2444</link>
      <description>The Inline Related Posts WordPress plugin before 3.5.0 does not sanitise and escape some of its settings, which could allow high privilege users such as Admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2444|2024-04-08T17:28:12.009Z</guid>
      <pubDate>Sat, 06 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2404|2024-04-24T05:00:02.735Z -- unknown -- better%20comments
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2404</link>
      <description>The Better Comments WordPress plugin before 1.5.6 does not sanitise and escape some of its settings, which could allow low privilege users such as Subscribers to perform Stored Cross-Site Scripting attacks.</description>
      <guid isPermaLink="false">CVE-2024-2404|2024-04-24T05:00:02.735Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2428|2024-06-04T17:30:05.591Z -- unknown -- the%20ultimate%20video%20player%20for%20wordpress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2428</link>
      <description>The Ultimate Video Player For WordPress  WordPress plugin before 2.2.3 does not have proper capability check when updating its settings via a REST route, allowing Contributor and above users to update them. Furthermore, due to the lack of escaping in one of the settings, this also allows them to perform Stored XSS attacks</description>
      <guid isPermaLink="false">CVE-2024-2428|2024-06-04T17:30:05.591Z</guid>
      <pubDate>Wed, 10 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2310|2024-06-04T17:30:03.609Z -- unknown -- wp%20google%20review%20slider
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2310</link>
      <description>The WP Google Review Slider WordPress plugin before 13.6 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2310|2024-06-04T17:30:03.609Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2263|2024-04-01T05:00:02.150Z -- unknown -- themify
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2263</link>
      <description>Themify  WordPress plugin before 1.4.4 does not sanitise and escape a parameter before outputting it back in the page, leading to a Reflected Cross-Site Scripting which could be used against high privilege users such as admin</description>
      <guid isPermaLink="false">CVE-2024-2263|2024-04-01T05:00:02.150Z</guid>
      <pubDate>Mon, 01 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2189|2024-06-04T17:29:58.957Z -- unknown -- social%20icons%20widget%20%26%20block%20by%20wpzoom
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2189</link>
      <description>The Social Icons Widget &amp; Block by WPZOOM WordPress plugin before 4.2.18 does not sanitise and escape some of its Widget settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2189|2024-06-04T17:29:58.957Z</guid>
      <pubDate>Tue, 21 May 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2309|2024-04-17T05:00:03.096Z -- unknown -- wp%20staging%20wordpress%20backup%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2309</link>
      <description>The WP STAGING WordPress Backup Plugin  WordPress plugin before 3.4.0, wp-staging-pro WordPress plugin before 5.4.0 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2309|2024-04-17T05:00:03.096Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2470|2024-06-04T06:00:02.220Z -- unknown -- simple%20ajax%20chat
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2470</link>
      <description>The Simple Ajax Chat  WordPress plugin before 20240412 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2470|2024-06-04T06:00:02.220Z</guid>
      <pubDate>Tue, 04 Jun 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2739|2024-06-04T17:29:38.382Z -- unknown -- advanced%20search
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2739</link>
      <description>The Advanced Search WordPress plugin through 1.1.6 does not have CSRF checks in some places, which could allow attackers to make logged in users perform unwanted actions via CSRF attacks</description>
      <guid isPermaLink="false">CVE-2024-2739|2024-06-04T17:29:38.382Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2369|2024-06-04T17:29:37.945Z -- unknown -- page%20builder%20gutenberg%20blocks
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2369</link>
      <description>The Page Builder Gutenberg Blocks WordPress plugin before 3.1.7 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2369|2024-06-04T17:29:37.945Z</guid>
      <pubDate>Tue, 02 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2220|2024-06-04T17:29:31.304Z -- unknown -- button%20contact%20vr
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2220</link>
      <description>The Button contact VR WordPress plugin through 4.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2220|2024-06-04T17:29:31.304Z</guid>
      <pubDate>Thu, 23 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2102|2024-04-17T05:00:02.737Z -- unknown -- salon%20booking%20system
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2102</link>
      <description>The Salon booking system WordPress plugin before 9.6.3 does not properly sanitize and escape the 'Mobile Phone' field and 'sms_prefix' parameter when booking an appointment, allowing customers to conduct Stored Cross-Site Scripting attacks. The payload gets triggered when an admin visits the 'Bookings' page and the malicious script is executed in the admin context.</description>
      <guid isPermaLink="false">CVE-2024-2102|2024-04-17T05:00:02.737Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2505|2024-06-04T17:29:30.423Z -- unknown -- gamipress
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2505</link>
      <description>The GamiPress  WordPress plugin before 6.8.9's access control mechanism fails to properly restrict access to its settings, permitting Authors to manipulate requests and extend access to lower privileged users, like Subscribers, despite initial settings prohibiting such access. This vulnerability resembles broken access control, enabling unauthorized users to modify critical GamiPress  WordPress plugin before 6.8.9 configurations.</description>
      <guid isPermaLink="false">CVE-2024-2505|2024-06-04T17:29:30.423Z</guid>
      <pubDate>Mon, 29 Apr 2024 06:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2159|2024-06-04T17:29:21.015Z -- unknown -- social%20sharing%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2159</link>
      <description>The Social Sharing Plugin  WordPress plugin before 3.3.61 does not validate and escape some of its shortcode attributes before outputting them back in a page/post where the shortcode is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2159|2024-06-04T17:29:21.015Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2509|2024-06-10T17:46:21.566Z -- unknown -- gutenberg%20blocks%20by%20kadence%20blocks
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2509</link>
      <description>The Gutenberg Blocks by Kadence Blocks WordPress plugin before 3.2.26 does not validate and escape some of its block options before outputting them back in a page/post where the block is embed, which could allow users with the contributor role and above to perform Stored Cross-Site Scripting attacks</description>
      <guid isPermaLink="false">CVE-2024-2509|2024-06-10T17:46:21.566Z</guid>
      <pubDate>Fri, 05 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2118|2024-06-04T17:29:19.557Z -- unknown -- social%20media%20share%20buttons%20%26%20social%20sharing%20icons
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2118</link>
      <description>The Social Media Share Buttons &amp; Social Sharing Icons WordPress plugin before 2.8.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2118|2024-06-04T17:29:19.557Z</guid>
      <pubDate>Wed, 17 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2972|2024-04-24T05:00:02.929Z -- unknown -- floating%20chat%20widget%3A%20contact%20chat%20icons%2C%20whatsapp%2C%20telegram%20chat%2C%20line%20messenger%2C%20wechat%2C%20email%2C%20sms%2C%20call%20button
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2972</link>
      <description>The Floating Chat Widget: Contact Chat Icons, WhatsApp, Telegram Chat, Line Messenger, WeChat, Email, SMS, Call Button  WordPress plugin before 3.1.9 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup)</description>
      <guid isPermaLink="false">CVE-2024-2972|2024-04-24T05:00:02.929Z</guid>
      <pubDate>Wed, 24 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2837|2024-06-04T17:29:15.971Z -- unknown -- wp%20chat%20app
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2837</link>
      <description>The WP Chat App WordPress plugin before 3.6.4 does not sanitise and escape some of its settings, which could allow high privilege users such as admins to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2837|2024-06-04T17:29:15.971Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2749|2024-06-04T17:29:14.651Z -- unknown -- vikbooking%20hotel%20booking%20engine%20%26%20pms
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2749</link>
      <description>The VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8's access control mechanism fails to properly restrict access to its settings, permitting any users that can access a menu to manipulate requests and perform unauthorized actions such as editing, renaming or deleting (categories for example) despite initial settings prohibiting such access. This vulnerability resembles broken access control, enabling unauthorized users to modify critical VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8 configurations.</description>
      <guid isPermaLink="false">CVE-2024-2749|2024-06-04T17:29:14.651Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2836|2024-04-15T05:00:05.687Z -- unknown -- social%20share%2C%20social%20login%20and%20social%20comments%20plugin
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2836</link>
      <description>The Social Share, Social Login and Social Comments Plugin  WordPress plugin before 7.13.64 does not sanitise and escape some of its settings, which could allow high privilege users such as editors to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2836|2024-04-15T05:00:05.687Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2908|2024-06-06T15:37:10.068Z -- unknown -- call%20now%20button
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2908</link>
      <description>The Call Now Button  WordPress plugin before 1.4.7 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Stored Cross-Site Scripting attacks even when the unfiltered_html capability is disallowed (for example in multisite setup).</description>
      <guid isPermaLink="false">CVE-2024-2908|2024-06-06T15:37:10.068Z</guid>
      <pubDate>Fri, 26 Apr 2024 05:00:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2322|2024-04-08T17:28:01.688Z -- unknown -- woocommerce%20cart%20abandonment%20recovery
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2322</link>
      <description>The WooCommerce Cart Abandonment Recovery WordPress plugin before 1.2.27 does not have CSRF check in its bulk actions, which could allow attackers to make logged in admins delete arbitrary email templates as well as delete and unsubscribe users from abandoned orders via CSRF attacks.</description>
      <guid isPermaLink="false">CVE-2024-2322|2024-04-08T17:28:01.688Z</guid>
      <pubDate>Wed, 03 Apr 2024 05:00:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2744|2024-06-04T17:29:06.598Z -- unknown -- nextgen%20gallery
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2744</link>
      <description>The NextGEN Gallery  WordPress plugin before 3.59.1 does not sanitise and escape some of its settings, which could allow high privilege users such as admin to perform Cross-Site Scripting attacks even when unfiltered_html is disallowed</description>
      <guid isPermaLink="false">CVE-2024-2744|2024-06-04T17:29:06.598Z</guid>
      <pubDate>Fri, 17 May 2024 06:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2729|2024-06-04T17:29:03.422Z -- unknown -- otter%20blocks
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2729</link>
      <description>The Otter Blocks  WordPress plugin before 2.6.6 does not properly escape its mainHeadings blocks' attribute before appending it to the final rendered block, allowing contributors to conduct Stored XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-2729|2024-06-04T17:29:03.422Z</guid>
      <pubDate>Thu, 18 Apr 2024 05:00:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2857|2024-04-15T05:00:05.871Z -- unknown -- simple%20buttons%20creator
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2857</link>
      <description>The Simple Buttons Creator WordPress plugin through 1.04 does not have any authorisation as well as CSRF in its add button function, allowing unauthenticated users to call them either directly or via CSRF attacks. Furthermore, due to the lack of sanitisation and escaping, it could also allow them to perform Stored Cross-Site Scripting attacks against logged in admins.</description>
      <guid isPermaLink="false">CVE-2024-2857|2024-04-15T05:00:05.871Z</guid>
      <pubDate>Mon, 15 Apr 2024 05:00:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-2441|2024-06-04T17:29:00.183Z -- unknown -- vikbooking%20hotel%20booking%20engine%20%26%20pms
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2441</link>
      <description>The VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8 allows direct access to menus, allowing an authenticated user with subscriber privileges or above, to bypass authorization and access settings of the VikBooking Hotel Booking Engine &amp; PMS WordPress plugin before 1.6.8's they shouldn't be allowed to.</description>
      <guid isPermaLink="false">CVE-2024-2441|2024-06-04T17:29:00.183Z</guid>
      <pubDate>Fri, 10 May 2024 06:00:02 +0000</pubDate>
    </item>
  </channel>
</rss>

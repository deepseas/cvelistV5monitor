<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for fluture-js -- fluture-node</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/fluture-js/fluture-node.rss</link>
    <description>The latest CVEs for fluture-js -- fluture-node</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 08:24:10 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-24719|2024-08-03T04:20:50.235Z -- fluture-js -- fluture-node
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-24719</link>
      <description>Fluture-Node is a FP-style HTTP and streaming utils for Node based on Fluture. Using `followRedirects` or `followRedirectsWith` with any of the redirection strategies built into fluture-node 4.0.0 or 4.0.1, paired with a request that includes confidential headers such as Authorization or Cookie, exposes you to a vulnerability where, if the destination server were to redirect the request to a server on a third-party domain, or the same domain over unencrypted HTTP, the headers would be included in the follow-up request and be exposed to the third party, or potential http traffic sniffing. The redirection strategies made available in version 4.0.2 automatically redact confidential headers when a redirect is followed across to another origin. A workaround has been identified by using a custom redirection strategy via the `followRedirectsWith` function. The custom strategy can be based on the new strategies available in fluture-node@4.0.2.</description>
      <guid isPermaLink="false">CVE-2022-24719|2024-08-03T04:20:50.235Z</guid>
      <pubDate>Tue, 01 Mar 2022 20:20:13 +0000</pubDate>
    </item>
  </channel>
</rss>

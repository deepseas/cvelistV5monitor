<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Facebook -- Osquery</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/facebook/osquery.rss</link>
    <description>The latest CVEs for Facebook -- Osquery</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 20:23:17 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2019-3567|2024-08-04T19:12:09.500Z -- facebook -- osquery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-3567</link>
      <description>In some configurations an attacker can inject a new executable path into the extensions.load file for osquery and hard link a parent folder of a malicious binary to a folder with known 'safe' permissions. Under those circumstances osquery will load said malicious executable with SYSTEM permissions. The solution is to migrate installations to the 'Program Files' directory on Windows which restricts unprivileged write access. This issue affects osquery prior to v3.4.0.</description>
      <guid isPermaLink="false">CVE-2019-3567|2024-08-04T19:12:09.500Z</guid>
      <pubDate>Mon, 03 Jun 2019 18:22:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1887|2024-08-04T06:54:00.410Z -- facebook -- osquery
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1887</link>
      <description>Incorrect validation of the TLS SNI hostname in osquery versions after 2.9.0 and before 4.2.0 could allow an attacker to MITM osquery traffic in the absence of a configured root chain of trust.</description>
      <guid isPermaLink="false">CVE-2020-1887|2024-08-04T06:54:00.410Z</guid>
      <pubDate>Thu, 12 Mar 2020 23:50:15 +0000</pubDate>
    </item>
  </channel>
</rss>

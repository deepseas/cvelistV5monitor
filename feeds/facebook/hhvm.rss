<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Facebook -- HHVM</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/facebook/hhvm.rss</link>
    <description>The latest CVEs for Facebook -- HHVM</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 21:21:55 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2020-1898|2024-08-04T06:53:59.646Z -- facebook -- hhvm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1898</link>
      <description>The fb_unserialize function did not impose a depth limit for nested deserialization. That meant a maliciously constructed string could cause deserialization to recurse, leading to stack exhaustion. This issue affected HHVM prior to v4.32.3, between versions 4.33.0 and 4.56.0, 4.57.0, 4.58.0, 4.58.1, 4.59.0, 4.60.0, 4.61.0, 4.62.0.</description>
      <guid isPermaLink="false">CVE-2020-1898|2024-08-04T06:53:59.646Z</guid>
      <pubDate>Thu, 11 Mar 2021 00:55:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1919|2024-08-04T06:53:59.858Z -- facebook -- hhvm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1919</link>
      <description>Incorrect bounds calculations in substr_compare could lead to an out-of-bounds read when the second string argument passed in is longer than the first. This issue affects HHVM versions prior to 4.56.3, all versions between 4.57.0 and 4.80.1, all versions between 4.81.0 and 4.93.1, and versions 4.94.0, 4.95.0, 4.96.0, 4.97.0, 4.98.0.</description>
      <guid isPermaLink="false">CVE-2020-1919|2024-08-04T06:53:59.858Z</guid>
      <pubDate>Wed, 10 Mar 2021 15:50:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1921|2024-08-04T06:54:00.475Z -- facebook -- hhvm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1921</link>
      <description>In the crypt function, we attempt to null terminate a buffer using the size of the input salt without validating that the offset is within the buffer. This issue affects HHVM versions prior to 4.56.3, all versions between 4.57.0 and 4.80.1, all versions between 4.81.0 and 4.93.1, and versions 4.94.0, 4.95.0, 4.96.0, 4.97.0, 4.98.0.</description>
      <guid isPermaLink="false">CVE-2020-1921|2024-08-04T06:54:00.475Z</guid>
      <pubDate>Wed, 10 Mar 2021 15:50:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1893|2024-08-04T06:53:59.787Z -- facebook -- hhvm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1893</link>
      <description>Insufficient boundary checks when decoding JSON in TryParse reads out of bounds memory, potentially leading to DOS. This issue affects HHVM 4.45.0, 4.44.0, 4.43.0, 4.42.0, 4.41.0, 4.40.0, 4.39.0, versions between 4.33.0 and 4.38.0 (inclusive), versions between 4.9.0 and 4.32.0 (inclusive), and versions prior to 4.8.7.</description>
      <guid isPermaLink="false">CVE-2020-1893|2024-08-04T06:53:59.787Z</guid>
      <pubDate>Tue, 03 Mar 2020 15:00:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-3569|2024-08-04T19:12:09.483Z -- facebook -- hhvm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-3569</link>
      <description>HHVM, when used with FastCGI, would bind by default to all available interfaces. This behavior could allow a malicious individual unintended direct access to the application, which could result in information disclosure. This issue affects versions 4.3.0, 4.4.0, 4.5.0, 4.6.0, 4.7.0, 4.8.0, versions 3.30.5 and below, and all versions in the 4.0, 4.1, and 4.2 series.</description>
      <guid isPermaLink="false">CVE-2019-3569|2024-08-04T19:12:09.483Z</guid>
      <pubDate>Wed, 26 Jun 2019 15:09:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-3570|2024-08-04T19:12:09.495Z -- facebook -- hhvm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-3570</link>
      <description>Call to the scrypt_enc() function in HHVM can lead to heap corruption by using specifically crafted parameters (N, r and p). This happens if the parameters are configurable by an attacker for instance by providing the output of scrypt_enc() in a context where Hack/PHP code would attempt to verify it by re-running scrypt_enc() with the same parameters. This could result in information disclosure, memory being overwriten or crashes of the HHVM process. This issue affects versions 4.3.0, 4.4.0, 4.5.0, 4.6.0, 4.7.0, 4.8.0, versions 3.30.5 and below, and all versions in the 4.0, 4.1, and 4.2 series.</description>
      <guid isPermaLink="false">CVE-2019-3570|2024-08-04T19:12:09.495Z</guid>
      <pubDate>Thu, 18 Jul 2019 15:42:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1918|2024-08-04T06:53:59.798Z -- facebook -- hhvm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1918</link>
      <description>In-memory file operations (ie: using fopen on a data URI) did not properly restrict negative seeking, allowing for the reading of memory prior to the in-memory buffer. This issue affects HHVM versions prior to 4.56.3, all versions between 4.57.0 and 4.80.1, all versions between 4.81.0 and 4.93.1, and versions 4.94.0, 4.95.0, 4.96.0, 4.97.0, 4.98.0.</description>
      <guid isPermaLink="false">CVE-2020-1918|2024-08-04T06:53:59.798Z</guid>
      <pubDate>Wed, 10 Mar 2021 15:50:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1900|2024-08-04T06:54:00.541Z -- facebook -- hhvm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1900</link>
      <description>When unserializing an object with dynamic properties HHVM needs to pre-reserve the full size of the dynamic property array before inserting anything into it. Otherwise the array might resize, invalidating previously stored references. This pre-reservation was not occurring in HHVM prior to v4.32.3, between versions 4.33.0 and 4.56.0, 4.57.0, 4.58.0, 4.58.1, 4.59.0, 4.60.0, 4.61.0, 4.62.0.</description>
      <guid isPermaLink="false">CVE-2020-1900|2024-08-04T06:54:00.541Z</guid>
      <pubDate>Thu, 11 Mar 2021 00:55:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1892|2024-08-04T06:53:59.519Z -- facebook -- hhvm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1892</link>
      <description>Insufficient boundary checks when decoding JSON in JSON_parser allows read access to out of bounds memory, potentially leading to information leak and DOS. This issue affects HHVM 4.45.0, 4.44.0, 4.43.0, 4.42.0, 4.41.0, 4.40.0, 4.39.0, versions between 4.33.0 and 4.38.0 (inclusive), versions between 4.9.0 and 4.32.0 (inclusive), and versions prior to 4.8.7.</description>
      <guid isPermaLink="false">CVE-2020-1892|2024-08-04T06:53:59.519Z</guid>
      <pubDate>Tue, 03 Mar 2020 15:00:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1916|2024-08-04T06:54:00.370Z -- facebook -- hhvm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1916</link>
      <description>An incorrect size calculation in ldap_escape may lead to an integer overflow when overly long input is passed in, resulting in an out-of-bounds write. This issue affects HHVM prior to 4.56.2, all versions between 4.57.0 and 4.78.0, 4.79.0, 4.80.0, 4.81.0, 4.82.0, 4.83.0.</description>
      <guid isPermaLink="false">CVE-2020-1916|2024-08-04T06:54:00.370Z</guid>
      <pubDate>Wed, 10 Mar 2021 15:50:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-3561|2024-08-04T19:12:09.501Z -- facebook -- hhvm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-3561</link>
      <description>Insufficient boundary checks for the strrpos and strripos functions allow access to out-of-bounds memory. This affects all supported versions of HHVM (4.0.3, 3.30.4, and 3.27.7 and below).</description>
      <guid isPermaLink="false">CVE-2019-3561|2024-08-04T19:12:09.501Z</guid>
      <pubDate>Mon, 29 Apr 2019 15:32:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1899|2024-08-04T06:53:59.985Z -- facebook -- hhvm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1899</link>
      <description>The unserialize() function supported a type code, "S", which was meant to be supported only for APC serialization. This type code allowed arbitrary memory addresses to be accessed as if they were static StringData objects. This issue affected HHVM prior to v4.32.3, between versions 4.33.0 and 4.56.0, 4.57.0, 4.58.0, 4.58.1, 4.59.0, 4.60.0, 4.61.0, 4.62.0.</description>
      <guid isPermaLink="false">CVE-2020-1899|2024-08-04T06:53:59.985Z</guid>
      <pubDate>Thu, 11 Mar 2021 00:55:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1888|2024-08-04T06:53:59.615Z -- facebook -- hhvm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1888</link>
      <description>Insufficient boundary checks when decoding JSON in handleBackslash reads out of bounds memory, potentially leading to DOS. This issue affects HHVM 4.45.0, 4.44.0, 4.43.0, 4.42.0, 4.41.0, 4.40.0, 4.39.0, versions between 4.33.0 and 4.38.0 (inclusive), versions between 4.9.0 and 4.32.0 (inclusive), and versions prior to 4.8.7.</description>
      <guid isPermaLink="false">CVE-2020-1888|2024-08-04T06:53:59.615Z</guid>
      <pubDate>Tue, 03 Mar 2020 15:00:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1917|2024-08-04T06:53:59.921Z -- facebook -- hhvm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1917</link>
      <description>xbuf_format_converter, used as part of exif_read_data, was appending a terminating null character to the generated string, but was not using its standard append char function. As a result, if the buffer was full, it would result in an out-of-bounds write. This issue affects HHVM versions prior to 4.56.3, all versions between 4.57.0 and 4.80.1, all versions between 4.81.0 and 4.93.1, and versions 4.94.0, 4.95.0, 4.96.0, 4.97.0, 4.98.0.</description>
      <guid isPermaLink="false">CVE-2020-1917|2024-08-04T06:53:59.921Z</guid>
      <pubDate>Wed, 10 Mar 2021 15:50:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-3557|2024-08-04T19:12:09.545Z -- facebook -- hhvm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-3557</link>
      <description>The implementations of streams for bz2 and php://output improperly implemented their readImpl functions, returning -1 consistently. This behavior caused some stream functions, such as stream_get_line, to trigger an out-of-bounds read when operating on such malformed streams. The implementations were updated to return valid values consistently. This affects all supported versions of HHVM (3.30 and 3.27.4 and below).</description>
      <guid isPermaLink="false">CVE-2019-3557|2024-08-04T19:12:09.545Z</guid>
      <pubDate>Tue, 15 Jan 2019 22:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-3556|2024-08-04T19:12:09.554Z -- facebook -- hhvm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-3556</link>
      <description>HHVM supports the use of an "admin" server which accepts administrative requests over HTTP. One of those request handlers, dump-pcre-cache, can be used to output cached regular expressions from the current execution context into a file. The handler takes a parameter which specifies where on the filesystem to write this data. The parameter is not validated, allowing a malicious user to overwrite arbitrary files where the user running HHVM has write access. This issue affects HHVM versions prior to 4.56.2, all versions between 4.57.0 and 4.78.0, as well as 4.79.0, 4.80.0, 4.81.0, 4.82.0, and 4.83.0.</description>
      <guid isPermaLink="false">CVE-2019-3556|2024-08-04T19:12:09.554Z</guid>
      <pubDate>Tue, 26 Oct 2021 20:05:10 +0000</pubDate>
    </item>
  </channel>
</rss>

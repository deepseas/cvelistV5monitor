<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Facebook -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/facebook/all.rss</link>
    <description>The latest CVEs for Facebook -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 23:22:56 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2021-24035|2024-08-03T19:21:17.185Z -- facebook -- whatsapp%20business%20for%20android
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24035</link>
      <description>A lack of filename validation when unzipping archives prior to WhatsApp for Android v2.21.8.13 and WhatsApp Business for Android v2.21.8.13 could have allowed path traversal attacks that overwrite WhatsApp files.</description>
      <guid isPermaLink="false">CVE-2021-24035|2024-08-03T19:21:17.185Z</guid>
      <pubDate>Fri, 11 Jun 2021 03:35:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-27810|2024-08-03T05:32:59.901Z -- facebook -- hermes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-27810</link>
      <description>It was possible to trigger an infinite recursion condition in the error handler when Hermes executed specific maliciously formed JavaScript. This condition was only possible to trigger in dev-mode (when asserts were enabled). This issue affects Hermes versions prior to v0.12.0.</description>
      <guid isPermaLink="false">CVE-2022-27810|2024-08-03T05:32:59.901Z</guid>
      <pubDate>Thu, 06 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24045|2024-08-03T19:21:17.287Z -- facebook -- hermes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24045</link>
      <description>A type confusion vulnerability could be triggered when resolving the "typeof" unary operator in Facebook Hermes prior to v0.10.0. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.</description>
      <guid isPermaLink="false">CVE-2021-24045|2024-08-03T19:21:17.287Z</guid>
      <pubDate>Mon, 13 Dec 2021 20:30:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24036|2024-08-03T19:21:17.359Z -- facebook -- folly
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24036</link>
      <description>Passing an attacker controlled size when creating an IOBuf could cause integer overflow, leading to an out of bounds write on the heap with the possibility of remote code execution. This issue affects versions of folly prior to v2021.07.22.00. This issue affects HHVM versions prior to 4.80.5, all versions between 4.81.0 and 4.102.1, all versions between 4.103.0 and 4.113.0, and versions 4.114.0, 4.115.0, 4.116.0, 4.117.0, 4.118.0 and 4.118.1.</description>
      <guid isPermaLink="false">CVE-2021-24036|2024-08-03T19:21:17.359Z</guid>
      <pubDate>Fri, 23 Jul 2021 00:30:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24040|2024-08-03T19:21:17.219Z -- facebook -- parlai
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24040</link>
      <description>Due to use of unsafe YAML deserialization logic, an attacker with the ability to modify local YAML configuration files could provide malicious input, resulting in remote code execution or similar risks. This issue affects ParlAI prior to v1.1.0.</description>
      <guid isPermaLink="false">CVE-2021-24040|2024-08-03T19:21:17.219Z</guid>
      <pubDate>Fri, 10 Sep 2021 22:10:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24037|2024-08-03T19:21:17.277Z -- facebook -- hermes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24037</link>
      <description>A use after free in hermes, while emitting certain error messages, prior to commit d86e185e485b6330216dee8e854455c694e3a36e allows attackers to potentially execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.</description>
      <guid isPermaLink="false">CVE-2021-24037|2024-08-03T19:21:17.277Z</guid>
      <pubDate>Tue, 15 Jun 2021 22:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-32234|2024-08-03T07:39:49.627Z -- facebook -- hermes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-32234</link>
      <description>An out of bounds write in hermes, while handling large arrays, prior to commit 06eaec767e376bfdb883d912cb15e987ddf2bda1 allows attackers to potentially execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.</description>
      <guid isPermaLink="false">CVE-2022-32234|2024-08-03T07:39:49.627Z</guid>
      <pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24030|2024-08-03T19:21:17.165Z -- facebook -- facebook%20gameroom
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24030</link>
      <description>The fbgames protocol handler registered as part of Facebook Gameroom does not properly quote arguments passed to the executable. That allows a malicious URL to cause code execution. This issue affects versions prior to v1.26.0.</description>
      <guid isPermaLink="false">CVE-2021-24030|2024-08-03T19:21:17.165Z</guid>
      <pubDate>Wed, 10 Mar 2021 15:50:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24042|2024-08-03T19:21:17.296Z -- facebook -- whatsapp%20desktop
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24042</link>
      <description>The calling logic for WhatsApp for Android prior to v2.21.23, WhatsApp Business for Android prior to v2.21.23, WhatsApp for iOS prior to v2.21.230, WhatsApp Business for iOS prior to v2.21.230, WhatsApp for KaiOS prior to v2.2143, WhatsApp Desktop prior to v2.2146 could have allowed an out-of-bounds write if a user makes a 1:1 call to a malicious actor.</description>
      <guid isPermaLink="false">CVE-2021-24042|2024-08-03T19:21:17.296Z</guid>
      <pubDate>Tue, 04 Jan 2022 18:55:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24044|2024-08-03T19:21:17.267Z -- facebook -- hermes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24044</link>
      <description>By passing invalid javascript code where await and yield were called upon non-async and non-generator getter/setter functions, Hermes would invoke generator functions and error out on invalid await/yield positions. This could result in segmentation fault as a consequence of type confusion error, with a low chance of RCE. This issue affects Hermes versions prior to v0.10.0.</description>
      <guid isPermaLink="false">CVE-2021-24044|2024-08-03T19:21:17.267Z</guid>
      <pubDate>Sat, 15 Jan 2022 00:35:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24025|2024-08-03T19:14:10.116Z -- facebook -- hhvm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24025</link>
      <description>Due to incorrect string size calculations inside the preg_quote function, a large input string passed to the function can trigger an integer overflow leading to a heap overflow. This issue affects HHVM versions prior to 4.56.3, all versions between 4.57.0 and 4.80.1, all versions between 4.81.0 and 4.93.1, and versions 4.94.0, 4.95.0, 4.96.0, 4.97.0, 4.98.0.</description>
      <guid isPermaLink="false">CVE-2021-24025|2024-08-03T19:14:10.116Z</guid>
      <pubDate>Wed, 10 Mar 2021 15:50:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-35289|2024-08-03T09:36:43.334Z -- facebook -- hermes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-35289</link>
      <description>A write-what-where condition in hermes caused by an integer overflow, prior to commit 5b6255ae049fa4641791e47fad994e8e8c4da374 allows attackers to potentially execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.</description>
      <guid isPermaLink="false">CVE-2022-35289|2024-08-03T09:36:43.334Z</guid>
      <pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24029|2024-08-03T19:21:17.115Z -- facebook -- mvfst
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24029</link>
      <description>A packet of death scenario is possible in mvfst via a specially crafted message during a QUIC session, which causes a crash via a failed assertion. Per QUIC specification, this particular message should be treated as a connection error. This issue affects mvfst versions prior to commit a67083ff4b8dcbb7ee2839da6338032030d712b0 and proxygen versions prior to v2021.03.15.00.</description>
      <guid isPermaLink="false">CVE-2021-24029|2024-08-03T19:21:17.115Z</guid>
      <pubDate>Mon, 15 Mar 2021 21:15:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24027|2024-08-03T19:21:17.148Z -- facebook -- whatsapp%20business%20for%20android
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24027</link>
      <description>A cache configuration issue prior to WhatsApp for Android v2.21.4.18 and WhatsApp Business for Android v2.21.4.18 may have allowed a third party with access to the deviceâ€™s external storage to read cached TLS material.</description>
      <guid isPermaLink="false">CVE-2021-24027|2024-08-03T19:21:17.148Z</guid>
      <pubDate>Tue, 06 Apr 2021 16:45:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-36937|2024-08-03T10:21:32.009Z -- facebook -- hhvm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-36937</link>
      <description>HHVM 4.172.0 and all prior versions use TLS 1.0 for secure connections when handling tls:// URLs in the stream extension. TLS1.0 has numerous published vulnerabilities and is deprecated. HHVM 4.153.4, 4.168.2, 4.169.2, 4.170.2, 4.171.1, 4.172.1, 4.173.0 replaces TLS1.0 with TLS1.3.

Applications that call stream_socket_server or stream_socket_client functions with a URL starting with tls:// are affected.</description>
      <guid isPermaLink="false">CVE-2022-36937|2024-08-03T10:21:32.009Z</guid>
      <pubDate>Wed, 10 May 2023 18:28:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-36938|2024-08-03T10:21:31.918Z -- facebook -- redex
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-36938</link>
      <description>DexLoader function get_stringidx_fromdex() in Redex prior to commit 3b44c64 can load an out of bound address when loading the string index table, potentially allowing remote code execution during processing of a 3rd party Android APK file.</description>
      <guid isPermaLink="false">CVE-2022-36938|2024-08-03T10:21:31.918Z</guid>
      <pubDate>Thu, 10 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-40138|2024-08-03T12:14:39.797Z -- facebook -- hermes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-40138</link>
      <description>An integer conversion error in Hermes bytecode generation, prior to commit 6aa825e480d48127b480b08d13adf70033237097, could have been used to perform Out-Of-Bounds operations and subsequently execute arbitrary code. Note that this is only exploitable in cases where Hermes is used to execute untrusted JavaScript. Hence, most React Native applications are not affected.</description>
      <guid isPermaLink="false">CVE-2022-40138|2024-08-03T12:14:39.797Z</guid>
      <pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24026|2024-08-03T19:21:17.055Z -- facebook -- whatsapp%20business%20for%20ios
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24026</link>
      <description>A missing bounds check within the audio decoding pipeline for WhatsApp calls in WhatsApp for Android prior to v2.21.3, WhatsApp Business for Android prior to v2.21.3, WhatsApp for iOS prior to v2.21.32, and WhatsApp Business for iOS prior to v2.21.32 could have allowed an out-of-bounds write.</description>
      <guid isPermaLink="false">CVE-2021-24026|2024-08-03T19:21:17.055Z</guid>
      <pubDate>Tue, 06 Apr 2021 16:45:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24032|2024-08-03T19:21:17.115Z -- facebook -- zstandard
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24032</link>
      <description>Beginning in v1.4.1 and prior to v1.4.9, due to an incomplete fix for CVE-2021-24031, the Zstandard command-line utility created output files with default permissions and restricted those permissions immediately afterwards. Output files could therefore momentarily be readable or writable to unintended parties.</description>
      <guid isPermaLink="false">CVE-2021-24032|2024-08-03T19:21:17.115Z</guid>
      <pubDate>Thu, 04 Mar 2021 20:15:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24033|2024-08-03T19:21:17.286Z -- facebook -- react-dev-utils
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24033</link>
      <description>react-dev-utils prior to v11.0.4 exposes a function, getProcessForPort, where an input argument is concatenated into a command string to be executed. This function is typically used from react-scripts (in Create React App projects), where the usage is safe. Only when this function is manually invoked with user-provided values (ie: by custom code) is there the potential for command injection. If you're consuming it from react-scripts then this issue does not affect you.</description>
      <guid isPermaLink="false">CVE-2021-24033|2024-08-03T19:21:17.286Z</guid>
      <pubDate>Tue, 09 Mar 2021 00:25:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24041|2024-08-03T19:21:17.331Z -- facebook -- whatsapp%20business%20for%20android
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24041</link>
      <description>A missing bounds check in image blurring code prior to WhatsApp for Android v2.21.22.7 and WhatsApp Business for Android v2.21.22.7 could have allowed an out-of-bounds write if a user sent a malicious image.</description>
      <guid isPermaLink="false">CVE-2021-24041|2024-08-03T19:21:17.331Z</guid>
      <pubDate>Tue, 07 Dec 2021 19:10:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24038|2024-08-03T19:21:17.297Z -- facebook -- oculus%20desktop
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24038</link>
      <description>Due to a bug with management of handles in OVRServiceLauncher.exe, an attacker could expose a privileged process handle to an unprivileged process, leading to local privilege escalation. This issue affects Oculus Desktop versions after 1.39 and prior to 31.1.0.67.507.</description>
      <guid isPermaLink="false">CVE-2021-24038|2024-08-03T19:21:17.297Z</guid>
      <pubDate>Wed, 18 Aug 2021 23:35:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24031|2024-08-03T19:21:17.205Z -- facebook -- zstandard
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24031</link>
      <description>In the Zstandard command-line utility prior to v1.4.1, output files were created with default permissions. Correct file permissions (matching the input) would only be set at completion time. Output files could therefore be readable or writable to unintended parties.</description>
      <guid isPermaLink="false">CVE-2021-24031|2024-08-03T19:21:17.205Z</guid>
      <pubDate>Thu, 04 Mar 2021 20:15:21 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24028|2024-08-03T19:21:17.258Z -- facebook -- facebook%20thrift
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24028</link>
      <description>An invalid free in Thrift's table-based serialization can cause the application to crash or potentially result in code execution or other undesirable effects. This issue affects Facebook Thrift prior to v2021.02.22.00.</description>
      <guid isPermaLink="false">CVE-2021-24028|2024-08-03T19:21:17.258Z</guid>
      <pubDate>Tue, 13 Apr 2021 23:20:13 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Facebook -- Hermes</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/facebook/hermes.rss</link>
    <description>The latest CVEs for Facebook -- Hermes</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 09:23:44 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-27810|2024-08-03T05:32:59.901Z -- facebook -- hermes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-27810</link>
      <description>It was possible to trigger an infinite recursion condition in the error handler when Hermes executed specific maliciously formed JavaScript. This condition was only possible to trigger in dev-mode (when asserts were enabled). This issue affects Hermes versions prior to v0.12.0.</description>
      <guid isPermaLink="false">CVE-2022-27810|2024-08-03T05:32:59.901Z</guid>
      <pubDate>Thu, 06 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-32234|2024-08-03T07:39:49.627Z -- facebook -- hermes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-32234</link>
      <description>An out of bounds write in hermes, while handling large arrays, prior to commit 06eaec767e376bfdb883d912cb15e987ddf2bda1 allows attackers to potentially execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.</description>
      <guid isPermaLink="false">CVE-2022-32234|2024-08-03T07:39:49.627Z</guid>
      <pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>

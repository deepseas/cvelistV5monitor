<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Facebook -- Hermes</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/facebook/hermes.rss</link>
    <description>The latest CVEs for Facebook -- Hermes</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 17:22:00 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2020-1915|2024-08-04T06:53:59.849Z -- facebook -- hermes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1915</link>
      <description>An out-of-bounds read in the JavaScript Interpreter in Facebook Hermes prior to commit 8cb935cd3b2321c46aa6b7ed8454d95c75a7fca0 allows attackers to cause a denial of service attack or possible further memory corruption via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.</description>
      <guid isPermaLink="false">CVE-2020-1915|2024-08-04T06:53:59.849Z</guid>
      <pubDate>Mon, 26 Oct 2020 20:20:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1913|2024-08-04T06:53:59.912Z -- facebook -- hermes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1913</link>
      <description>An Integer signedness error in the JavaScript Interpreter in Facebook Hermes prior to commit 2c7af7ec481ceffd0d14ce2d7c045e475fd71dc6 allows attackers to cause a denial of service attack or a potential RCE via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.</description>
      <guid isPermaLink="false">CVE-2020-1913|2024-08-04T06:53:59.912Z</guid>
      <pubDate>Wed, 09 Sep 2020 19:00:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1911|2024-08-04T06:53:59.783Z -- facebook -- hermes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1911</link>
      <description>A type confusion vulnerability when resolving properties of JavaScript objects with specially-crafted prototype chains in Facebook Hermes prior to commit fe52854cdf6725c2eaa9e125995da76e6ceb27da allows attackers to potentially execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.</description>
      <guid isPermaLink="false">CVE-2020-1911|2024-08-04T06:53:59.783Z</guid>
      <pubDate>Fri, 04 Sep 2020 02:35:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1896|2024-08-04T06:53:59.880Z -- facebook -- hermes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1896</link>
      <description>A stack overflow vulnerability in Facebook Hermes 'builtin apply' prior to commit 86543ac47e59c522976b5632b8bf9a2a4583c7d2 (https://github.com/facebook/hermes/commit/86543ac47e59c522976b5632b8bf9a2a4583c7d2) allows attackers to potentially execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.</description>
      <guid isPermaLink="false">CVE-2020-1896|2024-08-04T06:53:59.880Z</guid>
      <pubDate>Tue, 02 Feb 2021 06:50:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1912|2024-08-04T06:54:00.338Z -- facebook -- hermes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1912</link>
      <description>An out-of-bounds read/write vulnerability when executing lazily compiled inner generator functions in Facebook Hermes prior to commit 091835377369c8fd5917d9b87acffa721ad2a168 allows attackers to potentially execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.</description>
      <guid isPermaLink="false">CVE-2020-1912|2024-08-04T06:54:00.338Z</guid>
      <pubDate>Wed, 09 Sep 2020 18:50:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1914|2024-08-04T06:53:59.745Z -- facebook -- hermes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1914</link>
      <description>A logic vulnerability when handling the SaveGeneratorLong instruction in Facebook Hermes prior to commit b2021df620824627f5a8c96615edbd1eb7fdddfc allows attackers to potentially read out of bounds or theoretically execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.</description>
      <guid isPermaLink="false">CVE-2020-1914|2024-08-04T06:53:59.745Z</guid>
      <pubDate>Thu, 08 Oct 2020 18:50:11 +0000</pubDate>
    </item>
  </channel>
</rss>

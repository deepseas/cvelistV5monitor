<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Facebook -- Hermes</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/facebook/hermes.rss</link>
    <description>The latest CVEs for Facebook -- Hermes</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 23:23:10 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-27810|2024-08-03T05:32:59.901Z -- facebook -- hermes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-27810</link>
      <description>It was possible to trigger an infinite recursion condition in the error handler when Hermes executed specific maliciously formed JavaScript. This condition was only possible to trigger in dev-mode (when asserts were enabled). This issue affects Hermes versions prior to v0.12.0.</description>
      <guid isPermaLink="false">CVE-2022-27810|2024-08-03T05:32:59.901Z</guid>
      <pubDate>Thu, 06 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24045|2024-08-03T19:21:17.287Z -- facebook -- hermes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24045</link>
      <description>A type confusion vulnerability could be triggered when resolving the "typeof" unary operator in Facebook Hermes prior to v0.10.0. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.</description>
      <guid isPermaLink="false">CVE-2021-24045|2024-08-03T19:21:17.287Z</guid>
      <pubDate>Mon, 13 Dec 2021 20:30:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24037|2024-08-03T19:21:17.277Z -- facebook -- hermes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24037</link>
      <description>A use after free in hermes, while emitting certain error messages, prior to commit d86e185e485b6330216dee8e854455c694e3a36e allows attackers to potentially execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.</description>
      <guid isPermaLink="false">CVE-2021-24037|2024-08-03T19:21:17.277Z</guid>
      <pubDate>Tue, 15 Jun 2021 22:00:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-32234|2024-08-03T07:39:49.627Z -- facebook -- hermes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-32234</link>
      <description>An out of bounds write in hermes, while handling large arrays, prior to commit 06eaec767e376bfdb883d912cb15e987ddf2bda1 allows attackers to potentially execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.</description>
      <guid isPermaLink="false">CVE-2022-32234|2024-08-03T07:39:49.627Z</guid>
      <pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-24044|2024-08-03T19:21:17.267Z -- facebook -- hermes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-24044</link>
      <description>By passing invalid javascript code where await and yield were called upon non-async and non-generator getter/setter functions, Hermes would invoke generator functions and error out on invalid await/yield positions. This could result in segmentation fault as a consequence of type confusion error, with a low chance of RCE. This issue affects Hermes versions prior to v0.10.0.</description>
      <guid isPermaLink="false">CVE-2021-24044|2024-08-03T19:21:17.267Z</guid>
      <pubDate>Sat, 15 Jan 2022 00:35:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-35289|2024-08-03T09:36:43.334Z -- facebook -- hermes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-35289</link>
      <description>A write-what-where condition in hermes caused by an integer overflow, prior to commit 5b6255ae049fa4641791e47fad994e8e8c4da374 allows attackers to potentially execute arbitrary code via crafted JavaScript. Note that this is only exploitable if the application using Hermes permits evaluation of untrusted JavaScript. Hence, most React Native applications are not affected.</description>
      <guid isPermaLink="false">CVE-2022-35289|2024-08-03T09:36:43.334Z</guid>
      <pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-40138|2024-08-03T12:14:39.797Z -- facebook -- hermes
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-40138</link>
      <description>An integer conversion error in Hermes bytecode generation, prior to commit 6aa825e480d48127b480b08d13adf70033237097, could have been used to perform Out-Of-Bounds operations and subsequently execute arbitrary code. Note that this is only exploitable in cases where Hermes is used to execute untrusted JavaScript. Hence, most React Native applications are not affected.</description>
      <guid isPermaLink="false">CVE-2022-40138|2024-08-03T12:14:39.797Z</guid>
      <pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>

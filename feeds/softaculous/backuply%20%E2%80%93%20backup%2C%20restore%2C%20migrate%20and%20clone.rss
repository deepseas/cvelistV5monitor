<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for softaculous -- Backuply – Backup, Restore, Migrate and Clone</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/softaculous/backuply%20%E2%80%93%20backup%2C%20restore%2C%20migrate%20and%20clone.rss</link>
    <description>The latest CVEs for softaculous -- Backuply – Backup, Restore, Migrate and Clone</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Mon, 16 Sep 2024 20:23:54 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-8669|2024-09-16T19:39:31.329Z -- softaculous -- backuply%20%E2%80%93%20backup%2C%20restore%2C%20migrate%20and%20clone
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-8669</link>
      <description>The Backuply – Backup, Restore, Migrate and Clone plugin for WordPress is vulnerable to SQL Injection via the 'options' parameter passed to the backuply_wp_clone_sql() function in all versions up to, and including, 1.3.4 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with administrator-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description>
      <guid isPermaLink="false">CVE-2024-8669|2024-09-16T19:39:31.329Z</guid>
      <pubDate>Sat, 14 Sep 2024 03:30:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-8669|2024-09-14T03:30:05.621Z -- softaculous -- backuply%20%E2%80%93%20backup%2C%20restore%2C%20migrate%20and%20clone</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-8669</link>
      <description>The Backuply – Backup, Restore, Migrate and Clone plugin for WordPress is vulnerable to SQL Injection via the 'options' parameter passed to the backuply_wp_clone_sql() function in all versions up to, and including, 1.3.4 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for authenticated attackers, with administrator-level access and above, to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description>
      <guid isPermaLink="false">CVE-2024-8669|2024-09-14T03:30:05.621Z</guid>
      <pubDate>Sat, 14 Sep 2024 03:30:05 +0000</pubDate>
    </item>
  </channel>
</rss>

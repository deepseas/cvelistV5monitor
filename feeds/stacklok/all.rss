<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for stacklok -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/stacklok/all.rss</link>
    <description>The latest CVEs for stacklok -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Tue, 27 Aug 2024 23:22:36 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-27093|2024-08-27T19:43:28.099Z -- stacklok -- minder
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27093</link>
      <description>Minder is a Software Supply Chain Security Platform. In version 0.0.31 and earlier, it is possible for an attacker to register a repository with a invalid or differing upstream ID, which causes Minder to report the repository as registered, but not remediate any future changes which conflict with policy (because the webhooks for the repo do not match any known repository in the database).  When attempting to register a repo with a different repo ID, the registered provider must have admin on the named repo, or a 404 error will result.  Similarly, if the stored provider token does not have repo access, then the remediations will not apply successfully.  Lastly, it appears that reconciliation actions do not execute against repos with this type of mismatch. This appears to primarily be a potential denial-of-service vulnerability.  This vulnerability is patched in version 0.20240226.1425+ref.53868a8.</description>
      <guid isPermaLink="false">CVE-2024-27093|2024-08-27T19:43:28.099Z</guid>
      <pubDate>Mon, 26 Feb 2024 21:57:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27916|2024-08-02T19:39:30.349Z -- stacklok -- minder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27916</link>
      <description>Minder is a software supply chain security platform. Prior to version 0.0.33, a Minder user can use the endpoints `GetRepositoryByName`, `DeleteRepositoryByName`, and `GetArtifactByName` to access any repository in the database, irrespective of who owns the repo and any permissions present. The database query checks by repo owner, repo name and provider name (which is always `github`). These query values are not distinct for the particular user - as long as the user has valid credentials and a provider, they can set the repo owner/name to any value they want and the server will return information on this repo. Version 0.0.33 contains a patch for this issue.</description>
      <guid isPermaLink="false">CVE-2024-27916|2024-08-02T19:39:30.349Z</guid>
      <pubDate>Wed, 06 Mar 2024 20:21:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-35238|2024-08-02T03:07:46.934Z -- stacklok -- minder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-35238</link>
      <description>Minder by Stacklok is an open source software supply chain security platform. Minder prior to version 0.0.51 is vulnerable to a denial-of-service (DoS) attack which could allow an attacker to crash the Minder server and deny other users access to it. The root cause of the vulnerability is that Minders sigstore verifier reads an untrusted response entirely into memory without enforcing a limit on the response body. An attacker can exploit this by making Minder make a request to an attacker-controlled endpoint which returns a response with a large body which will crash the Minder server. Specifically, the point of failure is where Minder parses the response from the GitHub attestations endpoint in `getAttestationReply`. Here, Minder makes a request to the `orgs/$owner/attestations/$checksumref` GitHub endpoint (line 285) and then parses the response into the `AttestationReply` (line 295). The way Minder parses the response on line 295 makes it prone to DoS if the response is large enough. Essentially, the response needs to be larger than the machine has available memory.  Version 0.0.51 contains a patch for this issue.

The content that is hosted at the `orgs/$owner/attestations/$checksumref` GitHub attestation endpoint is controlled by users including unauthenticated users to Minders threat model. However, a user will need to configure their own Minder settings to cause Minder to make Minder send a request to fetch the attestations. The user would need to know of a package whose attestations were configured in such a way that they would return a large response when fetching them. As such, the steps needed to carry out this attack would look as such:

1. The attacker adds a package to ghcr.io with attestations that can be fetched via the `orgs/$owner/attestations/$checksumref` GitHub endpoint.
2. The attacker registers on Minder and makes Minder fetch the attestations.
3. Minder fetches attestations and crashes thereby being denied of service.</description>
      <guid isPermaLink="false">CVE-2024-35238|2024-08-02T03:07:46.934Z</guid>
      <pubDate>Mon, 27 May 2024 17:12:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-35194|2024-08-02T03:07:46.859Z -- stacklok -- minder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-35194</link>
      <description>Minder is a software supply chain security platform. Prior to version 0.0.50, Minder engine is susceptible to a denial of service from memory exhaustion that can be triggered from maliciously created templates. Minder engine uses templating to generate strings for various use cases such as URLs, messages for pull requests, descriptions for advisories. In some cases can the user control both the template and the params for it, and in a subset of these cases, Minder reads the generated template entirely into memory. When Minders templating meets both of these conditions, an attacker is able to generate large enough templates that Minder will exhaust memory and crash. This vulnerability is fixed in 0.0.50.</description>
      <guid isPermaLink="false">CVE-2024-35194|2024-08-02T03:07:46.859Z</guid>
      <pubDate>Mon, 20 May 2024 20:44:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-35185|2024-08-02T03:07:46.733Z -- stacklok -- minder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-35185</link>
      <description>Minder is a software supply chain security platform. Prior to version 0.0.49, the Minder REST ingester is vulnerable to a denial of service attack via an attacker-controlled REST endpoint that can crash the Minder server. The REST ingester allows users to interact with REST endpoints to fetch data for rule evaluation. When fetching data with the REST ingester, Minder sends a request to an endpoint and will use the data from the body of the response as the data to evaluate against a certain rule. If the response is sufficiently large, it can drain memory on the machine and crash the Minder server. The attacker can control the remote REST endpoints that Minder sends requests to, and they can configure the remote REST endpoints to return responses with large bodies. They would then instruct Minder to send a request to their configured endpoint that would return the large response which would crash the Minder server. Version 0.0.49 fixes this issue.</description>
      <guid isPermaLink="false">CVE-2024-35185|2024-08-02T03:07:46.733Z</guid>
      <pubDate>Thu, 16 May 2024 15:15:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31455|2024-08-02T01:52:56.973Z -- stacklok -- minder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-31455</link>
      <description>Minder by Stacklok is an open source software supply chain security platform. A refactoring in commit `5c381cf` added the ability to get GitHub repositories registered to a project without specifying a specific provider.  Unfortunately, the SQL query for doing so was missing parenthesis, and would select a random repository. This issue is patched in pull request 2941. As a workaround, revert prior to `5c381cf`, or roll forward past `2eb94e7`.</description>
      <guid isPermaLink="false">CVE-2024-31455|2024-08-02T01:52:56.973Z</guid>
      <pubDate>Tue, 09 Apr 2024 16:52:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31455|2024-07-05T12:48:49.143Z -- stacklok -- minder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-31455</link>
      <description>Minder by Stacklok is an open source software supply chain security platform. A refactoring in commit `5c381cf` added the ability to get GitHub repositories registered to a project without specifying a specific provider.  Unfortunately, the SQL query for doing so was missing parenthesis, and would select a random repository. This issue is patched in pull request 2941. As a workaround, revert prior to `5c381cf`, or roll forward past `2eb94e7`.</description>
      <guid isPermaLink="false">CVE-2024-31455|2024-07-05T12:48:49.143Z</guid>
      <pubDate>Tue, 09 Apr 2024 16:52:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-37904|2024-06-18T17:07:02.812Z -- stacklok -- minder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-37904</link>
      <description>Minder is an open source Software Supply Chain Security Platform. Minder's Git provider is vulnerable to a denial of service from a maliciously configured GitHub repository. The Git provider clones users repositories using the `github.com/go-git/go-git/v5` library on lines `L55-L89`. The Git provider does the following on the lines `L56-L62`. First, it sets the `CloneOptions`, specifying the url, the depth etc. It then validates the options. It then sets up an in-memory filesystem, to which it clones and Finally, it clones the repository. The `(g *Git) Clone()` method is vulnerable to a DoS attack: A Minder user can instruct Minder to clone a large repository which will exhaust memory and crash the Minder server. The root cause of this vulnerability is a combination of the following conditions: 1. Users can control the Git URL which Minder clones, 2. Minder does not enforce a size limit to the repository, 3. Minder clones the entire repository into memory. This issue has been addressed in commit `7979b43` which has been included in release version v0.0.52. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-37904|2024-06-18T17:07:02.812Z</guid>
      <pubDate>Tue, 18 Jun 2024 17:07:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-35194|2024-06-04T17:33:46.370Z -- stacklok -- minder</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35194</link>
      <description>Minder is a software supply chain security platform. Prior to version 0.0.50, Minder engine is susceptible to a denial of service from memory exhaustion that can be triggered from maliciously created templates. Minder engine uses templating to generate strings for various use cases such as URLs, messages for pull requests, descriptions for advisories. In some cases can the user control both the template and the params for it, and in a subset of these cases, Minder reads the generated template entirely into memory. When Minders templating meets both of these conditions, an attacker is able to generate large enough templates that Minder will exhaust memory and crash. This vulnerability is fixed in 0.0.50.</description>
      <guid isPermaLink="false">CVE-2024-35194|2024-06-04T17:33:46.370Z</guid>
      <pubDate>Mon, 20 May 2024 20:44:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-35185|2024-06-06T19:17:43.766Z -- stacklok -- minder</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35185</link>
      <description>Minder is a software supply chain security platform. Prior to version 0.0.49, the Minder REST ingester is vulnerable to a denial of service attack via an attacker-controlled REST endpoint that can crash the Minder server. The REST ingester allows users to interact with REST endpoints to fetch data for rule evaluation. When fetching data with the REST ingester, Minder sends a request to an endpoint and will use the data from the body of the response as the data to evaluate against a certain rule. If the response is sufficiently large, it can drain memory on the machine and crash the Minder server. The attacker can control the remote REST endpoints that Minder sends requests to, and they can configure the remote REST endpoints to return responses with large bodies. They would then instruct Minder to send a request to their configured endpoint that would return the large response which would crash the Minder server. Version 0.0.49 fixes this issue.</description>
      <guid isPermaLink="false">CVE-2024-35185|2024-06-06T19:17:43.766Z</guid>
      <pubDate>Thu, 16 May 2024 15:15:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-35238|2024-05-27T17:12:20.570Z -- stacklok -- minder</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35238</link>
      <description>Minder by Stacklok is an open source software supply chain security platform. Minder prior to version 0.0.51 is vulnerable to a denial-of-service (DoS) attack which could allow an attacker to crash the Minder server and deny other users access to it. The root cause of the vulnerability is that Minders sigstore verifier reads an untrusted response entirely into memory without enforcing a limit on the response body. An attacker can exploit this by making Minder make a request to an attacker-controlled endpoint which returns a response with a large body which will crash the Minder server. Specifically, the point of failure is where Minder parses the response from the GitHub attestations endpoint in `getAttestationReply`. Here, Minder makes a request to the `orgs/$owner/attestations/$checksumref` GitHub endpoint (line 285) and then parses the response into the `AttestationReply` (line 295). The way Minder parses the response on line 295 makes it prone to DoS if the response is large enough. Essentially, the response needs to be larger than the machine has available memory.  Version 0.0.51 contains a patch for this issue.

The content that is hosted at the `orgs/$owner/attestations/$checksumref` GitHub attestation endpoint is controlled by users including unauthenticated users to Minders threat model. However, a user will need to configure their own Minder settings to cause Minder to make Minder send a request to fetch the attestations. The user would need to know of a package whose attestations were configured in such a way that they would return a large response when fetching them. As such, the steps needed to carry out this attack would look as such:

1. The attacker adds a package to ghcr.io with attestations that can be fetched via the `orgs/$owner/attestations/$checksumref` GitHub endpoint.
2. The attacker registers on Minder and makes Minder fetch the attestations.
3. Minder fetches attestations and crashes thereby being denied of service.</description>
      <guid isPermaLink="false">CVE-2024-35238|2024-05-27T17:12:20.570Z</guid>
      <pubDate>Mon, 27 May 2024 17:12:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31455|2024-04-09T16:52:03.254Z -- stacklok -- minder</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-31455</link>
      <description>Minder by Stacklok is an open source software supply chain security platform. A refactoring in commit `5c381cf` added the ability to get GitHub repositories registered to a project without specifying a specific provider.  Unfortunately, the SQL query for doing so was missing parenthesis, and would select a random repository. This issue is patched in pull request 2941. As a workaround, revert prior to `5c381cf`, or roll forward past `2eb94e7`.</description>
      <guid isPermaLink="false">CVE-2024-31455|2024-04-09T16:52:03.254Z</guid>
      <pubDate>Tue, 09 Apr 2024 16:52:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34084|2024-06-04T17:42:25.762Z -- stacklok -- minder</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-34084</link>
      <description>Minder's `HandleGithubWebhook` is susceptible to a denial of service attack from an untrusted HTTP request. The vulnerability exists before the request has been validated, and as such the request is still untrusted at the point of failure. This allows an attacker with the ability to send requests to `HandleGithubWebhook` to crash the Minder controlplane and deny other users from using it. This vulnerability is fixed in 0.0.48.</description>
      <guid isPermaLink="false">CVE-2024-34084|2024-06-04T17:42:25.762Z</guid>
      <pubDate>Tue, 07 May 2024 14:12:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27916|2024-03-06T20:21:22.125Z -- stacklok -- minder</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27916</link>
      <description>Minder is a software supply chain security platform. Prior to version 0.0.33, a Minder user can use the endpoints `GetRepositoryByName`, `DeleteRepositoryByName`, and `GetArtifactByName` to access any repository in the database, irrespective of who owns the repo and any permissions present. The database query checks by repo owner, repo name and provider name (which is always `github`). These query values are not distinct for the particular user - as long as the user has valid credentials and a provider, they can set the repo owner/name to any value they want and the server will return information on this repo. Version 0.0.33 contains a patch for this issue.</description>
      <guid isPermaLink="false">CVE-2024-27916|2024-03-06T20:21:22.125Z</guid>
      <pubDate>Wed, 06 Mar 2024 20:21:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-37904|2024-06-20T14:22:37.106Z -- stacklok -- minder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-37904</link>
      <description>Minder is an open source Software Supply Chain Security Platform. Minder's Git provider is vulnerable to a denial of service from a maliciously configured GitHub repository. The Git provider clones users repositories using the `github.com/go-git/go-git/v5` library on lines `L55-L89`. The Git provider does the following on the lines `L56-L62`. First, it sets the `CloneOptions`, specifying the url, the depth etc. It then validates the options. It then sets up an in-memory filesystem, to which it clones and Finally, it clones the repository. The `(g *Git) Clone()` method is vulnerable to a DoS attack: A Minder user can instruct Minder to clone a large repository which will exhaust memory and crash the Minder server. The root cause of this vulnerability is a combination of the following conditions: 1. Users can control the Git URL which Minder clones, 2. Minder does not enforce a size limit to the repository, 3. Minder clones the entire repository into memory. This issue has been addressed in commit `7979b43` which has been included in release version v0.0.52. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-37904|2024-06-20T14:22:37.106Z</guid>
      <pubDate>Tue, 18 Jun 2024 17:07:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27916|2024-08-02T00:41:55.808Z -- stacklok -- minder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27916</link>
      <description>Minder is a software supply chain security platform. Prior to version 0.0.33, a Minder user can use the endpoints `GetRepositoryByName`, `DeleteRepositoryByName`, and `GetArtifactByName` to access any repository in the database, irrespective of who owns the repo and any permissions present. The database query checks by repo owner, repo name and provider name (which is always `github`). These query values are not distinct for the particular user - as long as the user has valid credentials and a provider, they can set the repo owner/name to any value they want and the server will return information on this repo. Version 0.0.33 contains a patch for this issue.</description>
      <guid isPermaLink="false">CVE-2024-27916|2024-08-02T00:41:55.808Z</guid>
      <pubDate>Wed, 06 Mar 2024 20:21:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34084|2024-08-02T02:42:59.894Z -- stacklok -- minder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34084</link>
      <description>Minder's `HandleGithubWebhook` is susceptible to a denial of service attack from an untrusted HTTP request. The vulnerability exists before the request has been validated, and as such the request is still untrusted at the point of failure. This allows an attacker with the ability to send requests to `HandleGithubWebhook` to crash the Minder controlplane and deny other users from using it. This vulnerability is fixed in 0.0.48.</description>
      <guid isPermaLink="false">CVE-2024-34084|2024-08-02T02:42:59.894Z</guid>
      <pubDate>Tue, 07 May 2024 14:12:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-37904|2024-08-02T04:04:23.360Z -- stacklok -- minder</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-37904</link>
      <description>Minder is an open source Software Supply Chain Security Platform. Minder's Git provider is vulnerable to a denial of service from a maliciously configured GitHub repository. The Git provider clones users repositories using the `github.com/go-git/go-git/v5` library on lines `L55-L89`. The Git provider does the following on the lines `L56-L62`. First, it sets the `CloneOptions`, specifying the url, the depth etc. It then validates the options. It then sets up an in-memory filesystem, to which it clones and Finally, it clones the repository. The `(g *Git) Clone()` method is vulnerable to a DoS attack: A Minder user can instruct Minder to clone a large repository which will exhaust memory and crash the Minder server. The root cause of this vulnerability is a combination of the following conditions: 1. Users can control the Git URL which Minder clones, 2. Minder does not enforce a size limit to the repository, 3. Minder clones the entire repository into memory. This issue has been addressed in commit `7979b43` which has been included in release version v0.0.52. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-37904|2024-08-02T04:04:23.360Z</guid>
      <pubDate>Tue, 18 Jun 2024 17:07:02 +0000</pubDate>
    </item>
  </channel>
</rss>

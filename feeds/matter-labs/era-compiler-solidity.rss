<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>CVE Feed for matter-labs -- era-compiler-solidity</title><link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/matter-labs/era-compiler-solidity.rss</link><description>The latest CVEs for matter-labs -- era-compiler-solidity</description><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><lastBuildDate>Mon, 27 May 2024 17:21:21 +0000</lastBuildDate><ttl>60</ttl><item><title>CVE-2024-35229|2024-05-27T16:20:27.432Z -- matter-labs -- era-compiler-solidity
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35229</link><description>ZKsync Era is a layer 2 rollup that uses zero-knowledge proofs to scale Ethereum. Prior to version 1.3.10, there is a very specific pattern `f(a(),b()); check_if_a_executed_last()` in Yul that exposes a bug in evaluation order of Yul function arguments. This vulnerability has been fixed in version 1.3.10. As a workaround, update and redeploy affected contracts.
</description><guid isPermaLink="false">CVE-2024-35229|2024-05-27T16:20:27.432Z</guid><pubDate>Mon, 27 May 2024 16:20:27 +0000</pubDate></item><item><title>CVE-2024-34704|2024-05-13T19:13:27.510Z -- matter-labs -- era-compiler-solidity</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-34704</link><description>era-compiler-solidity is the ZKsync compiler for Solidity.  The problem occurred during instruction selection in the `DAGCombine` phase while visiting the XOR operation. The issue arises when attempting to fold the expression `!(x cc y)` into `(x !cc y)`. To perform this transformation, the second operand of XOR should be a constant representing the true value. However, it was incorrectly assumed that -1 represents the true value, when in fact, 1 is the correct representation, so this transformation for this case should be skipped. This vulnerability is fixed in 1.4.1.</description><guid isPermaLink="false">CVE-2024-34704|2024-05-13T19:13:27.510Z</guid><pubDate>Mon, 13 May 2024 19:13:27 +0000</pubDate></item></channel></rss>
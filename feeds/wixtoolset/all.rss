<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for wixtoolset -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/wixtoolset/all.rss</link>
    <description>The latest CVEs for wixtoolset -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 01:43:28 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-29187|2024-08-02T01:10:54.048Z -- wixtoolset -- issues
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-29187</link>
      <description>WiX toolset lets developers create installers for Windows Installer, the Windows installation engine. When a bundle runs as SYSTEM user, Burn uses GetTempPathW which points to an insecure directory C:\Windows\Temp to drop and load multiple binaries. Standard users can hijack the binary before it's loaded in the application resulting in elevation of privileges. This vulnerability is fixed in 3.14.1 and 4.0.5.</description>
      <guid isPermaLink="false">CVE-2024-29187|2024-08-02T01:10:54.048Z</guid>
      <pubDate>Sun, 24 Mar 2024 19:38:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29188|2024-08-02T01:10:54.532Z -- wixtoolset -- issues
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-29188</link>
      <description>WiX toolset lets developers create installers for Windows Installer, the Windows installation engine. The custom action behind WiX's `RemoveFolderEx` functionality could allow a standard user to delete protected directories. `RemoveFolderEx` deletes an entire directory tree during installation or uninstallation. It does so by recursing every subdirectory starting at a specified directory and adding each subdirectory to the list of directories Windows Installer should delete. If the setup author instructed `RemoveFolderEx` to delete a per-user folder from a per-machine installer, an attacker could create a directory junction in that per-user folder pointing to a per-machine, protected directory. Windows Installer, when executing the per-machine installer after approval by an administrator, would delete the target of the directory junction. This vulnerability is fixed in 3.14.1 and 4.0.5.</description>
      <guid isPermaLink="false">CVE-2024-29188|2024-08-02T01:10:54.532Z</guid>
      <pubDate>Sun, 24 Mar 2024 19:46:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29188|2024-06-04T17:57:33.971Z -- wixtoolset -- issues</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-29188</link>
      <description>WiX toolset lets developers create installers for Windows Installer, the Windows installation engine. The custom action behind WiX's `RemoveFolderEx` functionality could allow a standard user to delete protected directories. `RemoveFolderEx` deletes an entire directory tree during installation or uninstallation. It does so by recursing every subdirectory starting at a specified directory and adding each subdirectory to the list of directories Windows Installer should delete. If the setup author instructed `RemoveFolderEx` to delete a per-user folder from a per-machine installer, an attacker could create a directory junction in that per-user folder pointing to a per-machine, protected directory. Windows Installer, when executing the per-machine installer after approval by an administrator, would delete the target of the directory junction. This vulnerability is fixed in 3.14.1 and 4.0.5.</description>
      <guid isPermaLink="false">CVE-2024-29188|2024-06-04T17:57:33.971Z</guid>
      <pubDate>Sun, 24 Mar 2024 19:46:25 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29187|2024-03-24T19:46:06.327Z -- wixtoolset -- issues</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-29187</link>
      <description>WiX toolset lets developers create installers for Windows Installer, the Windows installation engine. When a bundle runs as SYSTEM user, Burn uses GetTempPathW which points to an insecure directory C:\Windows\Temp to drop and load multiple binaries. Standard users can hijack the binary before it's loaded in the application resulting in elevation of privileges. This vulnerability is fixed in 3.14.1 and 4.0.5.</description>
      <guid isPermaLink="false">CVE-2024-29187|2024-03-24T19:46:06.327Z</guid>
      <pubDate>Sun, 24 Mar 2024 19:38:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24810|2024-02-07T02:39:35.627Z -- wixtoolset -- issues</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-24810</link>
      <description>WiX toolset lets developers create installers for Windows Installer, the Windows installation engine. The .be TEMP folder is vulnerable to DLL redirection attacks that allow the attacker to escalate privileges. This impacts any installer built with the WiX installer framework. This issue has been patched in version 4.0.4.</description>
      <guid isPermaLink="false">CVE-2024-24810|2024-02-07T02:39:35.627Z</guid>
      <pubDate>Wed, 07 Feb 2024 02:39:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24810|2024-07-15T20:58:05.182Z -- wixtoolset -- issues</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-24810</link>
      <description>WiX toolset lets developers create installers for Windows Installer, the Windows installation engine. The .be TEMP folder is vulnerable to DLL redirection attacks that allow the attacker to escalate privileges. This impacts any installer built with the WiX installer framework. This issue has been patched in version 4.0.4.</description>
      <guid isPermaLink="false">CVE-2024-24810|2024-07-15T20:58:05.182Z</guid>
      <pubDate>Wed, 07 Feb 2024 02:39:35 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for scrapy -- scrapy</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/scrapy/scrapy.rss</link>
    <description>The latest CVEs for scrapy -- scrapy</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 18:24:31 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2021-41125|2024-08-04T02:59:31.432Z -- scrapy -- scrapy
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-41125</link>
      <description>Scrapy is a high-level web crawling and scraping framework for Python. If you use `HttpAuthMiddleware` (i.e. the `http_user` and `http_pass` spider attributes) for HTTP authentication, all requests will expose your credentials to the request target. This includes requests generated by Scrapy components, such as `robots.txt` requests sent by Scrapy when the `ROBOTSTXT_OBEY` setting is set to `True`, or as requests reached through redirects. Upgrade to Scrapy 2.5.1 and use the new `http_auth_domain` spider attribute to control which domains are allowed to receive the configured HTTP authentication credentials. If you are using Scrapy 1.8 or a lower version, and upgrading to Scrapy 2.5.1 is not an option, you may upgrade to Scrapy 1.8.1 instead. If you cannot upgrade, set your HTTP authentication credentials on a per-request basis, using for example the `w3lib.http.basic_auth_header` function to convert your credentials into a value that you can assign to the `Authorization` header of your request, instead of defining your credentials globally using `HttpAuthMiddleware`.</description>
      <guid isPermaLink="false">CVE-2021-41125|2024-08-04T02:59:31.432Z</guid>
      <pubDate>Wed, 06 Oct 2021 17:15:13 +0000</pubDate>
    </item>
  </channel>
</rss>

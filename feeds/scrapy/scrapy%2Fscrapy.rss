<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>CVE Feed for scrapy -- scrapy/scrapy</title><link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/scrapy/scrapy%2Fscrapy.rss</link><description>The latest CVEs for scrapy -- scrapy/scrapy</description><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><lastBuildDate>Fri, 31 May 2024 16:28:16 +0000</lastBuildDate><ttl>60</ttl><item><title>CVE-2024-1968|2024-05-20T08:03:43.129Z -- scrapy -- scrapy/scrapy
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1968</link><description>In scrapy/scrapy, an issue was identified where the Authorization header is not removed during redirects that only change the scheme (e.g., HTTPS to HTTP) but remain within the same domain. This behavior contravenes the Fetch standard, which mandates the removal of Authorization headers in cross-origin requests when the scheme, host, or port changes. Consequently, when a redirect downgrades from HTTPS to HTTP, the Authorization header may be inadvertently exposed in plaintext, leading to potential sensitive information disclosure to unauthorized actors. The flaw is located in the _build_redirect_request function of the redirect middleware.</description><guid isPermaLink="false">CVE-2024-1968|2024-05-20T08:03:43.129Z</guid><pubDate>Mon, 20 May 2024 08:03:43 +0000</pubDate></item><item><title>CVE-2024-1892|2024-04-16T11:10:41.338Z -- scrapy -- scrapy/scrapy
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1892</link><description>A Regular Expression Denial of Service (ReDoS) vulnerability exists in the XMLFeedSpider class of the scrapy/scrapy project, specifically in the parsing of XML content. By crafting malicious XML content that exploits inefficient regular expression complexity used in the parsing process, an attacker can cause a denial-of-service (DoS) condition. This vulnerability allows for the system to hang and consume significant resources, potentially rendering services that utilize Scrapy for XML processing unresponsive.</description><guid isPermaLink="false">CVE-2024-1892|2024-04-16T11:10:41.338Z</guid><pubDate>Wed, 28 Feb 2024 00:00:14 +0000</pubDate></item><item><title>CVE-2024-3574|2024-04-16T11:10:56.646Z -- scrapy -- scrapy/scrapy
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3574</link><description>In scrapy version 2.10.1, an issue was identified where the Authorization header, containing credentials for server authentication, is leaked to a third-party site during a cross-domain redirect. This vulnerability arises from the failure to remove the Authorization header when redirecting across domains. The exposure of the Authorization header to unauthorized actors could potentially allow for account hijacking.</description><guid isPermaLink="false">CVE-2024-3574|2024-04-16T11:10:56.646Z</guid><pubDate>Tue, 16 Apr 2024 00:00:15 +0000</pubDate></item><item><title>CVE-2024-3572|2024-04-16T11:10:55.785Z -- scrapy -- scrapy/scrapy
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3572</link><description>The scrapy/scrapy project is vulnerable to XML External Entity (XXE) attacks due to the use of lxml.etree.fromstring for parsing untrusted XML data without proper validation. This vulnerability allows attackers to perform denial of service attacks, access local files, generate network connections, or circumvent firewalls by submitting specially crafted XML data. </description><guid isPermaLink="false">CVE-2024-3572|2024-04-16T11:10:55.785Z</guid><pubDate>Tue, 16 Apr 2024 00:00:14 +0000</pubDate></item></channel></rss>
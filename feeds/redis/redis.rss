<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for redis -- redis</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/redis/redis.rss</link>
    <description>The latest CVEs for redis -- redis</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 11:20:16 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-36021|2024-08-03T09:51:59.947Z -- redis -- redis
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-36021</link>
      <description>Redis is an in-memory database that persists on disk. Authenticated users can use string matching commands (like `SCAN` or `KEYS`) with a specially crafted pattern to trigger a denial-of-service attack on Redis, causing it to hang and consume 100% CPU time. The problem is fixed in Redis versions 6.0.18, 6.2.11, 7.0.9.
</description>
      <guid isPermaLink="false">CVE-2022-36021|2024-08-03T09:51:59.947Z</guid>
      <pubDate>Wed, 01 Mar 2023 15:46:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-24735|2024-08-03T04:20:50.279Z -- redis -- redis
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-24735</link>
      <description>Redis is an in-memory database that persists on disk. By exploiting weaknesses in the Lua script execution environment, an attacker with access to Redis prior to version 7.0.0 or 6.2.7 can inject Lua code that will execute with the (potentially higher) privileges of another Redis user. The Lua script execution environment in Redis provides some measures that prevent a script from creating side effects that persist and can affect the execution of the same, or different script, at a later time. Several weaknesses of these measures have been publicly known for a long time, but they had no security impact as the Redis security model did not endorse the concept of users or privileges. With the introduction of ACLs in Redis 6.0, these weaknesses can be exploited by a less privileged users to inject Lua code that will execute at a later time, when a privileged user executes a Lua script. The problem is fixed in Redis versions 7.0.0 and 6.2.7. An additional workaround to mitigate this problem without patching the redis-server executable, if Lua scripting is not being used, is to block access to `SCRIPT LOAD` and `EVAL` commands using ACL rules.</description>
      <guid isPermaLink="false">CVE-2022-24735|2024-08-03T04:20:50.279Z</guid>
      <pubDate>Wed, 27 Apr 2022 19:43:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-24834|2024-08-03T04:20:50.549Z -- redis -- redis
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-24834</link>
      <description>Redis is an in-memory database that persists on disk. A specially crafted Lua script executing in Redis can trigger a heap overflow in the cjson library, and result with heap corruption and potentially remote code execution. The problem exists in all versions of Redis with Lua scripting support, starting from 2.6, and affects only authenticated and authorized users. The problem is fixed in versions 7.0.12, 6.2.13, and 6.0.20.</description>
      <guid isPermaLink="false">CVE-2022-24834|2024-08-03T04:20:50.549Z</guid>
      <pubDate>Thu, 13 Jul 2023 14:35:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-35951|2024-08-03T09:51:59.205Z -- redis -- redis
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-35951</link>
      <description>Redis is an in-memory database that persists on disk. Versions 7.0.0 and above, prior to 7.0.5 are vulnerable to an Integer Overflow. Executing an `XAUTOCLAIM` command on a stream key in a specific state, with a specially crafted `COUNT` argument may cause an integer overflow, a subsequent heap overflow, and potentially lead to remote code execution. This has been patched in Redis version 7.0.5. No known workarounds exist.</description>
      <guid isPermaLink="false">CVE-2022-35951|2024-08-03T09:51:59.205Z</guid>
      <pubDate>Fri, 23 Sep 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-31144|2024-08-03T07:11:39.659Z -- redis -- redis
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-31144</link>
      <description>Redis is an in-memory database that persists on disk. A specially crafted `XAUTOCLAIM` command on a stream key in a specific state may result with heap overflow, and potentially remote code execution. This problem affects versions on the 7.x branch prior to 7.0.4. The patch is released in version 7.0.4.</description>
      <guid isPermaLink="false">CVE-2022-31144|2024-08-03T07:11:39.659Z</guid>
      <pubDate>Tue, 19 Jul 2022 20:15:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-24736|2024-08-03T04:20:50.463Z -- redis -- redis
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-24736</link>
      <description>Redis is an in-memory database that persists on disk. Prior to versions 6.2.7 and 7.0.0, an attacker attempting to load a specially crafted Lua script can cause NULL pointer dereference which will result with a crash of the redis-server process. The problem is fixed in Redis versions 7.0.0 and 6.2.7. An additional workaround to mitigate this problem without patching the redis-server executable, if Lua scripting is not being used, is to block access to `SCRIPT LOAD` and `EVAL` commands using ACL rules.</description>
      <guid isPermaLink="false">CVE-2022-24736|2024-08-03T04:20:50.463Z</guid>
      <pubDate>Wed, 27 Apr 2022 19:55:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-35977|2024-08-03T09:51:59.221Z -- redis -- redis
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-35977</link>
      <description>Redis is an in-memory database that persists on disk. Authenticated users issuing specially crafted `SETRANGE` and `SORT(_RO)` commands can trigger an integer overflow, resulting with Redis attempting to allocate impossible amounts of memory and abort with an out-of-memory (OOM) panic. The problem is fixed in Redis versions 7.0.8, 6.2.9 and 6.0.17. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2022-35977|2024-08-03T09:51:59.221Z</guid>
      <pubDate>Fri, 20 Jan 2023 18:19:27 +0000</pubDate>
    </item>
  </channel>
</rss>

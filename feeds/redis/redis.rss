<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for redis -- redis</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/redis/redis.rss</link>
    <description>The latest CVEs for redis -- redis</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 18 Oct 2024 20:24:04 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-36824|2024-10-18T18:33:29.724Z -- redis -- redis
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-36824</link>
      <description>Redis is an in-memory database that persists on disk. In Redit 7.0 prior to 7.0.12, extracting key names from a command and a list of arguments may, in some cases, trigger a heap overflow and result in reading random heap memory, heap corruption and potentially remote code execution. Several scenarios that may lead to authenticated users executing a specially crafted `COMMAND GETKEYS` or `COMMAND GETKEYSANDFLAGS`and authenticated users who were set with ACL rules that match key names, executing a specially crafted command that refers to a variadic list of key names. The vulnerability is patched in Redis 7.0.12.

</description>
      <guid isPermaLink="false">CVE-2023-36824|2024-10-18T18:33:29.724Z</guid>
      <pubDate>Tue, 11 Jul 2023 16:16:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31227|2024-10-07T20:20:56.702Z -- redis -- redis</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-31227</link>
      <description>Redis is an open source, in-memory database that persists on disk. An authenticated with sufficient privileges may create a malformed ACL selector which, when accessed, triggers a server panic and subsequent denial of service. The problem exists in Redis 7 prior to versions 7.2.6 and 7.4.1. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-31227|2024-10-07T20:20:56.702Z</guid>
      <pubDate>Mon, 07 Oct 2024 19:51:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31228|2024-10-07T20:20:24.001Z -- redis -- redis</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-31228</link>
      <description>Redis is an open source, in-memory database that persists on disk. Authenticated users can trigger a denial-of-service by using specially crafted, long string match patterns on supported commands such as `KEYS`, `SCAN`, `PSUBSCRIBE`, `FUNCTION LIST`, `COMMAND LIST` and ACL definitions. Matching of extremely long patterns may result in unbounded recursion, leading to stack overflow and process crash. This problem has been fixed in Redis versions 6.2.16, 7.2.6, and 7.4.1. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-31228|2024-10-07T20:20:24.001Z</guid>
      <pubDate>Mon, 07 Oct 2024 19:51:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31449|2024-10-07T20:23:00.209Z -- redis -- redis</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-31449</link>
      <description>Redis is an open source, in-memory database that persists on disk. An authenticated user may use a specially crafted Lua script to trigger a stack buffer overflow in the bit library, which may potentially lead to remote code execution. The problem exists in all versions of Redis with Lua scripting. This problem has been fixed in Redis versions 6.2.16, 7.2.6, and 7.4.1. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-31449|2024-10-07T20:23:00.209Z</guid>
      <pubDate>Mon, 07 Oct 2024 19:51:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31449|2024-10-07T19:51:08.775Z -- redis -- redis</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-31449</link>
      <description>Redis is an open source, in-memory database that persists on disk. An authenticated user may use a specially crafted Lua script to trigger a stack buffer overflow in the bit library, which may potentially lead to remote code execution. The problem exists in all versions of Redis with Lua scripting. This problem has been fixed in Redis versions 6.2.16, 7.2.6, and 7.4.1. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-31449|2024-10-07T19:51:08.775Z</guid>
      <pubDate>Mon, 07 Oct 2024 19:51:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31228|2024-10-07T19:51:06.784Z -- redis -- redis</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-31228</link>
      <description>Redis is an open source, in-memory database that persists on disk. Authenticated users can trigger a denial-of-service by using specially crafted, long string match patterns on supported commands such as `KEYS`, `SCAN`, `PSUBSCRIBE`, `FUNCTION LIST`, `COMMAND LIST` and ACL definitions. Matching of extremely long patterns may result in unbounded recursion, leading to stack overflow and process crash. This problem has been fixed in Redis versions 6.2.16, 7.2.6, and 7.4.1. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-31228|2024-10-07T19:51:06.784Z</guid>
      <pubDate>Mon, 07 Oct 2024 19:51:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-31227|2024-10-07T19:51:04.520Z -- redis -- redis</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-31227</link>
      <description>Redis is an open source, in-memory database that persists on disk. An authenticated with sufficient privileges may create a malformed ACL selector which, when accessed, triggers a server panic and subsequent denial of service. The problem exists in Redis 7 prior to versions 7.2.6 and 7.4.1. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-31227|2024-10-07T19:51:04.520Z</guid>
      <pubDate>Mon, 07 Oct 2024 19:51:04 +0000</pubDate>
    </item>
  </channel>
</rss>

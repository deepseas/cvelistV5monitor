<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Go toolchain -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/go%20toolchain/all.rss</link>
    <description>The latest CVEs for Go toolchain -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Thu, 26 Sep 2024 20:23:54 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-39320|2024-09-26T17:28:41.807Z -- go%20toolchain -- cmd%2Fgo
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-39320</link>
      <description>The go.mod toolchain directive, introduced in Go 1.21, can be leveraged to execute scripts and binaries relative to the root of the module when the "go" command was executed within the module. This applies to modules downloaded using the "go" command from the module proxy, as well as modules downloaded directly using VCS software.</description>
      <guid isPermaLink="false">CVE-2023-39320|2024-09-26T17:28:41.807Z</guid>
      <pubDate>Fri, 08 Sep 2023 16:13:26 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-24531|2024-08-02T10:56:04.290Z -- go%20toolchain -- cmd%2Fgo</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-24531</link>
      <description>Command go env is documented as outputting a shell script containing the Go environment. However, go env doesn't sanitize values, so executing its output as a shell script can cause various bad bahaviors, including executing arbitrary commands or inserting new environment variables. This issue is relatively minor because, in general, if an attacker can set arbitrary environment variables on a system, they have better attack vectors than making "go env" print them out.</description>
      <guid isPermaLink="false">CVE-2023-24531|2024-08-02T10:56:04.290Z</guid>
      <pubDate>Tue, 02 Jul 2024 19:51:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24787|2024-05-08T15:31:14.530Z -- go%20toolchain -- cmd%2Fgo</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-24787</link>
      <description>On Darwin, building a Go module which contains CGO can trigger arbitrary code execution when using the Apple version of ld, due to usage of the -lto_library flag in a "#cgo LDFLAGS" directive.</description>
      <guid isPermaLink="false">CVE-2024-24787|2024-05-08T15:31:14.530Z</guid>
      <pubDate>Wed, 08 May 2024 15:31:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-24531|2024-07-02T19:51:48.731Z -- go%20toolchain -- cmd%2Fgo</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-24531</link>
      <description>Command go env is documented as outputting a shell script containing the Go environment. However, go env doesn't sanitize values, so executing its output as a shell script can cause various bad bahaviors, including executing arbitrary commands or inserting new environment variables. This issue is relatively minor because, in general, if an attacker can set arbitrary environment variables on a system, they have better attack vectors than making "go env" print them out.</description>
      <guid isPermaLink="false">CVE-2023-24531|2024-07-02T19:51:48.731Z</guid>
      <pubDate>Tue, 02 Jul 2024 19:51:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-24531|2024-08-21T13:49:46.839Z -- go%20toolchain -- cmd%2Fgo</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-24531</link>
      <description>Command go env is documented as outputting a shell script containing the Go environment. However, go env doesn't sanitize values, so executing its output as a shell script can cause various bad bahaviors, including executing arbitrary commands or inserting new environment variables. This issue is relatively minor because, in general, if an attacker can set arbitrary environment variables on a system, they have better attack vectors than making "go env" print them out.</description>
      <guid isPermaLink="false">CVE-2023-24531|2024-08-21T13:49:46.839Z</guid>
      <pubDate>Tue, 02 Jul 2024 19:51:48 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for solidusio -- solidus</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/solidusio/solidus.rss</link>
    <description>The latest CVEs for solidusio -- solidus</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 17:22:08 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2021-43805|2024-08-04T04:03:08.816Z -- solidusio -- solidus
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-43805</link>
      <description>Solidus is a free, open-source ecommerce platform built on Rails. Versions of Solidus prior to 3.1.4, 3.0.4, and 2.11.13 have a denial of service vulnerability that could be exploited during a guest checkout. The regular expression used to validate a guest order's email was subject to exponential backtracking through a fragment like `a.a.` Versions 3.1.4, 3.0.4, and 2.11.13 have been patched to use a different regular expression. The maintainers added a check for email addresses that are no longer valid that will print information about any affected orders that exist. If a prompt upgrade is not an option, a workaround is available. It is possible to edit the file `config/application.rb` manually (with code provided by the maintainers in the GitHub Security Advisory) to check email validity.</description>
      <guid isPermaLink="false">CVE-2021-43805|2024-08-04T04:03:08.816Z</guid>
      <pubDate>Tue, 07 Dec 2021 17:25:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-15109|2024-08-04T13:08:21.891Z -- solidusio -- solidus
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-15109</link>
      <description>In solidus before versions 2.8.6, 2.9.6, and 2.10.2, there is an bility to change order address without triggering address validations. This vulnerability allows a malicious customer to craft request data with parameters that allow changing the address of the current order without changing the shipment costs associated with the new shipment. All stores with at least two shipping zones and different costs of shipment per zone are impacted. This problem comes from how checkout permitted attributes are structured. We have a single list of attributes that are permitted across the whole checkout, no matter the step that is being submitted. See the linked reference for more information. As a workaround, if it is not possible to upgrade to a supported patched version, please use this gist in the references section.</description>
      <guid isPermaLink="false">CVE-2020-15109|2024-08-04T13:08:21.891Z</guid>
      <pubDate>Tue, 04 Aug 2020 23:00:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-43846|2024-08-04T04:10:16.776Z -- solidusio -- solidus
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-43846</link>
      <description>`solidus_frontend` is the cart and storefront for the Solidus e-commerce project. Versions of `solidus_frontend` prior to 3.1.5, 3.0.5, and 2.11.14 contain a cross-site request forgery (CSRF) vulnerability that allows a malicious site to add an item to the user's cart without their knowledge. Versions 3.1.5, 3.0.5, and 2.11.14 contain a patch for this issue. The patch adds CSRF token verification to the "Add to cart" action. Adding forgery protection to a form that missed it can have some side effects. Other CSRF protection strategies as well as a workaround involving modifcation to config/application.rb` are available. More details on these mitigations are available in the GitHub Security Advisory.</description>
      <guid isPermaLink="false">CVE-2021-43846|2024-08-04T04:10:16.776Z</guid>
      <pubDate>Mon, 20 Dec 2021 21:30:11 +0000</pubDate>
    </item>
  </channel>
</rss>

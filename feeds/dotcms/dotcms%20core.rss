<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for dotCMS -- dotCMS core</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/dotcms/dotcms%20core.rss</link>
    <description>The latest CVEs for dotCMS -- dotCMS core</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 12 Jun 2024 11:24:18 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-3042|2023-10-23T16:58:08.007Z -- dotcms -- dotcms%20core
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-3042</link>
      <description>In dotCMS, versions mentioned, a flaw in the NormalizationFilter does not strip double slashes (//) from URLs, potentially enabling bypasses for XSS and access controls. An example affected URL is  https://demo.dotcms.com//html/portlet/ext/files/edit_text_inc.jsp https://demo.dotcms.com//html/portlet/ext/files/edit_text_inc.jsp , which should return a 404 response but didn't. 

The oversight in the default invalid URL character list can be viewed at the provided  GitHub link https://github.com/dotCMS/core/blob/master/dotCMS/src/main/java/com/dotcms/filters/NormalizationFilter.java#L37 . 

To mitigate, users can block URLs with double slashes at firewalls or utilize dotCMS config variables.

Specifically, they can use the DOT_URI_NORMALIZATION_FORBIDDEN_STRINGS environmental variable to add // to the list of invalid strings. 

Additionally, the DOT_URI_NORMALIZATION_FORBIDDEN_REGEX variable offers more detailed control, for instance, to block //html.* URLs.

Fix Version:23.06+, LTS 22.03.7+, LTS 23.01.4+
</description>
      <guid isPermaLink="false">CVE-2023-3042|2023-10-23T16:58:08.007Z</guid>
      <pubDate>Tue, 17 Oct 2023 22:52:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3164|2024-04-01T21:31:26.442Z -- dotcms -- dotcms%20core
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3164</link>
      <description>In dotCMS dashboard, the Tools and Log Files tabs under System → Maintenance Portlet, which is and always has been an Admin portlet, is accessible to anyone with that portlet and not just to CMS Admins. Users that get site admin but not a system admin, should not have access to the System Maintenance → Tools portlet. This would share database username and password under Log Files and download DB Dump and other dotCMS Content under Tools. Nothing in the System → Maintenance should be displayed for users with site admin role. Only system admins must have access to System Maintenance.

OWASP Top 10 - A01) Broken Access Control

OWASP Top 10 - A04) Insecure Design

</description>
      <guid isPermaLink="false">CVE-2024-3164|2024-04-01T21:31:26.442Z</guid>
      <pubDate>Mon, 01 Apr 2024 21:27:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3165|2024-04-01T21:38:04.085Z -- dotcms -- dotcms%20core
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3165</link>
      <description>System-&gt;Maintenance-&gt; Log Files in dotCMS dashboard is providing the username/password for database connections in the log output. Nevertheless, this is a moderate issue as it requires a backend admin as well as that dbs are locked down by environment.  

OWASP Top 10 - A05) Insecure Design

OWASP Top 10 - A05) Security Misconfiguration

OWASP Top 10 - A09) Security Logging and Monitoring Failure

</description>
      <guid isPermaLink="false">CVE-2024-3165|2024-04-01T21:38:04.085Z</guid>
      <pubDate>Mon, 01 Apr 2024 21:38:04 +0000</pubDate>
    </item>
  </channel>
</rss>

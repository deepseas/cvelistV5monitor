<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for netty -- netty</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/netty/netty.rss</link>
    <description>The latest CVEs for netty -- netty</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 17:22:06 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2021-43797|2024-08-04T04:03:08.898Z -- netty -- netty
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-43797</link>
      <description>Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. Netty prior to version 4.1.71.Final skips control chars when they are present at the beginning / end of the header name. It should instead fail fast as these are not allowed by the spec and could lead to HTTP request smuggling. Failing to do the validation might cause netty to "sanitize" header names before it forward these to another remote system when used as proxy. This remote system can't see the invalid usage anymore, and therefore does not do the validation itself. Users should upgrade to version 4.1.71.Final.</description>
      <guid isPermaLink="false">CVE-2021-43797|2024-08-04T04:03:08.898Z</guid>
      <pubDate>Thu, 09 Dec 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29025|2024-08-02T01:03:51.668Z -- netty -- netty</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-29025</link>
      <description>Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. The `HttpPostRequestDecoder` can be tricked to accumulate data. While the decoder can store items on the disk if configured so, there are no limits to the number of fields the form can have, an attacher can send a chunked post consisting of many small fields that will be accumulated in the `bodyListHttpData` list. The decoder cumulates bytes in the `undecodedChunk` buffer until it can decode a field, this field can cumulate data without limits. This vulnerability is fixed in 4.1.108.Final.</description>
      <guid isPermaLink="false">CVE-2024-29025|2024-08-02T01:03:51.668Z</guid>
      <pubDate>Mon, 25 Mar 2024 20:09:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29025|2024-03-25T20:09:35.156Z -- netty -- netty</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-29025</link>
      <description>Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. The `HttpPostRequestDecoder` can be tricked to accumulate data. While the decoder can store items on the disk if configured so, there are no limits to the number of fields the form can have, an attacher can send a chunked post consisting of many small fields that will be accumulated in the `bodyListHttpData` list. The decoder cumulates bytes in the `undecodedChunk` buffer until it can decode a field, this field can cumulate data without limits. This vulnerability is fixed in 4.1.108.Final.</description>
      <guid isPermaLink="false">CVE-2024-29025|2024-03-25T20:09:35.156Z</guid>
      <pubDate>Mon, 25 Mar 2024 20:09:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29025|2024-07-19T21:08:16.746Z -- netty -- netty</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-29025</link>
      <description>Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. The `HttpPostRequestDecoder` can be tricked to accumulate data. While the decoder can store items on the disk if configured so, there are no limits to the number of fields the form can have, an attacher can send a chunked post consisting of many small fields that will be accumulated in the `bodyListHttpData` list. The decoder cumulates bytes in the `undecodedChunk` buffer until it can decode a field, this field can cumulate data without limits. This vulnerability is fixed in 4.1.108.Final.</description>
      <guid isPermaLink="false">CVE-2024-29025|2024-07-19T21:08:16.746Z</guid>
      <pubDate>Mon, 25 Mar 2024 20:09:35 +0000</pubDate>
    </item>
  </channel>
</rss>

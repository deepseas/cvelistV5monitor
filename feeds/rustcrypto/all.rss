<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for RustCrypto -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/rustcrypto/all.rss</link>
    <description>The latest CVEs for RustCrypto -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 22:23:25 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-42811|2024-08-02T19:30:24.555Z -- rustcrypto -- aeads
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-42811</link>
      <description>aes-gcm is a pure Rust implementation of the AES-GCM. Starting in version 0.10.0 and prior to version 0.10.3, in the AES GCM implementation of decrypt_in_place_detached, the decrypted ciphertext (i.e. the correct plaintext) is exposed even if tag verification fails. If a program using the `aes-gcm` crate's `decrypt_in_place*` APIs accesses the buffer after decryption failure, it will contain a decryption of an unauthenticated input. Depending on the specific nature of the program this may enable Chosen Ciphertext Attacks (CCAs) which can cause a catastrophic breakage of the cipher including full plaintext recovery. Version 0.10.3 contains a fix for this issue.</description>
      <guid isPermaLink="false">CVE-2023-42811|2024-08-02T19:30:24.555Z</guid>
      <pubDate>Fri, 22 Sep 2023 15:19:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-49092|2024-08-02T21:46:28.810Z -- rustcrypto -- rsa
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-49092</link>
      <description>RustCrypto/RSA is a portable RSA implementation in pure Rust. Due to a non-constant-time implementation, information about the private key is leaked through timing information which is observable over the network. An attacker may be able to use that information to recover the key. There is currently no fix available. As a workaround, avoid using the RSA crate in settings where attackers are able to observe timing information, e.g. local use on a non-compromised computer.</description>
      <guid isPermaLink="false">CVE-2023-49092|2024-08-02T21:46:28.810Z</guid>
      <pubDate>Tue, 28 Nov 2023 20:57:06 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>CVE Feed for wpfeedback -- Visual Website Collaboration, Feedback &amp; Project Management – Atarim</title><link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/wpfeedback/visual%20website%20collaboration%2C%20feedback%20%26%20project%20management%20%E2%80%93%20atarim.rss</link><description>The latest CVEs for wpfeedback -- Visual Website Collaboration, Feedback &amp; Project Management – Atarim</description><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><lastBuildDate>Fri, 31 May 2024 08:23:49 +0000</lastBuildDate><ttl>60</ttl><item><title>CVE-2024-2038|2024-05-23T06:46:02.833Z -- wpfeedback -- Visual Website Collaboration, Feedback &amp; Project Management – Atarim</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2038</link><description>The Visual Website Collaboration, Feedback &amp; Project Management – Atarim plugin for WordPress is vulnerable to unauthorized access in all versions up to, and including, 3.22.6. This is due to the use of hardcoded credentials to authenticate all the incoming API requests. This makes it possible for unauthenticated attackers to modify plugin settings, delete posts, modify post titles, and upload images.</description><guid isPermaLink="false">CVE-2024-2038|2024-05-23T06:46:02.833Z</guid><pubDate>Thu, 23 May 2024 06:46:02 +0000</pubDate></item><item><title>CVE-2024-2793|2024-05-31T04:31:43.112Z -- wpfeedback -- Visual Website Collaboration, Feedback &amp; Project Management – Atarim</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2793</link><description>The Visual Website Collaboration, Feedback &amp; Project Management – Atarim plugin for WordPress is vulnerable to Stored Cross-Site Scripting via comments in all versions up to, and including, 3.30 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description><guid isPermaLink="false">CVE-2024-2793|2024-05-31T04:31:43.112Z</guid><pubDate>Fri, 31 May 2024 04:31:43 +0000</pubDate></item></channel></rss>
<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for vert-x3 -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/vert-x3/all.rss</link>
    <description>The latest CVEs for vert-x3 -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 17:23:03 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-24815|2024-08-02T11:03:19.277Z -- vert-x3 -- vertx-web
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-24815</link>
      <description>Vert.x-Web is a set of building blocks for building web applications in the java programming language. When running vertx web applications that serve files using `StaticHandler` on Windows Operating Systems and Windows File Systems, if the mount point is a wildcard (`*`) then an attacker can exfiltrate any class path resource. When computing the relative path to locate the resource, in case of wildcards, the code: `return "/" + rest;` from `Utils.java` returns the user input (without validation) as the segment to lookup. Even though checks are performed to avoid escaping the sandbox, given that the input was not sanitized `\` are not properly handled and an attacker can build a path that is valid within the classpath. This issue only affects users deploying in windows environments and upgrading is the advised remediation path. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-24815|2024-08-02T11:03:19.277Z</guid>
      <pubDate>Thu, 09 Feb 2023 17:36:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-32081|2024-08-02T15:03:29.081Z -- vert-x3 -- vertx-stomp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-32081</link>
      <description>Vert.x STOMP is a vert.x implementation of the STOMP specification that provides a STOMP server and client. From versions 3.1.0 until 3.9.16 and 4.0.0 until 4.4.2, a Vert.x STOMP server processes client STOMP frames without checking that the client send an initial CONNECT frame replied with a successful CONNECTED frame. The client can subscribe to a destination or publish message without prior authentication. Any Vert.x STOMP server configured with an authentication handler is impacted. The issue is patched in Vert.x 3.9.16 and 4.4.2. There are no trivial workarounds.</description>
      <guid isPermaLink="false">CVE-2023-32081|2024-08-02T15:03:29.081Z</guid>
      <pubDate>Fri, 12 May 2023 13:49:56 +0000</pubDate>
    </item>
  </channel>
</rss>

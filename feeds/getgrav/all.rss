<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for getgrav -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/getgrav/all.rss</link>
    <description>The latest CVEs for getgrav -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 01:42:13 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-2073|2024-08-03T00:24:44.267Z -- getgrav -- getgrav%2Fgrav
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-2073</link>
      <description>Code Injection in GitHub repository getgrav/grav prior to 1.7.34.</description>
      <guid isPermaLink="false">CVE-2022-2073|2024-08-03T00:24:44.267Z</guid>
      <pubDate>Wed, 29 Jun 2022 18:20:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27921|2024-08-02T00:41:55.858Z -- getgrav -- grav</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27921</link>
      <description>Grav is an open-source, flat-file content management system. A file upload path traversal vulnerability has been identified in the application prior to version 1.7.45, enabling attackers to replace or create files with extensions like .json, .zip, .css, .gif, etc. This critical security flaw poses severe risks, that can allow attackers to inject arbitrary code on the server, undermine integrity of backup files by overwriting existing files or creating new ones, and exfiltrate sensitive data using CSS exfiltration techniques. Upgrading to patched version 1.7.45 can mitigate the issue.</description>
      <guid isPermaLink="false">CVE-2024-27921|2024-08-02T00:41:55.858Z</guid>
      <pubDate>Thu, 21 Mar 2024 21:38:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28117|2024-08-02T00:48:48.939Z -- getgrav -- grav</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-28117</link>
      <description>Grav is an open-source, flat-file content management system. Prior to version 1.7.45, Grav validates accessible functions through the Utils::isDangerousFunction function, but does not impose restrictions on twig functions like twig_array_map, allowing attackers to bypass the validation and execute arbitrary commands. Twig processing of static pages can be enabled in the front matter by any administrative user allowed to create or edit pages. As the Twig processor runs unsandboxed, this behavior can be used to gain arbitrary code execution and elevate privileges on the instance. Upgrading to patched version 1.7.45 can mitigate this issue.</description>
      <guid isPermaLink="false">CVE-2024-28117|2024-08-02T00:48:48.939Z</guid>
      <pubDate>Thu, 21 Mar 2024 21:50:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28118|2024-08-02T00:48:49.053Z -- getgrav -- grav</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-28118</link>
      <description>Grav is an open-source, flat-file content management system. Prior to version 1.7.45, due to the unrestricted access to twig extension class from Grav context, an attacker can redefine config variable. As a result, attacker can bypass a previous SSTI mitigation. Twig processing of static pages can be enabled in the front matter by any administrative user allowed to create or edit pages. As the Twig processor runs unsandboxed, this behavior can be used to gain arbitrary code execution and elevate privileges on the instance. Version 1.7.45 contains a fix for this issue.</description>
      <guid isPermaLink="false">CVE-2024-28118|2024-08-02T00:48:49.053Z</guid>
      <pubDate>Thu, 21 Mar 2024 21:55:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28116|2024-08-02T00:48:49.256Z -- getgrav -- grav</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-28116</link>
      <description>Grav is an open-source, flat-file content management system. Grav CMS prior to version 1.7.45 is vulnerable to a Server-Side Template Injection (SSTI), which allows any authenticated user (editor permissions are sufficient) to execute arbitrary code on the remote server bypassing the existing security sandbox. Version 1.7.45 contains a patch for this issue.</description>
      <guid isPermaLink="false">CVE-2024-28116|2024-08-02T00:48:49.256Z</guid>
      <pubDate>Thu, 21 Mar 2024 21:44:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28119|2024-08-02T00:48:49.108Z -- getgrav -- grav</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-28119</link>
      <description>Grav is an open-source, flat-file content management system. Prior to version 1.7.45, due to the unrestricted access to twig extension class from grav context, an attacker can redefine the escape function and execute arbitrary commands. Twig processing of static pages can be enabled in the front matter by any administrative user allowed to create or edit pages. As the Twig processor runs unsandboxed, this behavior can be used to gain arbitrary code execution and elevate privileges on the instance. Version 1.7.45 contains a patch for this issue.</description>
      <guid isPermaLink="false">CVE-2024-28119|2024-08-02T00:48:49.108Z</guid>
      <pubDate>Thu, 21 Mar 2024 22:02:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27923|2024-08-02T00:41:55.863Z -- getgrav -- grav</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27923</link>
      <description>Grav is a content management system (CMS). Prior to version 1.7.43, users who may write a page may use the `frontmatter` feature due to insufficient permission validation and inadequate file name validation. This may lead to remote code execution. Version 1.7.43 fixes this issue.</description>
      <guid isPermaLink="false">CVE-2024-27923|2024-08-02T00:41:55.863Z</guid>
      <pubDate>Wed, 06 Mar 2024 20:28:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27921|2024-07-18T14:30:02.488Z -- getgrav -- grav</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27921</link>
      <description>Grav is an open-source, flat-file content management system. A file upload path traversal vulnerability has been identified in the application prior to version 1.7.45, enabling attackers to replace or create files with extensions like .json, .zip, .css, .gif, etc. This critical security flaw poses severe risks, that can allow attackers to inject arbitrary code on the server, undermine integrity of backup files by overwriting existing files or creating new ones, and exfiltrate sensitive data using CSS exfiltration techniques. Upgrading to patched version 1.7.45 can mitigate the issue.</description>
      <guid isPermaLink="false">CVE-2024-27921|2024-07-18T14:30:02.488Z</guid>
      <pubDate>Thu, 21 Mar 2024 21:38:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28116|2024-03-21T21:44:29.489Z -- getgrav -- grav</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28116</link>
      <description>Grav is an open-source, flat-file content management system. Grav CMS prior to version 1.7.45 is vulnerable to a Server-Side Template Injection (SSTI), which allows any authenticated user (editor permissions are sufficient) to execute arbitrary code on the remote server bypassing the existing security sandbox. Version 1.7.45 contains a patch for this issue.</description>
      <guid isPermaLink="false">CVE-2024-28116|2024-03-21T21:44:29.489Z</guid>
      <pubDate>Thu, 21 Mar 2024 21:44:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28117|2024-03-21T21:53:10.814Z -- getgrav -- grav</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28117</link>
      <description>Grav is an open-source, flat-file content management system. Prior to version 1.7.45, Grav validates accessible functions through the Utils::isDangerousFunction function, but does not impose restrictions on twig functions like twig_array_map, allowing attackers to bypass the validation and execute arbitrary commands. Twig processing of static pages can be enabled in the front matter by any administrative user allowed to create or edit pages. As the Twig processor runs unsandboxed, this behavior can be used to gain arbitrary code execution and elevate privileges on the instance. Upgrading to patched version 1.7.45 can mitigate this issue.</description>
      <guid isPermaLink="false">CVE-2024-28117|2024-03-21T21:53:10.814Z</guid>
      <pubDate>Thu, 21 Mar 2024 21:50:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28118|2024-03-21T21:55:11.788Z -- getgrav -- grav</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28118</link>
      <description>Grav is an open-source, flat-file content management system. Prior to version 1.7.45, due to the unrestricted access to twig extension class from Grav context, an attacker can redefine config variable. As a result, attacker can bypass a previous SSTI mitigation. Twig processing of static pages can be enabled in the front matter by any administrative user allowed to create or edit pages. As the Twig processor runs unsandboxed, this behavior can be used to gain arbitrary code execution and elevate privileges on the instance. Version 1.7.45 contains a fix for this issue.</description>
      <guid isPermaLink="false">CVE-2024-28118|2024-03-21T21:55:11.788Z</guid>
      <pubDate>Thu, 21 Mar 2024 21:55:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28119|2024-03-21T22:02:04.145Z -- getgrav -- grav</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28119</link>
      <description>Grav is an open-source, flat-file content management system. Prior to version 1.7.45, due to the unrestricted access to twig extension class from grav context, an attacker can redefine the escape function and execute arbitrary commands. Twig processing of static pages can be enabled in the front matter by any administrative user allowed to create or edit pages. As the Twig processor runs unsandboxed, this behavior can be used to gain arbitrary code execution and elevate privileges on the instance. Version 1.7.45 contains a patch for this issue.</description>
      <guid isPermaLink="false">CVE-2024-28119|2024-03-21T22:02:04.145Z</guid>
      <pubDate>Thu, 21 Mar 2024 22:02:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27923|2024-03-06T20:28:46.695Z -- getgrav -- grav</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27923</link>
      <description>Grav is a content management system (CMS). Prior to version 1.7.43, users who may write a page may use the `frontmatter` feature due to insufficient permission validation and inadequate file name validation. This may lead to remote code execution. Version 1.7.43 fixes this issue.</description>
      <guid isPermaLink="false">CVE-2024-27923|2024-03-06T20:28:46.695Z</guid>
      <pubDate>Wed, 06 Mar 2024 20:28:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27921|2024-03-21T21:53:24.837Z -- getgrav -- grav</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27921</link>
      <description>Grav is an open-source, flat-file content management system. A file upload path traversal vulnerability has been identified in the application prior to version 1.7.45, enabling attackers to replace or create files with extensions like .json, .zip, .css, .gif, etc. This critical security flaw poses severe risks, that can allow attackers to inject arbitrary code on the server, undermine integrity of backup files by overwriting existing files or creating new ones, and exfiltrate sensitive data using CSS exfiltration techniques. Upgrading to patched version 1.7.45 can mitigate the issue.</description>
      <guid isPermaLink="false">CVE-2024-27921|2024-03-21T21:53:24.837Z</guid>
      <pubDate>Thu, 21 Mar 2024 21:38:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34082|2024-06-04T17:41:51.067Z -- getgrav -- grav</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-34082</link>
      <description>Grav is a file-based Web platform. Prior to version 1.7.46, a low privilege user account with page edit privilege can read any server files using Twig Syntax. This includes Grav user account files - `/grav/user/accounts/*.yaml`. This file stores hashed user password, 2FA secret, and the password reset token. This can allow an adversary to compromise any registered account and read any file in the web server by resetting a password for a user to get access to the password reset token from the file or by cracking the hashed password. A low privileged user may also perform a full account takeover of other registered users including Administrators. Version 1.7.46 contains a patch.</description>
      <guid isPermaLink="false">CVE-2024-34082|2024-06-04T17:41:51.067Z</guid>
      <pubDate>Wed, 15 May 2024 16:42:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28118|2024-07-08T19:53:35.209Z -- getgrav -- grav</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-28118</link>
      <description>Grav is an open-source, flat-file content management system. Prior to version 1.7.45, due to the unrestricted access to twig extension class from Grav context, an attacker can redefine config variable. As a result, attacker can bypass a previous SSTI mitigation. Twig processing of static pages can be enabled in the front matter by any administrative user allowed to create or edit pages. As the Twig processor runs unsandboxed, this behavior can be used to gain arbitrary code execution and elevate privileges on the instance. Version 1.7.45 contains a fix for this issue.</description>
      <guid isPermaLink="false">CVE-2024-28118|2024-07-08T19:53:35.209Z</guid>
      <pubDate>Thu, 21 Mar 2024 21:55:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28116|2024-08-01T20:56:23.682Z -- getgrav -- grav</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-28116</link>
      <description>Grav is an open-source, flat-file content management system. Grav CMS prior to version 1.7.45 is vulnerable to a Server-Side Template Injection (SSTI), which allows any authenticated user (editor permissions are sufficient) to execute arbitrary code on the remote server bypassing the existing security sandbox. Version 1.7.45 contains a patch for this issue.</description>
      <guid isPermaLink="false">CVE-2024-28116|2024-08-01T20:56:23.682Z</guid>
      <pubDate>Thu, 21 Mar 2024 21:44:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34082|2024-08-02T02:42:59.940Z -- getgrav -- grav</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34082</link>
      <description>Grav is a file-based Web platform. Prior to version 1.7.46, a low privilege user account with page edit privilege can read any server files using Twig Syntax. This includes Grav user account files - `/grav/user/accounts/*.yaml`. This file stores hashed user password, 2FA secret, and the password reset token. This can allow an adversary to compromise any registered account and read any file in the web server by resetting a password for a user to get access to the password reset token from the file or by cracking the hashed password. A low privileged user may also perform a full account takeover of other registered users including Administrators. Version 1.7.46 contains a patch.</description>
      <guid isPermaLink="false">CVE-2024-34082|2024-08-02T02:42:59.940Z</guid>
      <pubDate>Wed, 15 May 2024 16:42:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27923|2024-08-02T18:35:36.095Z -- getgrav -- grav</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27923</link>
      <description>Grav is a content management system (CMS). Prior to version 1.7.43, users who may write a page may use the `frontmatter` feature due to insufficient permission validation and inadequate file name validation. This may lead to remote code execution. Version 1.7.43 fixes this issue.</description>
      <guid isPermaLink="false">CVE-2024-27923|2024-08-02T18:35:36.095Z</guid>
      <pubDate>Wed, 06 Mar 2024 20:28:46 +0000</pubDate>
    </item>
  </channel>
</rss>

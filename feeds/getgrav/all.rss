<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for getgrav -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/getgrav/all.rss</link>
    <description>The latest CVEs for getgrav -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 18 Oct 2024 19:20:05 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-37897|2024-10-18T17:19:07.910Z -- getgrav -- grav
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-37897</link>
      <description>Grav is a file-based Web-platform built in PHP. Grav is subject to a server side template injection (SSTI) vulnerability. The fix for another SSTI vulnerability using `|map`, `|filter` and `|reduce` twigs implemented in the commit `71bbed1` introduces bypass of the denylist due to incorrect return value from `isDangerousFunction()`, which allows to execute the payload prepending double backslash (`\\`). The `isDangerousFunction()` check in version 1.7.42 and onwards retuns `false` value instead of `true` when the `\` symbol is found in the `$name`. This vulnerability can be exploited if the attacker has access to: 1. an Administrator account, or 2. a non-administrator, user account that has Admin panel access and Create/Update page permissions. A fix for this vulnerability has been introduced in commit `b4c6210` and is included in release version `1.7.42.2`. Users are advised to upgrade. There are no known workarounds for this vulnerability.

</description>
      <guid isPermaLink="false">CVE-2023-37897|2024-10-18T17:19:07.910Z</guid>
      <pubDate>Tue, 18 Jul 2023 20:22:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34082|2024-06-04T17:41:51.067Z -- getgrav -- grav</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-34082</link>
      <description>Grav is a file-based Web platform. Prior to version 1.7.46, a low privilege user account with page edit privilege can read any server files using Twig Syntax. This includes Grav user account files - `/grav/user/accounts/*.yaml`. This file stores hashed user password, 2FA secret, and the password reset token. This can allow an adversary to compromise any registered account and read any file in the web server by resetting a password for a user to get access to the password reset token from the file or by cracking the hashed password. A low privileged user may also perform a full account takeover of other registered users including Administrators. Version 1.7.46 contains a patch.</description>
      <guid isPermaLink="false">CVE-2024-34082|2024-06-04T17:41:51.067Z</guid>
      <pubDate>Wed, 15 May 2024 16:42:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34082|2024-08-02T02:42:59.940Z -- getgrav -- grav</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34082</link>
      <description>Grav is a file-based Web platform. Prior to version 1.7.46, a low privilege user account with page edit privilege can read any server files using Twig Syntax. This includes Grav user account files - `/grav/user/accounts/*.yaml`. This file stores hashed user password, 2FA secret, and the password reset token. This can allow an adversary to compromise any registered account and read any file in the web server by resetting a password for a user to get access to the password reset token from the file or by cracking the hashed password. A low privileged user may also perform a full account takeover of other registered users including Administrators. Version 1.7.46 contains a patch.</description>
      <guid isPermaLink="false">CVE-2024-34082|2024-08-02T02:42:59.940Z</guid>
      <pubDate>Wed, 15 May 2024 16:42:19 +0000</pubDate>
    </item>
  </channel>
</rss>

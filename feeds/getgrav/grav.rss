<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for getgrav -- grav</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/getgrav/grav.rss</link>
    <description>The latest CVEs for getgrav -- grav</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 17:22:46 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-34452|2024-08-02T16:10:07.255Z -- getgrav -- grav
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-34452</link>
      <description>Grav is a flat-file content management system. In versions 1.7.42 and prior, the "/forgot_password" page has a self-reflected cross-site scripting vulnerability that can be exploited by injecting a script into the "email" parameter of the request. While this vulnerability can potentially allow an attacker to execute arbitrary code on the user's browser, the impact is limited as it requires user interaction to trigger the vulnerability. As of time of publication, a patch is not available. Server-side validation should be implemented to prevent this vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-34452|2024-08-02T16:10:07.255Z</guid>
      <pubDate>Wed, 14 Jun 2023 22:28:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-34251|2024-08-02T16:01:54.348Z -- getgrav -- grav
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-34251</link>
      <description>Grav is a flat-file content management system. Versions prior to 1.7.42 are vulnerable to server side template injection. Remote code execution is possible by embedding malicious PHP code on the administrator screen by a user with page editing privileges. Version 1.7.42 contains a fix for this issue.</description>
      <guid isPermaLink="false">CVE-2023-34251|2024-08-02T16:01:54.348Z</guid>
      <pubDate>Wed, 14 Jun 2023 21:31:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-34252|2024-08-02T16:01:54.351Z -- getgrav -- grav
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-34252</link>
      <description>Grav is a flat-file content management system. Prior to version 1.7.42, there is a logic flaw in the `GravExtension.filterFilter()` function whereby validation against a denylist of unsafe functions is only performed when the argument passed to filter is a string. However, passing an array as a callable argument allows the validation check to be skipped. Consequently, a low privileged attacker with login access to Grav Admin panel and page creation/update permissions is able to inject malicious templates to obtain remote code execution. The vulnerability can be found in the `GravExtension.filterFilter()` function declared in `/system/src/Grav/Common/Twig/Extension/GravExtension.php`. Version 1.7.42 contains a patch for this issue. End users should also ensure that `twig.undefined_functions` and `twig.undefined_filters` properties in `/path/to/webroot/system/config/system.yaml` configuration file are set to `false` to disallow Twig from treating undefined filters/functions as PHP functions and executing them.</description>
      <guid isPermaLink="false">CVE-2023-34252|2024-08-02T16:01:54.351Z</guid>
      <pubDate>Wed, 14 Jun 2023 21:38:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-34253|2024-08-02T16:01:54.414Z -- getgrav -- grav
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-34253</link>
      <description>Grav is a flat-file content management system. Prior to version 1.7.42, the denylist introduced in commit 9d6a2d to prevent dangerous functions from being executed via injection of malicious templates was insufficient and could be easily subverted in multiple ways -- (1) using unsafe functions that are not banned, (2) using capitalised callable names, and (3) using fully-qualified names for referencing callables. Consequently, a low privileged attacker with login access to Grav Admin panel and page creation/update permissions is able to inject malicious templates to obtain remote code execution. A patch in version 1.7.42 improves the denylist.</description>
      <guid isPermaLink="false">CVE-2023-34253|2024-08-02T16:01:54.414Z</guid>
      <pubDate>Wed, 14 Jun 2023 22:00:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-34448|2024-08-02T16:10:06.973Z -- getgrav -- grav
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-34448</link>
      <description>Grav is a flat-file content management system. Prior to version 1.7.42, the patch for CVE-2022-2073, a server-side template injection vulnerability in Grav leveraging the default `filter()` function, did not block other built-in functions exposed by Twig's Core Extension that could be used to invoke arbitrary unsafe functions, thereby allowing for remote code execution. A patch in version 1.74.2 overrides the built-in Twig `map()` and `reduce()` filter functions in `system/src/Grav/Common/Twig/Extension/GravExtension.php` to validate the argument passed to the filter in `$arrow`.</description>
      <guid isPermaLink="false">CVE-2023-34448|2024-08-02T16:10:06.973Z</guid>
      <pubDate>Wed, 14 Jun 2023 22:06:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34082|2024-08-02T02:42:59.940Z -- getgrav -- grav</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34082</link>
      <description>Grav is a file-based Web platform. Prior to version 1.7.46, a low privilege user account with page edit privilege can read any server files using Twig Syntax. This includes Grav user account files - `/grav/user/accounts/*.yaml`. This file stores hashed user password, 2FA secret, and the password reset token. This can allow an adversary to compromise any registered account and read any file in the web server by resetting a password for a user to get access to the password reset token from the file or by cracking the hashed password. A low privileged user may also perform a full account takeover of other registered users including Administrators. Version 1.7.46 contains a patch.</description>
      <guid isPermaLink="false">CVE-2024-34082|2024-08-02T02:42:59.940Z</guid>
      <pubDate>Wed, 15 May 2024 16:42:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28116|2024-08-01T20:56:23.682Z -- getgrav -- grav</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-28116</link>
      <description>Grav is an open-source, flat-file content management system. Grav CMS prior to version 1.7.45 is vulnerable to a Server-Side Template Injection (SSTI), which allows any authenticated user (editor permissions are sufficient) to execute arbitrary code on the remote server bypassing the existing security sandbox. Version 1.7.45 contains a patch for this issue.</description>
      <guid isPermaLink="false">CVE-2024-28116|2024-08-01T20:56:23.682Z</guid>
      <pubDate>Thu, 21 Mar 2024 21:44:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28118|2024-07-08T19:53:35.209Z -- getgrav -- grav</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-28118</link>
      <description>Grav is an open-source, flat-file content management system. Prior to version 1.7.45, due to the unrestricted access to twig extension class from Grav context, an attacker can redefine config variable. As a result, attacker can bypass a previous SSTI mitigation. Twig processing of static pages can be enabled in the front matter by any administrative user allowed to create or edit pages. As the Twig processor runs unsandboxed, this behavior can be used to gain arbitrary code execution and elevate privileges on the instance. Version 1.7.45 contains a fix for this issue.</description>
      <guid isPermaLink="false">CVE-2024-28118|2024-07-08T19:53:35.209Z</guid>
      <pubDate>Thu, 21 Mar 2024 21:55:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34082|2024-06-04T17:41:51.067Z -- getgrav -- grav</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-34082</link>
      <description>Grav is a file-based Web platform. Prior to version 1.7.46, a low privilege user account with page edit privilege can read any server files using Twig Syntax. This includes Grav user account files - `/grav/user/accounts/*.yaml`. This file stores hashed user password, 2FA secret, and the password reset token. This can allow an adversary to compromise any registered account and read any file in the web server by resetting a password for a user to get access to the password reset token from the file or by cracking the hashed password. A low privileged user may also perform a full account takeover of other registered users including Administrators. Version 1.7.46 contains a patch.</description>
      <guid isPermaLink="false">CVE-2024-34082|2024-06-04T17:41:51.067Z</guid>
      <pubDate>Wed, 15 May 2024 16:42:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27921|2024-03-21T21:53:24.837Z -- getgrav -- grav</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27921</link>
      <description>Grav is an open-source, flat-file content management system. A file upload path traversal vulnerability has been identified in the application prior to version 1.7.45, enabling attackers to replace or create files with extensions like .json, .zip, .css, .gif, etc. This critical security flaw poses severe risks, that can allow attackers to inject arbitrary code on the server, undermine integrity of backup files by overwriting existing files or creating new ones, and exfiltrate sensitive data using CSS exfiltration techniques. Upgrading to patched version 1.7.45 can mitigate the issue.</description>
      <guid isPermaLink="false">CVE-2024-27921|2024-03-21T21:53:24.837Z</guid>
      <pubDate>Thu, 21 Mar 2024 21:38:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27923|2024-03-06T20:28:46.695Z -- getgrav -- grav</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27923</link>
      <description>Grav is a content management system (CMS). Prior to version 1.7.43, users who may write a page may use the `frontmatter` feature due to insufficient permission validation and inadequate file name validation. This may lead to remote code execution. Version 1.7.43 fixes this issue.</description>
      <guid isPermaLink="false">CVE-2024-27923|2024-03-06T20:28:46.695Z</guid>
      <pubDate>Wed, 06 Mar 2024 20:28:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28119|2024-03-21T22:02:04.145Z -- getgrav -- grav</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28119</link>
      <description>Grav is an open-source, flat-file content management system. Prior to version 1.7.45, due to the unrestricted access to twig extension class from grav context, an attacker can redefine the escape function and execute arbitrary commands. Twig processing of static pages can be enabled in the front matter by any administrative user allowed to create or edit pages. As the Twig processor runs unsandboxed, this behavior can be used to gain arbitrary code execution and elevate privileges on the instance. Version 1.7.45 contains a patch for this issue.</description>
      <guid isPermaLink="false">CVE-2024-28119|2024-03-21T22:02:04.145Z</guid>
      <pubDate>Thu, 21 Mar 2024 22:02:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28118|2024-03-21T21:55:11.788Z -- getgrav -- grav</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28118</link>
      <description>Grav is an open-source, flat-file content management system. Prior to version 1.7.45, due to the unrestricted access to twig extension class from Grav context, an attacker can redefine config variable. As a result, attacker can bypass a previous SSTI mitigation. Twig processing of static pages can be enabled in the front matter by any administrative user allowed to create or edit pages. As the Twig processor runs unsandboxed, this behavior can be used to gain arbitrary code execution and elevate privileges on the instance. Version 1.7.45 contains a fix for this issue.</description>
      <guid isPermaLink="false">CVE-2024-28118|2024-03-21T21:55:11.788Z</guid>
      <pubDate>Thu, 21 Mar 2024 21:55:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28117|2024-03-21T21:53:10.814Z -- getgrav -- grav</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28117</link>
      <description>Grav is an open-source, flat-file content management system. Prior to version 1.7.45, Grav validates accessible functions through the Utils::isDangerousFunction function, but does not impose restrictions on twig functions like twig_array_map, allowing attackers to bypass the validation and execute arbitrary commands. Twig processing of static pages can be enabled in the front matter by any administrative user allowed to create or edit pages. As the Twig processor runs unsandboxed, this behavior can be used to gain arbitrary code execution and elevate privileges on the instance. Upgrading to patched version 1.7.45 can mitigate this issue.</description>
      <guid isPermaLink="false">CVE-2024-28117|2024-03-21T21:53:10.814Z</guid>
      <pubDate>Thu, 21 Mar 2024 21:50:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28116|2024-03-21T21:44:29.489Z -- getgrav -- grav</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28116</link>
      <description>Grav is an open-source, flat-file content management system. Grav CMS prior to version 1.7.45 is vulnerable to a Server-Side Template Injection (SSTI), which allows any authenticated user (editor permissions are sufficient) to execute arbitrary code on the remote server bypassing the existing security sandbox. Version 1.7.45 contains a patch for this issue.</description>
      <guid isPermaLink="false">CVE-2024-28116|2024-03-21T21:44:29.489Z</guid>
      <pubDate>Thu, 21 Mar 2024 21:44:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27921|2024-07-18T14:30:02.488Z -- getgrav -- grav</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27921</link>
      <description>Grav is an open-source, flat-file content management system. A file upload path traversal vulnerability has been identified in the application prior to version 1.7.45, enabling attackers to replace or create files with extensions like .json, .zip, .css, .gif, etc. This critical security flaw poses severe risks, that can allow attackers to inject arbitrary code on the server, undermine integrity of backup files by overwriting existing files or creating new ones, and exfiltrate sensitive data using CSS exfiltration techniques. Upgrading to patched version 1.7.45 can mitigate the issue.</description>
      <guid isPermaLink="false">CVE-2024-27921|2024-07-18T14:30:02.488Z</guid>
      <pubDate>Thu, 21 Mar 2024 21:38:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27923|2024-08-02T00:41:55.863Z -- getgrav -- grav</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27923</link>
      <description>Grav is a content management system (CMS). Prior to version 1.7.43, users who may write a page may use the `frontmatter` feature due to insufficient permission validation and inadequate file name validation. This may lead to remote code execution. Version 1.7.43 fixes this issue.</description>
      <guid isPermaLink="false">CVE-2024-27923|2024-08-02T00:41:55.863Z</guid>
      <pubDate>Wed, 06 Mar 2024 20:28:46 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28119|2024-08-02T00:48:49.108Z -- getgrav -- grav</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-28119</link>
      <description>Grav is an open-source, flat-file content management system. Prior to version 1.7.45, due to the unrestricted access to twig extension class from grav context, an attacker can redefine the escape function and execute arbitrary commands. Twig processing of static pages can be enabled in the front matter by any administrative user allowed to create or edit pages. As the Twig processor runs unsandboxed, this behavior can be used to gain arbitrary code execution and elevate privileges on the instance. Version 1.7.45 contains a patch for this issue.</description>
      <guid isPermaLink="false">CVE-2024-28119|2024-08-02T00:48:49.108Z</guid>
      <pubDate>Thu, 21 Mar 2024 22:02:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28116|2024-08-02T00:48:49.256Z -- getgrav -- grav</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-28116</link>
      <description>Grav is an open-source, flat-file content management system. Grav CMS prior to version 1.7.45 is vulnerable to a Server-Side Template Injection (SSTI), which allows any authenticated user (editor permissions are sufficient) to execute arbitrary code on the remote server bypassing the existing security sandbox. Version 1.7.45 contains a patch for this issue.</description>
      <guid isPermaLink="false">CVE-2024-28116|2024-08-02T00:48:49.256Z</guid>
      <pubDate>Thu, 21 Mar 2024 21:44:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28118|2024-08-02T00:48:49.053Z -- getgrav -- grav</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-28118</link>
      <description>Grav is an open-source, flat-file content management system. Prior to version 1.7.45, due to the unrestricted access to twig extension class from Grav context, an attacker can redefine config variable. As a result, attacker can bypass a previous SSTI mitigation. Twig processing of static pages can be enabled in the front matter by any administrative user allowed to create or edit pages. As the Twig processor runs unsandboxed, this behavior can be used to gain arbitrary code execution and elevate privileges on the instance. Version 1.7.45 contains a fix for this issue.</description>
      <guid isPermaLink="false">CVE-2024-28118|2024-08-02T00:48:49.053Z</guid>
      <pubDate>Thu, 21 Mar 2024 21:55:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28117|2024-08-02T00:48:48.939Z -- getgrav -- grav</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-28117</link>
      <description>Grav is an open-source, flat-file content management system. Prior to version 1.7.45, Grav validates accessible functions through the Utils::isDangerousFunction function, but does not impose restrictions on twig functions like twig_array_map, allowing attackers to bypass the validation and execute arbitrary commands. Twig processing of static pages can be enabled in the front matter by any administrative user allowed to create or edit pages. As the Twig processor runs unsandboxed, this behavior can be used to gain arbitrary code execution and elevate privileges on the instance. Upgrading to patched version 1.7.45 can mitigate this issue.</description>
      <guid isPermaLink="false">CVE-2024-28117|2024-08-02T00:48:48.939Z</guid>
      <pubDate>Thu, 21 Mar 2024 21:50:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27921|2024-08-02T00:41:55.858Z -- getgrav -- grav</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27921</link>
      <description>Grav is an open-source, flat-file content management system. A file upload path traversal vulnerability has been identified in the application prior to version 1.7.45, enabling attackers to replace or create files with extensions like .json, .zip, .css, .gif, etc. This critical security flaw poses severe risks, that can allow attackers to inject arbitrary code on the server, undermine integrity of backup files by overwriting existing files or creating new ones, and exfiltrate sensitive data using CSS exfiltration techniques. Upgrading to patched version 1.7.45 can mitigate the issue.</description>
      <guid isPermaLink="false">CVE-2024-27921|2024-08-02T00:41:55.858Z</guid>
      <pubDate>Thu, 21 Mar 2024 21:38:29 +0000</pubDate>
    </item>
  </channel>
</rss>

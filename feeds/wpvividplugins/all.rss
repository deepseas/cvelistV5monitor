<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for wpvividplugins -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/wpvividplugins/all.rss</link>
    <description>The latest CVEs for wpvividplugins -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 21 Aug 2024 21:21:54 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-4637|2024-08-21T15:35:59.814Z -- wpvividplugins -- migration%2C%20backup%2C%20staging%20%E2%80%93%20wpvivid
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-4637</link>
      <description>The WPvivid plugin for WordPress is vulnerable to unauthorized access of data due to a missing capability check on the restore() and get_restore_progress() function in versions up to, and including, 0.9.94. This makes it possible for unauthenticated attackers to invoke these functions and obtain full file paths if they have access to a back-up ID.</description>
      <guid isPermaLink="false">CVE-2023-4637|2024-08-21T15:35:59.814Z</guid>
      <pubDate>Mon, 05 Feb 2024 21:21:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1981|2024-08-08T20:09:59.946Z -- wpvividplugins -- migration%2C%20backup%2C%20staging%20%E2%80%93%20wpvivid</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1981</link>
      <description>The Migration, Backup, Staging – WPvivid plugin for WordPress is vulnerable to SQL Injection via the 'table_prefix' parameter in version 0.9.68 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description>
      <guid isPermaLink="false">CVE-2024-1981|2024-08-08T20:09:59.946Z</guid>
      <pubDate>Thu, 29 Feb 2024 06:47:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3054|2024-08-01T19:32:42.600Z -- wpvividplugins -- migration%2C%20backup%2C%20staging%20%E2%80%93%20wpvivid</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-3054</link>
      <description>WPvivid Backup &amp; Migration Plugin for WordPress is vulnerable to PHAR Deserialization in all versions up to, and including, 0.9.99 via deserialization of untrusted input at the wpvividstg_get_custom_exclude_path_free action. This is due to the plugin not providing sufficient path validation on the tree_node[node][id] parameter. This makes it possible for authenticated attackers, with admin-level access and above, to call files using a PHAR wrapper that will deserialize the data and call arbitrary PHP Objects. No POP chain is present in the vulnerable plugin. If a POP chain is present via an additional plugin or theme installed on the target system, it could allow the attacker to delete arbitrary files, retrieve sensitive data, or execute code.</description>
      <guid isPermaLink="false">CVE-2024-3054|2024-08-01T19:32:42.600Z</guid>
      <pubDate>Fri, 12 Apr 2024 09:30:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1982|2024-06-24T15:20:20.818Z -- wpvividplugins -- migration%2C%20backup%2C%20staging%20%E2%80%93%20wpvivid</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1982</link>
      <description>The Migration, Backup, Staging – WPvivid plugin for WordPress is vulnerable to unauthorized access due to a missing capability check on the get_restore_progress() and restore() functions in all versions up to, and including, 0.9.68. This makes it possible for unauthenticated attackers to exploit a SQL injection vulnerability or trigger a DoS.</description>
      <guid isPermaLink="false">CVE-2024-1982|2024-06-24T15:20:20.818Z</guid>
      <pubDate>Thu, 29 Feb 2024 06:47:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-3054|2024-06-04T17:32:37.570Z -- wpvividplugins -- migration%2C%20backup%2C%20staging%20%E2%80%93%20wpvivid</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3054</link>
      <description>WPvivid Backup &amp; Migration Plugin for WordPress is vulnerable to PHAR Deserialization in all versions up to, and including, 0.9.99 via deserialization of untrusted input at the wpvividstg_get_custom_exclude_path_free action. This is due to the plugin not providing sufficient path validation on the tree_node[node][id] parameter. This makes it possible for authenticated attackers, with admin-level access and above, to call files using a PHAR wrapper that will deserialize the data and call arbitrary PHP Objects. No POP chain is present in the vulnerable plugin. If a POP chain is present via an additional plugin or theme installed on the target system, it could allow the attacker to delete arbitrary files, retrieve sensitive data, or execute code.</description>
      <guid isPermaLink="false">CVE-2024-3054|2024-06-04T17:32:37.570Z</guid>
      <pubDate>Fri, 12 Apr 2024 09:30:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1981|2024-02-29T06:47:57.610Z -- wpvividplugins -- migration%2C%20backup%2C%20staging%20%E2%80%93%20wpvivid</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1981</link>
      <description>The Migration, Backup, Staging – WPvivid plugin for WordPress is vulnerable to SQL Injection via the 'table_prefix' parameter in version 0.9.68 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description>
      <guid isPermaLink="false">CVE-2024-1981|2024-02-29T06:47:57.610Z</guid>
      <pubDate>Thu, 29 Feb 2024 06:47:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1383|2024-06-04T18:00:49.249Z -- wpvividplugins -- wpvivid%20backup%20for%20mainwp</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1383</link>
      <description>The WPvivid Backup for MainWP plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the 'id' parameter in all versions up to, and including, 0.9.32 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description>
      <guid isPermaLink="false">CVE-2024-1383|2024-06-04T18:00:49.249Z</guid>
      <pubDate>Wed, 13 Mar 2024 15:26:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1982|2024-02-29T06:47:56.555Z -- wpvividplugins -- migration%2C%20backup%2C%20staging%20%E2%80%93%20wpvivid</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1982</link>
      <description>The Migration, Backup, Staging – WPvivid plugin for WordPress is vulnerable to unauthorized access due to a missing capability check on the get_restore_progress() and restore() functions in all versions up to, and including, 0.9.68. This makes it possible for unauthenticated attackers to exploit a SQL injection vulnerability or trigger a DoS.</description>
      <guid isPermaLink="false">CVE-2024-1982|2024-02-29T06:47:56.555Z</guid>
      <pubDate>Thu, 29 Feb 2024 06:47:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1383|2024-08-01T18:40:20.439Z -- wpvividplugins -- wpvivid%20backup%20for%20mainwp</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1383</link>
      <description>The WPvivid Backup for MainWP plugin for WordPress is vulnerable to Reflected Cross-Site Scripting via the 'id' parameter in all versions up to, and including, 0.9.32 due to insufficient input sanitization and output escaping. This makes it possible for unauthenticated attackers to inject arbitrary web scripts in pages that execute if they can successfully trick a user into performing an action such as clicking on a link.</description>
      <guid isPermaLink="false">CVE-2024-1383|2024-08-01T18:40:20.439Z</guid>
      <pubDate>Wed, 13 Mar 2024 15:26:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1981|2024-08-01T18:56:22.640Z -- wpvividplugins -- migration%2C%20backup%2C%20staging%20%E2%80%93%20wpvivid</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1981</link>
      <description>The Migration, Backup, Staging – WPvivid plugin for WordPress is vulnerable to SQL Injection via the 'table_prefix' parameter in version 0.9.68 due to insufficient escaping on the user supplied parameter and lack of sufficient preparation on the existing SQL query.  This makes it possible for unauthenticated attackers to append additional SQL queries into already existing queries that can be used to extract sensitive information from the database.</description>
      <guid isPermaLink="false">CVE-2024-1981|2024-08-01T18:56:22.640Z</guid>
      <pubDate>Thu, 29 Feb 2024 06:47:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1982|2024-08-01T18:56:22.658Z -- wpvividplugins -- migration%2C%20backup%2C%20staging%20%E2%80%93%20wpvivid</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1982</link>
      <description>The Migration, Backup, Staging – WPvivid plugin for WordPress is vulnerable to unauthorized access due to a missing capability check on the get_restore_progress() and restore() functions in all versions up to, and including, 0.9.68. This makes it possible for unauthenticated attackers to exploit a SQL injection vulnerability or trigger a DoS.</description>
      <guid isPermaLink="false">CVE-2024-1982|2024-08-01T18:56:22.658Z</guid>
      <pubDate>Thu, 29 Feb 2024 06:47:56 +0000</pubDate>
    </item>
  </channel>
</rss>

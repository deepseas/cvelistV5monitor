<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for KUKA Roboter GmbH -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/kuka%20roboter%20gmbh/all.rss</link>
    <description>The latest CVEs for KUKA Roboter GmbH -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 19:19:43 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2020-10268|2024-08-04T10:58:40.108Z -- kuka%20roboter%20gmbh -- kr3r540%2C%20krc4%2C%20kss8.5.7hf1%2C%20win7_embedded
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-10268</link>
      <description>Critical services for operation can be terminated from windows task manager, bringing the manipulator to a halt. After this a Re-Calibration of the brakes needs to be performed. Be noted that this only can be accomplished either by a Kuka technician or by Kuka issued calibration hardware that interfaces with the manipulator furthering the delay and increasing operational costs.</description>
      <guid isPermaLink="false">CVE-2020-10268|2024-08-04T10:58:40.108Z</guid>
      <pubDate>Tue, 16 Jun 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-10292|2024-08-04T10:58:40.018Z -- kuka%20roboter%20gmbh -- visual%20components%20network%20license%20server%202.0.8
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-10292</link>
      <description>Visual Components (owned by KUKA) is a robotic simulator that allows simulating factories and robots in order toimprove planning and decision-making processes. Visual Components software requires a special license which can beobtained from a network license server. The network license server binds to all interfaces (0.0.0.0) and listensfor packets over UDP port 5093. No authentication/authorization is required in order to communicate with theserver. The protocol being used is a property protocol by RMS Sentinel which provides the licensing infrastructurefor the network license server. RMS Sentinel license manager service exposes UDP port 5093 which provides sensitivesystem information that could be leveraged for further exploitation without any kind of authentication. Thisinformation includes detailed hardware and OS characteristics.After a decryption process, a textual protocol is found which contains a simple header with the requested command,application-identifier, and some arguments. The protocol is vulnerable to DoS through an arbitrary pointerderreference. This flaw allows an attacker to to pass a specially crafted package that, when processed by theservice, causes an arbitrary pointer from the stack to be dereferenced, causing an uncaught exception thatterminates the service. This can be further contructed in combination with RVDP#710 which exploits an informationdisclosure leak, or with RVDP#711 for an stack-overflow and potential code execution.Beyond denying simulations, Visual Components provides capabilities to interface with industrial machinery andautomate certain processes (e.g. testing, benchmarking, etc.) which depending on the DevOps setup might beintegrated into the industrial flow. Accordingly, a DoS in the simulation might have higher repercusions, dependingon the Industrial Control System (ICS) ICS infrastructure.</description>
      <guid isPermaLink="false">CVE-2020-10292|2024-08-04T10:58:40.018Z</guid>
      <pubDate>Fri, 06 Nov 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-10291|2024-08-04T10:58:40.508Z -- kuka%20roboter%20gmbh -- visual%20components%20network%20license%20server%202.0.8
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-10291</link>
      <description>Visual Components (owned by KUKA) is a robotic simulator that allows simulating factories and robots in order toimprove planning and decision-making processes. Visual Components software requires a special license which can beobtained from a network license server. The network license server binds to all interfaces (0.0.0.0) and listensfor packets over UDP port 5093. No authentication/authorization is required in order to communicate with theserver. The protocol being used is a property protocol by RMS Sentinel which provides the licensing infrastructurefor the network license server. RMS Sentinel license manager service exposes UDP port 5093 which provides sensitivesystem information that could be leveraged for further exploitation without any kind of authentication. Thisinformation includes detailed hardware and OS characteristics.After a decryption process, a textual protocol is found which contains a simple header with the requested command,application-identifier, and some arguments. The protocol leaks information regarding the receiving serverinformation, license information and managing licenses, among others.Through this flaw, attackers can retreive information about a KUKA simulation system, particularly, the version ofthe licensing server, which is connected to the simulator, and which will allow them to launch local simulationswith similar characteristics, further understanding the dynamics of motion virtualization and opening doors toother attacks (see RVDP#711 and RVDP#712 for subsequent vulnerabilities that compromise integrity andavailability).Beyond compromising simulations, Visual Components provides capabilities to interface with industrial machinery.Particularly, their PLC Connectivity feature 'makes it easy' to connect simulations with control systems usingeither the industry standard OPC UA or other supported vendor specific interfaces. This fills the gap of jumpingfrom simulation to real and enables attackers to pivot from the Visual Components simulator to robots or otherIndustrial Control System (ICS) devices, such as PLCs.</description>
      <guid isPermaLink="false">CVE-2020-10291|2024-08-04T10:58:40.508Z</guid>
      <pubDate>Fri, 06 Nov 2020 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>

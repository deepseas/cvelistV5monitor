<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>CVE Feed for PHP Group -- PHP</title><link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/php%20group/php.rss</link><description>The latest CVEs for PHP Group -- PHP</description><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><lastBuildDate>Tue, 28 May 2024 22:02:42 +0000</lastBuildDate><ttl>60</ttl><item><title>CVE-2024-1874|2024-04-29T03:57:35.624Z -- PHP Group -- PHP
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1874</link><description>In PHP versions 8.1.* before 8.1.28, 8.2.* before 8.2.18, 8.3.* before 8.3.5, when using proc_open() command with array syntax, due to insufficient escaping, if the arguments of the executed command are controlled by a malicious user, the user can supply arguments that would execute arbitrary commands in Windows shell. 

</description><guid isPermaLink="false">CVE-2024-1874|2024-04-29T03:57:35.624Z</guid><pubDate>Mon, 29 Apr 2024 03:57:35 +0000</pubDate></item><item><title>CVE-2024-3096|2024-04-29T03:42:04.093Z -- PHP Group -- PHP
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3096</link><description>In PHP  version 8.1.* before 8.1.28, 8.2.* before 8.2.18, 8.3.* before 8.3.5, if a password stored with password_hash() starts with a null byte (\x00), testing a blank string as the password via password_verify() will incorrectly return true.

</description><guid isPermaLink="false">CVE-2024-3096|2024-04-29T03:42:04.093Z</guid><pubDate>Mon, 29 Apr 2024 03:42:04 +0000</pubDate></item><item><title>CVE-2024-2757|2024-04-29T03:49:15.519Z -- PHP Group -- PHP
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2757</link><description>In PHP 8.3.* before 8.3.5, function mb_encode_mimeheader() runs endlessly for some inputs that contain long strings of non-space characters followed by a space. This could lead to a potential DoS attack if a hostile user sends data to an application that uses this function. 

</description><guid isPermaLink="false">CVE-2024-2757|2024-04-29T03:49:15.519Z</guid><pubDate>Mon, 29 Apr 2024 03:49:15 +0000</pubDate></item><item><title>CVE-2024-2756|2024-04-29T03:34:16.912Z -- PHP Group -- PHP
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2756</link><description>Due to an incomplete fix to  CVE-2022-31629 https://github.com/advisories/GHSA-c43m-486j-j32p , network and same-site attackers can set a standard insecure cookie in the victim's browser which is treated as a __Host- or __Secure- cookie by PHP applications. 
</description><guid isPermaLink="false">CVE-2024-2756|2024-04-29T03:34:16.912Z</guid><pubDate>Mon, 29 Apr 2024 03:34:16 +0000</pubDate></item></channel></rss>
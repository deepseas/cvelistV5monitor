<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for xwiki-contrib -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/xwiki-contrib/all.rss</link>
    <description>The latest CVEs for xwiki-contrib -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 23:21:25 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-48292|2024-08-02T21:23:39.506Z -- xwiki-contrib -- application-admintools
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-48292</link>
      <description>The XWiki Admin Tools Application provides tools to help the administration of XWiki. Starting in version 4.4 and prior to version 4.5.1, a cross site request forgery vulnerability in the admin tool for executing shell commands on the server allows an attacker to execute arbitrary shell commands by tricking an admin into loading the URL with the shell command. A very simple possibility for an attack are comments. When the attacker can leave a comment on any page in the wiki it is sufficient to include an image with an URL like  `/xwiki/bin/view/Admin/RunShellCommand?command=touch%20/tmp/attacked` in the comment. When an admin views the comment, the file `/tmp/attacked` will be created on the server. The output of the command is also vulnerable to XWiki syntax injection which offers a simple way to execute Groovy in the context of the XWiki installation and thus an even easier way to compromise the integrity and confidentiality of the whole XWiki installation. This has been patched by adding a form token check in version 4.5.1 of the admin tools. Some workarounds are available. The patch can be applied manually to the affected wiki pages. Alternatively, the document `Admin.RunShellCommand` can also be deleted if the possibility to run shell commands isn't needed.</description>
      <guid isPermaLink="false">CVE-2023-48292|2024-08-02T21:23:39.506Z</guid>
      <pubDate>Mon, 20 Nov 2023 18:02:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-22457|2024-08-02T10:13:48.348Z -- xwiki-contrib -- application-ckeditor
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-22457</link>
      <description>CKEditor Integration UI adds support for editing wiki pages using CKEditor. Prior to versions 1.64.3,t he `CKEditor.HTMLConverter` document lacked a protection against Cross-Site Request Forgery (CSRF), allowing to execute macros with the rights of the current user. If a privileged user with programming rights was tricked into executing a GET request to this document with certain parameters (e.g., via an image with a corresponding URL embedded in a comment or via a redirect), this would allow arbitrary remote code execution and the attacker could gain rights, access private information or impact the availability of the wiki. The issue has been patched in the CKEditor Integration version 1.64.3. This has also been patched in the version of the CKEditor integration that is bundled starting with XWiki 14.6 RC1. There are no known workarounds for this other than upgrading the CKEditor integration to a fixed version.</description>
      <guid isPermaLink="false">CVE-2023-22457|2024-08-02T10:13:48.348Z</guid>
      <pubDate>Wed, 04 Jan 2023 14:24:39 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-49280|2024-08-02T21:53:45.351Z -- xwiki-contrib -- application-changerequest
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-49280</link>
      <description>XWiki Change Request is an XWiki application allowing to request changes on a wiki without publishing directly the changes. Change request allows to edit any page by default, and the changes are then exported in an XML file that anyone can download. So it's possible for an attacker to obtain password hash of users by performing an edit on the user profiles and then downloading the XML file that has been created. This is also true for any document that might contain password field and that a user can view.
This vulnerability impacts all version of Change Request, but the impact depends on the rights that has been set on the wiki since it requires for the user to have the Change request right (allowed by default) and view rights on the page to target. This issue cannot be easily exploited in an automated way. The patch consists in denying to users the right of editing pages that contains a password field with change request. It means that already existing change request for those pages won't be removed by the patch, administrators needs to take care of it. The patch is provided in Change Request 1.10, administrators should upgrade immediately. It's possible to workaround the vulnerability by denying manually the Change request right on some spaces, such as XWiki space which will include any user profile by default.</description>
      <guid isPermaLink="false">CVE-2023-49280|2024-08-02T21:53:45.351Z</guid>
      <pubDate>Mon, 04 Dec 2023 22:33:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-48293|2024-08-02T21:23:39.486Z -- xwiki-contrib -- application-admintools
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-48293</link>
      <description>The XWiki Admin Tools Application provides tools to help the administration of XWiki. Prior to version 4.5.1, a cross-site request forgery vulnerability in the query on XWiki tool allows executing arbitrary database queries on the database of the XWiki installation. Among other things, this allows modifying and deleting all data of the wiki. This could be both used to damage the wiki and to create an account with elevated privileges for the attacker, thus impacting the confidentiality, integrity and availability of the whole XWiki instance. A possible attack vector are comments on the wiki, by embedding an image with wiki syntax like `[[image:path:/xwiki/bin/view/Admin/QueryOnXWiki?query=DELETE%20FROM%20xwikidoc]]`, all documents would be deleted from the database when an admin user views this comment. This has been patched in Admin Tools Application 4.5.1 by adding form token checks. Some workarounds are available. The patch can also be applied manually to the affected pages. Alternatively, if the query tool is not needed, by deleting the document `Admin.SQLToolsGroovy`, all database query tools can be deactivated.</description>
      <guid isPermaLink="false">CVE-2023-48293|2024-08-02T21:23:39.486Z</guid>
      <pubDate>Mon, 20 Nov 2023 18:14:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-45138|2024-08-02T20:14:19.319Z -- xwiki-contrib -- application-changerequest
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-45138</link>
      <description>Change Request is an pplication allowing users to request changes on a wiki without publishing the changes directly. Starting in version 0.11 and prior to version 1.9.2, it's possible for a user without any specific right to perform script injection and remote code execution just by inserting an appropriate title when creating a new Change Request. This vulnerability is particularly critical as Change Request aims at being created by user without any particular rights. The vulnerability has been fixed in Change Request 1.9.2. It's possible to workaround the issue without upgrading by editing the document `ChangeRequest.Code.ChangeRequestSheet` and by performing the same change as in the fix commit.</description>
      <guid isPermaLink="false">CVE-2023-45138|2024-08-02T20:14:19.319Z</guid>
      <pubDate>Thu, 12 Oct 2023 16:22:10 +0000</pubDate>
    </item>
  </channel>
</rss>

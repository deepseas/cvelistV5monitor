<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Symantec Corporation -- Endpoint Protection</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/symantec%20corporation/endpoint%20protection.rss</link>
    <description>The latest CVEs for Symantec Corporation -- Endpoint Protection</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Tue, 06 Aug 2024 17:22:48 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2016-9094|2024-08-06T02:42:10.411Z -- symantec%20corporation -- endpoint%20protection
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-9094</link>
      <description>Symantec Endpoint Protection clients place detected malware in quarantine as part of the intended product functionality. The quarantine logs can be exported for review by the user in a variety of formats including .CSV files. Prior to 14.0 MP1 and 12.1 RU6 MP7, the potential exists for file metadata to be interpreted and evaluated as a formula. Successful exploitation of an attack of this type requires considerable direct user-interaction from the user exporting and then opening the log files on the intended target client.</description>
      <guid isPermaLink="false">CVE-2016-9094|2024-08-06T02:42:10.411Z</guid>
      <pubDate>Thu, 06 Apr 2017 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2016-9093|2024-08-06T02:42:10.685Z -- symantec%20corporation -- endpoint%20protection
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-9093</link>
      <description>A version of the SymEvent Driver that shipped with Symantec Endpoint Protection 12.1 RU6 MP6 and earlier fails to properly sanitize logged-in user input. SEP 14.0 and later are not impacted by this issue. A non-admin user would need to be able to save an executable file to disk and then be able to successfully run that file. If properly constructed, the file could access the driver interface and potentially manipulate certain system calls. On all 32-bit systems and in most cases on 64-bit systems, this will result in a denial of service that will crash the system. In very narrow circumstances, and on 64-bit systems only, this could allow the user to run arbitrary code on the local machine with kernel-level privileges. This could result in a non-privileged user gaining privileged access on the local machine.</description>
      <guid isPermaLink="false">CVE-2016-9093|2024-08-06T02:42:10.685Z</guid>
      <pubDate>Thu, 06 Apr 2017 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>

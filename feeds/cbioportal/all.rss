<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for cBioPortal -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/cbioportal/all.rss</link>
    <description>The latest CVEs for cBioPortal -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Thu, 25 Jul 2024 15:22:35 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-41668|2024-07-25T14:47:53.439Z -- cbioportal -- cbioportal
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-41668</link>
      <description>The cBioPortal for Cancer Genomics provides visualization, analysis, and download of large-scale cancer genomics data sets. When running a publicly exposed proxy endpoint without authentication, cBioPortal could allow someone to perform a Server Side Request Forgery (SSRF) attack. Logged in users could do the same on private instances. A fix has been released in version 6.0.12. As a workaround, one might be able to disable `/proxy` endpoint entirely via, for example, nginx.</description>
      <guid isPermaLink="false">CVE-2024-41668|2024-07-25T14:47:53.439Z</guid>
      <pubDate>Tue, 23 Jul 2024 18:14:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-41668|2024-07-23T18:14:41.169Z -- cbioportal -- cbioportal</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-41668</link>
      <description>The cBioPortal for Cancer Genomics provides visualization, analysis, and download of large-scale cancer genomics data sets. When running a publicly exposed proxy endpoint without authentication, cBioPortal could allow someone to perform a Server Side Request Forgery (SSRF) attack. Logged in users could do the same on private instances. A fix has been released in version 6.0.12. As a workaround, one might be able to disable `/proxy` endpoint entirely via, for example, nginx.</description>
      <guid isPermaLink="false">CVE-2024-41668|2024-07-23T18:14:41.169Z</guid>
      <pubDate>Tue, 23 Jul 2024 18:14:41 +0000</pubDate>
    </item>
  </channel>
</rss>

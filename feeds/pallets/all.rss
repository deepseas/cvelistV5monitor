<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>CVE Feed for pallets -- all</title><link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/pallets/all.rss</link><description>The latest CVEs for pallets -- all</description><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><lastBuildDate>Fri, 24 May 2024 21:24:11 +0000</lastBuildDate><ttl>60</ttl><item><title>CVE-2024-22195|2024-01-11T02:25:44.239Z -- pallets -- jinja
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-22195</link><description>Jinja is an extensible templating engine. Special placeholders in the template allow writing code similar to Python syntax. It is possible to inject arbitrary HTML attributes into the rendered HTML template, potentially leading to Cross-Site Scripting (XSS). The Jinja `xmlattr` filter can be abused to inject arbitrary HTML attribute keys and values, bypassing the auto escaping mechanism and potentially leading to XSS. It may also be possible to bypass attribute validation checks if they are blacklist-based.
</description><guid isPermaLink="false">CVE-2024-22195|2024-01-11T02:25:44.239Z</guid><pubDate>Thu, 11 Jan 2024 02:25:44 +0000</pubDate></item><item><title>CVE-2024-34064|2024-05-06T14:41:39.912Z -- pallets -- jinja
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-34064</link><description>Jinja is an extensible templating engine. The `xmlattr` filter in affected versions of Jinja accepts keys containing non-attribute characters. XML/HTML attributes cannot contain spaces, `/`, `&gt;`, or `=`, as each would then be interpreted as starting a separate attribute. If an application accepts keys (as opposed to only values) as user input, and renders these in pages that other users see as well, an attacker could use this to inject other attributes and perform XSS. The fix for CVE-2024-22195 only addressed spaces but not other characters. Accepting keys as user input is now explicitly considered an unintended use case of the `xmlattr` filter, and code that does so without otherwise validating the input should be flagged as insecure, regardless of Jinja version. Accepting _values_ as user input continues to be safe. This vulnerability is fixed in 3.1.4.</description><guid isPermaLink="false">CVE-2024-34064|2024-05-06T14:41:39.912Z</guid><pubDate>Mon, 06 May 2024 14:41:39 +0000</pubDate></item><item><title>CVE-2024-34069|2024-05-06T14:44:38.780Z -- pallets -- werkzeug
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-34069</link><description>Werkzeug is a comprehensive WSGI web application library. The debugger in affected versions of Werkzeug can allow an attacker to execute code on a developer's machine under some circumstances. This requires the attacker to get the developer to interact with a domain and subdomain they control, and enter the debugger PIN, but if they are successful it allows access to the debugger even if it is only running on localhost. This also requires the attacker to guess a URL in the developer's application that will trigger the debugger. This vulnerability is fixed in 3.0.3.</description><guid isPermaLink="false">CVE-2024-34069|2024-05-06T14:44:38.780Z</guid><pubDate>Mon, 06 May 2024 14:44:38 +0000</pubDate></item></channel></rss>
<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>CVE Feed for helm -- all</title><link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/helm/all.rss</link><description>The latest CVEs for helm -- all</description><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><lastBuildDate>Tue, 28 May 2024 21:54:24 +0000</lastBuildDate><ttl>60</ttl><item><title>CVE-2024-26147|2024-02-21T22:21:42.658Z -- helm -- helm
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-26147</link><description>Helm is a package manager for Charts for Kubernetes. Versions prior to 3.14.2 contain an uninitialized variable vulnerability when Helm parses index and plugin yaml files missing expected content. When either an `index.yaml` file or a plugins `plugin.yaml` file were missing all metadata a panic would occur in Helm. In the Helm SDK, this is found when using the `LoadIndexFile` or `DownloadIndexFile` functions in the `repo` package or the `LoadDir` function in the `plugin` package. For the Helm client this impacts functions around adding a repository and all Helm functions if a malicious plugin is added as Helm inspects all known plugins on each invocation. This issue has been resolved in Helm v3.14.2. If a malicious plugin has been added which is causing all Helm client commands to panic, the malicious plugin can be manually removed from the filesystem. If using Helm SDK versions prior to 3.14.2, calls to affected functions can use `recover` to catch the panic.</description><guid isPermaLink="false">CVE-2024-26147|2024-02-21T22:21:42.658Z</guid><pubDate>Wed, 21 Feb 2024 22:21:42 +0000</pubDate></item><item><title>CVE-2024-25620|2024-02-14T23:24:57.651Z -- helm -- helm
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-25620</link><description>Helm is a tool for managing Charts. Charts are packages of pre-configured Kubernetes resources. When either the Helm client or SDK is used to save a chart whose name within the `Chart.yaml` file includes a relative path change, the chart would be saved outside its expected directory based on the changes in the relative path. The validation and linting did not detect the path changes in the name. This issue has been resolved in Helm v3.14.1. Users unable to upgrade should check all charts used by Helm for path changes in their name as found in the `Chart.yaml` file. This includes dependencies.</description><guid isPermaLink="false">CVE-2024-25620|2024-02-14T23:24:57.651Z</guid><pubDate>Wed, 14 Feb 2024 23:24:57 +0000</pubDate></item></channel></rss>
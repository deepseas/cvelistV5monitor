<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for helm -- helm</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/helm/helm.rss</link>
    <description>The latest CVEs for helm -- helm</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 16:23:57 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2020-15187|2024-08-04T13:08:22.691Z -- helm -- helm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-15187</link>
      <description>In Helm before versions 2.16.11 and 3.3.2, a Helm plugin can contain duplicates of the same entry, with the last one always used. If a plugin is compromised, this lowers the level of access that an attacker needs to modify a plugin's install hooks, causing a local execution attack. To perform this attack, an attacker must have write access to the git repository or plugin archive (.tgz) while being downloaded (which can occur during a MITM attack on a non-SSL connection). This issue has been patched in Helm 2.16.11 and Helm 3.3.2. As a possible workaround make sure to install plugins using a secure connection protocol like SSL.</description>
      <guid isPermaLink="false">CVE-2020-15187|2024-08-04T13:08:22.691Z</guid>
      <pubDate>Thu, 17 Sep 2020 21:50:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-15184|2024-08-04T13:08:22.470Z -- helm -- helm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-15184</link>
      <description>In Helm before versions 2.16.11 and 3.3.2 there is a bug in which the `alias` field on a `Chart.yaml` is not properly sanitized. This could lead to the injection of unwanted information into a chart. This issue has been patched in Helm 3.3.2 and 2.16.11. A possible workaround is to manually review the `dependencies` field of any untrusted chart, verifying that the `alias` field is either not used, or (if used) does not contain newlines or path characters.</description>
      <guid isPermaLink="false">CVE-2020-15184|2024-08-04T13:08:22.470Z</guid>
      <pubDate>Thu, 17 Sep 2020 20:40:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-15185|2024-08-04T13:08:22.474Z -- helm -- helm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-15185</link>
      <description>In Helm before versions 2.16.11 and 3.3.2, a Helm repository can contain duplicates of the same chart, with the last one always used. If a repository is compromised, this lowers the level of access that an attacker needs to inject a bad chart into a repository. To perform this attack, an attacker must have write access to the index file (which can occur during a MITM attack on a non-SSL connection). This issue has been patched in Helm 3.3.2 and 2.16.11. A possible workaround is to manually review the index file in the Helm repository cache before installing software.</description>
      <guid isPermaLink="false">CVE-2020-15185|2024-08-04T13:08:22.474Z</guid>
      <pubDate>Thu, 17 Sep 2020 21:30:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-15186|2024-08-04T13:08:22.480Z -- helm -- helm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-15186</link>
      <description>In Helm before versions 2.16.11 and 3.3.2 plugin names are not sanitized properly. As a result, a malicious plugin author could use characters in a plugin name that would result in unexpected behavior, such as duplicating the name of another plugin or spoofing the output to `helm --help`. This issue has been patched in Helm 3.3.2. A possible workaround is to not install untrusted Helm plugins. Examine the `name` field in the `plugin.yaml` file for a plugin, looking for characters outside of the [a-zA-Z0-9._-] range.</description>
      <guid isPermaLink="false">CVE-2020-15186|2024-08-04T13:08:22.480Z</guid>
      <pubDate>Thu, 17 Sep 2020 21:40:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-11013|2024-08-04T11:21:14.350Z -- helm -- helm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-11013</link>
      <description>Their is an information disclosure vulnerability in Helm from version 3.1.0 and before version 3.2.0. `lookup` is a Helm template function introduced in Helm v3. It is able to lookup resources in the cluster to check for the existence of specific resources and get details about them. This can be used as part of the process to render templates. The documented behavior of `helm template` states that it does not attach to a remote cluster. However, a the recently added `lookup` template function circumvents this restriction and connects to the cluster even during `helm template` and `helm install|update|delete|rollback --dry-run`. The user is not notified of this behavior. Running `helm template` should not make calls to a cluster. This is different from `install`, which is presumed to have access to a cluster in order to load resources into Kubernetes. Helm 2 is unaffected by this vulnerability. A malicious chart author could inject a `lookup` into a chart that, when rendered through `helm template`, performs unannounced lookups against the cluster a user&amp;#39;s `KUBECONFIG` file points to. This information can then be disclosed via the output of `helm template`. This issue has been fixed in Helm 3.2.0</description>
      <guid isPermaLink="false">CVE-2020-11013|2024-08-04T11:21:14.350Z</guid>
      <pubDate>Fri, 24 Apr 2020 20:05:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-25620|2024-02-14T23:24:57.651Z -- helm -- helm</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-25620</link>
      <description>Helm is a tool for managing Charts. Charts are packages of pre-configured Kubernetes resources. When either the Helm client or SDK is used to save a chart whose name within the `Chart.yaml` file includes a relative path change, the chart would be saved outside its expected directory based on the changes in the relative path. The validation and linting did not detect the path changes in the name. This issue has been resolved in Helm v3.14.1. Users unable to upgrade should check all charts used by Helm for path changes in their name as found in the `Chart.yaml` file. This includes dependencies.</description>
      <guid isPermaLink="false">CVE-2024-25620|2024-02-14T23:24:57.651Z</guid>
      <pubDate>Wed, 14 Feb 2024 23:24:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-26147|2024-02-21T22:21:42.658Z -- helm -- helm</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-26147</link>
      <description>Helm is a package manager for Charts for Kubernetes. Versions prior to 3.14.2 contain an uninitialized variable vulnerability when Helm parses index and plugin yaml files missing expected content. When either an `index.yaml` file or a plugins `plugin.yaml` file were missing all metadata a panic would occur in Helm. In the Helm SDK, this is found when using the `LoadIndexFile` or `DownloadIndexFile` functions in the `repo` package or the `LoadDir` function in the `plugin` package. For the Helm client this impacts functions around adding a repository and all Helm functions if a malicious plugin is added as Helm inspects all known plugins on each invocation. This issue has been resolved in Helm v3.14.2. If a malicious plugin has been added which is causing all Helm client commands to panic, the malicious plugin can be manually removed from the filesystem. If using Helm SDK versions prior to 3.14.2, calls to affected functions can use `recover` to catch the panic.</description>
      <guid isPermaLink="false">CVE-2024-26147|2024-02-21T22:21:42.658Z</guid>
      <pubDate>Wed, 21 Feb 2024 22:21:42 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for NLnet Labs -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/nlnet%20labs/all.rss</link>
    <description>The latest CVEs for NLnet Labs -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 05:22:20 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-3029|2024-08-03T00:53:00.666Z -- nlnet%20labs -- routinator
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3029</link>
      <description>In NLnet Labs Routinator 0.9.0 up to and including 0.11.2, due to a mistake in error handling, data in RRDP snapshot and delta files that isnâ€™t correctly base 64 encoded is treated as a fatal error and causes Routinator to exit. Worst case impact of this vulnerability is denial of service for the RPKI data that Routinator provides to routers. This may stop your network from validating route origins based on RPKI data. This vulnerability does not allow an attacker to manipulate RPKI data.</description>
      <guid isPermaLink="false">CVE-2022-3029|2024-08-03T00:53:00.666Z</guid>
      <pubDate>Tue, 13 Sep 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-3204|2024-08-03T01:00:10.542Z -- nlnet%20labs -- unbound
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3204</link>
      <description>A vulnerability named 'Non-Responsive Delegation Attack' (NRDelegation Attack) has been discovered in various DNS resolving software. The NRDelegation Attack works by having a malicious delegation with a considerable number of non responsive nameservers. The attack starts by querying a resolver for a record that relies on those unresponsive nameservers. The attack can cause a resolver to spend a lot of time/resources resolving records under a malicious delegation point where a considerable number of unresponsive NS records reside. It can trigger high CPU usage in some resolver implementations that continually look in the cache for resolved NS records in that delegation. This can lead to degraded performance and eventually denial of service in orchestrated attacks. Unbound does not suffer from high CPU usage, but resources are still needed for resolving the malicious delegation. Unbound will keep trying to resolve the record until hard limits are reached. Based on the nature of the attack and the replies, different limits could be reached. From version 1.16.3 on, Unbound introduces fixes for better performance when under load, by cutting opportunistic queries for nameserver discovery and DNSKEY prefetching and limiting the number of times a delegation point can issue a cache lookup for missing records.</description>
      <guid isPermaLink="false">CVE-2022-3204|2024-08-03T01:00:10.542Z</guid>
      <pubDate>Mon, 26 Sep 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1622|2024-07-05T17:22:01.305Z -- nlnet%20labs -- routinator</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1622</link>
      <description>Due to a mistake in error checking, Routinator will terminate when an incoming RTR connection is reset by the peer too quickly after opening.</description>
      <guid isPermaLink="false">CVE-2024-1622|2024-07-05T17:22:01.305Z</guid>
      <pubDate>Mon, 26 Feb 2024 13:35:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1622|2024-02-26T13:35:51.909Z -- nlnet%20labs -- routinator</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1622</link>
      <description>Due to a mistake in error checking, Routinator will terminate when an incoming RTR connection is reset by the peer too quickly after opening.</description>
      <guid isPermaLink="false">CVE-2024-1622|2024-02-26T13:35:51.909Z</guid>
      <pubDate>Mon, 26 Feb 2024 13:35:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1931|2024-03-07T09:17:13.072Z -- nlnet%20labs -- unbound</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1931</link>
      <description>NLnet Labs Unbound version 1.18.0 up to and including version 1.19.1 contain a vulnerability that can cause denial of service by a certain code path that can lead to an infinite loop. Unbound 1.18.0 introduced a feature that removes EDE records from responses with size higher than the client's advertised buffer size. Before removing all the EDE records however, it would try to see if trimming the extra text fields on those records would result in an acceptable size while still retaining the EDE codes. Due to an unchecked condition, the code that trims the text of the EDE records could loop indefinitely. This happens when Unbound would reply with attached EDE information on a positive reply and the client's buffer size is smaller than the needed space to include EDE records. The vulnerability can only be triggered when the 'ede: yes' option is used; non default configuration. From version 1.19.2 on, the code is fixed to avoid looping indefinitely.</description>
      <guid isPermaLink="false">CVE-2024-1931|2024-03-07T09:17:13.072Z</guid>
      <pubDate>Thu, 07 Mar 2024 09:17:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1931|2024-08-01T18:56:22.442Z -- nlnet%20labs -- unbound</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1931</link>
      <description>NLnet Labs Unbound version 1.18.0 up to and including version 1.19.1 contain a vulnerability that can cause denial of service by a certain code path that can lead to an infinite loop. Unbound 1.18.0 introduced a feature that removes EDE records from responses with size higher than the client's advertised buffer size. Before removing all the EDE records however, it would try to see if trimming the extra text fields on those records would result in an acceptable size while still retaining the EDE codes. Due to an unchecked condition, the code that trims the text of the EDE records could loop indefinitely. This happens when Unbound would reply with attached EDE information on a positive reply and the client's buffer size is smaller than the needed space to include EDE records. The vulnerability can only be triggered when the 'ede: yes' option is used; non default configuration. From version 1.19.2 on, the code is fixed to avoid looping indefinitely.</description>
      <guid isPermaLink="false">CVE-2024-1931|2024-08-01T18:56:22.442Z</guid>
      <pubDate>Thu, 07 Mar 2024 09:17:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1622|2024-08-01T18:48:21.895Z -- nlnet%20labs -- routinator</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1622</link>
      <description>Due to a mistake in error checking, Routinator will terminate when an incoming RTR connection is reset by the peer too quickly after opening.</description>
      <guid isPermaLink="false">CVE-2024-1622|2024-08-01T18:48:21.895Z</guid>
      <pubDate>Mon, 26 Feb 2024 13:35:51 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for NLnet Labs -- Unbound</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/nlnet%20labs/unbound.rss</link>
    <description>The latest CVEs for NLnet Labs -- Unbound</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Tue, 17 Sep 2024 18:25:06 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-3204|2024-09-17T03:19:03.035Z -- nlnet%20labs -- unbound
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3204</link>
      <description>A vulnerability named 'Non-Responsive Delegation Attack' (NRDelegation Attack) has been discovered in various DNS resolving software. The NRDelegation Attack works by having a malicious delegation with a considerable number of non responsive nameservers. The attack starts by querying a resolver for a record that relies on those unresponsive nameservers. The attack can cause a resolver to spend a lot of time/resources resolving records under a malicious delegation point where a considerable number of unresponsive NS records reside. It can trigger high CPU usage in some resolver implementations that continually look in the cache for resolved NS records in that delegation. This can lead to degraded performance and eventually denial of service in orchestrated attacks. Unbound does not suffer from high CPU usage, but resources are still needed for resolving the malicious delegation. Unbound will keep trying to resolve the record until hard limits are reached. Based on the nature of the attack and the replies, different limits could be reached. From version 1.16.3 on, Unbound introduces fixes for better performance when under load, by cutting opportunistic queries for nameserver discovery and DNSKEY prefetching and limiting the number of times a delegation point can issue a cache lookup for missing records.</description>
      <guid isPermaLink="false">CVE-2022-3204|2024-09-17T03:19:03.035Z</guid>
      <pubDate>Mon, 26 Sep 2022 13:41:46 +0000</pubDate>
    </item>
  </channel>
</rss>

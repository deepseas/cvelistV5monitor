<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Snyk -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/snyk/all.rss</link>
    <description>The latest CVEs for Snyk -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 23:23:08 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2019-10744|2024-08-04T22:32:01.271Z -- snyk -- lodash
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-10744</link>
      <description>Versions of lodash lower than 4.17.12 are vulnerable to Prototype Pollution. The function defaultsDeep could be tricked into adding or modifying properties of Object.prototype using a constructor payload.</description>
      <guid isPermaLink="false">CVE-2019-10744|2024-08-04T22:32:01.271Z</guid>
      <pubDate>Thu, 25 Jul 2019 23:43:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-10795|2024-08-04T22:32:02.035Z -- snyk -- undefsafe
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-10795</link>
      <description>undefsafe before 2.0.3 is vulnerable to Prototype Pollution. The 'a' function could be tricked into adding or modifying properties of Object.prototype using a __proto__ payload.</description>
      <guid isPermaLink="false">CVE-2019-10795|2024-08-04T22:32:02.035Z</guid>
      <pubDate>Tue, 18 Feb 2020 15:43:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-10791|2024-08-04T22:32:02.100Z -- snyk -- promise-probe
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-10791</link>
      <description>promise-probe before 0.10.0 allows remote attackers to perform a command injection attack. The file, outputFile and options functions can be controlled by users without any sanitization.</description>
      <guid isPermaLink="false">CVE-2019-10791|2024-08-04T22:32:02.100Z</guid>
      <pubDate>Tue, 18 Feb 2020 16:01:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-10793|2024-08-04T22:32:02.167Z -- snyk -- dot-object
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-10793</link>
      <description>dot-object before 2.1.3 is vulnerable to Prototype Pollution. The set function could be tricked into adding or modifying properties of Object.prototype using a __proto__ payload.</description>
      <guid isPermaLink="false">CVE-2019-10793|2024-08-04T22:32:02.167Z</guid>
      <pubDate>Tue, 18 Feb 2020 15:57:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-10794|2024-08-04T22:32:01.927Z -- snyk -- component-flatten
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-10794</link>
      <description>All versions of component-flatten are vulnerable to Prototype Pollution. The a function could be tricked into adding or modifying properties of Object.prototype using a __proto__ payload.</description>
      <guid isPermaLink="false">CVE-2019-10794|2024-08-04T22:32:01.927Z</guid>
      <pubDate>Tue, 18 Feb 2020 15:32:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-10760|2024-08-04T22:32:01.515Z -- snyk -- safer-eval
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-10760</link>
      <description>safer-eval before 1.3.2 are vulnerable to Arbitrary Code Execution. A payload using constructor properties can escape the sandbox and execute arbitrary code.</description>
      <guid isPermaLink="false">CVE-2019-10760|2024-08-04T22:32:01.515Z</guid>
      <pubDate>Tue, 15 Oct 2019 14:53:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-10792|2024-08-04T22:32:01.668Z -- snyk -- bodymen
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-10792</link>
      <description>bodymen before 1.1.1 is vulnerable to Prototype Pollution. The handler function could be tricked into adding or modifying properties of Object.prototype using a __proto__ payload.</description>
      <guid isPermaLink="false">CVE-2019-10792|2024-08-04T22:32:01.668Z</guid>
      <pubDate>Tue, 18 Feb 2020 15:49:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-10781|2024-08-04T22:32:01.588Z -- snyk -- schema-inspector
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-10781</link>
      <description>In schema-inspector before 1.6.9, a maliciously crafted JavaScript object can bypass the `sanitize()` and the `validate()` function used within schema-inspector.</description>
      <guid isPermaLink="false">CVE-2019-10781|2024-08-04T22:32:01.588Z</guid>
      <pubDate>Wed, 22 Jan 2020 13:40:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-10797|2024-08-04T22:32:02.164Z -- snyk -- wso2%20transport-http
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-10797</link>
      <description>Netty in WSO2 transport-http before v6.3.1 is vulnerable to HTTP Response Splitting due to HTTP Header validation being disabled.</description>
      <guid isPermaLink="false">CVE-2019-10797|2024-08-04T22:32:02.164Z</guid>
      <pubDate>Wed, 19 Feb 2020 18:14:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-10759|2024-08-04T22:32:01.921Z -- snyk -- safer-eval
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-10759</link>
      <description>safer-eval before 1.3.4 are vulnerable to Arbitrary Code Execution. A payload using constructor properties can escape the sandbox and execute arbitrary code.</description>
      <guid isPermaLink="false">CVE-2019-10759|2024-08-04T22:32:01.921Z</guid>
      <pubDate>Tue, 15 Oct 2019 14:47:19 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for zopefoundation -- RestrictedPython</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/zopefoundation/restrictedpython.rss</link>
    <description>The latest CVEs for zopefoundation -- RestrictedPython</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 20:23:26 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-41039|2024-08-02T18:46:11.579Z -- zopefoundation -- restrictedpython
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-41039</link>
      <description>RestrictedPython is a restricted execution environment for Python to run untrusted code. Python's "format" functionality allows someone controlling the format string to "read" all objects accessible through recursive attribute lookup and subscription from objects he can access. This can lead to critical information disclosure. With `RestrictedPython`, the format functionality is available via the `format` and `format_map` methods of `str` (and `unicode`) (accessed either via the class or its instances) and via `string.Formatter`. All known versions of `RestrictedPython` are vulnerable. This issue has been addressed in commit `4134aedcff1` which has been included in the 5.4 and 6.2 releases. Users are advised to upgrade. There are no known workarounds for this vulnerability.

</description>
      <guid isPermaLink="false">CVE-2023-41039|2024-08-02T18:46:11.579Z</guid>
      <pubDate>Wed, 30 Aug 2023 17:18:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-37271|2024-08-02T17:09:33.893Z -- zopefoundation -- restrictedpython
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-37271</link>
      <description>RestrictedPython is a tool that helps to define a subset of the Python language which allows users to provide a program input into a trusted environment. RestrictedPython does not check access to stack frames and their attributes. Stack frames are accessible within at least generators and generator expressions, which are allowed inside RestrictedPython. Prior to versions 6.1 and 5.3, an attacker with access to a RestrictedPython environment can write code that gets the current stack frame in a generator and then walk the stack all the way beyond the RestrictedPython invocation boundary, thus breaking out of the restricted sandbox and potentially allowing arbitrary code execution in the Python interpreter. All RestrictedPython deployments that allow untrusted users to write Python code in the RestrictedPython environment are at risk. In terms of Zope and Plone, this would mean deployments where the administrator allows untrusted users to create and/or edit objects of type `Script (Python)`, `DTML Method`, `DTML Document` or `Zope Page Template`. This is a non-default configuration and likely to be extremely rare. The problem has been fixed in versions 6.1 and 5.3.</description>
      <guid isPermaLink="false">CVE-2023-37271|2024-08-02T17:09:33.893Z</guid>
      <pubDate>Tue, 11 Jul 2023 17:14:11 +0000</pubDate>
    </item>
  </channel>
</rss>

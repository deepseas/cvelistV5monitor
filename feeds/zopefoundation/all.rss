<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for zopefoundation -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/zopefoundation/all.rss</link>
    <description>The latest CVEs for zopefoundation -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 23:22:00 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-44389|2024-08-02T20:07:32.981Z -- zopefoundation -- zope
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-44389</link>
      <description>Zope is an open-source web application server. The title property, available on most Zope objects, can be used to store script code that is executed while viewing the affected object in the Zope Management Interface (ZMI). All versions of Zope 4 and Zope 5 are affected. Patches will be released with Zope versions 4.8.11 and 5.8.6.</description>
      <guid isPermaLink="false">CVE-2023-44389|2024-08-02T20:07:32.981Z</guid>
      <pubDate>Wed, 04 Oct 2023 20:07:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-42458|2024-08-02T19:23:38.918Z -- zopefoundation -- zope
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-42458</link>
      <description>Zope is an open-source web application server. Prior to versions 4.8.10 and 5.8.5, there is a stored cross site scripting vulnerability for SVG images. Note that an image tag with an SVG image as source is never vulnerable, even when the SVG image contains malicious code. To exploit the vulnerability, an attacker would first need to upload an image, and then trick a user into following a specially crafted link. Patches are available in Zope 4.8.10 and 5.8.5. As a workaround, make sure the "Add Documents, Images, and Files" permission is only assigned to trusted roles. By default, only the Manager has this permission.</description>
      <guid isPermaLink="false">CVE-2023-42458|2024-08-02T19:23:38.918Z</guid>
      <pubDate>Thu, 21 Sep 2023 16:34:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-36814|2024-08-02T17:01:09.673Z -- zopefoundation -- products.cmfcore
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-36814</link>
      <description>Products.CMFCore are the key framework services for the Zope Content Management Framework (CMF). The use of Python's marshal module to handle unchecked input in a public method on `PortalFolder` objects can lead to an unauthenticated denial of service and crash situation. The code in question is exposed by all portal software built on top of `Products.CMFCore`, such as Plone. All deployments are vulnerable. The code has been fixed in `Products.CMFCore` version 3.2.</description>
      <guid isPermaLink="false">CVE-2023-36814|2024-08-02T17:01:09.673Z</guid>
      <pubDate>Mon, 03 Jul 2023 16:48:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-41039|2024-08-02T18:46:11.579Z -- zopefoundation -- restrictedpython
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-41039</link>
      <description>RestrictedPython is a restricted execution environment for Python to run untrusted code. Python's "format" functionality allows someone controlling the format string to "read" all objects accessible through recursive attribute lookup and subscription from objects he can access. This can lead to critical information disclosure. With `RestrictedPython`, the format functionality is available via the `format` and `format_map` methods of `str` (and `unicode`) (accessed either via the class or its instances) and via `string.Formatter`. All known versions of `RestrictedPython` are vulnerable. This issue has been addressed in commit `4134aedcff1` which has been included in the 5.4 and 6.2 releases. Users are advised to upgrade. There are no known workarounds for this vulnerability.

</description>
      <guid isPermaLink="false">CVE-2023-41039|2024-08-02T18:46:11.579Z</guid>
      <pubDate>Wed, 30 Aug 2023 17:18:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-41050|2024-08-02T18:46:11.727Z -- zopefoundation -- accesscontrol
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-41050</link>
      <description>AccessControl provides a general security framework for use in Zope. Python's "format" functionality allows someone controlling the format string to "read" objects accessible (recursively) via attribute access and subscription from accessible objects. Those attribute accesses and subscriptions use Python's full blown `getattr` and `getitem`, not the policy restricted `AccessControl` variants `_getattr_` and `_getitem_`. This can lead to critical information disclosure. `AccessControl` already provides a safe variant for `str.format` and denies access to `string.Formatter`. However, `str.format_map` is still unsafe. Affected are all users who allow untrusted users to create `AccessControl` controlled Python code and execute it. A fix has been introduced in versions 4.4, 5.8 and 6.2. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-41050|2024-08-02T18:46:11.727Z</guid>
      <pubDate>Wed, 06 Sep 2023 17:58:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-37271|2024-08-02T17:09:33.893Z -- zopefoundation -- restrictedpython
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-37271</link>
      <description>RestrictedPython is a tool that helps to define a subset of the Python language which allows users to provide a program input into a trusted environment. RestrictedPython does not check access to stack frames and their attributes. Stack frames are accessible within at least generators and generator expressions, which are allowed inside RestrictedPython. Prior to versions 6.1 and 5.3, an attacker with access to a RestrictedPython environment can write code that gets the current stack frame in a generator and then walk the stack all the way beyond the RestrictedPython invocation boundary, thus breaking out of the restricted sandbox and potentially allowing arbitrary code execution in the Python interpreter. All RestrictedPython deployments that allow untrusted users to write Python code in the RestrictedPython environment are at risk. In terms of Zope and Plone, this would mean deployments where the administrator allows untrusted users to create and/or edit objects of type `Script (Python)`, `DTML Method`, `DTML Document` or `Zope Page Template`. This is a non-default configuration and likely to be extremely rare. The problem has been fixed in versions 6.1 and 5.3.</description>
      <guid isPermaLink="false">CVE-2023-37271|2024-08-02T17:09:33.893Z</guid>
      <pubDate>Tue, 11 Jul 2023 17:14:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24811|2024-02-07T14:54:41.601Z -- zopefoundation -- products.sqlalchemyda</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-24811</link>
      <description>SQLAlchemyDA is a generic database adapter for ZSQL methods. A vulnerability found in versions prior to 2.2 allows unauthenticated execution of arbitrary SQL statements on the database to which the SQLAlchemyDA instance is connected. All users are affected. The problem has been patched in version 2.2. There is no workaround for the problem.</description>
      <guid isPermaLink="false">CVE-2024-24811|2024-02-07T14:54:41.601Z</guid>
      <pubDate>Wed, 07 Feb 2024 14:54:41 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for GNU -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/gnu/all.rss</link>
    <description>The latest CVEs for GNU -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Thu, 13 Jun 2024 23:21:43 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-4039|2023-09-13T08:05:10.274Z -- gnu -- gcc
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-4039</link>
      <description>

**DISPUTED**A failure in the -fstack-protector feature in GCC-based toolchains 
that target AArch64 allows an attacker to exploit an existing buffer 
overflow in dynamically-sized local variables in your application 
without this being detected. This stack-protector failure only applies 
to C99-style dynamically-sized local variables or those created using 
alloca(). The stack-protector operates as intended for statically-sized 
local variables.

The default behavior when the stack-protector 
detects an overflow is to terminate your application, resulting in 
controlled loss of availability. An attacker who can exploit a buffer 
overflow without triggering the stack-protector might be able to change 
program flow control to cause an uncontrolled loss of availability or to
 go further and affect confidentiality or integrity. NOTE: The GCC project argues that this is a missed hardening bug and not a vulnerability by itself.





</description>
      <guid isPermaLink="false">CVE-2023-4039|2023-09-13T08:05:10.274Z</guid>
      <pubDate>Wed, 13 Sep 2023 08:05:10 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for gomarkdown -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/gomarkdown/all.rss</link>
    <description>The latest CVEs for gomarkdown -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Tue, 24 Sep 2024 23:22:43 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-42821|2024-09-24T19:27:42.779Z -- gomarkdown -- markdown
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-42821</link>
      <description>The package `github.com/gomarkdown/markdown` is a Go library for parsing Markdown text and rendering as HTML. Prior to pseudoversion `0.0.0-20230922105210-14b16010c2ee`, which corresponds with commit `14b16010c2ee7ff33a940a541d993bd043a88940`, parsing malformed markdown input with parser that uses parser.Mmark extension could result in out-of-bounds read vulnerability. To exploit the vulnerability, parser needs to have `parser.Mmark` extension set. The panic occurs inside the `citation.go` file on the line 69 when the parser tries to access the element past its length. This can result in a denial of service. Commit `14b16010c2ee7ff33a940a541d993bd043a88940`/pseudoversion `0.0.0-20230922105210-14b16010c2ee` contains a patch for this issue.</description>
      <guid isPermaLink="false">CVE-2023-42821|2024-09-24T19:27:42.779Z</guid>
      <pubDate>Fri, 22 Sep 2023 16:55:33 +0000</pubDate>
    </item>
  </channel>
</rss>

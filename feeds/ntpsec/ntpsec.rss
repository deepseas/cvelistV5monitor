<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for NTPsec -- ntpsec</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/ntpsec/ntpsec.rss</link>
    <description>The latest CVEs for NTPsec -- ntpsec</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 19:19:46 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2021-22212|2024-08-03T18:37:18.446Z -- ntpsec -- ntpsec
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-22212</link>
      <description>ntpkeygen can generate keys that ntpd fails to parse. NTPsec 1.2.0 allows ntpkeygen to generate keys with '#' characters. ntpd then either pads, shortens the key, or fails to load these keys entirely, depending on the key type and the placement of the '#'. This results in the administrator not being able to use the keys as expected or the keys are shorter than expected and easier to brute-force, possibly resulting in MITM attacks between ntp clients and ntp servers. For short AES128 keys, ntpd generates a warning that it is padding them.</description>
      <guid isPermaLink="false">CVE-2021-22212|2024-08-03T18:37:18.446Z</guid>
      <pubDate>Tue, 08 Jun 2021 12:07:02 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Apache -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/apache/all.rss</link>
    <description>The latest CVEs for Apache -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 22:22:44 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2019-0232|2024-08-04T17:44:15.941Z -- apache -- tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0232</link>
      <description>When running on Windows with enableCmdLineArguments enabled, the CGI Servlet in Apache Tomcat 9.0.0.M1 to 9.0.17, 8.5.0 to 8.5.39 and 7.0.0 to 7.0.93 is vulnerable to Remote Code Execution due to a bug in the way the JRE passes command line arguments to Windows. The CGI Servlet is disabled by default. The CGI option enableCmdLineArguments is disable by default in Tomcat 9.0.x (and will be disabled by default in all versions in response to this vulnerability). For a detailed explanation of the JRE behaviour, see Markus Wulftange's blog (https://codewhitesec.blogspot.com/2016/02/java-and-command-line-injections-in-windows.html) and this archived MSDN blog (https://web.archive.org/web/20161228144344/https://blogs.msdn.microsoft.com/twistylittlepassagesallalike/2011/04/23/everyone-quotes-command-line-arguments-the-wrong-way/).</description>
      <guid isPermaLink="false">CVE-2019-0232|2024-08-04T17:44:15.941Z</guid>
      <pubDate>Mon, 15 Apr 2019 14:23:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1954|2024-08-04T06:54:00.267Z -- apache -- apache%20cxf
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1954</link>
      <description>Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.</description>
      <guid isPermaLink="false">CVE-2020-1954|2024-08-04T06:54:00.267Z</guid>
      <pubDate>Wed, 01 Apr 2020 20:07:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-0211|2024-08-04T17:44:15.393Z -- apache -- apache%20http%20server
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0211</link>
      <description>In Apache HTTP Server 2.4 releases 2.4.17 to 2.4.38, with MPM event, worker or prefork, code executing in less-privileged child processes or threads (including scripts executed by an in-process scripting interpreter) could execute arbitrary code with the privileges of the parent process (usually root) by manipulating the scoreboard. Non-Unix systems are not affected.</description>
      <guid isPermaLink="false">CVE-2019-0211|2024-08-04T17:44:15.393Z</guid>
      <pubDate>Mon, 08 Apr 2019 21:31:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1943|2024-08-04T06:53:59.927Z -- apache -- apache%20ofbiz
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1943</link>
      <description>Data sent with contentId to /control/stream is not sanitized, allowing XSS attacks in Apache OFBiz 16.11.01 to 16.11.07.</description>
      <guid isPermaLink="false">CVE-2020-1943|2024-08-04T06:53:59.927Z</guid>
      <pubDate>Wed, 01 Apr 2020 18:18:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-9481|2024-08-04T10:26:16.220Z -- apache -- ats
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-9481</link>
      <description>Apache ATS 6.0.0 to 6.2.3, 7.0.0 to 7.1.9, and 8.0.0 to 8.0.6 is vulnerable to a HTTP/2 slow read attack.</description>
      <guid isPermaLink="false">CVE-2020-9481|2024-08-04T10:26:16.220Z</guid>
      <pubDate>Mon, 27 Apr 2020 21:11:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-0205|2024-08-04T17:44:15.368Z -- apache -- apache%20thrift
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0205</link>
      <description>In Apache Thrift all versions up to and including 0.12.0, a server or client may run into an endless loop when feed with specific input data. Because the issue had already been partially fixed in version 0.11.0, depending on the installed version it affects only certain language bindings.</description>
      <guid isPermaLink="false">CVE-2019-0205|2024-08-04T17:44:15.368Z</guid>
      <pubDate>Mon, 28 Oct 2019 22:32:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1956|2024-08-04T06:54:00.299Z -- apache -- kylin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1956</link>
      <description>Apache Kylin 2.3.0, and releases up to 2.6.5 and 3.0.1 has some restful apis which will concatenate os command with the user input string, a user is likely to be able to execute any os command without any protection or validation.</description>
      <guid isPermaLink="false">CVE-2020-1956|2024-08-04T06:54:00.299Z</guid>
      <pubDate>Fri, 22 May 2020 13:27:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-0215|2024-08-04T17:44:15.365Z -- apache -- apache%20http%20server
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0215</link>
      <description>In Apache HTTP Server 2.4 releases 2.4.37 and 2.4.38, a bug in mod_ssl when using per-location client certificate verification with TLSv1.3 allowed a client to bypass configured access control restrictions.</description>
      <guid isPermaLink="false">CVE-2019-0215|2024-08-04T17:44:15.365Z</guid>
      <pubDate>Mon, 08 Apr 2019 19:25:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-0235|2024-08-04T17:44:15.925Z -- apache -- apache%20ofbiz
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0235</link>
      <description>Apache OFBiz 17.12.01 is vulnerable to some CSRF attacks.</description>
      <guid isPermaLink="false">CVE-2019-0235|2024-08-04T17:44:15.925Z</guid>
      <pubDate>Thu, 30 Apr 2020 19:22:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1937|2024-08-04T06:53:59.800Z -- apache -- apache%20kylin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1937</link>
      <description>Kylin has some restful apis which will concatenate SQLs with the user input string, a user is likely to be able to run malicious database queries.</description>
      <guid isPermaLink="false">CVE-2020-1937|2024-08-04T06:53:59.800Z</guid>
      <pubDate>Mon, 24 Feb 2020 20:57:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-0219|2024-08-04T17:44:15.399Z -- apache -- cordova
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0219</link>
      <description>A website running in the InAppBrowser webview on Android could execute arbitrary JavaScript in the main application's webview using a specially crafted gap-iab: URI.</description>
      <guid isPermaLink="false">CVE-2019-0219|2024-08-04T17:44:15.399Z</guid>
      <pubDate>Tue, 14 Jan 2020 14:18:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-0234|2024-08-04T17:44:15.970Z -- apache -- apache%20roller
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0234</link>
      <description>A Reflected Cross-site Scripting (XSS) vulnerability exists in Apache Roller. Roller's Math Comment Authenticator did not property sanitize user input and could be exploited to perform Reflected Cross Site Scripting (XSS). The mitigation for this vulnerability is to upgrade to the latest version of Roller, which is now Roller 5.2.3.</description>
      <guid isPermaLink="false">CVE-2019-0234|2024-08-04T17:44:15.970Z</guid>
      <pubDate>Mon, 15 Jul 2019 21:13:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-0210|2024-08-04T17:44:14.873Z -- apache -- apache%20thrift
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0210</link>
      <description>In Apache Thrift 0.9.3 to 0.12.0, a server implemented in Go using TJSONProtocol or TSimpleJSONProtocol may panic when feed with invalid input data.</description>
      <guid isPermaLink="false">CVE-2019-0210|2024-08-04T17:44:14.873Z</guid>
      <pubDate>Mon, 28 Oct 2019 22:22:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-0222|2024-08-04T17:44:15.392Z -- apache -- apache%20activemq
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0222</link>
      <description>In Apache ActiveMQ 5.0.0 - 5.15.8, unmarshalling corrupt MQTT frame can lead to broker Out of Memory exception making it unresponsive.</description>
      <guid isPermaLink="false">CVE-2019-0222|2024-08-04T17:44:15.392Z</guid>
      <pubDate>Thu, 28 Mar 2019 21:16:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-0189|2024-08-04T17:44:14.861Z -- apache -- ofbiz
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0189</link>
      <description>The java.io.ObjectInputStream is known to cause Java serialisation issues. This issue here is exposed by the "webtools/control/httpService" URL, and uses Java deserialization to perform code execution. In the HttpEngine, the value of the request parameter "serviceContext" is passed to the "deserialize" method of "XmlSerializer". Apache Ofbiz is affected via two different dependencies: "commons-beanutils" and an out-dated version of "commons-fileupload" Mitigation: Upgrade to 16.11.06 or manually apply the commits from OFBIZ-10770 and OFBIZ-10837 on branch 16</description>
      <guid isPermaLink="false">CVE-2019-0189|2024-08-04T17:44:14.861Z</guid>
      <pubDate>Wed, 11 Sep 2019 20:29:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-0213|2024-08-04T17:44:14.810Z -- apache -- apache%20archiva
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0213</link>
      <description>In Apache Archiva before 2.2.4, it may be possible to store malicious XSS code into central configuration entries, i.e. the logo URL. The vulnerability is considered as minor risk, as only users with admin role can change the configuration, or the communication between the browser and the Archiva server must be compromised.</description>
      <guid isPermaLink="false">CVE-2019-0213|2024-08-04T17:44:14.810Z</guid>
      <pubDate>Tue, 30 Apr 2019 21:35:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1958|2024-08-04T06:54:00.299Z -- apache -- apache%20druid
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1958</link>
      <description>When LDAP authentication is enabled in Apache Druid 0.17.0, callers of Druid APIs with a valid set of LDAP credentials can bypass the credentialsValidator.userSearch filter barrier that determines if a valid LDAP user is allowed to authenticate with Druid. They are still subject to role-based authorization checks, if configured. Callers of Druid APIs can also retrieve any LDAP attribute values of users that exist on the LDAP server, so long as that information is visible to the Druid server. This information disclosure does not require the caller itself to be a valid LDAP user.</description>
      <guid isPermaLink="false">CVE-2020-1958|2024-08-04T06:54:00.299Z</guid>
      <pubDate>Wed, 01 Apr 2020 21:48:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1929|2024-08-04T06:54:00.337Z -- apache -- beam
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1929</link>
      <description>The Apache Beam MongoDB connector in versions 2.10.0 to 2.16.0 has an option to disable SSL trust verification. However this configuration is not respected and the certificate verification disables trust verification in every case. This exclusion also gets registered globally which disables trust checking for any code running in the same JVM.</description>
      <guid isPermaLink="false">CVE-2020-1929|2024-08-04T06:54:00.337Z</guid>
      <pubDate>Wed, 15 Jan 2020 18:56:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-0204|2024-08-04T17:44:14.728Z -- apache -- apache%20mesos
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0204</link>
      <description>A specifically crafted Docker image running under the root user can overwrite the init helper binary of the container runtime and/or the command executor in Apache Mesos versions pre-1.4.x, 1.4.0 to 1.4.2, 1.5.0 to 1.5.2, 1.6.0 to 1.6.1, and 1.7.0 to 1.7.1. A malicious actor can therefore gain root-level code execution on the host.</description>
      <guid isPermaLink="false">CVE-2019-0204|2024-08-04T17:44:14.728Z</guid>
      <pubDate>Mon, 25 Mar 2019 21:43:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-0221|2024-08-04T17:44:15.953Z -- apache -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0221</link>
      <description>The SSI printenv command in Apache Tomcat 9.0.0.M1 to 9.0.0.17, 8.5.0 to 8.5.39 and 7.0.0 to 7.0.93 echoes user provided data without escaping and is, therefore, vulnerable to XSS. SSI is disabled by default. The printenv command is intended for debugging and is unlikely to be present in a production website.</description>
      <guid isPermaLink="false">CVE-2019-0221|2024-08-04T17:44:15.953Z</guid>
      <pubDate>Tue, 28 May 2019 21:01:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-0207|2024-08-04T17:44:15.383Z -- apache -- apache%20tapestry
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0207</link>
      <description>Tapestry processes assets `/assets/ctx` using classes chain `StaticFilesFilter -&gt; AssetDispatcher -&gt; ContextResource`, which doesn't filter the character `\`, so attacker can perform a path traversal attack to read any files on Windows platform.</description>
      <guid isPermaLink="false">CVE-2019-0207|2024-08-04T17:44:15.383Z</guid>
      <pubDate>Mon, 16 Sep 2019 16:36:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-11996|2024-08-04T11:48:57.318Z -- apache -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-11996</link>
      <description>A specially crafted sequence of HTTP/2 requests sent to Apache Tomcat 10.0.0-M1 to 10.0.0-M5, 9.0.0.M1 to 9.0.35 and 8.5.0 to 8.5.55 could trigger high CPU usage for several seconds. If a sufficient number of such requests were made on concurrent HTTP/2 connections, the server could become unresponsive.</description>
      <guid isPermaLink="false">CVE-2020-11996|2024-08-04T11:48:57.318Z</guid>
      <pubDate>Fri, 26 Jun 2020 16:27:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-0217|2024-08-04T17:44:15.383Z -- apache -- apache%20http%20server
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0217</link>
      <description>In Apache HTTP Server 2.4 release 2.4.38 and prior, a race condition in mod_auth_digest when running in a threaded server could allow a user with valid credentials to authenticate using another username, bypassing configured access control restrictions.</description>
      <guid isPermaLink="false">CVE-2019-0217|2024-08-04T17:44:15.383Z</guid>
      <pubDate>Mon, 08 Apr 2019 20:11:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-9482|2024-08-04T10:26:16.177Z -- apache -- apache%20nifi%20registry
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-9482</link>
      <description>If NiFi Registry 0.1.0 to 0.5.0 uses an authentication mechanism other than PKI, when the user clicks Log Out, NiFi Registry invalidates the authentication token on the client side but not on the server side. This permits the user's client-side token to be used for up to 12 hours after logging out to make API requests to NiFi Registry.</description>
      <guid isPermaLink="false">CVE-2020-9482|2024-08-04T10:26:16.177Z</guid>
      <pubDate>Tue, 28 Apr 2020 18:12:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-0191|2024-08-04T17:44:14.755Z -- apache -- apache%20karaf
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0191</link>
      <description>Apache Karaf kar deployer reads .kar archives and extracts the paths from the "repository/" and "resources/" entries in the zip file. It then writes out the content of these paths to the Karaf repo and resources directories. However, it doesn't do any validation on the paths in the zip file. This means that a malicious user could craft a .kar file with ".." directory names and break out of the directories to write arbitrary content to the filesystem. This is the "Zip-slip" vulnerability - https://snyk.io/research/zip-slip-vulnerability. This vulnerability is low if the Karaf process user has limited permission on the filesystem. Any Apache Karaf releases prior 4.2.3 is impacted.</description>
      <guid isPermaLink="false">CVE-2019-0191|2024-08-04T17:44:14.755Z</guid>
      <pubDate>Wed, 20 Mar 2019 17:05:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1934|2024-08-04T06:54:00.049Z -- apache -- apache%20http%20server
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1934</link>
      <description>In Apache HTTP Server 2.4.0 to 2.4.41, mod_proxy_ftp may use uninitialized memory when proxying to a malicious FTP server.</description>
      <guid isPermaLink="false">CVE-2020-1934|2024-08-04T06:54:00.049Z</guid>
      <pubDate>Wed, 01 Apr 2020 19:22:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-0226|2024-08-04T17:44:15.370Z -- apache -- karaf
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0226</link>
      <description>Apache Karaf Config service provides a install method (via service or MBean) that could be used to travel in any directory and overwrite existing file. The vulnerability is low if the Karaf process user has limited permission on the filesystem. Any Apache Karaf version before 4.2.5 is impacted. User should upgrade to Apache Karaf 4.2.5 or later.</description>
      <guid isPermaLink="false">CVE-2019-0226|2024-08-04T17:44:15.370Z</guid>
      <pubDate>Thu, 09 May 2019 13:31:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-0214|2024-08-04T17:44:14.813Z -- apache -- apache%20archiva
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0214</link>
      <description>In Apache Archiva 2.0.0 - 2.2.3, it is possible to write files to the archiva server at arbitrary locations by using the artifact upload mechanism. Existing files can be overwritten, if the archiva run user has appropriate permission on the filesystem for the target file.</description>
      <guid isPermaLink="false">CVE-2019-0214|2024-08-04T17:44:14.813Z</guid>
      <pubDate>Tue, 30 Apr 2019 21:48:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-0212|2024-08-04T17:44:14.866Z -- apache -- apache%20hbase
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0212</link>
      <description>In all previously released Apache HBase 2.x versions (2.0.0-2.0.4, 2.1.0-2.1.3), authorization was incorrectly applied to users of the HBase REST server. Requests sent to the HBase REST server were executed with the permissions of the REST server itself, not with the permissions of the end-user. This issue is only relevant when HBase is configured with Kerberos authentication, HBase authorization is enabled, and the REST server is configured with SPNEGO authentication. This issue does not extend beyond the HBase REST server.</description>
      <guid isPermaLink="false">CVE-2019-0212|2024-08-04T17:44:14.866Z</guid>
      <pubDate>Thu, 28 Mar 2019 21:24:07 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-0227|2024-08-04T17:44:15.943Z -- apache -- apache%20axis%201.4
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0227</link>
      <description>A Server Side Request Forgery (SSRF) vulnerability affected the Apache Axis 1.4 distribution that was last released in 2006. Security and bug commits commits continue in the projects Axis 1.x Subversion repository, legacy users are encouraged to build from source. The successor to Axis 1.x is Axis2, the latest version is 1.7.9 and is not vulnerable to this issue.</description>
      <guid isPermaLink="false">CVE-2019-0227|2024-08-04T17:44:15.943Z</guid>
      <pubDate>Wed, 01 May 2019 20:03:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-0194|2024-08-04T17:44:14.728Z -- apache -- apache%20camel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0194</link>
      <description>Apache Camel's File is vulnerable to directory traversal. Camel 2.21.0 to 2.21.3, 2.22.0 to 2.22.2, 2.23.0 and the unsupported Camel 2.x (2.19 and earlier) versions may be also affected.</description>
      <guid isPermaLink="false">CVE-2019-0194|2024-08-04T17:44:14.728Z</guid>
      <pubDate>Tue, 30 Apr 2019 21:30:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-9488|2024-08-04T10:26:16.370Z -- apache -- apache%20log4j
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-9488</link>
      <description>Improper validation of certificate with host mismatch in Apache Log4j SMTP appender. This could allow an SMTPS connection to be intercepted by a man-in-the-middle attack which could leak any log messages sent through that appender. Fixed in Apache Log4j 2.12.3 and 2.13.1</description>
      <guid isPermaLink="false">CVE-2020-9488|2024-08-04T10:26:16.370Z</guid>
      <pubDate>Mon, 27 Apr 2020 15:36:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-0188|2024-08-04T17:44:14.864Z -- apache -- apache%20camel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0188</link>
      <description>Apache Camel prior to 2.24.0 contains an XML external entity injection (XXE) vulnerability (CWE-611) due to using an outdated vulnerable JSON-lib library. This affects only the camel-xmljson component, which was removed.</description>
      <guid isPermaLink="false">CVE-2019-0188|2024-08-04T17:44:14.864Z</guid>
      <pubDate>Tue, 28 May 2019 18:10:08 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1950|2024-08-04T06:54:00.402Z -- apache -- apache%20tika
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1950</link>
      <description>A carefully crafted or corrupt PSD file can cause excessive memory usage in Apache Tika's PSDParser in versions 1.0-1.23.</description>
      <guid isPermaLink="false">CVE-2020-1950|2024-08-04T06:54:00.402Z</guid>
      <pubDate>Mon, 23 Mar 2020 13:21:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1927|2024-08-04T06:53:59.905Z -- apache -- apache%20http%20server
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1927</link>
      <description>In Apache HTTP Server 2.4.0 to 2.4.41, redirects configured with mod_rewrite that were intended to be self-referential might be fooled by encoded newlines and redirect instead to an an unexpected URL within the request URL.</description>
      <guid isPermaLink="false">CVE-2020-1927|2024-08-04T06:53:59.905Z</guid>
      <pubDate>Wed, 01 Apr 2020 23:08:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1953|2024-08-04T06:53:59.884Z -- apache -- apache%20commons%20configuration
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1953</link>
      <description>Apache Commons Configuration uses a third-party library to parse YAML files which by default allows the instantiation of classes if the YAML includes special statements. Apache Commons Configuration versions 2.2, 2.3, 2.4, 2.5, 2.6 did not change the default settings of this library. So if a YAML file was loaded from an untrusted source, it could therefore load and execute code out of the control of the host application.</description>
      <guid isPermaLink="false">CVE-2020-1953|2024-08-04T06:53:59.884Z</guid>
      <pubDate>Fri, 13 Mar 2020 14:58:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1952|2024-08-04T06:54:00.401Z -- apache -- iotdb
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1952</link>
      <description>An issue was found in Apache IoTDB .9.0 to 0.9.1 and 0.8.0 to 0.8.2. When starting IoTDB, the JMX port 31999 is exposed with no certification.Then, clients could execute code remotely.</description>
      <guid isPermaLink="false">CVE-2020-1952|2024-08-04T06:54:00.401Z</guid>
      <pubDate>Mon, 27 Apr 2020 16:16:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-0202|2024-08-04T17:44:14.845Z -- apache -- storm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0202</link>
      <description>The Apache Storm Logviewer daemon exposes HTTP-accessible endpoints to read/search log files on hosts running Storm. In Apache Storm versions 0.9.1-incubating to 1.2.2, it is possible to read files off the host's file system that were not intended to be accessible via these endpoints.</description>
      <guid isPermaLink="false">CVE-2019-0202|2024-08-04T17:44:14.845Z</guid>
      <pubDate>Thu, 25 Jul 2019 23:17:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-0224|2024-08-04T17:44:15.405Z -- apache -- apache%20jspwiki
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0224</link>
      <description>In Apache JSPWiki 2.9.0 to 2.11.0.M2, a carefully crafted URL could execute javascript on another user's session. No information could be saved on the server or jspwiki database, nor would an attacker be able to execute js on someone else's browser; only on its own browser.</description>
      <guid isPermaLink="false">CVE-2019-0224|2024-08-04T17:44:15.405Z</guid>
      <pubDate>Thu, 28 Mar 2019 21:00:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-0193|2024-08-04T17:44:14.809Z -- apache -- apache%20solr
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0193</link>
      <description>In Apache Solr, the DataImportHandler, an optional but popular module to pull in data from databases and other sources, has a feature in which the whole DIH configuration can come from a request's "dataConfig" parameter. The debug mode of the DIH admin screen uses this to allow convenient debugging / development of a DIH config. Since a DIH config can contain scripts, this parameter is a security risk. Starting with version 8.2.0 of Solr, use of this parameter requires setting the Java System property "enable.dih.dataConfigParam" to true.</description>
      <guid isPermaLink="false">CVE-2019-0193|2024-08-04T17:44:14.809Z</guid>
      <pubDate>Thu, 01 Aug 2019 13:48:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-0225|2024-08-04T17:44:15.389Z -- apache -- apache%20jspwiki
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-0225</link>
      <description>A specially crafted url could be used to access files under the ROOT directory of the application on Apache JSPWiki 2.9.0 to 2.11.0.M2, which could be used by an attacker to obtain registered users' details.</description>
      <guid isPermaLink="false">CVE-2019-0225|2024-08-04T17:44:15.389Z</guid>
      <pubDate>Thu, 28 Mar 2019 21:07:57 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1935|2024-08-04T06:53:59.921Z -- apache -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1935</link>
      <description>In Apache Tomcat 9.0.0.M1 to 9.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99 the HTTP header parsing code used an approach to end-of-line parsing that allowed some invalid HTTP headers to be parsed as valid. This led to a possibility of HTTP Request Smuggling if Tomcat was located behind a reverse proxy that incorrectly handled the invalid Transfer-Encoding header in a particular manner. Such a reverse proxy is considered unlikely.</description>
      <guid isPermaLink="false">CVE-2020-1935|2024-08-04T06:53:59.921Z</guid>
      <pubDate>Mon, 24 Feb 2020 21:11:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1938|2024-08-04T06:54:00.412Z -- apache -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1938</link>
      <description>When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.</description>
      <guid isPermaLink="false">CVE-2020-1938|2024-08-04T06:54:00.412Z</guid>
      <pubDate>Mon, 24 Feb 2020 21:19:18 +0000</pubDate>
    </item>
  </channel>
</rss>

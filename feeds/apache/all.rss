<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Apache -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/apache/all.rss</link>
    <description>The latest CVEs for Apache -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 17:21:55 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2020-1954|2024-08-04T06:54:00.267Z -- apache -- apache%20cxf
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1954</link>
      <description>Apache CXF has the ability to integrate with JMX by registering an InstrumentationManager extension with the CXF bus. If the ‘createMBServerConnectorFactory‘ property of the default InstrumentationManagerImpl is not disabled, then it is vulnerable to a man-in-the-middle (MITM) style attack. An attacker on the same host can connect to the registry and rebind the entry to another server, thus acting as a proxy to the original. They are then able to gain access to all of the information that is sent and received over JMX.</description>
      <guid isPermaLink="false">CVE-2020-1954|2024-08-04T06:54:00.267Z</guid>
      <pubDate>Wed, 01 Apr 2020 20:07:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1943|2024-08-04T06:53:59.927Z -- apache -- apache%20ofbiz
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1943</link>
      <description>Data sent with contentId to /control/stream is not sanitized, allowing XSS attacks in Apache OFBiz 16.11.01 to 16.11.07.</description>
      <guid isPermaLink="false">CVE-2020-1943|2024-08-04T06:53:59.927Z</guid>
      <pubDate>Wed, 01 Apr 2020 18:18:48 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-9481|2024-08-04T10:26:16.220Z -- apache -- ats
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-9481</link>
      <description>Apache ATS 6.0.0 to 6.2.3, 7.0.0 to 7.1.9, and 8.0.0 to 8.0.6 is vulnerable to a HTTP/2 slow read attack.</description>
      <guid isPermaLink="false">CVE-2020-9481|2024-08-04T10:26:16.220Z</guid>
      <pubDate>Mon, 27 Apr 2020 21:11:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1956|2024-08-04T06:54:00.299Z -- apache -- kylin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1956</link>
      <description>Apache Kylin 2.3.0, and releases up to 2.6.5 and 3.0.1 has some restful apis which will concatenate os command with the user input string, a user is likely to be able to execute any os command without any protection or validation.</description>
      <guid isPermaLink="false">CVE-2020-1956|2024-08-04T06:54:00.299Z</guid>
      <pubDate>Fri, 22 May 2020 13:27:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1937|2024-08-04T06:53:59.800Z -- apache -- apache%20kylin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1937</link>
      <description>Kylin has some restful apis which will concatenate SQLs with the user input string, a user is likely to be able to run malicious database queries.</description>
      <guid isPermaLink="false">CVE-2020-1937|2024-08-04T06:53:59.800Z</guid>
      <pubDate>Mon, 24 Feb 2020 20:57:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1958|2024-08-04T06:54:00.299Z -- apache -- apache%20druid
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1958</link>
      <description>When LDAP authentication is enabled in Apache Druid 0.17.0, callers of Druid APIs with a valid set of LDAP credentials can bypass the credentialsValidator.userSearch filter barrier that determines if a valid LDAP user is allowed to authenticate with Druid. They are still subject to role-based authorization checks, if configured. Callers of Druid APIs can also retrieve any LDAP attribute values of users that exist on the LDAP server, so long as that information is visible to the Druid server. This information disclosure does not require the caller itself to be a valid LDAP user.</description>
      <guid isPermaLink="false">CVE-2020-1958|2024-08-04T06:54:00.299Z</guid>
      <pubDate>Wed, 01 Apr 2020 21:48:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1929|2024-08-04T06:54:00.337Z -- apache -- beam
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1929</link>
      <description>The Apache Beam MongoDB connector in versions 2.10.0 to 2.16.0 has an option to disable SSL trust verification. However this configuration is not respected and the certificate verification disables trust verification in every case. This exclusion also gets registered globally which disables trust checking for any code running in the same JVM.</description>
      <guid isPermaLink="false">CVE-2020-1929|2024-08-04T06:54:00.337Z</guid>
      <pubDate>Wed, 15 Jan 2020 18:56:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-11996|2024-08-04T11:48:57.318Z -- apache -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-11996</link>
      <description>A specially crafted sequence of HTTP/2 requests sent to Apache Tomcat 10.0.0-M1 to 10.0.0-M5, 9.0.0.M1 to 9.0.35 and 8.5.0 to 8.5.55 could trigger high CPU usage for several seconds. If a sufficient number of such requests were made on concurrent HTTP/2 connections, the server could become unresponsive.</description>
      <guid isPermaLink="false">CVE-2020-11996|2024-08-04T11:48:57.318Z</guid>
      <pubDate>Fri, 26 Jun 2020 16:27:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-9482|2024-08-04T10:26:16.177Z -- apache -- apache%20nifi%20registry
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-9482</link>
      <description>If NiFi Registry 0.1.0 to 0.5.0 uses an authentication mechanism other than PKI, when the user clicks Log Out, NiFi Registry invalidates the authentication token on the client side but not on the server side. This permits the user's client-side token to be used for up to 12 hours after logging out to make API requests to NiFi Registry.</description>
      <guid isPermaLink="false">CVE-2020-9482|2024-08-04T10:26:16.177Z</guid>
      <pubDate>Tue, 28 Apr 2020 18:12:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1934|2024-08-04T06:54:00.049Z -- apache -- apache%20http%20server
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1934</link>
      <description>In Apache HTTP Server 2.4.0 to 2.4.41, mod_proxy_ftp may use uninitialized memory when proxying to a malicious FTP server.</description>
      <guid isPermaLink="false">CVE-2020-1934|2024-08-04T06:54:00.049Z</guid>
      <pubDate>Wed, 01 Apr 2020 19:22:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-9488|2024-08-04T10:26:16.370Z -- apache -- apache%20log4j
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-9488</link>
      <description>Improper validation of certificate with host mismatch in Apache Log4j SMTP appender. This could allow an SMTPS connection to be intercepted by a man-in-the-middle attack which could leak any log messages sent through that appender. Fixed in Apache Log4j 2.12.3 and 2.13.1</description>
      <guid isPermaLink="false">CVE-2020-9488|2024-08-04T10:26:16.370Z</guid>
      <pubDate>Mon, 27 Apr 2020 15:36:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1950|2024-08-04T06:54:00.402Z -- apache -- apache%20tika
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1950</link>
      <description>A carefully crafted or corrupt PSD file can cause excessive memory usage in Apache Tika's PSDParser in versions 1.0-1.23.</description>
      <guid isPermaLink="false">CVE-2020-1950|2024-08-04T06:54:00.402Z</guid>
      <pubDate>Mon, 23 Mar 2020 13:21:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1927|2024-08-04T06:53:59.905Z -- apache -- apache%20http%20server
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1927</link>
      <description>In Apache HTTP Server 2.4.0 to 2.4.41, redirects configured with mod_rewrite that were intended to be self-referential might be fooled by encoded newlines and redirect instead to an an unexpected URL within the request URL.</description>
      <guid isPermaLink="false">CVE-2020-1927|2024-08-04T06:53:59.905Z</guid>
      <pubDate>Wed, 01 Apr 2020 23:08:43 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1953|2024-08-04T06:53:59.884Z -- apache -- apache%20commons%20configuration
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1953</link>
      <description>Apache Commons Configuration uses a third-party library to parse YAML files which by default allows the instantiation of classes if the YAML includes special statements. Apache Commons Configuration versions 2.2, 2.3, 2.4, 2.5, 2.6 did not change the default settings of this library. So if a YAML file was loaded from an untrusted source, it could therefore load and execute code out of the control of the host application.</description>
      <guid isPermaLink="false">CVE-2020-1953|2024-08-04T06:53:59.884Z</guid>
      <pubDate>Fri, 13 Mar 2020 14:58:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1952|2024-08-04T06:54:00.401Z -- apache -- iotdb
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1952</link>
      <description>An issue was found in Apache IoTDB .9.0 to 0.9.1 and 0.8.0 to 0.8.2. When starting IoTDB, the JMX port 31999 is exposed with no certification.Then, clients could execute code remotely.</description>
      <guid isPermaLink="false">CVE-2020-1952|2024-08-04T06:54:00.401Z</guid>
      <pubDate>Mon, 27 Apr 2020 16:16:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1935|2024-08-04T06:53:59.921Z -- apache -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1935</link>
      <description>In Apache Tomcat 9.0.0.M1 to 9.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99 the HTTP header parsing code used an approach to end-of-line parsing that allowed some invalid HTTP headers to be parsed as valid. This led to a possibility of HTTP Request Smuggling if Tomcat was located behind a reverse proxy that incorrectly handled the invalid Transfer-Encoding header in a particular manner. Such a reverse proxy is considered unlikely.</description>
      <guid isPermaLink="false">CVE-2020-1935|2024-08-04T06:53:59.921Z</guid>
      <pubDate>Mon, 24 Feb 2020 21:11:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-1938|2024-08-04T06:54:00.412Z -- apache -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-1938</link>
      <description>When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.</description>
      <guid isPermaLink="false">CVE-2020-1938|2024-08-04T06:54:00.412Z</guid>
      <pubDate>Mon, 24 Feb 2020 21:19:18 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Apache -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/apache/all.rss</link>
    <description>The latest CVEs for Apache -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Mon, 05 Aug 2024 12:25:53 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2019-17554|2024-08-05T01:40:15.799Z -- apache -- olingo
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-17554</link>
      <description>The XML content type entity deserializer in Apache Olingo versions 4.0.0 to 4.6.0 is not configured to deny the resolution of external entities. Request with content type "application/xml", which trigger the deserialization of entities, can be used to trigger XXE attacks.</description>
      <guid isPermaLink="false">CVE-2019-17554|2024-08-05T01:40:15.799Z</guid>
      <pubDate>Wed, 04 Dec 2019 16:54:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-11801|2024-08-05T08:17:09.271Z -- apache -- apache%20fineract
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-11801</link>
      <description>SQL injection vulnerability in Apache Fineract before 1.3.0 allows attackers to execute arbitrary SQL commands via a query on a m_center data related table.</description>
      <guid isPermaLink="false">CVE-2018-11801|2024-08-05T08:17:09.271Z</guid>
      <pubDate>Tue, 11 Jun 2019 16:43:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-11779|2024-08-05T08:17:09.126Z -- apache -- storm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-11779</link>
      <description>In Apache Storm versions 1.1.0 to 1.2.2, when the user is using the storm-kafka-client or storm-kafka modules, it is possible to cause the Storm UI daemon to deserialize user provided bytes into a Java class.</description>
      <guid isPermaLink="false">CVE-2018-11779|2024-08-05T08:17:09.126Z</guid>
      <pubDate>Thu, 25 Jul 2019 23:23:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-17570|2024-08-05T01:40:15.866Z -- apache -- apache%20xml-rpc
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-17570</link>
      <description>An untrusted deserialization was found in the org.apache.xmlrpc.parser.XmlRpcResponseParser:addResult method of Apache XML-RPC (aka ws-xmlrpc) library. A malicious XML-RPC server could target a XML-RPC client causing it to execute arbitrary code. Apache XML-RPC is no longer maintained and this issue will not be fixed.</description>
      <guid isPermaLink="false">CVE-2019-17570|2024-08-05T01:40:15.866Z</guid>
      <pubDate>Thu, 23 Jan 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-17200|2024-08-05T10:47:04.053Z -- apache -- ofbiz
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-17200</link>
      <description>The Apache OFBiz HTTP engine (org.apache.ofbiz.service.engine.HttpEngine.java) handles requests for HTTP services via the /webtools/control/httpService endpoint. This service takes the `serviceContent` parameter in the request and deserializes it using XStream. This `XStream` instance is slightly guarded by disabling the creation of `ProcessBuilder`. However, this can be easily bypassed (and in multiple ways). Mitigation: Upgrade to 16.11.06 or manually apply the following commits on branch 16 r1850017+1850019</description>
      <guid isPermaLink="false">CVE-2018-17200|2024-08-05T10:47:04.053Z</guid>
      <pubDate>Wed, 11 Sep 2019 20:22:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-17556|2024-08-05T01:40:15.833Z -- apache -- olingo
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-17556</link>
      <description>Apache Olingo versions 4.0.0 to 4.6.0 provide the AbstractService class, which is public API, uses ObjectInputStream and doesn't check classes being deserialized. If an attacker can feed malicious metadata to the class, then it may result in running attacker's code in the worse case.</description>
      <guid isPermaLink="false">CVE-2019-17556|2024-08-05T01:40:15.833Z</guid>
      <pubDate>Wed, 04 Dec 2019 16:59:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-17569|2024-08-05T01:40:15.855Z -- apache -- apache%20tomcat
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-17569</link>
      <description>The refactoring present in Apache Tomcat 9.0.28 to 9.0.30, 8.5.48 to 8.5.50 and 7.0.98 to 7.0.99 introduced a regression. The result of the regression was that invalid Transfer-Encoding headers were incorrectly processed leading to a possibility of HTTP Request Smuggling if Tomcat was located behind a reverse proxy that incorrectly handled the invalid Transfer-Encoding header in a particular manner. Such a reverse proxy is considered unlikely.</description>
      <guid isPermaLink="false">CVE-2019-17569|2024-08-05T01:40:15.855Z</guid>
      <pubDate>Mon, 24 Feb 2020 21:04:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-11772|2024-08-05T08:17:09.112Z -- apache -- vcl
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-11772</link>
      <description>Apache VCL versions 2.1 through 2.5 do not properly validate cookie input when determining what node (if any) was previously selected in the privilege tree. The cookie data is then used in an SQL statement. This allows for an SQL injection attack. Access to this portion of a VCL system requires admin level rights. Other layers of security seem to protect against malicious attack. However, all VCL systems running versions earlier than 2.5.1 should be upgraded or patched. This vulnerability was found and reported to the Apache VCL project by ADLab of Venustech.</description>
      <guid isPermaLink="false">CVE-2018-11772|2024-08-05T08:17:09.112Z</guid>
      <pubDate>Mon, 29 Jul 2019 18:32:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-11800|2024-08-05T08:17:09.177Z -- apache -- apache%20fineract
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-11800</link>
      <description>SQL injection vulnerability in Apache Fineract before 1.3.0 allows attackers to execute arbitrary SQL commands via a query on the GroupSummaryCounts related table.</description>
      <guid isPermaLink="false">CVE-2018-11800|2024-08-05T08:17:09.177Z</guid>
      <pubDate>Tue, 11 Jun 2019 16:42:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-11802|2024-08-05T08:17:09.126Z -- apache -- apache%20solr
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-11802</link>
      <description>In Apache Solr, the cluster can be partitioned into multiple collections and only a subset of nodes actually host any given collection. However, if a node receives a request for a collection it does not host, it proxies the request to a relevant node and serves the request. Solr bypasses all authorization settings for such requests. This affects all Solr versions prior to 7.7 that use the default authorization mechanism of Solr (RuleBasedAuthorizationPlugin).</description>
      <guid isPermaLink="false">CVE-2018-11802|2024-08-05T08:17:09.126Z</guid>
      <pubDate>Wed, 01 Apr 2020 21:11:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-17564|2024-08-05T01:40:15.977Z -- apache -- apache%20dubbo
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-17564</link>
      <description>Unsafe deserialization occurs within a Dubbo application which has HTTP remoting enabled. An attacker may submit a POST request with a Java object in it to completely compromise a Provider instance of Apache Dubbo, if this instance enables HTTP. This issue affected Apache Dubbo 2.7.0 to 2.7.4, 2.6.0 to 2.6.7, and all 2.5.x versions.</description>
      <guid isPermaLink="false">CVE-2019-17564|2024-08-05T01:40:15.977Z</guid>
      <pubDate>Wed, 01 Apr 2020 21:17:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-11774|2024-08-05T08:17:09.236Z -- apache -- vcl
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-11774</link>
      <description>Apache VCL versions 2.1 through 2.5 do not properly validate form input when adding and removing VMs to and from hosts. The form data is then used in SQL statements. This allows for an SQL injection attack. Access to this portion of a VCL system requires admin level rights. Other layers of security seem to protect against malicious attack. However, all VCL systems running versions earlier than 2.5.1 should be upgraded or patched. This vulnerability was found and reported to the Apache VCL project by ADLab of Venustech.</description>
      <guid isPermaLink="false">CVE-2018-11774|2024-08-05T08:17:09.236Z</guid>
      <pubDate>Mon, 29 Jul 2019 18:17:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-17573|2024-08-05T01:47:12.612Z -- apache -- cxf
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-17573</link>
      <description>By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack, which allows a malicious actor to inject javascript into the web page. Please note that the attack exploits a feature which is not typically not present in modern browsers, who remove dot segments before sending the request. However, Mobile applications may be vulnerable.</description>
      <guid isPermaLink="false">CVE-2019-17573|2024-08-05T01:47:12.612Z</guid>
      <pubDate>Thu, 16 Jan 2020 17:50:42 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-11773|2024-08-05T08:17:09.198Z -- apache -- vcl
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-11773</link>
      <description>Apache VCL versions 2.1 through 2.5 do not properly validate form input when processing a submitted block allocation. The form data is then used as an argument to the php built in function strtotime. This allows for an attack against the underlying implementation of that function. The implementation of strtotime at the time the issue was discovered appeared to be resistant to a malicious attack. However, all VCL systems running versions earlier than 2.5.1 should be upgraded or patched. This vulnerability was found and reported to the Apache VCL project by ADLab of Venustech.</description>
      <guid isPermaLink="false">CVE-2018-11773|2024-08-05T08:17:09.198Z</guid>
      <pubDate>Mon, 29 Jul 2019 18:11:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-8035|2024-08-05T06:46:12.231Z -- apache -- apache%20uima%20ducc
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-8035</link>
      <description>This vulnerability relates to the user's browser processing of DUCC webpage input data.The javascript comprising Apache UIMA DUCC (&lt;= 2.2.2) which runs in the user's browser does not sufficiently filter user supplied inputs, which may result in unintended execution of user supplied javascript code.</description>
      <guid isPermaLink="false">CVE-2018-8035|2024-08-05T06:46:12.231Z</guid>
      <pubDate>Wed, 01 May 2019 20:16:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-17196|2024-08-05T10:39:59.702Z -- apache -- kafka
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-17196</link>
      <description>In Apache Kafka versions between 0.11.0.0 and 2.1.0, it is possible to manually craft a Produce request which bypasses transaction/idempotent ACL validation. Only authenticated clients with Write permission on the respective topics are able to exploit this vulnerability. Users should upgrade to 2.1.1 or later where this vulnerability has been fixed.</description>
      <guid isPermaLink="false">CVE-2018-17196|2024-08-05T10:39:59.702Z</guid>
      <pubDate>Thu, 11 Jul 2019 20:37:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-11805|2024-08-05T08:17:09.279Z -- apache -- apache%20spamassassin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-11805</link>
      <description>In Apache SpamAssassin before 3.4.3, nefarious CF files can be configured to run system commands without any output or errors. With this, exploits can be injected in a number of scenarios. In addition to upgrading to SA 3.4.3, we recommend that users should only use update channels or 3rd party .cf files from trusted places.</description>
      <guid isPermaLink="false">CVE-2018-11805|2024-08-05T08:17:09.279Z</guid>
      <pubDate>Thu, 12 Dec 2019 22:11:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-17555|2024-08-05T01:40:15.978Z -- apache -- olingo
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-17555</link>
      <description>The AsyncResponseWrapperImpl class in Apache Olingo versions 4.0.0 to 4.6.0 reads the Retry-After header and passes it to the Thread.sleep() method without any check. If a malicious server returns a huge value in the header, then it can help to implement a DoS attack.</description>
      <guid isPermaLink="false">CVE-2019-17555|2024-08-05T01:40:15.978Z</guid>
      <pubDate>Wed, 04 Dec 2019 17:06:18 +0000</pubDate>
    </item>
  </channel>
</rss>

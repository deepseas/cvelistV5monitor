<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for wagtail -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/wagtail/all.rss</link>
    <description>The latest CVEs for wagtail -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 19:19:47 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-21683|2024-08-03T02:46:39.535Z -- wagtail -- wagtail
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-21683</link>
      <description>Wagtail is a Django based content management system focused on flexibility and user experience. When notifications for new replies in comment threads are sent, they are sent to all users who have replied or commented anywhere on the site, rather than only in the relevant threads. This means that a user could listen in to new comment replies on pages they have not have editing access to, as long as they have left a comment or reply somewhere on the site. A patched version has been released as Wagtail 2.15.2, which restores the intended behaviour - to send notifications for new replies to the participants in the active thread only (editing permissions are not considered). New comments can be disabled by setting `WAGTAILADMIN_COMMENTS_ENABLED = False` in the Django settings file.</description>
      <guid isPermaLink="false">CVE-2022-21683|2024-08-03T02:46:39.535Z</guid>
      <pubDate>Tue, 18 Jan 2022 17:30:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-35228|2024-08-02T03:07:46.735Z -- wagtail -- wagtail</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-35228</link>
      <description>Wagtail is an open source content management system built on Django. Due to an improperly applied permission check in the `wagtail.contrib.settings` module, a user with access to the Wagtail admin and knowledge of the URL of the edit view for a settings model can access and update that setting, even when they have not been granted permission over the model. The vulnerability is not exploitable by an ordinary site visitor without access to the Wagtail admin. Patched versions have been released as Wagtail 6.0.5 and 6.1.2. Wagtail releases prior to 6.0 are unaffected. Users are advised to upgrade. Site owners who are unable to upgrade to a patched version can avoid the vulnerability in `ModelViewSet` by registering the model as a snippet instead. No workaround is available for `wagtail.contrib.settings`.</description>
      <guid isPermaLink="false">CVE-2024-35228|2024-08-02T03:07:46.735Z</guid>
      <pubDate>Thu, 30 May 2024 18:44:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-39317|2024-07-18T15:20:35.111Z -- wagtail -- wagtail</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-39317</link>
      <description>Wagtail is an open source content management system built on Django. A bug in Wagtail's `parse_query_string` would result in it taking a long time to process suitably crafted inputs. When used to parse sufficiently long strings of characters without a space, `parse_query_string` would take an unexpectedly large amount of time to process, resulting in a denial of service. In an initial Wagtail installation, the vulnerability can be exploited by any Wagtail admin user. It cannot be exploited by end users. If your Wagtail site has a custom search implementation which uses `parse_query_string`, it may be exploitable by other users (e.g. unauthenticated users). Patched versions have been released as Wagtail 5.2.6, 6.0.6 and 6.1.3.</description>
      <guid isPermaLink="false">CVE-2024-39317|2024-07-18T15:20:35.111Z</guid>
      <pubDate>Thu, 11 Jul 2024 15:23:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-32882|2024-06-04T17:50:26.488Z -- wagtail -- wagtail</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-32882</link>
      <description>Wagtail is an open source content management system built on Django. In affected versions if a model has been made available for editing through the `wagtail.contrib.settings` module or `ModelViewSet`, and the `permission` argument on `FieldPanel` has been used to further restrict access to one or more fields of the model, a user with edit permission over the model but not the specific field can craft an HTTP POST request that bypasses the permission check on the individual field, allowing them to update its value. This vulnerability is not exploitable by an ordinary site visitor without access to the Wagtail admin, or by a user who has not been granted edit access to the model in question. The editing interfaces for pages and snippets are also unaffected. Patched versions have been released as Wagtail 6.0.3 and 6.1. Wagtail releases prior to 6.0 are unaffected. Users are advised to upgrade. Site owners who are unable to upgrade to a patched version can avoid the vulnerability as follows: 1.For models registered through `ModelViewSet`, register the model as a snippet instead; 2. For settings models, place the restricted fields in a separate settings model, and configure permission at the model level.</description>
      <guid isPermaLink="false">CVE-2024-32882|2024-06-04T17:50:26.488Z</guid>
      <pubDate>Thu, 02 May 2024 06:52:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-35228|2024-06-04T17:33:38.290Z -- wagtail -- wagtail</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-35228</link>
      <description>Wagtail is an open source content management system built on Django. Due to an improperly applied permission check in the `wagtail.contrib.settings` module, a user with access to the Wagtail admin and knowledge of the URL of the edit view for a settings model can access and update that setting, even when they have not been granted permission over the model. The vulnerability is not exploitable by an ordinary site visitor without access to the Wagtail admin. Patched versions have been released as Wagtail 6.0.5 and 6.1.2. Wagtail releases prior to 6.0 are unaffected. Users are advised to upgrade. Site owners who are unable to upgrade to a patched version can avoid the vulnerability in `ModelViewSet` by registering the model as a snippet instead. No workaround is available for `wagtail.contrib.settings`.</description>
      <guid isPermaLink="false">CVE-2024-35228|2024-06-04T17:33:38.290Z</guid>
      <pubDate>Thu, 30 May 2024 18:44:31 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-39317|2024-07-11T15:23:22.307Z -- wagtail -- wagtail</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-39317</link>
      <description>Wagtail is an open source content management system built on Django. A bug in Wagtail's `parse_query_string` would result in it taking a long time to process suitably crafted inputs. When used to parse sufficiently long strings of characters without a space, `parse_query_string` would take an unexpectedly large amount of time to process, resulting in a denial of service. In an initial Wagtail installation, the vulnerability can be exploited by any Wagtail admin user. It cannot be exploited by end users. If your Wagtail site has a custom search implementation which uses `parse_query_string`, it may be exploitable by other users (e.g. unauthenticated users). Patched versions have been released as Wagtail 5.2.6, 6.0.6 and 6.1.3.</description>
      <guid isPermaLink="false">CVE-2024-39317|2024-07-11T15:23:22.307Z</guid>
      <pubDate>Thu, 11 Jul 2024 15:23:22 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-32882|2024-08-02T02:20:35.672Z -- wagtail -- wagtail</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-32882</link>
      <description>Wagtail is an open source content management system built on Django. In affected versions if a model has been made available for editing through the `wagtail.contrib.settings` module or `ModelViewSet`, and the `permission` argument on `FieldPanel` has been used to further restrict access to one or more fields of the model, a user with edit permission over the model but not the specific field can craft an HTTP POST request that bypasses the permission check on the individual field, allowing them to update its value. This vulnerability is not exploitable by an ordinary site visitor without access to the Wagtail admin, or by a user who has not been granted edit access to the model in question. The editing interfaces for pages and snippets are also unaffected. Patched versions have been released as Wagtail 6.0.3 and 6.1. Wagtail releases prior to 6.0 are unaffected. Users are advised to upgrade. Site owners who are unable to upgrade to a patched version can avoid the vulnerability as follows: 1.For models registered through `ModelViewSet`, register the model as a snippet instead; 2. For settings models, place the restricted fields in a separate settings model, and configure permission at the model level.</description>
      <guid isPermaLink="false">CVE-2024-32882|2024-08-02T02:20:35.672Z</guid>
      <pubDate>Thu, 02 May 2024 06:52:59 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-39317|2024-08-02T04:19:20.749Z -- wagtail -- wagtail</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-39317</link>
      <description>Wagtail is an open source content management system built on Django. A bug in Wagtail's `parse_query_string` would result in it taking a long time to process suitably crafted inputs. When used to parse sufficiently long strings of characters without a space, `parse_query_string` would take an unexpectedly large amount of time to process, resulting in a denial of service. In an initial Wagtail installation, the vulnerability can be exploited by any Wagtail admin user. It cannot be exploited by end users. If your Wagtail site has a custom search implementation which uses `parse_query_string`, it may be exploitable by other users (e.g. unauthenticated users). Patched versions have been released as Wagtail 5.2.6, 6.0.6 and 6.1.3.</description>
      <guid isPermaLink="false">CVE-2024-39317|2024-08-02T04:19:20.749Z</guid>
      <pubDate>Thu, 11 Jul 2024 15:23:22 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Spring by Pivotal -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/spring%20by%20pivotal/all.rss</link>
    <description>The latest CVEs for Spring by Pivotal -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Tue, 17 Sep 2024 21:22:33 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2018-1275|2024-09-17T02:43:01.710Z -- spring%20by%20pivotal -- spring%20framework
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-1275</link>
      <description>Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.16 and older unsupported versions, allow applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a remote code execution attack. This CVE addresses the partial fix for CVE-2018-1270 in the 4.3.x branch of the Spring Framework.</description>
      <guid isPermaLink="false">CVE-2018-1275|2024-09-17T02:43:01.710Z</guid>
      <pubDate>Wed, 11 Apr 2018 13:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-1274|2024-09-17T01:11:48.375Z -- spring%20by%20pivotal -- spring%20framework
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-1274</link>
      <description>Spring Data Commons, versions 1.13 to 1.13.10, 2.0 to 2.0.5, and older unsupported versions, contain a property path parser vulnerability caused by unlimited resource allocation. An unauthenticated remote malicious user (or attacker) can issue requests against Spring Data REST endpoints or endpoints using property path parsing which can cause a denial of service (CPU and memory consumption).</description>
      <guid isPermaLink="false">CVE-2018-1274|2024-09-17T01:11:48.375Z</guid>
      <pubDate>Wed, 18 Apr 2018 16:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-1272|2024-09-17T02:15:49.301Z -- spring%20by%20pivotal -- spring%20framework
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-1272</link>
      <description>Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, provide client-side support for multipart requests. When Spring MVC or Spring WebFlux server application (server A) receives input from a remote client, and then uses that input to make a multipart request to another server (server B), it can be exposed to an attack, where an extra multipart is inserted in the content of the request from server A, causing server B to use the wrong value for a part it expects. This could to lead privilege escalation, for example, if the part content represents a username or user roles.</description>
      <guid isPermaLink="false">CVE-2018-1272|2024-09-17T02:15:49.301Z</guid>
      <pubDate>Fri, 06 Apr 2018 13:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2018-1229|2024-09-17T03:53:07.373Z -- spring%20by%20pivotal -- spring%20batch%20admin
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2018-1229</link>
      <description>Pivotal Spring Batch Admin, all versions, contains a stored XSS vulnerability in the file upload feature. An unauthenticated malicious user with network access to Spring Batch Admin could store an arbitrary web script that would be executed by other users. This issue has not been patched because Spring Batch Admin has reached end of life.</description>
      <guid isPermaLink="false">CVE-2018-1229|2024-09-17T03:53:07.373Z</guid>
      <pubDate>Wed, 21 Mar 2018 20:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for sminozzi -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/sminozzi/all.rss</link>
    <description>The latest CVEs for sminozzi -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Thu, 01 Aug 2024 21:22:44 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-4355|2024-08-01T20:40:47.127Z -- sminozzi -- block%20bad%20bots%20and%20stop%20bad%20bots%20crawlers%20and%20spiders%20and%20anti%20spam%20protection
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-4355</link>
      <description>The Block Bad Bots and Stop Bad Bots Crawlers and Spiders and Anti Spam Protection plugin for WordPress is vulnerable to unauthorized access of data due to a missing capability check on the stopbadbots_get_ajax_data() function in all versions up to, and including, 10.24. This makes it possible for authenticated attackers, with subscriber-level access and above, to expose visitor data.</description>
      <guid isPermaLink="false">CVE-2024-4355|2024-08-01T20:40:47.127Z</guid>
      <pubDate>Thu, 30 May 2024 08:30:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1860|2024-07-25T15:02:20.152Z -- sminozzi -- disable%20json%20api%2C%20login%20lockdown%2C%20xmlrpc%2C%20pingback%2C%20stop%20user%20enumeration%20anti%20hacker%20scan</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1860</link>
      <description>The Disable Json API, Login Lockdown, XMLRPC, Pingback, Stop User Enumeration Anti Hacker Scan plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the antihacker_add_whitelist() function in all versions up to, and including, 4.51. This makes it possible for unauthenticated attackers to add their IP Address to the whitelist circumventing protection</description>
      <guid isPermaLink="false">CVE-2024-1860|2024-07-25T15:02:20.152Z</guid>
      <pubDate>Wed, 28 Feb 2024 09:33:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-4355|2024-06-04T17:55:22.364Z -- sminozzi -- block%20bad%20bots%20and%20stop%20bad%20bots%20crawlers%20and%20spiders%20and%20anti%20spam%20protection</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-4355</link>
      <description>The Block Bad Bots and Stop Bad Bots Crawlers and Spiders and Anti Spam Protection plugin for WordPress is vulnerable to unauthorized access of data due to a missing capability check on the stopbadbots_get_ajax_data() function in all versions up to, and including, 10.24. This makes it possible for authenticated attackers, with subscriber-level access and above, to expose visitor data.</description>
      <guid isPermaLink="false">CVE-2024-4355|2024-06-04T17:55:22.364Z</guid>
      <pubDate>Thu, 30 May 2024 08:30:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1861|2024-06-04T17:59:57.700Z -- sminozzi -- disable%20json%20api%2C%20login%20lockdown%2C%20xmlrpc%2C%20pingback%2C%20stop%20user%20enumeration%20anti%20hacker%20scan</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1861</link>
      <description>The Disable Json API, Login Lockdown, XMLRPC, Pingback, Stop User Enumeration Anti Hacker Scan plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the antihacker_truncate_scan_table() function in all versions up to, and including, 4.52. This makes it possible for authenticated attackers, with subscriber-level access and above, to truncate the scan table.</description>
      <guid isPermaLink="false">CVE-2024-1861|2024-06-04T17:59:57.700Z</guid>
      <pubDate>Wed, 28 Feb 2024 09:33:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1860|2024-02-28T09:33:34.407Z -- sminozzi -- disable%20json%20api%2C%20login%20lockdown%2C%20xmlrpc%2C%20pingback%2C%20stop%20user%20enumeration%20anti%20hacker%20scan</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1860</link>
      <description>The Disable Json API, Login Lockdown, XMLRPC, Pingback, Stop User Enumeration Anti Hacker Scan plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the antihacker_add_whitelist() function in all versions up to, and including, 4.51. This makes it possible for unauthenticated attackers to add their IP Address to the whitelist circumventing protection</description>
      <guid isPermaLink="false">CVE-2024-1860|2024-02-28T09:33:34.407Z</guid>
      <pubDate>Wed, 28 Feb 2024 09:33:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1861|2024-08-01T18:56:22.365Z -- sminozzi -- disable%20json%20api%2C%20login%20lockdown%2C%20xmlrpc%2C%20pingback%2C%20stop%20user%20enumeration%20anti%20hacker%20scan</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1861</link>
      <description>The Disable Json API, Login Lockdown, XMLRPC, Pingback, Stop User Enumeration Anti Hacker Scan plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the antihacker_truncate_scan_table() function in all versions up to, and including, 4.52. This makes it possible for authenticated attackers, with subscriber-level access and above, to truncate the scan table.</description>
      <guid isPermaLink="false">CVE-2024-1861|2024-08-01T18:56:22.365Z</guid>
      <pubDate>Wed, 28 Feb 2024 09:33:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1860|2024-08-01T18:56:22.305Z -- sminozzi -- disable%20json%20api%2C%20login%20lockdown%2C%20xmlrpc%2C%20pingback%2C%20stop%20user%20enumeration%20anti%20hacker%20scan</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1860</link>
      <description>The Disable Json API, Login Lockdown, XMLRPC, Pingback, Stop User Enumeration Anti Hacker Scan plugin for WordPress is vulnerable to unauthorized modification of data due to a missing capability check on the antihacker_add_whitelist() function in all versions up to, and including, 4.51. This makes it possible for unauthenticated attackers to add their IP Address to the whitelist circumventing protection</description>
      <guid isPermaLink="false">CVE-2024-1860|2024-08-01T18:56:22.305Z</guid>
      <pubDate>Wed, 28 Feb 2024 09:33:34 +0000</pubDate>
    </item>
  </channel>
</rss>

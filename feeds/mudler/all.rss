<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>CVE Feed for mudler -- all</title><link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/mudler/all.rss</link><description>The latest CVEs for mudler -- all</description><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><lastBuildDate>Fri, 24 May 2024 21:24:09 +0000</lastBuildDate><ttl>60</ttl><item><title>CVE-2024-3135|2024-04-16T11:10:25.797Z -- mudler -- mudler/localai
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-3135</link><description>A Cross-Site Request Forgery (CSRF) vulnerability exists in the mudler/localai application, allowing attackers to craft malicious webpages that, when visited by a victim, perform unauthorized actions on the victim's local LocalAI instance without their consent. This vulnerability enables attackers to exhaust system resources, consume credits, and fill disk space by making numerous resource-intensive API calls, such as generating images or uploading files. The vulnerability stems from the application's acceptance of simple request content-types without requiring CSRF tokens or implementing other CSRF mitigation measures. Successful exploitation does not require network access to the vulnerable LocalAI environment.</description><guid isPermaLink="false">CVE-2024-3135|2024-04-16T11:10:25.797Z</guid><pubDate>Mon, 01 Apr 2024 18:45:07 +0000</pubDate></item><item><title>CVE-2024-2029|2024-04-16T11:10:34.081Z -- mudler -- mudler/localai
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-2029</link><description>A command injection vulnerability exists in the `TranscriptEndpoint` of mudler/localai, specifically within the `audioToWav` function used for converting audio files to WAV format for transcription. The vulnerability arises due to the lack of sanitization of user-supplied filenames before passing them to ffmpeg via a shell command, allowing an attacker to execute arbitrary commands on the host system. Successful exploitation could lead to unauthorized access, data breaches, or other detrimental impacts, depending on the privileges of the process executing the code.</description><guid isPermaLink="false">CVE-2024-2029|2024-04-16T11:10:34.081Z</guid><pubDate>Wed, 10 Apr 2024 17:08:05 +0000</pubDate></item></channel></rss>
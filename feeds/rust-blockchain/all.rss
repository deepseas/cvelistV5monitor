<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for rust-blockchain -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/rust-blockchain/all.rss</link>
    <description>The latest CVEs for rust-blockchain -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 14:22:54 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-39354|2024-08-03T12:00:44.050Z -- rust-blockchain -- evm
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-39354</link>
      <description>SputnikVM, also called evm, is a Rust implementation of Ethereum Virtual Machine. A custom stateful precompile can use the `is_static` parameter to determine if the call is executed in a static context (via `STATICCALL`), and thus decide if stateful operations should be done. Prior to version 0.36.0, the passed `is_static` parameter was incorrect -- it was only set to `true` if the call came from a direct `STATICCALL` opcode. However, once a static call context is entered, it should stay static. The issue only impacts custom precompiles that actually uses `is_static`. For those affected, the issue can lead to possible incorrect state transitions. Version 0.36.0 contains a patch. There are no known workarounds.</description>
      <guid isPermaLink="false">CVE-2022-39354|2024-08-03T12:00:44.050Z</guid>
      <pubDate>Tue, 25 Oct 2022 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>

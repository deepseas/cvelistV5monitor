<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>CVE Feed for Spring -- Spring Security</title><link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/spring/spring%20security.rss</link><description>The latest CVEs for Spring -- Spring Security</description><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><lastBuildDate>Tue, 28 May 2024 22:02:45 +0000</lastBuildDate><ttl>60</ttl><item><title>CVE-2024-22234|2024-02-20T07:02:50.873Z -- Spring -- Spring Security
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-22234</link><description>In Spring Security, versions 6.1.x prior to 6.1.7 and versions 6.2.x prior to 6.2.2, an application is vulnerable to broken access control when it directly uses the AuthenticationTrustResolver.isFullyAuthenticated(Authentication) method.

Specifically, an application is vulnerable if:

  *  The application uses AuthenticationTrustResolver.isFullyAuthenticated(Authentication) directly and a null authentication parameter is passed to it resulting in an erroneous true return value.


An application is not vulnerable if any of the following is true:

  *  The application does not use AuthenticationTrustResolver.isFullyAuthenticated(Authentication) directly.
  *  The application does not pass null to AuthenticationTrustResolver.isFullyAuthenticated
  *  The application only uses isFullyAuthenticated via  Method Security https://docs.spring.io/spring-security/reference/servlet/authorization/method-security.html  or  HTTP Request Security https://docs.spring.io/spring-security/reference/servlet/authorization/authorize-http-requests.html 



</description><guid isPermaLink="false">CVE-2024-22234|2024-02-20T07:02:50.873Z</guid><pubDate>Tue, 20 Feb 2024 07:02:50 +0000</pubDate></item></channel></rss>
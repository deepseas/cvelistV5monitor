<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for statamic -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/statamic/all.rss</link>
    <description>The latest CVEs for statamic -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 11:20:31 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-24784|2024-08-03T04:20:50.503Z -- statamic -- cms
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-24784</link>
      <description>Statamic is a Laravel and Git powered CMS. Before versions 3.2.39 and 3.3.2, it is possible to confirm a single character of a user's password hash using a specially crafted regular expression filter in the users endpoint of the REST API. Multiple such requests can eventually uncover the entire hash. The hash is not present in the response, however the presence or absence of a result confirms if the character is in the right position. The API has throttling enabled by default, making this a time intensive task. Both the REST API and the users endpoint need to be enabled, as they are disabled by default. The issue has been fixed in versions 3.2.39 and above, and 3.3.2 and above.</description>
      <guid isPermaLink="false">CVE-2022-24784|2024-08-03T04:20:50.503Z</guid>
      <pubDate>Fri, 25 Mar 2022 21:40:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-36119|2024-08-02T03:30:12.952Z -- statamic -- cms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-36119</link>
      <description>Statamic is a, Laravel + Git powered CMS designed for building websites. In affected versions users registering via the `user:register_form` tag will have their password confirmation stored in plain text in their user file. This only affects sites matching **all** of the following conditions: 1. Running Statamic versions between 5.3.0 and 5.6.1. (This version range represents only one calendar week), 2. Using the `user:register_form` tag. 3. Using file-based user accounts. (Does not affect users stored in a database.), 4. Has users that have registered during that time period. (Existing users are not affected.). Additionally passwords are only visible to users that have access to read user yaml files, typically developers of the application itself. This issue has been patched in version 5.6.2, however any users registered during that time period and using the affected version range will still have the the `password_confirmation` value in their yaml files. We recommend that affected users have their password reset. System administrators are advised to upgrade their deployments. There are no known workarounds for this vulnerability. Anyone who commits their files to a public git repo, may consider clearing the sensitive data from the git history as it is likely that passwords were uploaded.</description>
      <guid isPermaLink="false">CVE-2024-36119|2024-08-02T03:30:12.952Z</guid>
      <pubDate>Thu, 30 May 2024 20:57:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-36119|2024-05-30T20:57:06.445Z -- statamic -- cms</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-36119</link>
      <description>Statamic is a, Laravel + Git powered CMS designed for building websites. In affected versions users registering via the `user:register_form` tag will have their password confirmation stored in plain text in their user file. This only affects sites matching **all** of the following conditions: 1. Running Statamic versions between 5.3.0 and 5.6.1. (This version range represents only one calendar week), 2. Using the `user:register_form` tag. 3. Using file-based user accounts. (Does not affect users stored in a database.), 4. Has users that have registered during that time period. (Existing users are not affected.). Additionally passwords are only visible to users that have access to read user yaml files, typically developers of the application itself. This issue has been patched in version 5.6.2, however any users registered during that time period and using the affected version range will still have the the `password_confirmation` value in their yaml files. We recommend that affected users have their password reset. System administrators are advised to upgrade their deployments. There are no known workarounds for this vulnerability. Anyone who commits their files to a public git repo, may consider clearing the sensitive data from the git history as it is likely that passwords were uploaded.</description>
      <guid isPermaLink="false">CVE-2024-36119|2024-05-30T20:57:06.445Z</guid>
      <pubDate>Thu, 30 May 2024 20:57:06 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-36119|2024-07-24T15:08:26.817Z -- statamic -- cms</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-36119</link>
      <description>Statamic is a, Laravel + Git powered CMS designed for building websites. In affected versions users registering via the `user:register_form` tag will have their password confirmation stored in plain text in their user file. This only affects sites matching **all** of the following conditions: 1. Running Statamic versions between 5.3.0 and 5.6.1. (This version range represents only one calendar week), 2. Using the `user:register_form` tag. 3. Using file-based user accounts. (Does not affect users stored in a database.), 4. Has users that have registered during that time period. (Existing users are not affected.). Additionally passwords are only visible to users that have access to read user yaml files, typically developers of the application itself. This issue has been patched in version 5.6.2, however any users registered during that time period and using the affected version range will still have the the `password_confirmation` value in their yaml files. We recommend that affected users have their password reset. System administrators are advised to upgrade their deployments. There are no known workarounds for this vulnerability. Anyone who commits their files to a public git repo, may consider clearing the sensitive data from the git history as it is likely that passwords were uploaded.</description>
      <guid isPermaLink="false">CVE-2024-36119|2024-07-24T15:08:26.817Z</guid>
      <pubDate>Thu, 30 May 2024 20:57:06 +0000</pubDate>
    </item>
  </channel>
</rss>

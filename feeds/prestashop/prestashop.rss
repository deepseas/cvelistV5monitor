<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for PrestaShop -- PrestaShop</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/prestashop/prestashop.rss</link>
    <description>The latest CVEs for PrestaShop -- PrestaShop</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Thu, 01 Aug 2024 23:22:50 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-21627|2024-08-01T22:27:36.164Z -- prestashop -- prestashop
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-21627</link>
      <description>PrestaShop is an open-source e-commerce platform. Prior to versions 8.1.3 and 1.7.8.11, some event attributes are not detected by the `isCleanHTML` method. Some modules using the `isCleanHTML` method could be vulnerable to cross-site scripting. Versions 8.1.3 and 1.7.8.11 contain a patch for this issue. The best workaround is to use the `HTMLPurifier` library to sanitize html input coming from users. The library is already available as a dependency in the PrestaShop project. Beware though that in legacy object models, fields of `HTML` type will call `isCleanHTML`.</description>
      <guid isPermaLink="false">CVE-2024-21627|2024-08-01T22:27:36.164Z</guid>
      <pubDate>Tue, 02 Jan 2024 21:03:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-21628|2024-08-01T22:27:35.896Z -- prestashop -- prestashop
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-21628</link>
      <description>PrestaShop is an open-source e-commerce platform. Prior to version 8.1.3, the isCleanHtml method is not used on this this form, which makes it possible to store a cross-site scripting payload in the database. The impact is low because the HTML is not interpreted in BO, thanks to twig's escape mechanism. In FO, the cross-site scripting attack is effective, but only impacts the customer sending it, or the customer session from which it was sent. This issue affects those who have a module fetching these messages from the DB and displaying it without escaping HTML. Version 8.1.3 contains a patch for this issue.</description>
      <guid isPermaLink="false">CVE-2024-21628|2024-08-01T22:27:35.896Z</guid>
      <pubDate>Tue, 02 Jan 2024 21:17:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-26129|2024-02-19T21:59:54.426Z -- prestashop -- prestashop</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-26129</link>
      <description>PrestaShop is an open-source e-commerce platform. Starting in version 8.1.0 and prior to version 8.1.4, PrestaShop is vulnerable to path disclosure in a JavaScript variable. A patch is available in version 8.1.4.</description>
      <guid isPermaLink="false">CVE-2024-26129|2024-02-19T21:59:54.426Z</guid>
      <pubDate>Mon, 19 Feb 2024 21:59:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34717|2024-06-04T17:41:41.822Z -- prestashop -- prestashop</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-34717</link>
      <description>PrestaShop is an open source e-commerce web application. In PrestaShop 8.1.5, any invoice can be downloaded from front-office in anonymous mode, by supplying a random secure_key parameter in the url. This issue is patched in version 8.1.6. No known workarounds are available.</description>
      <guid isPermaLink="false">CVE-2024-34717|2024-06-04T17:41:41.822Z</guid>
      <pubDate>Tue, 14 May 2024 15:47:27 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34716|2024-06-11T20:43:10.450Z -- prestashop -- prestashop</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-34716</link>
      <description>PrestaShop is an open source e-commerce web application. A cross-site scripting (XSS) vulnerability that only affects PrestaShops with customer-thread feature flag enabled is present starting from PrestaShop 8.1.0 and prior to PrestaShop 8.1.6. When the customer thread feature flag is enabled through the front-office contact form, a hacker can upload a malicious file containing an XSS that will be executed when an admin opens the attached file in back office. The script injected can access the session and the security token, which allows it to perform any authenticated action in the scope of the administrator's right. This vulnerability is patched in 8.1.6. A workaround is to disable the customer-thread feature-flag.</description>
      <guid isPermaLink="false">CVE-2024-34716|2024-06-11T20:43:10.450Z</guid>
      <pubDate>Tue, 14 May 2024 15:45:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-26129|2024-07-25T16:43:47.669Z -- prestashop -- prestashop</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-26129</link>
      <description>PrestaShop is an open-source e-commerce platform. Starting in version 8.1.0 and prior to version 8.1.4, PrestaShop is vulnerable to path disclosure in a JavaScript variable. A patch is available in version 8.1.4.</description>
      <guid isPermaLink="false">CVE-2024-26129|2024-07-25T16:43:47.669Z</guid>
      <pubDate>Mon, 19 Feb 2024 21:59:54 +0000</pubDate>
    </item>
  </channel>
</rss>

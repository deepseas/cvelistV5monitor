<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>CVE Feed for 0xJacky -- nginx-ui</title><link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/0xjacky/nginx-ui.rss</link><description>The latest CVEs for 0xJacky -- nginx-ui</description><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><lastBuildDate>Fri, 31 May 2024 16:28:18 +0000</lastBuildDate><ttl>60</ttl><item><title>CVE-2024-22198|2024-01-11T19:38:27.296Z -- 0xJacky -- nginx-ui
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-22198</link><description>Nginx-UI is a web interface to manage Nginx configurations. It is vulnerable to arbitrary command execution by abusing the configuration settings. The `Home &gt; Preference` page exposes a list of system settings such as `Run Mode`, `Jwt Secret`, `Node Secret` and `Terminal Start Command`. While the UI doesn't allow users to modify the `Terminal Start Command` setting, it is possible to do so by sending a request to the API. This issue may lead to authenticated remote code execution, privilege escalation, and information disclosure. This vulnerability has been patched in version 2.0.0.beta.9.</description><guid isPermaLink="false">CVE-2024-22198|2024-01-11T19:38:27.296Z</guid><pubDate>Thu, 11 Jan 2024 19:38:27 +0000</pubDate></item><item><title>CVE-2024-22196|2024-01-11T19:24:07.984Z -- 0xJacky -- nginx-ui
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-22196</link><description>Nginx-UI is an online statistics for Server Indicators​​ Monitor CPU usage, memory usage, load average, and disk usage in real-time. This issue may lead to information disclosure. By using `DefaultQuery`, the `"desc"` and `"id"` values are used as default values if the query parameters are not set. Thus, the `order` and `sort_by` query parameter are user-controlled and are being appended to the `order` variable without any sanitization. This issue has been patched in version 2.0.0.beta.9.

</description><guid isPermaLink="false">CVE-2024-22196|2024-01-11T19:24:07.984Z</guid><pubDate>Thu, 11 Jan 2024 19:24:07 +0000</pubDate></item><item><title>CVE-2024-22197|2024-01-11T17:56:11.865Z -- 0xJacky -- nginx-ui
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-22197</link><description>Nginx-ui is online statistics for Server Indicators​​ Monitor CPU usage, memory usage, load average, and disk usage in real-time. The `Home &gt; Preference` page exposes a small list of nginx settings such as `Nginx Access Log Path` and `Nginx Error Log Path`. However, the API also exposes `test_config_cmd`, `reload_cmd` and `restart_cmd`. While the UI doesn't allow users to modify any of these settings, it is possible to do so by sending a request to the API. This issue may lead to authenticated Remote Code Execution, Privilege Escalation, and Information Disclosure. This issue has been patched in version 2.0.0.beta.9.</description><guid isPermaLink="false">CVE-2024-22197|2024-01-11T17:56:11.865Z</guid><pubDate>Thu, 11 Jan 2024 17:56:11 +0000</pubDate></item><item><title>CVE-2024-23828|2024-01-29T16:49:51.440Z -- 0xJacky -- nginx-ui
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-23828</link><description>Nginx-UI is a web interface to manage Nginx configurations. It is vulnerable to an authenticated arbitrary command execution via CRLF attack when changing the value of test_config_cmd or start_cmd. This vulnerability exists due to an incomplete fix for CVE-2024-22197 and CVE-2024-22198. This vulnerability has been patched in version 2.0.0.beta.12.</description><guid isPermaLink="false">CVE-2024-23828|2024-01-29T16:49:51.440Z</guid><pubDate>Mon, 29 Jan 2024 16:49:51 +0000</pubDate></item><item><title>CVE-2024-23827|2024-01-29T16:07:13.953Z -- 0xJacky -- nginx-ui
</title><link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-23827</link><description>Nginx-UI is a web interface to manage Nginx configurations. The Import Certificate feature allows arbitrary write into the system. The feature does not check if the provided user input is a certification/key and allows to write into arbitrary paths in the system. It's possible to leverage the vulnerability into a remote code execution overwriting the config file app.ini. Version 2.0.0.beta.12 fixed the issue.</description><guid isPermaLink="false">CVE-2024-23827|2024-01-29T16:07:13.953Z</guid><pubDate>Mon, 29 Jan 2024 16:07:13 +0000</pubDate></item></channel></rss>
<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Linux -- Kernel</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/linux/kernel.rss</link>
    <description>The latest CVEs for Linux -- Kernel</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Mon, 16 Sep 2024 23:21:17 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-3176|2024-09-16T18:44:51.756Z -- linux -- kernel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3176</link>
      <description>There exists a use-after-free in io_uring in the Linux kernel. Signalfd_poll() and binder_poll() use a waitqueue whose lifetime is the current task. It will send a POLLFREE notification to all waiters before the queue is freed. Unfortunately, the io_uring poll doesn't handle POLLFREE. This allows a use-after-free to occur if a signalfd or binder fd is polled with io_uring poll, and the waitqueue gets freed. We recommend upgrading past commit fc78b2fc21f10c4c9c4d5d659a685710ffa63659</description>
      <guid isPermaLink="false">CVE-2022-3176|2024-09-16T18:44:51.756Z</guid>
      <pubDate>Fri, 16 Sep 2022 13:55:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-3444|2024-09-16T17:27:58.788Z -- linux -- kernel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-3444</link>
      <description>The bpf verifier in the Linux kernel did not properly handle mod32 destination register truncation when the source register was known to be 0. A local attacker with the ability to load bpf programs could use this gain out-of-bounds reads in kernel memory leading to information disclosure (kernel memory), and possibly out-of-bounds writes that could potentially lead to code execution. This issue was addressed in the upstream kernel in commit 9b00f1b78809 ("bpf: Fix truncation handling for mod32 dst reg wrt zero") and in Linux stable kernels 5.11.2, 5.10.19, and 5.4.101.</description>
      <guid isPermaLink="false">CVE-2021-3444|2024-09-16T17:27:58.788Z</guid>
      <pubDate>Tue, 23 Mar 2021 17:45:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-38096|2024-09-16T19:46:43.355Z -- linux -- kernel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-38096</link>
      <description>A NULL pointer dereference vulnerability was found in vmwgfx driver in drivers/gpu/vmxgfx/vmxgfx_execbuf.c in GPU component of Linux kernel with device file '/dev/dri/renderD128 (or Dxxx)'. This flaw allows a local attacker with a user account on the system to gain privilege, causing a denial of service(DoS).</description>
      <guid isPermaLink="false">CVE-2022-38096|2024-09-16T19:46:43.355Z</guid>
      <pubDate>Fri, 09 Sep 2022 14:39:51 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-34981|2024-08-04T00:26:55.716Z -- linux -- kernel</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-34981</link>
      <description>Linux Kernel Bluetooth CMTP Module Double Free Privilege Escalation Vulnerability. This vulnerability allows local attackers to escalate privileges on affected installations of Linux Kernel. An attacker must first obtain the ability to execute high-privileged code on the target system in order to exploit this vulnerability.

The specific flaw exists within the CMTP module. The issue results from the lack of validating the existence of an object prior to performing further free operations on the object. An attacker can leverage this vulnerability to escalate privileges and execute code in the context of the kernel. Was ZDI-CAN-11977.</description>
      <guid isPermaLink="false">CVE-2021-34981|2024-08-04T00:26:55.716Z</guid>
      <pubDate>Tue, 07 May 2024 22:54:49 +0000</pubDate>
    </item>
  </channel>
</rss>

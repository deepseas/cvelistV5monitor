<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for loopbackio -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/loopbackio/all.rss</link>
    <description>The latest CVEs for loopbackio -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 14:22:50 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-35942|2024-08-03T09:51:59.100Z -- loopbackio -- loopback-connector-postgresql
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-35942</link>
      <description>Improper input validation on the `contains` LoopBack filter may allow for arbitrary SQL injection. When the extended filter property `contains` is permitted to be interpreted by the Postgres connector, it is possible to inject arbitrary SQL which may affect the confidentiality and integrity of data stored on the connected database. A patch was released in version 5.5.1. This affects users who does any of the following: - Connect to the database via the DataSource with `allowExtendedProperties: true` setting OR - Uses the connector's CRUD methods directly OR - Uses the connector's other methods to interpret the LoopBack filter. Users who are unable to upgrade should do the following if applicable: - Remove `allowExtendedProperties: true` DataSource setting - Add `allowExtendedProperties: false` DataSource setting - When passing directly to the connector functions, manually sanitize the user input for the `contains` LoopBack filter beforehand.</description>
      <guid isPermaLink="false">CVE-2022-35942|2024-08-03T09:51:59.100Z</guid>
      <pubDate>Fri, 12 Aug 2022 22:25:09 +0000</pubDate>
    </item>
  </channel>
</rss>

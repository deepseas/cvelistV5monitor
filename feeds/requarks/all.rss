<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for requarks -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/requarks/all.rss</link>
    <description>The latest CVEs for requarks -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 03:23:03 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-1681|2024-08-03T00:10:03.788Z -- requarks -- requarks%2Fwiki
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1681</link>
      <description>Authentication Bypass Using an Alternate Path or Channel in GitHub repository requarks/wiki prior to 2.5.281. User can get root user permissions</description>
      <guid isPermaLink="false">CVE-2022-1681|2024-08-03T00:10:03.788Z</guid>
      <pubDate>Thu, 12 May 2022 07:45:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34710|2024-08-02T02:59:22.635Z -- requarks -- wiki</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34710</link>
      <description>Wiki.js is al wiki app built on Node.js. Client side template injection was discovered, that could allow an attacker to inject malicious JavaScript into the content section of pages that would execute once a victim loads the page that contains the payload. This was possible through the injection of a invalid HTML tag with a template injection payload on the next line. This vulnerability is fixed in 2.5.303.</description>
      <guid isPermaLink="false">CVE-2024-34710|2024-08-02T02:59:22.635Z</guid>
      <pubDate>Mon, 20 May 2024 21:59:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34710|2024-06-06T19:10:38.387Z -- requarks -- wiki</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-34710</link>
      <description>Wiki.js is al wiki app built on Node.js. Client side template injection was discovered, that could allow an attacker to inject malicious JavaScript into the content section of pages that would execute once a victim loads the page that contains the payload. This was possible through the injection of a invalid HTML tag with a template injection payload on the next line. This vulnerability is fixed in 2.5.303.</description>
      <guid isPermaLink="false">CVE-2024-34710|2024-06-06T19:10:38.387Z</guid>
      <pubDate>Mon, 20 May 2024 21:59:16 +0000</pubDate>
    </item>
  </channel>
</rss>

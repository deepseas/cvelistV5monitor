<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for requarks -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/requarks/all.rss</link>
    <description>The latest CVEs for requarks -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 22:22:30 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2021-21383|2024-08-03T18:09:15.970Z -- requarks -- wiki
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-21383</link>
      <description>Wiki.js an open-source wiki app built on Node.js. Wiki.js before version 2.5.191 is vulnerable to stored cross-site scripting through mustache expressions in code blocks. This vulnerability exists due to mustache expressions being parsed by Vue during content injection even though it is contained within a `&lt;pre&gt;` element. By creating a crafted wiki page, a malicious Wiki.js user may stage a stored cross-site scripting attack. This allows the attacker to execute malicious JavaScript when the page is viewed by other users. For an example see referenced GitHub Security Advisory. Commit 5ffa189383dd716f12b56b8cae2ba0d075996cf1 fixes this vulnerability by adding the v-pre directive to all `&lt;pre&gt;` tags during the render.</description>
      <guid isPermaLink="false">CVE-2021-21383|2024-08-03T18:09:15.970Z</guid>
      <pubDate>Thu, 18 Mar 2021 17:10:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-25993|2024-08-03T20:19:19.412Z -- requarks -- wiki
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-25993</link>
      <description>In Requarks wiki.js, versions 2.0.0-beta.147 to 2.5.255 are affected by Stored XSS vulnerability, where a low privileged (editor) user can upload a SVG file that contains malicious JavaScript while uploading assets in the page. That will send the JWT tokens to the attackerâ€™s server and will lead to account takeover when accessed by the victim.</description>
      <guid isPermaLink="false">CVE-2021-25993|2024-08-03T20:19:19.412Z</guid>
      <pubDate>Wed, 29 Dec 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-1681|2024-08-03T00:10:03.788Z -- requarks -- requarks%2Fwiki
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-1681</link>
      <description>Authentication Bypass Using an Alternate Path or Channel in GitHub repository requarks/wiki prior to 2.5.281. User can get root user permissions</description>
      <guid isPermaLink="false">CVE-2022-1681|2024-08-03T00:10:03.788Z</guid>
      <pubDate>Thu, 12 May 2022 07:45:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-23654|2024-08-03T03:51:44.191Z -- requarks -- wiki
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-23654</link>
      <description>Wiki.js is a wiki app built on Node.js. In affected versions an authenticated user with write access on a restricted set of paths can update a page outside the allowed paths by specifying a different target page ID while keeping the path intact. The access control incorrectly check the path access against the user-provided values instead of the actual path associated to the page ID. Commit https://github.com/Requarks/wiki/commit/411802ec2f654bb5ed1126c307575b81e2361c6b fixes this vulnerability by checking access control on the path associated with the page ID instead of the user-provided value. When the path is different than the current value, a second access control check is then performed on the user-provided path before the move operation.</description>
      <guid isPermaLink="false">CVE-2022-23654|2024-08-03T03:51:44.191Z</guid>
      <pubDate>Tue, 22 Feb 2022 20:05:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34710|2024-06-06T19:10:38.387Z -- requarks -- wiki</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-34710</link>
      <description>Wiki.js is al wiki app built on Node.js. Client side template injection was discovered, that could allow an attacker to inject malicious JavaScript into the content section of pages that would execute once a victim loads the page that contains the payload. This was possible through the injection of a invalid HTML tag with a template injection payload on the next line. This vulnerability is fixed in 2.5.303.</description>
      <guid isPermaLink="false">CVE-2024-34710|2024-06-06T19:10:38.387Z</guid>
      <pubDate>Mon, 20 May 2024 21:59:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34710|2024-08-02T02:59:22.635Z -- requarks -- wiki</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34710</link>
      <description>Wiki.js is al wiki app built on Node.js. Client side template injection was discovered, that could allow an attacker to inject malicious JavaScript into the content section of pages that would execute once a victim loads the page that contains the payload. This was possible through the injection of a invalid HTML tag with a template injection payload on the next line. This vulnerability is fixed in 2.5.303.</description>
      <guid isPermaLink="false">CVE-2024-34710|2024-08-02T02:59:22.635Z</guid>
      <pubDate>Mon, 20 May 2024 21:59:16 +0000</pubDate>
    </item>
  </channel>
</rss>

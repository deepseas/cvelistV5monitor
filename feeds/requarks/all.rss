<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for requarks -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/requarks/all.rss</link>
    <description>The latest CVEs for requarks -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 18 Sep 2024 19:21:24 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-45298|2024-09-18T18:19:03.285Z -- requarks -- wiki
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-45298</link>
      <description>Wiki.js is an open source wiki app built on Node.js. A disabled user can still gain access to a wiki by abusing the password reset function. While setting up SMTP e-mail's on my server, I tested said e-mails by performing a password reset with my test user. To my shock, not only did it let me reset my password, but after resetting my password I can get into the wiki I was locked out of. The ramifications of this bug is a user can **bypass an account disabling by requesting their password be reset**.  All users of wiki.js version `2.5.303` who use any account restrictions and have disabled user are affected. This issue has been addressed in version 2.5.304 and all users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-45298|2024-09-18T18:19:03.285Z</guid>
      <pubDate>Wed, 18 Sep 2024 17:05:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34710|2024-08-02T02:59:22.635Z -- requarks -- wiki</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34710</link>
      <description>Wiki.js is al wiki app built on Node.js. Client side template injection was discovered, that could allow an attacker to inject malicious JavaScript into the content section of pages that would execute once a victim loads the page that contains the payload. This was possible through the injection of a invalid HTML tag with a template injection payload on the next line. This vulnerability is fixed in 2.5.303.</description>
      <guid isPermaLink="false">CVE-2024-34710|2024-08-02T02:59:22.635Z</guid>
      <pubDate>Mon, 20 May 2024 21:59:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34710|2024-06-06T19:10:38.387Z -- requarks -- wiki</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-34710</link>
      <description>Wiki.js is al wiki app built on Node.js. Client side template injection was discovered, that could allow an attacker to inject malicious JavaScript into the content section of pages that would execute once a victim loads the page that contains the payload. This was possible through the injection of a invalid HTML tag with a template injection payload on the next line. This vulnerability is fixed in 2.5.303.</description>
      <guid isPermaLink="false">CVE-2024-34710|2024-06-06T19:10:38.387Z</guid>
      <pubDate>Mon, 20 May 2024 21:59:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-45298|2024-09-18T17:05:58.894Z -- requarks -- wiki</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-45298</link>
      <description>Wiki.js is an open source wiki app built on Node.js. A disabled user can still gain access to a wiki by abusing the password reset function. While setting up SMTP e-mail's on my server, I tested said e-mails by performing a password reset with my test user. To my shock, not only did it let me reset my password, but after resetting my password I can get into the wiki I was locked out of. The ramifications of this bug is a user can **bypass an account disabling by requesting their password be reset**.  All users of wiki.js version `2.5.303` who use any account restrictions and have disabled user are affected. This issue has been addressed in version 2.5.304 and all users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-45298|2024-09-18T17:05:58.894Z</guid>
      <pubDate>Wed, 18 Sep 2024 17:05:58 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for wireapp -- wire-ios</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/wireapp/wire-ios.rss</link>
    <description>The latest CVEs for wireapp -- wire-ios</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 15:23:06 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-31009|2024-08-03T07:03:40.199Z -- wireapp -- wire-ios
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-31009</link>
      <description>wire-ios is an iOS client for the Wire secure messaging application. Invalid accent colors of Wire communication partners may render the iOS Wire Client partially unusable by causing it to crash multiple times on launch. These invalid accent colors can be used by and sent between Wire users. The root cause was an unnecessary assert statement when converting an integer value into the corresponding enum value, causing an exception instead of a fallback to a default value. This issue is fixed in [wire-ios](https://github.com/wireapp/wire-ios/commit/caa0e27dbe51f9edfda8c7a9f017d93b8cfddefb) and in Wire for iOS 3.100. There is no workaround available, but users may use other Wire clients (such as the [web app](https://app.wire.com)) to continue using Wire, or upgrade their client.</description>
      <guid isPermaLink="false">CVE-2022-31009|2024-08-03T07:03:40.199Z</guid>
      <pubDate>Thu, 23 Jun 2022 06:40:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-23625|2024-08-03T03:51:45.474Z -- wireapp -- wire-ios
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-23625</link>
      <description>Wire-ios is a messaging application using the wire protocol on apple's ios platform. In versions prior to 3.95 malformed resource identifiers may render the iOS Wire Client completely unusable by causing it to repeatedly crash on launch. These malformed resource identifiers can be generated and sent between Wire users. The root cause lies in [wireapp/wire-ios-transport](https://github.com/wireapp/wire-ios-transport), where code responsible for removing sensible tokens before logging may fail and lead to a crash (Swift exception) of the application. This causes undesirable behavior, however the (greater) Wire system is still functional. Users are advised to upgrade as soon as possible. There are no known workarounds for this issue.</description>
      <guid isPermaLink="false">CVE-2022-23625|2024-08-03T03:51:45.474Z</guid>
      <pubDate>Fri, 11 Mar 2022 18:00:15 +0000</pubDate>
    </item>
  </channel>
</rss>

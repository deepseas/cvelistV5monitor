<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for wireapp -- wire-webapp</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/wireapp/wire-webapp.rss</link>
    <description>The latest CVEs for wireapp -- wire-webapp</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 11:20:18 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-24799|2024-08-03T04:20:50.462Z -- wireapp -- wire-webapp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-24799</link>
      <description>wire-webapp is the web application interface for the wire messaging service. Insufficient escaping in markdown “code highlighting” in the wire-webapp resulted in the possibility of injecting and executing arbitrary HTML code and thus also JavaScript. If a user receives and views such a malicious message, arbitrary code is injected and executed in the context of the victim. This allows the attacker to fully control the user account. Wire-desktop clients that are connected to a vulnerable wire-webapp version are also vulnerable to this attack. The issue has been fixed in wire-webapp 2022-03-30-production.0 and is already deployed on all Wire managed services. On-premise instances of wire-webapp need to be updated to docker tag 2022-03-30-production.0-v0.29.2-0-d144552 or wire-server 2022-03-30 (chart/4.8.0), so that their applications are no longer affected. There are no known workarounds for this issue. ### Patches * The issue has been fixed in wire-webapp **2022-03-30-production.0** and is already deployed on all Wire managed services. * On-premise instances of wire-webapp need to be updated to docker tag **2022-03-30-production.0-v0.29.2-0-d144552** or wire-server **2022-03-30 (chart/4.8.0)**, so that their applications are no longer affected. ### Workarounds * No workarounds known ### For more information If you have any questions or comments about this advisory feel free to email us at [vulnerability-report@wire.com](mailto:vulnerability-report@wire.com) ### Credits We thank [Posix](https://twitter.com/po6ix) for reporting this vulnerability</description>
      <guid isPermaLink="false">CVE-2022-24799|2024-08-03T04:20:50.462Z</guid>
      <pubDate>Wed, 20 Apr 2022 17:55:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-29168|2024-08-03T06:17:54.056Z -- wireapp -- wire-webapp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-29168</link>
      <description>Wire is a secure messaging application. Wire is vulnerable to arbitrary HTML and Javascript execution via insufficient escaping when rendering `@mentions` in the wire-webapp. If a user receives and views a malicious message, arbitrary code is injected and executed in the context of the victim allowing the attacker to fully control the user account. Wire-desktop clients that are connected to a vulnerable wire-webapp version are also vulnerable to this attack. The issue has been fixed in wire-webapp 2022-05-04-production.0 and is already deployed on all Wire managed services. On-premise instances of wire-webapp need to be updated to docker tag 2022-05-04-production.0-v0.29.7-0-a6f2ded or wire-server 2022-05-04 (chart/4.11.0) or later. No known workarounds exist.</description>
      <guid isPermaLink="false">CVE-2022-29168|2024-08-03T06:17:54.056Z</guid>
      <pubDate>Sat, 25 Jun 2022 07:05:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-23605|2024-08-03T03:43:46.973Z -- wireapp -- wire-webapp
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-23605</link>
      <description>Wire webapp is a web client for the wire messaging protocol. In versions prior to 2022-01-27-production.0 expired ephemeral messages were not reliably removed from local chat history of Wire Webapp. In versions before 2022-01-27-production.0 ephemeral messages and assets might still be accessible through the local search functionality. Any attempt to view one of these message in the chat view will then trigger the deletion. This issue only affects locally stored messages. On premise instances of wire-webapp need to be updated to 2022-01-27-production.0, so that their users are no longer affected. There are no known workarounds for this issue.</description>
      <guid isPermaLink="false">CVE-2022-23605|2024-08-03T03:43:46.973Z</guid>
      <pubDate>Fri, 04 Feb 2022 22:32:05 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for pterodactyl -- panel</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/pterodactyl/panel.rss</link>
    <description>The latest CVEs for pterodactyl -- panel</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 09:23:22 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2021-41129|2024-08-04T02:59:31.602Z -- pterodactyl -- panel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-41129</link>
      <description>Pterodactyl is an open-source game server management panel built with PHP 7, React, and Go. A malicious user can modify the contents of a `confirmation_token` input during the two-factor authentication process to reference a cache value not associated with the login attempt. In rare cases this can allow a malicious actor to authenticate as a random user in the Panel. The malicious user must target an account with two-factor authentication enabled, and then must provide a correct two-factor authentication token before being authenticated as that user. Due to a validation flaw in the logic handling user authentication during the two-factor authentication process a malicious user can trick the system into loading credentials for an arbitrary user by modifying the token sent to the server. This authentication flaw is present in the `LoginCheckpointController@__invoke` method which handles two-factor authentication for a user. This controller looks for a request input parameter called `confirmation_token` which is expected to be a 64 character random alpha-numeric string that references a value within the Panel's cache containing a `user_id` value. This value is then used to fetch the user that attempted to login, and lookup their two-factor authentication token. Due to the design of this system, any element in the cache that contains only digits could be referenced by a malicious user, and whatever value is stored at that position would be used as the `user_id`. There are a few different areas of the Panel that store values into the cache that are integers, and a user who determines what those cache keys are could pass one of those keys which would cause this code pathway to reference an arbitrary user. At its heart this is a high-risk login bypass vulnerability. However, there are a few additional conditions that must be met in order for this to be successfully executed, notably: 1.) The account referenced by the malicious cache key must have two-factor authentication enabled. An account without two-factor authentication would cause an exception to be triggered by the authentication logic, thusly exiting this authentication flow. 2.) Even if the malicious user is able to reference a valid cache key that references a valid user account with two-factor authentication, they must provide a valid two-factor authentication token. However, due to the design of this endpoint once a valid user account is found with two-factor authentication enabled there is no rate-limiting present, thusly allowing an attacker to brute force combinations until successful. This leads to a third condition that must be met: 3.) For the duration of this attack sequence the cache key being referenced must continue to exist with a valid `user_id` value. Depending on the specific key being used for this attack, this value may disappear quickly, or be changed by other random user interactions on the Panel, outside the control of the attacker. In order to mitigate this vulnerability the underlying authentication logic was changed to use an encrypted session store that the user is therefore unable to control the value of. This completely removed the use of a user-controlled value being used. In addition, the code was audited to ensure this type of vulnerability is not present elsewhere.</description>
      <guid isPermaLink="false">CVE-2021-41129|2024-08-04T02:59:31.602Z</guid>
      <pubDate>Wed, 06 Oct 2021 20:05:11 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-41273|2024-08-04T03:08:31.614Z -- pterodactyl -- panel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-41273</link>
      <description>Pterodactyl is an open-source game server management panel built with PHP 7, React, and Go. Due to improperly configured CSRF protections on two routes, a malicious user could execute a CSRF-based attack against the following endpoints: Sending a test email and Generating a node auto-deployment token. At no point would any data be exposed to the malicious user, this would simply trigger email spam to an administrative user, or generate a single auto-deployment token unexpectedly. This token is not revealed to the malicious user, it is simply created unexpectedly in the system. This has been addressed in release `1.6.6`. Users may optionally manually apply the fixes released in v1.6.6 to patch their own systems.</description>
      <guid isPermaLink="false">CVE-2021-41273|2024-08-04T03:08:31.614Z</guid>
      <pubDate>Wed, 17 Nov 2021 19:30:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-41176|2024-08-04T02:59:31.636Z -- pterodactyl -- panel
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-41176</link>
      <description>Pterodactyl is an open-source game server management panel built with PHP 7, React, and Go. In affected versions of Pterodactyl a malicious user can trigger a user logout if a signed in user visits a malicious website that makes a request to the Panel's sign-out endpoint. This requires a targeted attack against a specific Panel instance, and serves only to sign a user out. **No user details are leaked, nor is any user data affected, this is simply an annoyance at worst.** This is fixed in version 1.6.3.</description>
      <guid isPermaLink="false">CVE-2021-41176|2024-08-04T02:59:31.636Z</guid>
      <pubDate>Mon, 25 Oct 2021 16:50:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34067|2024-06-06T17:59:27.038Z -- pterodactyl -- panel</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-34067</link>
      <description>Pterodactyl is a free, open-source game server management panel built with PHP, React, and Go. Importing a malicious egg or gaining access to wings instance could lead to cross site scripting (XSS) on the panel, which could be used to gain an administrator account on the panel. Specifically, the following things are impacted: Egg Docker images and Egg variables: Name, Environment variable, Default value, Description, Validation rules. Additionally, certain fields would reflect malicious input, but it would require the user knowingly entering such input to have an impact. To iterate, this would require an administrator to perform actions and can't be triggered by a normal panel user. This issue has has been addressed in version 1.11.6 and users are advised to upgrade. No workaround is available other than updating to the latest version of the panel.</description>
      <guid isPermaLink="false">CVE-2024-34067|2024-06-06T17:59:27.038Z</guid>
      <pubDate>Fri, 03 May 2024 17:38:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34067|2024-08-02T02:42:59.886Z -- pterodactyl -- panel</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34067</link>
      <description>Pterodactyl is a free, open-source game server management panel built with PHP, React, and Go. Importing a malicious egg or gaining access to wings instance could lead to cross site scripting (XSS) on the panel, which could be used to gain an administrator account on the panel. Specifically, the following things are impacted: Egg Docker images and Egg variables: Name, Environment variable, Default value, Description, Validation rules. Additionally, certain fields would reflect malicious input, but it would require the user knowingly entering such input to have an impact. To iterate, this would require an administrator to perform actions and can't be triggered by a normal panel user. This issue has has been addressed in version 1.11.6 and users are advised to upgrade. No workaround is available other than updating to the latest version of the panel.</description>
      <guid isPermaLink="false">CVE-2024-34067|2024-08-02T02:42:59.886Z</guid>
      <pubDate>Fri, 03 May 2024 17:38:18 +0000</pubDate>
    </item>
  </channel>
</rss>

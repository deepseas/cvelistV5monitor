<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for vanna-ai -- vanna-ai/vanna</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/vanna-ai/vanna-ai%2Fvanna.rss</link>
    <description>The latest CVEs for vanna-ai -- vanna-ai/vanna</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 28 Jun 2024 20:21:44 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-5827|2024-06-28T19:27:33.049Z -- vanna-ai -- vanna-ai%2Fvanna
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5827</link>
      <description>Vanna v0.3.4 is vulnerable to SQL injection in its DuckDB integration exposed to its Flask Web APIs. Attackers can inject malicious SQL training data and generate corresponding queries to write arbitrary files on the victim's file system, such as backdoor.php with contents `&lt;?php system($_GET[0]); ?&gt;`. This can lead to command execution or the creation of backdoors.</description>
      <guid isPermaLink="false">CVE-2024-5827|2024-06-28T19:27:33.049Z</guid>
      <pubDate>Fri, 28 Jun 2024 19:27:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5826|2024-06-27T18:40:37.441Z -- vanna-ai -- vanna-ai%2Fvanna</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5826</link>
      <description>In the latest version of vanna-ai/vanna, the `vanna.ask` function is vulnerable to remote code execution due to prompt injection. The root cause is the lack of a sandbox when executing LLM-generated code, allowing an attacker to manipulate the code executed by the `exec` function in `src/vanna/base/base.py`. This vulnerability can be exploited by an attacker to achieve remote code execution on the app backend server, potentially gaining full control of the server.</description>
      <guid isPermaLink="false">CVE-2024-5826|2024-06-27T18:40:37.441Z</guid>
      <pubDate>Thu, 27 Jun 2024 18:40:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5826|2024-06-28T15:26:27.620Z -- vanna-ai -- vanna-ai%2Fvanna</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5826</link>
      <description>In the latest version of vanna-ai/vanna, the `vanna.ask` function is vulnerable to remote code execution due to prompt injection. The root cause is the lack of a sandbox when executing LLM-generated code, allowing an attacker to manipulate the code executed by the `exec` function in `src/vanna/base/base.py`. This vulnerability can be exploited by an attacker to achieve remote code execution on the app backend server, potentially gaining full control of the server.</description>
      <guid isPermaLink="false">CVE-2024-5826|2024-06-28T15:26:27.620Z</guid>
      <pubDate>Thu, 27 Jun 2024 18:40:37 +0000</pubDate>
    </item>
  </channel>
</rss>

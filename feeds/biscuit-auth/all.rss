<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for biscuit-auth -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/biscuit-auth/all.rss</link>
    <description>The latest CVEs for biscuit-auth -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Thu, 01 Aug 2024 23:22:26 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-41948|2024-08-01T22:03:15.788Z -- biscuit-auth -- biscuit-java
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-41948</link>
      <description>biscuit-java is the java implementation of Biscuit, an authentication and authorization token for microservices architectures. Third-party blocks can be generated without transferring the whole token to the third-party authority. Instead, a ThirdPartyBlock request can be sent, providing only the necessary info to generate a third-party block and to sign it, which includes the public key of the previous block (used in the signature) and the public keys part of the token symbol table (for public key interning in datalog expressions). A third-part block request forged by a malicious user can trick the third-party authority into generating datalog trusting the wrong keypair. This vulnerability is fixed in 4.0.0.</description>
      <guid isPermaLink="false">CVE-2024-41948|2024-08-01T22:03:15.788Z</guid>
      <pubDate>Thu, 01 Aug 2024 22:03:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-41949|2024-08-01T22:03:11.198Z -- biscuit-auth -- biscuit-rust
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-41949</link>
      <description>biscuit-rust is the Rust implementation of Biscuit, an authentication and authorization token for microservices architectures. Third-party blocks can be generated without transferring the whole token to the third-party authority. Instead, a ThirdPartyBlock request can be sent, providing only the necessary info to generate a third-party block and to sign it, which includes the public key of the previous block (used in the signature) and the public keys part of the token symbol table (for public key interning in datalog expressions). A third-part block request forged by a malicious user can trick the third-party authority into generating datalog trusting the wrong keypair.</description>
      <guid isPermaLink="false">CVE-2024-41949|2024-08-01T22:03:11.198Z</guid>
      <pubDate>Thu, 01 Aug 2024 22:03:11 +0000</pubDate>
    </item>
  </channel>
</rss>

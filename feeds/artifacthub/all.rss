<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for artifacthub -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/artifacthub/all.rss</link>
    <description>The latest CVEs for artifacthub -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 23:21:57 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-45823|2024-08-02T20:29:32.305Z -- artifacthub -- hub
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-45823</link>
      <description>Artifact Hub is a web-based application that enables finding, installing, and publishing packages and configurations for CNCF projects. During a security audit of Artifact Hub's code base a security researcher identified a bug in which by using symbolic links in certain kinds of repositories loaded into Artifact Hub, it was possible to read internal files. Artifact Hub indexes content from a variety of sources, including git repositories. When processing git based repositories, Artifact Hub clones the repository and, depending on the artifact kind, reads some files from it. During this process, in some cases, no validation was done to check if the file was a symbolic link. This made possible to read arbitrary files in the system, potentially leaking sensitive information. This issue has been resolved in version `1.16.0`. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-45823|2024-08-02T20:29:32.305Z</guid>
      <pubDate>Thu, 19 Oct 2023 20:53:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-45821|2024-08-02T20:29:31.620Z -- artifacthub -- hub
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-45821</link>
      <description>Artifact Hub is a web-based application that enables finding, installing, and publishing packages and configurations for CNCF projects. During a security audit of Artifact Hub's code base a security researcher identified a bug in which the `registryIsDockerHub` function was only checking that the registry domain had the `docker.io` suffix. Artifact Hub allows providing some Docker credentials that are used to increase the rate limit applied when interacting with the Docker Hub registry API to read publicly available content. Due to the incorrect check described above, it'd be possible to hijack those credentials by purchasing a domain which ends with `docker.io` and deploying a fake OCI registry on it. &lt;https://artifacthub.io/&gt; uses some credentials that only have permissions to read public content available in the Docker Hub. However, even though credentials for private repositories (disabled on `artifacthub.io`) are handled in a different way, other Artifact Hub deployments could have been using them for a different purpose. This issue has been resolved in version `1.16.0`. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-45821|2024-08-02T20:29:31.620Z</guid>
      <pubDate>Thu, 19 Oct 2023 20:53:34 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-45822|2024-08-02T20:29:32.495Z -- artifacthub -- hub
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-45822</link>
      <description>Artifact Hub is a web-based application that enables finding, installing, and publishing packages and configurations for CNCF projects. During a security audit of Artifact Hub's code base a security researcher identified a bug in which a default unsafe rego built-in was allowed to be used when defining authorization policies. Artifact Hub includes a fine-grained authorization mechanism that allows organizations to define what actions can be performed by their members. It is based on customizable authorization policies that are enforced by the `Open Policy Agent`. Policies are written using `rego` and their data files are expected to be json documents. By default, `rego` allows policies to make HTTP requests, which can be abused to send requests to internal resources and forward the responses to an external entity. In the context of Artifact Hub, this capability should have been disabled. This issue has been resolved in version `1.16.0`. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-45822|2024-08-02T20:29:32.495Z</guid>
      <pubDate>Thu, 19 Oct 2023 20:53:36 +0000</pubDate>
    </item>
  </channel>
</rss>

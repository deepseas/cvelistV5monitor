<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for yahoo -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/yahoo/all.rss</link>
    <description>The latest CVEs for yahoo -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 06:24:38 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-24827|2024-08-03T04:20:50.529Z -- yahoo -- elide
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-24827</link>
      <description>Elide is a Java library that lets you stand up a GraphQL/JSON-API web service with minimal effort. When leveraging the following together: Elide Aggregation Data Store for Analytic Queries, Parameterized Columns (A column that requires a client provided parameter), and a parameterized column of type TEXT. There is the potential for a hacker to provide a carefully crafted query that would bypass server side authorization filters through SQL injection. A recent patch to Elide 6.1.2 allowed the '-' character to be included in parameterized TEXT columns. This character can be interpreted as SQL comments ('--') and allow the attacker to remove the WHERE clause from the generated query and bypass authorization filters. A fix is provided in Elide 6.1.4. The vulnerability only exists for parameterized columns of type TEXT and only for analytic queries (CRUD is not impacted). Workarounds include leveraging a different type of parameterized column (TIME, MONEY, etc) or not leveraging parameterized columns.</description>
      <guid isPermaLink="false">CVE-2022-24827|2024-08-03T04:20:50.529Z</guid>
      <pubDate>Mon, 11 Apr 2022 20:13:40 +0000</pubDate>
    </item>
  </channel>
</rss>

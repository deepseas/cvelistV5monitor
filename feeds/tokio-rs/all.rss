<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for tokio-rs -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/tokio-rs/all.rss</link>
    <description>The latest CVEs for tokio-rs -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 08:24:11 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-3212|2024-08-03T01:00:10.862Z -- tokio-rs -- axum-core
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-3212</link>
      <description>&lt;bytes::Bytes as axum_core::extract::FromRequest&gt;::from_request would not, by default, set a limit for the size of the request body. That meant if a malicious peer would send a very large (or infinite) body your server might run out of memory and crash. This also applies to these extractors which used Bytes::from_request internally: axum::extract::Form axum::extract::Json String</description>
      <guid isPermaLink="false">CVE-2022-3212|2024-08-03T01:00:10.862Z</guid>
      <pubDate>Wed, 14 Sep 2022 16:05:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27308|2024-03-06T19:27:28.521Z -- tokio-rs -- mio</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27308</link>
      <description>Mio is a Metal I/O library for Rust. When using named pipes on Windows, mio will under some circumstances return invalid tokens that correspond to named pipes that have already been deregistered from the mio registry. The impact of this vulnerability depends on how mio is used. For some applications, invalid tokens may be ignored or cause a warning or a crash. On the other hand, for applications that store pointers in the tokens, this vulnerability may result in a use-after-free. For users of Tokio, this vulnerability is serious and can result in a use-after-free in Tokio. The vulnerability is Windows-specific, and can only happen if you are using named pipes. Other IO resources are not affected. This vulnerability has been fixed in mio v0.8.11. All versions of mio between v0.7.2 and v0.8.10 are vulnerable. Tokio is vulnerable when you are using a vulnerable version of mio AND you are using at least Tokio v1.30.0. Versions of Tokio prior to v1.30.0 will ignore invalid tokens, so they are not vulnerable. Vulnerable libraries that use mio can work around this issue by detecting and ignoring invalid tokens.</description>
      <guid isPermaLink="false">CVE-2024-27308|2024-03-06T19:27:28.521Z</guid>
      <pubDate>Wed, 06 Mar 2024 19:27:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27308|2024-08-02T00:28:00.264Z -- tokio-rs -- mio</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27308</link>
      <description>Mio is a Metal I/O library for Rust. When using named pipes on Windows, mio will under some circumstances return invalid tokens that correspond to named pipes that have already been deregistered from the mio registry. The impact of this vulnerability depends on how mio is used. For some applications, invalid tokens may be ignored or cause a warning or a crash. On the other hand, for applications that store pointers in the tokens, this vulnerability may result in a use-after-free. For users of Tokio, this vulnerability is serious and can result in a use-after-free in Tokio. The vulnerability is Windows-specific, and can only happen if you are using named pipes. Other IO resources are not affected. This vulnerability has been fixed in mio v0.8.11. All versions of mio between v0.7.2 and v0.8.10 are vulnerable. Tokio is vulnerable when you are using a vulnerable version of mio AND you are using at least Tokio v1.30.0. Versions of Tokio prior to v1.30.0 will ignore invalid tokens, so they are not vulnerable. Vulnerable libraries that use mio can work around this issue by detecting and ignoring invalid tokens.</description>
      <guid isPermaLink="false">CVE-2024-27308|2024-08-02T00:28:00.264Z</guid>
      <pubDate>Wed, 06 Mar 2024 19:27:28 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for jonashjalmarsson -- HTML filter and csv-file search</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/jonashjalmarsson/html%20filter%20and%20csv-file%20search.rss</link>
    <description>The latest CVEs for jonashjalmarsson -- HTML filter and csv-file search</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 17:22:49 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-5096|2024-08-02T07:44:53.886Z -- jonashjalmarsson -- html%20filter%20and%20csv-file%20search
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-5096</link>
      <description>The HTML filter and csv-file search plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's 'csvsearch' shortcode in versions up to, and including, 2.7 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level permissions and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2023-5096|2024-08-02T07:44:53.886Z</guid>
      <pubDate>Wed, 22 Nov 2023 15:33:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5099|2024-08-02T07:44:53.866Z -- jonashjalmarsson -- html%20filter%20and%20csv-file%20search
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-5099</link>
      <description>The HTML filter and csv-file search plugin for WordPress is vulnerable to Local File Inclusion in versions up to, and including, 2.7 via the 'src' attribute of the 'csvsearch' shortcode. This allows authenticated attackers, with contributor-level permissions and above, to include and execute arbitrary files on the server, allowing the execution of any PHP code in those files. This can be used to bypass access controls, obtain sensitive data, or achieve code execution in cases where images and other “safe” file types can be uploaded and included.</description>
      <guid isPermaLink="false">CVE-2023-5099|2024-08-02T07:44:53.866Z</guid>
      <pubDate>Tue, 31 Oct 2023 11:29:13 +0000</pubDate>
    </item>
  </channel>
</rss>

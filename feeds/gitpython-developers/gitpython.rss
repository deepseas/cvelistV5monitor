<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for gitpython-developers -- GitPython</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/gitpython-developers/gitpython.rss</link>
    <description>The latest CVEs for gitpython-developers -- GitPython</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 02 Oct 2024 21:23:53 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-40590|2024-10-02T14:04:39.463Z -- gitpython-developers -- gitpython
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-40590</link>
      <description> GitPython is a python library used to interact with Git repositories. When resolving a program, Python/Windows look for the current working directory, and after that the PATH environment. GitPython defaults to use the `git` command, if a user runs GitPython from a repo has a `git.exe` or `git` executable, that program will be run instead of the one in the user's `PATH`. This is more of a problem on how Python interacts with Windows systems, Linux and any other OS aren't affected by this. But probably people using GitPython usually run it from the CWD of a repo. An attacker can trick a user to download a repository with a malicious `git` executable, if the user runs/imports GitPython from that directory, it allows the attacker to run any arbitrary commands. There is no fix currently available for windows users, however there are a few mitigations. 1: Default to an absolute path for the git program on Windows, like `C:\\Program Files\\Git\\cmd\\git.EXE` (default git path installation). 2: Require users to set the `GIT_PYTHON_GIT_EXECUTABLE` environment variable on Windows systems. 3: Make this problem prominent in the documentation and advise users to never run GitPython from an untrusted repo, or set the `GIT_PYTHON_GIT_EXECUTABLE` env var to an absolute path. 4: Resolve the executable manually by only looking into the `PATH` environment variable.</description>
      <guid isPermaLink="false">CVE-2023-40590|2024-10-02T14:04:39.463Z</guid>
      <pubDate>Mon, 28 Aug 2023 17:24:09 +0000</pubDate>
    </item>
  </channel>
</rss>

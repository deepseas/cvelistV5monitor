<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for axton -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/axton/all.rss</link>
    <description>The latest CVEs for axton -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 06 Oct 2024 13:23:43 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-47650|2024-10-06T12:53:29.671Z -- axton -- wp-webauthn
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-47650</link>
      <description>Improper Neutralization of Input During Web Page Generation (XSS or 'Cross-site Scripting') vulnerability in Axton WP-WebAuthn allows Stored XSS.This issue affects WP-WebAuthn: from n/a through 1.3.1.</description>
      <guid isPermaLink="false">CVE-2024-47650|2024-10-06T12:53:29.671Z</guid>
      <pubDate>Sun, 06 Oct 2024 12:53:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-9023|2024-09-30T15:04:52.407Z -- axton -- wp-webauthn</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-9023</link>
      <description>The WP-WebAuthn plugin for WordPress is vulnerable to Stored Cross-Site Scripting via the plugin's wwa_login_form shortcode in all versions up to, and including, 1.3.1 due to insufficient input sanitization and output escaping on user supplied attributes. This makes it possible for authenticated attackers, with contributor-level access and above, to inject arbitrary web scripts in pages that will execute whenever a user accesses an injected page.</description>
      <guid isPermaLink="false">CVE-2024-9023|2024-09-30T15:04:52.407Z</guid>
      <pubDate>Sat, 28 Sep 2024 02:04:26 +0000</pubDate>
    </item>
  </channel>
</rss>

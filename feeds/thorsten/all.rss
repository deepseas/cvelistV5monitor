<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for thorsten -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/thorsten/all.rss</link>
    <description>The latest CVEs for thorsten -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Tue, 17 Sep 2024 22:23:12 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-5864|2024-09-17T13:55:06.239Z -- thorsten -- thorsten%2Fphpmyfaq
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-5864</link>
      <description>Cross-site Scripting (XSS) - Stored in GitHub repository thorsten/phpmyfaq prior to 3.2.1.</description>
      <guid isPermaLink="false">CVE-2023-5864|2024-09-17T13:55:06.239Z</guid>
      <pubDate>Tue, 31 Oct 2023 00:00:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-5865|2024-09-17T13:35:48.990Z -- thorsten -- thorsten%2Fphpmyfaq
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-5865</link>
      <description>Insufficient Session Expiration in GitHub repository thorsten/phpmyfaq prior to 3.2.2.</description>
      <guid isPermaLink="false">CVE-2023-5865|2024-09-17T13:35:48.990Z</guid>
      <pubDate>Tue, 31 Oct 2023 00:00:40 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28105|2024-08-13T14:20:12.592Z -- thorsten -- phpmyfaq</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-28105</link>
      <description>phpMyFAQ is an open source FAQ web application for PHP 8.1+ and MySQL, PostgreSQL and other databases. The category image upload function in phpmyfaq is vulnerable to manipulation of the `Content-type` and `lang` parameters, allowing attackers to upload malicious files with a .php extension, potentially leading to remote code execution (RCE) on the system. This vulnerability is fixed in 3.2.6.</description>
      <guid isPermaLink="false">CVE-2024-28105|2024-08-13T14:20:12.592Z</guid>
      <pubDate>Mon, 25 Mar 2024 18:35:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27300|2024-08-01T15:40:57.698Z -- thorsten -- phpmyfaq</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27300</link>
      <description>phpMyFAQ is an open source FAQ web application for PHP 8.1+ and MySQL, PostgreSQL and other databases. The `email` field in phpMyFAQ's user control panel page is vulnerable to stored XSS attacks due to the inadequacy of PHP's `FILTER_VALIDATE_EMAIL` function, which only validates the email format, not its content. This vulnerability enables an attacker to execute arbitrary client-side JavaScript within the context of another user's phpMyFAQ session. This vulnerability is fixed in 3.2.6.</description>
      <guid isPermaLink="false">CVE-2024-27300|2024-08-01T15:40:57.698Z</guid>
      <pubDate>Mon, 25 Mar 2024 18:30:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27300|2024-03-25T18:32:00.543Z -- thorsten -- phpmyfaq</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27300</link>
      <description>phpMyFAQ is an open source FAQ web application for PHP 8.1+ and MySQL, PostgreSQL and other databases. The `email` field in phpMyFAQ's user control panel page is vulnerable to stored XSS attacks due to the inadequacy of PHP's `FILTER_VALIDATE_EMAIL` function, which only validates the email format, not its content. This vulnerability enables an attacker to execute arbitrary client-side JavaScript within the context of another user's phpMyFAQ session. This vulnerability is fixed in 3.2.6.</description>
      <guid isPermaLink="false">CVE-2024-27300|2024-03-25T18:32:00.543Z</guid>
      <pubDate>Mon, 25 Mar 2024 18:30:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27299|2024-06-04T17:47:17.982Z -- thorsten -- phpmyfaq</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27299</link>
      <description>phpMyFAQ is an open source FAQ web application for PHP 8.1+ and MySQL, PostgreSQL and other databases. A SQL injection vulnerability has been discovered in the the "Add News" functionality due to improper escaping of the email address. This allows any authenticated user with the rights to add/edit FAQ news to exploit this vulnerability to exfiltrate data, take over accounts and in some cases, even achieve RCE. The vulnerable field lies in the  `authorEmail` field which uses PHP's `FILTER_VALIDATE_EMAIL` filter. This filter is insufficient in protecting against SQL injection attacks and should still be properly escaped. However, in this version of phpMyFAQ (3.2.5), this field is not escaped properly can be used together with other fields to fully exploit the SQL injection vulnerability. This vulnerability is fixed in 3.2.6.</description>
      <guid isPermaLink="false">CVE-2024-27299|2024-06-04T17:47:17.982Z</guid>
      <pubDate>Mon, 25 Mar 2024 18:26:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29196|2024-03-26T03:01:36.890Z -- thorsten -- phpmyfaq</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-29196</link>
      <description>phpMyFAQ is an open source FAQ web application for PHP 8.1+ and MySQL, PostgreSQL and other databases. There is a Path Traversal vulnerability in Attachments that allows attackers with admin rights to upload malicious files to other locations of the web root. This vulnerability is fixed in 3.2.6.</description>
      <guid isPermaLink="false">CVE-2024-29196|2024-03-26T03:01:36.890Z</guid>
      <pubDate>Tue, 26 Mar 2024 03:01:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29179|2024-03-25T20:27:55.083Z -- thorsten -- phpmyfaq</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-29179</link>
      <description>phpMyFAQ is an open source FAQ web application for PHP 8.1+ and MySQL, PostgreSQL and other databases. An attacker with admin privileges can upload an attachment containing JS code without extension and the application will render it as HTML which allows for XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-29179|2024-03-25T20:27:55.083Z</guid>
      <pubDate>Mon, 25 Mar 2024 20:27:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28105|2024-03-25T18:35:05.202Z -- thorsten -- phpmyfaq</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28105</link>
      <description>phpMyFAQ is an open source FAQ web application for PHP 8.1+ and MySQL, PostgreSQL and other databases. The category image upload function in phpmyfaq is vulnerable to manipulation of the `Content-type` and `lang` parameters, allowing attackers to upload malicious files with a .php extension, potentially leading to remote code execution (RCE) on the system. This vulnerability is fixed in 3.2.6.</description>
      <guid isPermaLink="false">CVE-2024-28105|2024-03-25T18:35:05.202Z</guid>
      <pubDate>Mon, 25 Mar 2024 18:35:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28108|2024-03-25T18:52:19.325Z -- thorsten -- phpmyfaq</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28108</link>
      <description>phpMyFAQ is an open source FAQ web application for PHP 8.1+ and MySQL, PostgreSQL and other databases. Due to insufficient validation on the `contentLink` parameter, it is possible for unauthenticated users to inject HTML code to the page which might affect other users. _Also, requires that adding new FAQs is allowed for guests and that the admin doesn't check the content of a newly added FAQ._ This vulnerability is fixed in 3.2.6.</description>
      <guid isPermaLink="false">CVE-2024-28108|2024-03-25T18:52:19.325Z</guid>
      <pubDate>Mon, 25 Mar 2024 18:52:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28107|2024-03-25T18:47:12.328Z -- thorsten -- phpmyfaq</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28107</link>
      <description>phpMyFAQ is an open source FAQ web application for PHP 8.1+ and MySQL, PostgreSQL and other databases.  A SQL injection vulnerability has been discovered in the `insertentry` &amp; `saveentry` when modifying records due to improper escaping of the email address. This allows any authenticated user with the rights to add/edit FAQ news to exploit this vulnerability to exfiltrate data, take over accounts and in some cases, even achieve RCE. This vulnerability is fixed in 3.2.6.</description>
      <guid isPermaLink="false">CVE-2024-28107|2024-03-25T18:47:12.328Z</guid>
      <pubDate>Mon, 25 Mar 2024 18:47:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28106|2024-03-25T18:41:58.260Z -- thorsten -- phpmyfaq</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28106</link>
      <description>phpMyFAQ is an open source FAQ web application for PHP 8.1+ and MySQL, PostgreSQL and other databases. By manipulating the news parameter in a POST request, an attacker can inject malicious JavaScript code. Upon browsing to the compromised news page, the XSS payload triggers. This vulnerability is fixed in 3.2.6.</description>
      <guid isPermaLink="false">CVE-2024-28106|2024-03-25T18:41:58.260Z</guid>
      <pubDate>Mon, 25 Mar 2024 18:41:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28107|2024-07-16T17:50:55.118Z -- thorsten -- phpmyfaq</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-28107</link>
      <description>phpMyFAQ is an open source FAQ web application for PHP 8.1+ and MySQL, PostgreSQL and other databases.  A SQL injection vulnerability has been discovered in the `insertentry` &amp; `saveentry` when modifying records due to improper escaping of the email address. This allows any authenticated user with the rights to add/edit FAQ news to exploit this vulnerability to exfiltrate data, take over accounts and in some cases, even achieve RCE. This vulnerability is fixed in 3.2.6.</description>
      <guid isPermaLink="false">CVE-2024-28107|2024-07-16T17:50:55.118Z</guid>
      <pubDate>Mon, 25 Mar 2024 18:47:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29179|2024-07-16T17:48:07.370Z -- thorsten -- phpmyfaq</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-29179</link>
      <description>phpMyFAQ is an open source FAQ web application for PHP 8.1+ and MySQL, PostgreSQL and other databases. An attacker with admin privileges can upload an attachment containing JS code without extension and the application will render it as HTML which allows for XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-29179|2024-07-16T17:48:07.370Z</guid>
      <pubDate>Mon, 25 Mar 2024 20:27:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28108|2024-08-01T18:50:13.531Z -- thorsten -- phpmyfaq</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-28108</link>
      <description>phpMyFAQ is an open source FAQ web application for PHP 8.1+ and MySQL, PostgreSQL and other databases. Due to insufficient validation on the `contentLink` parameter, it is possible for unauthenticated users to inject HTML code to the page which might affect other users. _Also, requires that adding new FAQs is allowed for guests and that the admin doesn't check the content of a newly added FAQ._ This vulnerability is fixed in 3.2.6.</description>
      <guid isPermaLink="false">CVE-2024-28108|2024-08-01T18:50:13.531Z</guid>
      <pubDate>Mon, 25 Mar 2024 18:52:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28105|2024-08-02T00:48:48.259Z -- thorsten -- phpmyfaq</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-28105</link>
      <description>phpMyFAQ is an open source FAQ web application for PHP 8.1+ and MySQL, PostgreSQL and other databases. The category image upload function in phpmyfaq is vulnerable to manipulation of the `Content-type` and `lang` parameters, allowing attackers to upload malicious files with a .php extension, potentially leading to remote code execution (RCE) on the system. This vulnerability is fixed in 3.2.6.</description>
      <guid isPermaLink="false">CVE-2024-28105|2024-08-02T00:48:48.259Z</guid>
      <pubDate>Mon, 25 Mar 2024 18:35:05 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28108|2024-08-02T00:48:48.813Z -- thorsten -- phpmyfaq</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-28108</link>
      <description>phpMyFAQ is an open source FAQ web application for PHP 8.1+ and MySQL, PostgreSQL and other databases. Due to insufficient validation on the `contentLink` parameter, it is possible for unauthenticated users to inject HTML code to the page which might affect other users. _Also, requires that adding new FAQs is allowed for guests and that the admin doesn't check the content of a newly added FAQ._ This vulnerability is fixed in 3.2.6.</description>
      <guid isPermaLink="false">CVE-2024-28108|2024-08-02T00:48:48.813Z</guid>
      <pubDate>Mon, 25 Mar 2024 18:52:19 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28107|2024-08-02T00:48:49.230Z -- thorsten -- phpmyfaq</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-28107</link>
      <description>phpMyFAQ is an open source FAQ web application for PHP 8.1+ and MySQL, PostgreSQL and other databases.  A SQL injection vulnerability has been discovered in the `insertentry` &amp; `saveentry` when modifying records due to improper escaping of the email address. This allows any authenticated user with the rights to add/edit FAQ news to exploit this vulnerability to exfiltrate data, take over accounts and in some cases, even achieve RCE. This vulnerability is fixed in 3.2.6.</description>
      <guid isPermaLink="false">CVE-2024-28107|2024-08-02T00:48:49.230Z</guid>
      <pubDate>Mon, 25 Mar 2024 18:47:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27299|2024-08-02T00:28:00.479Z -- thorsten -- phpmyfaq</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27299</link>
      <description>phpMyFAQ is an open source FAQ web application for PHP 8.1+ and MySQL, PostgreSQL and other databases. A SQL injection vulnerability has been discovered in the the "Add News" functionality due to improper escaping of the email address. This allows any authenticated user with the rights to add/edit FAQ news to exploit this vulnerability to exfiltrate data, take over accounts and in some cases, even achieve RCE. The vulnerable field lies in the  `authorEmail` field which uses PHP's `FILTER_VALIDATE_EMAIL` filter. This filter is insufficient in protecting against SQL injection attacks and should still be properly escaped. However, in this version of phpMyFAQ (3.2.5), this field is not escaped properly can be used together with other fields to fully exploit the SQL injection vulnerability. This vulnerability is fixed in 3.2.6.</description>
      <guid isPermaLink="false">CVE-2024-27299|2024-08-02T00:28:00.479Z</guid>
      <pubDate>Mon, 25 Mar 2024 18:26:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28106|2024-08-02T00:48:49.468Z -- thorsten -- phpmyfaq</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-28106</link>
      <description>phpMyFAQ is an open source FAQ web application for PHP 8.1+ and MySQL, PostgreSQL and other databases. By manipulating the news parameter in a POST request, an attacker can inject malicious JavaScript code. Upon browsing to the compromised news page, the XSS payload triggers. This vulnerability is fixed in 3.2.6.</description>
      <guid isPermaLink="false">CVE-2024-28106|2024-08-02T00:48:49.468Z</guid>
      <pubDate>Mon, 25 Mar 2024 18:41:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29196|2024-08-02T01:10:54.751Z -- thorsten -- phpmyfaq</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-29196</link>
      <description>phpMyFAQ is an open source FAQ web application for PHP 8.1+ and MySQL, PostgreSQL and other databases. There is a Path Traversal vulnerability in Attachments that allows attackers with admin rights to upload malicious files to other locations of the web root. This vulnerability is fixed in 3.2.6.</description>
      <guid isPermaLink="false">CVE-2024-29196|2024-08-02T01:10:54.751Z</guid>
      <pubDate>Tue, 26 Mar 2024 03:01:36 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27300|2024-08-02T00:28:00.229Z -- thorsten -- phpmyfaq</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27300</link>
      <description>phpMyFAQ is an open source FAQ web application for PHP 8.1+ and MySQL, PostgreSQL and other databases. The `email` field in phpMyFAQ's user control panel page is vulnerable to stored XSS attacks due to the inadequacy of PHP's `FILTER_VALIDATE_EMAIL` function, which only validates the email format, not its content. This vulnerability enables an attacker to execute arbitrary client-side JavaScript within the context of another user's phpMyFAQ session. This vulnerability is fixed in 3.2.6.</description>
      <guid isPermaLink="false">CVE-2024-27300|2024-08-02T00:28:00.229Z</guid>
      <pubDate>Mon, 25 Mar 2024 18:30:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29179|2024-08-02T01:10:54.091Z -- thorsten -- phpmyfaq</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-29179</link>
      <description>phpMyFAQ is an open source FAQ web application for PHP 8.1+ and MySQL, PostgreSQL and other databases. An attacker with admin privileges can upload an attachment containing JS code without extension and the application will render it as HTML which allows for XSS attacks.</description>
      <guid isPermaLink="false">CVE-2024-29179|2024-08-02T01:10:54.091Z</guid>
      <pubDate>Mon, 25 Mar 2024 20:27:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29196|2024-08-05T16:29:28.863Z -- thorsten -- phpmyfaq</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-29196</link>
      <description>phpMyFAQ is an open source FAQ web application for PHP 8.1+ and MySQL, PostgreSQL and other databases. There is a Path Traversal vulnerability in Attachments that allows attackers with admin rights to upload malicious files to other locations of the web root. This vulnerability is fixed in 3.2.6.</description>
      <guid isPermaLink="false">CVE-2024-29196|2024-08-05T16:29:28.863Z</guid>
      <pubDate>Tue, 26 Mar 2024 03:01:36 +0000</pubDate>
    </item>
  </channel>
</rss>

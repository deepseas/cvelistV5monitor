<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for directus -- directus</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/directus/directus.rss</link>
    <description>The latest CVEs for directus -- directus</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 21:22:04 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-28443|2024-08-02T12:38:25.370Z -- directus -- directus
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-28443</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. Prior to version 9.23.3, the `directus_refresh_token` is not redacted properly from the log outputs and can be used to impersonate users without their permission. This issue is patched in version 9.23.3.</description>
      <guid isPermaLink="false">CVE-2023-28443|2024-08-02T12:38:25.370Z</guid>
      <pubDate>Thu, 23 Mar 2023 23:13:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-27481|2024-08-02T12:09:43.494Z -- directus -- directus
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-27481</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. In versions prior to 9.16.0 users with read access to the `password` field in `directus_users` can extract the argon2 password hashes by brute forcing the export functionality combined with a `_starts_with` filter. This allows the user to enumerate the password hashes. Accounts cannot be taken over unless the hashes can be reversed which is unlikely with current hardware. This problem has been patched by preventing any hashed/concealed field to be filtered against with the `_starts_with` or other string operator in version 9.16.0. Users are advised to upgrade. Users unable to upgrade may mitigate this issue by ensuring that no user has `read` access to the `password` field in `directus_users`. </description>
      <guid isPermaLink="false">CVE-2023-27481|2024-08-02T12:09:43.494Z</guid>
      <pubDate>Tue, 07 Mar 2023 18:20:52 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-38503|2024-08-02T17:46:55.886Z -- directus -- directus
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-38503</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. Starting in version 10.3.0 and prior to version 10.5.0, the permission filters (i.e. `user_created IS $CURRENT_USER`) are not properly checked when using GraphQL subscription resulting in unauthorized users getting event on their subscription which they should not be receiving according to the permissions. This can be any collection but out-of-the box the `directus_users` collection is configured with such a permissions filter allowing you to get updates for other users when changes happen. Version 10.5.0 contains a patch. As a workaround, disable GraphQL subscriptions.</description>
      <guid isPermaLink="false">CVE-2023-38503|2024-08-02T17:46:55.886Z</guid>
      <pubDate>Tue, 25 Jul 2023 22:06:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-26492|2024-08-02T11:53:53.737Z -- directus -- directus
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-26492</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. Directus is vulnerable to Server-Side Request Forgery (SSRF) when importing a file from a remote web server (POST to `/files/import`). An attacker can bypass the security controls by performing a DNS rebinding attack and view sensitive data from internal servers or perform a local port scan. An attacker can exploit this vulnerability to access highly sensitive internal server(s) and steal sensitive information. This issue was fixed in version 9.23.0.</description>
      <guid isPermaLink="false">CVE-2023-26492|2024-08-02T11:53:53.737Z</guid>
      <pubDate>Fri, 03 Mar 2023 21:49:02 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-27474|2024-08-02T12:09:43.476Z -- directus -- directus
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-27474</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. Instances relying on an allow-listed reset URL are vulnerable to an HTML injection attack through the use of query parameters in the reset URL. An attacker could exploit this to email users urls to the servers domain but which may contain malicious code. The problem has been resolved and released under version 9.23.0. People relying on a custom password reset URL should upgrade to 9.23.0 or later, or remove the custom reset url from the configured allow list. Users are advised to upgrade. Users unable to upgrade may disable the custom reset URL allow list as a workaround.</description>
      <guid isPermaLink="false">CVE-2023-27474|2024-08-02T12:09:43.476Z</guid>
      <pubDate>Mon, 06 Mar 2023 16:43:54 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-45820|2024-08-02T20:29:32.516Z -- directus -- directus
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-45820</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. In affected versions any Directus installation that has websockets enabled can be crashed if the websocket server receives an invalid frame. A malicious user could leverage this bug to crash Directus. This issue has been addressed in version 10.6.2. Users are advised to upgrade. Users unable to upgrade should avoid using websockets.</description>
      <guid isPermaLink="false">CVE-2023-45820|2024-08-02T20:29:32.516Z</guid>
      <pubDate>Thu, 19 Oct 2023 18:38:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-39895|2024-08-02T04:33:11.240Z -- directus -- directus</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-39895</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. A denial of service (DoS) attack by field duplication in GraphQL is a type of attack where an attacker exploits the flexibility of GraphQL to overwhelm a server by requesting the same field multiple times in a single query. This can cause the server to perform redundant computations and consume excessive resources, leading to a denial of service for legitimate users. Request to the endpoint /graphql are sent when visualizing graphs generated at a dashboard. By modifying the data sent and duplicating many times the fields a DoS attack is possible. This vulnerability is fixed in 10.12.0.</description>
      <guid isPermaLink="false">CVE-2024-39895|2024-08-02T04:33:11.240Z</guid>
      <pubDate>Mon, 08 Jul 2024 16:47:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-39896|2024-08-02T04:33:11.337Z -- directus -- directus</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-39896</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. When relying on SSO providers in combination with local authentication it can be possible to enumerate existing SSO users in the instance. This is possible because if an email address exists in Directus and belongs to a known SSO provider then it will throw a "helpful" error that the user belongs to another provider. This vulnerability is fixed in 10.13.0.</description>
      <guid isPermaLink="false">CVE-2024-39896|2024-08-02T04:33:11.337Z</guid>
      <pubDate>Mon, 08 Jul 2024 17:27:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-39701|2024-08-02T04:26:16.090Z -- directus -- directus</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-39701</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. Directus &gt;=9.23.0, &lt;=v10.5.3 improperly handles _in, _nin operators. It evaluates empty arrays as valid so expressions like {"role": {"_in": $CURRENT_USER.some_field}} would evaluate to true allowing the request to pass. This results in Broken Access Control because the rule fails to do what it was intended to do: Pass rule if **field** matches any of the **values**. This vulnerability is fixed in 10.6.0.</description>
      <guid isPermaLink="false">CVE-2024-39701|2024-08-02T04:26:16.090Z</guid>
      <pubDate>Mon, 08 Jul 2024 16:43:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-39699|2024-08-02T04:26:15.949Z -- directus -- directus</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-39699</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. There was already a reported SSRF vulnerability via file import. It was fixed by resolving all DNS names and checking if the requested IP is an internal IP address. However it is possible to bypass this security measure and execute a SSRF using redirects. Directus allows redirects when importing file from the URL and does not check the result URL. Thus, it is possible to execute a request to an internal IP, for example to 127.0.0.1. However, it is blind SSRF, because Directus also uses response interception technique to get the information about the connect from the socket directly and it does not show a response if the IP address is internal. This vulnerability is fixed in 10.9.3.</description>
      <guid isPermaLink="false">CVE-2024-39699|2024-08-02T04:26:15.949Z</guid>
      <pubDate>Mon, 08 Jul 2024 15:32:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34708|2024-08-02T02:59:21.863Z -- directus -- directus</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34708</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. A user with permission to view any collection using redacted hashed fields can get access the raw stored version using the `alias` functionality on the API. Normally, these redacted fields will return `**********` however  if we change the request to `?alias[workaround]=redacted` we can instead retrieve the plain text value for the field. This can be avoided by removing permission to view the sensitive fields entirely from users or roles that should not be able to see them. This vulnerability is fixed in 10.11.0.</description>
      <guid isPermaLink="false">CVE-2024-34708|2024-08-02T02:59:21.863Z</guid>
      <pubDate>Mon, 13 May 2024 19:33:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34709|2024-08-02T02:59:22.093Z -- directus -- directus</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34709</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. Prior to 10.11.0, session tokens function like the other JWT tokens where they are not actually invalidated when logging out. The `directus_session` gets destroyed and the cookie gets deleted but if the cookie value is captured, it will still work for the entire expiry time which is set to 1 day by default. Making it effectively a long lived unrevokable stateless token instead of the stateful session token it was meant to be. This vulnerability is fixed in 10.11.0.</description>
      <guid isPermaLink="false">CVE-2024-34709|2024-08-02T02:59:22.093Z</guid>
      <pubDate>Mon, 13 May 2024 19:39:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-39896|2024-07-30T18:35:32.088Z -- directus -- directus</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-39896</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. When relying on SSO providers in combination with local authentication it can be possible to enumerate existing SSO users in the instance. This is possible because if an email address exists in Directus and belongs to a known SSO provider then it will throw a "helpful" error that the user belongs to another provider. This vulnerability is fixed in 10.13.0.</description>
      <guid isPermaLink="false">CVE-2024-39896|2024-07-30T18:35:32.088Z</guid>
      <pubDate>Mon, 08 Jul 2024 17:27:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-39895|2024-07-09T13:26:34.287Z -- directus -- directus</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-39895</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. A denial of service (DoS) attack by field duplication in GraphQL is a type of attack where an attacker exploits the flexibility of GraphQL to overwhelm a server by requesting the same field multiple times in a single query. This can cause the server to perform redundant computations and consume excessive resources, leading to a denial of service for legitimate users. Request to the endpoint /graphql are sent when visualizing graphs generated at a dashboard. By modifying the data sent and duplicating many times the fields a DoS attack is possible. This vulnerability is fixed in 10.12.0.</description>
      <guid isPermaLink="false">CVE-2024-39895|2024-07-09T13:26:34.287Z</guid>
      <pubDate>Mon, 08 Jul 2024 16:47:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-39896|2024-07-08T17:27:56.032Z -- directus -- directus</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-39896</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. When relying on SSO providers in combination with local authentication it can be possible to enumerate existing SSO users in the instance. This is possible because if an email address exists in Directus and belongs to a known SSO provider then it will throw a "helpful" error that the user belongs to another provider. This vulnerability is fixed in 10.13.0.</description>
      <guid isPermaLink="false">CVE-2024-39896|2024-07-08T17:27:56.032Z</guid>
      <pubDate>Mon, 08 Jul 2024 17:27:56 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-39699|2024-07-08T15:32:04.556Z -- directus -- directus</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-39699</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. There was already a reported SSRF vulnerability via file import. It was fixed by resolving all DNS names and checking if the requested IP is an internal IP address. However it is possible to bypass this security measure and execute a SSRF using redirects. Directus allows redirects when importing file from the URL and does not check the result URL. Thus, it is possible to execute a request to an internal IP, for example to 127.0.0.1. However, it is blind SSRF, because Directus also uses response interception technique to get the information about the connect from the socket directly and it does not show a response if the IP address is internal. This vulnerability is fixed in 10.9.3.</description>
      <guid isPermaLink="false">CVE-2024-39699|2024-07-08T15:32:04.556Z</guid>
      <pubDate>Mon, 08 Jul 2024 15:32:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28239|2024-03-12T20:23:37.857Z -- directus -- directus</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28239</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. The authentication API has a `redirect` parameter that can be exploited as an open redirect vulnerability as the user tries to log in via the API URL. There's a redirect that is done after successful login via the Auth API GET request to `directus/auth/login/google?redirect=http://malicious-fishing-site.com`. While credentials don't seem to be passed to the attacker site, the user can be phished into clicking a legitimate directus site and be taken to a malicious site made to look like a an error message "Your password needs to be updated" to phish out the current password. Users who login via OAuth2 into Directus may be at risk. This issue has been addressed in version 10.10.0. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-28239|2024-03-12T20:23:37.857Z</guid>
      <pubDate>Tue, 12 Mar 2024 20:23:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28238|2024-03-12T20:24:28.321Z -- directus -- directus</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28238</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. When reaching the /files page, a JWT is passed via GET request. Inclusion of session tokens in URLs poses a security risk as URLs are often logged in various places (e.g., web server logs, browser history). Attackers gaining access to these logs may hijack active user sessions, leading to unauthorized access to sensitive information or actions on behalf of the user. This issue has been addressed in version 10.10.0. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-28238|2024-03-12T20:24:28.321Z</guid>
      <pubDate>Tue, 12 Mar 2024 20:24:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-36128|2024-06-04T17:48:05.315Z -- directus -- directus</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-36128</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. Prior to 10.11.2, providing a non-numeric length value to the random string generation utility will create a memory issue breaking the capability to generate random strings platform wide. This creates a denial of service situation where logged in sessions can no longer be refreshed as sessions depend on the capability to generate a random session ID. This vulnerability is fixed in 10.11.2.</description>
      <guid isPermaLink="false">CVE-2024-36128|2024-06-04T17:48:05.315Z</guid>
      <pubDate>Mon, 03 Jun 2024 14:59:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27295|2024-03-01T15:37:09.617Z -- directus -- directus</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27295</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. The password reset mechanism of the Directus backend allows attackers to receive a password reset email of a victim user, specifically having it arrive at a similar email address as the victim with a one or more characters changed to use accents. This is due to the fact that by default MySQL/MariaDB are configured for accent-insensitive and case-insensitive comparisons. This vulnerability is fixed in version 10.8.3.</description>
      <guid isPermaLink="false">CVE-2024-27295|2024-03-01T15:37:09.617Z</guid>
      <pubDate>Fri, 01 Mar 2024 15:37:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27296|2024-03-01T15:43:33.601Z -- directus -- directus</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-27296</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. Prior to version 10.8.3, the exact Directus version number was being shipped in compiled JS bundles which are accessible without authentication. With this information a malicious attacker can trivially look for known vulnerabilities in Directus core or any of its shipped dependencies in that specific running version. The problem has been resolved in versions 10.8.3 and newer.</description>
      <guid isPermaLink="false">CVE-2024-27296|2024-03-01T15:43:33.601Z</guid>
      <pubDate>Fri, 01 Mar 2024 15:43:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34709|2024-05-13T19:39:32.313Z -- directus -- directus</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-34709</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. Prior to 10.11.0, session tokens function like the other JWT tokens where they are not actually invalidated when logging out. The `directus_session` gets destroyed and the cookie gets deleted but if the cookie value is captured, it will still work for the entire expiry time which is set to 1 day by default. Making it effectively a long lived unrevokable stateless token instead of the stateful session token it was meant to be. This vulnerability is fixed in 10.11.0.</description>
      <guid isPermaLink="false">CVE-2024-34709|2024-05-13T19:39:32.313Z</guid>
      <pubDate>Mon, 13 May 2024 19:39:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34708|2024-06-04T17:42:21.964Z -- directus -- directus</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-34708</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. A user with permission to view any collection using redacted hashed fields can get access the raw stored version using the `alias` functionality on the API. Normally, these redacted fields will return `**********` however  if we change the request to `?alias[workaround]=redacted` we can instead retrieve the plain text value for the field. This can be avoided by removing permission to view the sensitive fields entirely from users or roles that should not be able to see them. This vulnerability is fixed in 10.11.0.</description>
      <guid isPermaLink="false">CVE-2024-34708|2024-06-04T17:42:21.964Z</guid>
      <pubDate>Mon, 13 May 2024 19:33:55 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34709|2024-06-12T19:00:40.071Z -- directus -- directus</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-34709</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. Prior to 10.11.0, session tokens function like the other JWT tokens where they are not actually invalidated when logging out. The `directus_session` gets destroyed and the cookie gets deleted but if the cookie value is captured, it will still work for the entire expiry time which is set to 1 day by default. Making it effectively a long lived unrevokable stateless token instead of the stateful session token it was meant to be. This vulnerability is fixed in 10.11.0.</description>
      <guid isPermaLink="false">CVE-2024-34709|2024-06-12T19:00:40.071Z</guid>
      <pubDate>Mon, 13 May 2024 19:39:32 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-39895|2024-07-08T16:47:44.673Z -- directus -- directus</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-39895</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. A denial of service (DoS) attack by field duplication in GraphQL is a type of attack where an attacker exploits the flexibility of GraphQL to overwhelm a server by requesting the same field multiple times in a single query. This can cause the server to perform redundant computations and consume excessive resources, leading to a denial of service for legitimate users. Request to the endpoint /graphql are sent when visualizing graphs generated at a dashboard. By modifying the data sent and duplicating many times the fields a DoS attack is possible. This vulnerability is fixed in 10.12.0.</description>
      <guid isPermaLink="false">CVE-2024-39895|2024-07-08T16:47:44.673Z</guid>
      <pubDate>Mon, 08 Jul 2024 16:47:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-39701|2024-07-08T16:43:01.595Z -- directus -- directus</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-39701</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. Directus &gt;=9.23.0, &lt;=v10.5.3 improperly handles _in, _nin operators. It evaluates empty arrays as valid so expressions like {"role": {"_in": $CURRENT_USER.some_field}} would evaluate to true allowing the request to pass. This results in Broken Access Control because the rule fails to do what it was intended to do: Pass rule if **field** matches any of the **values**. This vulnerability is fixed in 10.6.0.</description>
      <guid isPermaLink="false">CVE-2024-39701|2024-07-08T16:43:01.595Z</guid>
      <pubDate>Mon, 08 Jul 2024 16:43:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-39699|2024-07-08T18:13:58.460Z -- directus -- directus</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-39699</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. There was already a reported SSRF vulnerability via file import. It was fixed by resolving all DNS names and checking if the requested IP is an internal IP address. However it is possible to bypass this security measure and execute a SSRF using redirects. Directus allows redirects when importing file from the URL and does not check the result URL. Thus, it is possible to execute a request to an internal IP, for example to 127.0.0.1. However, it is blind SSRF, because Directus also uses response interception technique to get the information about the connect from the socket directly and it does not show a response if the IP address is internal. This vulnerability is fixed in 10.9.3.</description>
      <guid isPermaLink="false">CVE-2024-39699|2024-07-08T18:13:58.460Z</guid>
      <pubDate>Mon, 08 Jul 2024 15:32:04 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-39701|2024-07-10T16:38:47.405Z -- directus -- directus</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-39701</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. Directus &gt;=9.23.0, &lt;=v10.5.3 improperly handles _in, _nin operators. It evaluates empty arrays as valid so expressions like {"role": {"_in": $CURRENT_USER.some_field}} would evaluate to true allowing the request to pass. This results in Broken Access Control because the rule fails to do what it was intended to do: Pass rule if **field** matches any of the **values**. This vulnerability is fixed in 10.6.0.</description>
      <guid isPermaLink="false">CVE-2024-39701|2024-07-10T16:38:47.405Z</guid>
      <pubDate>Mon, 08 Jul 2024 16:43:01 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-39895|2024-07-10T16:40:10.539Z -- directus -- directus</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-39895</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. A denial of service (DoS) attack by field duplication in GraphQL is a type of attack where an attacker exploits the flexibility of GraphQL to overwhelm a server by requesting the same field multiple times in a single query. This can cause the server to perform redundant computations and consume excessive resources, leading to a denial of service for legitimate users. Request to the endpoint /graphql are sent when visualizing graphs generated at a dashboard. By modifying the data sent and duplicating many times the fields a DoS attack is possible. This vulnerability is fixed in 10.12.0.</description>
      <guid isPermaLink="false">CVE-2024-39895|2024-07-10T16:40:10.539Z</guid>
      <pubDate>Mon, 08 Jul 2024 16:47:44 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27296|2024-08-02T00:27:59.991Z -- directus -- directus</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27296</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. Prior to version 10.8.3, the exact Directus version number was being shipped in compiled JS bundles which are accessible without authentication. With this information a malicious attacker can trivially look for known vulnerabilities in Directus core or any of its shipped dependencies in that specific running version. The problem has been resolved in versions 10.8.3 and newer.</description>
      <guid isPermaLink="false">CVE-2024-27296|2024-08-02T00:27:59.991Z</guid>
      <pubDate>Fri, 01 Mar 2024 15:43:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-27295|2024-08-02T00:28:00.402Z -- directus -- directus</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-27295</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. The password reset mechanism of the Directus backend allows attackers to receive a password reset email of a victim user, specifically having it arrive at a similar email address as the victim with a one or more characters changed to use accents. This is due to the fact that by default MySQL/MariaDB are configured for accent-insensitive and case-insensitive comparisons. This vulnerability is fixed in version 10.8.3.</description>
      <guid isPermaLink="false">CVE-2024-27295|2024-08-02T00:28:00.402Z</guid>
      <pubDate>Fri, 01 Mar 2024 15:37:09 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28238|2024-08-02T00:48:49.665Z -- directus -- directus</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-28238</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. When reaching the /files page, a JWT is passed via GET request. Inclusion of session tokens in URLs poses a security risk as URLs are often logged in various places (e.g., web server logs, browser history). Attackers gaining access to these logs may hijack active user sessions, leading to unauthorized access to sensitive information or actions on behalf of the user. This issue has been addressed in version 10.10.0. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-28238|2024-08-02T00:48:49.665Z</guid>
      <pubDate>Tue, 12 Mar 2024 20:24:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28239|2024-08-02T00:48:49.485Z -- directus -- directus</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-28239</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. The authentication API has a `redirect` parameter that can be exploited as an open redirect vulnerability as the user tries to log in via the API URL. There's a redirect that is done after successful login via the Auth API GET request to `directus/auth/login/google?redirect=http://malicious-fishing-site.com`. While credentials don't seem to be passed to the attacker site, the user can be phished into clicking a legitimate directus site and be taken to a malicious site made to look like a an error message "Your password needs to be updated" to phish out the current password. Users who login via OAuth2 into Directus may be at risk. This issue has been addressed in version 10.10.0. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-28239|2024-08-02T00:48:49.485Z</guid>
      <pubDate>Tue, 12 Mar 2024 20:23:37 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-36128|2024-08-02T03:30:13.147Z -- directus -- directus</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-36128</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. Prior to 10.11.2, providing a non-numeric length value to the random string generation utility will create a memory issue breaking the capability to generate random strings platform wide. This creates a denial of service situation where logged in sessions can no longer be refreshed as sessions depend on the capability to generate a random session ID. This vulnerability is fixed in 10.11.2.</description>
      <guid isPermaLink="false">CVE-2024-36128|2024-08-02T03:30:13.147Z</guid>
      <pubDate>Mon, 03 Jun 2024 14:59:45 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28238|2024-08-02T19:50:43.970Z -- directus -- directus</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-28238</link>
      <description>Directus is a real-time API and App dashboard for managing SQL database content. When reaching the /files page, a JWT is passed via GET request. Inclusion of session tokens in URLs poses a security risk as URLs are often logged in various places (e.g., web server logs, browser history). Attackers gaining access to these logs may hijack active user sessions, leading to unauthorized access to sensitive information or actions on behalf of the user. This issue has been addressed in version 10.10.0. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-28238|2024-08-02T19:50:43.970Z</guid>
      <pubDate>Tue, 12 Mar 2024 20:24:28 +0000</pubDate>
    </item>
  </channel>
</rss>

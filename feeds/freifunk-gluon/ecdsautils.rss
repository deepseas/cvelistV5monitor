<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for freifunk-gluon -- ecdsautils</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/freifunk-gluon/ecdsautils.rss</link>
    <description>The latest CVEs for freifunk-gluon -- ecdsautils</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 10:23:09 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-24884|2024-08-03T04:29:00.636Z -- freifunk-gluon -- ecdsautils
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-24884</link>
      <description>ecdsautils is a tiny collection of programs used for ECDSA (keygen, sign, verify). `ecdsa_verify_[prepare_]legacy()` does not check whether the signature values `r` and `s` are non-zero. A signature consisting only of zeroes is always considered valid, making it trivial to forge signatures. Requiring multiple signatures from different public keys does not mitigate the issue: `ecdsa_verify_list_legacy()` will accept an arbitrary number of such forged signatures. Both the `ecdsautil verify` CLI command and the libecdsautil library are affected. The issue has been fixed in ecdsautils 0.4.1. All older versions of ecdsautils (including versions before the split into a library and a CLI utility) are vulnerable.</description>
      <guid isPermaLink="false">CVE-2022-24884|2024-08-03T04:29:00.636Z</guid>
      <pubDate>Thu, 05 May 2022 23:50:10 +0000</pubDate>
    </item>
  </channel>
</rss>

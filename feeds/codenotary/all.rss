<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for codenotary -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/codenotary/all.rss</link>
    <description>The latest CVEs for codenotary -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 14:22:42 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-36111|2024-08-03T09:52:00.524Z -- codenotary -- immudb
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-36111</link>
      <description>immudb is a database with built-in cryptographic proof and verification. In versions prior to 1.4.1, a malicious immudb server can provide a falsified proof that will be accepted by the client SDK signing a falsified transaction replacing the genuine one. This situation can not be triggered by a genuine immudb server and requires the client to perform a specific list of verified operations resulting in acceptance of an invalid state value. This vulnerability only affects immudb client SDKs, the immudb server itself is not affected by this vulnerability. This issue has been patched in version 1.4.1.</description>
      <guid isPermaLink="false">CVE-2022-36111|2024-08-03T09:52:00.524Z</guid>
      <pubDate>Wed, 23 Nov 2022 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2022-39199|2024-08-03T12:00:42.588Z -- codenotary -- immudb
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-39199</link>
      <description>immudb is a database with built-in cryptographic proof and verification. immudb client SDKs use server's UUID to distinguish between different server instance so that the client can connect to different immudb instances and keep the state for multiple servers. SDK does not validate this uuid and can accept any value reported by the server. A malicious server can change the reported UUID tricking the client to treat it as a different server thus accepting a state completely irrelevant to the one previously retrieved from the server. This issue has been patched in version 1.4.1. As a workaround, when initializing an immudb client object a custom state handler can be used to store the state. Providing custom implementation that ignores the server UUID can be used to ensure that even if the server changes the UUID, client will still consider it to be the same server.</description>
      <guid isPermaLink="false">CVE-2022-39199|2024-08-03T12:00:42.588Z</guid>
      <pubDate>Tue, 22 Nov 2022 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>

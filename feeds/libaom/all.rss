<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for libaom -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/libaom/all.rss</link>
    <description>The latest CVEs for libaom -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 13:24:07 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-6879|2024-08-02T08:42:08.213Z -- libaom -- libaom
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-6879</link>
      <description>Increasing the resolution of video frames, while performing a multi-threaded encode, can result in a heap overflow in av1_loop_restoration_dealloc().

</description>
      <guid isPermaLink="false">CVE-2023-6879|2024-08-02T08:42:08.213Z</guid>
      <pubDate>Wed, 27 Dec 2023 22:16:41 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5171|2024-06-05T19:11:12.987Z -- libaom -- libaom</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5171</link>
      <description>Integer overflow in libaom internal function img_alloc_helper can lead to heap buffer overflow. This function can be reached via 3 callers:


  *  Calling aom_img_alloc() with a large value of the d_w, d_h, or align parameter may result in integer overflows in the calculations of buffer sizes and offsets and some fields of the returned aom_image_t struct may be invalid.
  *  Calling aom_img_wrap() with a large value of the d_w, d_h, or align parameter may result in integer overflows in the calculations of buffer sizes and offsets and some fields of the returned aom_image_t struct may be invalid.
  *  Calling aom_img_alloc_with_border() with a large value of the d_w, d_h, align, size_align, or border parameter may result in integer overflows in the calculations of buffer sizes and offsets and some fields of the returned aom_image_t struct may be invalid.</description>
      <guid isPermaLink="false">CVE-2024-5171|2024-06-05T19:11:12.987Z</guid>
      <pubDate>Wed, 05 Jun 2024 19:11:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5171|2024-06-07T17:16:49.921Z -- libaom -- libaom</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-5171</link>
      <description>Integer overflow in libaom internal function img_alloc_helper can lead to heap buffer overflow. This function can be reached via 3 callers:


  *  Calling aom_img_alloc() with a large value of the d_w, d_h, or align parameter may result in integer overflows in the calculations of buffer sizes and offsets and some fields of the returned aom_image_t struct may be invalid.
  *  Calling aom_img_wrap() with a large value of the d_w, d_h, or align parameter may result in integer overflows in the calculations of buffer sizes and offsets and some fields of the returned aom_image_t struct may be invalid.
  *  Calling aom_img_alloc_with_border() with a large value of the d_w, d_h, align, size_align, or border parameter may result in integer overflows in the calculations of buffer sizes and offsets and some fields of the returned aom_image_t struct may be invalid.</description>
      <guid isPermaLink="false">CVE-2024-5171|2024-06-07T17:16:49.921Z</guid>
      <pubDate>Wed, 05 Jun 2024 19:11:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5171|2024-08-01T21:03:11.080Z -- libaom -- libaom</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5171</link>
      <description>Integer overflow in libaom internal function img_alloc_helper can lead to heap buffer overflow. This function can be reached via 3 callers:


  *  Calling aom_img_alloc() with a large value of the d_w, d_h, or align parameter may result in integer overflows in the calculations of buffer sizes and offsets and some fields of the returned aom_image_t struct may be invalid.
  *  Calling aom_img_wrap() with a large value of the d_w, d_h, or align parameter may result in integer overflows in the calculations of buffer sizes and offsets and some fields of the returned aom_image_t struct may be invalid.
  *  Calling aom_img_alloc_with_border() with a large value of the d_w, d_h, align, size_align, or border parameter may result in integer overflows in the calculations of buffer sizes and offsets and some fields of the returned aom_image_t struct may be invalid.</description>
      <guid isPermaLink="false">CVE-2024-5171|2024-08-01T21:03:11.080Z</guid>
      <pubDate>Wed, 05 Jun 2024 19:11:12 +0000</pubDate>
    </item>
  </channel>
</rss>

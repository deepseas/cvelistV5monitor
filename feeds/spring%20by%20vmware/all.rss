<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Spring by VMware -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/spring%20by%20vmware/all.rss</link>
    <description>The latest CVEs for Spring by VMware -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 23:23:14 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2020-5410|2024-08-04T08:30:24.192Z -- spring%20by%20vmware -- spring%20cloud%20config
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-5410</link>
      <description>Spring Cloud Config, versions 2.2.x prior to 2.2.3, versions 2.1.x prior to 2.1.9, and older unsupported versions allow applications to serve arbitrary configuration files through the spring-cloud-config-server module. A malicious user, or attacker, can send a request using a specially crafted URL that can lead to a directory traversal attack.</description>
      <guid isPermaLink="false">CVE-2020-5410|2024-08-04T08:30:24.192Z</guid>
      <pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-5427|2024-08-04T08:30:24.288Z -- spring%20by%20vmware -- spring%20cloud%20data%20flow
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-5427</link>
      <description>In Spring Cloud Data Flow, versions 2.6.x prior to 2.6.5, versions 2.5.x prior 2.5.4, an application is vulnerable to SQL injection when requesting task execution.</description>
      <guid isPermaLink="false">CVE-2020-5427|2024-08-04T08:30:24.288Z</guid>
      <pubDate>Mon, 25 Jan 2021 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-5408|2024-08-04T08:30:23.986Z -- spring%20by%20vmware -- spring%20security
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-5408</link>
      <description>Spring Security versions 5.3.x prior to 5.3.2, 5.2.x prior to 5.2.4, 5.1.x prior to 5.1.10, 5.0.x prior to 5.0.16 and 4.2.x prior to 4.2.16 use a fixed null initialization vector with CBC Mode in the implementation of the queryable text encryptor. A malicious user with access to the data that has been encrypted using such an encryptor may be able to derive the unencrypted values using a dictionary attack.</description>
      <guid isPermaLink="false">CVE-2020-5408|2024-08-04T08:30:23.986Z</guid>
      <pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-5421|2024-08-04T08:30:23.972Z -- spring%20by%20vmware -- spring%20framework
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-5421</link>
      <description>In Spring Framework versions 5.2.0 - 5.2.8, 5.1.0 - 5.1.17, 5.0.0 - 5.0.18, 4.3.0 - 4.3.28, and older unsupported versions, the protections against RFD attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a jsessionid path parameter.</description>
      <guid isPermaLink="false">CVE-2020-5421|2024-08-04T08:30:23.972Z</guid>
      <pubDate>Thu, 17 Sep 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-5412|2024-08-04T08:30:24.134Z -- spring%20by%20vmware -- spring%20cloud%20netflix
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-5412</link>
      <description>Spring Cloud Netflix, versions 2.2.x prior to 2.2.4, versions 2.1.x prior to 2.1.6, and older unsupported versions allow applications to use the Hystrix Dashboard proxy.stream endpoint to make requests to any server reachable by the server hosting the dashboard. A malicious user, or attacker, can send a request to other servers that should not be exposed publicly.</description>
      <guid isPermaLink="false">CVE-2020-5412|2024-08-04T08:30:24.134Z</guid>
      <pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-5407|2024-08-04T08:30:23.906Z -- spring%20by%20vmware -- spring%20security
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-5407</link>
      <description>Spring Security versions 5.2.x prior to 5.2.4 and 5.3.x prior to 5.3.2 contain a signature wrapping vulnerability during SAML response validation. When using the spring-security-saml2-service-provider component, a malicious user can carefully modify an otherwise valid SAML response and append an arbitrary assertion that Spring Security will accept as valid.</description>
      <guid isPermaLink="false">CVE-2020-5407|2024-08-04T08:30:23.906Z</guid>
      <pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-5411|2024-08-04T08:30:23.997Z -- spring%20by%20vmware -- spring%20batch
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-5411</link>
      <description>When configured to enable default typing, Jackson contained a deserialization vulnerability that could lead to arbitrary code execution. Jackson fixed this vulnerability by blacklisting known "deserialization gadgets". Spring Batch configures Jackson with global default typing enabled which means that through the previous exploit, arbitrary code could be executed if all of the following is true: * Spring Batch's Jackson support is being leveraged to serialize a job's ExecutionContext. * A malicious user gains write access to the data store used by the JobRepository (where the data to be deserialized is stored). In order to protect against this type of attack, Jackson prevents a set of untrusted gadget classes from being deserialized. Spring Batch should be proactive against blocking unknown "deserialization gadgets" when enabling default typing.</description>
      <guid isPermaLink="false">CVE-2020-5411|2024-08-04T08:30:23.997Z</guid>
      <pubDate>Thu, 11 Jun 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-5413|2024-08-04T08:30:24.064Z -- spring%20by%20vmware -- spring%20integration
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-5413</link>
      <description>Spring Integration framework provides Kryo Codec implementations as an alternative for Java (de)serialization. When Kryo is configured with default options, all unregistered classes are resolved on demand. This leads to the "deserialization gadgets" exploit when provided data contains malicious code for execution during deserialization. In order to protect against this type of attack, Kryo can be configured to require a set of trusted classes for (de)serialization. Spring Integration should be proactive against blocking unknown "deserialization gadgets" when configuring Kryo in code.</description>
      <guid isPermaLink="false">CVE-2020-5413|2024-08-04T08:30:24.064Z</guid>
      <pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-5405|2024-08-04T08:30:24.557Z -- spring%20by%20vmware -- spring%20cloud%20config
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-5405</link>
      <description>Spring Cloud Config, versions 2.2.x prior to 2.2.2, versions 2.1.x prior to 2.1.7, and older unsupported versions allow applications to serve arbitrary configuration files through the spring-cloud-config-server module. A malicious user, or attacker, can send a request using a specially crafted URL that can lead a directory traversal attack.</description>
      <guid isPermaLink="false">CVE-2020-5405|2024-08-04T08:30:24.557Z</guid>
      <pubDate>Thu, 05 Mar 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-5428|2024-08-04T08:30:24.237Z -- spring%20by%20vmware -- spring%20cloud%20task
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-5428</link>
      <description>In applications using Spring Cloud Task 2.2.4.RELEASE and below, may be vulnerable to SQL injection when exercising certain lookup queries in the TaskExplorer.</description>
      <guid isPermaLink="false">CVE-2020-5428|2024-08-04T08:30:24.237Z</guid>
      <pubDate>Mon, 25 Jan 2021 00:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>

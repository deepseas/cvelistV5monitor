<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Spring by VMware -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/spring%20by%20vmware/all.rss</link>
    <description>The latest CVEs for Spring by VMware -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Tue, 17 Sep 2024 06:24:35 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2020-5411|2024-09-17T01:46:53.158Z -- spring%20by%20vmware -- spring%20batch
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-5411</link>
      <description>When configured to enable default typing, Jackson contained a deserialization vulnerability that could lead to arbitrary code execution. Jackson fixed this vulnerability by blacklisting known "deserialization gadgets". Spring Batch configures Jackson with global default typing enabled which means that through the previous exploit, arbitrary code could be executed if all of the following is true: * Spring Batch's Jackson support is being leveraged to serialize a job's ExecutionContext. * A malicious user gains write access to the data store used by the JobRepository (where the data to be deserialized is stored). In order to protect against this type of attack, Jackson prevents a set of untrusted gadget classes from being deserialized. Spring Batch should be proactive against blocking unknown "deserialization gadgets" when enabling default typing.</description>
      <guid isPermaLink="false">CVE-2020-5411|2024-09-17T01:46:53.158Z</guid>
      <pubDate>Thu, 11 Jun 2020 17:00:16 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-5408|2024-09-17T01:01:47.960Z -- spring%20by%20vmware -- spring%20security
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-5408</link>
      <description>Spring Security versions 5.3.x prior to 5.3.2, 5.2.x prior to 5.2.4, 5.1.x prior to 5.1.10, 5.0.x prior to 5.0.16 and 4.2.x prior to 4.2.16 use a fixed null initialization vector with CBC Mode in the implementation of the queryable text encryptor. A malicious user with access to the data that has been encrypted using such an encryptor may be able to derive the unencrypted values using a dictionary attack.</description>
      <guid isPermaLink="false">CVE-2020-5408|2024-09-17T01:01:47.960Z</guid>
      <pubDate>Thu, 14 May 2020 17:15:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-5421|2024-09-17T03:58:43.873Z -- spring%20by%20vmware -- spring%20framework
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-5421</link>
      <description>In Spring Framework versions 5.2.0 - 5.2.8, 5.1.0 - 5.1.17, 5.0.0 - 5.0.18, 4.3.0 - 4.3.28, and older unsupported versions, the protections against RFD attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a jsessionid path parameter.</description>
      <guid isPermaLink="false">CVE-2020-5421|2024-09-17T03:58:43.873Z</guid>
      <pubDate>Sat, 19 Sep 2020 03:45:13 +0000</pubDate>
    </item>
  </channel>
</rss>

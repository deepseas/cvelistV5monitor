<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for lestrrat-go -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/lestrrat-go/all.rss</link>
    <description>The latest CVEs for lestrrat-go -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 12 Jun 2024 11:24:20 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-49290|2023-12-04T23:42:53.061Z -- lestrrat-go -- jwx
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-49290</link>
      <description>lestrrat-go/jwx is a Go module implementing various JWx (JWA/JWE/JWK/JWS/JWT, otherwise known as JOSE) technologies. A p2c parameter set too high in JWE's algorithm PBES2-* could lead to a denial of service. The JWE key management algorithms based on PBKDF2 require a JOSE Header Parameter called p2c (PBES2 Count). This parameter dictates the number of PBKDF2 iterations needed to derive a CEK wrapping key. Its primary purpose is to intentionally slow down the key derivation function, making password brute-force and dictionary attacks more resource- intensive. Therefore, if an attacker sets the p2c parameter in JWE to a very large number, it can cause a lot of computational consumption, resulting in a denial of service. This vulnerability has been addressed in commit `64f2a229b` which has been included in release version 1.2.27 and 2.0.18. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-49290|2023-12-04T23:42:53.061Z</guid>
      <pubDate>Mon, 04 Dec 2023 23:42:53 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-28122|2024-03-09T00:45:50.129Z -- lestrrat-go -- jwx
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-28122</link>
      <description> JWX is Go module implementing various JWx (JWA/JWE/JWK/JWS/JWT, otherwise known as JOSE) technologies. This vulnerability allows an attacker with a trusted public key to cause a Denial-of-Service (DoS) condition by crafting a malicious JSON Web Encryption (JWE) token with an exceptionally high compression ratio. This issue has been patched in versions 1.2.29 and 2.0.21.</description>
      <guid isPermaLink="false">CVE-2024-28122|2024-03-09T00:45:50.129Z</guid>
      <pubDate>Sat, 09 Mar 2024 00:45:50 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-21664|2024-02-05T15:37:42.909Z -- lestrrat-go -- jwx
</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-21664</link>
      <description>jwx is a Go module implementing various JWx (JWA/JWE/JWK/JWS/JWT, otherwise known as JOSE) technologies. Calling `jws.Parse` with a JSON serialized payload where the `signature` field is present while `protected` is absent can lead to a nil pointer dereference. The vulnerability can be used to crash/DOS a system doing JWS verification. This vulnerability has been patched in versions 2.0.19 and 1.2.28.
</description>
      <guid isPermaLink="false">CVE-2024-21664|2024-02-05T15:37:42.909Z</guid>
      <pubDate>Tue, 09 Jan 2024 19:18:03 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Red Hat -- Red Hat Ansible Automation Platform 2.4 for RHEL 8</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/red%20hat/red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208.rss</link>
    <description>The latest CVEs for Red Hat -- Red Hat Ansible Automation Platform 2.4 for RHEL 8</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 19 Jul 2024 18:24:07 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-5764|2024-07-19T03:55:27.721Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-5764</link>
      <description>A template injection flaw was found in Ansible where a user's controller internal templating operations may remove the unsafe designation from template data. This issue could allow an attacker to use a specially crafted file to introduce templating injection when supplying templating data.</description>
      <guid isPermaLink="false">CVE-2023-5764|2024-07-19T03:55:27.721Z</guid>
      <pubDate>Tue, 12 Dec 2023 22:01:33 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-07-16T21:55:04.068Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-07-16T21:55:04.068Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-07-15T09:42:59.683Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-07-15T09:42:59.683Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0690|2024-07-05T17:21:35.753Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-0690</link>
      <description>An information disclosure flaw was found in ansible-core due to a failure to respect the ANSIBLE_NO_LOG configuration in some scenarios. Information is still included in the output in certain tasks, such as loop items. Depending on the task, this issue may include sensitive information, such as decrypted secret values.</description>
      <guid isPermaLink="false">CVE-2024-0690|2024-07-05T17:21:35.753Z</guid>
      <pubDate>Tue, 06 Feb 2024 12:00:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-06-26T10:41:13.854Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-06-26T10:41:13.854Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-06-11T20:17:11.716Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-06-11T20:17:11.716Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1657|2024-06-04T18:00:13.838Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1657</link>
      <description>A flaw was found in the ansible automation platform. An insecure WebSocket connection was being used in installation from the Ansible rulebook EDA server. An attacker that has access to any machine in the CIDR block could download all rulebook data from the WebSocket, resulting in loss of confidentiality and integrity of the system.</description>
      <guid isPermaLink="false">CVE-2024-1657|2024-06-04T18:00:13.838Z</guid>
      <pubDate>Thu, 25 Apr 2024 16:28:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-0690|2024-05-29T23:26:36.215Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-0690</link>
      <description>An information disclosure flaw was found in ansible-core due to a failure to respect the ANSIBLE_NO_LOG configuration in some scenarios. Information is still included in the output in certain tasks, such as loop items. Depending on the task, this issue may include sensitive information, such as decrypted secret values.</description>
      <guid isPermaLink="false">CVE-2024-0690|2024-05-29T23:26:36.215Z</guid>
      <pubDate>Tue, 06 Feb 2024 12:00:28 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1657|2024-06-12T19:57:40.768Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1657</link>
      <description>A flaw was found in the ansible automation platform. An insecure WebSocket connection was being used in installation from the Ansible rulebook EDA server. An attacker that has access to any machine in the CIDR block could download all rulebook data from the WebSocket, resulting in loss of confidentiality and integrity of the system.</description>
      <guid isPermaLink="false">CVE-2024-1657|2024-06-12T19:57:40.768Z</guid>
      <pubDate>Thu, 25 Apr 2024 16:28:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-06-27T04:40:18.944Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-06-27T04:40:18.944Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-07-08T17:37:04.240Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-07-08T17:37:04.240Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-07-15T20:07:18.698Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-07-15T20:07:18.698Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-07-17T15:48:13.080Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-07-17T15:48:13.080Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Red Hat -- Red Hat Ansible Automation Platform 2.4 for RHEL 8</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/red%20hat/red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208.rss</link>
    <description>The latest CVEs for Red Hat -- Red Hat Ansible Automation Platform 2.4 for RHEL 8</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 21 Aug 2024 13:24:32 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-4380|2024-08-21T03:34:38.403Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-4380</link>
      <description>A logic flaw exists in Ansible Automation platform. Whenever a private project is created with incorrect credentials, they are logged in plaintext. This flaw allows an attacker to retrieve the credentials from the log, resulting in the loss of confidentiality, integrity, and availability.</description>
      <guid isPermaLink="false">CVE-2023-4380|2024-08-21T03:34:38.403Z</guid>
      <pubDate>Wed, 04 Oct 2023 14:24:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1657|2024-08-21T03:58:09.940Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1657</link>
      <description>A flaw was found in the ansible automation platform. An insecure WebSocket connection was being used in installation from the Ansible rulebook EDA server. An attacker that has access to any machine in the CIDR block could download all rulebook data from the WebSocket, resulting in loss of confidentiality and integrity of the system.</description>
      <guid isPermaLink="false">CVE-2024-1657|2024-08-21T03:58:09.940Z</guid>
      <pubDate>Thu, 25 Apr 2024 16:28:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-08-20T16:32:51.075Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-08-20T16:32:51.075Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-08-07T16:29:00.947Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-08-07T16:29:00.947Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1657|2024-08-04T22:09:00.795Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1657</link>
      <description>A flaw was found in the ansible automation platform. An insecure WebSocket connection was being used in installation from the Ansible rulebook EDA server. An attacker that has access to any machine in the CIDR block could download all rulebook data from the WebSocket, resulting in loss of confidentiality and integrity of the system.</description>
      <guid isPermaLink="false">CVE-2024-1657|2024-08-04T22:09:00.795Z</guid>
      <pubDate>Thu, 25 Apr 2024 16:28:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1657|2024-08-04T16:34:57.933Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1657</link>
      <description>A flaw was found in the ansible automation platform. An insecure WebSocket connection was being used in installation from the Ansible rulebook EDA server. An attacker that has access to any machine in the CIDR block could download all rulebook data from the WebSocket, resulting in loss of confidentiality and integrity of the system.</description>
      <guid isPermaLink="false">CVE-2024-1657|2024-08-04T16:34:57.933Z</guid>
      <pubDate>Thu, 25 Apr 2024 16:28:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-07-25T15:32:53.837Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-07-25T15:32:53.837Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-07-23T21:41:58.798Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-07-23T21:41:58.798Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-07-17T15:48:13.080Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-07-17T15:48:13.080Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-07-15T20:07:18.698Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-07-15T20:07:18.698Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-07-08T17:37:04.240Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-07-08T17:37:04.240Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-06-27T04:40:18.944Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-06-27T04:40:18.944Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1657|2024-06-12T19:57:40.768Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1657</link>
      <description>A flaw was found in the ansible automation platform. An insecure WebSocket connection was being used in installation from the Ansible rulebook EDA server. An attacker that has access to any machine in the CIDR block could download all rulebook data from the WebSocket, resulting in loss of confidentiality and integrity of the system.</description>
      <guid isPermaLink="false">CVE-2024-1657|2024-06-12T19:57:40.768Z</guid>
      <pubDate>Thu, 25 Apr 2024 16:28:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1657|2024-06-04T18:00:13.838Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1657</link>
      <description>A flaw was found in the ansible automation platform. An insecure WebSocket connection was being used in installation from the Ansible rulebook EDA server. An attacker that has access to any machine in the CIDR block could download all rulebook data from the WebSocket, resulting in loss of confidentiality and integrity of the system.</description>
      <guid isPermaLink="false">CVE-2024-1657|2024-06-04T18:00:13.838Z</guid>
      <pubDate>Thu, 25 Apr 2024 16:28:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-06-11T20:17:11.716Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-06-11T20:17:11.716Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-06-26T10:41:13.854Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-06-26T10:41:13.854Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-07-15T09:42:59.683Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-07-15T09:42:59.683Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-07-16T21:55:04.068Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-07-16T21:55:04.068Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-07-22T04:18:40.689Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-07-22T04:18:40.689Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-07-25T01:07:42.550Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-07-25T01:07:42.550Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1657|2024-08-01T18:48:21.570Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1657</link>
      <description>A flaw was found in the ansible automation platform. An insecure WebSocket connection was being used in installation from the Ansible rulebook EDA server. An attacker that has access to any machine in the CIDR block could download all rulebook data from the WebSocket, resulting in loss of confidentiality and integrity of the system.</description>
      <guid isPermaLink="false">CVE-2024-1657|2024-08-01T18:48:21.570Z</guid>
      <pubDate>Thu, 25 Apr 2024 16:28:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-08-01T18:40:20.583Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-08-01T18:40:20.583Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-08-02T12:42:40.994Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-08-02T12:42:40.994Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-08-05T15:56:05.864Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-08-05T15:56:05.864Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-08-13T16:23:27.582Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-08-13T16:23:27.582Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-08-19T13:48:27.369Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-08-19T13:48:27.369Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-08-21T03:50:30.691Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-08-21T03:50:30.691Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-1394|2024-08-21T07:19:07.362Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202.4%20for%20rhel%208</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-1394</link>
      <description>A memory leak flaw was found in Golang in the RSA encrypting/decrypting code, which might lead to a resource exhaustion vulnerability using attacker-controlled inputs​. The memory leak happens in github.com/golang-fips/openssl/openssl/rsa.go#L113. The objects leaked are pkey​ and ctx​. That function uses named return parameters to free pkey​ and ctx​ if there is an error initializing the context or setting the different properties. All return statements related to error cases follow the "return nil, nil, fail(...)" pattern, meaning that pkey​ and ctx​ will be nil inside the deferred function that should free them.</description>
      <guid isPermaLink="false">CVE-2024-1394|2024-08-21T07:19:07.362Z</guid>
      <pubDate>Thu, 21 Mar 2024 12:16:38 +0000</pubDate>
    </item>
  </channel>
</rss>

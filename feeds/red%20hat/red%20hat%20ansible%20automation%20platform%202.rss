<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Red Hat -- Red Hat Ansible Automation Platform 2</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/red%20hat/red%20hat%20ansible%20automation%20platform%202.rss</link>
    <description>The latest CVEs for Red Hat -- Red Hat Ansible Automation Platform 2</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 27 Sep 2024 23:22:53 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-50782|2024-09-27T18:37:36.087Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-50782</link>
      <description>A flaw was found in the python-cryptography package. This issue may allow a remote attacker to decrypt captured messages in TLS servers that use RSA key exchanges, which may lead to exposure of confidential or sensitive data.</description>
      <guid isPermaLink="false">CVE-2023-50782|2024-09-27T18:37:36.087Z</guid>
      <pubDate>Mon, 05 Feb 2024 20:45:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-7143|2024-09-17T13:23:37.353Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-7143</link>
      <description>A flaw was found in the Pulp package. When a role-based access control (RBAC) object in Pulp is set to assign permissions on its creation, it uses the `AutoAddObjPermsMixin` (typically the add_roles_for_object_creator method). This method finds the object creator by checking the current authenticated user. For objects that are created within a task, this current user is set by the first user with any permissions on the task object. This means the oldest user with model/domain-level task permissions will always be set as the current user of a task, even if they didn't dispatch the task. Therefore, all objects created in tasks will have their permissions assigned to this oldest user, and the creating user will receive nothing.</description>
      <guid isPermaLink="false">CVE-2024-7143|2024-09-17T13:23:37.353Z</guid>
      <pubDate>Wed, 07 Aug 2024 16:49:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-7143|2024-09-12T22:08:25.964Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-7143</link>
      <description>A flaw was found in the Pulp package. When a role-based access control (RBAC) object in Pulp is set to assign permissions on its creation, it uses the `AutoAddObjPermsMixin` (typically the add_roles_for_object_creator method). This method finds the object creator by checking the current authenticated user. For objects that are created within a task, this current user is set by the first user with any permissions on the task object. This means the oldest user with model/domain-level task permissions will always be set as the current user of a task, even if they didn't dispatch the task. Therefore, all objects created in tasks will have their permissions assigned to this oldest user, and the creating user will receive nothing.</description>
      <guid isPermaLink="false">CVE-2024-7143|2024-09-12T22:08:25.964Z</guid>
      <pubDate>Wed, 07 Aug 2024 16:49:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-7143|2024-08-27T07:40:50.617Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-7143</link>
      <description>A flaw was found in the Pulp package. When a role-based access control (RBAC) object in Pulp is set to assign permissions on its creation, it uses the `AutoAddObjPermsMixin` (typically the add_roles_for_object_creator method). This method finds the object creator by checking the current authenticated user. For objects that are created within a task, this current user is set by the first user with any permissions on the task object. This means the oldest user with model/domain-level task permissions will always be set as the current user of a task, even if they didn't dispatch the task. Therefore, all objects created in tasks will have their permissions assigned to this oldest user, and the creating user will receive nothing.</description>
      <guid isPermaLink="false">CVE-2024-7143|2024-08-27T07:40:50.617Z</guid>
      <pubDate>Wed, 07 Aug 2024 16:49:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-7143|2024-08-19T16:48:51.829Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-7143</link>
      <description>A flaw was found in the Pulp package. When a role-based access control (RBAC) object in Pulp is set to assign permissions on its creation, it uses the `AutoAddObjPermsMixin` (typically the add_roles_for_object_creator method). This method finds the object creator by checking the current authenticated user. For objects that are created within a task, this current user is set by the first user with any permissions on the task object. This means the oldest user with model/domain-level task permissions will always be set as the current user of a task, even if they didn't dispatch the task. Therefore, all objects created in tasks will have their permissions assigned to this oldest user, and the creating user will receive nothing.</description>
      <guid isPermaLink="false">CVE-2024-7143|2024-08-19T16:48:51.829Z</guid>
      <pubDate>Wed, 07 Aug 2024 16:49:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-7143|2024-08-07T16:49:29.842Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-7143</link>
      <description>A flaw was found in the Pulp package. When a role-based access control (RBAC) object in Pulp is set to assign permissions on its creation, it uses the `AutoAddObjPermsMixin` (typically the add_roles_for_object_creator method). This method finds the object creator by checking the current authenticated user. For objects that are created within a task, this current user is set by the first user with any permissions on the task object. This means the oldest user with model/domain-level task permissions will always be set as the current user of a task, even if they didn't dispatch the task. Therefore, all objects created in tasks will have their permissions assigned to this oldest user, and the creating user will receive nothing.</description>
      <guid isPermaLink="false">CVE-2024-7143|2024-08-07T16:49:29.842Z</guid>
      <pubDate>Wed, 07 Aug 2024 16:49:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-7143|2024-08-07T17:28:52.787Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-7143</link>
      <description>A flaw was found in the Pulp package. When a role-based access control (RBAC) object in Pulp is set to assign permissions on its creation, it uses the `AutoAddObjPermsMixin` (typically the add_roles_for_object_creator method). This method finds the object creator by checking the current authenticated user. For objects that are created within a task, this current user is set by the first user with any permissions on the task object. This means the oldest user with model/domain-level task permissions will always be set as the current user of a task, even if they didn't dispatch the task. Therefore, all objects created in tasks will have their permissions assigned to this oldest user, and the creating user will receive nothing.</description>
      <guid isPermaLink="false">CVE-2024-7143|2024-08-07T17:28:52.787Z</guid>
      <pubDate>Wed, 07 Aug 2024 16:49:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-7143|2024-08-20T19:29:22.922Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-7143</link>
      <description>A flaw was found in the Pulp package. When a role-based access control (RBAC) object in Pulp is set to assign permissions on its creation, it uses the `AutoAddObjPermsMixin` (typically the add_roles_for_object_creator method). This method finds the object creator by checking the current authenticated user. For objects that are created within a task, this current user is set by the first user with any permissions on the task object. This means the oldest user with model/domain-level task permissions will always be set as the current user of a task, even if they didn't dispatch the task. Therefore, all objects created in tasks will have their permissions assigned to this oldest user, and the creating user will receive nothing.</description>
      <guid isPermaLink="false">CVE-2024-7143|2024-08-20T19:29:22.922Z</guid>
      <pubDate>Wed, 07 Aug 2024 16:49:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-7143|2024-08-23T09:38:58.853Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-7143</link>
      <description>A flaw was found in the Pulp package. When a role-based access control (RBAC) object in Pulp is set to assign permissions on its creation, it uses the `AutoAddObjPermsMixin` (typically the add_roles_for_object_creator method). This method finds the object creator by checking the current authenticated user. For objects that are created within a task, this current user is set by the first user with any permissions on the task object. This means the oldest user with model/domain-level task permissions will always be set as the current user of a task, even if they didn't dispatch the task. Therefore, all objects created in tasks will have their permissions assigned to this oldest user, and the creating user will receive nothing.</description>
      <guid isPermaLink="false">CVE-2024-7143|2024-08-23T09:38:58.853Z</guid>
      <pubDate>Wed, 07 Aug 2024 16:49:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-7143|2024-09-10T22:53:16.986Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-7143</link>
      <description>A flaw was found in the Pulp package. When a role-based access control (RBAC) object in Pulp is set to assign permissions on its creation, it uses the `AutoAddObjPermsMixin` (typically the add_roles_for_object_creator method). This method finds the object creator by checking the current authenticated user. For objects that are created within a task, this current user is set by the first user with any permissions on the task object. This means the oldest user with model/domain-level task permissions will always be set as the current user of a task, even if they didn't dispatch the task. Therefore, all objects created in tasks will have their permissions assigned to this oldest user, and the creating user will receive nothing.</description>
      <guid isPermaLink="false">CVE-2024-7143|2024-09-10T22:53:16.986Z</guid>
      <pubDate>Wed, 07 Aug 2024 16:49:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-8775|2024-09-17T06:11:01.522Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-8775</link>
      <description>A flaw was found in Ansible, where sensitive information stored in Ansible Vault files can be exposed in plaintext during the execution of a playbook. This occurs when using tasks such as include_vars to load vaulted variables without setting the no_log: true parameter, resulting in sensitive data being printed in the playbook output or logs. This can lead to the unintentional disclosure of secrets like passwords or API keys, compromising security and potentially allowing unauthorized access or actions.</description>
      <guid isPermaLink="false">CVE-2024-8775|2024-09-17T06:11:01.522Z</guid>
      <pubDate>Sat, 14 Sep 2024 02:15:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-8775|2024-09-18T07:43:10.047Z -- red%20hat -- red%20hat%20ansible%20automation%20platform%202</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-8775</link>
      <description>A flaw was found in Ansible, where sensitive information stored in Ansible Vault files can be exposed in plaintext during the execution of a playbook. This occurs when using tasks such as include_vars to load vaulted variables without setting the no_log: true parameter, resulting in sensitive data being printed in the playbook output or logs. This can lead to the unintentional disclosure of secrets like passwords or API keys, compromising security and potentially allowing unauthorized access or actions.</description>
      <guid isPermaLink="false">CVE-2024-8775|2024-09-18T07:43:10.047Z</guid>
      <pubDate>Sat, 14 Sep 2024 02:15:14 +0000</pubDate>
    </item>
  </channel>
</rss>

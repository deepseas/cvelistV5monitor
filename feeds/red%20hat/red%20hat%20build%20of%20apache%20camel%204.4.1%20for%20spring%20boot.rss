<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Red Hat -- Red Hat build of Apache Camel 4.4.1 for Spring Boot</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/red%20hat/red%20hat%20build%20of%20apache%20camel%204.4.1%20for%20spring%20boot.rss</link>
    <description>The latest CVEs for Red Hat -- Red Hat build of Apache Camel 4.4.1 for Spring Boot</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 18 Sep 2024 08:24:21 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-5971|2024-09-18T07:31:48.079Z -- red%20hat -- red%20hat%20build%20of%20apache%20camel%204.4.1%20for%20spring%20boot
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5971</link>
      <description>A vulnerability was found in Undertow, where the chunked response hangs after the body was flushed. The response headers and body were sent but the client would continue waiting as Undertow does not send the expected 0\r\n termination of the chunked response. This results in uncontrolled resource consumption, leaving the server side to a denial of service attack. This happens only with Java 17 TLSv1.3 scenarios.</description>
      <guid isPermaLink="false">CVE-2024-5971|2024-09-18T07:31:48.079Z</guid>
      <pubDate>Mon, 08 Jul 2024 20:51:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5971|2024-09-09T22:31:26.505Z -- red%20hat -- red%20hat%20build%20of%20apache%20camel%204.4.1%20for%20spring%20boot</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5971</link>
      <description>A vulnerability was found in Undertow, where the chunked response hangs after the body was flushed. The response headers and body were sent but the client would continue waiting as Undertow does not send the expected 0\r\n termination of the chunked response. This results in uncontrolled resource consumption, leaving the server side to a denial of service attack. This happens only with Java 17 TLSv1.3 scenarios.</description>
      <guid isPermaLink="false">CVE-2024-5971|2024-09-09T22:31:26.505Z</guid>
      <pubDate>Mon, 08 Jul 2024 20:51:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5971|2024-08-20T19:13:26.005Z -- red%20hat -- red%20hat%20build%20of%20apache%20camel%204.4.1%20for%20spring%20boot</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5971</link>
      <description>A vulnerability was found in Undertow, where the chunked response hangs after the body was flushed. The response headers and body were sent but the client would continue waiting as Undertow does not send the expected 0\r\n termination of the chunked response. This results in uncontrolled resource consumption, leaving the server side to a denial of service attack. This happens only with Java 17 TLSv1.3 scenarios.</description>
      <guid isPermaLink="false">CVE-2024-5971|2024-08-20T19:13:26.005Z</guid>
      <pubDate>Mon, 08 Jul 2024 20:51:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6162|2024-08-20T19:13:27.941Z -- red%20hat -- red%20hat%20build%20of%20apache%20camel%204.4.1%20for%20spring%20boot</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6162</link>
      <description>A vulnerability was found in Undertow, where URL-encoded request paths can be mishandled during concurrent requests on the AJP listener. This issue arises because the same buffer is used to decode the paths for multiple requests simultaneously, leading to incorrect path information being processed. As a result, the server may attempt to access the wrong path, causing errors such as "404 Not Found" or other application failures. This flaw can potentially lead to a denial of service, as legitimate resources become inaccessible due to the path mix-up.</description>
      <guid isPermaLink="false">CVE-2024-6162|2024-08-20T19:13:27.941Z</guid>
      <pubDate>Thu, 20 Jun 2024 14:33:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5971|2024-08-08T21:36:32.800Z -- red%20hat -- red%20hat%20build%20of%20apache%20camel%204.4.1%20for%20spring%20boot</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5971</link>
      <description>A vulnerability was found in Undertow, where the chunked response hangs after the body was flushed. The response headers and body were sent but the client would continue waiting as Undertow does not send the expected 0\r\n termination of the chunked response. This results in uncontrolled resource consumption, leaving the server side to a denial of service attack. This happens only with Java 17 TLSv1.3 scenarios.</description>
      <guid isPermaLink="false">CVE-2024-5971|2024-08-08T21:36:32.800Z</guid>
      <pubDate>Mon, 08 Jul 2024 20:51:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6162|2024-08-05T14:50:16.363Z -- red%20hat -- red%20hat%20build%20of%20apache%20camel%204.4.1%20for%20spring%20boot</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6162</link>
      <description>A vulnerability was found in Undertow, where URL-encoded request paths can be mishandled during concurrent requests on the AJP listener. This issue arises because the same buffer is used to decode the paths for multiple requests simultaneously, leading to incorrect path information being processed. As a result, the server may attempt to access the wrong path, causing errors such as "404 Not Found" or other application failures. This flaw can potentially lead to a denial of service, as legitimate resources become inaccessible due to the path mix-up.</description>
      <guid isPermaLink="false">CVE-2024-6162|2024-08-05T14:50:16.363Z</guid>
      <pubDate>Thu, 20 Jun 2024 14:33:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5971|2024-08-04T16:56:45.172Z -- red%20hat -- red%20hat%20build%20of%20apache%20camel%204.4.1%20for%20spring%20boot</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5971</link>
      <description>A vulnerability was found in Undertow, where the chunked response hangs after the body was flushed. The response headers and body were sent but the client would continue waiting as Undertow does not send the expected 0\r\n termination of the chunked response. This results in uncontrolled resource consumption, leaving the server side to a denial of service attack. This happens only with Java 17 TLSv1.3 scenarios.</description>
      <guid isPermaLink="false">CVE-2024-5971|2024-08-04T16:56:45.172Z</guid>
      <pubDate>Mon, 08 Jul 2024 20:51:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5971|2024-08-01T21:25:03.176Z -- red%20hat -- red%20hat%20build%20of%20apache%20camel%204.4.1%20for%20spring%20boot</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5971</link>
      <description>A vulnerability was found in Undertow, where the chunked response hangs after the body was flushed. The response headers and body were sent but the client would continue waiting as Undertow does not send the expected 0\r\n termination of the chunked response. This results in uncontrolled resource consumption, leaving the server side to a denial of service attack. This happens only with Java 17 TLSv1.3 scenarios.</description>
      <guid isPermaLink="false">CVE-2024-5971|2024-08-01T21:25:03.176Z</guid>
      <pubDate>Mon, 08 Jul 2024 20:51:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6162|2024-08-01T21:33:05.087Z -- red%20hat -- red%20hat%20build%20of%20apache%20camel%204.4.1%20for%20spring%20boot</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6162</link>
      <description>A vulnerability was found in Undertow. URL-encoded request path information can be broken for concurrent requests on ajp-listener, causing the wrong path to be processed and resulting in a possible denial of service.</description>
      <guid isPermaLink="false">CVE-2024-6162|2024-08-01T21:33:05.087Z</guid>
      <pubDate>Thu, 20 Jun 2024 14:33:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5971|2024-07-25T20:55:53.144Z -- red%20hat -- red%20hat%20build%20of%20apache%20camel%204.4.1%20for%20spring%20boot</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5971</link>
      <description>A vulnerability was found in Undertow, where the chunked response hangs after the body was flushed. The response headers and body were sent but the client would continue waiting as Undertow does not send the expected 0\r\n termination of the chunked response. This results in uncontrolled resource consumption, leaving the server side to a denial of service attack. This happens only with Java 17 TLSv1.3 scenarios.</description>
      <guid isPermaLink="false">CVE-2024-5971|2024-07-25T20:55:53.144Z</guid>
      <pubDate>Mon, 08 Jul 2024 20:51:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6162|2024-07-25T20:56:23.173Z -- red%20hat -- red%20hat%20build%20of%20apache%20camel%204.4.1%20for%20spring%20boot</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6162</link>
      <description>A vulnerability was found in Undertow. URL-encoded request path information can be broken for concurrent requests on ajp-listener, causing the wrong path to be processed and resulting in a possible denial of service.</description>
      <guid isPermaLink="false">CVE-2024-6162|2024-07-25T20:56:23.173Z</guid>
      <pubDate>Thu, 20 Jun 2024 14:33:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6162|2024-07-29T12:02:51.193Z -- red%20hat -- red%20hat%20build%20of%20apache%20camel%204.4.1%20for%20spring%20boot</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6162</link>
      <description>A vulnerability was found in Undertow. URL-encoded request path information can be broken for concurrent requests on ajp-listener, causing the wrong path to be processed and resulting in a possible denial of service.</description>
      <guid isPermaLink="false">CVE-2024-6162|2024-07-29T12:02:51.193Z</guid>
      <pubDate>Thu, 20 Jun 2024 14:33:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6162|2024-08-02T16:18:03.720Z -- red%20hat -- red%20hat%20build%20of%20apache%20camel%204.4.1%20for%20spring%20boot</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6162</link>
      <description>A vulnerability was found in Undertow. URL-encoded request path information can be broken for concurrent requests on ajp-listener, causing the wrong path to be processed and resulting in a possible denial of service.</description>
      <guid isPermaLink="false">CVE-2024-6162|2024-08-02T16:18:03.720Z</guid>
      <pubDate>Thu, 20 Jun 2024 14:33:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5971|2024-08-02T16:17:45.789Z -- red%20hat -- red%20hat%20build%20of%20apache%20camel%204.4.1%20for%20spring%20boot</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5971</link>
      <description>A vulnerability was found in Undertow, where the chunked response hangs after the body was flushed. The response headers and body were sent but the client would continue waiting as Undertow does not send the expected 0\r\n termination of the chunked response. This results in uncontrolled resource consumption, leaving the server side to a denial of service attack. This happens only with Java 17 TLSv1.3 scenarios.</description>
      <guid isPermaLink="false">CVE-2024-5971|2024-08-02T16:17:45.789Z</guid>
      <pubDate>Mon, 08 Jul 2024 20:51:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6162|2024-08-04T17:08:57.738Z -- red%20hat -- red%20hat%20build%20of%20apache%20camel%204.4.1%20for%20spring%20boot</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6162</link>
      <description>A vulnerability was found in Undertow. URL-encoded request path information can be broken for concurrent requests on ajp-listener, causing the wrong path to be processed and resulting in a possible denial of service.</description>
      <guid isPermaLink="false">CVE-2024-6162|2024-08-04T17:08:57.738Z</guid>
      <pubDate>Thu, 20 Jun 2024 14:33:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6162|2024-08-05T15:51:35.554Z -- red%20hat -- red%20hat%20build%20of%20apache%20camel%204.4.1%20for%20spring%20boot</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6162</link>
      <description>A vulnerability was found in Undertow, where URL-encoded request paths can be mishandled during concurrent requests on the AJP listener. This issue arises because the same buffer is used to decode the paths for multiple requests simultaneously, leading to incorrect path information being processed. As a result, the server may attempt to access the wrong path, causing errors such as "404 Not Found" or other application failures. This flaw can potentially lead to a denial of service, as legitimate resources become inaccessible due to the path mix-up.</description>
      <guid isPermaLink="false">CVE-2024-6162|2024-08-05T15:51:35.554Z</guid>
      <pubDate>Thu, 20 Jun 2024 14:33:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-6162|2024-08-19T16:46:44.325Z -- red%20hat -- red%20hat%20build%20of%20apache%20camel%204.4.1%20for%20spring%20boot</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-6162</link>
      <description>A vulnerability was found in Undertow, where URL-encoded request paths can be mishandled during concurrent requests on the AJP listener. This issue arises because the same buffer is used to decode the paths for multiple requests simultaneously, leading to incorrect path information being processed. As a result, the server may attempt to access the wrong path, causing errors such as "404 Not Found" or other application failures. This flaw can potentially lead to a denial of service, as legitimate resources become inaccessible due to the path mix-up.</description>
      <guid isPermaLink="false">CVE-2024-6162|2024-08-19T16:46:44.325Z</guid>
      <pubDate>Thu, 20 Jun 2024 14:33:10 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5971|2024-08-19T16:46:39.686Z -- red%20hat -- red%20hat%20build%20of%20apache%20camel%204.4.1%20for%20spring%20boot</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5971</link>
      <description>A vulnerability was found in Undertow, where the chunked response hangs after the body was flushed. The response headers and body were sent but the client would continue waiting as Undertow does not send the expected 0\r\n termination of the chunked response. This results in uncontrolled resource consumption, leaving the server side to a denial of service attack. This happens only with Java 17 TLSv1.3 scenarios.</description>
      <guid isPermaLink="false">CVE-2024-5971|2024-08-19T16:46:39.686Z</guid>
      <pubDate>Mon, 08 Jul 2024 20:51:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5971|2024-08-28T15:02:51.331Z -- red%20hat -- red%20hat%20build%20of%20apache%20camel%204.4.1%20for%20spring%20boot</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5971</link>
      <description>A vulnerability was found in Undertow, where the chunked response hangs after the body was flushed. The response headers and body were sent but the client would continue waiting as Undertow does not send the expected 0\r\n termination of the chunked response. This results in uncontrolled resource consumption, leaving the server side to a denial of service attack. This happens only with Java 17 TLSv1.3 scenarios.</description>
      <guid isPermaLink="false">CVE-2024-5971|2024-08-28T15:02:51.331Z</guid>
      <pubDate>Mon, 08 Jul 2024 20:51:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-5971|2024-09-16T18:31:10.650Z -- red%20hat -- red%20hat%20build%20of%20apache%20camel%204.4.1%20for%20spring%20boot</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5971</link>
      <description>A vulnerability was found in Undertow, where the chunked response hangs after the body was flushed. The response headers and body were sent but the client would continue waiting as Undertow does not send the expected 0\r\n termination of the chunked response. This results in uncontrolled resource consumption, leaving the server side to a denial of service attack. This happens only with Java 17 TLSv1.3 scenarios.</description>
      <guid isPermaLink="false">CVE-2024-5971|2024-09-16T18:31:10.650Z</guid>
      <pubDate>Mon, 08 Jul 2024 20:51:29 +0000</pubDate>
    </item>
  </channel>
</rss>

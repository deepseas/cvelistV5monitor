<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Red Hat -- samba</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/red%20hat/samba.rss</link>
    <description>The latest CVEs for Red Hat -- samba</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Mon, 05 Aug 2024 17:22:57 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2019-19344|2024-08-05T02:16:47.118Z -- red%20hat -- samba
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-19344</link>
      <description>There is a use-after-free issue in all samba 4.9.x versions before 4.9.18, all samba 4.10.x versions before 4.10.12 and all samba 4.11.x versions before 4.11.5, essentially due to a call to realloc() while other local variables still point at the original buffer.</description>
      <guid isPermaLink="false">CVE-2019-19344|2024-08-05T02:16:47.118Z</guid>
      <pubDate>Tue, 21 Jan 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-14907|2024-08-05T00:34:52.321Z -- red%20hat -- samba
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-14907</link>
      <description>All samba versions 4.9.x before 4.9.18, 4.10.x before 4.10.12 and 4.11.x before 4.11.5 have an issue where if it is set with "log level = 3" (or above) then the string obtained from the client, after a failed character conversion, is printed. Such strings can be provided during the NTLMSSP authentication exchange. In the Samba AD DC in particular, this may cause a long-lived process(such as the RPC server) to terminate. (In the file server case, the most likely target, smbd, operates as process-per-client and so a crash there is harmless).</description>
      <guid isPermaLink="false">CVE-2019-14907|2024-08-05T00:34:52.321Z</guid>
      <pubDate>Tue, 21 Jan 2020 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-14870|2024-08-05T00:26:39.129Z -- red%20hat -- samba
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-14870</link>
      <description>All Samba versions 4.x.x before 4.9.17, 4.10.x before 4.10.11 and 4.11.x before 4.11.3 have an issue, where the S4U (MS-SFU) Kerberos delegation model includes a feature allowing for a subset of clients to be opted out of constrained delegation in any way, either S4U2Self or regular Kerberos authentication, by forcing all tickets for these clients to be non-forwardable. In AD this is implemented by a user attribute delegation_not_allowed (aka not-delegated), which translates to disallow-forwardable. However the Samba AD DC does not do that for S4U2Self and does set the forwardable flag even if the impersonated client has the not-delegated flag set.</description>
      <guid isPermaLink="false">CVE-2019-14870|2024-08-05T00:26:39.129Z</guid>
      <pubDate>Tue, 10 Dec 2019 00:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2019-14861|2024-08-05T00:26:39.136Z -- red%20hat -- samba
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2019-14861</link>
      <description>All Samba versions 4.x.x before 4.9.17, 4.10.x before 4.10.11 and 4.11.x before 4.11.3 have an issue, where the (poorly named) dnsserver RPC pipe provides administrative facilities to modify DNS records and zones. Samba, when acting as an AD DC, stores DNS records in LDAP. In AD, the default permissions on the DNS partition allow creation of new records by authenticated users. This is used for example to allow machines to self-register in DNS. If a DNS record was created that case-insensitively matched the name of the zone, the ldb_qsort() and dns_name_compare() routines could be confused into reading memory prior to the list of DNS entries when responding to DnssrvEnumRecords() or DnssrvEnumRecords2() and so following invalid memory as a pointer.</description>
      <guid isPermaLink="false">CVE-2019-14861|2024-08-05T00:26:39.136Z</guid>
      <pubDate>Tue, 10 Dec 2019 22:19:05 +0000</pubDate>
    </item>
  </channel>
</rss>

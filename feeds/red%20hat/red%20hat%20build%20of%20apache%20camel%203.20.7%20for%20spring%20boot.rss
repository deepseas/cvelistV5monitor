<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for Red Hat -- Red Hat build of Apache Camel 3.20.7 for Spring Boot</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/red%20hat/red%20hat%20build%20of%20apache%20camel%203.20.7%20for%20spring%20boot.rss</link>
    <description>The latest CVEs for Red Hat -- Red Hat build of Apache Camel 3.20.7 for Spring Boot</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Thu, 19 Sep 2024 20:23:40 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-5971|2024-09-19T19:51:27.412Z -- red%20hat -- red%20hat%20build%20of%20apache%20camel%203.20.7%20for%20spring%20boot
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-5971</link>
      <description>A vulnerability was found in Undertow, where the chunked response hangs after the body was flushed. The response headers and body were sent but the client would continue waiting as Undertow does not send the expected 0\r\n termination of the chunked response. This results in uncontrolled resource consumption, leaving the server side to a denial of service attack. This happens only with Java 17 TLSv1.3 scenarios.</description>
      <guid isPermaLink="false">CVE-2024-5971|2024-09-19T19:51:27.412Z</guid>
      <pubDate>Mon, 08 Jul 2024 20:51:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-7885|2024-09-19T19:51:30.595Z -- red%20hat -- red%20hat%20build%20of%20apache%20camel%203.20.7%20for%20spring%20boot
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-7885</link>
      <description>A vulnerability was found in Undertow where the ProxyProtocolReadListener reuses the same StringBuilder instance across multiple requests. This issue occurs when the parseProxyProtocolV1 method processes multiple requests on the same HTTP connection. As a result, different requests may share the same StringBuilder instance, potentially leading to information leakage between requests or responses. In some cases, a value from a previous request or response may be erroneously reused, which could lead to unintended data exposure. This issue primarily results in errors and connection termination but creates a risk of data leakage in multi-request environments.</description>
      <guid isPermaLink="false">CVE-2024-7885|2024-09-19T19:51:30.595Z</guid>
      <pubDate>Wed, 21 Aug 2024 14:13:36 +0000</pubDate>
    </item>
  </channel>
</rss>

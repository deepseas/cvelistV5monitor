<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for XjSv -- Basil</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/xjsv/basil.rss</link>
    <description>The latest CVEs for XjSv -- Basil</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Wed, 03 Jul 2024 21:21:41 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2024-39310|2024-07-03T20:45:34.212Z -- xjsv -- basil
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-39310</link>
      <description>The Basil recipe theme for WordPress is vulnerable to Persistent Cross-Site Scripting (XSS) via the `post_title` parameter in versions up to, and including, 2.0.4 due to insufficient input sanitization and output escaping. This vulnerability allows authenticated attackers with contributor-level access and above to inject arbitrary web scripts in pages that will execute whenever a user accesses a compromised page. Because the of the default WordPress validation, it is not possible to insert the payload directly but if the Cooked plugin is installed, it is possible to create a recipe post type (cp_recipe) and inject the payload in the title field. Version 2.0.5 contains a patch for the issue.</description>
      <guid isPermaLink="false">CVE-2024-39310|2024-07-03T20:45:34.212Z</guid>
      <pubDate>Mon, 01 Jul 2024 21:19:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-39310|2024-07-01T21:19:35.867Z -- xjsv -- basil</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-39310</link>
      <description>The Basil recipe theme for WordPress is vulnerable to Persistent Cross-Site Scripting (XSS) via the `post_title` parameter in versions up to, and including, 2.0.4 due to insufficient input sanitization and output escaping. This vulnerability allows authenticated attackers with contributor-level access and above to inject arbitrary web scripts in pages that will execute whenever a user accesses a compromised page. Because the of the default WordPress validation, it is not possible to insert the payload directly but if the Cooked plugin is installed, it is possible to create a recipe post type (cp_recipe) and inject the payload in the title field. Version 2.0.5 contains a patch for the issue.</description>
      <guid isPermaLink="false">CVE-2024-39310|2024-07-01T21:19:35.867Z</guid>
      <pubDate>Mon, 01 Jul 2024 21:19:35 +0000</pubDate>
    </item>
  </channel>
</rss>

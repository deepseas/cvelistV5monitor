<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for aws -- aws-sdk-java</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/aws/aws-sdk-java.rss</link>
    <description>The latest CVEs for aws -- aws-sdk-java</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 18:24:48 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-31159|2024-08-03T07:11:39.642Z -- aws -- aws-sdk-java
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-31159</link>
      <description>The AWS SDK for Java enables Java developers to work with Amazon Web Services. A partial-path traversal issue exists within the `downloadDirectory` method in the AWS S3 TransferManager component of the AWS SDK for Java v1 prior to version 1.12.261. Applications using the SDK control the `destinationDirectory` argument, but S3 object keys are determined by the application that uploaded the objects. The `downloadDirectory` method allows the caller to pass a filesystem object in the object key but contained an issue in the validation logic for the key name. A knowledgeable actor could bypass the validation logic by including a UNIX double-dot in the bucket key. Under certain conditions, this could permit them to retrieve a directory from their S3 bucket that is one level up in the filesystem from their working directory. This issueâ€™s scope is limited to directories whose name prefix matches the destinationDirectory. E.g. for destination directory`/tmp/foo`, the actor can cause a download to `/tmp/foo-bar`, but not `/tmp/bar`. If `com.amazonaws.services.s3.transfer.TransferManager::downloadDirectory` is used to download an untrusted buckets contents, the contents of that bucket can be written outside of the intended destination directory. Version 1.12.261 contains a patch for this issue. As a workaround, when calling `com.amazonaws.services.s3.transfer.TransferManager::downloadDirectory`, pass a `KeyFilter` that forbids `S3ObjectSummary` objects that `getKey` method return a string containing the substring `..` .</description>
      <guid isPermaLink="false">CVE-2022-31159|2024-08-03T07:11:39.642Z</guid>
      <pubDate>Fri, 15 Jul 2022 17:45:12 +0000</pubDate>
    </item>
  </channel>
</rss>

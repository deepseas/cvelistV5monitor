<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for aws -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/aws/all.rss</link>
    <description>The latest CVEs for aws -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 17:22:58 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-35165|2024-08-02T16:23:59.222Z -- aws -- aws-cdk
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-35165</link>
      <description>AWS Cloud Development Kit (AWS CDK) is an open-source software development framework to define cloud infrastructure in code and provision it through AWS CloudFormation. In the packages `aws-cdk-lib` 2.0.0 until 2.80.0 and `@aws-cdk/aws-eks` 1.57.0 until 1.202.0, `eks.Cluster` and `eks.FargateCluster` constructs create two roles, `CreationRole` and `default MastersRole`, that have an overly permissive trust policy. 
 
The first, referred to as the `CreationRole`, is used by lambda handlers to create the cluster and deploy Kubernetes resources (e.g `KubernetesManifest`, `HelmChart`, ...) onto it. Users with CDK version higher or equal to 1.62.0 (including v2 users) may be affected.
 
The second, referred to as the `default MastersRole`, is provisioned only if the `mastersRole` property isn't provided and has permissions to execute `kubectl` commands on the cluster. Users with CDK version higher or equal to 1.57.0 (including v2 users) may be affected.

The issue has been fixed in `@aws-cdk/aws-eks` v1.202.0 and `aws-cdk-lib` v2.80.0. These versions no longer use the account root principal. Instead, they restrict the trust policy to the specific roles of lambda handlers that need it. There is no workaround available for CreationRole. To avoid creating the `default MastersRole`, use the `mastersRole` property to explicitly provide a role.</description>
      <guid isPermaLink="false">CVE-2023-35165|2024-08-02T16:23:59.222Z</guid>
      <pubDate>Fri, 23 Jun 2023 20:32:49 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34073|2024-07-25T15:28:19.993Z -- aws -- sagemaker-python-sdk</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34073</link>
      <description>sagemaker-python-sdk is a library for training and deploying machine learning models on Amazon SageMaker. In affected versions the capture_dependencies function in `sagemaker.serve.save_retrive.version_1_0_0.save.utils` module allows for potentially unsafe Operating System (OS) Command Injection if inappropriate command is passed as the “requirements_path” parameter. This consequently may allow an unprivileged third party to cause remote code execution, denial of service, affecting both confidentiality and integrity. This issue has been addressed in version 2.214.3. Users are advised to upgrade. Users unable to upgrade should not override the “requirements_path” parameter of capture_dependencies function in `sagemaker.serve.save_retrive.version_1_0_0.save.utils`, and instead use the default value.</description>
      <guid isPermaLink="false">CVE-2024-34073|2024-07-25T15:28:19.993Z</guid>
      <pubDate>Fri, 03 May 2024 10:11:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34073|2024-05-03T10:11:12.203Z -- aws -- sagemaker-python-sdk</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-34073</link>
      <description>sagemaker-python-sdk is a library for training and deploying machine learning models on Amazon SageMaker. In affected versions the capture_dependencies function in `sagemaker.serve.save_retrive.version_1_0_0.save.utils` module allows for potentially unsafe Operating System (OS) Command Injection if inappropriate command is passed as the “requirements_path” parameter. This consequently may allow an unprivileged third party to cause remote code execution, denial of service, affecting both confidentiality and integrity. This issue has been addressed in version 2.214.3. Users are advised to upgrade. Users unable to upgrade should not override the “requirements_path” parameter of capture_dependencies function in `sagemaker.serve.save_retrive.version_1_0_0.save.utils`, and instead use the default value.</description>
      <guid isPermaLink="false">CVE-2024-34073|2024-05-03T10:11:12.203Z</guid>
      <pubDate>Fri, 03 May 2024 10:11:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34072|2024-06-04T17:41:18.622Z -- aws -- sagemaker-python-sdk</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-34072</link>
      <description>sagemaker-python-sdk is a library for training and deploying machine learning models on Amazon SageMaker. The sagemaker.base_deserializers.NumpyDeserializer module before v2.218.0 allows potentially unsafe deserialization when untrusted data is passed as pickled object arrays. This consequently may allow an unprivileged third party to cause remote code execution, denial of service, affecting both confidentiality and integrity. Users are advised to upgrade to version 2.218.0. Users unable to upgrade should not pass pickled numpy object arrays which originated from an untrusted source, or that could have been tampered with. Only pass pickled numpy object arrays from trusted sources.</description>
      <guid isPermaLink="false">CVE-2024-34072|2024-06-04T17:41:18.622Z</guid>
      <pubDate>Fri, 03 May 2024 10:13:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-32888|2024-06-04T17:49:45.272Z -- aws -- amazon-redshift-jdbc-driver</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-32888</link>
      <description>The Amazon JDBC Driver for Redshift is a Type 4 JDBC driver that provides database connectivity through the standard JDBC application program interfaces (APIs) available in the Java Platform, Enterprise Editions. Prior to version 2.1.0.28, SQL injection is possible when using the non-default connection property `preferQueryMode=simple` in combination with application code which has a vulnerable SQL that negates a parameter value. There is no vulnerability in the driver when using the default, extended query mode. Note that `preferQueryMode` is not a supported parameter in Redshift JDBC driver, and is inherited code from Postgres JDBC driver. Users who do not override default settings to utilize this unsupported query mode are not affected. This issue is patched in driver version 2.1.0.28. As a workaround, do not use the connection property `preferQueryMode=simple`. (NOTE: Those who do not explicitly specify a query mode use the default of extended query mode and are not affected by this issue.)</description>
      <guid isPermaLink="false">CVE-2024-32888|2024-06-04T17:49:45.272Z</guid>
      <pubDate>Wed, 15 May 2024 02:16:47 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34073|2024-08-02T02:42:59.880Z -- aws -- sagemaker-python-sdk</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34073</link>
      <description>sagemaker-python-sdk is a library for training and deploying machine learning models on Amazon SageMaker. In affected versions the capture_dependencies function in `sagemaker.serve.save_retrive.version_1_0_0.save.utils` module allows for potentially unsafe Operating System (OS) Command Injection if inappropriate command is passed as the “requirements_path” parameter. This consequently may allow an unprivileged third party to cause remote code execution, denial of service, affecting both confidentiality and integrity. This issue has been addressed in version 2.214.3. Users are advised to upgrade. Users unable to upgrade should not override the “requirements_path” parameter of capture_dependencies function in `sagemaker.serve.save_retrive.version_1_0_0.save.utils`, and instead use the default value.</description>
      <guid isPermaLink="false">CVE-2024-34073|2024-08-02T02:42:59.880Z</guid>
      <pubDate>Fri, 03 May 2024 10:11:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-34072|2024-08-02T02:42:59.895Z -- aws -- sagemaker-python-sdk</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-34072</link>
      <description>sagemaker-python-sdk is a library for training and deploying machine learning models on Amazon SageMaker. The sagemaker.base_deserializers.NumpyDeserializer module before v2.218.0 allows potentially unsafe deserialization when untrusted data is passed as pickled object arrays. This consequently may allow an unprivileged third party to cause remote code execution, denial of service, affecting both confidentiality and integrity. Users are advised to upgrade to version 2.218.0. Users unable to upgrade should not pass pickled numpy object arrays which originated from an untrusted source, or that could have been tampered with. Only pass pickled numpy object arrays from trusted sources.</description>
      <guid isPermaLink="false">CVE-2024-34072|2024-08-02T02:42:59.895Z</guid>
      <pubDate>Fri, 03 May 2024 10:13:24 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-32888|2024-08-02T02:20:35.667Z -- aws -- amazon-redshift-jdbc-driver</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-32888</link>
      <description>The Amazon JDBC Driver for Redshift is a Type 4 JDBC driver that provides database connectivity through the standard JDBC application program interfaces (APIs) available in the Java Platform, Enterprise Editions. Prior to version 2.1.0.28, SQL injection is possible when using the non-default connection property `preferQueryMode=simple` in combination with application code which has a vulnerable SQL that negates a parameter value. There is no vulnerability in the driver when using the default, extended query mode. Note that `preferQueryMode` is not a supported parameter in Redshift JDBC driver, and is inherited code from Postgres JDBC driver. Users who do not override default settings to utilize this unsupported query mode are not affected. This issue is patched in driver version 2.1.0.28. As a workaround, do not use the connection property `preferQueryMode=simple`. (NOTE: Those who do not explicitly specify a query mode use the default of extended query mode and are not affected by this issue.)</description>
      <guid isPermaLink="false">CVE-2024-32888|2024-08-02T02:20:35.667Z</guid>
      <pubDate>Wed, 15 May 2024 02:16:47 +0000</pubDate>
    </item>
  </channel>
</rss>

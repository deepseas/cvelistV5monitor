<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for yiisoft -- yii2</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/yiisoft/yii2.rss</link>
    <description>The latest CVEs for yiisoft -- yii2</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 20:23:14 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2020-15148|2024-08-04T13:08:21.907Z -- yiisoft -- yii2
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-15148</link>
      <description>Yii 2 (yiisoft/yii2) before version 2.0.38 is vulnerable to remote code execution if the application calls `unserialize()` on arbitrary user input. This is fixed in version 2.0.38. A possible workaround without upgrading is available in the linked advisory.</description>
      <guid isPermaLink="false">CVE-2020-15148|2024-08-04T13:08:21.907Z</guid>
      <pubDate>Tue, 15 Sep 2020 18:25:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-32877|2024-06-04T17:50:35.809Z -- yiisoft -- yii2</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-32877</link>
      <description>Yii 2 is a PHP application framework. During internal penetration testing of a product based on Yii2, users discovered a Cross-site Scripting (XSS) vulnerability within the framework itself. This issue is relevant for the latest version of Yii2 (2.0.49.3). This issue lies in the mechanism for displaying function argument values in the stack trace. The vulnerability manifests when an argument's value exceeds 32 characters. For convenience, argument values exceeding this limit are truncated and displayed with an added "...". The full argument value becomes visible when hovering over it with the mouse, as it is displayed in the title attribute of a span tag. However, the use of a double quote (") allows an attacker to break out of the title attribute's value context and inject their own attributes into the span tag, including malicious JavaScript code through event handlers such as onmousemove. This vulnerability allows an attacker to execute arbitrary JavaScript code in the security context of the victim's site via a specially crafted link. This could lead to the theft of cookies (including httpOnly cookies, which are accessible on the page), content substitution, or complete takeover of user accounts. This issue has been addressed in version 2.0.50. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-32877|2024-06-04T17:50:35.809Z</guid>
      <pubDate>Thu, 30 May 2024 19:52:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-32877|2024-08-02T02:20:35.655Z -- yiisoft -- yii2</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-32877</link>
      <description>Yii 2 is a PHP application framework. During internal penetration testing of a product based on Yii2, users discovered a Cross-site Scripting (XSS) vulnerability within the framework itself. This issue is relevant for the latest version of Yii2 (2.0.49.3). This issue lies in the mechanism for displaying function argument values in the stack trace. The vulnerability manifests when an argument's value exceeds 32 characters. For convenience, argument values exceeding this limit are truncated and displayed with an added "...". The full argument value becomes visible when hovering over it with the mouse, as it is displayed in the title attribute of a span tag. However, the use of a double quote (") allows an attacker to break out of the title attribute's value context and inject their own attributes into the span tag, including malicious JavaScript code through event handlers such as onmousemove. This vulnerability allows an attacker to execute arbitrary JavaScript code in the security context of the victim's site via a specially crafted link. This could lead to the theft of cookies (including httpOnly cookies, which are accessible on the page), content substitution, or complete takeover of user accounts. This issue has been addressed in version 2.0.50. Users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-32877|2024-08-02T02:20:35.655Z</guid>
      <pubDate>Thu, 30 May 2024 19:52:58 +0000</pubDate>
    </item>
  </channel>
</rss>

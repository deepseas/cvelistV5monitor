<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for hedgedoc -- hedgedoc</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/hedgedoc/hedgedoc.rss</link>
    <description>The latest CVEs for hedgedoc -- hedgedoc</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 19:19:35 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2020-26287|2024-08-04T15:56:03.991Z -- hedgedoc -- hedgedoc
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-26287</link>
      <description>HedgeDoc is a collaborative platform for writing and sharing markdown. In HedgeDoc before version 1.7.1 an attacker can inject arbitrary `script` tags in HedgeDoc notes using mermaid diagrams. Our content security policy prevents loading scripts from most locations, but `www.google-analytics.com` is allowed. Using Google Tag Manger it is possible to inject arbitrary JavaScript and execute it on page load. Depending on the configuration of the instance, the attacker may not need authentication to create or edit notes. The problem is patched in HedgeDoc 1.7.1. As a workaround one can disallow `www.google-analytics.com` in the `Content-Security-Policy` header. Note that other ways to leverage the `script` tag injection might exist.</description>
      <guid isPermaLink="false">CVE-2020-26287|2024-08-04T15:56:03.991Z</guid>
      <pubDate>Mon, 28 Dec 2020 23:30:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-39175|2024-08-04T01:58:18.195Z -- hedgedoc -- hedgedoc
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-39175</link>
      <description>HedgeDoc is a platform to write and share markdown. In versions prior to 1.9.0, an unauthenticated attacker can inject arbitrary JavaScript into the speaker-notes of the slide-mode feature by embedding an iframe hosting the malicious code into the slides or by embedding the HedgeDoc instance into another page. The problem is patched in version 1.9.0. There are no known workarounds aside from upgrading.</description>
      <guid isPermaLink="false">CVE-2021-39175|2024-08-04T01:58:18.195Z</guid>
      <pubDate>Mon, 30 Aug 2021 20:40:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-26286|2024-08-04T15:56:04.326Z -- hedgedoc -- hedgedoc
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-26286</link>
      <description>HedgeDoc is a collaborative platform for writing and sharing markdown. In HedgeDoc before version 1.7.1 an unauthenticated attacker can upload arbitrary files to the upload storage backend including HTML, JS and PHP files. The problem is patched in HedgeDoc 1.7.1. You should however verify that your uploaded file storage only contains files that are allowed, as uploaded files might still be served. As workaround it's possible to block the `/uploadimage` endpoint on your instance using your reverse proxy. And/or restrict MIME-types and file names served from your upload file storage.</description>
      <guid isPermaLink="false">CVE-2020-26286|2024-08-04T15:56:04.326Z</guid>
      <pubDate>Mon, 28 Dec 2020 23:25:13 +0000</pubDate>
    </item>
  </channel>
</rss>

<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for silverstripe -- all</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/silverstripe/all.rss</link>
    <description>The latest CVEs for silverstripe -- all products</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 17:22:39 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-22728|2024-08-02T10:13:50.222Z -- silverstripe -- silverstripe-framework
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-22728</link>
      <description>Silverstripe Framework is the Model-View-Controller framework that powers the Silverstripe content management system. Prior to version 4.12.15, the GridField print view incorrectly validates the permission of DataObjects potentially allowing a content author to view records they are not authorised to access. Users should upgrade to Silverstripe Framework 4.12.15 or above to address the issue.</description>
      <guid isPermaLink="false">CVE-2023-22728|2024-08-02T10:13:50.222Z</guid>
      <pubDate>Wed, 26 Apr 2023 13:57:03 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-22729|2024-08-02T10:13:50.178Z -- silverstripe -- silverstripe-framework
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-22729</link>
      <description>Silverstripe Framework is the Model-View-Controller framework that powers the Silverstripe content management system. Prior to version 4.12.15, an attacker can display a link to a third party website on a login screen by convincing a legitimate content author to follow a specially crafted link. Users should upgrade to Silverstripe Framework 4.12.15 or above to address the issue.</description>
      <guid isPermaLink="false">CVE-2023-22729|2024-08-02T10:13:50.178Z</guid>
      <pubDate>Wed, 26 Apr 2023 14:00:29 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-28104|2024-08-02T12:30:24.268Z -- silverstripe -- silverstripe-graphql
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-28104</link>
      <description>`silverstripe/graphql` serves Silverstripe data as GraphQL representations. In versions 4.2.2 and 4.1.1, an attacker could use a specially crafted graphql query to execute a denial of service attack against a website which has a publicly exposed graphql endpoint. This mostly affects websites with particularly large/complex graphql schemas. Users should upgrade to `silverstripe/graphql` 4.2.3 or 4.1.2 to remedy the vulnerability.</description>
      <guid isPermaLink="false">CVE-2023-28104|2024-08-02T12:30:24.268Z</guid>
      <pubDate>Thu, 16 Mar 2023 15:25:30 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29885|2024-08-02T01:17:58.155Z -- silverstripe -- silverstripe-reports</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-29885</link>
      <description>silverstripe/reports is an API for creating backend reports in the Silverstripe Framework. In affected versions reports can be accessed by their direct URL by any user who has access to view the reports admin section, even if the `canView()` method for that report returns `false`. This issue has been addressed in version 5.2.3. All users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-29885|2024-08-02T01:17:58.155Z</guid>
      <pubDate>Wed, 17 Jul 2024 19:35:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29885|2024-07-17T20:55:01.983Z -- silverstripe -- silverstripe-reports</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-29885</link>
      <description>silverstripe/reports is an API for creating backend reports in the Silverstripe Framework. In affected versions reports can be accessed by their direct URL by any user who has access to view the reports admin section, even if the `canView()` method for that report returns `false`. This issue has been addressed in version 5.2.3. All users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-29885|2024-07-17T20:55:01.983Z</guid>
      <pubDate>Wed, 17 Jul 2024 19:35:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-29885|2024-07-17T19:35:58.914Z -- silverstripe -- silverstripe-reports</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-29885</link>
      <description>silverstripe/reports is an API for creating backend reports in the Silverstripe Framework. In affected versions reports can be accessed by their direct URL by any user who has access to view the reports admin section, even if the `canView()` method for that report returns `false`. This issue has been addressed in version 5.2.3. All users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-29885|2024-07-17T19:35:58.914Z</guid>
      <pubDate>Wed, 17 Jul 2024 19:35:58 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-32981|2024-07-17T19:36:00.563Z -- silverstripe -- silverstripe-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-32981</link>
      <description>Silverstripe framework is the PHP framework forming the base for the Silverstripe CMS. In affected versions a bad actor with access to edit content in the CMS could add send a specifically crafted encoded payload to the server, which could be used to inject a JavaScript payload on the front end of the site. The payload would be sanitised on the client-side, but server-side sanitisation doesn't catch it. The server-side sanitisation logic has been updated to sanitise against this type of attack in version 5.2.16. All users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-32981|2024-07-17T19:36:00.563Z</guid>
      <pubDate>Wed, 17 Jul 2024 19:36:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-32981|2024-07-18T13:18:50.890Z -- silverstripe -- silverstripe-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-32981</link>
      <description>Silverstripe framework is the PHP framework forming the base for the Silverstripe CMS. In affected versions a bad actor with access to edit content in the CMS could add send a specifically crafted encoded payload to the server, which could be used to inject a JavaScript payload on the front end of the site. The payload would be sanitised on the client-side, but server-side sanitisation doesn't catch it. The server-side sanitisation logic has been updated to sanitise against this type of attack in version 5.2.16. All users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-32981|2024-07-18T13:18:50.890Z</guid>
      <pubDate>Wed, 17 Jul 2024 19:36:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-32981|2024-08-02T02:27:53.196Z -- silverstripe -- silverstripe-framework</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-32981</link>
      <description>Silverstripe framework is the PHP framework forming the base for the Silverstripe CMS. In affected versions a bad actor with access to edit content in the CMS could add send a specifically crafted encoded payload to the server, which could be used to inject a JavaScript payload on the front end of the site. The payload would be sanitised on the client-side, but server-side sanitisation doesn't catch it. The server-side sanitisation logic has been updated to sanitise against this type of attack in version 5.2.16. All users are advised to upgrade. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2024-32981|2024-08-02T02:27:53.196Z</guid>
      <pubDate>Wed, 17 Jul 2024 19:36:00 +0000</pubDate>
    </item>
  </channel>
</rss>

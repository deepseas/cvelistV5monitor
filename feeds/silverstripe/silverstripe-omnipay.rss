<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for silverstripe -- silverstripe-omnipay</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/silverstripe/silverstripe-omnipay.rss</link>
    <description>The latest CVEs for silverstripe -- silverstripe-omnipay</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sat, 03 Aug 2024 18:24:38 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2022-29254|2024-08-03T06:17:54.532Z -- silverstripe -- silverstripe-omnipay
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2022-29254</link>
      <description>silverstripe-omnipay is a SilverStripe integration with Omnipay PHP payments library. For a subset of Omnipay gateways (those that use intermediary states like `isNotification()` or `isRedirect()`), if the payment identifier or success URL is exposed it is possible for payments to be prematurely marked as completed without payment being taken. This is mitigated by the fact that most payment gateways hide this information from users, however some issuing banks offer flawed 3DSecure implementations that may inadvertently expose this data. The following versions have been patched to fix this issue: `2.5.2`, `3.0.2`, `3.1.4`, and `3.2.1`. There are no known workarounds for this vulnerability.</description>
      <guid isPermaLink="false">CVE-2022-29254|2024-08-03T06:17:54.532Z</guid>
      <pubDate>Mon, 06 Jun 2022 19:35:10 +0000</pubDate>
    </item>
  </channel>
</rss>

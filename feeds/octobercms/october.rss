<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for octobercms -- october</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/octobercms/october.rss</link>
    <description>The latest CVEs for octobercms -- october</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Sun, 04 Aug 2024 17:21:51 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2020-15128|2024-08-04T13:08:22.316Z -- octobercms -- october
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-15128</link>
      <description>In OctoberCMS before version 1.0.468, encrypted cookie values were not tied to the name of the cookie the value belonged to. This meant that certain classes of attacks that took advantage of other theoretical vulnerabilities in user facing code (nothing exploitable in the core project itself) had a higher chance of succeeding. Specifically, if your usage exposed a way for users to provide unfiltered user input and have it returned to them as an encrypted cookie (ex. storing a user provided search query in a cookie) they could then use the generated cookie in place of other more tightly controlled cookies; or if your usage exposed the plaintext version of an encrypted cookie at any point to the user they could theoretically provide encrypted content from your application back to it as an encrypted cookie and force the framework to decrypt it for them. Issue has been fixed in build 468 (v1.0.468).</description>
      <guid isPermaLink="false">CVE-2020-15128|2024-08-04T13:08:22.316Z</guid>
      <pubDate>Fri, 31 Jul 2020 17:45:20 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-15246|2024-08-04T13:08:23.211Z -- octobercms -- october
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-15246</link>
      <description>October is a free, open-source, self-hosted CMS platform based on the Laravel PHP Framework. In October CMS from version 1.0.421 and before version 1.0.469, an attacker can read local files on an October CMS server via a specially crafted request. Issue has been patched in Build 469 (v1.0.469) and v1.1.0.</description>
      <guid isPermaLink="false">CVE-2020-15246|2024-08-04T13:08:23.211Z</guid>
      <pubDate>Mon, 23 Nov 2020 19:25:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-5295|2024-08-04T08:22:09.093Z -- octobercms -- october
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-5295</link>
      <description>In OctoberCMS (october/october composer package) versions from 1.0.319 and before 1.0.466, an attacker can exploit this vulnerability to read local files of an October CMS server. The vulnerability is only exploitable by an authenticated backend user with the `cms.manage_assets` permission. Issue has been patched in Build 466 (v1.0.466).</description>
      <guid isPermaLink="false">CVE-2020-5295|2024-08-04T08:22:09.093Z</guid>
      <pubDate>Wed, 03 Jun 2020 21:50:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-15247|2024-08-04T13:08:23.232Z -- octobercms -- october
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-15247</link>
      <description>October is a free, open-source, self-hosted CMS platform based on the Laravel PHP Framework. In October CMS from version 1.0.319 and before version 1.0.469, an authenticated backend user with the cms.manage_pages, cms.manage_layouts, or cms.manage_partials permissions who would normally not be permitted to provide PHP code to be executed by the CMS due to cms.enableSafeMode being enabled is able to write specific Twig code to escape the Twig sandbox and execute arbitrary PHP. This is not a problem for anyone that trusts their users with those permissions to normally write &amp; manage PHP within the CMS by not having cms.enableSafeMode enabled, but would be a problem for anyone relying on cms.enableSafeMode to ensure that users with those permissions in production do not have access to write &amp; execute arbitrary PHP. Issue has been patched in Build 469 (v1.0.469) and v1.1.0.</description>
      <guid isPermaLink="false">CVE-2020-15247|2024-08-04T13:08:23.232Z</guid>
      <pubDate>Mon, 23 Nov 2020 19:35:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-5298|2024-08-04T08:22:09.102Z -- octobercms -- october
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-5298</link>
      <description>In OctoberCMS (october/october composer package) versions from 1.0.319 and before 1.0.466, a user with the ability to use the import functionality of the `ImportExportController` behavior can be socially engineered by an attacker to upload a maliciously crafted CSV file which could result in a reflected XSS attack on the user in question Issue has been patched in Build 466 (v1.0.466).</description>
      <guid isPermaLink="false">CVE-2020-5298|2024-08-04T08:22:09.102Z</guid>
      <pubDate>Wed, 03 Jun 2020 21:55:12 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2021-41126|2024-08-04T02:59:31.618Z -- octobercms -- october
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2021-41126</link>
      <description>October is a Content Management System (CMS) and web platform built on the the Laravel PHP Framework. In affected versions administrator accounts which had previously been deleted may still be able to sign in to the backend using October CMS v2.0. The issue has been patched in v2.1.12 of the october/october package. There are no workarounds for this issue and all users should update.</description>
      <guid isPermaLink="false">CVE-2021-41126|2024-08-04T02:59:31.618Z</guid>
      <pubDate>Wed, 06 Oct 2021 17:25:13 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-5299|2024-08-04T08:22:09.179Z -- octobercms -- october
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-5299</link>
      <description>In OctoberCMS (october/october composer package) versions from 1.0.319 and before 1.0.466, any users with the ability to modify any data that could eventually be exported as a CSV file from the `ImportExportController` could potentially introduce a CSV injection into the data to cause the generated CSV export file to be malicious. This requires attackers to achieve the following before a successful attack can be completed: 1. Have found a vulnerability in the victims spreadsheet software of choice. 2. Control data that would potentially be exported through the `ImportExportController` by a theoretical victim. 3. Convince the victim to export above data as a CSV and run it in vulnerable spreadsheet software while also bypassing any sanity checks by said software. Issue has been patched in Build 466 (v1.0.466).</description>
      <guid isPermaLink="false">CVE-2020-5299|2024-08-04T08:22:09.179Z</guid>
      <pubDate>Wed, 03 Jun 2020 22:00:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-5297|2024-08-04T08:22:09.103Z -- octobercms -- october
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-5297</link>
      <description>In OctoberCMS (october/october composer package) versions from 1.0.319 and before 1.0.466, an attacker can exploit this vulnerability to upload jpg, jpeg, bmp, png, webp, gif, ico, css, js, woff, woff2, svg, ttf, eot, json, md, less, sass, scss, xml files to any directory of an October CMS server. The vulnerability is only exploitable by an authenticated backend user with the `cms.manage_assets` permission. Issue has been patched in Build 466 (v1.0.466).</description>
      <guid isPermaLink="false">CVE-2020-5297|2024-08-04T08:22:09.103Z</guid>
      <pubDate>Wed, 03 Jun 2020 21:55:18 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-26231|2024-08-04T15:56:03.105Z -- octobercms -- october
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-26231</link>
      <description>October is a free, open-source, self-hosted CMS platform based on the Laravel PHP Framework. A bypass of CVE-2020-15247 (fixed in 1.0.469 and 1.1.0) was discovered that has the same impact as CVE-2020-15247. An authenticated backend user with the cms.manage_pages, cms.manage_layouts, or cms.manage_partials permissions who would normally not be permitted to provide PHP code to be executed by the CMS due to cms.enableSafeMode being enabled is able to write specific Twig code to escape the Twig sandbox and execute arbitrary PHP. This is not a problem for anyone that trusts their users with those permissions to normally write &amp; manage PHP within the CMS by not having cms.enableSafeMode enabled, but would be a problem for anyone relying on cms.enableSafeMode to ensure that users with those permissions in production do not have access to write &amp; execute arbitrary PHP. Issue has been patched in Build 470 (v1.0.470) and v1.1.1.</description>
      <guid isPermaLink="false">CVE-2020-26231|2024-08-04T15:56:03.105Z</guid>
      <pubDate>Mon, 23 Nov 2020 20:55:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-15249|2024-08-04T13:08:23.190Z -- octobercms -- october
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-15249</link>
      <description>October is a free, open-source, self-hosted CMS platform based on the Laravel PHP Framework. In October CMS from version 1.0.319 and before version 1.0.469, backend users with access to upload files were permitted to upload SVG files without any sanitization applied to the uploaded files. Since SVG files support being parsed as HTML by browsers, this means that they could theoretically upload Javascript that would be executed on a path under the website's domain (i.e. /storage/app/media/evil.svg), but they would have to convince their target to visit that location directly in the target's browser as the backend does not display SVGs inline anywhere, SVGs are only displayed as image resources in the backend and are thus unable to be executed. Issue has been patched in Build 469 (v1.0.469) &amp; v1.1.0.</description>
      <guid isPermaLink="false">CVE-2020-15249|2024-08-04T13:08:23.190Z</guid>
      <pubDate>Mon, 23 Nov 2020 19:50:14 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-5296|2024-08-04T08:22:09.114Z -- octobercms -- october
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-5296</link>
      <description>In OctoberCMS (october/october composer package) versions from 1.0.319 and before 1.0.466, an attacker can exploit this vulnerability to delete arbitrary local files of an October CMS server. The vulnerability is only exploitable by an authenticated backend user with the `cms.manage_assets` permission. Issue has been patched in Build 466 (v1.0.466).</description>
      <guid isPermaLink="false">CVE-2020-5296|2024-08-04T08:22:09.114Z</guid>
      <pubDate>Wed, 03 Jun 2020 21:55:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2020-15248|2024-08-04T13:08:23.177Z -- octobercms -- october
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2020-15248</link>
      <description>October is a free, open-source, self-hosted CMS platform based on the Laravel PHP Framework. In October CMS from version 1.0.319 and before version 1.0.470, backend users with the default "Publisher" system role have access to create &amp; manage users where they can choose which role the new user has. This means that a user with "Publisher" access has the ability to escalate their access to "Developer" access. Issue has been patched in Build 470 (v1.0.470) &amp; v1.1.1.</description>
      <guid isPermaLink="false">CVE-2020-15248|2024-08-04T13:08:23.177Z</guid>
      <pubDate>Mon, 23 Nov 2020 19:40:15 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-25637|2024-06-26T20:53:30.074Z -- octobercms -- october</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-25637</link>
      <description>October is a self-hosted CMS platform based on the Laravel PHP Framework. The X-October-Request-Handler Header does not sanitize the AJAX handler name and allows unescaped HTML to be reflected back. There is no impact since this vulnerability cannot be exploited through normal browser interactions. This unescaped value is only detectable when using a proxy interception tool. This issue has been patched in version 3.5.15.</description>
      <guid isPermaLink="false">CVE-2024-25637|2024-06-26T20:53:30.074Z</guid>
      <pubDate>Wed, 26 Jun 2024 15:55:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-25637|2024-06-26T15:55:35.578Z -- octobercms -- october</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-25637</link>
      <description>October is a self-hosted CMS platform based on the Laravel PHP Framework. The X-October-Request-Handler Header does not sanitize the AJAX handler name and allows unescaped HTML to be reflected back. There is no impact since this vulnerability cannot be exploited through normal browser interactions. This unescaped value is only detectable when using a proxy interception tool. This issue has been patched in version 3.5.15.</description>
      <guid isPermaLink="false">CVE-2024-25637|2024-06-26T15:55:35.578Z</guid>
      <pubDate>Wed, 26 Jun 2024 15:55:35 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-24764|2024-07-02T14:31:21.880Z -- octobercms -- october</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2024-24764</link>
      <description>October is a self-hosted CMS platform based on the Laravel PHP Framework. This issue affects authenticated administrators who may be redirected to an untrusted URL using the PageFinder schema.  The resolver for the page finder link schema (`october://`) allowed external links, therefore allowing an open redirect outside the scope of the active host. This vulnerability has been patched in version 3.5.15.</description>
      <guid isPermaLink="false">CVE-2024-24764|2024-07-02T14:31:21.880Z</guid>
      <pubDate>Wed, 26 Jun 2024 00:02:49 +0000</pubDate>
    </item>
  </channel>
</rss>

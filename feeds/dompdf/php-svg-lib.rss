<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for dompdf -- php-svg-lib</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/dompdf/php-svg-lib.rss</link>
    <description>The latest CVEs for dompdf -- php-svg-lib</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Fri, 02 Aug 2024 23:22:17 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2023-50251|2024-08-02T22:16:46.252Z -- dompdf -- php-svg-lib
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-50251</link>
      <description>php-svg-lib is an SVG file parsing / rendering library. Prior to version 0.5.1, when parsing the attributes passed to a `use` tag inside an svg document, an attacker can cause the system to go to an infinite recursion. Depending on the system configuration and attack pattern this could exhaust the memory available to the executing process and/or to the server itself. An attacker sending multiple request to a system to render the above payload can potentially cause resource exhaustion to the point that the system is unable to handle incoming request. Version 0.5.1 contains a patch for this issue.</description>
      <guid isPermaLink="false">CVE-2023-50251|2024-08-02T22:16:46.252Z</guid>
      <pubDate>Tue, 12 Dec 2023 20:37:23 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2023-50252|2024-08-02T22:16:46.251Z -- dompdf -- php-svg-lib
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2023-50252</link>
      <description>php-svg-lib is an SVG file parsing / rendering library. Prior to version 0.5.1, when handling `&lt;use&gt;` tag that references an `&lt;image&gt;` tag, it merges the attributes from the `&lt;use&gt;` tag to the `&lt;image&gt;` tag. The problem pops up especially when the `href` attribute from the `&lt;use&gt;` tag has not been sanitized. This can lead to an unsafe file read that can cause PHAR Deserialization vulnerability in PHP prior to version 8. Version 0.5.1 contains a patch for this issue. </description>
      <guid isPermaLink="false">CVE-2023-50252|2024-08-02T22:16:46.251Z</guid>
      <pubDate>Tue, 12 Dec 2023 20:39:17 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2024-25117|2024-02-21T16:25:17.970Z -- dompdf -- php-svg-lib</title>
      <link>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-25117</link>
      <description>php-svg-lib is a scalable vector graphics (SVG) file parsing/rendering library. Prior to version 0.5.2, php-svg-lib fails to validate that font-family doesn't contain a PHAR url, which might leads to RCE on PHP &lt; 8.0, and doesn't validate if external references are allowed. This might leads to bypass of restrictions or RCE on projects that are using it, if they do not strictly revalidate the fontName that is passed by php-svg-lib. The `Style::fromAttributes(`), or the `Style::parseCssStyle()` should check the content of the `font-family` and prevents it to use a PHAR url, to avoid passing an invalid and dangerous `fontName` value to other libraries. The same check as done in the `Style::fromStyleSheets` might be reused. Libraries using this library as a dependency might be vulnerable to some bypass of restrictions, or even remote code execution, if they do not double check the value of the `fontName` that is passed by php-svg-lib. Version 0.5.2 contains a fix for this issue.</description>
      <guid isPermaLink="false">CVE-2024-25117|2024-02-21T16:25:17.970Z</guid>
      <pubDate>Wed, 21 Feb 2024 16:25:17 +0000</pubDate>
    </item>
  </channel>
</rss>

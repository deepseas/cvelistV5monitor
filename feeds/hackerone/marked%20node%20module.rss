<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0">
  <channel>
    <title>CVE Feed for HackerOne -- marked node module</title>
    <link>https://raw.githubusercontent.com/deepseas/cvelistV5monitor/main/feeds/hackerone/marked%20node%20module.rss</link>
    <description>The latest CVEs for HackerOne -- marked node module</description>
    <docs>http://www.rssboard.org/rss-specification</docs>
    <generator>python-feedgen</generator>
    <lastBuildDate>Tue, 17 Sep 2024 13:24:35 +0000</lastBuildDate>
    <ttl>60</ttl>
    <item>
      <title>CVE-2017-16114|2024-09-17T03:44:01.567Z -- hackerone -- marked%20node%20module
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2017-16114</link>
      <description>The marked module is vulnerable to a regular expression denial of service. Based on the information published in the public issue, 1k characters can block for around 6 seconds.</description>
      <guid isPermaLink="false">CVE-2017-16114|2024-09-17T03:44:01.567Z</guid>
      <pubDate>Thu, 07 Jun 2018 02:00:00 +0000</pubDate>
    </item>
    <item>
      <title>CVE-2016-10531|2024-09-17T04:28:55.235Z -- hackerone -- marked%20node%20module
</title>
      <link>https://www.cve.org/CVERecord?id=CVE-2016-10531</link>
      <description>marked is an application that is meant to parse and compile markdown. Due to the way that marked 0.3.5 and earlier parses input, specifically HTML entities, it's possible to bypass marked's content injection protection (`sanitize: true`) to inject a `javascript:` URL. This flaw exists because `&amp;#xNNanything;` gets parsed to what it could and leaves the rest behind, resulting in just `anything;` being left.</description>
      <guid isPermaLink="false">CVE-2016-10531|2024-09-17T04:28:55.235Z</guid>
      <pubDate>Thu, 31 May 2018 20:00:00 +0000</pubDate>
    </item>
  </channel>
</rss>
